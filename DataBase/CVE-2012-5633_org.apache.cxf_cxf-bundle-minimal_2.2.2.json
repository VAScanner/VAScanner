{
    "org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)": {
        "isVulRoot": true,
        "vulCaller": [
            "org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.MultipleEndpointObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.ChainInitiationObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ClientImpl:void invoke(org.apache.cxf.endpoint.ClientCallback,org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[])",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.ClientImpl:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.addressing.ContextUtils:void rebaseResponse(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.ws.addressing.AddressingProperties,org.apache.cxf.message.Message)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void resume()",
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doInterceptStartingAfter(org.apache.cxf.message.Message,java.lang.String)",
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doInterceptStartingAt(org.apache.cxf.message.Message,java.lang.String)",
            "org.apache.cxf.jaxws.handler.logical.LogicalHandlerFaultOutInterceptor$LogicalHandlerFaultOutEndingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.handler.logical.LogicalHandlerInInterceptor:void handleAbort(org.apache.cxf.message.Message,org.apache.cxf.staxutils.W3CDOMStreamWriter)"
        ]
    },
    "org.apache.cxf.interceptor.OutgoingChainInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver:void onMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit$InterposedMessageObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream$1:void run()",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponseInternal()",
            "org.apache.cxf.transport.servlet.ServletDestination:void invoke(javax.servlet.ServletConfig,javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void serviceRequest(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.jms.continuations.JMSContinuation:void doResume()",
            "org.apache.cxf.transport.jms.JMSDestination:void onMessage(javax.jms.Message)",
            "org.apache.cxf.transport.jms.JMSConduit:void onMessage(javax.jms.Message)",
            "org.apache.cxf.endpoint.ClientImpl:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.soap.interceptor.CheckFaultInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.xml.interceptor.XMLMessageInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerInterceptor:void handleAbort(org.apache.cxf.binding.soap.SoapMessage,javax.xml.ws.handler.MessageContext)",
            "org.apache.cxf.jaxws.handler.logical.LogicalHandlerOutInterceptor$LogicalHandlerOutEndingInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.MultipleEndpointObserver:void onMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit$InterposedMessageObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream$1:void run()",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponseInternal()",
            "org.apache.cxf.transport.servlet.ServletDestination:void invoke(javax.servlet.ServletConfig,javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void serviceRequest(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.jms.continuations.JMSContinuation:void doResume()",
            "org.apache.cxf.transport.jms.JMSDestination:void onMessage(javax.jms.Message)",
            "org.apache.cxf.transport.jms.JMSConduit:void onMessage(javax.jms.Message)",
            "org.apache.cxf.endpoint.ClientImpl:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.soap.interceptor.CheckFaultInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.xml.interceptor.XMLMessageInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerInterceptor:void handleAbort(org.apache.cxf.binding.soap.SoapMessage,javax.xml.ws.handler.MessageContext)",
            "org.apache.cxf.jaxws.handler.logical.LogicalHandlerOutInterceptor$LogicalHandlerOutEndingInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.ChainInitiationObserver:void onMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit$InterposedMessageObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream$1:void run()",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponseInternal()",
            "org.apache.cxf.transport.servlet.ServletDestination:void invoke(javax.servlet.ServletConfig,javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void serviceRequest(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.jms.continuations.JMSContinuation:void doResume()",
            "org.apache.cxf.transport.jms.JMSDestination:void onMessage(javax.jms.Message)",
            "org.apache.cxf.transport.jms.JMSConduit:void onMessage(javax.jms.Message)",
            "org.apache.cxf.endpoint.ClientImpl:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.soap.interceptor.CheckFaultInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.xml.interceptor.XMLMessageInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerInterceptor:void handleAbort(org.apache.cxf.binding.soap.SoapMessage,javax.xml.ws.handler.MessageContext)",
            "org.apache.cxf.jaxws.handler.logical.LogicalHandlerOutInterceptor$LogicalHandlerOutEndingInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:void invoke(org.apache.cxf.endpoint.ClientCallback,org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:void invoke(org.apache.cxf.endpoint.ClientCallback,javax.xml.namespace.QName,java.lang.Object[])",
            "org.apache.cxf.endpoint.ClientImpl:void invokeWrapped(org.apache.cxf.endpoint.ClientCallback,javax.xml.namespace.QName,java.lang.Object[])",
            "org.apache.cxf.jaxws.JaxWsClientProxy:java.lang.Object invokeAsync(java.lang.reflect.Method,org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[])"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map)",
            "org.apache.cxf.clustering.FailoverTargetSelector:void complete(org.apache.cxf.message.Exchange)"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:void onMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit$InterposedMessageObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream$1:void run()",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponseInternal()",
            "org.apache.cxf.transport.servlet.ServletDestination:void invoke(javax.servlet.ServletConfig,javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void serviceRequest(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.jms.continuations.JMSContinuation:void doResume()",
            "org.apache.cxf.transport.jms.JMSDestination:void onMessage(javax.jms.Message)",
            "org.apache.cxf.transport.jms.JMSConduit:void onMessage(javax.jms.Message)",
            "org.apache.cxf.endpoint.ClientImpl$1$1:void run()",
            "org.apache.cxf.endpoint.ClientImpl:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.Proxy$RMClient:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.soap.interceptor.CheckFaultInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.xml.interceptor.XMLMessageInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerInterceptor:void handleAbort(org.apache.cxf.binding.soap.SoapMessage,javax.xml.ws.handler.MessageContext)",
            "org.apache.cxf.jaxws.handler.logical.LogicalHandlerOutInterceptor$LogicalHandlerOutEndingInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.ws.addressing.ContextUtils:void rebaseResponse(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.ws.addressing.AddressingProperties,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.MAPAggregator:boolean mediate(org.apache.cxf.message.Message,boolean)",
            "org.apache.cxf.ws.addressing.MAPAggregator:void addRoleSpecific(org.apache.cxf.ws.addressing.AddressingPropertiesImpl,org.apache.cxf.message.Message,boolean,boolean)"
        ]
    },
    "org.apache.cxf.phase.PhaseInterceptorChain:void resume()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.OneWayProcessorInterceptor$1:void run()",
            "org.apache.cxf.transport.ChainInitiationObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.addressing.ContextUtils$1:void run()"
        ]
    },
    "org.apache.cxf.phase.PhaseInterceptorChain:boolean doInterceptStartingAfter(org.apache.cxf.message.Message,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerInterceptor:void handleAbort(org.apache.cxf.binding.soap.SoapMessage,javax.xml.ws.handler.MessageContext)"
        ]
    },
    "org.apache.cxf.phase.PhaseInterceptorChain:boolean doInterceptStartingAt(org.apache.cxf.message.Message,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:void onMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxws.handler.logical.LogicalHandlerFaultOutInterceptor$LogicalHandlerFaultOutEndingInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxws.handler.logical.LogicalHandlerInInterceptor:void handleAbort(org.apache.cxf.message.Message,org.apache.cxf.staxutils.W3CDOMStreamWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.handler.logical.LogicalHandlerInInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit$InterposedMessageObserver:void onMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit$InterposedMessageObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream$1:void run()",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponseInternal()",
            "org.apache.cxf.transport.servlet.ServletDestination:void invoke(javax.servlet.ServletConfig,javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void serviceRequest(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.jms.continuations.JMSContinuation:void doResume()",
            "org.apache.cxf.transport.jms.JMSDestination:void onMessage(javax.jms.Message)",
            "org.apache.cxf.transport.jms.JMSConduit:void onMessage(javax.jms.Message)",
            "org.apache.cxf.endpoint.ClientImpl:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.soap.interceptor.CheckFaultInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.xml.interceptor.XMLMessageInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerInterceptor:void handleAbort(org.apache.cxf.binding.soap.SoapMessage,javax.xml.ws.handler.MessageContext)",
            "org.apache.cxf.jaxws.handler.logical.LogicalHandlerOutInterceptor$LogicalHandlerOutEndingInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream$1:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponse()",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl$3:void run()",
            "org.apache.cxf.workqueue.SynchronousExecutor:void execute(java.lang.Runnable)",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl$2:void run()",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void execute(java.lang.Runnable,long)",
            "org.apache.cxf.jaxws.ServiceImpl$1:void execute(java.lang.Runnable)"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponseInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream$1:void run()",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponse()"
        ]
    },
    "org.apache.cxf.transport.servlet.ServletDestination:void invoke(javax.servlet.ServletConfig,javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.servlet.ServletController:void invokeDestination(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.cxf.transport.servlet.ServletDestination)",
            "org.apache.cxf.transport.servlet.ServletDestination:void invoke(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void serviceRequest(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void doService(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.cxf.transport.jms.continuations.JMSContinuation:void doResume()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.jms.continuations.JMSContinuation$1:void run()",
            "org.apache.cxf.transport.jms.continuations.JMSContinuation:void resume()"
        ]
    },
    "org.apache.cxf.transport.jms.JMSDestination:void onMessage(javax.jms.Message)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.jms.JMSConduit:void onMessage(javax.jms.Message)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.binding.soap.interceptor.CheckFaultInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.soap.interceptor.CheckFaultInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.binding.xml.interceptor.XMLMessageInInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxws.handler.soap.SOAPHandlerInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxws.handler.soap.SOAPHandlerInterceptor:void handleAbort(org.apache.cxf.binding.soap.SoapMessage,javax.xml.ws.handler.MessageContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerInterceptor:boolean handleMessageInternal(org.apache.cxf.binding.soap.SoapMessage)"
        ]
    },
    "org.apache.cxf.jaxws.handler.logical.LogicalHandlerOutInterceptor$LogicalHandlerOutEndingInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:void invoke(org.apache.cxf.endpoint.ClientCallback,javax.xml.namespace.QName,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:void invoke(org.apache.cxf.endpoint.ClientCallback,java.lang.String,java.lang.Object[])"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:void invokeWrapped(org.apache.cxf.endpoint.ClientCallback,javax.xml.namespace.QName,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:void invokeWrapped(org.apache.cxf.endpoint.ClientCallback,java.lang.String,java.lang.Object[])",
            "org.apache.cxf.jaxws.DispatchImpl:java.util.concurrent.Future invokeAsync(java.lang.Object,javax.xml.ws.AsyncHandler)"
        ]
    },
    "org.apache.cxf.jaxws.JaxWsClientProxy:java.lang.Object invokeAsync(java.lang.reflect.Method,org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.JaxWsClientProxy:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],org.apache.cxf.message.Exchange)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[])"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.Proxy:java.lang.Object invoke(org.apache.cxf.service.model.OperationInfo,java.lang.Object[],java.util.Map)"
        ]
    },
    "org.apache.cxf.clustering.FailoverTargetSelector:void complete(org.apache.cxf.message.Exchange)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] processResult(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,java.util.Map)",
            "org.apache.cxf.endpoint.ClientImpl:void onMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl$1$1:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl$1:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl$3:void run()",
            "org.apache.cxf.workqueue.SynchronousExecutor:void execute(java.lang.Runnable)",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl$2:void run()",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void execute(java.lang.Runnable,long)",
            "org.apache.cxf.jaxws.ServiceImpl$1:void execute(java.lang.Runnable)"
        ]
    },
    "org.apache.cxf.ws.rm.Proxy$RMClient:void onMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit$InterposedMessageObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream$1:void run()",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponseInternal()",
            "org.apache.cxf.transport.servlet.ServletDestination:void invoke(javax.servlet.ServletConfig,javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void serviceRequest(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.jms.continuations.JMSContinuation:void doResume()",
            "org.apache.cxf.transport.jms.JMSDestination:void onMessage(javax.jms.Message)",
            "org.apache.cxf.transport.jms.JMSConduit:void onMessage(javax.jms.Message)",
            "org.apache.cxf.endpoint.ClientImpl$1$1:void run()",
            "org.apache.cxf.endpoint.ClientImpl:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.soap.interceptor.CheckFaultInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.xml.interceptor.XMLMessageInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerInterceptor:void handleAbort(org.apache.cxf.binding.soap.SoapMessage,javax.xml.ws.handler.MessageContext)",
            "org.apache.cxf.jaxws.handler.logical.LogicalHandlerOutInterceptor$LogicalHandlerOutEndingInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.ws.addressing.MAPAggregator:boolean mediate(org.apache.cxf.message.Message,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.MAPAggregator:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.ws.addressing.MAPAggregator:void addRoleSpecific(org.apache.cxf.ws.addressing.AddressingPropertiesImpl,org.apache.cxf.message.Message,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.MAPAggregator:void aggregate(org.apache.cxf.message.Message,boolean)"
        ]
    },
    "org.apache.cxf.interceptor.OneWayProcessorInterceptor$1:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.OneWayProcessorInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl$3:void run()",
            "org.apache.cxf.workqueue.SynchronousExecutor:void execute(java.lang.Runnable)",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl$2:void run()",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void execute(java.lang.Runnable,long)",
            "org.apache.cxf.jaxws.ServiceImpl$1:void execute(java.lang.Runnable)"
        ]
    },
    "org.apache.cxf.ws.addressing.ContextUtils$1:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.ContextUtils:void rebaseResponse(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.ws.addressing.AddressingProperties,org.apache.cxf.message.Message)",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl$3:void run()",
            "org.apache.cxf.workqueue.SynchronousExecutor:void execute(java.lang.Runnable)",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl$2:void run()",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void execute(java.lang.Runnable,long)",
            "org.apache.cxf.jaxws.ServiceImpl$1:void execute(java.lang.Runnable)"
        ]
    },
    "org.apache.cxf.jaxws.handler.logical.LogicalHandlerInInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponse()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void close()"
        ]
    },
    "org.apache.cxf.workqueue.AutomaticWorkQueueImpl$3:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl$3:void run()",
            "org.apache.cxf.workqueue.SynchronousExecutor:void execute(java.lang.Runnable)",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl$2:void run()",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void execute(java.lang.Runnable,long)",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void schedule(java.lang.Runnable,long)",
            "org.apache.cxf.jaxws.ServiceImpl$1:void execute(java.lang.Runnable)"
        ]
    },
    "org.apache.cxf.workqueue.SynchronousExecutor:void execute(java.lang.Runnable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.ServiceInvokerInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ClientImpl$1:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.addressing.ContextUtils:void rebaseResponse(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.ws.addressing.AddressingProperties,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.Proxy:org.apache.cxf.ws.rm.CreateSequenceResponseType createSequence(org.apache.cxf.ws.addressing.v200408.EndpointReferenceType,org.apache.cxf.ws.addressing.RelatesToType,boolean)",
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl$ResendCandidate:void initiate(boolean)",
            "org.apache.cxf.jaxws.ServiceImpl$1:void execute(java.lang.Runnable)"
        ]
    },
    "org.apache.cxf.workqueue.AutomaticWorkQueueImpl$2:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl$3:void run()",
            "org.apache.cxf.workqueue.SynchronousExecutor:void execute(java.lang.Runnable)",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl$2:void run()",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void execute(java.lang.Runnable)",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void execute(java.lang.Runnable,long)",
            "org.apache.cxf.jaxws.ServiceImpl$1:void execute(java.lang.Runnable)"
        ]
    },
    "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void execute(java.lang.Runnable,long)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxws.ServiceImpl$1:void execute(java.lang.Runnable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.ServiceInvokerInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ClientImpl$1:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.addressing.ContextUtils:void rebaseResponse(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.ws.addressing.AddressingProperties,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.Proxy:org.apache.cxf.ws.rm.CreateSequenceResponseType createSequence(org.apache.cxf.ws.addressing.v200408.EndpointReferenceType,org.apache.cxf.ws.addressing.RelatesToType,boolean)",
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl$ResendCandidate:void initiate(boolean)",
            "org.apache.cxf.jaxws.ServiceImpl$1:void execute(java.lang.Runnable)"
        ]
    },
    "org.apache.cxf.transport.servlet.ServletController:void invokeDestination(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.cxf.transport.servlet.ServletDestination)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.servlet.ServletController:void invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.cxf.transport.servlet.ServletDestination:void invoke(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void doService(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void doService(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPHandler:void handle(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,int)"
        ]
    },
    "org.apache.cxf.transport.jms.continuations.JMSContinuation$1:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl$3:void run()",
            "org.apache.cxf.workqueue.SynchronousExecutor:void execute(java.lang.Runnable)",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl$2:void run()",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void execute(java.lang.Runnable,long)",
            "org.apache.cxf.jaxws.ServiceImpl$1:void execute(java.lang.Runnable)"
        ]
    },
    "org.apache.cxf.transport.jms.continuations.JMSContinuation:void resume()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.binding.soap.interceptor.CheckFaultInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxws.handler.soap.SOAPHandlerInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxws.handler.soap.SOAPHandlerInterceptor:boolean handleMessageInternal(org.apache.cxf.binding.soap.SoapMessage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerInterceptor:boolean access$000(org.apache.cxf.jaxws.handler.soap.SOAPHandlerInterceptor,org.apache.cxf.binding.soap.SoapMessage)"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:void invoke(org.apache.cxf.endpoint.ClientCallback,java.lang.String,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.endpoint.ClientImpl:void invokeWrapped(org.apache.cxf.endpoint.ClientCallback,java.lang.String,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxws.DispatchImpl:java.util.concurrent.Future invokeAsync(java.lang.Object,javax.xml.ws.AsyncHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.DispatchImpl:javax.xml.ws.Response invokeAsync(java.lang.Object)"
        ]
    },
    "org.apache.cxf.jaxws.JaxWsClientProxy:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.CglibProxyHelper$1:java.lang.Object intercept(java.lang.Object,java.lang.reflect.Method,java.lang.Object[],net.sf.cglib.proxy.MethodProxy)"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(javax.xml.namespace.QName,java.lang.Object[])",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invokeWrapped(javax.xml.namespace.QName,java.lang.Object[])",
            "org.apache.cxf.ws.security.trust.STSClient:org.apache.cxf.ws.security.tokenstore.SecurityToken requestSecurityToken(java.lang.String,java.lang.String,java.lang.String,org.apache.cxf.ws.security.tokenstore.SecurityToken)",
            "org.apache.cxf.ws.security.trust.STSClient:boolean validateSecurityToken(org.apache.cxf.ws.security.tokenstore.SecurityToken,java.lang.String)",
            "org.apache.cxf.ws.security.trust.STSClient:void cancelSecurityToken(org.apache.cxf.ws.security.tokenstore.SecurityToken)",
            "org.apache.cxf.frontend.ClientProxy:java.lang.Object invokeSync(java.lang.reflect.Method,org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[])"
        ]
    },
    "org.apache.cxf.ws.rm.Proxy:java.lang.Object invoke(org.apache.cxf.service.model.OperationInfo,java.lang.Object[],java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.Proxy$1:void run()",
            "org.apache.cxf.ws.rm.Proxy:void acknowledge(org.apache.cxf.ws.rm.DestinationSequence)",
            "org.apache.cxf.ws.rm.Proxy:void terminate(org.apache.cxf.ws.rm.SourceSequence)",
            "org.apache.cxf.ws.rm.Proxy:void createSequenceResponse(org.apache.cxf.ws.rm.CreateSequenceResponseType)",
            "org.apache.cxf.ws.rm.Proxy:org.apache.cxf.ws.rm.CreateSequenceResponseType createSequence(org.apache.cxf.ws.addressing.v200408.EndpointReferenceType,org.apache.cxf.ws.addressing.RelatesToType,boolean)",
            "org.apache.cxf.ws.rm.Proxy:void lastMessage(org.apache.cxf.ws.rm.SourceSequence)",
            "org.apache.cxf.ws.rm.Proxy:void ackRequested(org.apache.cxf.ws.rm.SourceSequence)"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] processResult(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.ClientImpl:void onMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl$1:void onMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit$InterposedMessageObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream$1:void run()",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponseInternal()",
            "org.apache.cxf.transport.servlet.ServletDestination:void invoke(javax.servlet.ServletConfig,javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void serviceRequest(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.jms.continuations.JMSContinuation:void doResume()",
            "org.apache.cxf.transport.jms.JMSDestination:void onMessage(javax.jms.Message)",
            "org.apache.cxf.transport.jms.JMSConduit:void onMessage(javax.jms.Message)",
            "org.apache.cxf.endpoint.ClientImpl:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.soap.interceptor.CheckFaultInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.xml.interceptor.XMLMessageInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerInterceptor:void handleAbort(org.apache.cxf.binding.soap.SoapMessage,javax.xml.ws.handler.MessageContext)",
            "org.apache.cxf.jaxws.handler.logical.LogicalHandlerOutInterceptor$LogicalHandlerOutEndingInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.ws.addressing.MAPAggregator:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.ws.addressing.MAPAggregator:void aggregate(org.apache.cxf.message.Message,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.MAPAggregator:boolean mediate(org.apache.cxf.message.Message,boolean)"
        ]
    },
    "org.apache.cxf.interceptor.OneWayProcessorInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.AbstractConduit:void close(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination$WrappedOutputStream:void close()",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void close()",
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl:void resend(org.apache.cxf.transport.Conduit,org.apache.cxf.message.Message)",
            "org.apache.cxf.io.CachedOutputStream:void close()",
            "org.apache.cxf.io.CachedOutputStream:void resetOut(java.io.OutputStream,boolean)",
            "org.apache.cxf.io.CachedOutputStream:void maybeDeleteTempFile(java.lang.Object)",
            "org.apache.cxf.io.AbstractWrappedOutputStream:void close()",
            "org.apache.cxf.io.CacheAndWriteOutputStream:void closeFlowthroughStream()",
            "org.apache.cxf.io.CacheAndWriteOutputStream:void postClose()",
            "org.apache.cxf.aegis.type.mtom.ByteArrayType:void copy(java.io.InputStream,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void schedule(java.lang.Runnable,long)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.interceptor.ServiceInvokerInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.ws.rm.Proxy:org.apache.cxf.ws.rm.CreateSequenceResponseType createSequence(org.apache.cxf.ws.addressing.v200408.EndpointReferenceType,org.apache.cxf.ws.addressing.RelatesToType,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.RMManager:org.apache.cxf.ws.rm.SourceSequence getSequence(org.apache.cxf.ws.rm.Identifier,org.apache.cxf.message.Message,org.apache.cxf.ws.addressing.AddressingProperties)"
        ]
    },
    "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl$ResendCandidate:void initiate(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl$ResendCandidate$1ResendTask:void run()"
        ]
    },
    "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void execute(java.lang.Runnable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.ServiceInvokerInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.OneWayProcessorInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponse()",
            "org.apache.cxf.endpoint.ClientImpl$1:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.addressing.ContextUtils:void rebaseResponse(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.ws.addressing.AddressingProperties,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.Proxy:org.apache.cxf.ws.rm.CreateSequenceResponseType createSequence(org.apache.cxf.ws.addressing.v200408.EndpointReferenceType,org.apache.cxf.ws.addressing.RelatesToType,boolean)",
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl$ResendCandidate:void initiate(boolean)",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void execute(java.lang.Runnable,long)",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void schedule(java.lang.Runnable,long)",
            "org.apache.cxf.jaxws.ServiceImpl$1:void execute(java.lang.Runnable)"
        ]
    },
    "org.apache.cxf.transport.servlet.ServletController:void invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.servlet.AbstractCXFServlet:void invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void doService(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.http_jetty.JettyHTTPHandler:void handle(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxws.handler.soap.SOAPHandlerInterceptor:boolean access$000(org.apache.cxf.jaxws.handler.soap.SOAPHandlerInterceptor,org.apache.cxf.binding.soap.SoapMessage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerInterceptor$1:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)"
        ]
    },
    "org.apache.cxf.jaxws.DispatchImpl:javax.xml.ws.Response invokeAsync(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.util.CglibProxyHelper$1:java.lang.Object intercept(java.lang.Object,java.lang.reflect.Method,java.lang.Object[],net.sf.cglib.proxy.MethodProxy)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(javax.xml.namespace.QName,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(java.lang.String,java.lang.Object[])"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invokeWrapped(javax.xml.namespace.QName,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invokeWrapped(java.lang.String,java.lang.Object[])",
            "org.apache.cxf.jaxws.DispatchImpl:java.lang.Object invoke(java.lang.Object,boolean)"
        ]
    },
    "org.apache.cxf.ws.security.trust.STSClient:org.apache.cxf.ws.security.tokenstore.SecurityToken requestSecurityToken(java.lang.String,java.lang.String,java.lang.String,org.apache.cxf.ws.security.tokenstore.SecurityToken)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.trust.STSClient:org.apache.cxf.ws.security.tokenstore.SecurityToken requestSecurityToken(java.lang.String)",
            "org.apache.cxf.ws.security.trust.STSClient:void renewSecurityToken(org.apache.cxf.ws.security.tokenstore.SecurityToken)"
        ]
    },
    "org.apache.cxf.ws.security.trust.STSClient:boolean validateSecurityToken(org.apache.cxf.ws.security.tokenstore.SecurityToken,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.trust.STSClient:boolean validateSecurityToken(org.apache.cxf.ws.security.tokenstore.SecurityToken)"
        ]
    },
    "org.apache.cxf.ws.security.trust.STSClient:void cancelSecurityToken(org.apache.cxf.ws.security.tokenstore.SecurityToken)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor$SecureConversationCancelInterceptor:void doCancel(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.ws.security.policy.model.SecureConversationToken)"
        ]
    },
    "org.apache.cxf.frontend.ClientProxy:java.lang.Object invokeSync(java.lang.reflect.Method,org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.frontend.ClientProxy:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])",
            "org.apache.cxf.jaxws.JaxWsClientProxy:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])"
        ]
    },
    "org.apache.cxf.ws.rm.Proxy$1:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.Proxy:org.apache.cxf.ws.rm.CreateSequenceResponseType createSequence(org.apache.cxf.ws.addressing.v200408.EndpointReferenceType,org.apache.cxf.ws.addressing.RelatesToType,boolean)",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl$3:void run()",
            "org.apache.cxf.workqueue.SynchronousExecutor:void execute(java.lang.Runnable)",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl$2:void run()",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void execute(java.lang.Runnable,long)",
            "org.apache.cxf.jaxws.ServiceImpl$1:void execute(java.lang.Runnable)"
        ]
    },
    "org.apache.cxf.ws.rm.Proxy:void acknowledge(org.apache.cxf.ws.rm.DestinationSequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.DestinationSequence$DeferredAcknowledgment:void run()",
            "org.apache.cxf.ws.rm.Destination:void ackImmediately(org.apache.cxf.ws.rm.DestinationSequence,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.ws.rm.Proxy:void terminate(org.apache.cxf.ws.rm.SourceSequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.SourceSequence:void setAcknowledged(org.apache.cxf.ws.rm.SequenceAcknowledgement)"
        ]
    },
    "org.apache.cxf.ws.rm.Proxy:void createSequenceResponse(org.apache.cxf.ws.rm.CreateSequenceResponseType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.RMInInterceptor:void handle(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.ws.rm.Proxy:void lastMessage(org.apache.cxf.ws.rm.SourceSequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.RMEndpoint:void shutdown()"
        ]
    },
    "org.apache.cxf.ws.rm.Proxy:void ackRequested(org.apache.cxf.ws.rm.SourceSequence)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.AbstractConduit:void close(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.MessageSenderInterceptor$MessageSenderEndingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.OneWayProcessorInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.TransportURIResolver$1:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.TransportURIResolver:org.xml.sax.InputSource resolve(java.lang.String,java.lang.String)",
            "org.apache.cxf.transport.http.HTTPConduit:void close(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.PreexistingConduitSelector:void complete(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.AbstractConduitSelector:void complete(org.apache.cxf.message.Exchange)"
        ]
    },
    "org.apache.cxf.transport.http.AbstractHTTPDestination$WrappedOutputStream:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.AbstractConduit:void close(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination$WrappedOutputStream:void close()",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void close()",
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl:void resend(org.apache.cxf.transport.Conduit,org.apache.cxf.message.Message)",
            "org.apache.cxf.io.CachedOutputStream:void close()",
            "org.apache.cxf.io.CachedOutputStream:void resetOut(java.io.OutputStream,boolean)",
            "org.apache.cxf.io.CachedOutputStream:void maybeDeleteTempFile(java.lang.Object)",
            "org.apache.cxf.io.AbstractWrappedOutputStream:void close()",
            "org.apache.cxf.io.CacheAndWriteOutputStream:void closeFlowthroughStream()",
            "org.apache.cxf.io.CacheAndWriteOutputStream:void postClose()",
            "org.apache.cxf.aegis.type.mtom.ByteArrayType:void copy(java.io.InputStream,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl:void resend(org.apache.cxf.transport.Conduit,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl:void clientResend(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl:void serverResend(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.io.CachedOutputStream:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.LoggingInInterceptor:void logging(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.AbstractConduit:void close(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination$WrappedOutputStream:void close()",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void close()",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponseInternal()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void doService(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl:void resend(org.apache.cxf.transport.Conduit,org.apache.cxf.message.Message)",
            "org.apache.cxf.databinding.source.XMLStreamDataReader:java.io.InputStream getInputStream(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.databinding.source.NodeDataReader:java.lang.Object read(javax.xml.namespace.QName,org.w3c.dom.Node,java.lang.Class)",
            "org.apache.cxf.io.CachedOutputStream:void close()",
            "org.apache.cxf.io.CachedOutputStream:void resetOut(java.io.OutputStream,boolean)",
            "org.apache.cxf.io.CachedOutputStream:void maybeDeleteTempFile(java.lang.Object)",
            "org.apache.cxf.io.AbstractWrappedOutputStream:void close()",
            "org.apache.cxf.io.CacheAndWriteOutputStream:void closeFlowthroughStream()",
            "org.apache.cxf.io.CacheAndWriteOutputStream:void postClose()",
            "org.apache.cxf.attachment.AttachmentDeserializer:void cache(org.apache.cxf.attachment.DelegatingInputStream,boolean)",
            "org.apache.cxf.aegis.type.mtom.ByteArrayType:void copy(java.io.InputStream,java.io.OutputStream)",
            "org.apache.cxf.jaxws.handler.logical.LogicalMessageImpl:javax.xml.transform.Source handleDispatchProviderCase(javax.xml.ws.Service$Mode)",
            "org.apache.cxf.jaxws.interceptors.MessageModeInInterceptor:void doFromSoapMessage(org.apache.cxf.message.Message,java.lang.Object)"
        ]
    },
    "org.apache.cxf.io.CachedOutputStream:void resetOut(java.io.OutputStream,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.LoggingOutInterceptor$LoggingCallback:void onClose(org.apache.cxf.io.CachedOutputStream)",
            "org.apache.cxf.io.WriteOnCloseOutputStream:void doClose()"
        ]
    },
    "org.apache.cxf.io.CachedOutputStream:void maybeDeleteTempFile(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.io.CachedOutputStream:void close()",
            "org.apache.cxf.io.CachedOutputStream:void access$000(org.apache.cxf.io.CachedOutputStream,java.lang.Object)"
        ]
    },
    "org.apache.cxf.io.AbstractWrappedOutputStream:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.io.AbstractThresholdOutputStream:void close()"
        ]
    },
    "org.apache.cxf.io.CacheAndWriteOutputStream:void closeFlowthroughStream()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void close()"
        ]
    },
    "org.apache.cxf.io.CacheAndWriteOutputStream:void postClose()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.io.CachedOutputStream:void close()",
            "org.apache.cxf.io.CachedOutputStream:void maybeDeleteTempFile(java.lang.Object)"
        ]
    },
    "org.apache.cxf.aegis.type.mtom.ByteArrayType:void copy(java.io.InputStream,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.mtom.ByteArrayType:java.lang.Object readAttachment(org.apache.cxf.message.Attachment,org.apache.cxf.aegis.Context)"
        ]
    },
    "org.apache.cxf.ws.rm.RMManager:org.apache.cxf.ws.rm.SourceSequence getSequence(org.apache.cxf.ws.rm.Identifier,org.apache.cxf.message.Message,org.apache.cxf.ws.addressing.AddressingProperties)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.RMOutInterceptor:void handle(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl$ResendCandidate$1ResendTask:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl$3:void run()",
            "org.apache.cxf.workqueue.SynchronousExecutor:void execute(java.lang.Runnable)",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl$2:void run()",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void execute(java.lang.Runnable,long)",
            "org.apache.cxf.jaxws.ServiceImpl$1:void execute(java.lang.Runnable)"
        ]
    },
    "org.apache.cxf.transport.servlet.AbstractCXFServlet:void invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.servlet.AbstractCXFServlet:void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.servlet.AbstractCXFServlet:void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.servlet.AbstractCXFServlet:void doDelete(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.servlet.AbstractCXFServlet:void doPut(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.cxf.jaxws.handler.soap.SOAPHandlerInterceptor$1:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerInterceptor$1:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(java.lang.String,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invokeWrapped(java.lang.String,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxws.DispatchImpl:java.lang.Object invoke(java.lang.Object,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.DispatchImpl:java.lang.Object invoke(java.lang.Object)",
            "org.apache.cxf.jaxws.DispatchImpl:void invokeOneWay(java.lang.Object)"
        ]
    },
    "org.apache.cxf.ws.security.trust.STSClient:org.apache.cxf.ws.security.tokenstore.SecurityToken requestSecurityToken(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationOutInterceptor:org.apache.cxf.ws.security.tokenstore.SecurityToken issueToken(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.ws.security.policy.model.SecureConversationToken)",
            "org.apache.cxf.ws.security.policy.interceptors.IssuedTokenInterceptorProvider$IssuedTokenOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.trust.STSClient:org.apache.cxf.ws.security.tokenstore.SecurityToken requestSecurityToken()"
        ]
    },
    "org.apache.cxf.ws.security.trust.STSClient:void renewSecurityToken(org.apache.cxf.ws.security.tokenstore.SecurityToken)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationOutInterceptor:void renewToken(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.ws.security.tokenstore.SecurityToken,org.apache.cxf.ws.security.policy.model.SecureConversationToken)"
        ]
    },
    "org.apache.cxf.ws.security.trust.STSClient:boolean validateSecurityToken(org.apache.cxf.ws.security.tokenstore.SecurityToken)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor$SecureConversationCancelInterceptor:void doCancel(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.ws.security.policy.model.SecureConversationToken)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor$SecureConversationCancelInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)"
        ]
    },
    "org.apache.cxf.frontend.ClientProxy:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.CglibProxyHelper$1:java.lang.Object intercept(java.lang.Object,java.lang.reflect.Method,java.lang.Object[],net.sf.cglib.proxy.MethodProxy)"
        ]
    },
    "org.apache.cxf.ws.rm.DestinationSequence$DeferredAcknowledgment:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl$3:void run()",
            "org.apache.cxf.workqueue.SynchronousExecutor:void execute(java.lang.Runnable)",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl$2:void run()",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void execute(java.lang.Runnable,long)",
            "org.apache.cxf.jaxws.ServiceImpl$1:void execute(java.lang.Runnable)"
        ]
    },
    "org.apache.cxf.ws.rm.Destination:void ackImmediately(org.apache.cxf.ws.rm.DestinationSequence,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.Destination:void acknowledge(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.Destination:void ackRequested(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.ws.rm.SourceSequence:void setAcknowledged(org.apache.cxf.ws.rm.SequenceAcknowledgement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.RMInInterceptor:void processAcknowledgments(org.apache.cxf.ws.rm.Source,org.apache.cxf.ws.rm.RMProperties)"
        ]
    },
    "org.apache.cxf.ws.rm.RMInInterceptor:void handle(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.AbstractRMInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.ws.rm.RMEndpoint:void shutdown()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.RMManager:void shutdown()",
            "org.apache.cxf.ws.rm.RMManager:void shutdownReliableEndpoint(org.apache.cxf.endpoint.Endpoint)"
        ]
    },
    "org.apache.cxf.interceptor.MessageSenderInterceptor$MessageSenderEndingInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.TransportURIResolver$1:void onMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit$InterposedMessageObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream$1:void run()",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponseInternal()",
            "org.apache.cxf.transport.servlet.ServletDestination:void invoke(javax.servlet.ServletConfig,javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void serviceRequest(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.jms.continuations.JMSContinuation:void doResume()",
            "org.apache.cxf.transport.jms.JMSDestination:void onMessage(javax.jms.Message)",
            "org.apache.cxf.transport.jms.JMSConduit:void onMessage(javax.jms.Message)",
            "org.apache.cxf.endpoint.ClientImpl:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.soap.interceptor.CheckFaultInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.xml.interceptor.XMLMessageInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerInterceptor:void handleAbort(org.apache.cxf.binding.soap.SoapMessage,javax.xml.ws.handler.MessageContext)",
            "org.apache.cxf.jaxws.handler.logical.LogicalHandlerOutInterceptor$LogicalHandlerOutEndingInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.TransportURIResolver:org.xml.sax.InputSource resolve(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.attachment.reference.RemoteReferenceResolver:org.apache.neethi.Policy resolveReference(java.lang.String)",
            "org.apache.cxf.ws.policy.attachment.external.Wsdl11XPointerDomainExpression:void evaluate(java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils$SchemaLSResourceResolver:org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.catalog.CatalogXmlSchemaURIResolver:org.xml.sax.InputSource resolveEntity(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.catalog.CatalogWSDLLocator:org.xml.sax.InputSource getBaseInputSource()",
            "org.apache.cxf.catalog.CatalogWSDLLocator:org.xml.sax.InputSource getImportInputSource(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit:void close(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.MessageSenderInterceptor$MessageSenderEndingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.OneWayProcessorInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.TransportURIResolver$1:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.TransportURIResolver:org.xml.sax.InputSource resolve(java.lang.String,java.lang.String)",
            "org.apache.cxf.endpoint.PreexistingConduitSelector:void complete(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.AbstractConduitSelector:void complete(org.apache.cxf.message.Exchange)"
        ]
    },
    "org.apache.cxf.endpoint.PreexistingConduitSelector:void complete(org.apache.cxf.message.Exchange)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] processResult(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,java.util.Map)",
            "org.apache.cxf.endpoint.ClientImpl:void onMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.endpoint.AbstractConduitSelector:void complete(org.apache.cxf.message.Exchange)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] processResult(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,java.util.Map)",
            "org.apache.cxf.endpoint.ClientImpl:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.clustering.FailoverTargetSelector:void complete(org.apache.cxf.message.Exchange)"
        ]
    },
    "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl:void clientResend(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl:void access$400(org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl:void serverResend(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl:void access$500(org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.LoggingInInterceptor:void logging(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.LoggingInInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.databinding.source.XMLStreamDataReader:java.io.InputStream getInputStream(javax.xml.stream.XMLStreamReader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.source.XMLStreamDataReader:java.lang.Object read(javax.xml.namespace.QName,javax.xml.stream.XMLStreamReader,java.lang.Class)"
        ]
    },
    "org.apache.cxf.databinding.source.NodeDataReader:java.lang.Object read(javax.xml.namespace.QName,org.w3c.dom.Node,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.source.NodeDataReader:java.lang.Object read(javax.xml.namespace.QName,java.lang.Object,java.lang.Class)"
        ]
    },
    "org.apache.cxf.attachment.AttachmentDeserializer:void cache(org.apache.cxf.attachment.DelegatingInputStream,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.AttachmentDeserializer:void cacheStreamedAttachments()"
        ]
    },
    "org.apache.cxf.jaxws.handler.logical.LogicalMessageImpl:javax.xml.transform.Source handleDispatchProviderCase(javax.xml.ws.Service$Mode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.handler.logical.LogicalMessageImpl:javax.xml.transform.Source getPayload()"
        ]
    },
    "org.apache.cxf.jaxws.interceptors.MessageModeInInterceptor:void doFromSoapMessage(org.apache.cxf.message.Message,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.interceptors.MessageModeInInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.LoggingOutInterceptor$LoggingCallback:void onClose(org.apache.cxf.io.CachedOutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.io.CachedOutputStream:void lockOutputStream()",
            "org.apache.cxf.io.CachedOutputStream:void close()"
        ]
    },
    "org.apache.cxf.io.WriteOnCloseOutputStream:void doClose()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.io.CachedOutputStream:void lockOutputStream()",
            "org.apache.cxf.io.CachedOutputStream:void close()"
        ]
    },
    "org.apache.cxf.io.CachedOutputStream:void access$000(org.apache.cxf.io.CachedOutputStream,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.io.CachedOutputStream$1:void close()"
        ]
    },
    "org.apache.cxf.io.AbstractThresholdOutputStream:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.AbstractConduit:void close(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination$WrappedOutputStream:void close()",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void close()",
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl:void resend(org.apache.cxf.transport.Conduit,org.apache.cxf.message.Message)",
            "org.apache.cxf.io.CachedOutputStream:void close()",
            "org.apache.cxf.io.CachedOutputStream:void resetOut(java.io.OutputStream,boolean)",
            "org.apache.cxf.io.CachedOutputStream:void maybeDeleteTempFile(java.lang.Object)",
            "org.apache.cxf.io.AbstractWrappedOutputStream:void close()",
            "org.apache.cxf.io.CacheAndWriteOutputStream:void closeFlowthroughStream()",
            "org.apache.cxf.io.CacheAndWriteOutputStream:void postClose()",
            "org.apache.cxf.aegis.type.mtom.ByteArrayType:void copy(java.io.InputStream,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.aegis.type.mtom.ByteArrayType:java.lang.Object readAttachment(org.apache.cxf.message.Attachment,org.apache.cxf.aegis.Context)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.mtom.AbstractXOPType:java.lang.Object readInclude(java.lang.String,org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)"
        ]
    },
    "org.apache.cxf.ws.rm.RMOutInterceptor:void handle(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.AbstractRMInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.servlet.AbstractCXFServlet:void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.servlet.AbstractCXFServlet:void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.servlet.AbstractCXFServlet:void doDelete(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.servlet.AbstractCXFServlet:void doPut(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxws.handler.soap.SOAPHandlerInterceptor$1:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxws.DispatchImpl:java.lang.Object invoke(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxws.DispatchImpl:void invokeOneWay(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.security.policy.interceptors.SecureConversationOutInterceptor:org.apache.cxf.ws.security.tokenstore.SecurityToken issueToken(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.ws.security.policy.model.SecureConversationToken)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationOutInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)"
        ]
    },
    "org.apache.cxf.ws.security.policy.interceptors.IssuedTokenInterceptorProvider$IssuedTokenOutInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.ws.security.trust.STSClient:org.apache.cxf.ws.security.tokenstore.SecurityToken requestSecurityToken()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.policy.interceptors.IssuedTokenInterceptorProvider$IssuedTokenOutInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.ws.security.policy.interceptors.SecureConversationOutInterceptor:void renewToken(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.ws.security.tokenstore.SecurityToken,org.apache.cxf.ws.security.policy.model.SecureConversationToken)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationOutInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)"
        ]
    },
    "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor$SecureConversationCancelInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor$SecureConversationCancelInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.ws.rm.Destination:void acknowledge(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.RMInInterceptor:void processSequence(org.apache.cxf.ws.rm.Destination,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.ws.rm.Destination:void ackRequested(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.RMInInterceptor:void processAcknowledgmentRequests(org.apache.cxf.ws.rm.Destination,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.ws.rm.RMInInterceptor:void processAcknowledgments(org.apache.cxf.ws.rm.Source,org.apache.cxf.ws.rm.RMProperties)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.RMInInterceptor:void handle(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.ws.rm.AbstractRMInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.ws.rm.RMManager:void shutdown()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.rm.RMManager:void shutdownReliableEndpoint(org.apache.cxf.endpoint.Endpoint)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.RMManager:void stopServer(org.apache.cxf.endpoint.Server)",
            "org.apache.cxf.ws.rm.RMManager:void clientDestroyed(org.apache.cxf.endpoint.Client)"
        ]
    },
    "org.apache.cxf.ws.policy.attachment.reference.RemoteReferenceResolver:org.apache.neethi.Policy resolveReference(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.WSPolicyFeature:org.apache.neethi.Policy resolveExternal(org.apache.neethi.PolicyReference,java.lang.String,org.apache.cxf.Bus)",
            "org.apache.cxf.ws.policy.attachment.AbstractPolicyProvider:org.apache.neethi.Policy resolveExternal(org.apache.neethi.PolicyReference,java.lang.String)"
        ]
    },
    "org.apache.cxf.ws.policy.attachment.external.Wsdl11XPointerDomainExpression:void evaluate(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.wsdl.EndpointReferenceUtils$SchemaLSResourceResolver:org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.catalog.CatalogXmlSchemaURIResolver:org.xml.sax.InputSource resolveEntity(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.catalog.CatalogWSDLLocator:org.xml.sax.InputSource getBaseInputSource()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.catalog.CatalogWSDLLocator:java.lang.String getBaseURI()",
            "org.apache.cxf.wsdl11.AbstractWrapperWSDLLocator:org.xml.sax.InputSource getBaseInputSource()"
        ]
    },
    "org.apache.cxf.catalog.CatalogWSDLLocator:org.xml.sax.InputSource getImportInputSource(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.AbstractWrapperWSDLLocator:org.xml.sax.InputSource getImportInputSource(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl:void access$400(org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl$3:void resend(org.apache.cxf.message.Message,boolean)"
        ]
    },
    "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl:void access$500(org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl$3:void resend(org.apache.cxf.message.Message,boolean)"
        ]
    },
    "org.apache.cxf.interceptor.LoggingInInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.databinding.source.XMLStreamDataReader:java.lang.Object read(javax.xml.namespace.QName,javax.xml.stream.XMLStreamReader,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.source.XMLStreamDataReader:java.lang.Object read(org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.databinding.source.XMLStreamDataReader:java.lang.Object read(javax.xml.namespace.QName,java.lang.Object,java.lang.Class)"
        ]
    },
    "org.apache.cxf.databinding.source.NodeDataReader:java.lang.Object read(javax.xml.namespace.QName,java.lang.Object,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.attachment.AttachmentDeserializer:void cacheStreamedAttachments()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.AttachmentDeserializer:org.apache.cxf.attachment.AttachmentImpl readNext()"
        ]
    },
    "org.apache.cxf.jaxws.handler.logical.LogicalMessageImpl:javax.xml.transform.Source getPayload()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.handler.logical.LogicalHandlerInInterceptor:javax.xml.namespace.QName getOpQName(org.apache.cxf.message.Exchange,java.lang.Object)",
            "org.apache.cxf.jaxws.handler.logical.LogicalMessageImpl:java.lang.Object getPayload(javax.xml.bind.JAXBContext)"
        ]
    },
    "org.apache.cxf.jaxws.interceptors.MessageModeInInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.io.CachedOutputStream:void lockOutputStream()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.LoggingOutInterceptor$LoggingCallback:void onClose(org.apache.cxf.io.CachedOutputStream)",
            "org.apache.cxf.attachment.AttachmentDataSource:void <init>(java.lang.String,java.io.InputStream)"
        ]
    },
    "org.apache.cxf.io.CachedOutputStream$1:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.FileUtils:java.lang.String getStringFromFile(java.io.File)",
            "org.apache.cxf.helpers.IOUtils:int copyAndCloseInput(java.io.InputStream,java.io.OutputStream)",
            "org.apache.cxf.helpers.IOUtils:int copyAndCloseInput(java.io.InputStream,java.io.OutputStream,int)",
            "org.apache.cxf.helpers.IOUtils:java.lang.String toString(java.io.InputStream,int)",
            "org.apache.cxf.helpers.IOUtils:java.lang.String readStringFromStream(java.io.InputStream)",
            "org.apache.cxf.helpers.IOUtils:java.io.ByteArrayInputStream loadIntoBAIS(java.io.InputStream)",
            "org.apache.cxf.helpers.IOUtils:byte[] readBytesFromStream(java.io.InputStream)",
            "org.apache.cxf.common.util.ClassReader:byte[] getBytes(java.lang.Class)",
            "org.apache.cxf.common.util.PropertiesLoaderUtils:java.util.Properties loadAllProperties(java.lang.String,java.lang.ClassLoader)",
            "org.apache.cxf.resource.ExtendedURIResolver:void close()",
            "org.apache.cxf.resource.URIResolver:void tryRemote(java.lang.String)",
            "org.apache.cxf.version.Version:void loadProperties()",
            "org.apache.cxf.jaxb.JAXBDataBinding:void scanPackages(java.util.Set)",
            "org.apache.cxf.jaxb.attachment.JAXBAttachmentUnmarshaller:byte[] getAttachmentAsByteArray(java.lang.String)",
            "org.apache.cxf.interceptor.LoggingInInterceptor:void logging(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.AbstractConduit:void close(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponseInternal()",
            "org.apache.cxf.transport.AbstractDestination$1:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.https.SSLUtils:byte[] loadClientCredential(java.lang.String)",
            "org.apache.cxf.transport.https.SSLUtils:byte[] loadCACert(java.lang.String)",
            "org.apache.cxf.ws.security.trust.STSClient:org.apache.ws.security.components.crypto.Crypto createCrypto(boolean)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:org.apache.ws.security.components.crypto.Crypto getCrypto(org.apache.cxf.ws.security.policy.model.TokenWrapper,java.lang.String,java.lang.String)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:java.util.Properties getProps(java.lang.Object,org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.validation.Schema createSchema(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.io.CachedOutputStream:void writeCacheTo(java.lang.StringBuilder,int)",
            "org.apache.cxf.io.CachedOutputStream:void writeCacheTo(java.lang.StringBuilder)",
            "org.apache.cxf.tools.common.AbstractCXFToolContainer:java.util.Properties loadProperties(java.io.InputStream)",
            "org.apache.cxf.tools.common.AbstractCXFToolContainer:java.util.Properties loadProperties(java.lang.String)",
            "org.apache.cxf.tools.common.CommandInterfaceUtils:void commandCommonMain()",
            "org.apache.cxf.tools.common.ClassUtils:void copyXmlFile(java.io.File,java.io.File)",
            "org.apache.cxf.tools.common.ProcessorTestBase:java.lang.String getStringFromFile(java.io.File)",
            "org.apache.cxf.catalog.CatalogWSDLLocator:java.lang.String getBaseURI()",
            "org.apache.cxf.wsdl11.AbstractWrapperWSDLLocator:void close()",
            "org.apache.cxf.wsdl11.AbstractWrapperWSDLLocator:java.lang.String getBaseURI()",
            "org.apache.cxf.bus.spring.BusApplicationContext:org.springframework.core.io.Resource[] getConfigResources()",
            "org.apache.cxf.attachment.AttachmentDeserializer:void cache(org.apache.cxf.attachment.DelegatingInputStream,boolean)",
            "org.apache.cxf.attachment.DelegatingInputStream:void close()",
            "org.apache.cxf.aegis.type.mtom.ByteArrayType:java.lang.Object readAttachment(org.apache.cxf.message.Attachment,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.mtom.ByteArrayType:void copy(java.io.InputStream,java.io.OutputStream)",
            "org.apache.cxf.aegis.type.XMLTypeCreator:void <clinit>()",
            "org.apache.cxf.jaxws.handler.logical.LogicalMessageImpl:javax.xml.transform.Source handleDispatchProviderCase(javax.xml.ws.Service$Mode)"
        ]
    },
    "org.apache.cxf.aegis.type.mtom.AbstractXOPType:java.lang.Object readInclude(java.lang.String,org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.mtom.AbstractXOPType:java.lang.Object readMtoM(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)"
        ]
    },
    "org.apache.cxf.ws.security.policy.interceptors.SecureConversationOutInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationOutInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor$SecureConversationCancelInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.ws.rm.RMInInterceptor:void processSequence(org.apache.cxf.ws.rm.Destination,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.RMInInterceptor:void handle(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.ws.rm.RMInInterceptor:void processAcknowledgmentRequests(org.apache.cxf.ws.rm.Destination,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.RMInInterceptor:void handle(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.ws.rm.RMManager:void stopServer(org.apache.cxf.endpoint.Server)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ServerLifeCycleManagerImpl:void stopServer(org.apache.cxf.endpoint.Server)"
        ]
    },
    "org.apache.cxf.ws.rm.RMManager:void clientDestroyed(org.apache.cxf.endpoint.Client)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientLifeCycleManagerImpl:void clientDestroyed(org.apache.cxf.endpoint.Client)"
        ]
    },
    "org.apache.cxf.ws.policy.WSPolicyFeature:org.apache.neethi.Policy resolveExternal(org.apache.neethi.PolicyReference,java.lang.String,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.WSPolicyFeature:org.apache.neethi.Policy resolveReference(org.apache.neethi.PolicyReference,org.w3c.dom.Element,org.apache.cxf.ws.policy.PolicyBuilder,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.ws.policy.attachment.AbstractPolicyProvider:org.apache.neethi.Policy resolveExternal(org.apache.neethi.PolicyReference,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.attachment.wsdl11.Wsdl11AttachmentPolicyProvider:org.apache.neethi.Policy resolveReference(org.apache.neethi.PolicyReference,org.apache.cxf.service.model.DescriptionInfo)",
            "org.apache.cxf.ws.policy.attachment.external.ExternalAttachmentProvider:org.apache.neethi.Policy resolveReference(org.apache.neethi.PolicyReference,org.w3c.dom.Document)"
        ]
    },
    "org.apache.cxf.catalog.CatalogWSDLLocator:java.lang.String getBaseURI()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.wsdl11.AbstractWrapperWSDLLocator:org.xml.sax.InputSource getBaseInputSource()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.WSDLQueryHandler:void writeResponse(java.lang.String,java.lang.String,org.apache.cxf.service.model.EndpointInfo,java.io.OutputStream)",
            "org.apache.cxf.wsdl11.AbstractWrapperWSDLLocator:org.xml.sax.InputSource getBaseInputSource()",
            "org.apache.cxf.wsdl11.AbstractWrapperWSDLLocator:java.lang.String getBaseURI()"
        ]
    },
    "org.apache.cxf.wsdl11.AbstractWrapperWSDLLocator:org.xml.sax.InputSource getImportInputSource(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.AbstractWrapperWSDLLocator:org.xml.sax.InputSource getImportInputSource(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl$3:void resend(org.apache.cxf.message.Message,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl$ResendCandidate:void run()"
        ]
    },
    "org.apache.cxf.databinding.source.XMLStreamDataReader:java.lang.Object read(org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamReader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.source.XMLStreamDataReader:java.lang.Object read(org.apache.cxf.service.model.MessagePartInfo,java.lang.Object)"
        ]
    },
    "org.apache.cxf.databinding.source.XMLStreamDataReader:java.lang.Object read(javax.xml.namespace.QName,java.lang.Object,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.attachment.AttachmentDeserializer:org.apache.cxf.attachment.AttachmentImpl readNext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.LazyAttachmentCollection$1:boolean hasNext()",
            "org.apache.cxf.attachment.LazyAttachmentCollection:void loadAll()"
        ]
    },
    "org.apache.cxf.jaxws.handler.logical.LogicalHandlerInInterceptor:javax.xml.namespace.QName getOpQName(org.apache.cxf.message.Exchange,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.handler.AbstractJAXWSHandlerInterceptor:void setupBindingOperationInfo(org.apache.cxf.message.Exchange,java.lang.Object)"
        ]
    },
    "org.apache.cxf.jaxws.handler.logical.LogicalMessageImpl:java.lang.Object getPayload(javax.xml.bind.JAXBContext)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.attachment.AttachmentDataSource:void <init>(java.lang.String,java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.AttachmentUtil:org.apache.cxf.message.Attachment createAttachment(java.io.InputStream,javax.mail.internet.InternetHeaders)"
        ]
    },
    "org.apache.cxf.helpers.FileUtils:java.lang.String getStringFromFile(java.io.File)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.tools.common.ProcessorTestBase:void assertFileEquals(java.io.File,java.io.File)"
        ]
    },
    "org.apache.cxf.helpers.IOUtils:int copyAndCloseInput(java.io.InputStream,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl:void resend(org.apache.cxf.transport.Conduit,org.apache.cxf.message.Message)",
            "org.apache.cxf.io.CachedOutputStream:void resetOut(java.io.OutputStream,boolean)",
            "org.apache.cxf.io.CachedOutputStream:void writeCacheTo(java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.helpers.IOUtils:int copyAndCloseInput(java.io.InputStream,java.io.OutputStream,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.io.CachedOutputStream:void copyStream(java.io.InputStream,java.io.OutputStream,int)"
        ]
    },
    "org.apache.cxf.helpers.IOUtils:java.lang.String toString(java.io.InputStream,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.IOUtils:java.lang.String toString(java.io.InputStream)",
            "org.apache.cxf.interceptor.StaxInInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.helpers.IOUtils:java.lang.String readStringFromStream(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.helpers.IOUtils:java.io.ByteArrayInputStream loadIntoBAIS(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.catalog.CatalogXmlSchemaURIResolver:org.xml.sax.InputSource resolveEntity(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.helpers.IOUtils:byte[] readBytesFromStream(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.io.CachedOutputStream:byte[] getBytes()",
            "org.apache.cxf.jaxws.interceptors.SwAInInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)"
        ]
    },
    "org.apache.cxf.common.util.ClassReader:byte[] getBytes(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.ParamReader:void <init>(java.lang.Class)"
        ]
    },
    "org.apache.cxf.common.util.PropertiesLoaderUtils:java.util.Properties loadAllProperties(java.lang.String,java.lang.ClassLoader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void registerWSDLExtensibilityPlugins(javax.wsdl.extensions.ExtensionRegistry)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void registerInitialExtensions(java.lang.String)"
        ]
    },
    "org.apache.cxf.resource.ExtendedURIResolver:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.attachment.reference.RemoteReferenceResolver:org.apache.neethi.Policy resolveReference(java.lang.String)",
            "org.apache.cxf.catalog.CatalogWSDLLocator:void close()"
        ]
    },
    "org.apache.cxf.resource.URIResolver:void tryRemote(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.resource.URIResolver:void tryClasspath(java.lang.String)"
        ]
    },
    "org.apache.cxf.version.Version:void loadProperties()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.version.Version:java.lang.String getCurrentVersion()",
            "org.apache.cxf.version.Version:java.lang.String getName()",
            "org.apache.cxf.version.Version:java.lang.String getCompleteVersionString()"
        ]
    },
    "org.apache.cxf.jaxb.JAXBDataBinding:void scanPackages(java.util.Set)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.JAXBDataBinding:org.apache.cxf.jaxb.JAXBDataBinding$CachedContextAndSchemas createJAXBContextAndSchemas(java.util.Set,java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxb.attachment.JAXBAttachmentUnmarshaller:byte[] getAttachmentAsByteArray(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.AbstractDestination$1:void onMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit$InterposedMessageObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream$1:void run()",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponseInternal()",
            "org.apache.cxf.transport.servlet.ServletDestination:void invoke(javax.servlet.ServletConfig,javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void serviceRequest(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.jms.continuations.JMSContinuation:void doResume()",
            "org.apache.cxf.transport.jms.JMSDestination:void onMessage(javax.jms.Message)",
            "org.apache.cxf.transport.jms.JMSConduit:void onMessage(javax.jms.Message)",
            "org.apache.cxf.endpoint.ClientImpl:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.soap.interceptor.CheckFaultInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.xml.interceptor.XMLMessageInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerInterceptor:void handleAbort(org.apache.cxf.binding.soap.SoapMessage,javax.xml.ws.handler.MessageContext)",
            "org.apache.cxf.jaxws.handler.logical.LogicalHandlerOutInterceptor$LogicalHandlerOutEndingInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.https.SSLUtils:byte[] loadClientCredential(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.https.SSLUtils:javax.net.ssl.KeyManager[] getKeyStoreManagers(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.logging.Logger)"
        ]
    },
    "org.apache.cxf.transport.https.SSLUtils:byte[] loadCACert(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.https.SSLUtils:javax.net.ssl.TrustManager[] getTrustStoreManagers(boolean,java.lang.String,java.lang.String,java.lang.String,java.util.logging.Logger)"
        ]
    },
    "org.apache.cxf.ws.security.trust.STSClient:org.apache.ws.security.components.crypto.Crypto createCrypto(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.trust.STSClient:org.apache.cxf.ws.security.tokenstore.SecurityToken requestSecurityToken(java.lang.String,java.lang.String,java.lang.String,org.apache.cxf.ws.security.tokenstore.SecurityToken)",
            "org.apache.cxf.ws.security.trust.STSClient:org.apache.cxf.ws.security.tokenstore.SecurityToken createSecurityToken(org.w3c.dom.Element,byte[])",
            "org.apache.cxf.ws.security.trust.STSClient:org.w3c.dom.Element decrypt(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.trust.STSClient:org.apache.ws.security.components.crypto.Crypto createCrypto(boolean)"
        ]
    },
    "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:org.apache.ws.security.components.crypto.Crypto getCrypto(org.apache.cxf.ws.security.policy.model.TokenWrapper,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:org.apache.ws.security.components.crypto.Crypto getSignatureCrypto(org.apache.cxf.ws.security.policy.model.TokenWrapper)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:org.apache.ws.security.components.crypto.Crypto getEncryptionCrypto(org.apache.cxf.ws.security.policy.model.TokenWrapper)"
        ]
    },
    "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:java.util.Properties getProps(java.lang.Object,org.apache.cxf.binding.soap.SoapMessage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:java.lang.String checkAsymetricBinding(org.apache.cxf.ws.policy.AssertionInfoMap,java.lang.String,org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:java.lang.String checkSymetricBinding(org.apache.cxf.ws.policy.AssertionInfoMap,java.lang.String,org.apache.cxf.binding.soap.SoapMessage)"
        ]
    },
    "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.validation.Schema createSchema(org.apache.cxf.service.model.ServiceInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.validation.Schema getSchema(org.apache.cxf.service.model.ServiceInfo)"
        ]
    },
    "org.apache.cxf.io.CachedOutputStream:void writeCacheTo(java.lang.StringBuilder,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.LoggingOutInterceptor$LoggingCallback:void onClose(org.apache.cxf.io.CachedOutputStream)",
            "org.apache.cxf.interceptor.LoggingInInterceptor:void logging(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.io.CachedOutputStream:void writeCacheTo(java.lang.StringBuilder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.jms.JMSOutputStream:java.lang.Object retrieveRequestFromStream(boolean)",
            "org.apache.cxf.io.CachedOutputStream:void writeCacheTo(java.lang.StringBuilder,int)",
            "org.apache.cxf.io.CachedOutputStream:java.lang.String toString()"
        ]
    },
    "org.apache.cxf.tools.common.AbstractCXFToolContainer:java.util.Properties loadProperties(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.tools.common.AbstractCXFToolContainer:java.util.Properties loadProperties(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.tools.common.CommandInterfaceUtils:void commandCommonMain()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.tools.common.ClassUtils:void copyXmlFile(java.io.File,java.io.File)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.tools.common.ClassUtils:void compile(org.apache.cxf.tools.common.ToolContext)"
        ]
    },
    "org.apache.cxf.tools.common.ProcessorTestBase:java.lang.String getStringFromFile(java.io.File)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.wsdl11.AbstractWrapperWSDLLocator:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.AbstractWrapperWSDLLocator:void close()"
        ]
    },
    "org.apache.cxf.wsdl11.AbstractWrapperWSDLLocator:java.lang.String getBaseURI()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.spring.BusApplicationContext:org.springframework.core.io.Resource[] getConfigResources()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.attachment.DelegatingInputStream:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.IOUtils:int copyAndCloseInput(java.io.InputStream,java.io.OutputStream)",
            "org.apache.cxf.helpers.IOUtils:int copyAndCloseInput(java.io.InputStream,java.io.OutputStream,int)",
            "org.apache.cxf.helpers.IOUtils:java.lang.String toString(java.io.InputStream,int)",
            "org.apache.cxf.helpers.IOUtils:java.lang.String readStringFromStream(java.io.InputStream)",
            "org.apache.cxf.helpers.IOUtils:java.io.ByteArrayInputStream loadIntoBAIS(java.io.InputStream)",
            "org.apache.cxf.helpers.IOUtils:byte[] readBytesFromStream(java.io.InputStream)",
            "org.apache.cxf.common.util.ClassReader:byte[] getBytes(java.lang.Class)",
            "org.apache.cxf.common.util.PropertiesLoaderUtils:java.util.Properties loadAllProperties(java.lang.String,java.lang.ClassLoader)",
            "org.apache.cxf.resource.ExtendedURIResolver:void close()",
            "org.apache.cxf.resource.URIResolver:void tryRemote(java.lang.String)",
            "org.apache.cxf.version.Version:void loadProperties()",
            "org.apache.cxf.jaxb.JAXBDataBinding:void scanPackages(java.util.Set)",
            "org.apache.cxf.jaxb.attachment.JAXBAttachmentUnmarshaller:byte[] getAttachmentAsByteArray(java.lang.String)",
            "org.apache.cxf.interceptor.LoggingInInterceptor:void logging(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.AbstractConduit:void close(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponseInternal()",
            "org.apache.cxf.transport.AbstractDestination$1:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.trust.STSClient:org.apache.ws.security.components.crypto.Crypto createCrypto(boolean)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:org.apache.ws.security.components.crypto.Crypto getCrypto(org.apache.cxf.ws.security.policy.model.TokenWrapper,java.lang.String,java.lang.String)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:java.util.Properties getProps(java.lang.Object,org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.validation.Schema createSchema(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.tools.common.AbstractCXFToolContainer:java.util.Properties loadProperties(java.io.InputStream)",
            "org.apache.cxf.tools.common.AbstractCXFToolContainer:java.util.Properties loadProperties(java.lang.String)",
            "org.apache.cxf.tools.common.CommandInterfaceUtils:void commandCommonMain()",
            "org.apache.cxf.catalog.CatalogWSDLLocator:java.lang.String getBaseURI()",
            "org.apache.cxf.wsdl11.AbstractWrapperWSDLLocator:void close()",
            "org.apache.cxf.wsdl11.AbstractWrapperWSDLLocator:java.lang.String getBaseURI()",
            "org.apache.cxf.bus.spring.BusApplicationContext:org.springframework.core.io.Resource[] getConfigResources()",
            "org.apache.cxf.attachment.AttachmentDeserializer:void cache(org.apache.cxf.attachment.DelegatingInputStream,boolean)",
            "org.apache.cxf.attachment.DelegatingInputStream:void close()",
            "org.apache.cxf.aegis.type.mtom.ByteArrayType:java.lang.Object readAttachment(org.apache.cxf.message.Attachment,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.mtom.ByteArrayType:void copy(java.io.InputStream,java.io.OutputStream)",
            "org.apache.cxf.aegis.type.XMLTypeCreator:void <clinit>()",
            "org.apache.cxf.jaxws.handler.logical.LogicalMessageImpl:javax.xml.transform.Source handleDispatchProviderCase(javax.xml.ws.Service$Mode)"
        ]
    },
    "org.apache.cxf.aegis.type.XMLTypeCreator:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.AegisContext:org.apache.cxf.aegis.type.AbstractTypeCreator createRootTypeCreator()",
            "org.apache.cxf.aegis.type.XMLTypeCreator:org.w3c.dom.Document readAegisFile(java.io.InputStream,java.lang.String)",
            "org.apache.cxf.aegis.type.XMLTypeCreator:org.w3c.dom.Document getDocument(java.lang.Class)",
            "org.apache.cxf.aegis.type.XMLTypeCreator:java.util.List findMappings(java.lang.Class)",
            "org.apache.cxf.aegis.type.XMLTypeCreator:java.util.logging.Logger access$000()",
            "org.apache.cxf.aegis.type.XMLTypeCreator:void <clinit>()",
            "org.apache.cxf.aegis.type.XMLTypeCreator$1:void error(org.xml.sax.SAXParseException)",
            "org.apache.cxf.aegis.type.XMLTypeCreator$1:void fatalError(org.xml.sax.SAXParseException)",
            "org.apache.cxf.aegis.type.XMLTypeCreator$1:void warning(org.xml.sax.SAXParseException)"
        ]
    },
    "org.apache.cxf.aegis.type.mtom.AbstractXOPType:java.lang.Object readMtoM(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.basic.Base64Type:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)"
        ]
    },
    "org.apache.cxf.ws.security.policy.interceptors.SecureConversationOutInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.endpoint.ServerLifeCycleManagerImpl:void stopServer(org.apache.cxf.endpoint.Server)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ServerImpl:void stop()"
        ]
    },
    "org.apache.cxf.endpoint.ClientLifeCycleManagerImpl:void clientDestroyed(org.apache.cxf.endpoint.Client)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:void destroy()"
        ]
    },
    "org.apache.cxf.ws.policy.WSPolicyFeature:org.apache.neethi.Policy resolveReference(org.apache.neethi.PolicyReference,org.w3c.dom.Element,org.apache.cxf.ws.policy.PolicyBuilder,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.WSPolicyFeature:org.apache.neethi.Policy initializeEndpointPolicy(org.apache.cxf.endpoint.Endpoint,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.ws.policy.attachment.wsdl11.Wsdl11AttachmentPolicyProvider:org.apache.neethi.Policy resolveReference(org.apache.neethi.PolicyReference,org.apache.cxf.service.model.DescriptionInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.attachment.wsdl11.Wsdl11AttachmentPolicyProvider:org.apache.neethi.Policy getElementPolicy(org.apache.cxf.service.model.Extensible,boolean,org.apache.cxf.service.model.DescriptionInfo)"
        ]
    },
    "org.apache.cxf.ws.policy.attachment.external.ExternalAttachmentProvider:org.apache.neethi.Policy resolveReference(org.apache.neethi.PolicyReference,org.w3c.dom.Document)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.attachment.external.ExternalAttachmentProvider:void readDocument()"
        ]
    },
    "org.apache.cxf.transport.http.WSDLQueryHandler:void writeResponse(java.lang.String,java.lang.String,org.apache.cxf.service.model.EndpointInfo,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.servlet.ServletController:void invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void doService(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl$ResendCandidate:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl$ResendCandidate:void initiate(boolean)",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl$3:void run()",
            "org.apache.cxf.workqueue.SynchronousExecutor:void execute(java.lang.Runnable)",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl$2:void run()",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void execute(java.lang.Runnable,long)",
            "org.apache.cxf.jaxws.ServiceImpl$1:void execute(java.lang.Runnable)"
        ]
    },
    "org.apache.cxf.databinding.source.XMLStreamDataReader:java.lang.Object read(org.apache.cxf.service.model.MessagePartInfo,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.WrappedInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.BareInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.ClientFaultConverter:void processFaultDetail(org.apache.cxf.interceptor.Fault,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void getPara(org.apache.cxf.staxutils.DepthXMLStreamReader,org.apache.cxf.databinding.DataReader,org.apache.cxf.message.MessageContentsList,java.util.Iterator,org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.soap.interceptor.RPCInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.soap.interceptor.SoapHeaderInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.attachment.LazyAttachmentCollection$1:boolean hasNext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.MapNamespaceContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.helpers.WSDLHelper:javax.wsdl.BindingOperation getBindingOperation(javax.wsdl.Definition,java.lang.String)",
            "org.apache.cxf.helpers.WSDLHelper:javax.wsdl.BindingOperation getBindingOperation(javax.wsdl.Binding,java.lang.String)",
            "org.apache.cxf.helpers.WSDLHelper:java.util.List getPortTypes(javax.wsdl.Definition)",
            "org.apache.cxf.helpers.WSDLHelper:java.util.List getInMessageParts(javax.wsdl.Operation)",
            "org.apache.cxf.helpers.WSDLHelper:java.util.List getOutMessageParts(javax.wsdl.Operation)",
            "org.apache.cxf.helpers.WSDLHelper:javax.wsdl.Binding getBinding(javax.wsdl.BindingOperation,javax.wsdl.Definition)",
            "org.apache.cxf.helpers.XMLUtils:org.w3c.dom.Element fetchElementByNameAttribute(org.w3c.dom.Element,java.lang.String,java.lang.String)",
            "org.apache.cxf.common.util.SortedArraySet:boolean addAll(java.util.Collection)",
            "org.apache.cxf.common.util.SortedArraySet:boolean containsAll(java.util.Collection)",
            "org.apache.cxf.common.util.SortedArraySet:boolean removeAll(java.util.Collection)",
            "org.apache.cxf.common.util.SortedArraySet:boolean retainAll(java.util.Collection)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.util.Set entrySet()",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.util.Set keySet()",
            "org.apache.cxf.common.util.ReflectionInvokationHandler$WrapperIterator:boolean hasNext()",
            "org.apache.cxf.common.util.StringUtils:java.util.List getParts(java.lang.String,java.lang.String)",
            "org.apache.cxf.common.util.StringUtils:java.lang.String getFirstNotEmpty(java.lang.String,java.lang.String)",
            "org.apache.cxf.common.util.StringUtils:java.lang.String getFirstNotEmpty(java.util.List)",
            "org.apache.cxf.common.util.ReflectionUtil:java.util.List getPackagesFromJar(java.io.File)",
            "org.apache.cxf.common.util.CacheMap:void updateMainDataMap()",
            "org.apache.cxf.common.util.CacheMap:void putAll(java.util.Map)",
            "org.apache.cxf.common.util.AbstractTwoStageCache:boolean recycle(java.lang.Object)",
            "org.apache.cxf.common.util.CollectionUtils:java.util.Collection diff(java.util.Collection,java.util.Collection)",
            "org.apache.cxf.common.util.CollectionUtils:boolean isEmpty(java.util.Collection)",
            "org.apache.cxf.common.util.TwoStageMap:void putAll(java.util.Map)",
            "org.apache.cxf.common.injection.ResourceInjector:void invokePostConstruct()",
            "org.apache.cxf.common.injection.ResourceInjector:void invokePreDestroy()",
            "org.apache.cxf.common.annotation.AnnotationProcessor:void processMethods(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)",
            "org.apache.cxf.common.annotation.AnnotationProcessor:void processFields(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)",
            "org.apache.cxf.common.annotation.AnnotationProcessor:void processClass(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)",
            "org.apache.cxf.resource.DefaultResourceManager:java.lang.Object findResource(java.lang.String,java.lang.Class,boolean,java.util.List)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.util.Set entrySet()",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.util.Collection values()",
            "org.apache.cxf.configuration.spring.SpringBeanMap:void processBeans(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.configuration.spring.SpringBeanQNameMap:void processBeans(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void initWildcardDefinitionMap()",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureBean(java.lang.String,java.lang.Object,boolean)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureWithWildCard(java.lang.String,java.lang.Object)",
            "org.apache.cxf.configuration.jsse.spring.TLSParameterJaxBUtils:java.security.KeyStore createTrustStore(java.io.InputStream)",
            "org.apache.cxf.jaxb.JAXBUtils:java.lang.String makeConventionalIdentifier(java.util.List,org.apache.cxf.jaxb.JAXBUtils$IdentifierType)",
            "org.apache.cxf.jaxb.JAXBDataBinding:void initialize(org.apache.cxf.service.Service)",
            "org.apache.cxf.jaxb.JAXBDataBinding:org.apache.cxf.jaxb.JAXBDataBinding$CachedContextAndSchemas createJAXBContextAndSchemas(java.util.Set,java.lang.String)",
            "org.apache.cxf.jaxb.JAXBDataBinding:void scanPackages(java.util.Set)",
            "org.apache.cxf.jaxb.JAXBSchemaInitializer:javax.xml.namespace.QName getTypeName(org.apache.cxf.jaxb.JAXBBeanInfo)",
            "org.apache.cxf.jaxb.JAXBSchemaInitializer:void end(org.apache.cxf.service.model.FaultInfo)",
            "org.apache.cxf.jaxb.JAXBSchemaInitializer:void buildExceptionType(org.apache.cxf.service.model.MessagePartInfo,java.lang.Class)",
            "org.apache.cxf.jaxb.JAXBSchemaInitializer:void addElement(org.apache.ws.commons.schema.XmlSchemaSequence,org.apache.cxf.jaxb.JAXBBeanInfo,javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.jaxb.JAXBSchemaInitializer:boolean isExistSchemaElement(org.apache.ws.commons.schema.XmlSchema,javax.xml.namespace.QName)",
            "org.apache.cxf.jaxb.io.DataWriterImpl:javax.xml.bind.Marshaller createMarshaller(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.jaxb.io.DataReaderImpl:javax.xml.bind.Unmarshaller createUnmarshaller()",
            "org.apache.cxf.management.utils.ManagementConsole:void listAllManagedEndpoint()",
            "org.apache.cxf.management.utils.ManagementConsole:void invokeEndpoint(java.lang.String)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElementEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.message.MessageUtils:boolean isDOMPresent(org.apache.cxf.message.Message)",
            "org.apache.cxf.message.MessageImpl:void copyContent(org.apache.cxf.message.Message,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:org.apache.cxf.service.model.BindingOperationInfo findAnyOp(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.util.Map keepInOrder(java.util.Map,org.apache.cxf.service.model.OperationInfo,java.util.List)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:org.apache.cxf.message.MessageContentsList getParameters(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.util.Map getQueries(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.BareInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.ClientFaultConverter:void processFaultDetail(org.apache.cxf.interceptor.Fault,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:org.apache.cxf.service.model.MessagePartInfo findMessagePart(org.apache.cxf.message.Exchange,java.util.Collection,javax.xml.namespace.QName,boolean,int,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.FaultOutInterceptor:org.apache.cxf.service.model.FaultInfo getFaultForClass(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Class)",
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:void writeParts(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.message.MessageContentsList,java.util.List)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void getPara(org.apache.cxf.staxutils.DepthXMLStreamReader,org.apache.cxf.databinding.DataReader,org.apache.cxf.message.MessageContentsList,java.util.Iterator,org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.ConduitInitiatorManagerImpl:org.apache.cxf.transport.ConduitInitiator getConduitInitiatorForUri(java.lang.String)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updateDoc(org.w3c.dom.Document,java.lang.String,java.util.Map,java.util.Map)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updateDefinition(javax.wsdl.Definition,java.util.Map,java.util.Map,java.lang.String,org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updatePublishedEndpointUrl(java.lang.String,javax.wsdl.Definition,javax.xml.namespace.QName)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void setSoapAddressLocationOn(javax.wsdl.Port,java.lang.String)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updateSchemaImports(javax.wsdl.extensions.schema.Schema,java.util.Map,java.lang.String)",
            "org.apache.cxf.transport.http.Cookie:void handleSetCookie(java.util.Map,java.util.List)",
            "org.apache.cxf.transport.http.AbstractHTTPTransportFactory:void registerWithBindingManager()",
            "org.apache.cxf.transport.http.AbstractHTTPTransportFactory:org.apache.cxf.service.model.EndpointInfo createEndpointInfo(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.BindingInfo,javax.wsdl.Port)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPClientPolicy getClient(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPClientPolicy)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPServerPolicy getServer(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPServerPolicy)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPClientPolicy getClient(org.apache.cxf.ws.policy.PolicyEngine,org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.transport.Conduit)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPServerPolicy getServer(org.apache.cxf.ws.policy.PolicyEngine,org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.transport.Destination)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:void assertClientPolicy(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPClientPolicy)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:void assertServerPolicy(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPServerPolicy)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPClientPolicy getClient(java.util.Collection)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPServerPolicy getServer(java.util.Collection)",
            "org.apache.cxf.transport.http.HTTPConduit:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:void transferProtocolHeadersToURLConnection(org.apache.cxf.message.Message,java.net.URLConnection)",
            "org.apache.cxf.transport.http.HTTPConduit:void logProtocolHeaders(java.util.logging.Level,org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:java.lang.String extractAuthorizationRealm(java.util.Map)",
            "org.apache.cxf.transport.http.HTTPConduit:java.lang.String extractLocation(java.util.Map)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void copyResponseHeaders(org.apache.cxf.message.Message,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponseInternal()",
            "org.apache.cxf.transport.http.gzip.GZIPOutInterceptor:org.apache.cxf.transport.http.gzip.GZIPOutInterceptor$UseGzip gzipPermitted(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.gzip.GZIPInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.AbstractMultiplexDestination:java.lang.String extractStringElementFromAny(javax.xml.namespace.QName,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.transport.DestinationFactoryManagerImpl:org.apache.cxf.transport.DestinationFactory getDestinationFactoryForUri(java.lang.String)",
            "org.apache.cxf.transport.servlet.ServletController:void updateDests(javax.servlet.http.HttpServletRequest)",
            "org.apache.cxf.transport.servlet.ServletController:void invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.servlet.ServletController:org.apache.cxf.transport.servlet.ServletDestination checkRestfulRequest(javax.servlet.http.HttpServletRequest)",
            "org.apache.cxf.transport.servlet.ServletController:void generateServiceList(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.servlet.ServletController:void generateUnformattedServiceList(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.servlet.ServletTransportFactory:void register()",
            "org.apache.cxf.transport.servlet.AbstractCXFServlet:void replaceDestinationFactory()",
            "org.apache.cxf.transport.https.CertificateHostnameVerifier$Certificates:java.lang.String[] getDNSSubjectAlts(java.security.cert.X509Certificate)",
            "org.apache.cxf.transport.https.SSLUtils:java.util.List compileRegexPatterns(java.util.List,boolean,java.util.logging.Logger)",
            "org.apache.cxf.transport.https.SSLUtils:boolean matchesOneOf(java.lang.String,java.util.List)",
            "org.apache.cxf.transport.https.CertificateHostnameVerifier$AbstractVerifier:void check(java.lang.String[],java.lang.String[],java.lang.String[],boolean,boolean)",
            "org.apache.cxf.transport.http_jetty.spring.JettySpringTypesFactory:java.util.Map toThreadingParameters(java.util.List)",
            "org.apache.cxf.transport.http_jetty.spring.JettySpringTypesFactory:java.util.Map toTLSServerParamenters(java.util.List)",
            "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineFactoryBeanDefinitionParser:java.util.List getRequiredElementsList(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,javax.xml.namespace.QName,org.springframework.beans.factory.support.BeanDefinitionBuilder)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void doService(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine:void addServant(java.net.URL,org.apache.cxf.transport.http_jetty.JettyHTTPHandler)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPTransportFactory:void finalizeConfig()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void setEnginesList(java.util.List)",
            "org.apache.cxf.transport.jms.JMSUtils:void addProtocolHeaders(javax.jms.Message,java.util.Map)",
            "org.apache.cxf.feature.AbstractFeature:java.lang.Object getActive(java.util.List,java.lang.Class)",
            "org.apache.cxf.endpoint.ClientLifeCycleManagerImpl:void clientCreated(org.apache.cxf.endpoint.Client)",
            "org.apache.cxf.endpoint.ClientLifeCycleManagerImpl:void clientDestroyed(org.apache.cxf.endpoint.Client)",
            "org.apache.cxf.endpoint.ServerLifeCycleManagerImpl:void startServer(org.apache.cxf.endpoint.Server)",
            "org.apache.cxf.endpoint.ServerLifeCycleManagerImpl:void stopServer(org.apache.cxf.endpoint.Server)",
            "org.apache.cxf.endpoint.EndpointResolverRegistryImpl:org.apache.cxf.ws.addressing.EndpointReferenceType resolve(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.endpoint.EndpointResolverRegistryImpl:org.apache.cxf.ws.addressing.EndpointReferenceType renew(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.endpoint.EndpointResolverRegistryImpl:org.apache.cxf.ws.addressing.EndpointReferenceType mint(javax.xml.namespace.QName)",
            "org.apache.cxf.endpoint.EndpointResolverRegistryImpl:org.apache.cxf.ws.addressing.EndpointReferenceType mint(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.endpoint.ServiceContractResolverRegistryImpl:java.net.URI getContractLocation(javax.xml.namespace.QName)",
            "org.apache.cxf.endpoint.ClientImpl:org.apache.cxf.service.model.EndpointInfo findEndpoint(org.apache.cxf.service.Service,javax.xml.namespace.QName)",
            "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:org.apache.cxf.endpoint.Client createClient(java.lang.String,javax.xml.namespace.QName,java.lang.ClassLoader,javax.xml.namespace.QName,java.util.List)",
            "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:void addBindingFiles(java.util.List,org.apache.cxf.jaxb.JAXBUtils$SchemaCompiler)",
            "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:boolean isValidPackage(org.apache.cxf.jaxb.JAXBUtils$JPackage)",
            "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:void outputDebug(org.apache.cxf.jaxb.JAXBUtils$JCodeModel)",
            "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:void addSchemas(java.lang.String,java.util.Collection,org.apache.cxf.jaxb.JAXBUtils$SchemaCompiler)",
            "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:boolean compileJavaSrc(java.lang.String,java.util.List,java.lang.String)",
            "org.apache.cxf.endpoint.dynamic.TypeClassInitializer:void begin(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.ws.addressing.ContextUtils:java.lang.String getActionFromServiceModel(org.apache.cxf.message.Message,java.lang.Exception)",
            "org.apache.cxf.ws.addressing.MAPAggregator:void assertAssertion(org.apache.cxf.ws.policy.AssertionInfoMap,javax.xml.namespace.QName)",
            "org.apache.cxf.ws.addressing.MAPAggregator:boolean hasUsingAddressing(java.util.List)",
            "org.apache.cxf.ws.addressing.MAPAggregator:java.lang.String getActionFromFaultMessage(org.apache.cxf.service.model.OperationInfo,java.lang.String)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void encodeReferenceParameters(org.apache.cxf.ws.addressing.AddressingProperties,org.w3c.dom.Element,javax.xml.bind.Marshaller)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void addMustUnderstandAttribute(org.w3c.dom.Element,javax.xml.namespace.QName,org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.addressing.AddressingPropertiesImpl)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:org.apache.cxf.ws.addressing.AddressingProperties unmarshalMAPs(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void decodeReferenceParameters(java.util.Set,org.apache.cxf.ws.addressing.AddressingPropertiesImpl,javax.xml.bind.Unmarshaller)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void discardMAPs(java.util.List,org.apache.cxf.ws.addressing.AddressingProperties)",
            "org.apache.cxf.ws.policy.builder.primitive.NestedPrimitiveAssertion:org.apache.neethi.PolicyComponent normalize()",
            "org.apache.cxf.ws.policy.builder.primitive.NestedPrimitiveAssertion:boolean isAsserted(org.apache.cxf.ws.policy.AssertionInfoMap)",
            "org.apache.cxf.ws.policy.builder.primitive.NestedPrimitiveAssertion:boolean isPolicyAsserted(org.apache.neethi.PolicyOperator,org.apache.cxf.ws.policy.AssertionInfoMap)",
            "org.apache.cxf.ws.policy.builder.primitive.PrimitiveAssertion:boolean isAsserted(org.apache.cxf.ws.policy.AssertionInfoMap)",
            "org.apache.cxf.ws.policy.util.PolicyComparator:boolean compare(java.util.List,java.util.List)",
            "org.apache.cxf.ws.policy.AssertionInfoMap:void <init>(java.util.Collection)",
            "org.apache.cxf.ws.policy.AssertionInfoMap:void putAssertionInfo(org.apache.cxf.ws.policy.PolicyAssertion)",
            "org.apache.cxf.ws.policy.AssertionInfoMap:boolean supportsAlternative(org.apache.cxf.ws.policy.PolicyAssertion,java.util.List)",
            "org.apache.cxf.ws.policy.AssertionInfoMap:boolean supportsAlternative(java.util.Collection,java.util.List)",
            "org.apache.cxf.ws.policy.AssertionInfoMap:void checkEffectivePolicy(org.apache.neethi.Policy)",
            "org.apache.cxf.ws.policy.AssertionInfoMap:void check()",
            "org.apache.cxf.ws.policy.AssertionInfoMap:void getAssertions(org.apache.neethi.PolicyOperator,java.util.Collection)",
            "org.apache.cxf.ws.policy.Intersector:boolean compatibleAlternatives(java.util.Collection,java.util.Collection)",
            "org.apache.cxf.ws.policy.Intersector:boolean compatiblePolicies(org.apache.neethi.Policy,org.apache.neethi.Policy)",
            "org.apache.cxf.ws.policy.Intersector:org.apache.neethi.Policy intersect(org.apache.neethi.Policy,org.apache.neethi.Policy)",
            "org.apache.cxf.ws.policy.Intersector:org.apache.cxf.ws.policy.PolicyAssertion findCompatibleAssertion(org.apache.cxf.ws.policy.PolicyAssertion,java.util.Collection)",
            "org.apache.cxf.ws.policy.EndpointPolicyImpl:java.util.Collection getSupportedAlternatives()",
            "org.apache.cxf.ws.policy.EndpointPolicyImpl:void initializeVocabulary()",
            "org.apache.cxf.ws.policy.EndpointPolicyImpl:java.util.Collection getSupportedAlternatives(org.apache.neethi.Policy)",
            "org.apache.cxf.ws.policy.EndpointPolicyImpl:void initializeInterceptors(org.apache.cxf.ws.policy.PolicyInterceptorProviderRegistry,java.util.Set,org.apache.cxf.ws.policy.PolicyAssertion,boolean)",
            "org.apache.cxf.ws.policy.EndpointPolicyImpl:void initializeInterceptors()",
            "org.apache.cxf.ws.policy.EndpointPolicyImpl:void checkExactlyOnes()",
            "org.apache.cxf.ws.policy.ServerPolicyOutFaultInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.policy.WSPolicyFeature:org.apache.neethi.Policy initializeEndpointPolicy(org.apache.cxf.endpoint.Endpoint,org.apache.cxf.Bus)",
            "org.apache.cxf.ws.policy.PolicyInInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.policy.PolicyOutInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.policy.PolicyInterceptorProviderRegistryImpl:void register(org.apache.cxf.ws.policy.PolicyInterceptorProvider)",
            "org.apache.cxf.ws.policy.PolicyInterceptorProviderRegistryImpl:java.util.List getInterceptors(java.util.Collection,boolean,boolean)",
            "org.apache.cxf.ws.policy.selector.MinimalAlternativeSelector:java.util.Collection selectAlternative(org.apache.neethi.Policy,org.apache.cxf.ws.policy.PolicyEngine,org.apache.cxf.ws.policy.Assertor)",
            "org.apache.cxf.ws.policy.selector.FirstAlternativeSelector:java.util.Collection selectAlternative(org.apache.neethi.Policy,org.apache.cxf.ws.policy.PolicyEngine,org.apache.cxf.ws.policy.Assertor)",
            "org.apache.cxf.ws.policy.selector.MaximalAlternativeSelector:java.util.Collection selectAlternative(org.apache.neethi.Policy,org.apache.cxf.ws.policy.PolicyEngine,org.apache.cxf.ws.policy.Assertor)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:org.apache.neethi.Policy getAggregatedServicePolicy(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:org.apache.neethi.Policy getAggregatedEndpointPolicy(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:org.apache.neethi.Policy getAggregatedOperationPolicy(org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:org.apache.neethi.Policy getAggregatedMessagePolicy(org.apache.cxf.service.model.BindingMessageInfo)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:org.apache.neethi.Policy getAggregatedFaultPolicy(org.apache.cxf.service.model.BindingFaultInfo)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:java.util.Collection getAssertions(org.apache.cxf.ws.policy.EffectivePolicy,boolean)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:void addAssertions(org.apache.neethi.PolicyComponent,boolean,java.util.Collection)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:java.util.Set getVocabulary(org.apache.neethi.PolicyComponent,boolean)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:boolean supportsAlternative(java.util.Collection,org.apache.cxf.ws.policy.Assertor)",
            "org.apache.cxf.ws.policy.PolicyUtils:boolean contains(java.util.Collection,org.apache.neethi.Assertion)",
            "org.apache.cxf.ws.policy.PolicyUtils:boolean contains(java.util.Collection,java.util.Collection)",
            "org.apache.cxf.ws.policy.PolicyUtils:void printPolicyComponent(org.apache.neethi.PolicyComponent,java.lang.StringBuffer,int)",
            "org.apache.cxf.ws.policy.mtom.MTOMPolicyInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.policy.EffectivePolicyImpl:void initialiseInterceptors(org.apache.cxf.ws.policy.PolicyEngineImpl,boolean)",
            "org.apache.cxf.ws.policy.EffectivePolicyImpl:java.util.Collection getSupportedAlternatives(org.apache.cxf.ws.policy.PolicyEngineImpl,org.apache.neethi.Policy)",
            "org.apache.cxf.ws.policy.EffectivePolicyImpl:void initialiseInterceptors(org.apache.cxf.ws.policy.PolicyInterceptorProviderRegistry,org.apache.cxf.ws.policy.PolicyEngineImpl,java.util.Set,org.apache.cxf.ws.policy.PolicyAssertion,boolean)",
            "org.apache.cxf.ws.policy.attachment.wsdl11.Wsdl11AttachmentPolicyProvider$ExtensibleInfo:java.lang.Object getExtensor(java.lang.Class)",
            "org.apache.cxf.ws.policy.attachment.wsdl11.Wsdl11AttachmentPolicyProvider$ExtensibleInfo:java.util.List getExtensors(java.lang.Class)",
            "org.apache.cxf.ws.policy.attachment.wsdl11.Wsdl11AttachmentPolicyProvider:org.apache.neethi.Policy getElementPolicy(org.apache.cxf.service.model.Extensible,boolean,org.apache.cxf.service.model.DescriptionInfo)",
            "org.apache.cxf.ws.policy.attachment.reference.LocalServiceModelReferenceResolver:org.apache.neethi.Policy resolveReference(java.lang.String)",
            "org.apache.cxf.ws.policy.attachment.reference.RemoteReferenceResolver:org.apache.neethi.Policy resolveReference(java.lang.String)",
            "org.apache.cxf.ws.policy.attachment.external.PolicyAttachment:boolean appliesTo(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.ws.policy.attachment.external.PolicyAttachment:boolean appliesTo(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.ws.policy.attachment.external.PolicyAttachment:boolean appliesTo(org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.ws.policy.attachment.external.PolicyAttachment:boolean appliesTo(org.apache.cxf.service.model.BindingMessageInfo)",
            "org.apache.cxf.ws.policy.attachment.external.PolicyAttachment:boolean appliesTo(org.apache.cxf.service.model.BindingFaultInfo)",
            "org.apache.cxf.ws.policy.attachment.external.ExternalAttachmentProvider:org.apache.neethi.Policy getEffectivePolicy(org.apache.cxf.service.model.BindingFaultInfo)",
            "org.apache.cxf.ws.policy.attachment.external.ExternalAttachmentProvider:org.apache.neethi.Policy getEffectivePolicy(org.apache.cxf.service.model.BindingMessageInfo)",
            "org.apache.cxf.ws.policy.attachment.external.ExternalAttachmentProvider:org.apache.neethi.Policy getEffectivePolicy(org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.ws.policy.attachment.external.ExternalAttachmentProvider:org.apache.neethi.Policy getEffectivePolicy(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.ws.policy.attachment.external.ExternalAttachmentProvider:org.apache.neethi.Policy getEffectivePolicy(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.ws.policy.attachment.external.ExternalAttachmentProvider:void readDocument()",
            "org.apache.cxf.ws.policy.AssertionBuilderRegistryImpl:void register(org.apache.cxf.ws.policy.AssertionBuilder)",
            "org.apache.cxf.ws.policy.ClientPolicyInFaultInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.policy.AbstractPolicyInterceptor:org.apache.cxf.service.model.BindingFaultInfo getBindingFaultInfo(org.apache.cxf.message.Message,java.lang.Exception,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.ws.security.policy.builders.X509TokenBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.builders.X509TokenBuilder:void processAlternative(java.util.List,org.apache.cxf.ws.security.policy.model.X509Token,org.apache.cxf.ws.security.policy.SPConstants)",
            "org.apache.cxf.ws.security.policy.builders.SupportingTokens12Builder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.builders.SupportingTokens12Builder:void processAlternative(java.util.List,org.apache.cxf.ws.security.policy.model.SupportingToken)",
            "org.apache.cxf.ws.security.policy.builders.InitiatorTokenBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.builders.InitiatorTokenBuilder:void processAlternative(java.util.List,org.apache.cxf.ws.security.policy.model.InitiatorToken)",
            "org.apache.cxf.ws.security.policy.builders.AsymmetricBindingBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.builders.AsymmetricBindingBuilder:void processAlternative(java.util.List,org.apache.cxf.ws.security.policy.model.AsymmetricBinding,org.apache.cxf.ws.security.policy.SPConstants)",
            "org.apache.cxf.ws.security.policy.builders.IssuedTokenBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.builders.IssuedTokenBuilder:void processAlternative(java.util.List,org.apache.cxf.ws.security.policy.model.IssuedToken)",
            "org.apache.cxf.ws.security.policy.builders.ProtectionTokenBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.builders.TransportTokenBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.builders.RecipientTokenBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.builders.RecipientTokenBuilder:void processAlternative(java.util.List,org.apache.cxf.ws.security.policy.model.RecipientToken)",
            "org.apache.cxf.ws.security.policy.builders.SupportingTokensBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.builders.SupportingTokensBuilder:void processAlternative(java.util.List,org.apache.cxf.ws.security.policy.model.SupportingToken)",
            "org.apache.cxf.ws.security.policy.builders.SymmetricBindingBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.builders.SymmetricBindingBuilder:void processAlternatives(java.util.List,org.apache.cxf.ws.security.policy.model.SymmetricBinding,org.apache.cxf.ws.security.policy.SPConstants)",
            "org.apache.cxf.ws.security.policy.model.RequiredParts:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.ContentEncryptedElements:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SignedEncryptedElements:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.RequiredElements:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SupportingToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SupportingToken:org.apache.neethi.Policy getPolicy()",
            "org.apache.cxf.ws.security.policy.model.SignedEncryptedParts:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.AbstractSecurityAssertion:boolean isAsserted(org.apache.cxf.ws.policy.AssertionInfoMap)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor$SecureConversationTokenFinderInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.policy.interceptors.HttpsTokenInterceptorProvider$HttpsTokenInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.policy.interceptors.HttpsTokenInterceptorProvider$HttpsTokenInInterceptor:void assertHttps(java.util.Collection,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationOutInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor:void recalcEffectivePolicy(org.apache.cxf.binding.soap.SoapMessage,java.lang.String,org.apache.neethi.Policy)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor:void unmapSecurityProps(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.policy.interceptors.IssuedTokenInterceptorProvider$IssuedTokenOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationTokenInterceptorProvider:void mapSecurityProps(org.apache.cxf.message.Message,java.util.Map)",
            "org.apache.cxf.ws.security.policy.interceptors.HttpsTokenInterceptorProvider$HttpsTokenOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.policy.interceptors.HttpsTokenInterceptorProvider$HttpsTokenOutInterceptor:void assertHttps(java.util.Collection,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.policy.interceptors.IssuedTokenInterceptorProvider$IssuedTokenInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.trust.STSClient:void setPolicy(org.apache.neethi.Policy)",
            "org.apache.cxf.ws.security.trust.STSClient:org.apache.cxf.service.model.BindingOperationInfo findOperation(java.lang.String)",
            "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:org.apache.cxf.ws.security.tokenstore.SecurityToken getToken(java.lang.String)",
            "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:java.util.Collection getTokens(org.apache.cxf.ws.security.tokenstore.SecurityToken$State)",
            "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:void processTokenExpiry()",
            "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:void removeCancelledTokens()",
            "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:void removeExpiredTokens()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.TransportBindingHandler:void addUsernameTokens(org.apache.cxf.ws.security.policy.model.SupportingToken)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.TransportBindingHandler:void handleBinding()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.TransportBindingHandler:byte[] doX509TokenSignature(org.apache.cxf.ws.security.policy.model.Token,org.apache.cxf.ws.security.policy.model.SignedEncryptedParts,org.apache.cxf.ws.security.policy.model.TokenWrapper)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.TransportBindingHandler:byte[] doIssuedTokenSignature(org.apache.cxf.ws.security.policy.model.Token,org.apache.cxf.ws.security.policy.model.SignedEncryptedParts,org.apache.cxf.ws.security.policy.model.TokenWrapper,org.apache.cxf.ws.security.tokenstore.SecurityToken)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AsymmetricBindingHandler:void doSignBeforeEncrypt()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AsymmetricBindingHandler:void doEncryptBeforeSign()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AsymmetricBindingHandler:void assertUnusedTokens(org.apache.cxf.ws.security.policy.model.TokenWrapper)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void policyNotAsserted(org.apache.cxf.ws.policy.PolicyAssertion,java.lang.Exception)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void policyNotAsserted(org.apache.cxf.ws.policy.PolicyAssertion,java.lang.String)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void policyAsserted(org.apache.cxf.ws.policy.PolicyAssertion)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void policyAsserted(javax.xml.namespace.QName)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:java.util.Collection findAndAssertPolicy(javax.xml.namespace.QName)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:org.apache.ws.security.message.WSSecTimestamp createTimestamp()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:org.apache.ws.security.message.WSSecTimestamp handleLayout(org.apache.ws.security.message.WSSecTimestamp)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void assertSupportingTokens(java.util.Collection)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:java.util.Map handleSupportingTokens(java.util.Collection,boolean)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:java.util.Map handleSupportingTokens(org.apache.cxf.ws.security.policy.model.SupportingToken,boolean,java.util.Map)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void addSignatureParts(java.util.Map,java.util.List)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:org.apache.ws.security.message.WSSecUsernameToken addUsernameToken(org.apache.cxf.ws.security.policy.model.UsernameToken)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:java.util.Vector getEncryptedParts()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:java.util.Vector getSignedParts()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:java.util.Vector getPartsAndElements(boolean,boolean,java.util.List,java.util.List,java.util.Map)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:org.apache.cxf.ws.security.policy.model.Wss10 getWss10()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void doEndorsedSignatures(java.util.Map,boolean,boolean)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void handleEncryptedSignedHeaders(java.util.Vector,java.util.Vector)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.SymmetricBindingHandler:void doEncryptBeforeSign()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.SymmetricBindingHandler:void doSignBeforeEncrypt()",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JOutInterceptor$PolicyBasedWSS4JOutInterceptorInternal:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:void handleWSS11(org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:boolean assertPolicy(org.apache.cxf.ws.policy.AssertionInfoMap,javax.xml.namespace.QName)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:void assertPolicy(org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.ws.policy.PolicyAssertion)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:void notAssertPolicy(org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.ws.policy.PolicyAssertion,java.lang.String)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:java.lang.String checkAsymetricBinding(org.apache.cxf.ws.policy.AssertionInfoMap,java.lang.String,org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:java.lang.String checkSymetricBinding(org.apache.cxf.ws.policy.AssertionInfoMap,java.lang.String,org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:void assertTokens(org.apache.cxf.ws.policy.AssertionInfoMap,javax.xml.namespace.QName,java.util.Collection,org.apache.cxf.binding.soap.SoapMessage,javax.xml.soap.SOAPMessage,java.lang.String)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:void doResults(org.apache.cxf.binding.soap.SoapMessage,java.lang.String,javax.xml.soap.SOAPMessage,java.util.Vector)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:boolean assertSymetricBinding(org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.binding.soap.SoapMessage,javax.xml.soap.SOAPMessage,org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor$Protections,boolean)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:boolean assertAsymetricBinding(org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.binding.soap.SoapMessage,javax.xml.soap.SOAPMessage,org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor$Protections,boolean)",
            "org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor:void doResults(org.apache.cxf.binding.soap.SoapMessage,java.lang.String,javax.xml.soap.SOAPMessage,java.util.Vector)",
            "org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor:org.apache.ws.security.WSSecurityEngine createSecurityEngine(java.util.Map)",
            "org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor$TokenStoreCallbackHandler:void handle(javax.security.auth.callback.Callback[])",
            "org.apache.cxf.ws.rm.AbstractRMInterceptor:void assertReliability(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.Servant:void terminateSequence(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.AbstractSequence:boolean isAcknowledged(java.math.BigInteger)",
            "org.apache.cxf.ws.rm.DestinationSequence:void scheduleDeferredAcknowledgement(long)",
            "org.apache.cxf.ws.rm.policy.PolicyUtils:org.apache.cxf.ws.rm.policy.RMAssertion getRMAssertion(org.apache.cxf.ws.rm.policy.RMAssertion,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.Source:java.util.Collection getAllUnacknowledgedSequences()",
            "org.apache.cxf.ws.rm.RMInInterceptor:void processAcknowledgments(org.apache.cxf.ws.rm.Source,org.apache.cxf.ws.rm.RMProperties)",
            "org.apache.cxf.ws.rm.RMOutInterceptor:void addAcknowledgements(org.apache.cxf.ws.rm.Destination,org.apache.cxf.ws.rm.RMProperties,org.apache.cxf.ws.rm.Identifier,org.apache.cxf.ws.addressing.v200408.AttributedURI)",
            "org.apache.cxf.ws.rm.Destination:void ackRequested(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.RMManager:void shutdown()",
            "org.apache.cxf.ws.rm.RMManager:void recoverReliableEndpoint(org.apache.cxf.endpoint.Endpoint,org.apache.cxf.transport.Conduit)",
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl:void resend(org.apache.cxf.transport.Conduit,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.soap.RMSoapInterceptor:void encode(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.rm.RMProperties)",
            "org.apache.cxf.ws.rm.soap.RMSoapInterceptor:org.apache.cxf.ws.rm.RMProperties unmarshalRMProperties(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.rm.soap.RMSoapInterceptor:void discardRMHeaders(java.util.List)",
            "org.apache.cxf.ws.rm.RMEndpoint:void setPolicies()",
            "org.apache.cxf.ws.rm.RMEndpoint:java.lang.Object getUsingAddressing(java.util.List)",
            "org.apache.cxf.ws.rm.RMEndpoint:void shutdown()",
            "org.apache.cxf.ws.rm.persistence.jdbc.RMTxStore:void removeMessages(org.apache.cxf.ws.rm.Identifier,java.util.Collection,boolean)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void <init>(java.util.SortedSet)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void add(java.util.Collection,boolean)",
            "org.apache.cxf.workqueue.WorkQueueManagerImpl:void shutdown(boolean)",
            "org.apache.cxf.workqueue.WorkQueueManagerImpl:void run()",
            "org.apache.cxf.databinding.AbstractDataBinding:void setNamespaceMap(java.util.Map)",
            "org.apache.cxf.databinding.AbstractDataBinding:void checkNamespaceMap(java.util.Map)",
            "org.apache.cxf.databinding.stax.StaxDataBindingFeature:void removeInterceptor(java.util.List,java.lang.String)",
            "org.apache.cxf.wsdl.JAXBExtensionHelper$1:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils$SchemaLSResourceResolver:org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.namespace.QName getServiceName(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:java.lang.String getPortName(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:void setPortName(org.apache.cxf.ws.addressing.EndpointReferenceType,java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.namespace.QName getInterfaceName(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:void setMetadata(org.apache.cxf.ws.addressing.EndpointReferenceType,java.util.List)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.wsdl.Definition getWSDLDefinition(org.apache.cxf.wsdl.WSDLManager,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.validation.Schema createSchema(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.wsdl.Port getPort(org.apache.cxf.wsdl.WSDLManager,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:org.apache.cxf.transport.MultiplexDestination getMatchingMultiplexDestination(javax.xml.namespace.QName,java.lang.String,org.apache.cxf.Bus)",
            "org.apache.cxf.io.CachedOutputStream:void flush()",
            "org.apache.cxf.io.CachedOutputStream:void lockOutputStream()",
            "org.apache.cxf.io.CachedOutputStream:void close()",
            "org.apache.cxf.service.model.BindingOperationInfo:void <init>(org.apache.cxf.service.model.BindingInfo,org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:int getMessagePartIndex(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePartByIndex(int)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePart(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePart(int)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperation(org.apache.cxf.message.Exchange,java.lang.String)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperationForWrapperElement(org.apache.cxf.message.Exchange,javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.SchemaInfo getSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.ServiceModelUtil:java.util.List getOperationInputPartNames(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.EndpointInfo findBestEndpointInfo(javax.xml.namespace.QName,java.util.List)",
            "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.BindingInfo getBinding(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.EndpointInfo getEndpoint(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.ServiceInfo:void initMessagesMap()",
            "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.SchemaInfo getSchema(java.lang.String)",
            "org.apache.cxf.service.model.MessageInfo:java.util.Map getMessagePartsMap()",
            "org.apache.cxf.service.model.MessageInfo:java.util.List getOrderedParts(java.util.List)",
            "org.apache.cxf.service.model.BindingInfo:org.apache.cxf.service.model.BindingOperationInfo buildOperation(javax.xml.namespace.QName,java.lang.String,java.lang.String)",
            "org.apache.cxf.service.model.BindingInfo:org.apache.cxf.service.model.BindingOperationInfo getOperation(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.ServiceImpl:org.apache.cxf.service.model.EndpointInfo getEndpointInfo(javax.xml.namespace.QName)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void fillInSchemaCrossreferences()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createEndpoints()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeServiceConfigurations()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromWSDL(java.lang.String)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromClass()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean hasWrappedMethods(org.apache.cxf.service.model.InterfaceInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void validateServiceModel()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.InterfaceInfo getInterfaceInfo()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeWSDLOperations()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void setFaultClassInfo(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.OperationInfo createOperation(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.InterfaceInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeWrappedSchema(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void checkForElement(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createBareMessage(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.OperationInfo,boolean)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isExistImport(org.apache.ws.commons.schema.XmlSchema,java.lang.String)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.ws.commons.schema.XmlSchemaElement getExistingSchemaElement(org.apache.ws.commons.schema.XmlSchema,javax.xml.namespace.QName)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createWrappedMessageSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.AbstractMessageContainer,org.apache.cxf.service.model.AbstractMessageContainer,org.apache.ws.commons.schema.XmlSchema,javax.xml.namespace.QName)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.SchemaInfo getOrCreateSchema(org.apache.cxf.service.model.ServiceInfo,java.lang.String,boolean)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createInputWrappedMessageParts(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,org.apache.cxf.service.model.MessageInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createOutputWrappedMessageParts(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,org.apache.cxf.service.model.MessageInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getEndpointName(boolean)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getServiceName()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getServiceNamespace()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getInterfaceName()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isValidMethod(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isHolder(java.lang.Class,java.lang.reflect.Type)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.reflect.Type getHolderType(java.lang.Class,java.lang.reflect.Type)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isWrapped(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isOutParam(java.lang.reflect.Method,int)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isInParam(java.lang.reflect.Method,int)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getInputMessageName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName createOutputMessageName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean hasOutMessage(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getFaultName(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.Class,java.lang.Class)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getAction(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isHeader(java.lang.reflect.Method,int)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getOperationName(org.apache.cxf.service.model.InterfaceInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isAsync(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getInPartName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getInParameterName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getOutParameterName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getOutPartName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.Class getResponseWrapper(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getResponseWrapperClassName(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.Class getRequestWrapper(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getRequestWrapperClassName(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isWrapperPartQualified(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isWrapperPartNillable(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:long getWrapperPartMaxOccurs(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:long getWrapperPartMinOccurs(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getWsdlURL()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isWrapped()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getStyle()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isRPC(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.DefaultServiceConfiguration:java.lang.Boolean isOperation(java.lang.reflect.Method)",
            "org.apache.cxf.service.ServiceModelVisitor:void walk()",
            "org.apache.cxf.service.ServiceModelVisitor:void visitOperation(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.binding.AbstractBindingFactory:void registerWithBindingManager()",
            "org.apache.cxf.binding.AbstractBindingFactory:org.apache.cxf.service.model.BindingInfo initializeBindingInfo(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding,org.apache.cxf.service.model.BindingInfo)",
            "org.apache.cxf.binding.AbstractBindingFactory:void copyExtensors(org.apache.cxf.service.model.AbstractPropertiesHolder,javax.wsdl.extensions.ElementExtensible,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:org.apache.cxf.service.model.BindingInfo createBindingInfo(org.apache.cxf.service.model.ServiceInfo,java.lang.String,java.lang.Object)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:void createSoapBinding(org.apache.cxf.binding.soap.model.SoapBindingInfo)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:void setupHeaders(org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.service.model.BindingMessageInfo,org.apache.cxf.service.model.BindingMessageInfo,org.apache.cxf.service.model.MessageInfo,org.apache.cxf.binding.soap.SoapBindingConfiguration)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:org.apache.cxf.binding.Binding createBinding(org.apache.cxf.service.model.BindingInfo)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:void addOutOfBandParts(org.apache.cxf.service.model.BindingOperationInfo,javax.wsdl.Message,org.apache.cxf.common.xmlschema.SchemaCollection,boolean,java.lang.String)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:void buildMessage(org.apache.cxf.service.model.MessageInfo,javax.wsdl.Message,org.apache.cxf.common.xmlschema.SchemaCollection,int,java.lang.String)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:org.apache.cxf.service.model.BindingInfo createBindingInfo(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding,java.lang.String)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:void initializeMessage(org.apache.cxf.binding.soap.model.SoapBindingInfo,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.service.model.BindingMessageInfo)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:java.util.List handleMimePart(javax.wsdl.extensions.mime.MIMEPart,java.util.List,org.apache.cxf.service.model.MessageInfo,org.apache.cxf.service.model.BindingMessageInfo,java.util.List,java.util.List)",
            "org.apache.cxf.binding.soap.interceptor.ReadHeadersInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.Soap12FaultOutInterceptor$Soap12FaultOutInterceptorInternal:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.RPCOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.soap.interceptor.SoapActionInInterceptor:void getAndSetOperation(org.apache.cxf.binding.soap.SoapMessage,java.lang.String)",
            "org.apache.cxf.binding.soap.interceptor.SoapHeaderOutFilterInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.RPCInInterceptor:org.apache.cxf.service.model.BindingOperationInfo getOperation(org.apache.cxf.message.Message,javax.xml.namespace.QName)",
            "org.apache.cxf.binding.soap.interceptor.RPCInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor:void writeSoapEnvelopeStart(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor:boolean handleHeaderPart(boolean,org.apache.cxf.binding.soap.SoapMessage,java.lang.String)",
            "org.apache.cxf.binding.soap.interceptor.MustUnderstandInterceptor:void initServiceSideInfo(java.util.Set,org.apache.cxf.binding.soap.SoapMessage,java.util.Set)",
            "org.apache.cxf.binding.soap.interceptor.MustUnderstandInterceptor:void buildMustUnderstandHeaders(java.util.Set,org.apache.cxf.binding.soap.SoapMessage,java.util.Set,java.util.Set)",
            "org.apache.cxf.binding.soap.interceptor.MustUnderstandInterceptor:void checkUnderstand(java.util.Set,java.util.Set,java.util.Set)",
            "org.apache.cxf.binding.soap.interceptor.Soap11FaultOutInterceptor$Soap11FaultOutInterceptorInternal:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.EndpointSelectionInterceptor:org.apache.cxf.endpoint.Endpoint selectEndpoint(org.apache.cxf.message.Message,java.util.Set)",
            "org.apache.cxf.binding.soap.interceptor.MustUnderstandInterceptor$UltimateReceiverMustUnderstandInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.SoapHeaderInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.soap.HeaderUtil:java.util.Set getHeaderQNames(org.apache.cxf.service.model.BindingMessageInfo)",
            "org.apache.cxf.binding.soap.SoapTransportFactory:org.apache.cxf.service.model.EndpointInfo createEndpointInfo(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.BindingInfo,javax.wsdl.Port)",
            "org.apache.cxf.binding.soap.SoapTransportFactory:void registerWithBindingManager()",
            "org.apache.cxf.binding.soap.SoapMessage:boolean hasHeader(javax.xml.namespace.QName)",
            "org.apache.cxf.binding.soap.SoapMessage:org.apache.cxf.headers.Header getHeader(javax.xml.namespace.QName)",
            "org.apache.cxf.binding.soap.saaj.SAAJInInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.saaj.SAAJOutInterceptor$SAAJOutEndingInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.model.SoapBindingInfo:org.apache.cxf.service.model.OperationInfo getOperationByAction(java.lang.String)",
            "org.apache.cxf.binding.xml.interceptor.XMLMessageInInterceptor:org.apache.cxf.service.model.BindingOperationInfo getBindingOperationInfo(boolean,javax.xml.namespace.QName,org.apache.cxf.service.model.BindingInfo,javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.binding.xml.XMLFormatValidator:boolean checkXMLBindingFormat()",
            "org.apache.cxf.binding.xml.XMLFormatValidator:boolean checkXMLFormat(org.apache.cxf.service.model.BindingInfo)",
            "org.apache.cxf.binding.xml.XMLFormatValidator:boolean findXMLFormatRootNode(java.util.Iterator,org.apache.cxf.service.model.BindingOperationInfo,java.lang.String)",
            "org.apache.cxf.binding.xml.XMLBindingFactory:org.apache.cxf.service.model.BindingInfo createBindingInfo(org.apache.cxf.service.model.ServiceInfo,java.lang.String,java.lang.Object)",
            "org.apache.cxf.clustering.AbstractStaticFailoverStrategy:java.util.List getAlternateEndpoints(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.tools.common.Tag:java.lang.String formatAttribute(org.apache.cxf.tools.common.Tag)",
            "org.apache.cxf.tools.common.Tag:java.lang.String formatTag(org.apache.cxf.tools.common.Tag,int)",
            "org.apache.cxf.tools.common.Tag:boolean equals(java.lang.Object)",
            "org.apache.cxf.tools.common.ClassUtils:void compile(org.apache.cxf.tools.common.ToolContext)",
            "org.apache.cxf.tools.common.ToolContext:void addParameters(java.util.Map)",
            "org.apache.cxf.tools.common.VelocityGenerator:void doWrite(java.lang.String,java.io.Writer)",
            "org.apache.cxf.tools.common.toolspec.ToolSpec:boolean isValidInputStream(java.lang.String)",
            "org.apache.cxf.tools.common.toolspec.ToolSpec:java.util.List getInstreamIds()",
            "org.apache.cxf.tools.common.toolspec.ToolSpec:java.util.List getOutstreamIds()",
            "org.apache.cxf.tools.common.toolspec.ToolSpec:java.lang.String getStreamRefName(java.lang.String)",
            "org.apache.cxf.tools.common.toolspec.parser.CommandDocument:java.lang.String[] getParameters(java.lang.String)",
            "org.apache.cxf.tools.common.toolspec.parser.CommandDocument:java.lang.String[] getParameterNames()",
            "org.apache.cxf.tools.common.toolspec.parser.Form:void <init>(org.w3c.dom.Element)",
            "org.apache.cxf.tools.common.toolspec.parser.Option:boolean accept(org.apache.cxf.tools.common.toolspec.parser.TokenInputStream,org.w3c.dom.Element,org.apache.cxf.tools.common.toolspec.parser.ErrorVisitor)",
            "org.apache.cxf.tools.common.toolspec.parser.OptionGroup:void <init>(org.w3c.dom.Element)",
            "org.apache.cxf.tools.common.toolspec.parser.OptionGroup:boolean accept(org.apache.cxf.tools.common.toolspec.parser.TokenInputStream,org.w3c.dom.Element,org.apache.cxf.tools.common.toolspec.parser.ErrorVisitor)",
            "org.apache.cxf.tools.common.toolspec.parser.OptionGroup:boolean isSatisfied(org.apache.cxf.tools.common.toolspec.parser.ErrorVisitor)",
            "org.apache.cxf.tools.common.toolspec.parser.ErrorVisitor:java.lang.String toString()",
            "org.apache.cxf.tools.common.toolspec.parser.CommandLineParser:org.apache.cxf.tools.common.toolspec.parser.CommandDocument parseArguments(java.lang.String[])",
            "org.apache.cxf.tools.common.ProcessorTestBase:boolean assertXmlEquals(java.io.File,java.io.File,java.util.List)",
            "org.apache.cxf.tools.common.ProcessorTestBase:void assertAttributesEquals(javax.xml.namespace.QName,java.util.Map,java.util.Map,java.util.Collection)",
            "org.apache.cxf.tools.common.ProcessorTestBase:void assertTagEquals(org.apache.cxf.tools.common.Tag,org.apache.cxf.tools.common.Tag,java.util.List,java.util.List)",
            "org.apache.cxf.tools.common.ProcessorTestBase:org.apache.cxf.tools.common.Tag getFromSource(org.apache.cxf.tools.common.Tag,org.apache.cxf.tools.common.Tag)",
            "org.apache.cxf.tools.common.model.JAnnotation:java.util.Set getImports()",
            "org.apache.cxf.tools.common.model.JAnnotation:org.apache.cxf.tools.common.model.JAnnotationElement getElementByName(java.lang.String)",
            "org.apache.cxf.tools.common.model.JavaMethod:java.lang.String getSignature()",
            "org.apache.cxf.tools.common.model.JavaMethod:void addAnnotation(java.lang.String,org.apache.cxf.tools.common.model.JAnnotation)",
            "org.apache.cxf.tools.common.model.JavaMethod:java.util.List getParameterList(boolean)",
            "org.apache.cxf.tools.common.model.JavaInterface:void addAnnotation(org.apache.cxf.tools.common.model.JAnnotation)",
            "org.apache.cxf.tools.common.model.JavaInterface:void addImports(java.util.Collection)",
            "org.apache.cxf.tools.common.model.JavaInterface:java.lang.String toString()",
            "org.apache.cxf.tools.common.model.JavaField:void addAnnotation(org.apache.cxf.tools.common.model.JAnnotation)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:boolean isSOAPBinding(javax.wsdl.Binding)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:java.lang.String getBindingStyle(javax.wsdl.Binding)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapOperation getSoapOperation(java.util.List)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:java.lang.String getSOAPOperationStyle(javax.wsdl.BindingOperation)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapBody getBindingInputSOAPBody(javax.wsdl.BindingOperation)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapBody getBindingOutputSOAPBody(javax.wsdl.BindingOperation)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapBody getSoapBody(java.util.List)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:java.util.List getSoapHeaders(java.util.List)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapHeader getBindingInputSOAPHeader(javax.wsdl.BindingOperation)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapHeader getBindingOutputSOAPHeader(javax.wsdl.BindingOperation)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapBinding getSoapBinding(java.util.List)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:java.util.List getBindingOperationSoapFaults(javax.wsdl.BindingOperation)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:boolean isMixedStyle(javax.wsdl.Binding)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:java.lang.String getCanonicalBindingStyle(javax.wsdl.Binding)",
            "org.apache.cxf.buslifecycle.CXFBusLifeCycleManager:void initComplete()",
            "org.apache.cxf.buslifecycle.CXFBusLifeCycleManager:void preShutdown()",
            "org.apache.cxf.buslifecycle.CXFBusLifeCycleManager:void postShutdown()",
            "org.apache.cxf.wsdl11.SchemaUtil:void getSchemas(javax.wsdl.Definition,org.apache.cxf.common.xmlschema.SchemaCollection,java.util.List)",
            "org.apache.cxf.wsdl11.SchemaUtil:void extractSchema(javax.wsdl.Definition,org.apache.cxf.common.xmlschema.SchemaCollection,java.util.List)",
            "org.apache.cxf.wsdl11.SchemaUtil:void parseImports(javax.wsdl.Definition,java.util.List)",
            "org.apache.cxf.wsdl11.SchemaUtil:void getSchemaList(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.SchemaUtil:void addSchema(java.lang.String,javax.wsdl.extensions.schema.Schema)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void parseWSDL(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:java.util.Collection getImports(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void parseImports(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void registerWSDLExtensibilityPlugins(javax.wsdl.extensions.ExtensionRegistry)",
            "org.apache.cxf.wsdl11.WSDLServiceUtils:org.apache.cxf.binding.BindingFactory getBindingFactory(javax.wsdl.Binding,org.apache.cxf.Bus,java.lang.StringBuffer)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:javax.wsdl.Definition build(java.util.Map)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addExtensibilityElements(javax.wsdl.extensions.ElementExtensible,java.util.List)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addExtensibilityAttributes(javax.wsdl.extensions.AttributeExtensible,java.util.Map)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildTypes(java.util.Collection,java.util.Map,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBinding(java.util.Collection,java.util.Collection)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBindingOperation(javax.wsdl.Definition,javax.wsdl.Binding,java.util.Collection)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBindingFault(javax.wsdl.Definition,javax.wsdl.BindingOperation,java.util.Collection)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildService(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildPortTypeOperation(javax.wsdl.PortType,java.util.Collection,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildMessage(javax.wsdl.Message,org.apache.cxf.service.model.AbstractMessageContainer,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void registerInitialExtensions(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:org.apache.cxf.service.model.ServiceSchemaInfo getSchemasForDefinition(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void putSchemasForDefinition(javax.wsdl.Definition,org.apache.cxf.service.model.ServiceSchemaInfo)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void removeDefinition(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void copyExtensors(org.apache.cxf.service.model.AbstractPropertiesHolder,java.util.List)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildMockServices(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition,javax.wsdl.Service,javax.xml.namespace.QName,org.apache.cxf.service.model.DescriptionInfo)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void parseImports(javax.wsdl.Definition,java.util.List)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.EndpointInfo buildEndpoint(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.BindingInfo,javax.wsdl.Port)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.BindingInfo buildBinding(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildInterface(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.PortType)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildInterfaceOperation(org.apache.cxf.service.model.InterfaceInfo,javax.wsdl.Operation)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildMessage(org.apache.cxf.service.model.AbstractMessageContainer,javax.wsdl.Message)",
            "org.apache.cxf.wsdl11.WSDLServiceFactory:org.apache.cxf.service.Service create()",
            "org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor:void insertConstructorArg(org.springframework.beans.factory.config.ConstructorArgumentValues,java.lang.Object)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void activateViaNS(java.lang.String)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadFragment(java.io.InputStream)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void processExtension(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadAndRegister(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:java.lang.Object getExtension(java.lang.String,java.lang.Class)",
            "org.apache.cxf.bus.extension.Extension:java.lang.String toString()",
            "org.apache.cxf.bus.CXFBusImpl:void initializeFeatures()",
            "org.apache.cxf.attachment.LazyDataSource:void load()",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:boolean containsValue(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:javax.activation.DataHandler get(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:javax.activation.DataHandler remove(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:void putAll(java.util.Map)",
            "org.apache.cxf.attachment.AttachmentDeserializer:void cacheStreamedAttachments()",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$1$1:boolean hasNext()",
            "org.apache.cxf.attachment.AttachmentSerializer:void writeAttachments()",
            "org.apache.cxf.attachment.AttachmentUtil:java.util.Map getDHMap(java.util.Collection)",
            "org.apache.cxf.attachment.AttachmentUtil:boolean isTypeSupported(java.lang.String,java.util.List)",
            "org.apache.cxf.attachment.LazyAttachmentCollection:boolean isEmpty()",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$3$1:boolean hasNext()",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$2$1:boolean hasNext()",
            "org.apache.cxf.frontend.ClientFactoryBean:void applyFeatures()",
            "org.apache.cxf.frontend.SimpleMethodDispatcher:org.apache.cxf.service.model.BindingOperationInfo getBindingOperation(java.lang.reflect.Method,org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory:org.apache.cxf.service.model.BindingInfo createBindingInfo()",
            "org.apache.cxf.frontend.ServerFactoryBean:void initializeServiceFactory()",
            "org.apache.cxf.frontend.ServerFactoryBean:void applyFeatures()",
            "org.apache.cxf.aegis.DatabindingException:java.lang.String getActualMessage()",
            "org.apache.cxf.aegis.util.jdom.StaxSerializer:void writeDocument(org.jdom.Document,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.aegis.util.jdom.StaxSerializer:void writeElement(org.jdom.Element,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.aegis.util.jdom.StaxSerializer:boolean isDeclared(javax.xml.stream.XMLStreamWriter,java.lang.String,java.lang.String)",
            "org.apache.cxf.aegis.util.jdom.StaxBuilder:void buildTree(org.jdom.JDOMFactory,javax.xml.stream.XMLStreamReader,org.jdom.Document)",
            "org.apache.cxf.aegis.util.stax.JDOMStreamReader:void setupNamespaces(org.jdom.Element)",
            "org.apache.cxf.aegis.util.stax.JDOMNamespaceContext:java.lang.String rawGetPrefix(org.jdom.Element,java.lang.String)",
            "org.apache.cxf.aegis.util.stax.JDOMNamespaceContext:void rawGetPrefixes(org.jdom.Element,java.lang.String,java.util.List)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void initialize(org.apache.cxf.service.Service)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void initializeOperation(org.apache.cxf.service.Service,org.apache.cxf.aegis.type.TypeMapping,org.apache.cxf.service.model.OperationInfo,java.util.Set)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void initializeOperationTypes(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void initializeMessage(org.apache.cxf.service.Service,org.apache.cxf.aegis.type.TypeMapping,org.apache.cxf.service.model.AbstractMessageContainer,int,java.util.Set)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void initializeMessageTypes(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.AbstractMessageContainer,int)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void addDependencies(java.util.Set,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void createSchemas(org.apache.cxf.service.Service,java.util.Set)",
            "org.apache.cxf.aegis.AegisContext:void processRootTypes()",
            "org.apache.cxf.aegis.type.basic.XMLBeanTypeInfo:org.w3c.dom.Element getPropertyElement(java.lang.String)",
            "org.apache.cxf.aegis.type.basic.BeanType:void writeObjectInternal(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,boolean)",
            "org.apache.cxf.aegis.type.basic.BeanType:java.util.Set getDependencies()",
            "org.apache.cxf.aegis.type.basic.BeanType:void writeSchema(org.apache.ws.commons.schema.XmlSchema)",
            "org.apache.cxf.aegis.type.basic.BeanTypeInfo:boolean containsPropertyName(java.util.List,java.lang.String)",
            "org.apache.cxf.aegis.type.mtom.AttachmentUtil:org.apache.cxf.message.Attachment getAttachment(java.lang.String,java.util.Collection)",
            "org.apache.cxf.aegis.type.encoded.ArrayTypeInfo:void <init>(javax.xml.namespace.NamespaceContext,java.lang.String,java.lang.String)",
            "org.apache.cxf.aegis.type.encoded.ArrayTypeInfo:java.lang.String toString()",
            "org.apache.cxf.aegis.type.encoded.SoapArrayType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.SoapArrayType:java.lang.Object makeArray(java.util.List,java.util.List,java.lang.Class)",
            "org.apache.cxf.aegis.type.encoded.TrailingBlocks:java.util.List writeBlocks(org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.SoapRefRegistry:void addInstance(java.lang.String,java.lang.Object)",
            "org.apache.cxf.aegis.type.XMLTypeCreator:org.w3c.dom.Element getBestMatch(org.w3c.dom.Element,java.lang.reflect.Method,java.util.List)",
            "org.apache.cxf.aegis.type.collection.MapType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.collection.CollectionType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.jaxws.JaxWsProxyFactoryBean:boolean needWrapperClassInterceptor(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.jaxws.JaxWsProxyFactoryBean:void buildHandlerChain(org.apache.cxf.jaxws.JaxWsClientProxy)",
            "org.apache.cxf.jaxws.handler.HandlerResolverImpl:java.util.List createHandlerChain(javax.xml.ws.handler.PortInfo)",
            "org.apache.cxf.jaxws.handler.HandlerChainInvoker:void <init>(java.util.List,boolean)",
            "org.apache.cxf.jaxws.handler.HandlerChainInvoker:boolean invokeHandleFault(java.util.List,javax.xml.ws.handler.MessageContext)",
            "org.apache.cxf.jaxws.handler.HandlerChainInvoker:boolean invokeHandleMessage(java.util.List,javax.xml.ws.handler.MessageContext)",
            "org.apache.cxf.jaxws.handler.HandlerChainBuilder:java.util.List buildHandlerChainFromConfiguration(java.util.List)",
            "org.apache.cxf.jaxws.handler.HandlerChainBuilder:java.util.List sortHandlers(java.util.List)",
            "org.apache.cxf.jaxws.handler.HandlerChainBuilder:void configureHandler(javax.xml.ws.handler.Handler,org.apache.cxf.jaxws.javaee.PortComponentHandlerType)",
            "org.apache.cxf.jaxws.handler.soap.SOAPMessageContextImpl:java.lang.Object[] getHeaders(javax.xml.namespace.QName,javax.xml.bind.JAXBContext,boolean)",
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerInterceptor:java.util.Set getUnderstoodHeaders()",
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerInterceptor:javax.xml.ws.handler.MessageContext createProtocolMessageContext(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerFaultInInterceptor:java.util.Set getUnderstoodHeaders()",
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerFaultOutInterceptor:java.util.Set getUnderstoodHeaders()",
            "org.apache.cxf.jaxws.support.JaxWsEndpointImpl:boolean hasUsingAddressing(java.util.List)",
            "org.apache.cxf.jaxws.support.JaxWsEndpointImpl:boolean addressingRequired(java.util.List)",
            "org.apache.cxf.jaxws.support.JaxWsEndpointImpl:javax.xml.ws.soap.AddressingFeature getAddressingFeature()",
            "org.apache.cxf.jaxws.support.JaxWsEndpointImpl:org.apache.cxf.ws.addressing.WSAddressingFeature getWSAddressingFeature()",
            "org.apache.cxf.jaxws.support.JaxWsEndpointImpl:javax.xml.ws.soap.MTOMFeature getMTOMFeature()",
            "org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean:void initializeWSDLOperationsForProvider()",
            "org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean:org.apache.cxf.service.model.FaultInfo getFaultInfo(org.apache.cxf.service.model.OperationInfo,java.lang.Class)",
            "org.apache.cxf.jaxws.support.JaxWsImplementorInfo:java.lang.String getWsdlLocation()",
            "org.apache.cxf.jaxws.support.JaxWsImplementorInfo:javax.xml.namespace.QName getInterfaceName()",
            "org.apache.cxf.jaxws.support.JaxWsImplementorInfo:java.lang.String getImplementorClassName()",
            "org.apache.cxf.jaxws.WrapperClassGenerator:java.util.Set generate()",
            "org.apache.cxf.jaxws.WrapperClassGenerator:void createWrapperClass(org.apache.cxf.service.model.MessagePartInfo,org.apache.cxf.service.model.MessageInfo,org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,boolean)",
            "org.apache.cxf.jaxws.WrapperClassGenerator:void addJAXBAnnotations(org.objectweb.asm.FieldVisitor,java.util.List)",
            "org.apache.cxf.jaxws.JaxWsClientProxy:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])",
            "org.apache.cxf.jaxws.ServiceImpl:void initializePorts()",
            "org.apache.cxf.jaxws.ServiceImpl:org.apache.cxf.service.factory.AbstractServiceFactoryBean createDispatchService(org.apache.cxf.databinding.DataBinding)",
            "org.apache.cxf.jaxws.ServiceImpl:java.lang.Object getPort(org.apache.cxf.ws.addressing.EndpointReferenceType,java.lang.Class,javax.xml.ws.WebServiceFeature[])",
            "org.apache.cxf.jaxws.ServiceImpl:javax.xml.ws.Dispatch createDispatch(javax.xml.namespace.QName,java.lang.Class,javax.xml.ws.Service$Mode,javax.xml.ws.WebServiceFeature[])",
            "org.apache.cxf.jaxws.ServiceImpl:javax.xml.ws.Dispatch createDispatch(javax.xml.namespace.QName,javax.xml.bind.JAXBContext,javax.xml.ws.Service$Mode,javax.xml.ws.WebServiceFeature[])",
            "org.apache.cxf.jaxws.spi.ProviderImpl:javax.xml.ws.wsaddressing.W3CEndpointReference createW3CEndpointReference(java.lang.String,javax.xml.namespace.QName,javax.xml.namespace.QName,java.util.List,java.lang.String,java.util.List)",
            "org.apache.cxf.jaxws.JaxWsServerFactoryBean:void buildHandlerChain()",
            "org.apache.cxf.jaxws.DispatchImpl:void addInvokeOperation(boolean)",
            "org.apache.cxf.jaxws.interceptors.MessageModeInInterceptor$MultiPartDataSource:void nextCurrent()",
            "org.apache.cxf.jaxws.interceptors.WebFaultOutInterceptor:org.apache.cxf.service.model.MessagePartInfo getFaultMessagePart(javax.xml.namespace.QName,org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.jaxws.interceptors.HolderOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.interceptors.SwAInInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.jaxws.interceptors.WrapperClassOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.interceptors.WrapperClassOutInterceptor:org.apache.cxf.databinding.WrapperHelper createWrapperHelper(org.apache.cxf.databinding.WrapperCapableDatabinding,org.apache.cxf.service.model.MessageInfo,org.apache.cxf.service.model.MessageInfo,java.lang.Class)",
            "org.apache.cxf.jaxws.interceptors.HolderInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.interceptors.WrapperClassInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.interceptors.WrapperClassInInterceptor:org.apache.cxf.databinding.WrapperHelper createWrapperHelper(org.apache.cxf.databinding.WrapperCapableDatabinding,org.apache.cxf.service.model.MessageInfo,org.apache.cxf.service.model.MessageInfo,java.lang.Class)",
            "org.apache.cxf.jaxws.interceptors.SwAOutInterceptor:void processAttachments(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.binding.soap.model.SoapBodyInfo)",
            "org.apache.cxf.jaxws.binding.http.HTTPBindingImpl:void validate()",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:void copyScoped(java.util.Map)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:void clear()",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:java.util.Set keySet()",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:java.util.Set entrySet()",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:void putAll(java.util.Map)",
            "org.apache.cxf.jaxws.AbstractJAXWSMethodInvoker:java.util.Map removeHandlerProperties(org.apache.cxf.jaxws.context.WrappedMessageContext)",
            "org.apache.cxf.jaxws.AbstractJAXWSMethodInvoker:void addHandlerProperties(org.apache.cxf.jaxws.context.WrappedMessageContext,java.util.Map)",
            "org.apache.cxf.jaxws.AbstractJAXWSMethodInvoker:void updateWebServiceContext(org.apache.cxf.message.Exchange,javax.xml.ws.handler.MessageContext)",
            "org.apache.cxf.xmlbeans.XmlBeansDataBinding:void initialize(org.apache.cxf.service.Service)"
        ]
    },
    "org.apache.cxf.attachment.LazyAttachmentCollection:void loadAll()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.LazyAttachmentCollection:int size()",
            "org.apache.cxf.attachment.LazyAttachmentCollection:java.lang.Object[] toArray()",
            "org.apache.cxf.attachment.LazyAttachmentCollection:java.lang.Object[] toArray(java.lang.Object[])"
        ]
    },
    "org.apache.cxf.jaxws.handler.AbstractJAXWSHandlerInterceptor:void setupBindingOperationInfo(org.apache.cxf.message.Exchange,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerInterceptor:javax.xml.ws.handler.MessageContext createProtocolMessageContext(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.jaxws.handler.logical.LogicalHandlerInInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.attachment.AttachmentUtil:org.apache.cxf.message.Attachment createAttachment(java.io.InputStream,javax.mail.internet.InternetHeaders)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.AttachmentDeserializer:org.apache.cxf.message.Attachment createAttachment(javax.mail.internet.InternetHeaders)"
        ]
    },
    "org.apache.cxf.tools.common.ProcessorTestBase:void assertFileEquals(java.io.File,java.io.File)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.io.CachedOutputStream:void writeCacheTo(java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection retransmit(java.net.HttpURLConnection,java.net.URL,org.apache.cxf.message.Message,org.apache.cxf.io.CacheAndWriteOutputStream)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void doService(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.cxf.io.CachedOutputStream:void copyStream(java.io.InputStream,java.io.OutputStream,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.helpers.IOUtils:java.lang.String toString(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.interceptor.StaxInInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.io.CachedOutputStream:byte[] getBytes()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection retransmit(java.net.HttpURLConnection,java.net.URL,org.apache.cxf.message.Message,org.apache.cxf.io.CacheAndWriteOutputStream)",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleRetransmits()",
            "org.apache.cxf.transport.jms.JMSOutputStream:java.lang.Object retrieveRequestFromStream(boolean)",
            "org.apache.cxf.ws.rm.RetransmissionCallback:void onClose(org.apache.cxf.io.CachedOutputStream)"
        ]
    },
    "org.apache.cxf.jaxws.interceptors.SwAInInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.interceptors.SwAInInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.common.util.ParamReader:void <init>(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.ParamReader:java.lang.String[] getParameterNamesFromDebugInfo(java.lang.reflect.Method)"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void registerWSDLExtensibilityPlugins(javax.wsdl.extensions.ExtensionRegistry)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void parseWSDL(java.lang.String)"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLManagerImpl:void registerInitialExtensions(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void registerInitialExtensions()"
        ]
    },
    "org.apache.cxf.catalog.CatalogWSDLLocator:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.AbstractWrapperWSDLLocator:void close()"
        ]
    },
    "org.apache.cxf.resource.URIResolver:void tryClasspath(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.resource.URIResolver:void <init>(java.lang.String,java.lang.String,java.lang.Class)",
            "org.apache.cxf.resource.URIResolver:void resolve(java.lang.String,java.lang.String,java.lang.Class)",
            "org.apache.cxf.resource.URIResolver:void tryFileSystem(java.lang.String,java.lang.String)",
            "org.apache.cxf.resource.URIResolver:void tryArchive(java.lang.String)"
        ]
    },
    "org.apache.cxf.version.Version:java.lang.String getCurrentVersion()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.tools.common.VelocityGenerator:void setCommonAttributes()"
        ]
    },
    "org.apache.cxf.version.Version:java.lang.String getName()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.tools.common.VelocityGenerator:void setCommonAttributes()"
        ]
    },
    "org.apache.cxf.version.Version:java.lang.String getCompleteVersionString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:void transferProtocolHeadersToURLConnection(org.apache.cxf.message.Message,java.net.URLConnection)",
            "org.apache.cxf.tools.common.AbstractCXFToolContainer:void outputVersion()",
            "org.apache.cxf.tools.common.VelocityGenerator:void setCommonAttributes()"
        ]
    },
    "org.apache.cxf.jaxb.JAXBDataBinding:org.apache.cxf.jaxb.JAXBDataBinding$CachedContextAndSchemas createJAXBContextAndSchemas(java.util.Set,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.JAXBDataBinding:void initialize(org.apache.cxf.service.Service)",
            "org.apache.cxf.jaxb.JAXBDataBinding:javax.xml.bind.JAXBContext createJAXBContext(java.util.Set,java.lang.String)"
        ]
    },
    "org.apache.cxf.transport.https.SSLUtils:javax.net.ssl.KeyManager[] getKeyStoreManagers(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.logging.Logger)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.https.SSLUtils:javax.net.ssl.TrustManager[] getTrustStoreManagers(boolean,java.lang.String,java.lang.String,java.lang.String,java.util.logging.Logger)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.security.trust.STSClient:org.apache.cxf.ws.security.tokenstore.SecurityToken createSecurityToken(org.w3c.dom.Element,byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.trust.STSClient:org.apache.cxf.ws.security.tokenstore.SecurityToken requestSecurityToken(java.lang.String,java.lang.String,java.lang.String,org.apache.cxf.ws.security.tokenstore.SecurityToken)"
        ]
    },
    "org.apache.cxf.ws.security.trust.STSClient:org.w3c.dom.Element decrypt(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.trust.STSClient:org.apache.cxf.ws.security.tokenstore.SecurityToken createSecurityToken(org.w3c.dom.Element,byte[])"
        ]
    },
    "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:org.apache.ws.security.components.crypto.Crypto getSignatureCrypto(org.apache.cxf.ws.security.policy.model.TokenWrapper)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.wss4j.policyhandlers.TransportBindingHandler:byte[] doIssuedTokenSignature(org.apache.cxf.ws.security.policy.model.Token,org.apache.cxf.ws.security.policy.model.SignedEncryptedParts,org.apache.cxf.ws.security.policy.model.TokenWrapper,org.apache.cxf.ws.security.tokenstore.SecurityToken)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:org.apache.ws.security.message.WSSecSignature getSignatureBuider(org.apache.cxf.ws.security.policy.model.TokenWrapper,org.apache.cxf.ws.security.policy.model.Token,boolean)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void doSymmSignature(org.apache.cxf.ws.security.policy.model.Token,org.apache.cxf.ws.security.tokenstore.SecurityToken,java.util.Vector,boolean)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.SymmetricBindingHandler:byte[] doSignature(java.util.Vector,org.apache.cxf.ws.security.policy.model.TokenWrapper,org.apache.cxf.ws.security.policy.model.Token,org.apache.cxf.ws.security.tokenstore.SecurityToken,boolean)"
        ]
    },
    "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:org.apache.ws.security.components.crypto.Crypto getEncryptionCrypto(org.apache.cxf.ws.security.policy.model.TokenWrapper)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AsymmetricBindingHandler:org.apache.ws.security.message.WSSecBase doEncryption(org.apache.cxf.ws.security.policy.model.TokenWrapper,java.util.Vector,boolean)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:org.apache.ws.security.message.WSSecEncryptedKey getEncryptedKeyBuilder(org.apache.cxf.ws.security.policy.model.TokenWrapper,org.apache.cxf.ws.security.policy.model.Token)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:org.apache.ws.security.message.WSSecSignature getSignatureBuider(org.apache.cxf.ws.security.policy.model.TokenWrapper,org.apache.cxf.ws.security.policy.model.Token,boolean)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.SymmetricBindingHandler:org.apache.ws.security.message.WSSecBase doEncryption(org.apache.cxf.ws.security.policy.model.TokenWrapper,org.apache.cxf.ws.security.tokenstore.SecurityToken,boolean,java.util.Vector,boolean)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.SymmetricBindingHandler:byte[] doSignature(java.util.Vector,org.apache.cxf.ws.security.policy.model.TokenWrapper,org.apache.cxf.ws.security.policy.model.Token,org.apache.cxf.ws.security.tokenstore.SecurityToken,boolean)"
        ]
    },
    "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:java.lang.String checkAsymetricBinding(org.apache.cxf.ws.policy.AssertionInfoMap,java.lang.String,org.apache.cxf.binding.soap.SoapMessage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:void computeAction(org.apache.cxf.binding.soap.SoapMessage,org.apache.ws.security.handler.RequestData)"
        ]
    },
    "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:java.lang.String checkSymetricBinding(org.apache.cxf.ws.policy.AssertionInfoMap,java.lang.String,org.apache.cxf.binding.soap.SoapMessage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:void computeAction(org.apache.cxf.binding.soap.SoapMessage,org.apache.ws.security.handler.RequestData)"
        ]
    },
    "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.validation.Schema getSchema(org.apache.cxf.service.model.ServiceInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:void setSchemaInMessage(org.apache.cxf.service.Service,org.apache.cxf.message.Message,org.apache.cxf.databinding.DataReader)",
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:void setSchemaOutMessage(org.apache.cxf.service.Service,org.apache.cxf.message.Message,org.apache.cxf.databinding.DataWriter)"
        ]
    },
    "org.apache.cxf.transport.jms.JMSOutputStream:java.lang.Object retrieveRequestFromStream(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.jms.JMSOutputStream:void doClose()"
        ]
    },
    "org.apache.cxf.io.CachedOutputStream:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:java.util.List enumeratorValues(org.apache.ws.commons.schema.XmlSchemaSimpleType)",
            "org.apache.cxf.common.logging.Log4jLogger$HandlerWrapper:void append(org.apache.log4j.spi.LoggingEvent)",
            "org.apache.cxf.common.util.PackageUtils:java.lang.String combine(java.util.List,char)",
            "org.apache.cxf.configuration.spring.SpringBeanMap:void processBeans(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.message.MessageUtils:boolean isTrue(java.lang.Object)",
            "org.apache.cxf.endpoint.ClientImpl:boolean isThreadLocalRequestContext()",
            "org.apache.cxf.ws.addressing.ContextUtils:java.lang.String getAction(org.apache.cxf.service.model.Extensible)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationOutInterceptor:void renewToken(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.ws.security.tokenstore.SecurityToken,org.apache.cxf.ws.security.policy.model.SecureConversationToken)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.policy.interceptors.IssuedTokenInterceptorProvider$IssuedTokenOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationTokenInterceptorProvider:java.lang.String setupClient(org.apache.cxf.ws.security.trust.STSClient,org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.ws.security.policy.model.SecureConversationToken,boolean)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:java.lang.String checkAsymetricBinding(org.apache.cxf.ws.policy.AssertionInfoMap,java.lang.String,org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:java.lang.String checkSymetricBinding(org.apache.cxf.ws.policy.AssertionInfoMap,java.lang.String,org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.wsdl.AbstractWSDLPlugin:java.lang.String getOption(java.util.Map,java.lang.String)",
            "org.apache.cxf.tools.common.toolspec.parser.ErrorVisitor:java.lang.String toString()",
            "org.apache.cxf.tools.util.URIParserUtil:java.lang.String combine(java.util.List,char)",
            "org.apache.cxf.aegis.xml.jdom.JDOMWriter:void writeValue(java.lang.Object)",
            "org.apache.cxf.aegis.xml.jdom.JDOMWriter:void writeValue(java.lang.Object,java.lang.String,java.lang.String)",
            "org.apache.cxf.aegis.xml.jdom.AttributeWriter:void writeValue(java.lang.Object)",
            "org.apache.cxf.aegis.xml.stax.AttributeWriter:void writeValue(java.lang.Object)",
            "org.apache.cxf.aegis.xml.stax.ElementWriter:void writeValue(java.lang.Object)",
            "org.apache.cxf.aegis.type.basic.BigIntegerType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.BigDecimalType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.jaxws.EndpointImpl:void checkProperties()",
            "org.apache.cxf.xmlbeans.tools.XMLBeansToolingDataBinding:void initialize(org.apache.cxf.tools.common.ToolContext)"
        ]
    },
    "org.apache.cxf.tools.common.ClassUtils:void compile(org.apache.cxf.tools.common.ToolContext)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.aegis.AegisContext:org.apache.cxf.aegis.type.AbstractTypeCreator createRootTypeCreator()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.AegisContext:org.apache.cxf.aegis.type.TypeCreator createTypeCreator()"
        ]
    },
    "org.apache.cxf.aegis.type.XMLTypeCreator:org.w3c.dom.Document readAegisFile(java.io.InputStream,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.XMLTypeCreator:org.w3c.dom.Document getDocument(java.lang.Class)"
        ]
    },
    "org.apache.cxf.aegis.type.XMLTypeCreator:org.w3c.dom.Document getDocument(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.XMLTypeCreator:org.w3c.dom.Element findMapping(java.lang.Class)"
        ]
    },
    "org.apache.cxf.aegis.type.XMLTypeCreator:java.util.List findMappings(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.XMLTypeCreator:java.util.List findMappings(java.lang.Class)",
            "org.apache.cxf.aegis.type.XMLTypeCreator:org.apache.cxf.aegis.type.Type createDefaultType(org.apache.cxf.aegis.type.AbstractTypeCreator$TypeClassInfo)"
        ]
    },
    "org.apache.cxf.aegis.type.XMLTypeCreator:java.util.logging.Logger access$000()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.XMLTypeCreator$1:void error(org.xml.sax.SAXParseException)",
            "org.apache.cxf.aegis.type.XMLTypeCreator$1:void fatalError(org.xml.sax.SAXParseException)",
            "org.apache.cxf.aegis.type.XMLTypeCreator$1:void warning(org.xml.sax.SAXParseException)"
        ]
    },
    "org.apache.cxf.aegis.type.XMLTypeCreator$1:void error(org.xml.sax.SAXParseException)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.aegis.type.XMLTypeCreator$1:void fatalError(org.xml.sax.SAXParseException)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.aegis.type.XMLTypeCreator$1:void warning(org.xml.sax.SAXParseException)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.aegis.type.basic.Base64Type:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.AegisXMLStreamDataReader:java.lang.Object read(javax.xml.stream.XMLStreamReader,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.basic.ObjectType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.BeanType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.ArrayType:java.util.Collection readCollection(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.mtom.AbstractXOPType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.SoapRefType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.collection.MapType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)"
        ]
    },
    "org.apache.cxf.endpoint.ServerImpl:void stop()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ManagedEndpoint:void stop()",
            "org.apache.cxf.endpoint.ServerRegistryImpl:void preShutdown()",
            "org.apache.cxf.jaxws.EndpointImpl:void stop()"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:void destroy()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.policy.WSPolicyFeature:org.apache.neethi.Policy initializeEndpointPolicy(org.apache.cxf.endpoint.Endpoint,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.WSPolicyFeature:void initialize(org.apache.cxf.endpoint.Client,org.apache.cxf.Bus)",
            "org.apache.cxf.ws.policy.WSPolicyFeature:void initialize(org.apache.cxf.endpoint.Server,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.ws.policy.attachment.wsdl11.Wsdl11AttachmentPolicyProvider:org.apache.neethi.Policy getElementPolicy(org.apache.cxf.service.model.Extensible,boolean,org.apache.cxf.service.model.DescriptionInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.attachment.wsdl11.Wsdl11AttachmentPolicyProvider:org.apache.neethi.Policy getEffectivePolicy(org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.ws.policy.attachment.wsdl11.Wsdl11AttachmentPolicyProvider:org.apache.neethi.Policy getEffectivePolicy(org.apache.cxf.service.model.BindingMessageInfo)",
            "org.apache.cxf.ws.policy.attachment.wsdl11.Wsdl11AttachmentPolicyProvider:org.apache.neethi.Policy getEffectivePolicy(org.apache.cxf.service.model.BindingFaultInfo)",
            "org.apache.cxf.ws.policy.attachment.wsdl11.Wsdl11AttachmentPolicyProvider:org.apache.neethi.Policy getElementPolicy(org.apache.cxf.service.model.AbstractDescriptionElement,boolean)"
        ]
    },
    "org.apache.cxf.ws.policy.attachment.external.ExternalAttachmentProvider:void readDocument()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.attachment.external.ExternalAttachmentProvider:org.apache.neethi.Policy getEffectivePolicy(org.apache.cxf.service.model.BindingFaultInfo)",
            "org.apache.cxf.ws.policy.attachment.external.ExternalAttachmentProvider:org.apache.neethi.Policy getEffectivePolicy(org.apache.cxf.service.model.BindingMessageInfo)",
            "org.apache.cxf.ws.policy.attachment.external.ExternalAttachmentProvider:org.apache.neethi.Policy getEffectivePolicy(org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.ws.policy.attachment.external.ExternalAttachmentProvider:org.apache.neethi.Policy getEffectivePolicy(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.ws.policy.attachment.external.ExternalAttachmentProvider:org.apache.neethi.Policy getEffectivePolicy(org.apache.cxf.service.model.ServiceInfo)"
        ]
    },
    "org.apache.cxf.interceptor.WrappedInInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.BareInInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.soap.interceptor.RPCInInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.ClientFaultConverter:void processFaultDetail(org.apache.cxf.interceptor.Fault,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.ClientFaultConverter:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.DocLiteralInInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.DocLiteralInInterceptor:void getPara(org.apache.cxf.staxutils.DepthXMLStreamReader,org.apache.cxf.databinding.DataReader,org.apache.cxf.message.MessageContentsList,java.util.Iterator,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.binding.soap.interceptor.RPCInInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.binding.soap.interceptor.SoapHeaderInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.helpers.MapNamespaceContext:java.lang.String getPrefix(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.W3CDOMStreamWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.W3CDOMStreamWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.W3CDOMStreamWriter:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.wsdl.JAXBExtensionHelper$MappingReaderDelegate$1:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.aegis.util.NamespaceHelper:java.lang.String getUniquePrefix(javax.xml.stream.XMLStreamWriter,java.lang.String,boolean)",
            "org.apache.cxf.aegis.xml.stax.ElementWriter:void writeStartElement()",
            "org.apache.cxf.aegis.xml.stax.ElementWriter:java.lang.String getPrefixForNamespace(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.helpers.WSDLHelper:javax.wsdl.BindingOperation getBindingOperation(javax.wsdl.Definition,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.helpers.WSDLHelper:javax.wsdl.BindingOperation getBindingOperation(javax.wsdl.Binding,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.helpers.WSDLHelper:java.util.List getPortTypes(javax.wsdl.Definition)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.helpers.WSDLHelper:java.util.List getInMessageParts(javax.wsdl.Operation)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.helpers.WSDLHelper:java.util.List getOutMessageParts(javax.wsdl.Operation)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.helpers.WSDLHelper:javax.wsdl.Binding getBinding(javax.wsdl.BindingOperation,javax.wsdl.Definition)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.helpers.XMLUtils:org.w3c.dom.Element fetchElementByNameAttribute(org.w3c.dom.Element,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.util.SortedArraySet:boolean addAll(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.TwoStageMap:java.util.Set keySet()",
            "org.apache.cxf.common.util.TwoStageMap:java.util.Collection values()",
            "org.apache.cxf.common.util.TwoStageMap:java.util.Set entrySet()",
            "org.apache.cxf.jaxb.JAXBDataBinding:void <init>(java.lang.Class[])",
            "org.apache.cxf.jaxb.JAXBDataBinding:void initialize(org.apache.cxf.service.Service)",
            "org.apache.cxf.jaxb.JAXBDataBinding:void scanPackages(java.util.Set)",
            "org.apache.cxf.ws.policy.EndpointPolicyImpl:void initializeVocabulary()",
            "org.apache.cxf.ws.policy.EndpointPolicyImpl:void initializeInterceptors(org.apache.cxf.ws.policy.PolicyInterceptorProviderRegistry,java.util.Set,org.apache.cxf.ws.policy.PolicyAssertion,boolean)",
            "org.apache.cxf.ws.policy.EffectivePolicyImpl:void initialiseInterceptors(org.apache.cxf.ws.policy.PolicyInterceptorProviderRegistry,org.apache.cxf.ws.policy.PolicyEngineImpl,java.util.Set,org.apache.cxf.ws.policy.PolicyAssertion,boolean)",
            "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:java.util.Collection getValidTokens()",
            "org.apache.cxf.phase.AbstractPhaseInterceptor:void setBefore(java.util.Collection)",
            "org.apache.cxf.phase.AbstractPhaseInterceptor:void setAfter(java.util.Collection)",
            "org.apache.cxf.phase.AbstractPhaseInterceptor:void addBefore(java.util.Collection)",
            "org.apache.cxf.phase.AbstractPhaseInterceptor:void addAfter(java.util.Collection)",
            "org.apache.cxf.binding.soap.interceptor.MustUnderstandInterceptor:void initServiceSideInfo(java.util.Set,org.apache.cxf.binding.soap.SoapMessage,java.util.Set)",
            "org.apache.cxf.tools.common.model.JAnnotation:java.util.Set getImports()",
            "org.apache.cxf.tools.common.model.JAnnotationElement:void appendValue(java.lang.StringBuffer,java.lang.Object)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void initialize(org.apache.cxf.service.Service)"
        ]
    },
    "org.apache.cxf.common.util.SortedArraySet:boolean containsAll(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.util.SortedArraySet:boolean removeAll(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.util.SortedArraySet:boolean retainAll(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.util.WeakIdentityHashMap:java.util.Set entrySet()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.MapNamespaceContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.util.Set entrySet()",
            "org.apache.cxf.common.util.CacheMap:java.util.Set entrySet()",
            "org.apache.cxf.common.util.CacheMap:void putAll(java.util.Map)",
            "org.apache.cxf.common.util.TwoStageMap:void putAll(java.util.Map)",
            "org.apache.cxf.common.util.TwoStageMap:java.util.Set entrySet()",
            "org.apache.cxf.jaxb.io.DataWriterImpl:javax.xml.bind.Marshaller createMarshaller(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.jaxb.io.DataReaderImpl:javax.xml.bind.Unmarshaller createUnmarshaller()",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.transport.http.HTTPConduit:java.lang.String extractLocation(java.util.Map)",
            "org.apache.cxf.transport.DestinationFactoryManagerImpl:org.apache.cxf.transport.DestinationFactory getDestinationFactoryForUri(java.lang.String)",
            "org.apache.cxf.transport.jms.JMSUtils:void addProtocolHeaders(javax.jms.Message,java.util.Map)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void addMustUnderstandAttribute(org.w3c.dom.Element,javax.xml.namespace.QName,org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.addressing.AddressingPropertiesImpl)",
            "org.apache.cxf.ws.policy.attachment.wsdl11.Wsdl11AttachmentPolicyProvider:org.apache.neethi.Policy getElementPolicy(org.apache.cxf.service.model.Extensible,boolean,org.apache.cxf.service.model.DescriptionInfo)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void addSignatureParts(java.util.Map,java.util.List)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void doEndorsedSignatures(java.util.Map,boolean,boolean)",
            "org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor:org.apache.ws.security.WSSecurityEngine createSecurityEngine(java.util.Map)",
            "org.apache.cxf.databinding.AbstractDataBinding:void setNamespaceMap(java.util.Map)",
            "org.apache.cxf.databinding.AbstractDataBinding:void checkNamespaceMap(java.util.Map)",
            "org.apache.cxf.wsdl.JAXBExtensionHelper$1:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils$SchemaLSResourceResolver:org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.SchemaInfo getOrCreateSchema(org.apache.cxf.service.model.ServiceInfo,java.lang.String,boolean)",
            "org.apache.cxf.binding.soap.interceptor.Soap12FaultOutInterceptor$Soap12FaultOutInterceptorInternal:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor:void writeSoapEnvelopeStart(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.Soap11FaultOutInterceptor$Soap11FaultOutInterceptorInternal:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.tools.common.Tag:java.lang.String formatAttribute(org.apache.cxf.tools.common.Tag)",
            "org.apache.cxf.tools.common.ProcessorTestBase:boolean assertXmlEquals(java.io.File,java.io.File,java.util.List)",
            "org.apache.cxf.tools.common.ProcessorTestBase:void assertAttributesEquals(javax.xml.namespace.QName,java.util.Map,java.util.Map,java.util.Collection)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildService(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:org.apache.cxf.service.model.ServiceSchemaInfo getSchemasForDefinition(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void putSchemasForDefinition(javax.wsdl.Definition,org.apache.cxf.service.model.ServiceSchemaInfo)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void removeDefinition(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildMockServices(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildInterfaceOperation(org.apache.cxf.service.model.InterfaceInfo,javax.wsdl.Operation)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:void putAll(java.util.Map)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void createSchemas(org.apache.cxf.service.Service,java.util.Set)",
            "org.apache.cxf.aegis.type.collection.MapType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.jaxws.JaxWsClientProxy:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:java.util.Set entrySet()",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:void putAll(java.util.Map)",
            "org.apache.cxf.jaxws.AbstractJAXWSMethodInvoker:java.util.Map removeHandlerProperties(org.apache.cxf.jaxws.context.WrappedMessageContext)",
            "org.apache.cxf.jaxws.AbstractJAXWSMethodInvoker:void addHandlerProperties(org.apache.cxf.jaxws.context.WrappedMessageContext,java.util.Map)",
            "org.apache.cxf.jaxws.AbstractJAXWSMethodInvoker:void updateWebServiceContext(org.apache.cxf.message.Exchange,javax.xml.ws.handler.MessageContext)"
        ]
    },
    "org.apache.cxf.common.util.WeakIdentityHashMap:java.util.Set keySet()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.util.Set keySet()",
            "org.apache.cxf.common.util.CacheMap:void updateMainDataMap()",
            "org.apache.cxf.common.util.CacheMap:java.util.Set keySet()",
            "org.apache.cxf.common.util.TwoStageMap:java.util.Set keySet()",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.util.Set keySet()",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.util.Collection values()",
            "org.apache.cxf.message.MessageImpl:java.util.Set getContentFormats()",
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.util.Map keepInOrder(java.util.Map,org.apache.cxf.service.model.OperationInfo,java.util.List)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:org.apache.cxf.message.MessageContentsList getParameters(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.transport.http.HTTPConduit:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:void transferProtocolHeadersToURLConnection(org.apache.cxf.message.Message,java.net.URLConnection)",
            "org.apache.cxf.transport.http.HTTPConduit:void logProtocolHeaders(java.util.logging.Level,org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void copyResponseHeaders(org.apache.cxf.message.Message,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponseInternal()",
            "org.apache.cxf.transport.http.gzip.GZIPInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.servlet.ServletTransportFactory:java.util.Set getDestinationsPaths()",
            "org.apache.cxf.NSManager:java.util.Set getNamespaces()",
            "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:java.util.Collection getTokenIdentifiers()",
            "org.apache.cxf.wsdl.JAXBExtensionHelper$1:java.util.Iterator getPrefixes(java.lang.String)",
            "org.apache.cxf.tools.common.Tag:boolean equals(java.lang.Object)",
            "org.apache.cxf.tools.common.ToolContext:void addParameters(java.util.Map)",
            "org.apache.cxf.tools.common.VelocityGenerator:void doWrite(java.lang.String,java.io.Writer)",
            "org.apache.cxf.tools.common.model.JavaParameter:java.util.Collection getAnnotationTags()",
            "org.apache.cxf.wsdl11.SchemaUtil:void extractSchema(javax.wsdl.Definition,org.apache.cxf.common.xmlschema.SchemaCollection,java.util.List)",
            "org.apache.cxf.wsdl11.SchemaUtil:void addSchema(java.lang.String,javax.wsdl.extensions.schema.Schema)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void parseWSDL(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:java.util.Collection getImports(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addExtensibilityAttributes(javax.wsdl.extensions.AttributeExtensible,java.util.Map)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void activateAll()",
            "org.apache.cxf.attachment.AttachmentImpl:java.util.Iterator getHeaderNames()",
            "org.apache.cxf.aegis.util.jdom.StaxBuilder:void buildTree(org.jdom.JDOMFactory,javax.xml.stream.XMLStreamReader,org.jdom.Document)",
            "org.apache.cxf.jaxws.ServiceImpl:java.lang.Object getPort(org.apache.cxf.ws.addressing.EndpointReferenceType,java.lang.Class,javax.xml.ws.WebServiceFeature[])",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:void copyScoped(java.util.Map)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:void clear()",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:java.util.Set keySet()"
        ]
    },
    "org.apache.cxf.common.util.ReflectionInvokationHandler$WrapperIterator:boolean hasNext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.MapNamespaceContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.helpers.WSDLHelper:javax.wsdl.BindingOperation getBindingOperation(javax.wsdl.Definition,java.lang.String)",
            "org.apache.cxf.helpers.WSDLHelper:javax.wsdl.BindingOperation getBindingOperation(javax.wsdl.Binding,java.lang.String)",
            "org.apache.cxf.helpers.WSDLHelper:java.util.List getPortTypes(javax.wsdl.Definition)",
            "org.apache.cxf.helpers.WSDLHelper:java.util.List getInMessageParts(javax.wsdl.Operation)",
            "org.apache.cxf.helpers.WSDLHelper:java.util.List getOutMessageParts(javax.wsdl.Operation)",
            "org.apache.cxf.helpers.WSDLHelper:javax.wsdl.Binding getBinding(javax.wsdl.BindingOperation,javax.wsdl.Definition)",
            "org.apache.cxf.helpers.XMLUtils:org.w3c.dom.Element fetchElementByNameAttribute(org.w3c.dom.Element,java.lang.String,java.lang.String)",
            "org.apache.cxf.common.util.SortedArraySet:boolean addAll(java.util.Collection)",
            "org.apache.cxf.common.util.SortedArraySet:boolean containsAll(java.util.Collection)",
            "org.apache.cxf.common.util.SortedArraySet:boolean removeAll(java.util.Collection)",
            "org.apache.cxf.common.util.SortedArraySet:boolean retainAll(java.util.Collection)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.util.Set entrySet()",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.util.Set keySet()",
            "org.apache.cxf.common.util.ReflectionInvokationHandler$WrapperIterator:boolean hasNext()",
            "org.apache.cxf.common.util.StringUtils:java.util.List getParts(java.lang.String,java.lang.String)",
            "org.apache.cxf.common.util.StringUtils:java.lang.String getFirstNotEmpty(java.lang.String,java.lang.String)",
            "org.apache.cxf.common.util.StringUtils:java.lang.String getFirstNotEmpty(java.util.List)",
            "org.apache.cxf.common.util.ReflectionUtil:java.util.List getPackagesFromJar(java.io.File)",
            "org.apache.cxf.common.util.CacheMap:void updateMainDataMap()",
            "org.apache.cxf.common.util.CacheMap:void putAll(java.util.Map)",
            "org.apache.cxf.common.util.AbstractTwoStageCache:boolean recycle(java.lang.Object)",
            "org.apache.cxf.common.util.CollectionUtils:java.util.Collection diff(java.util.Collection,java.util.Collection)",
            "org.apache.cxf.common.util.CollectionUtils:boolean isEmpty(java.util.Collection)",
            "org.apache.cxf.common.util.TwoStageMap:void putAll(java.util.Map)",
            "org.apache.cxf.common.injection.ResourceInjector:void invokePostConstruct()",
            "org.apache.cxf.common.injection.ResourceInjector:void invokePreDestroy()",
            "org.apache.cxf.common.annotation.AnnotationProcessor:void processMethods(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)",
            "org.apache.cxf.common.annotation.AnnotationProcessor:void processFields(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)",
            "org.apache.cxf.common.annotation.AnnotationProcessor:void processClass(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)",
            "org.apache.cxf.resource.DefaultResourceManager:java.lang.Object findResource(java.lang.String,java.lang.Class,boolean,java.util.List)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.util.Set entrySet()",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.util.Collection values()",
            "org.apache.cxf.configuration.spring.SpringBeanMap:void processBeans(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.configuration.spring.SpringBeanQNameMap:void processBeans(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void initWildcardDefinitionMap()",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureBean(java.lang.String,java.lang.Object,boolean)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureWithWildCard(java.lang.String,java.lang.Object)",
            "org.apache.cxf.configuration.jsse.spring.TLSParameterJaxBUtils:java.security.KeyStore createTrustStore(java.io.InputStream)",
            "org.apache.cxf.jaxb.JAXBUtils:java.lang.String makeConventionalIdentifier(java.util.List,org.apache.cxf.jaxb.JAXBUtils$IdentifierType)",
            "org.apache.cxf.jaxb.JAXBDataBinding:void initialize(org.apache.cxf.service.Service)",
            "org.apache.cxf.jaxb.JAXBDataBinding:org.apache.cxf.jaxb.JAXBDataBinding$CachedContextAndSchemas createJAXBContextAndSchemas(java.util.Set,java.lang.String)",
            "org.apache.cxf.jaxb.JAXBDataBinding:void scanPackages(java.util.Set)",
            "org.apache.cxf.jaxb.JAXBSchemaInitializer:javax.xml.namespace.QName getTypeName(org.apache.cxf.jaxb.JAXBBeanInfo)",
            "org.apache.cxf.jaxb.JAXBSchemaInitializer:void end(org.apache.cxf.service.model.FaultInfo)",
            "org.apache.cxf.jaxb.JAXBSchemaInitializer:void buildExceptionType(org.apache.cxf.service.model.MessagePartInfo,java.lang.Class)",
            "org.apache.cxf.jaxb.JAXBSchemaInitializer:void addElement(org.apache.ws.commons.schema.XmlSchemaSequence,org.apache.cxf.jaxb.JAXBBeanInfo,javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.jaxb.JAXBSchemaInitializer:boolean isExistSchemaElement(org.apache.ws.commons.schema.XmlSchema,javax.xml.namespace.QName)",
            "org.apache.cxf.jaxb.io.DataWriterImpl:javax.xml.bind.Marshaller createMarshaller(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.jaxb.io.DataReaderImpl:javax.xml.bind.Unmarshaller createUnmarshaller()",
            "org.apache.cxf.management.utils.ManagementConsole:void listAllManagedEndpoint()",
            "org.apache.cxf.management.utils.ManagementConsole:void invokeEndpoint(java.lang.String)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElementEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.message.MessageUtils:boolean isDOMPresent(org.apache.cxf.message.Message)",
            "org.apache.cxf.message.MessageImpl:void copyContent(org.apache.cxf.message.Message,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:org.apache.cxf.service.model.BindingOperationInfo findAnyOp(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.util.Map keepInOrder(java.util.Map,org.apache.cxf.service.model.OperationInfo,java.util.List)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:org.apache.cxf.message.MessageContentsList getParameters(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.util.Map getQueries(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.BareInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.ClientFaultConverter:void processFaultDetail(org.apache.cxf.interceptor.Fault,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:org.apache.cxf.service.model.MessagePartInfo findMessagePart(org.apache.cxf.message.Exchange,java.util.Collection,javax.xml.namespace.QName,boolean,int,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.FaultOutInterceptor:org.apache.cxf.service.model.FaultInfo getFaultForClass(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Class)",
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:void writeParts(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.message.MessageContentsList,java.util.List)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void getPara(org.apache.cxf.staxutils.DepthXMLStreamReader,org.apache.cxf.databinding.DataReader,org.apache.cxf.message.MessageContentsList,java.util.Iterator,org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.ConduitInitiatorManagerImpl:org.apache.cxf.transport.ConduitInitiator getConduitInitiatorForUri(java.lang.String)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updateDoc(org.w3c.dom.Document,java.lang.String,java.util.Map,java.util.Map)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updateDefinition(javax.wsdl.Definition,java.util.Map,java.util.Map,java.lang.String,org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updatePublishedEndpointUrl(java.lang.String,javax.wsdl.Definition,javax.xml.namespace.QName)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void setSoapAddressLocationOn(javax.wsdl.Port,java.lang.String)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updateSchemaImports(javax.wsdl.extensions.schema.Schema,java.util.Map,java.lang.String)",
            "org.apache.cxf.transport.http.Cookie:void handleSetCookie(java.util.Map,java.util.List)",
            "org.apache.cxf.transport.http.AbstractHTTPTransportFactory:void registerWithBindingManager()",
            "org.apache.cxf.transport.http.AbstractHTTPTransportFactory:org.apache.cxf.service.model.EndpointInfo createEndpointInfo(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.BindingInfo,javax.wsdl.Port)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPClientPolicy getClient(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPClientPolicy)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPServerPolicy getServer(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPServerPolicy)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPClientPolicy getClient(org.apache.cxf.ws.policy.PolicyEngine,org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.transport.Conduit)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPServerPolicy getServer(org.apache.cxf.ws.policy.PolicyEngine,org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.transport.Destination)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:void assertClientPolicy(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPClientPolicy)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:void assertServerPolicy(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPServerPolicy)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPClientPolicy getClient(java.util.Collection)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPServerPolicy getServer(java.util.Collection)",
            "org.apache.cxf.transport.http.HTTPConduit:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:void transferProtocolHeadersToURLConnection(org.apache.cxf.message.Message,java.net.URLConnection)",
            "org.apache.cxf.transport.http.HTTPConduit:void logProtocolHeaders(java.util.logging.Level,org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:java.lang.String extractAuthorizationRealm(java.util.Map)",
            "org.apache.cxf.transport.http.HTTPConduit:java.lang.String extractLocation(java.util.Map)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void copyResponseHeaders(org.apache.cxf.message.Message,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponseInternal()",
            "org.apache.cxf.transport.http.gzip.GZIPOutInterceptor:org.apache.cxf.transport.http.gzip.GZIPOutInterceptor$UseGzip gzipPermitted(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.gzip.GZIPInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.AbstractMultiplexDestination:java.lang.String extractStringElementFromAny(javax.xml.namespace.QName,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.transport.DestinationFactoryManagerImpl:org.apache.cxf.transport.DestinationFactory getDestinationFactoryForUri(java.lang.String)",
            "org.apache.cxf.transport.servlet.ServletController:void updateDests(javax.servlet.http.HttpServletRequest)",
            "org.apache.cxf.transport.servlet.ServletController:void invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.servlet.ServletController:org.apache.cxf.transport.servlet.ServletDestination checkRestfulRequest(javax.servlet.http.HttpServletRequest)",
            "org.apache.cxf.transport.servlet.ServletController:void generateServiceList(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.servlet.ServletController:void generateUnformattedServiceList(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.servlet.ServletTransportFactory:void register()",
            "org.apache.cxf.transport.servlet.AbstractCXFServlet:void replaceDestinationFactory()",
            "org.apache.cxf.transport.https.CertificateHostnameVerifier$Certificates:java.lang.String[] getDNSSubjectAlts(java.security.cert.X509Certificate)",
            "org.apache.cxf.transport.https.SSLUtils:java.util.List compileRegexPatterns(java.util.List,boolean,java.util.logging.Logger)",
            "org.apache.cxf.transport.https.SSLUtils:boolean matchesOneOf(java.lang.String,java.util.List)",
            "org.apache.cxf.transport.https.CertificateHostnameVerifier$AbstractVerifier:void check(java.lang.String[],java.lang.String[],java.lang.String[],boolean,boolean)",
            "org.apache.cxf.transport.http_jetty.spring.JettySpringTypesFactory:java.util.Map toThreadingParameters(java.util.List)",
            "org.apache.cxf.transport.http_jetty.spring.JettySpringTypesFactory:java.util.Map toTLSServerParamenters(java.util.List)",
            "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineFactoryBeanDefinitionParser:java.util.List getRequiredElementsList(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,javax.xml.namespace.QName,org.springframework.beans.factory.support.BeanDefinitionBuilder)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void doService(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine:void addServant(java.net.URL,org.apache.cxf.transport.http_jetty.JettyHTTPHandler)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPTransportFactory:void finalizeConfig()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void setEnginesList(java.util.List)",
            "org.apache.cxf.transport.jms.JMSUtils:void addProtocolHeaders(javax.jms.Message,java.util.Map)",
            "org.apache.cxf.feature.AbstractFeature:java.lang.Object getActive(java.util.List,java.lang.Class)",
            "org.apache.cxf.endpoint.ClientLifeCycleManagerImpl:void clientCreated(org.apache.cxf.endpoint.Client)",
            "org.apache.cxf.endpoint.ClientLifeCycleManagerImpl:void clientDestroyed(org.apache.cxf.endpoint.Client)",
            "org.apache.cxf.endpoint.ServerLifeCycleManagerImpl:void startServer(org.apache.cxf.endpoint.Server)",
            "org.apache.cxf.endpoint.ServerLifeCycleManagerImpl:void stopServer(org.apache.cxf.endpoint.Server)",
            "org.apache.cxf.endpoint.EndpointResolverRegistryImpl:org.apache.cxf.ws.addressing.EndpointReferenceType resolve(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.endpoint.EndpointResolverRegistryImpl:org.apache.cxf.ws.addressing.EndpointReferenceType renew(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.endpoint.EndpointResolverRegistryImpl:org.apache.cxf.ws.addressing.EndpointReferenceType mint(javax.xml.namespace.QName)",
            "org.apache.cxf.endpoint.EndpointResolverRegistryImpl:org.apache.cxf.ws.addressing.EndpointReferenceType mint(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.endpoint.ServiceContractResolverRegistryImpl:java.net.URI getContractLocation(javax.xml.namespace.QName)",
            "org.apache.cxf.endpoint.ClientImpl:org.apache.cxf.service.model.EndpointInfo findEndpoint(org.apache.cxf.service.Service,javax.xml.namespace.QName)",
            "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:org.apache.cxf.endpoint.Client createClient(java.lang.String,javax.xml.namespace.QName,java.lang.ClassLoader,javax.xml.namespace.QName,java.util.List)",
            "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:void addBindingFiles(java.util.List,org.apache.cxf.jaxb.JAXBUtils$SchemaCompiler)",
            "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:boolean isValidPackage(org.apache.cxf.jaxb.JAXBUtils$JPackage)",
            "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:void outputDebug(org.apache.cxf.jaxb.JAXBUtils$JCodeModel)",
            "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:void addSchemas(java.lang.String,java.util.Collection,org.apache.cxf.jaxb.JAXBUtils$SchemaCompiler)",
            "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:boolean compileJavaSrc(java.lang.String,java.util.List,java.lang.String)",
            "org.apache.cxf.endpoint.dynamic.TypeClassInitializer:void begin(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.ws.addressing.ContextUtils:java.lang.String getActionFromServiceModel(org.apache.cxf.message.Message,java.lang.Exception)",
            "org.apache.cxf.ws.addressing.MAPAggregator:void assertAssertion(org.apache.cxf.ws.policy.AssertionInfoMap,javax.xml.namespace.QName)",
            "org.apache.cxf.ws.addressing.MAPAggregator:boolean hasUsingAddressing(java.util.List)",
            "org.apache.cxf.ws.addressing.MAPAggregator:java.lang.String getActionFromFaultMessage(org.apache.cxf.service.model.OperationInfo,java.lang.String)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void encodeReferenceParameters(org.apache.cxf.ws.addressing.AddressingProperties,org.w3c.dom.Element,javax.xml.bind.Marshaller)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void addMustUnderstandAttribute(org.w3c.dom.Element,javax.xml.namespace.QName,org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.addressing.AddressingPropertiesImpl)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:org.apache.cxf.ws.addressing.AddressingProperties unmarshalMAPs(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void decodeReferenceParameters(java.util.Set,org.apache.cxf.ws.addressing.AddressingPropertiesImpl,javax.xml.bind.Unmarshaller)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void discardMAPs(java.util.List,org.apache.cxf.ws.addressing.AddressingProperties)",
            "org.apache.cxf.ws.policy.builder.primitive.NestedPrimitiveAssertion:org.apache.neethi.PolicyComponent normalize()",
            "org.apache.cxf.ws.policy.builder.primitive.NestedPrimitiveAssertion:boolean isAsserted(org.apache.cxf.ws.policy.AssertionInfoMap)",
            "org.apache.cxf.ws.policy.builder.primitive.NestedPrimitiveAssertion:boolean isPolicyAsserted(org.apache.neethi.PolicyOperator,org.apache.cxf.ws.policy.AssertionInfoMap)",
            "org.apache.cxf.ws.policy.builder.primitive.PrimitiveAssertion:boolean isAsserted(org.apache.cxf.ws.policy.AssertionInfoMap)",
            "org.apache.cxf.ws.policy.util.PolicyComparator:boolean compare(java.util.List,java.util.List)",
            "org.apache.cxf.ws.policy.AssertionInfoMap:void <init>(java.util.Collection)",
            "org.apache.cxf.ws.policy.AssertionInfoMap:void putAssertionInfo(org.apache.cxf.ws.policy.PolicyAssertion)",
            "org.apache.cxf.ws.policy.AssertionInfoMap:boolean supportsAlternative(org.apache.cxf.ws.policy.PolicyAssertion,java.util.List)",
            "org.apache.cxf.ws.policy.AssertionInfoMap:boolean supportsAlternative(java.util.Collection,java.util.List)",
            "org.apache.cxf.ws.policy.AssertionInfoMap:void checkEffectivePolicy(org.apache.neethi.Policy)",
            "org.apache.cxf.ws.policy.AssertionInfoMap:void check()",
            "org.apache.cxf.ws.policy.AssertionInfoMap:void getAssertions(org.apache.neethi.PolicyOperator,java.util.Collection)",
            "org.apache.cxf.ws.policy.Intersector:boolean compatibleAlternatives(java.util.Collection,java.util.Collection)",
            "org.apache.cxf.ws.policy.Intersector:boolean compatiblePolicies(org.apache.neethi.Policy,org.apache.neethi.Policy)",
            "org.apache.cxf.ws.policy.Intersector:org.apache.neethi.Policy intersect(org.apache.neethi.Policy,org.apache.neethi.Policy)",
            "org.apache.cxf.ws.policy.Intersector:org.apache.cxf.ws.policy.PolicyAssertion findCompatibleAssertion(org.apache.cxf.ws.policy.PolicyAssertion,java.util.Collection)",
            "org.apache.cxf.ws.policy.EndpointPolicyImpl:java.util.Collection getSupportedAlternatives()",
            "org.apache.cxf.ws.policy.EndpointPolicyImpl:void initializeVocabulary()",
            "org.apache.cxf.ws.policy.EndpointPolicyImpl:java.util.Collection getSupportedAlternatives(org.apache.neethi.Policy)",
            "org.apache.cxf.ws.policy.EndpointPolicyImpl:void initializeInterceptors(org.apache.cxf.ws.policy.PolicyInterceptorProviderRegistry,java.util.Set,org.apache.cxf.ws.policy.PolicyAssertion,boolean)",
            "org.apache.cxf.ws.policy.EndpointPolicyImpl:void initializeInterceptors()",
            "org.apache.cxf.ws.policy.EndpointPolicyImpl:void checkExactlyOnes()",
            "org.apache.cxf.ws.policy.ServerPolicyOutFaultInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.policy.WSPolicyFeature:org.apache.neethi.Policy initializeEndpointPolicy(org.apache.cxf.endpoint.Endpoint,org.apache.cxf.Bus)",
            "org.apache.cxf.ws.policy.PolicyInInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.policy.PolicyOutInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.policy.PolicyInterceptorProviderRegistryImpl:void register(org.apache.cxf.ws.policy.PolicyInterceptorProvider)",
            "org.apache.cxf.ws.policy.PolicyInterceptorProviderRegistryImpl:java.util.List getInterceptors(java.util.Collection,boolean,boolean)",
            "org.apache.cxf.ws.policy.selector.MinimalAlternativeSelector:java.util.Collection selectAlternative(org.apache.neethi.Policy,org.apache.cxf.ws.policy.PolicyEngine,org.apache.cxf.ws.policy.Assertor)",
            "org.apache.cxf.ws.policy.selector.FirstAlternativeSelector:java.util.Collection selectAlternative(org.apache.neethi.Policy,org.apache.cxf.ws.policy.PolicyEngine,org.apache.cxf.ws.policy.Assertor)",
            "org.apache.cxf.ws.policy.selector.MaximalAlternativeSelector:java.util.Collection selectAlternative(org.apache.neethi.Policy,org.apache.cxf.ws.policy.PolicyEngine,org.apache.cxf.ws.policy.Assertor)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:org.apache.neethi.Policy getAggregatedServicePolicy(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:org.apache.neethi.Policy getAggregatedEndpointPolicy(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:org.apache.neethi.Policy getAggregatedOperationPolicy(org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:org.apache.neethi.Policy getAggregatedMessagePolicy(org.apache.cxf.service.model.BindingMessageInfo)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:org.apache.neethi.Policy getAggregatedFaultPolicy(org.apache.cxf.service.model.BindingFaultInfo)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:java.util.Collection getAssertions(org.apache.cxf.ws.policy.EffectivePolicy,boolean)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:void addAssertions(org.apache.neethi.PolicyComponent,boolean,java.util.Collection)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:java.util.Set getVocabulary(org.apache.neethi.PolicyComponent,boolean)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:boolean supportsAlternative(java.util.Collection,org.apache.cxf.ws.policy.Assertor)",
            "org.apache.cxf.ws.policy.PolicyUtils:boolean contains(java.util.Collection,org.apache.neethi.Assertion)",
            "org.apache.cxf.ws.policy.PolicyUtils:boolean contains(java.util.Collection,java.util.Collection)",
            "org.apache.cxf.ws.policy.PolicyUtils:void printPolicyComponent(org.apache.neethi.PolicyComponent,java.lang.StringBuffer,int)",
            "org.apache.cxf.ws.policy.mtom.MTOMPolicyInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.policy.EffectivePolicyImpl:void initialiseInterceptors(org.apache.cxf.ws.policy.PolicyEngineImpl,boolean)",
            "org.apache.cxf.ws.policy.EffectivePolicyImpl:java.util.Collection getSupportedAlternatives(org.apache.cxf.ws.policy.PolicyEngineImpl,org.apache.neethi.Policy)",
            "org.apache.cxf.ws.policy.EffectivePolicyImpl:void initialiseInterceptors(org.apache.cxf.ws.policy.PolicyInterceptorProviderRegistry,org.apache.cxf.ws.policy.PolicyEngineImpl,java.util.Set,org.apache.cxf.ws.policy.PolicyAssertion,boolean)",
            "org.apache.cxf.ws.policy.attachment.wsdl11.Wsdl11AttachmentPolicyProvider$ExtensibleInfo:java.lang.Object getExtensor(java.lang.Class)",
            "org.apache.cxf.ws.policy.attachment.wsdl11.Wsdl11AttachmentPolicyProvider$ExtensibleInfo:java.util.List getExtensors(java.lang.Class)",
            "org.apache.cxf.ws.policy.attachment.wsdl11.Wsdl11AttachmentPolicyProvider:org.apache.neethi.Policy getElementPolicy(org.apache.cxf.service.model.Extensible,boolean,org.apache.cxf.service.model.DescriptionInfo)",
            "org.apache.cxf.ws.policy.attachment.reference.LocalServiceModelReferenceResolver:org.apache.neethi.Policy resolveReference(java.lang.String)",
            "org.apache.cxf.ws.policy.attachment.reference.RemoteReferenceResolver:org.apache.neethi.Policy resolveReference(java.lang.String)",
            "org.apache.cxf.ws.policy.attachment.external.PolicyAttachment:boolean appliesTo(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.ws.policy.attachment.external.PolicyAttachment:boolean appliesTo(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.ws.policy.attachment.external.PolicyAttachment:boolean appliesTo(org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.ws.policy.attachment.external.PolicyAttachment:boolean appliesTo(org.apache.cxf.service.model.BindingMessageInfo)",
            "org.apache.cxf.ws.policy.attachment.external.PolicyAttachment:boolean appliesTo(org.apache.cxf.service.model.BindingFaultInfo)",
            "org.apache.cxf.ws.policy.attachment.external.ExternalAttachmentProvider:org.apache.neethi.Policy getEffectivePolicy(org.apache.cxf.service.model.BindingFaultInfo)",
            "org.apache.cxf.ws.policy.attachment.external.ExternalAttachmentProvider:org.apache.neethi.Policy getEffectivePolicy(org.apache.cxf.service.model.BindingMessageInfo)",
            "org.apache.cxf.ws.policy.attachment.external.ExternalAttachmentProvider:org.apache.neethi.Policy getEffectivePolicy(org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.ws.policy.attachment.external.ExternalAttachmentProvider:org.apache.neethi.Policy getEffectivePolicy(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.ws.policy.attachment.external.ExternalAttachmentProvider:org.apache.neethi.Policy getEffectivePolicy(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.ws.policy.attachment.external.ExternalAttachmentProvider:void readDocument()",
            "org.apache.cxf.ws.policy.AssertionBuilderRegistryImpl:void register(org.apache.cxf.ws.policy.AssertionBuilder)",
            "org.apache.cxf.ws.policy.ClientPolicyInFaultInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.policy.AbstractPolicyInterceptor:org.apache.cxf.service.model.BindingFaultInfo getBindingFaultInfo(org.apache.cxf.message.Message,java.lang.Exception,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.ws.security.policy.builders.X509TokenBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.builders.X509TokenBuilder:void processAlternative(java.util.List,org.apache.cxf.ws.security.policy.model.X509Token,org.apache.cxf.ws.security.policy.SPConstants)",
            "org.apache.cxf.ws.security.policy.builders.SupportingTokens12Builder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.builders.SupportingTokens12Builder:void processAlternative(java.util.List,org.apache.cxf.ws.security.policy.model.SupportingToken)",
            "org.apache.cxf.ws.security.policy.builders.InitiatorTokenBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.builders.InitiatorTokenBuilder:void processAlternative(java.util.List,org.apache.cxf.ws.security.policy.model.InitiatorToken)",
            "org.apache.cxf.ws.security.policy.builders.AsymmetricBindingBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.builders.AsymmetricBindingBuilder:void processAlternative(java.util.List,org.apache.cxf.ws.security.policy.model.AsymmetricBinding,org.apache.cxf.ws.security.policy.SPConstants)",
            "org.apache.cxf.ws.security.policy.builders.IssuedTokenBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.builders.IssuedTokenBuilder:void processAlternative(java.util.List,org.apache.cxf.ws.security.policy.model.IssuedToken)",
            "org.apache.cxf.ws.security.policy.builders.ProtectionTokenBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.builders.TransportTokenBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.builders.RecipientTokenBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.builders.RecipientTokenBuilder:void processAlternative(java.util.List,org.apache.cxf.ws.security.policy.model.RecipientToken)",
            "org.apache.cxf.ws.security.policy.builders.SupportingTokensBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.builders.SupportingTokensBuilder:void processAlternative(java.util.List,org.apache.cxf.ws.security.policy.model.SupportingToken)",
            "org.apache.cxf.ws.security.policy.builders.SymmetricBindingBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.builders.SymmetricBindingBuilder:void processAlternatives(java.util.List,org.apache.cxf.ws.security.policy.model.SymmetricBinding,org.apache.cxf.ws.security.policy.SPConstants)",
            "org.apache.cxf.ws.security.policy.model.RequiredParts:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.ContentEncryptedElements:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SignedEncryptedElements:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.RequiredElements:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SupportingToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SupportingToken:org.apache.neethi.Policy getPolicy()",
            "org.apache.cxf.ws.security.policy.model.SignedEncryptedParts:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.AbstractSecurityAssertion:boolean isAsserted(org.apache.cxf.ws.policy.AssertionInfoMap)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor$SecureConversationTokenFinderInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.policy.interceptors.HttpsTokenInterceptorProvider$HttpsTokenInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.policy.interceptors.HttpsTokenInterceptorProvider$HttpsTokenInInterceptor:void assertHttps(java.util.Collection,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationOutInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor:void recalcEffectivePolicy(org.apache.cxf.binding.soap.SoapMessage,java.lang.String,org.apache.neethi.Policy)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor:void unmapSecurityProps(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.policy.interceptors.IssuedTokenInterceptorProvider$IssuedTokenOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationTokenInterceptorProvider:void mapSecurityProps(org.apache.cxf.message.Message,java.util.Map)",
            "org.apache.cxf.ws.security.policy.interceptors.HttpsTokenInterceptorProvider$HttpsTokenOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.policy.interceptors.HttpsTokenInterceptorProvider$HttpsTokenOutInterceptor:void assertHttps(java.util.Collection,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.policy.interceptors.IssuedTokenInterceptorProvider$IssuedTokenInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.trust.STSClient:void setPolicy(org.apache.neethi.Policy)",
            "org.apache.cxf.ws.security.trust.STSClient:org.apache.cxf.service.model.BindingOperationInfo findOperation(java.lang.String)",
            "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:org.apache.cxf.ws.security.tokenstore.SecurityToken getToken(java.lang.String)",
            "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:java.util.Collection getTokens(org.apache.cxf.ws.security.tokenstore.SecurityToken$State)",
            "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:void processTokenExpiry()",
            "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:void removeCancelledTokens()",
            "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:void removeExpiredTokens()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.TransportBindingHandler:void addUsernameTokens(org.apache.cxf.ws.security.policy.model.SupportingToken)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.TransportBindingHandler:void handleBinding()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.TransportBindingHandler:byte[] doX509TokenSignature(org.apache.cxf.ws.security.policy.model.Token,org.apache.cxf.ws.security.policy.model.SignedEncryptedParts,org.apache.cxf.ws.security.policy.model.TokenWrapper)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.TransportBindingHandler:byte[] doIssuedTokenSignature(org.apache.cxf.ws.security.policy.model.Token,org.apache.cxf.ws.security.policy.model.SignedEncryptedParts,org.apache.cxf.ws.security.policy.model.TokenWrapper,org.apache.cxf.ws.security.tokenstore.SecurityToken)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AsymmetricBindingHandler:void doSignBeforeEncrypt()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AsymmetricBindingHandler:void doEncryptBeforeSign()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AsymmetricBindingHandler:void assertUnusedTokens(org.apache.cxf.ws.security.policy.model.TokenWrapper)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void policyNotAsserted(org.apache.cxf.ws.policy.PolicyAssertion,java.lang.Exception)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void policyNotAsserted(org.apache.cxf.ws.policy.PolicyAssertion,java.lang.String)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void policyAsserted(org.apache.cxf.ws.policy.PolicyAssertion)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void policyAsserted(javax.xml.namespace.QName)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:java.util.Collection findAndAssertPolicy(javax.xml.namespace.QName)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:org.apache.ws.security.message.WSSecTimestamp createTimestamp()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:org.apache.ws.security.message.WSSecTimestamp handleLayout(org.apache.ws.security.message.WSSecTimestamp)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void assertSupportingTokens(java.util.Collection)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:java.util.Map handleSupportingTokens(java.util.Collection,boolean)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:java.util.Map handleSupportingTokens(org.apache.cxf.ws.security.policy.model.SupportingToken,boolean,java.util.Map)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void addSignatureParts(java.util.Map,java.util.List)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:org.apache.ws.security.message.WSSecUsernameToken addUsernameToken(org.apache.cxf.ws.security.policy.model.UsernameToken)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:java.util.Vector getEncryptedParts()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:java.util.Vector getSignedParts()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:java.util.Vector getPartsAndElements(boolean,boolean,java.util.List,java.util.List,java.util.Map)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:org.apache.cxf.ws.security.policy.model.Wss10 getWss10()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void doEndorsedSignatures(java.util.Map,boolean,boolean)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void handleEncryptedSignedHeaders(java.util.Vector,java.util.Vector)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.SymmetricBindingHandler:void doEncryptBeforeSign()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.SymmetricBindingHandler:void doSignBeforeEncrypt()",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JOutInterceptor$PolicyBasedWSS4JOutInterceptorInternal:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:void handleWSS11(org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:boolean assertPolicy(org.apache.cxf.ws.policy.AssertionInfoMap,javax.xml.namespace.QName)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:void assertPolicy(org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.ws.policy.PolicyAssertion)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:void notAssertPolicy(org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.ws.policy.PolicyAssertion,java.lang.String)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:java.lang.String checkAsymetricBinding(org.apache.cxf.ws.policy.AssertionInfoMap,java.lang.String,org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:java.lang.String checkSymetricBinding(org.apache.cxf.ws.policy.AssertionInfoMap,java.lang.String,org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:void assertTokens(org.apache.cxf.ws.policy.AssertionInfoMap,javax.xml.namespace.QName,java.util.Collection,org.apache.cxf.binding.soap.SoapMessage,javax.xml.soap.SOAPMessage,java.lang.String)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:void doResults(org.apache.cxf.binding.soap.SoapMessage,java.lang.String,javax.xml.soap.SOAPMessage,java.util.Vector)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:boolean assertSymetricBinding(org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.binding.soap.SoapMessage,javax.xml.soap.SOAPMessage,org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor$Protections,boolean)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:boolean assertAsymetricBinding(org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.binding.soap.SoapMessage,javax.xml.soap.SOAPMessage,org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor$Protections,boolean)",
            "org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor:void doResults(org.apache.cxf.binding.soap.SoapMessage,java.lang.String,javax.xml.soap.SOAPMessage,java.util.Vector)",
            "org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor:org.apache.ws.security.WSSecurityEngine createSecurityEngine(java.util.Map)",
            "org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor$TokenStoreCallbackHandler:void handle(javax.security.auth.callback.Callback[])",
            "org.apache.cxf.ws.rm.AbstractRMInterceptor:void assertReliability(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.Servant:void terminateSequence(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.AbstractSequence:boolean isAcknowledged(java.math.BigInteger)",
            "org.apache.cxf.ws.rm.DestinationSequence:void scheduleDeferredAcknowledgement(long)",
            "org.apache.cxf.ws.rm.policy.PolicyUtils:org.apache.cxf.ws.rm.policy.RMAssertion getRMAssertion(org.apache.cxf.ws.rm.policy.RMAssertion,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.Source:java.util.Collection getAllUnacknowledgedSequences()",
            "org.apache.cxf.ws.rm.RMInInterceptor:void processAcknowledgments(org.apache.cxf.ws.rm.Source,org.apache.cxf.ws.rm.RMProperties)",
            "org.apache.cxf.ws.rm.RMOutInterceptor:void addAcknowledgements(org.apache.cxf.ws.rm.Destination,org.apache.cxf.ws.rm.RMProperties,org.apache.cxf.ws.rm.Identifier,org.apache.cxf.ws.addressing.v200408.AttributedURI)",
            "org.apache.cxf.ws.rm.Destination:void ackRequested(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.RMManager:void shutdown()",
            "org.apache.cxf.ws.rm.RMManager:void recoverReliableEndpoint(org.apache.cxf.endpoint.Endpoint,org.apache.cxf.transport.Conduit)",
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl:void resend(org.apache.cxf.transport.Conduit,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.soap.RMSoapInterceptor:void encode(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.rm.RMProperties)",
            "org.apache.cxf.ws.rm.soap.RMSoapInterceptor:org.apache.cxf.ws.rm.RMProperties unmarshalRMProperties(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.rm.soap.RMSoapInterceptor:void discardRMHeaders(java.util.List)",
            "org.apache.cxf.ws.rm.RMEndpoint:void setPolicies()",
            "org.apache.cxf.ws.rm.RMEndpoint:java.lang.Object getUsingAddressing(java.util.List)",
            "org.apache.cxf.ws.rm.RMEndpoint:void shutdown()",
            "org.apache.cxf.ws.rm.persistence.jdbc.RMTxStore:void removeMessages(org.apache.cxf.ws.rm.Identifier,java.util.Collection,boolean)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void <init>(java.util.SortedSet)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void add(java.util.Collection,boolean)",
            "org.apache.cxf.workqueue.WorkQueueManagerImpl:void shutdown(boolean)",
            "org.apache.cxf.workqueue.WorkQueueManagerImpl:void run()",
            "org.apache.cxf.databinding.AbstractDataBinding:void setNamespaceMap(java.util.Map)",
            "org.apache.cxf.databinding.AbstractDataBinding:void checkNamespaceMap(java.util.Map)",
            "org.apache.cxf.databinding.stax.StaxDataBindingFeature:void removeInterceptor(java.util.List,java.lang.String)",
            "org.apache.cxf.wsdl.JAXBExtensionHelper$1:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils$SchemaLSResourceResolver:org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.namespace.QName getServiceName(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:java.lang.String getPortName(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:void setPortName(org.apache.cxf.ws.addressing.EndpointReferenceType,java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.namespace.QName getInterfaceName(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:void setMetadata(org.apache.cxf.ws.addressing.EndpointReferenceType,java.util.List)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.wsdl.Definition getWSDLDefinition(org.apache.cxf.wsdl.WSDLManager,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.validation.Schema createSchema(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.wsdl.Port getPort(org.apache.cxf.wsdl.WSDLManager,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:org.apache.cxf.transport.MultiplexDestination getMatchingMultiplexDestination(javax.xml.namespace.QName,java.lang.String,org.apache.cxf.Bus)",
            "org.apache.cxf.io.CachedOutputStream:void flush()",
            "org.apache.cxf.io.CachedOutputStream:void lockOutputStream()",
            "org.apache.cxf.io.CachedOutputStream:void close()",
            "org.apache.cxf.service.model.BindingOperationInfo:void <init>(org.apache.cxf.service.model.BindingInfo,org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:int getMessagePartIndex(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePartByIndex(int)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePart(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePart(int)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperation(org.apache.cxf.message.Exchange,java.lang.String)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperationForWrapperElement(org.apache.cxf.message.Exchange,javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.SchemaInfo getSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.ServiceModelUtil:java.util.List getOperationInputPartNames(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.EndpointInfo findBestEndpointInfo(javax.xml.namespace.QName,java.util.List)",
            "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.BindingInfo getBinding(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.EndpointInfo getEndpoint(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.ServiceInfo:void initMessagesMap()",
            "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.SchemaInfo getSchema(java.lang.String)",
            "org.apache.cxf.service.model.MessageInfo:java.util.Map getMessagePartsMap()",
            "org.apache.cxf.service.model.MessageInfo:java.util.List getOrderedParts(java.util.List)",
            "org.apache.cxf.service.model.BindingInfo:org.apache.cxf.service.model.BindingOperationInfo buildOperation(javax.xml.namespace.QName,java.lang.String,java.lang.String)",
            "org.apache.cxf.service.model.BindingInfo:org.apache.cxf.service.model.BindingOperationInfo getOperation(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.ServiceImpl:org.apache.cxf.service.model.EndpointInfo getEndpointInfo(javax.xml.namespace.QName)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void fillInSchemaCrossreferences()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createEndpoints()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeServiceConfigurations()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromWSDL(java.lang.String)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromClass()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean hasWrappedMethods(org.apache.cxf.service.model.InterfaceInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void validateServiceModel()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.InterfaceInfo getInterfaceInfo()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeWSDLOperations()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void setFaultClassInfo(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.OperationInfo createOperation(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.InterfaceInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeWrappedSchema(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void checkForElement(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createBareMessage(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.OperationInfo,boolean)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isExistImport(org.apache.ws.commons.schema.XmlSchema,java.lang.String)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.ws.commons.schema.XmlSchemaElement getExistingSchemaElement(org.apache.ws.commons.schema.XmlSchema,javax.xml.namespace.QName)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createWrappedMessageSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.AbstractMessageContainer,org.apache.cxf.service.model.AbstractMessageContainer,org.apache.ws.commons.schema.XmlSchema,javax.xml.namespace.QName)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.SchemaInfo getOrCreateSchema(org.apache.cxf.service.model.ServiceInfo,java.lang.String,boolean)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createInputWrappedMessageParts(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,org.apache.cxf.service.model.MessageInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createOutputWrappedMessageParts(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,org.apache.cxf.service.model.MessageInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getEndpointName(boolean)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getServiceName()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getServiceNamespace()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getInterfaceName()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isValidMethod(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isHolder(java.lang.Class,java.lang.reflect.Type)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.reflect.Type getHolderType(java.lang.Class,java.lang.reflect.Type)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isWrapped(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isOutParam(java.lang.reflect.Method,int)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isInParam(java.lang.reflect.Method,int)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getInputMessageName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName createOutputMessageName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean hasOutMessage(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getFaultName(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.Class,java.lang.Class)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getAction(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isHeader(java.lang.reflect.Method,int)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getOperationName(org.apache.cxf.service.model.InterfaceInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isAsync(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getInPartName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getInParameterName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getOutParameterName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getOutPartName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.Class getResponseWrapper(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getResponseWrapperClassName(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.Class getRequestWrapper(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getRequestWrapperClassName(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isWrapperPartQualified(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isWrapperPartNillable(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:long getWrapperPartMaxOccurs(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:long getWrapperPartMinOccurs(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getWsdlURL()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isWrapped()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getStyle()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isRPC(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.DefaultServiceConfiguration:java.lang.Boolean isOperation(java.lang.reflect.Method)",
            "org.apache.cxf.service.ServiceModelVisitor:void walk()",
            "org.apache.cxf.service.ServiceModelVisitor:void visitOperation(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.binding.AbstractBindingFactory:void registerWithBindingManager()",
            "org.apache.cxf.binding.AbstractBindingFactory:org.apache.cxf.service.model.BindingInfo initializeBindingInfo(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding,org.apache.cxf.service.model.BindingInfo)",
            "org.apache.cxf.binding.AbstractBindingFactory:void copyExtensors(org.apache.cxf.service.model.AbstractPropertiesHolder,javax.wsdl.extensions.ElementExtensible,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:org.apache.cxf.service.model.BindingInfo createBindingInfo(org.apache.cxf.service.model.ServiceInfo,java.lang.String,java.lang.Object)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:void createSoapBinding(org.apache.cxf.binding.soap.model.SoapBindingInfo)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:void setupHeaders(org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.service.model.BindingMessageInfo,org.apache.cxf.service.model.BindingMessageInfo,org.apache.cxf.service.model.MessageInfo,org.apache.cxf.binding.soap.SoapBindingConfiguration)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:org.apache.cxf.binding.Binding createBinding(org.apache.cxf.service.model.BindingInfo)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:void addOutOfBandParts(org.apache.cxf.service.model.BindingOperationInfo,javax.wsdl.Message,org.apache.cxf.common.xmlschema.SchemaCollection,boolean,java.lang.String)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:void buildMessage(org.apache.cxf.service.model.MessageInfo,javax.wsdl.Message,org.apache.cxf.common.xmlschema.SchemaCollection,int,java.lang.String)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:org.apache.cxf.service.model.BindingInfo createBindingInfo(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding,java.lang.String)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:void initializeMessage(org.apache.cxf.binding.soap.model.SoapBindingInfo,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.service.model.BindingMessageInfo)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:java.util.List handleMimePart(javax.wsdl.extensions.mime.MIMEPart,java.util.List,org.apache.cxf.service.model.MessageInfo,org.apache.cxf.service.model.BindingMessageInfo,java.util.List,java.util.List)",
            "org.apache.cxf.binding.soap.interceptor.ReadHeadersInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.Soap12FaultOutInterceptor$Soap12FaultOutInterceptorInternal:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.RPCOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.soap.interceptor.SoapActionInInterceptor:void getAndSetOperation(org.apache.cxf.binding.soap.SoapMessage,java.lang.String)",
            "org.apache.cxf.binding.soap.interceptor.SoapHeaderOutFilterInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.RPCInInterceptor:org.apache.cxf.service.model.BindingOperationInfo getOperation(org.apache.cxf.message.Message,javax.xml.namespace.QName)",
            "org.apache.cxf.binding.soap.interceptor.RPCInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor:void writeSoapEnvelopeStart(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor:boolean handleHeaderPart(boolean,org.apache.cxf.binding.soap.SoapMessage,java.lang.String)",
            "org.apache.cxf.binding.soap.interceptor.MustUnderstandInterceptor:void initServiceSideInfo(java.util.Set,org.apache.cxf.binding.soap.SoapMessage,java.util.Set)",
            "org.apache.cxf.binding.soap.interceptor.MustUnderstandInterceptor:void buildMustUnderstandHeaders(java.util.Set,org.apache.cxf.binding.soap.SoapMessage,java.util.Set,java.util.Set)",
            "org.apache.cxf.binding.soap.interceptor.MustUnderstandInterceptor:void checkUnderstand(java.util.Set,java.util.Set,java.util.Set)",
            "org.apache.cxf.binding.soap.interceptor.Soap11FaultOutInterceptor$Soap11FaultOutInterceptorInternal:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.EndpointSelectionInterceptor:org.apache.cxf.endpoint.Endpoint selectEndpoint(org.apache.cxf.message.Message,java.util.Set)",
            "org.apache.cxf.binding.soap.interceptor.MustUnderstandInterceptor$UltimateReceiverMustUnderstandInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.SoapHeaderInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.soap.HeaderUtil:java.util.Set getHeaderQNames(org.apache.cxf.service.model.BindingMessageInfo)",
            "org.apache.cxf.binding.soap.SoapTransportFactory:org.apache.cxf.service.model.EndpointInfo createEndpointInfo(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.BindingInfo,javax.wsdl.Port)",
            "org.apache.cxf.binding.soap.SoapTransportFactory:void registerWithBindingManager()",
            "org.apache.cxf.binding.soap.SoapMessage:boolean hasHeader(javax.xml.namespace.QName)",
            "org.apache.cxf.binding.soap.SoapMessage:org.apache.cxf.headers.Header getHeader(javax.xml.namespace.QName)",
            "org.apache.cxf.binding.soap.saaj.SAAJInInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.saaj.SAAJOutInterceptor$SAAJOutEndingInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.model.SoapBindingInfo:org.apache.cxf.service.model.OperationInfo getOperationByAction(java.lang.String)",
            "org.apache.cxf.binding.xml.interceptor.XMLMessageInInterceptor:org.apache.cxf.service.model.BindingOperationInfo getBindingOperationInfo(boolean,javax.xml.namespace.QName,org.apache.cxf.service.model.BindingInfo,javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.binding.xml.XMLFormatValidator:boolean checkXMLBindingFormat()",
            "org.apache.cxf.binding.xml.XMLFormatValidator:boolean checkXMLFormat(org.apache.cxf.service.model.BindingInfo)",
            "org.apache.cxf.binding.xml.XMLFormatValidator:boolean findXMLFormatRootNode(java.util.Iterator,org.apache.cxf.service.model.BindingOperationInfo,java.lang.String)",
            "org.apache.cxf.binding.xml.XMLBindingFactory:org.apache.cxf.service.model.BindingInfo createBindingInfo(org.apache.cxf.service.model.ServiceInfo,java.lang.String,java.lang.Object)",
            "org.apache.cxf.clustering.AbstractStaticFailoverStrategy:java.util.List getAlternateEndpoints(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.tools.common.Tag:java.lang.String formatAttribute(org.apache.cxf.tools.common.Tag)",
            "org.apache.cxf.tools.common.Tag:java.lang.String formatTag(org.apache.cxf.tools.common.Tag,int)",
            "org.apache.cxf.tools.common.Tag:boolean equals(java.lang.Object)",
            "org.apache.cxf.tools.common.ClassUtils:void compile(org.apache.cxf.tools.common.ToolContext)",
            "org.apache.cxf.tools.common.ToolContext:void addParameters(java.util.Map)",
            "org.apache.cxf.tools.common.VelocityGenerator:void doWrite(java.lang.String,java.io.Writer)",
            "org.apache.cxf.tools.common.toolspec.ToolSpec:boolean isValidInputStream(java.lang.String)",
            "org.apache.cxf.tools.common.toolspec.ToolSpec:java.util.List getInstreamIds()",
            "org.apache.cxf.tools.common.toolspec.ToolSpec:java.util.List getOutstreamIds()",
            "org.apache.cxf.tools.common.toolspec.ToolSpec:java.lang.String getStreamRefName(java.lang.String)",
            "org.apache.cxf.tools.common.toolspec.parser.CommandDocument:java.lang.String[] getParameters(java.lang.String)",
            "org.apache.cxf.tools.common.toolspec.parser.CommandDocument:java.lang.String[] getParameterNames()",
            "org.apache.cxf.tools.common.toolspec.parser.Form:void <init>(org.w3c.dom.Element)",
            "org.apache.cxf.tools.common.toolspec.parser.Option:boolean accept(org.apache.cxf.tools.common.toolspec.parser.TokenInputStream,org.w3c.dom.Element,org.apache.cxf.tools.common.toolspec.parser.ErrorVisitor)",
            "org.apache.cxf.tools.common.toolspec.parser.OptionGroup:void <init>(org.w3c.dom.Element)",
            "org.apache.cxf.tools.common.toolspec.parser.OptionGroup:boolean accept(org.apache.cxf.tools.common.toolspec.parser.TokenInputStream,org.w3c.dom.Element,org.apache.cxf.tools.common.toolspec.parser.ErrorVisitor)",
            "org.apache.cxf.tools.common.toolspec.parser.OptionGroup:boolean isSatisfied(org.apache.cxf.tools.common.toolspec.parser.ErrorVisitor)",
            "org.apache.cxf.tools.common.toolspec.parser.ErrorVisitor:java.lang.String toString()",
            "org.apache.cxf.tools.common.toolspec.parser.CommandLineParser:org.apache.cxf.tools.common.toolspec.parser.CommandDocument parseArguments(java.lang.String[])",
            "org.apache.cxf.tools.common.ProcessorTestBase:boolean assertXmlEquals(java.io.File,java.io.File,java.util.List)",
            "org.apache.cxf.tools.common.ProcessorTestBase:void assertAttributesEquals(javax.xml.namespace.QName,java.util.Map,java.util.Map,java.util.Collection)",
            "org.apache.cxf.tools.common.ProcessorTestBase:void assertTagEquals(org.apache.cxf.tools.common.Tag,org.apache.cxf.tools.common.Tag,java.util.List,java.util.List)",
            "org.apache.cxf.tools.common.ProcessorTestBase:org.apache.cxf.tools.common.Tag getFromSource(org.apache.cxf.tools.common.Tag,org.apache.cxf.tools.common.Tag)",
            "org.apache.cxf.tools.common.model.JAnnotation:java.util.Set getImports()",
            "org.apache.cxf.tools.common.model.JAnnotation:org.apache.cxf.tools.common.model.JAnnotationElement getElementByName(java.lang.String)",
            "org.apache.cxf.tools.common.model.JavaMethod:java.lang.String getSignature()",
            "org.apache.cxf.tools.common.model.JavaMethod:void addAnnotation(java.lang.String,org.apache.cxf.tools.common.model.JAnnotation)",
            "org.apache.cxf.tools.common.model.JavaMethod:java.util.List getParameterList(boolean)",
            "org.apache.cxf.tools.common.model.JavaInterface:void addAnnotation(org.apache.cxf.tools.common.model.JAnnotation)",
            "org.apache.cxf.tools.common.model.JavaInterface:void addImports(java.util.Collection)",
            "org.apache.cxf.tools.common.model.JavaInterface:java.lang.String toString()",
            "org.apache.cxf.tools.common.model.JavaField:void addAnnotation(org.apache.cxf.tools.common.model.JAnnotation)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:boolean isSOAPBinding(javax.wsdl.Binding)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:java.lang.String getBindingStyle(javax.wsdl.Binding)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapOperation getSoapOperation(java.util.List)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:java.lang.String getSOAPOperationStyle(javax.wsdl.BindingOperation)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapBody getBindingInputSOAPBody(javax.wsdl.BindingOperation)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapBody getBindingOutputSOAPBody(javax.wsdl.BindingOperation)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapBody getSoapBody(java.util.List)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:java.util.List getSoapHeaders(java.util.List)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapHeader getBindingInputSOAPHeader(javax.wsdl.BindingOperation)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapHeader getBindingOutputSOAPHeader(javax.wsdl.BindingOperation)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapBinding getSoapBinding(java.util.List)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:java.util.List getBindingOperationSoapFaults(javax.wsdl.BindingOperation)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:boolean isMixedStyle(javax.wsdl.Binding)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:java.lang.String getCanonicalBindingStyle(javax.wsdl.Binding)",
            "org.apache.cxf.buslifecycle.CXFBusLifeCycleManager:void initComplete()",
            "org.apache.cxf.buslifecycle.CXFBusLifeCycleManager:void preShutdown()",
            "org.apache.cxf.buslifecycle.CXFBusLifeCycleManager:void postShutdown()",
            "org.apache.cxf.wsdl11.SchemaUtil:void getSchemas(javax.wsdl.Definition,org.apache.cxf.common.xmlschema.SchemaCollection,java.util.List)",
            "org.apache.cxf.wsdl11.SchemaUtil:void extractSchema(javax.wsdl.Definition,org.apache.cxf.common.xmlschema.SchemaCollection,java.util.List)",
            "org.apache.cxf.wsdl11.SchemaUtil:void parseImports(javax.wsdl.Definition,java.util.List)",
            "org.apache.cxf.wsdl11.SchemaUtil:void getSchemaList(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.SchemaUtil:void addSchema(java.lang.String,javax.wsdl.extensions.schema.Schema)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void parseWSDL(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:java.util.Collection getImports(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void parseImports(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void registerWSDLExtensibilityPlugins(javax.wsdl.extensions.ExtensionRegistry)",
            "org.apache.cxf.wsdl11.WSDLServiceUtils:org.apache.cxf.binding.BindingFactory getBindingFactory(javax.wsdl.Binding,org.apache.cxf.Bus,java.lang.StringBuffer)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:javax.wsdl.Definition build(java.util.Map)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addExtensibilityElements(javax.wsdl.extensions.ElementExtensible,java.util.List)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addExtensibilityAttributes(javax.wsdl.extensions.AttributeExtensible,java.util.Map)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildTypes(java.util.Collection,java.util.Map,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBinding(java.util.Collection,java.util.Collection)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBindingOperation(javax.wsdl.Definition,javax.wsdl.Binding,java.util.Collection)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBindingFault(javax.wsdl.Definition,javax.wsdl.BindingOperation,java.util.Collection)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildService(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildPortTypeOperation(javax.wsdl.PortType,java.util.Collection,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildMessage(javax.wsdl.Message,org.apache.cxf.service.model.AbstractMessageContainer,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void registerInitialExtensions(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:org.apache.cxf.service.model.ServiceSchemaInfo getSchemasForDefinition(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void putSchemasForDefinition(javax.wsdl.Definition,org.apache.cxf.service.model.ServiceSchemaInfo)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void removeDefinition(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void copyExtensors(org.apache.cxf.service.model.AbstractPropertiesHolder,java.util.List)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildMockServices(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition,javax.wsdl.Service,javax.xml.namespace.QName,org.apache.cxf.service.model.DescriptionInfo)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void parseImports(javax.wsdl.Definition,java.util.List)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.EndpointInfo buildEndpoint(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.BindingInfo,javax.wsdl.Port)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.BindingInfo buildBinding(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildInterface(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.PortType)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildInterfaceOperation(org.apache.cxf.service.model.InterfaceInfo,javax.wsdl.Operation)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildMessage(org.apache.cxf.service.model.AbstractMessageContainer,javax.wsdl.Message)",
            "org.apache.cxf.wsdl11.WSDLServiceFactory:org.apache.cxf.service.Service create()",
            "org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor:void insertConstructorArg(org.springframework.beans.factory.config.ConstructorArgumentValues,java.lang.Object)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void activateViaNS(java.lang.String)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadFragment(java.io.InputStream)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void processExtension(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadAndRegister(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:java.lang.Object getExtension(java.lang.String,java.lang.Class)",
            "org.apache.cxf.bus.extension.Extension:java.lang.String toString()",
            "org.apache.cxf.bus.CXFBusImpl:void initializeFeatures()",
            "org.apache.cxf.attachment.LazyDataSource:void load()",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:boolean containsValue(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:javax.activation.DataHandler get(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:javax.activation.DataHandler remove(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:void putAll(java.util.Map)",
            "org.apache.cxf.attachment.AttachmentDeserializer:void cacheStreamedAttachments()",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$1$1:boolean hasNext()",
            "org.apache.cxf.attachment.AttachmentSerializer:void writeAttachments()",
            "org.apache.cxf.attachment.AttachmentUtil:java.util.Map getDHMap(java.util.Collection)",
            "org.apache.cxf.attachment.AttachmentUtil:boolean isTypeSupported(java.lang.String,java.util.List)",
            "org.apache.cxf.attachment.LazyAttachmentCollection:boolean isEmpty()",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$3$1:boolean hasNext()",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$2$1:boolean hasNext()",
            "org.apache.cxf.frontend.ClientFactoryBean:void applyFeatures()",
            "org.apache.cxf.frontend.SimpleMethodDispatcher:org.apache.cxf.service.model.BindingOperationInfo getBindingOperation(java.lang.reflect.Method,org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory:org.apache.cxf.service.model.BindingInfo createBindingInfo()",
            "org.apache.cxf.frontend.ServerFactoryBean:void initializeServiceFactory()",
            "org.apache.cxf.frontend.ServerFactoryBean:void applyFeatures()",
            "org.apache.cxf.aegis.DatabindingException:java.lang.String getActualMessage()",
            "org.apache.cxf.aegis.util.jdom.StaxSerializer:void writeDocument(org.jdom.Document,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.aegis.util.jdom.StaxSerializer:void writeElement(org.jdom.Element,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.aegis.util.jdom.StaxSerializer:boolean isDeclared(javax.xml.stream.XMLStreamWriter,java.lang.String,java.lang.String)",
            "org.apache.cxf.aegis.util.jdom.StaxBuilder:void buildTree(org.jdom.JDOMFactory,javax.xml.stream.XMLStreamReader,org.jdom.Document)",
            "org.apache.cxf.aegis.util.stax.JDOMStreamReader:void setupNamespaces(org.jdom.Element)",
            "org.apache.cxf.aegis.util.stax.JDOMNamespaceContext:java.lang.String rawGetPrefix(org.jdom.Element,java.lang.String)",
            "org.apache.cxf.aegis.util.stax.JDOMNamespaceContext:void rawGetPrefixes(org.jdom.Element,java.lang.String,java.util.List)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void initialize(org.apache.cxf.service.Service)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void initializeOperation(org.apache.cxf.service.Service,org.apache.cxf.aegis.type.TypeMapping,org.apache.cxf.service.model.OperationInfo,java.util.Set)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void initializeOperationTypes(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void initializeMessage(org.apache.cxf.service.Service,org.apache.cxf.aegis.type.TypeMapping,org.apache.cxf.service.model.AbstractMessageContainer,int,java.util.Set)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void initializeMessageTypes(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.AbstractMessageContainer,int)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void addDependencies(java.util.Set,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void createSchemas(org.apache.cxf.service.Service,java.util.Set)",
            "org.apache.cxf.aegis.AegisContext:void processRootTypes()",
            "org.apache.cxf.aegis.type.basic.XMLBeanTypeInfo:org.w3c.dom.Element getPropertyElement(java.lang.String)",
            "org.apache.cxf.aegis.type.basic.BeanType:void writeObjectInternal(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,boolean)",
            "org.apache.cxf.aegis.type.basic.BeanType:java.util.Set getDependencies()",
            "org.apache.cxf.aegis.type.basic.BeanType:void writeSchema(org.apache.ws.commons.schema.XmlSchema)",
            "org.apache.cxf.aegis.type.basic.BeanTypeInfo:boolean containsPropertyName(java.util.List,java.lang.String)",
            "org.apache.cxf.aegis.type.mtom.AttachmentUtil:org.apache.cxf.message.Attachment getAttachment(java.lang.String,java.util.Collection)",
            "org.apache.cxf.aegis.type.encoded.ArrayTypeInfo:void <init>(javax.xml.namespace.NamespaceContext,java.lang.String,java.lang.String)",
            "org.apache.cxf.aegis.type.encoded.ArrayTypeInfo:java.lang.String toString()",
            "org.apache.cxf.aegis.type.encoded.SoapArrayType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.SoapArrayType:java.lang.Object makeArray(java.util.List,java.util.List,java.lang.Class)",
            "org.apache.cxf.aegis.type.encoded.TrailingBlocks:java.util.List writeBlocks(org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.SoapRefRegistry:void addInstance(java.lang.String,java.lang.Object)",
            "org.apache.cxf.aegis.type.XMLTypeCreator:org.w3c.dom.Element getBestMatch(org.w3c.dom.Element,java.lang.reflect.Method,java.util.List)",
            "org.apache.cxf.aegis.type.collection.MapType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.collection.CollectionType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.jaxws.JaxWsProxyFactoryBean:boolean needWrapperClassInterceptor(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.jaxws.JaxWsProxyFactoryBean:void buildHandlerChain(org.apache.cxf.jaxws.JaxWsClientProxy)",
            "org.apache.cxf.jaxws.handler.HandlerResolverImpl:java.util.List createHandlerChain(javax.xml.ws.handler.PortInfo)",
            "org.apache.cxf.jaxws.handler.HandlerChainInvoker:void <init>(java.util.List,boolean)",
            "org.apache.cxf.jaxws.handler.HandlerChainInvoker:boolean invokeHandleFault(java.util.List,javax.xml.ws.handler.MessageContext)",
            "org.apache.cxf.jaxws.handler.HandlerChainInvoker:boolean invokeHandleMessage(java.util.List,javax.xml.ws.handler.MessageContext)",
            "org.apache.cxf.jaxws.handler.HandlerChainBuilder:java.util.List buildHandlerChainFromConfiguration(java.util.List)",
            "org.apache.cxf.jaxws.handler.HandlerChainBuilder:java.util.List sortHandlers(java.util.List)",
            "org.apache.cxf.jaxws.handler.HandlerChainBuilder:void configureHandler(javax.xml.ws.handler.Handler,org.apache.cxf.jaxws.javaee.PortComponentHandlerType)",
            "org.apache.cxf.jaxws.handler.soap.SOAPMessageContextImpl:java.lang.Object[] getHeaders(javax.xml.namespace.QName,javax.xml.bind.JAXBContext,boolean)",
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerInterceptor:java.util.Set getUnderstoodHeaders()",
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerInterceptor:javax.xml.ws.handler.MessageContext createProtocolMessageContext(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerFaultInInterceptor:java.util.Set getUnderstoodHeaders()",
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerFaultOutInterceptor:java.util.Set getUnderstoodHeaders()",
            "org.apache.cxf.jaxws.support.JaxWsEndpointImpl:boolean hasUsingAddressing(java.util.List)",
            "org.apache.cxf.jaxws.support.JaxWsEndpointImpl:boolean addressingRequired(java.util.List)",
            "org.apache.cxf.jaxws.support.JaxWsEndpointImpl:javax.xml.ws.soap.AddressingFeature getAddressingFeature()",
            "org.apache.cxf.jaxws.support.JaxWsEndpointImpl:org.apache.cxf.ws.addressing.WSAddressingFeature getWSAddressingFeature()",
            "org.apache.cxf.jaxws.support.JaxWsEndpointImpl:javax.xml.ws.soap.MTOMFeature getMTOMFeature()",
            "org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean:void initializeWSDLOperationsForProvider()",
            "org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean:org.apache.cxf.service.model.FaultInfo getFaultInfo(org.apache.cxf.service.model.OperationInfo,java.lang.Class)",
            "org.apache.cxf.jaxws.support.JaxWsImplementorInfo:java.lang.String getWsdlLocation()",
            "org.apache.cxf.jaxws.support.JaxWsImplementorInfo:javax.xml.namespace.QName getInterfaceName()",
            "org.apache.cxf.jaxws.support.JaxWsImplementorInfo:java.lang.String getImplementorClassName()",
            "org.apache.cxf.jaxws.WrapperClassGenerator:java.util.Set generate()",
            "org.apache.cxf.jaxws.WrapperClassGenerator:void createWrapperClass(org.apache.cxf.service.model.MessagePartInfo,org.apache.cxf.service.model.MessageInfo,org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,boolean)",
            "org.apache.cxf.jaxws.WrapperClassGenerator:void addJAXBAnnotations(org.objectweb.asm.FieldVisitor,java.util.List)",
            "org.apache.cxf.jaxws.JaxWsClientProxy:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])",
            "org.apache.cxf.jaxws.ServiceImpl:void initializePorts()",
            "org.apache.cxf.jaxws.ServiceImpl:org.apache.cxf.service.factory.AbstractServiceFactoryBean createDispatchService(org.apache.cxf.databinding.DataBinding)",
            "org.apache.cxf.jaxws.ServiceImpl:java.lang.Object getPort(org.apache.cxf.ws.addressing.EndpointReferenceType,java.lang.Class,javax.xml.ws.WebServiceFeature[])",
            "org.apache.cxf.jaxws.ServiceImpl:javax.xml.ws.Dispatch createDispatch(javax.xml.namespace.QName,java.lang.Class,javax.xml.ws.Service$Mode,javax.xml.ws.WebServiceFeature[])",
            "org.apache.cxf.jaxws.ServiceImpl:javax.xml.ws.Dispatch createDispatch(javax.xml.namespace.QName,javax.xml.bind.JAXBContext,javax.xml.ws.Service$Mode,javax.xml.ws.WebServiceFeature[])",
            "org.apache.cxf.jaxws.spi.ProviderImpl:javax.xml.ws.wsaddressing.W3CEndpointReference createW3CEndpointReference(java.lang.String,javax.xml.namespace.QName,javax.xml.namespace.QName,java.util.List,java.lang.String,java.util.List)",
            "org.apache.cxf.jaxws.JaxWsServerFactoryBean:void buildHandlerChain()",
            "org.apache.cxf.jaxws.DispatchImpl:void addInvokeOperation(boolean)",
            "org.apache.cxf.jaxws.interceptors.MessageModeInInterceptor$MultiPartDataSource:void nextCurrent()",
            "org.apache.cxf.jaxws.interceptors.WebFaultOutInterceptor:org.apache.cxf.service.model.MessagePartInfo getFaultMessagePart(javax.xml.namespace.QName,org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.jaxws.interceptors.HolderOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.interceptors.SwAInInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.jaxws.interceptors.WrapperClassOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.interceptors.WrapperClassOutInterceptor:org.apache.cxf.databinding.WrapperHelper createWrapperHelper(org.apache.cxf.databinding.WrapperCapableDatabinding,org.apache.cxf.service.model.MessageInfo,org.apache.cxf.service.model.MessageInfo,java.lang.Class)",
            "org.apache.cxf.jaxws.interceptors.HolderInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.interceptors.WrapperClassInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.interceptors.WrapperClassInInterceptor:org.apache.cxf.databinding.WrapperHelper createWrapperHelper(org.apache.cxf.databinding.WrapperCapableDatabinding,org.apache.cxf.service.model.MessageInfo,org.apache.cxf.service.model.MessageInfo,java.lang.Class)",
            "org.apache.cxf.jaxws.interceptors.SwAOutInterceptor:void processAttachments(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.binding.soap.model.SoapBodyInfo)",
            "org.apache.cxf.jaxws.binding.http.HTTPBindingImpl:void validate()",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:void copyScoped(java.util.Map)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:void clear()",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:java.util.Set keySet()",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:java.util.Set entrySet()",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:void putAll(java.util.Map)",
            "org.apache.cxf.jaxws.AbstractJAXWSMethodInvoker:java.util.Map removeHandlerProperties(org.apache.cxf.jaxws.context.WrappedMessageContext)",
            "org.apache.cxf.jaxws.AbstractJAXWSMethodInvoker:void addHandlerProperties(org.apache.cxf.jaxws.context.WrappedMessageContext,java.util.Map)",
            "org.apache.cxf.jaxws.AbstractJAXWSMethodInvoker:void updateWebServiceContext(org.apache.cxf.message.Exchange,javax.xml.ws.handler.MessageContext)",
            "org.apache.cxf.xmlbeans.XmlBeansDataBinding:void initialize(org.apache.cxf.service.Service)"
        ]
    },
    "org.apache.cxf.common.util.StringUtils:java.util.List getParts(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.util.Map getQueries(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.common.util.StringUtils:java.lang.String getFirstNotEmpty(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.lang.String getOperationName(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.common.util.StringUtils:java.lang.String getFirstNotEmpty(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.StringUtils:java.lang.String formatVersionNumber(java.lang.String)"
        ]
    },
    "org.apache.cxf.common.util.ReflectionUtil:java.util.List getPackagesFromJar(java.io.File)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.util.CacheMap:void updateMainDataMap()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.CacheMap:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.common.util.CacheMap:java.util.Set entrySet()",
            "org.apache.cxf.common.util.CacheMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.common.util.CacheMap:java.util.Set keySet()",
            "org.apache.cxf.common.util.CacheMap:int size()",
            "org.apache.cxf.common.util.CacheMap:java.util.Collection values()",
            "org.apache.cxf.common.util.CacheMap:java.lang.String toString()"
        ]
    },
    "org.apache.cxf.common.util.CacheMap:void putAll(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.MapNamespaceContext:void addNamespaces(java.util.Map)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:void putAll(java.util.Map)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void <init>(org.apache.cxf.Bus,java.util.Map,java.util.Map)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] processResult(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,java.util.Map)",
            "org.apache.cxf.endpoint.ClientImpl$EchoContext:void putAll(java.util.Map)",
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.RelatesToType convert(org.apache.cxf.ws.addressing.v200408.Relationship)",
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.RelatesToType convert(org.apache.cxf.ws.addressing.v200403.Relationship)",
            "org.apache.cxf.ws.addressing.VersionTransformer:void putAll(java.util.Map,java.util.Map)",
            "org.apache.cxf.ws.security.trust.STSClient:void setProperties(java.util.Map)",
            "org.apache.cxf.ws.security.trust.STSClient:org.apache.cxf.ws.security.tokenstore.SecurityToken requestSecurityToken(java.lang.String,java.lang.String,java.lang.String,org.apache.cxf.ws.security.tokenstore.SecurityToken)",
            "org.apache.cxf.ws.security.trust.STSClient:boolean validateSecurityToken(org.apache.cxf.ws.security.tokenstore.SecurityToken,java.lang.String)",
            "org.apache.cxf.ws.security.trust.STSClient:void cancelSecurityToken(org.apache.cxf.ws.security.tokenstore.SecurityToken)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void doEndorse()",
            "org.apache.cxf.tools.common.ToolContext:void loadDefaultNS2Pck(java.io.InputStream)",
            "org.apache.cxf.tools.common.ToolContext:void loadDefaultExcludes(java.io.InputStream)",
            "org.apache.cxf.wsdl11.SchemaUtil:void extractSchema(javax.wsdl.Definition,org.apache.cxf.common.xmlschema.SchemaCollection,java.util.List)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void getSchemas(javax.wsdl.Definition,org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.jaxws.JaxWsProxyFactoryBean:org.apache.cxf.frontend.ClientProxy clientClientProxy(org.apache.cxf.endpoint.Client)",
            "org.apache.cxf.jaxws.EndpointImpl:org.apache.cxf.endpoint.ServerImpl getServer(java.lang.String)"
        ]
    },
    "org.apache.cxf.common.util.AbstractTwoStageCache:boolean recycle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.util.CollectionUtils:java.util.Collection diff(java.util.Collection,java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.util.Map keepInOrder(java.util.Map,org.apache.cxf.service.model.OperationInfo,java.util.List)"
        ]
    },
    "org.apache.cxf.common.util.CollectionUtils:boolean isEmpty(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.URIMappingInterceptor:org.apache.cxf.message.MessageContentsList getParameters(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo)"
        ]
    },
    "org.apache.cxf.common.util.TwoStageMap:void putAll(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.MapNamespaceContext:void addNamespaces(java.util.Map)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:void putAll(java.util.Map)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void <init>(org.apache.cxf.Bus,java.util.Map,java.util.Map)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] processResult(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,java.util.Map)",
            "org.apache.cxf.endpoint.ClientImpl$EchoContext:void putAll(java.util.Map)",
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.RelatesToType convert(org.apache.cxf.ws.addressing.v200408.Relationship)",
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.RelatesToType convert(org.apache.cxf.ws.addressing.v200403.Relationship)",
            "org.apache.cxf.ws.addressing.VersionTransformer:void putAll(java.util.Map,java.util.Map)",
            "org.apache.cxf.ws.security.trust.STSClient:void setProperties(java.util.Map)",
            "org.apache.cxf.ws.security.trust.STSClient:org.apache.cxf.ws.security.tokenstore.SecurityToken requestSecurityToken(java.lang.String,java.lang.String,java.lang.String,org.apache.cxf.ws.security.tokenstore.SecurityToken)",
            "org.apache.cxf.ws.security.trust.STSClient:boolean validateSecurityToken(org.apache.cxf.ws.security.tokenstore.SecurityToken,java.lang.String)",
            "org.apache.cxf.ws.security.trust.STSClient:void cancelSecurityToken(org.apache.cxf.ws.security.tokenstore.SecurityToken)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void doEndorse()",
            "org.apache.cxf.tools.common.ToolContext:void loadDefaultNS2Pck(java.io.InputStream)",
            "org.apache.cxf.tools.common.ToolContext:void loadDefaultExcludes(java.io.InputStream)",
            "org.apache.cxf.wsdl11.SchemaUtil:void extractSchema(javax.wsdl.Definition,org.apache.cxf.common.xmlschema.SchemaCollection,java.util.List)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void getSchemas(javax.wsdl.Definition,org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.jaxws.JaxWsProxyFactoryBean:org.apache.cxf.frontend.ClientProxy clientClientProxy(org.apache.cxf.endpoint.Client)",
            "org.apache.cxf.jaxws.EndpointImpl:org.apache.cxf.endpoint.ServerImpl getServer(java.lang.String)"
        ]
    },
    "org.apache.cxf.common.injection.ResourceInjector:void invokePostConstruct()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.injection.ResourceInjector:void construct(java.lang.Object)",
            "org.apache.cxf.common.injection.ResourceInjector:void construct(java.lang.Object,java.lang.Class)"
        ]
    },
    "org.apache.cxf.common.injection.ResourceInjector:void invokePreDestroy()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.injection.ResourceInjector:void destroy(java.lang.Object)"
        ]
    },
    "org.apache.cxf.common.annotation.AnnotationProcessor:void processMethods(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.annotation.AnnotationProcessor:void accept(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)",
            "org.apache.cxf.common.annotation.AnnotationProcessor:void processMethods(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)"
        ]
    },
    "org.apache.cxf.common.annotation.AnnotationProcessor:void processFields(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.annotation.AnnotationProcessor:void accept(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)",
            "org.apache.cxf.common.annotation.AnnotationProcessor:void processFields(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)"
        ]
    },
    "org.apache.cxf.common.annotation.AnnotationProcessor:void processClass(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.annotation.AnnotationProcessor:void accept(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)",
            "org.apache.cxf.common.annotation.AnnotationProcessor:void processClass(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)"
        ]
    },
    "org.apache.cxf.resource.DefaultResourceManager:java.lang.Object findResource(java.lang.String,java.lang.Class,boolean,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.resource.DefaultResourceManager:java.lang.Object resolveResource(java.lang.String,java.lang.Class)",
            "org.apache.cxf.resource.DefaultResourceManager:java.lang.Object resolveResource(java.lang.String,java.lang.Class,java.util.List)",
            "org.apache.cxf.resource.DefaultResourceManager:java.io.InputStream getResourceAsStream(java.lang.String)"
        ]
    },
    "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.util.Set entrySet()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap$SpringBeanMapWrapper:java.util.Set entrySet()"
        ]
    },
    "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object get(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.util.Collection values()",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap$Entry:java.lang.Object getValue()",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap$SpringBeanMapWrapper:java.lang.Object get(java.lang.Object)"
        ]
    },
    "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.util.Collection values()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap$SpringBeanMapWrapper:java.util.Collection values()"
        ]
    },
    "org.apache.cxf.configuration.spring.SpringBeanMap:void processBeans(org.springframework.context.ApplicationContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:void afterPropertiesSet()",
            "org.apache.cxf.configuration.spring.SpringBeanMap:void processBeans(org.springframework.context.ApplicationContext)"
        ]
    },
    "org.apache.cxf.configuration.spring.SpringBeanQNameMap:void processBeans(org.springframework.context.ApplicationContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:void afterPropertiesSet()",
            "org.apache.cxf.configuration.spring.SpringBeanQNameMap:void processBeans(org.springframework.context.ApplicationContext)"
        ]
    },
    "org.apache.cxf.configuration.spring.ConfigurerImpl:void initWildcardDefinitionMap()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void addApplicationContext(org.springframework.context.ApplicationContext)"
        ]
    },
    "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureBean(java.lang.String,java.lang.Object,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureWithWildCard(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureBean(java.lang.String,java.lang.Object,boolean)"
        ]
    },
    "org.apache.cxf.configuration.jsse.spring.TLSParameterJaxBUtils:java.security.KeyStore createTrustStore(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.jsse.spring.TLSParameterJaxBUtils:java.security.KeyStore getKeyStore(org.apache.cxf.configuration.security.CertStoreType)"
        ]
    },
    "org.apache.cxf.jaxb.JAXBUtils:java.lang.String makeConventionalIdentifier(java.util.List,org.apache.cxf.jaxb.JAXBUtils$IdentifierType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.JAXBUtils:java.lang.String nameToIdentifier(java.lang.String,org.apache.cxf.jaxb.JAXBUtils$IdentifierType)"
        ]
    },
    "org.apache.cxf.jaxb.JAXBDataBinding:void initialize(org.apache.cxf.service.Service)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.AbstractServiceFactoryBean:void initializeDataBindings()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromWSDL(java.lang.String)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromClass()"
        ]
    },
    "org.apache.cxf.jaxb.JAXBSchemaInitializer:javax.xml.namespace.QName getTypeName(org.apache.cxf.jaxb.JAXBBeanInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.JAXBSchemaInitializer:void begin(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.jaxb.JAXBSchemaInitializer:void checkForExistence(org.apache.cxf.service.model.MessagePartInfo)"
        ]
    },
    "org.apache.cxf.jaxb.JAXBSchemaInitializer:void end(org.apache.cxf.service.model.FaultInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.ServiceModelVisitor:void visitOperation(org.apache.cxf.service.model.OperationInfo)"
        ]
    },
    "org.apache.cxf.jaxb.JAXBSchemaInitializer:void buildExceptionType(org.apache.cxf.service.model.MessagePartInfo,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.JAXBSchemaInitializer:void begin(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.jaxb.JAXBSchemaInitializer:void checkForExistence(org.apache.cxf.service.model.MessagePartInfo)"
        ]
    },
    "org.apache.cxf.jaxb.JAXBSchemaInitializer:void addElement(org.apache.ws.commons.schema.XmlSchemaSequence,org.apache.cxf.jaxb.JAXBBeanInfo,javax.xml.namespace.QName,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.JAXBSchemaInitializer:void buildExceptionType(org.apache.cxf.service.model.MessagePartInfo,java.lang.Class)"
        ]
    },
    "org.apache.cxf.jaxb.JAXBSchemaInitializer:boolean isExistSchemaElement(org.apache.ws.commons.schema.XmlSchema,javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.JAXBSchemaInitializer:void end(org.apache.cxf.service.model.FaultInfo)"
        ]
    },
    "org.apache.cxf.jaxb.io.DataWriterImpl:javax.xml.bind.Marshaller createMarshaller(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.io.DataWriterImpl:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,java.lang.Object)"
        ]
    },
    "org.apache.cxf.jaxb.io.DataReaderImpl:javax.xml.bind.Unmarshaller createUnmarshaller()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.io.DataReaderImpl:java.lang.Object read(org.apache.cxf.service.model.MessagePartInfo,java.lang.Object)",
            "org.apache.cxf.jaxb.io.DataReaderImpl:java.lang.Object read(javax.xml.namespace.QName,java.lang.Object,java.lang.Class)"
        ]
    },
    "org.apache.cxf.management.utils.ManagementConsole:void listAllManagedEndpoint()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.management.utils.ManagementConsole:void doManagement()"
        ]
    },
    "org.apache.cxf.management.utils.ManagementConsole:void invokeEndpoint(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.management.utils.ManagementConsole:void startEndpoint()",
            "org.apache.cxf.management.utils.ManagementConsole:void stopEndpoint()",
            "org.apache.cxf.management.utils.ManagementConsole:void restartEndpoint()"
        ]
    },
    "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxSource:void parse()"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:void writeStartElementEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:void writeEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)"
        ]
    },
    "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.lang.String getNamespaceURI(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.CachingXmlEventWriter:java.lang.String creatPrefix()",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:java.lang.String getUniquePrefix(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.interceptor.WrappedOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.wsdl.JAXBExtensionHelper$MappingReaderDelegate$1:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.aegis.util.NamespaceHelper:java.lang.String getUniquePrefix(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.aegis.util.NamespaceHelper:javax.xml.namespace.QName createQName(javax.xml.namespace.NamespaceContext,java.lang.String)",
            "org.apache.cxf.aegis.xml.stax.ElementWriter:void writeStartElement()",
            "org.apache.cxf.aegis.xml.stax.ElementWriter:java.lang.String getPrefixForNamespace(java.lang.String,java.lang.String)",
            "org.apache.cxf.aegis.xml.stax.ElementReader:void extractXsiType()",
            "org.apache.cxf.aegis.type.encoded.ArrayTypeInfo:void <init>(javax.xml.namespace.NamespaceContext,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.message.MessageUtils:boolean isDOMPresent(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:boolean writeToOutputStream(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingInfo,org.apache.cxf.service.Service)",
            "org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)"
        ]
    },
    "org.apache.cxf.message.MessageImpl:void copyContent(org.apache.cxf.message.Message,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.interceptor.URIMappingInterceptor:org.apache.cxf.service.model.BindingOperationInfo findAnyOp(org.apache.cxf.message.Exchange)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.URIMappingInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.URIMappingInterceptor:java.util.Map keepInOrder(java.util.Map,org.apache.cxf.service.model.OperationInfo,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.URIMappingInterceptor:org.apache.cxf.message.MessageContentsList getParameters(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo)"
        ]
    },
    "org.apache.cxf.interceptor.URIMappingInterceptor:org.apache.cxf.message.MessageContentsList getParameters(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.URIMappingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:org.apache.cxf.message.MessageContentsList getParameters(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo)"
        ]
    },
    "org.apache.cxf.interceptor.URIMappingInterceptor:java.util.Map getQueries(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.URIMappingInterceptor:org.apache.cxf.message.MessageContentsList getParameters(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo)"
        ]
    },
    "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:org.apache.cxf.service.model.MessagePartInfo findMessagePart(org.apache.cxf.message.Exchange,java.util.Collection,javax.xml.namespace.QName,boolean,int,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.BareInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.FaultOutInterceptor:org.apache.cxf.service.model.FaultInfo getFaultForClass(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.FaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:void writeParts(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.message.MessageContentsList,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.BareOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.soap.interceptor.RPCOutInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.ConduitInitiatorManagerImpl:org.apache.cxf.transport.ConduitInitiator getConduitInitiatorForUri(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.TransportURIResolver:org.xml.sax.InputSource resolve(java.lang.String,java.lang.String)",
            "org.apache.cxf.ws.security.trust.STSUtils:org.apache.cxf.endpoint.Endpoint createSTSEndpoint(org.apache.cxf.Bus,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.neethi.Policy,javax.xml.namespace.QName)",
            "org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory:void modifyTransportIdPerAddress(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory:org.apache.cxf.service.model.EndpointInfo createEndpointInfo()"
        ]
    },
    "org.apache.cxf.transport.http.WSDLQueryHandler:void updateDoc(org.w3c.dom.Document,java.lang.String,java.util.Map,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.WSDLQueryHandler:void writeResponse(java.lang.String,java.lang.String,org.apache.cxf.service.model.EndpointInfo,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.transport.http.WSDLQueryHandler:void updateDefinition(javax.wsdl.Definition,java.util.Map,java.util.Map,java.lang.String,org.apache.cxf.service.model.EndpointInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.WSDLQueryHandler:void writeResponse(java.lang.String,java.lang.String,org.apache.cxf.service.model.EndpointInfo,java.io.OutputStream)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updateDefinition(javax.wsdl.Definition,java.util.Map,java.util.Map,java.lang.String,org.apache.cxf.service.model.EndpointInfo)"
        ]
    },
    "org.apache.cxf.transport.http.WSDLQueryHandler:void updatePublishedEndpointUrl(java.lang.String,javax.wsdl.Definition,javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.WSDLQueryHandler:void writeResponse(java.lang.String,java.lang.String,org.apache.cxf.service.model.EndpointInfo,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.transport.http.WSDLQueryHandler:void setSoapAddressLocationOn(javax.wsdl.Port,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updatePublishedEndpointUrl(java.lang.String,javax.wsdl.Definition,javax.xml.namespace.QName)"
        ]
    },
    "org.apache.cxf.transport.http.WSDLQueryHandler:void updateSchemaImports(javax.wsdl.extensions.schema.Schema,java.util.Map,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updateDefinition(javax.wsdl.Definition,java.util.Map,java.util.Map,java.lang.String,org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updateSchemaImports(javax.wsdl.extensions.schema.Schema,java.util.Map,java.lang.String)"
        ]
    },
    "org.apache.cxf.transport.http.Cookie:void handleSetCookie(java.util.Map,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponseInternal()"
        ]
    },
    "org.apache.cxf.transport.http.AbstractHTTPTransportFactory:void registerWithBindingManager()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.http.AbstractHTTPTransportFactory:org.apache.cxf.service.model.EndpointInfo createEndpointInfo(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.BindingInfo,javax.wsdl.Port)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.EndpointInfo buildEndpoint(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.BindingInfo,javax.wsdl.Port)",
            "org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory:org.apache.cxf.service.model.EndpointInfo createEndpointInfo()"
        ]
    },
    "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPClientPolicy getClient(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPClientPolicy)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:org.apache.cxf.transports.http.configuration.HTTPClientPolicy getClient(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPServerPolicy getServer(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPServerPolicy)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPClientPolicy getClient(org.apache.cxf.ws.policy.PolicyEngine,org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.transport.Conduit)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:void initializeConfig()"
        ]
    },
    "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPServerPolicy getServer(org.apache.cxf.ws.policy.PolicyEngine,org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.transport.Destination)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void initConfig()"
        ]
    },
    "org.apache.cxf.transport.http.policy.PolicyUtils:void assertClientPolicy(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPClientPolicy)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:void assertMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.http.policy.PolicyUtils:void assertServerPolicy(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPServerPolicy)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void assertMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPClientPolicy getClient(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPClientPolicy getClient(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPClientPolicy)"
        ]
    },
    "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPServerPolicy getServer(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPServerPolicy getServer(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPServerPolicy)"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit:void prepare(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.OneWayProcessorInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.MessageSenderInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.TransportURIResolver:org.xml.sax.InputSource resolve(java.lang.String,java.lang.String)",
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl:void resend(org.apache.cxf.transport.Conduit,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit:void transferProtocolHeadersToURLConnection(org.apache.cxf.message.Message,java.net.URLConnection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:void setURLRequestHeaders(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit:void logProtocolHeaders(java.util.logging.Level,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:void setURLRequestHeaders(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit:java.lang.String extractAuthorizationRealm(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection authorizationRetransmit(java.net.HttpURLConnection,org.apache.cxf.message.Message,org.apache.cxf.io.CacheAndWriteOutputStream)"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit:java.lang.String extractLocation(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection redirectRetransmit(java.net.HttpURLConnection,org.apache.cxf.message.Message,org.apache.cxf.io.CacheAndWriteOutputStream)"
        ]
    },
    "org.apache.cxf.transport.http.AbstractHTTPDestination:void copyResponseHeaders(org.apache.cxf.message.Message,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.AbstractHTTPDestination:java.io.OutputStream flushHeaders(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.http.gzip.GZIPOutInterceptor:org.apache.cxf.transport.http.gzip.GZIPOutInterceptor$UseGzip gzipPermitted(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.gzip.GZIPOutInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.http.gzip.GZIPInInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.AbstractMultiplexDestination:java.lang.String extractStringElementFromAny(javax.xml.namespace.QName,org.apache.cxf.ws.addressing.EndpointReferenceType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.AbstractMultiplexDestination:java.lang.String getId(java.util.Map)"
        ]
    },
    "org.apache.cxf.transport.DestinationFactoryManagerImpl:org.apache.cxf.transport.DestinationFactory getDestinationFactoryForUri(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:org.apache.cxf.transport.Destination getDestination(java.lang.String)",
            "org.apache.cxf.endpoint.ServerImpl:void initDestination(org.apache.cxf.transport.DestinationFactory)",
            "org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory:void modifyTransportIdPerAddress(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory:org.apache.cxf.service.model.EndpointInfo createEndpointInfo()",
            "org.apache.cxf.jaxws.ServiceImpl:org.apache.cxf.service.model.EndpointInfo createEndpointInfo(org.apache.cxf.service.factory.AbstractServiceFactoryBean,javax.xml.namespace.QName,org.apache.cxf.jaxws.handler.PortInfoImpl)"
        ]
    },
    "org.apache.cxf.transport.servlet.ServletController:void updateDests(javax.servlet.http.HttpServletRequest)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.servlet.ServletController:void invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.cxf.transport.servlet.ServletController:org.apache.cxf.transport.servlet.ServletDestination checkRestfulRequest(javax.servlet.http.HttpServletRequest)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.servlet.ServletController:void invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.cxf.transport.servlet.ServletController:void generateServiceList(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.servlet.ServletController:void invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.cxf.transport.servlet.ServletController:void generateUnformattedServiceList(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.servlet.ServletController:void invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.cxf.transport.servlet.ServletTransportFactory:void register()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.servlet.AbstractCXFServlet:void replaceDestinationFactory()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.https.CertificateHostnameVerifier$Certificates:java.lang.String[] getDNSSubjectAlts(java.security.cert.X509Certificate)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.https.CertificateHostnameVerifier$AbstractVerifier:void check(java.lang.String[],java.security.cert.X509Certificate)"
        ]
    },
    "org.apache.cxf.transport.https.SSLUtils:java.util.List compileRegexPatterns(java.util.List,boolean,java.util.logging.Logger)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.https.SSLUtils:java.lang.String[] getCiphersuites(java.util.List,java.lang.String[],org.apache.cxf.configuration.security.FiltersType,java.util.logging.Logger,boolean)"
        ]
    },
    "org.apache.cxf.transport.https.SSLUtils:boolean matchesOneOf(java.lang.String,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.https.SSLUtils:java.lang.String[] getCiphersuites(java.util.List,java.lang.String[],org.apache.cxf.configuration.security.FiltersType,java.util.logging.Logger,boolean)"
        ]
    },
    "org.apache.cxf.transport.https.CertificateHostnameVerifier$AbstractVerifier:void check(java.lang.String[],java.lang.String[],java.lang.String[],boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.https.CertificateHostnameVerifier$3:void check(java.lang.String[],java.lang.String[],java.lang.String[])",
            "org.apache.cxf.transport.https.CertificateHostnameVerifier$4:void check(java.lang.String[],java.lang.String[],java.lang.String[])",
            "org.apache.cxf.transport.https.CertificateHostnameVerifier$1:void check(java.lang.String[],java.lang.String[],java.lang.String[])",
            "org.apache.cxf.transport.https.CertificateHostnameVerifier$2:void check(java.lang.String[],java.lang.String[],java.lang.String[])"
        ]
    },
    "org.apache.cxf.transport.http_jetty.spring.JettySpringTypesFactory:java.util.Map toThreadingParameters(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.spring.JettySpringTypesFactory:java.util.Map createThreadingParametersMap(java.lang.String)"
        ]
    },
    "org.apache.cxf.transport.http_jetty.spring.JettySpringTypesFactory:java.util.Map toTLSServerParamenters(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.spring.JettySpringTypesFactory:java.util.Map createTLSServerParametersMap(java.lang.String)"
        ]
    },
    "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineFactoryBeanDefinitionParser:java.util.List getRequiredElementsList(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,javax.xml.namespace.QName,org.springframework.beans.factory.support.BeanDefinitionBuilder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineFactoryBeanDefinitionParser:void doParse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder)"
        ]
    },
    "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine:void addServant(java.net.URL,org.apache.cxf.transport.http_jetty.JettyHTTPHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void activate()"
        ]
    },
    "org.apache.cxf.transport.http_jetty.JettyHTTPTransportFactory:void finalizeConfig()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void setEnginesList(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.jms.JMSUtils:void addProtocolHeaders(javax.jms.Message,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.jms.JMSDestination$2:javax.jms.Message createMessage(javax.jms.Session)",
            "org.apache.cxf.transport.jms.JMSUtils:javax.jms.Message buildJMSMessageFromCXFMessage(org.apache.cxf.message.Message,java.lang.Object,java.lang.String,javax.jms.Session,javax.jms.Destination,java.lang.String)"
        ]
    },
    "org.apache.cxf.feature.AbstractFeature:java.lang.Object getActive(java.util.List,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.endpoint.ClientLifeCycleManagerImpl:void clientCreated(org.apache.cxf.endpoint.Client)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:void notifyLifecycleManager()"
        ]
    },
    "org.apache.cxf.endpoint.ServerLifeCycleManagerImpl:void startServer(org.apache.cxf.endpoint.Server)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ServerImpl:void start()"
        ]
    },
    "org.apache.cxf.endpoint.EndpointResolverRegistryImpl:org.apache.cxf.ws.addressing.EndpointReferenceType resolve(org.apache.cxf.ws.addressing.EndpointReferenceType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl.EndpointReferenceUtils:org.apache.cxf.ws.addressing.EndpointReferenceType resolve(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.endpoint.EndpointResolverRegistryImpl:org.apache.cxf.ws.addressing.EndpointReferenceType renew(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.ws.addressing.EndpointReferenceType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl.EndpointReferenceUtils:org.apache.cxf.ws.addressing.EndpointReferenceType renew(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.endpoint.EndpointResolverRegistryImpl:org.apache.cxf.ws.addressing.EndpointReferenceType mint(javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl.EndpointReferenceUtils:org.apache.cxf.ws.addressing.EndpointReferenceType mint(javax.xml.namespace.QName,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.endpoint.EndpointResolverRegistryImpl:org.apache.cxf.ws.addressing.EndpointReferenceType mint(org.apache.cxf.ws.addressing.EndpointReferenceType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl.EndpointReferenceUtils:org.apache.cxf.ws.addressing.EndpointReferenceType mint(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.endpoint.ServiceContractResolverRegistryImpl:java.net.URI getContractLocation(javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getWsdlURL()",
            "org.apache.cxf.jaxws.ServiceImpl:void <init>(org.apache.cxf.Bus,java.net.URL,javax.xml.namespace.QName,java.lang.Class)"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:org.apache.cxf.service.model.EndpointInfo findEndpoint(org.apache.cxf.service.Service,javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:void <init>(org.apache.cxf.Bus,java.net.URL,javax.xml.namespace.QName,javax.xml.namespace.QName,org.apache.cxf.endpoint.EndpointImplFactory)"
        ]
    },
    "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:org.apache.cxf.endpoint.Client createClient(java.lang.String,javax.xml.namespace.QName,java.lang.ClassLoader,javax.xml.namespace.QName,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:org.apache.cxf.endpoint.Client createClient(java.lang.String,java.lang.ClassLoader,java.util.List)",
            "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:org.apache.cxf.endpoint.Client createClient(java.lang.String,javax.xml.namespace.QName,javax.xml.namespace.QName,java.util.List)",
            "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:org.apache.cxf.endpoint.Client createClient(java.lang.String,javax.xml.namespace.QName,java.lang.ClassLoader,javax.xml.namespace.QName)",
            "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:org.apache.cxf.endpoint.Client createClient(java.net.URL,java.lang.ClassLoader,java.util.List)",
            "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:org.apache.cxf.endpoint.Client createClient(java.net.URL,javax.xml.namespace.QName,javax.xml.namespace.QName,java.util.List)",
            "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:org.apache.cxf.endpoint.Client createClient(java.net.URL,javax.xml.namespace.QName,java.lang.ClassLoader,javax.xml.namespace.QName)",
            "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:org.apache.cxf.endpoint.Client createClient(java.net.URL,javax.xml.namespace.QName,java.lang.ClassLoader,javax.xml.namespace.QName,java.util.List)"
        ]
    },
    "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:void addBindingFiles(java.util.List,org.apache.cxf.jaxb.JAXBUtils$SchemaCompiler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:org.apache.cxf.endpoint.Client createClient(java.lang.String,javax.xml.namespace.QName,java.lang.ClassLoader,javax.xml.namespace.QName,java.util.List)"
        ]
    },
    "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:boolean isValidPackage(org.apache.cxf.jaxb.JAXBUtils$JPackage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:org.apache.cxf.endpoint.Client createClient(java.lang.String,javax.xml.namespace.QName,java.lang.ClassLoader,javax.xml.namespace.QName,java.util.List)"
        ]
    },
    "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:void outputDebug(org.apache.cxf.jaxb.JAXBUtils$JCodeModel)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:org.apache.cxf.endpoint.Client createClient(java.lang.String,javax.xml.namespace.QName,java.lang.ClassLoader,javax.xml.namespace.QName,java.util.List)"
        ]
    },
    "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:void addSchemas(java.lang.String,java.util.Collection,org.apache.cxf.jaxb.JAXBUtils$SchemaCompiler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:org.apache.cxf.endpoint.Client createClient(java.lang.String,javax.xml.namespace.QName,java.lang.ClassLoader,javax.xml.namespace.QName,java.util.List)"
        ]
    },
    "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:boolean compileJavaSrc(java.lang.String,java.util.List,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:org.apache.cxf.endpoint.Client createClient(java.lang.String,javax.xml.namespace.QName,java.lang.ClassLoader,javax.xml.namespace.QName,java.util.List)"
        ]
    },
    "org.apache.cxf.endpoint.dynamic.TypeClassInitializer:void begin(org.apache.cxf.service.model.MessagePartInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.ServiceModelVisitor:void visitOperation(org.apache.cxf.service.model.OperationInfo)"
        ]
    },
    "org.apache.cxf.ws.addressing.ContextUtils:java.lang.String getActionFromServiceModel(org.apache.cxf.message.Message,java.lang.Exception)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.ContextUtils:org.apache.cxf.ws.addressing.AttributedURIType getAction(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.ws.addressing.MAPAggregator:void assertAssertion(org.apache.cxf.ws.policy.AssertionInfoMap,javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.MAPAggregator:void assertAddressing(org.apache.cxf.message.Message,boolean)"
        ]
    },
    "org.apache.cxf.ws.addressing.MAPAggregator:boolean hasUsingAddressing(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.MAPAggregator:boolean hasUsingAddressing(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.ws.addressing.MAPAggregator:java.lang.String getActionFromFaultMessage(org.apache.cxf.service.model.OperationInfo,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.MAPAggregator:java.lang.String getActionUri(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.ws.addressing.soap.MAPCodec:void encodeReferenceParameters(org.apache.cxf.ws.addressing.AddressingProperties,org.w3c.dom.Element,javax.xml.bind.Marshaller)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void encode(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.addressing.AddressingPropertiesImpl)"
        ]
    },
    "org.apache.cxf.ws.addressing.soap.MAPCodec:void addMustUnderstandAttribute(org.w3c.dom.Element,javax.xml.namespace.QName,org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.addressing.AddressingPropertiesImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void encodeAsExposed(org.apache.cxf.ws.addressing.AddressingPropertiesImpl,org.apache.cxf.binding.soap.SoapMessage,java.lang.Object,javax.xml.namespace.QName,java.lang.Class,org.w3c.dom.Element,javax.xml.bind.Marshaller)"
        ]
    },
    "org.apache.cxf.ws.addressing.soap.MAPCodec:org.apache.cxf.ws.addressing.AddressingProperties unmarshalMAPs(org.apache.cxf.binding.soap.SoapMessage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.soap.MAPCodec:org.apache.cxf.ws.addressing.AddressingProperties decode(org.apache.cxf.binding.soap.SoapMessage)"
        ]
    },
    "org.apache.cxf.ws.addressing.soap.MAPCodec:void decodeReferenceParameters(java.util.Set,org.apache.cxf.ws.addressing.AddressingPropertiesImpl,javax.xml.bind.Unmarshaller)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.soap.MAPCodec:org.apache.cxf.ws.addressing.AddressingProperties unmarshalMAPs(org.apache.cxf.binding.soap.SoapMessage)"
        ]
    },
    "org.apache.cxf.ws.addressing.soap.MAPCodec:void discardMAPs(java.util.List,org.apache.cxf.ws.addressing.AddressingProperties)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void encode(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.addressing.AddressingPropertiesImpl)"
        ]
    },
    "org.apache.cxf.ws.policy.builder.primitive.NestedPrimitiveAssertion:org.apache.neethi.PolicyComponent normalize()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.policy.builder.primitive.NestedPrimitiveAssertion:boolean isAsserted(org.apache.cxf.ws.policy.AssertionInfoMap)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.builder.primitive.NestedPrimitiveAssertion:boolean isPolicyAsserted(org.apache.neethi.PolicyOperator,org.apache.cxf.ws.policy.AssertionInfoMap)",
            "org.apache.cxf.ws.policy.AssertionInfoMap:boolean supportsAlternative(org.apache.cxf.ws.policy.PolicyAssertion,java.util.List)"
        ]
    },
    "org.apache.cxf.ws.policy.builder.primitive.NestedPrimitiveAssertion:boolean isPolicyAsserted(org.apache.neethi.PolicyOperator,org.apache.cxf.ws.policy.AssertionInfoMap)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.builder.primitive.NestedPrimitiveAssertion:boolean isAsserted(org.apache.cxf.ws.policy.AssertionInfoMap)",
            "org.apache.cxf.ws.policy.builder.primitive.NestedPrimitiveAssertion:boolean isPolicyAsserted(org.apache.neethi.PolicyOperator,org.apache.cxf.ws.policy.AssertionInfoMap)"
        ]
    },
    "org.apache.cxf.ws.policy.builder.primitive.PrimitiveAssertion:boolean isAsserted(org.apache.cxf.ws.policy.AssertionInfoMap)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.builder.primitive.NestedPrimitiveAssertion:boolean isPolicyAsserted(org.apache.neethi.PolicyOperator,org.apache.cxf.ws.policy.AssertionInfoMap)",
            "org.apache.cxf.ws.policy.AssertionInfoMap:boolean supportsAlternative(org.apache.cxf.ws.policy.PolicyAssertion,java.util.List)"
        ]
    },
    "org.apache.cxf.ws.policy.util.PolicyComparator:boolean compare(java.util.List,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.util.PolicyComparator:boolean compare(org.apache.neethi.Policy,org.apache.neethi.Policy)",
            "org.apache.cxf.ws.policy.util.PolicyComparator:boolean compare(org.apache.neethi.All,org.apache.neethi.All)",
            "org.apache.cxf.ws.policy.util.PolicyComparator:boolean compare(org.apache.neethi.ExactlyOne,org.apache.neethi.ExactlyOne)"
        ]
    },
    "org.apache.cxf.ws.policy.AssertionInfoMap:void <init>(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.AssertionInfoMap:void <init>(org.apache.neethi.Policy)",
            "org.apache.cxf.ws.policy.ServerPolicyOutFaultInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.policy.PolicyInInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.policy.PolicyOutInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.policy.ClientPolicyInFaultInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor:void recalcEffectivePolicy(org.apache.cxf.binding.soap.SoapMessage,java.lang.String,org.apache.neethi.Policy)"
        ]
    },
    "org.apache.cxf.ws.policy.AssertionInfoMap:void putAssertionInfo(org.apache.cxf.ws.policy.PolicyAssertion)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.AssertionInfoMap:void <init>(java.util.Collection)",
            "org.apache.cxf.ws.policy.AssertionInfoMap:void putAssertionInfo(org.apache.cxf.ws.policy.PolicyAssertion)"
        ]
    },
    "org.apache.cxf.ws.policy.AssertionInfoMap:boolean supportsAlternative(org.apache.cxf.ws.policy.PolicyAssertion,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.AssertionInfoMap:boolean supportsAlternative(org.apache.cxf.ws.policy.PolicyAssertion,java.util.List)",
            "org.apache.cxf.ws.policy.AssertionInfoMap:boolean supportsAlternative(java.util.Collection,java.util.List)"
        ]
    },
    "org.apache.cxf.ws.policy.AssertionInfoMap:boolean supportsAlternative(java.util.Collection,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.AssertionInfoMap:void checkEffectivePolicy(org.apache.neethi.Policy)"
        ]
    },
    "org.apache.cxf.ws.policy.AssertionInfoMap:void checkEffectivePolicy(org.apache.neethi.Policy)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.PolicyVerificationInInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.policy.PolicyVerificationOutInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.policy.PolicyVerificationInFaultInterceptor:void handle(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.ws.policy.AssertionInfoMap:void check()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.policy.AssertionInfoMap:void getAssertions(org.apache.neethi.PolicyOperator,java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.AssertionInfoMap:void putAssertionInfo(org.apache.cxf.ws.policy.PolicyAssertion)",
            "org.apache.cxf.ws.policy.AssertionInfoMap:java.util.Collection getAssertions(org.apache.neethi.PolicyOperator)",
            "org.apache.cxf.ws.policy.AssertionInfoMap:void getAssertions(org.apache.neethi.PolicyOperator,java.util.Collection)"
        ]
    },
    "org.apache.cxf.ws.policy.Intersector:boolean compatibleAlternatives(java.util.Collection,java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.Intersector:boolean compatiblePolicies(org.apache.neethi.Policy,org.apache.neethi.Policy)",
            "org.apache.cxf.ws.policy.Intersector:java.util.Collection intersect(java.util.Collection,java.util.Collection)",
            "org.apache.cxf.ws.policy.Intersector:org.apache.neethi.Policy intersect(org.apache.neethi.Policy,org.apache.neethi.Policy)"
        ]
    },
    "org.apache.cxf.ws.policy.Intersector:boolean compatiblePolicies(org.apache.neethi.Policy,org.apache.neethi.Policy)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.Intersector:org.apache.neethi.Policy intersect(org.apache.neethi.Policy,org.apache.neethi.Policy)"
        ]
    },
    "org.apache.cxf.ws.policy.Intersector:org.apache.neethi.Policy intersect(org.apache.neethi.Policy,org.apache.neethi.Policy)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.builder.primitive.NestedPrimitiveAssertionBuilder:org.apache.cxf.ws.policy.PolicyAssertion buildCompatible(org.apache.cxf.ws.policy.PolicyAssertion,org.apache.cxf.ws.policy.PolicyAssertion)"
        ]
    },
    "org.apache.cxf.ws.policy.Intersector:org.apache.cxf.ws.policy.PolicyAssertion findCompatibleAssertion(org.apache.cxf.ws.policy.PolicyAssertion,java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.Intersector:boolean compatibleAlternatives(java.util.Collection,java.util.Collection)"
        ]
    },
    "org.apache.cxf.ws.policy.EndpointPolicyImpl:java.util.Collection getSupportedAlternatives()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.EndpointPolicyImpl:void chooseAlternative()"
        ]
    },
    "org.apache.cxf.ws.policy.EndpointPolicyImpl:void initializeVocabulary()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.EndpointPolicyImpl:java.util.Collection getVocabulary()",
            "org.apache.cxf.ws.policy.EndpointPolicyImpl:java.util.Collection getFaultVocabulary()"
        ]
    },
    "org.apache.cxf.ws.policy.EndpointPolicyImpl:java.util.Collection getSupportedAlternatives(org.apache.neethi.Policy)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.EndpointPolicyImpl:void initializeInterceptors(org.apache.cxf.ws.policy.PolicyInterceptorProviderRegistry,java.util.Set,org.apache.cxf.ws.policy.PolicyAssertion,boolean)"
        ]
    },
    "org.apache.cxf.ws.policy.EndpointPolicyImpl:void initializeInterceptors(org.apache.cxf.ws.policy.PolicyInterceptorProviderRegistry,java.util.Set,org.apache.cxf.ws.policy.PolicyAssertion,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.EndpointPolicyImpl:void initializeInterceptors(org.apache.cxf.ws.policy.PolicyInterceptorProviderRegistry,java.util.Set,org.apache.cxf.ws.policy.PolicyAssertion,boolean)",
            "org.apache.cxf.ws.policy.EndpointPolicyImpl:void initializeInterceptors()"
        ]
    },
    "org.apache.cxf.ws.policy.EndpointPolicyImpl:void initializeInterceptors()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.EndpointPolicyImpl:java.util.List getInterceptors()",
            "org.apache.cxf.ws.policy.EndpointPolicyImpl:java.util.List getFaultInterceptors()"
        ]
    },
    "org.apache.cxf.ws.policy.EndpointPolicyImpl:void checkExactlyOnes()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.EndpointPolicyImpl:org.apache.cxf.ws.policy.EndpointPolicy updatePolicy(org.apache.neethi.Policy)",
            "org.apache.cxf.ws.policy.EndpointPolicyImpl:void initialize()"
        ]
    },
    "org.apache.cxf.ws.policy.ServerPolicyOutFaultInterceptor:void handle(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.AbstractPolicyInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.ws.policy.PolicyInInterceptor:void handle(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.AbstractPolicyInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.ws.policy.PolicyOutInterceptor:void handle(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.AbstractPolicyInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.ws.policy.PolicyInterceptorProviderRegistryImpl:void register(org.apache.cxf.ws.policy.PolicyInterceptorProvider)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.policy.WSSecurityPolicyLoader:void registerProviders()"
        ]
    },
    "org.apache.cxf.ws.policy.PolicyInterceptorProviderRegistryImpl:java.util.List getInterceptors(java.util.Collection,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.RMEndpoint$EffectivePolicyImpl:void <init>(org.apache.cxf.ws.rm.RMEndpoint,org.apache.cxf.ws.policy.EndpointPolicy,org.apache.cxf.ws.policy.PolicyInterceptorProviderRegistry,boolean,boolean)"
        ]
    },
    "org.apache.cxf.ws.policy.selector.MinimalAlternativeSelector:java.util.Collection selectAlternative(org.apache.neethi.Policy,org.apache.cxf.ws.policy.PolicyEngine,org.apache.cxf.ws.policy.Assertor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.EndpointPolicyImpl:void chooseAlternative()",
            "org.apache.cxf.ws.policy.EffectivePolicyImpl:void chooseAlternative(org.apache.cxf.ws.policy.PolicyEngineImpl,org.apache.cxf.ws.policy.Assertor)"
        ]
    },
    "org.apache.cxf.ws.policy.selector.FirstAlternativeSelector:java.util.Collection selectAlternative(org.apache.neethi.Policy,org.apache.cxf.ws.policy.PolicyEngine,org.apache.cxf.ws.policy.Assertor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.EndpointPolicyImpl:void chooseAlternative()",
            "org.apache.cxf.ws.policy.EffectivePolicyImpl:void chooseAlternative(org.apache.cxf.ws.policy.PolicyEngineImpl,org.apache.cxf.ws.policy.Assertor)"
        ]
    },
    "org.apache.cxf.ws.policy.selector.MaximalAlternativeSelector:java.util.Collection selectAlternative(org.apache.neethi.Policy,org.apache.cxf.ws.policy.PolicyEngine,org.apache.cxf.ws.policy.Assertor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.EndpointPolicyImpl:void chooseAlternative()",
            "org.apache.cxf.ws.policy.EffectivePolicyImpl:void chooseAlternative(org.apache.cxf.ws.policy.PolicyEngineImpl,org.apache.cxf.ws.policy.Assertor)"
        ]
    },
    "org.apache.cxf.ws.policy.PolicyEngineImpl:org.apache.neethi.Policy getAggregatedServicePolicy(org.apache.cxf.service.model.ServiceInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.EndpointPolicyImpl:void initializePolicy()"
        ]
    },
    "org.apache.cxf.ws.policy.PolicyEngineImpl:org.apache.neethi.Policy getAggregatedEndpointPolicy(org.apache.cxf.service.model.EndpointInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.EndpointPolicyImpl:void initializePolicy()"
        ]
    },
    "org.apache.cxf.ws.policy.PolicyEngineImpl:org.apache.neethi.Policy getAggregatedOperationPolicy(org.apache.cxf.service.model.BindingOperationInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.EffectivePolicyImpl:org.apache.cxf.ws.policy.Assertor initialisePolicy(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.ws.policy.PolicyEngineImpl,boolean,org.apache.cxf.ws.policy.Assertor)",
            "org.apache.cxf.ws.policy.EffectivePolicyImpl:void initialisePolicy(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.service.model.BindingFaultInfo,org.apache.cxf.ws.policy.PolicyEngineImpl)"
        ]
    },
    "org.apache.cxf.ws.policy.PolicyEngineImpl:org.apache.neethi.Policy getAggregatedMessagePolicy(org.apache.cxf.service.model.BindingMessageInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.EffectivePolicyImpl:org.apache.cxf.ws.policy.Assertor initialisePolicy(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.ws.policy.PolicyEngineImpl,boolean,org.apache.cxf.ws.policy.Assertor)"
        ]
    },
    "org.apache.cxf.ws.policy.PolicyEngineImpl:org.apache.neethi.Policy getAggregatedFaultPolicy(org.apache.cxf.service.model.BindingFaultInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.EffectivePolicyImpl:void initialisePolicy(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.service.model.BindingFaultInfo,org.apache.cxf.ws.policy.PolicyEngineImpl)"
        ]
    },
    "org.apache.cxf.ws.policy.PolicyEngineImpl:java.util.Collection getAssertions(org.apache.cxf.ws.policy.EffectivePolicy,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.EndpointPolicyImpl:void initializeVocabulary()",
            "org.apache.cxf.ws.policy.EndpointPolicyImpl:void initializeInterceptors()"
        ]
    },
    "org.apache.cxf.ws.policy.PolicyEngineImpl:void addAssertions(org.apache.neethi.PolicyComponent,boolean,java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.PolicyEngineImpl:java.util.Collection getAssertions(org.apache.neethi.PolicyComponent,boolean)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:java.util.Collection getAssertions(org.apache.cxf.ws.policy.EffectivePolicy,boolean)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:void addAssertions(org.apache.neethi.PolicyComponent,boolean,java.util.Collection)"
        ]
    },
    "org.apache.cxf.ws.policy.PolicyEngineImpl:java.util.Set getVocabulary(org.apache.neethi.PolicyComponent,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.policy.PolicyEngineImpl:boolean supportsAlternative(java.util.Collection,org.apache.cxf.ws.policy.Assertor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.EndpointPolicyImpl:java.util.Collection getSupportedAlternatives()",
            "org.apache.cxf.ws.policy.EndpointPolicyImpl:java.util.Collection getSupportedAlternatives(org.apache.neethi.Policy)",
            "org.apache.cxf.ws.policy.selector.MinimalAlternativeSelector:java.util.Collection selectAlternative(org.apache.neethi.Policy,org.apache.cxf.ws.policy.PolicyEngine,org.apache.cxf.ws.policy.Assertor)",
            "org.apache.cxf.ws.policy.selector.FirstAlternativeSelector:java.util.Collection selectAlternative(org.apache.neethi.Policy,org.apache.cxf.ws.policy.PolicyEngine,org.apache.cxf.ws.policy.Assertor)",
            "org.apache.cxf.ws.policy.selector.MaximalAlternativeSelector:java.util.Collection selectAlternative(org.apache.neethi.Policy,org.apache.cxf.ws.policy.PolicyEngine,org.apache.cxf.ws.policy.Assertor)",
            "org.apache.cxf.ws.policy.EffectivePolicyImpl:java.util.Collection getSupportedAlternatives(org.apache.cxf.ws.policy.PolicyEngineImpl,org.apache.neethi.Policy)"
        ]
    },
    "org.apache.cxf.ws.policy.PolicyUtils:boolean contains(java.util.Collection,org.apache.neethi.Assertion)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.PolicyUtils:boolean contains(java.util.Collection,java.util.Collection)"
        ]
    },
    "org.apache.cxf.ws.policy.PolicyUtils:boolean contains(java.util.Collection,java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.policy.PolicyUtils:void printPolicyComponent(org.apache.neethi.PolicyComponent,java.lang.StringBuffer,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.PolicyOutInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.policy.PolicyUtils:void logPolicy(java.util.logging.Logger,java.util.logging.Level,java.lang.String,org.apache.neethi.PolicyComponent)",
            "org.apache.cxf.ws.policy.PolicyUtils:void printPolicyComponent(org.apache.neethi.PolicyComponent)",
            "org.apache.cxf.ws.policy.PolicyUtils:void printPolicyComponent(org.apache.neethi.PolicyComponent,java.lang.StringBuffer,int)"
        ]
    },
    "org.apache.cxf.ws.policy.mtom.MTOMPolicyInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.ws.policy.EffectivePolicyImpl:void initialiseInterceptors(org.apache.cxf.ws.policy.PolicyEngineImpl,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.EffectivePolicyImpl:void initialise(org.apache.cxf.ws.policy.EndpointPolicyImpl,org.apache.cxf.ws.policy.PolicyEngineImpl,boolean)",
            "org.apache.cxf.ws.policy.EffectivePolicyImpl:void initialise(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.ws.policy.PolicyEngineImpl,org.apache.cxf.ws.policy.Assertor,boolean)",
            "org.apache.cxf.ws.policy.EffectivePolicyImpl:void initialise(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.ws.policy.PolicyEngineImpl,boolean)",
            "org.apache.cxf.ws.policy.EffectivePolicyImpl:void initialise(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.service.model.BindingFaultInfo,org.apache.cxf.ws.policy.PolicyEngineImpl,org.apache.cxf.ws.policy.Assertor)",
            "org.apache.cxf.ws.policy.EffectivePolicyImpl:void initialiseInterceptors(org.apache.cxf.ws.policy.PolicyEngineImpl)"
        ]
    },
    "org.apache.cxf.ws.policy.EffectivePolicyImpl:java.util.Collection getSupportedAlternatives(org.apache.cxf.ws.policy.PolicyEngineImpl,org.apache.neethi.Policy)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.EffectivePolicyImpl:void initialiseInterceptors(org.apache.cxf.ws.policy.PolicyInterceptorProviderRegistry,org.apache.cxf.ws.policy.PolicyEngineImpl,java.util.Set,org.apache.cxf.ws.policy.PolicyAssertion,boolean)"
        ]
    },
    "org.apache.cxf.ws.policy.EffectivePolicyImpl:void initialiseInterceptors(org.apache.cxf.ws.policy.PolicyInterceptorProviderRegistry,org.apache.cxf.ws.policy.PolicyEngineImpl,java.util.Set,org.apache.cxf.ws.policy.PolicyAssertion,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.EffectivePolicyImpl:void initialiseInterceptors(org.apache.cxf.ws.policy.PolicyEngineImpl,boolean)",
            "org.apache.cxf.ws.policy.EffectivePolicyImpl:void initialiseInterceptors(org.apache.cxf.ws.policy.PolicyInterceptorProviderRegistry,org.apache.cxf.ws.policy.PolicyEngineImpl,java.util.Set,org.apache.cxf.ws.policy.PolicyAssertion,boolean)"
        ]
    },
    "org.apache.cxf.ws.policy.attachment.wsdl11.Wsdl11AttachmentPolicyProvider$ExtensibleInfo:java.lang.Object getExtensor(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.policy.attachment.wsdl11.Wsdl11AttachmentPolicyProvider$ExtensibleInfo:java.util.List getExtensors(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.attachment.wsdl11.Wsdl11AttachmentPolicyProvider:org.apache.neethi.Policy getElementPolicy(org.apache.cxf.service.model.Extensible,boolean,org.apache.cxf.service.model.DescriptionInfo)"
        ]
    },
    "org.apache.cxf.ws.policy.attachment.reference.LocalServiceModelReferenceResolver:org.apache.neethi.Policy resolveReference(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.attachment.wsdl11.Wsdl11AttachmentPolicyProvider:org.apache.neethi.Policy resolveLocal(org.apache.neethi.PolicyReference,org.apache.cxf.service.model.DescriptionInfo)"
        ]
    },
    "org.apache.cxf.ws.policy.attachment.external.PolicyAttachment:boolean appliesTo(org.apache.cxf.service.model.ServiceInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.attachment.external.ExternalAttachmentProvider:org.apache.neethi.Policy getEffectivePolicy(org.apache.cxf.service.model.ServiceInfo)"
        ]
    },
    "org.apache.cxf.ws.policy.attachment.external.PolicyAttachment:boolean appliesTo(org.apache.cxf.service.model.EndpointInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.attachment.external.ExternalAttachmentProvider:org.apache.neethi.Policy getEffectivePolicy(org.apache.cxf.service.model.EndpointInfo)"
        ]
    },
    "org.apache.cxf.ws.policy.attachment.external.PolicyAttachment:boolean appliesTo(org.apache.cxf.service.model.BindingOperationInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.attachment.external.ExternalAttachmentProvider:org.apache.neethi.Policy getEffectivePolicy(org.apache.cxf.service.model.BindingOperationInfo)"
        ]
    },
    "org.apache.cxf.ws.policy.attachment.external.PolicyAttachment:boolean appliesTo(org.apache.cxf.service.model.BindingMessageInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.attachment.external.ExternalAttachmentProvider:org.apache.neethi.Policy getEffectivePolicy(org.apache.cxf.service.model.BindingMessageInfo)"
        ]
    },
    "org.apache.cxf.ws.policy.attachment.external.PolicyAttachment:boolean appliesTo(org.apache.cxf.service.model.BindingFaultInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.attachment.external.ExternalAttachmentProvider:org.apache.neethi.Policy getEffectivePolicy(org.apache.cxf.service.model.BindingFaultInfo)"
        ]
    },
    "org.apache.cxf.ws.policy.attachment.external.ExternalAttachmentProvider:org.apache.neethi.Policy getEffectivePolicy(org.apache.cxf.service.model.BindingFaultInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.PolicyEngineImpl:org.apache.neethi.Policy getAggregatedFaultPolicy(org.apache.cxf.service.model.BindingFaultInfo)"
        ]
    },
    "org.apache.cxf.ws.policy.attachment.external.ExternalAttachmentProvider:org.apache.neethi.Policy getEffectivePolicy(org.apache.cxf.service.model.BindingMessageInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.PolicyEngineImpl:org.apache.neethi.Policy getAggregatedMessagePolicy(org.apache.cxf.service.model.BindingMessageInfo)"
        ]
    },
    "org.apache.cxf.ws.policy.attachment.external.ExternalAttachmentProvider:org.apache.neethi.Policy getEffectivePolicy(org.apache.cxf.service.model.BindingOperationInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.PolicyEngineImpl:org.apache.neethi.Policy getAggregatedOperationPolicy(org.apache.cxf.service.model.BindingOperationInfo)"
        ]
    },
    "org.apache.cxf.ws.policy.attachment.external.ExternalAttachmentProvider:org.apache.neethi.Policy getEffectivePolicy(org.apache.cxf.service.model.EndpointInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.PolicyEngineImpl:org.apache.neethi.Policy getAggregatedEndpointPolicy(org.apache.cxf.service.model.EndpointInfo)"
        ]
    },
    "org.apache.cxf.ws.policy.attachment.external.ExternalAttachmentProvider:org.apache.neethi.Policy getEffectivePolicy(org.apache.cxf.service.model.ServiceInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.PolicyEngineImpl:org.apache.neethi.Policy getAggregatedServicePolicy(org.apache.cxf.service.model.ServiceInfo)"
        ]
    },
    "org.apache.cxf.ws.policy.AssertionBuilderRegistryImpl:void register(org.apache.cxf.ws.policy.AssertionBuilder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.policy.WSSecurityPolicyLoader:void registerBuilders()"
        ]
    },
    "org.apache.cxf.ws.policy.ClientPolicyInFaultInterceptor:void handle(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.AbstractPolicyInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.ws.policy.AbstractPolicyInterceptor:org.apache.cxf.service.model.BindingFaultInfo getBindingFaultInfo(org.apache.cxf.message.Message,java.lang.Exception,org.apache.cxf.service.model.BindingOperationInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.ServerPolicyOutFaultInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.policy.PolicyVerificationInFaultInterceptor:void handle(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.ws.security.policy.builders.X509TokenBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.AssertionBuilderRegistryImpl:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)"
        ]
    },
    "org.apache.cxf.ws.security.policy.builders.X509TokenBuilder:void processAlternative(java.util.List,org.apache.cxf.ws.security.policy.model.X509Token,org.apache.cxf.ws.security.policy.SPConstants)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.policy.builders.X509TokenBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)"
        ]
    },
    "org.apache.cxf.ws.security.policy.builders.SupportingTokens12Builder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.AssertionBuilderRegistryImpl:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.builders.TransportBindingBuilder:void processAlternative(org.w3c.dom.Element,org.apache.cxf.ws.security.policy.model.TransportBinding,org.apache.cxf.ws.security.policy.SPConstants)"
        ]
    },
    "org.apache.cxf.ws.security.policy.builders.SupportingTokens12Builder:void processAlternative(java.util.List,org.apache.cxf.ws.security.policy.model.SupportingToken)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.policy.builders.SupportingTokens12Builder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)"
        ]
    },
    "org.apache.cxf.ws.security.policy.builders.InitiatorTokenBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.AssertionBuilderRegistryImpl:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)"
        ]
    },
    "org.apache.cxf.ws.security.policy.builders.InitiatorTokenBuilder:void processAlternative(java.util.List,org.apache.cxf.ws.security.policy.model.InitiatorToken)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.policy.builders.InitiatorTokenBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)"
        ]
    },
    "org.apache.cxf.ws.security.policy.builders.AsymmetricBindingBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.AssertionBuilderRegistryImpl:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)"
        ]
    },
    "org.apache.cxf.ws.security.policy.builders.AsymmetricBindingBuilder:void processAlternative(java.util.List,org.apache.cxf.ws.security.policy.model.AsymmetricBinding,org.apache.cxf.ws.security.policy.SPConstants)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.policy.builders.AsymmetricBindingBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)"
        ]
    },
    "org.apache.cxf.ws.security.policy.builders.IssuedTokenBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.AssertionBuilderRegistryImpl:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)"
        ]
    },
    "org.apache.cxf.ws.security.policy.builders.IssuedTokenBuilder:void processAlternative(java.util.List,org.apache.cxf.ws.security.policy.model.IssuedToken)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.policy.builders.IssuedTokenBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)"
        ]
    },
    "org.apache.cxf.ws.security.policy.builders.ProtectionTokenBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.AssertionBuilderRegistryImpl:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)"
        ]
    },
    "org.apache.cxf.ws.security.policy.builders.TransportTokenBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.AssertionBuilderRegistryImpl:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.builders.TransportBindingBuilder:void processAlternative(org.w3c.dom.Element,org.apache.cxf.ws.security.policy.model.TransportBinding,org.apache.cxf.ws.security.policy.SPConstants)"
        ]
    },
    "org.apache.cxf.ws.security.policy.builders.RecipientTokenBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.AssertionBuilderRegistryImpl:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)"
        ]
    },
    "org.apache.cxf.ws.security.policy.builders.RecipientTokenBuilder:void processAlternative(java.util.List,org.apache.cxf.ws.security.policy.model.RecipientToken)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.policy.builders.RecipientTokenBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)"
        ]
    },
    "org.apache.cxf.ws.security.policy.builders.SupportingTokensBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.AssertionBuilderRegistryImpl:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.builders.TransportBindingBuilder:void processAlternative(org.w3c.dom.Element,org.apache.cxf.ws.security.policy.model.TransportBinding,org.apache.cxf.ws.security.policy.SPConstants)"
        ]
    },
    "org.apache.cxf.ws.security.policy.builders.SupportingTokensBuilder:void processAlternative(java.util.List,org.apache.cxf.ws.security.policy.model.SupportingToken)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.policy.builders.SupportingTokensBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)"
        ]
    },
    "org.apache.cxf.ws.security.policy.builders.SymmetricBindingBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.AssertionBuilderRegistryImpl:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)"
        ]
    },
    "org.apache.cxf.ws.security.policy.builders.SymmetricBindingBuilder:void processAlternatives(java.util.List,org.apache.cxf.ws.security.policy.model.SymmetricBinding,org.apache.cxf.ws.security.policy.SPConstants)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.policy.builders.SymmetricBindingBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)"
        ]
    },
    "org.apache.cxf.ws.security.policy.model.RequiredParts:void serialize(javax.xml.stream.XMLStreamWriter)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.security.policy.model.ContentEncryptedElements:void serialize(javax.xml.stream.XMLStreamWriter)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.security.policy.model.SignedEncryptedElements:void serialize(javax.xml.stream.XMLStreamWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.policy.model.SupportingToken:void serialize(javax.xml.stream.XMLStreamWriter)"
        ]
    },
    "org.apache.cxf.ws.security.policy.model.RequiredElements:void serialize(javax.xml.stream.XMLStreamWriter)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.security.policy.model.SupportingToken:void serialize(javax.xml.stream.XMLStreamWriter)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.security.policy.model.SupportingToken:org.apache.neethi.Policy getPolicy()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.AssertionInfoMap:void putAssertionInfo(org.apache.cxf.ws.policy.PolicyAssertion)",
            "org.apache.cxf.ws.policy.AssertionInfoMap:boolean supportsAlternative(org.apache.cxf.ws.policy.PolicyAssertion,java.util.List)",
            "org.apache.cxf.ws.policy.EndpointPolicyImpl:void initializeInterceptors(org.apache.cxf.ws.policy.PolicyInterceptorProviderRegistry,java.util.Set,org.apache.cxf.ws.policy.PolicyAssertion,boolean)",
            "org.apache.cxf.ws.policy.EffectivePolicyImpl:void initialiseInterceptors(org.apache.cxf.ws.policy.PolicyInterceptorProviderRegistry,org.apache.cxf.ws.policy.PolicyEngineImpl,java.util.Set,org.apache.cxf.ws.policy.PolicyAssertion,boolean)"
        ]
    },
    "org.apache.cxf.ws.security.policy.model.SignedEncryptedParts:void serialize(javax.xml.stream.XMLStreamWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.policy.model.SupportingToken:void serialize(javax.xml.stream.XMLStreamWriter)"
        ]
    },
    "org.apache.cxf.ws.security.policy.model.AbstractSecurityAssertion:boolean isAsserted(org.apache.cxf.ws.policy.AssertionInfoMap)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.builder.primitive.NestedPrimitiveAssertion:boolean isPolicyAsserted(org.apache.neethi.PolicyOperator,org.apache.cxf.ws.policy.AssertionInfoMap)",
            "org.apache.cxf.ws.policy.AssertionInfoMap:boolean supportsAlternative(org.apache.cxf.ws.policy.PolicyAssertion,java.util.List)"
        ]
    },
    "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor$SecureConversationTokenFinderInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor$SecureConversationTokenFinderInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.ws.security.policy.interceptors.HttpsTokenInterceptorProvider$HttpsTokenInInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.ws.security.policy.interceptors.HttpsTokenInterceptorProvider$HttpsTokenInInterceptor:void assertHttps(java.util.Collection,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.policy.interceptors.HttpsTokenInterceptorProvider$HttpsTokenInInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor:void recalcEffectivePolicy(org.apache.cxf.binding.soap.SoapMessage,java.lang.String,org.apache.neethi.Policy)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)"
        ]
    },
    "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor:void unmapSecurityProps(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)"
        ]
    },
    "org.apache.cxf.ws.security.policy.interceptors.SecureConversationTokenInterceptorProvider:void mapSecurityProps(org.apache.cxf.message.Message,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationTokenInterceptorProvider:java.lang.String setupClient(org.apache.cxf.ws.security.trust.STSClient,org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.ws.security.policy.model.SecureConversationToken,boolean)"
        ]
    },
    "org.apache.cxf.ws.security.policy.interceptors.HttpsTokenInterceptorProvider$HttpsTokenOutInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.ws.security.policy.interceptors.HttpsTokenInterceptorProvider$HttpsTokenOutInterceptor:void assertHttps(java.util.Collection,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.policy.interceptors.HttpsTokenInterceptorProvider$HttpsTokenOutInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.ws.security.policy.interceptors.IssuedTokenInterceptorProvider$IssuedTokenInInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.ws.security.trust.STSClient:void setPolicy(org.apache.neethi.Policy)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationTokenInterceptorProvider:java.lang.String setupClient(org.apache.cxf.ws.security.trust.STSClient,org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.ws.security.policy.model.SecureConversationToken,boolean)",
            "org.apache.cxf.ws.security.trust.STSClient:void setPolicy(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.trust.STSClient:org.apache.cxf.service.model.BindingOperationInfo findOperation(java.lang.String)"
        ]
    },
    "org.apache.cxf.ws.security.trust.STSClient:org.apache.cxf.service.model.BindingOperationInfo findOperation(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.trust.STSClient:org.apache.cxf.ws.security.tokenstore.SecurityToken requestSecurityToken(java.lang.String,java.lang.String,java.lang.String,org.apache.cxf.ws.security.tokenstore.SecurityToken)",
            "org.apache.cxf.ws.security.trust.STSClient:boolean validateSecurityToken(org.apache.cxf.ws.security.tokenstore.SecurityToken,java.lang.String)",
            "org.apache.cxf.ws.security.trust.STSClient:void cancelSecurityToken(org.apache.cxf.ws.security.tokenstore.SecurityToken)"
        ]
    },
    "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:org.apache.cxf.ws.security.tokenstore.SecurityToken getToken(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor$SecureConversationCancelInterceptor:void doCancel(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.ws.security.policy.model.SecureConversationToken)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationOutInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor$STSInvoker:org.apache.cxf.ws.security.tokenstore.SecurityToken findCancelToken(org.apache.cxf.message.Exchange,org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.interceptors.IssuedTokenInterceptorProvider$IssuedTokenOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:org.apache.cxf.ws.security.tokenstore.SecurityToken getSecurityToken()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.SymmetricBindingHandler:void doEncryptBeforeSign()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.SymmetricBindingHandler:void doSignBeforeEncrypt()",
            "org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor$TokenStoreCallbackHandler:void handle(javax.security.auth.callback.Callback[])"
        ]
    },
    "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:java.util.Collection getTokens(org.apache.cxf.ws.security.tokenstore.SecurityToken$State)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:java.util.Collection getCancelledTokens()",
            "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:java.util.Collection getExpiredTokens()",
            "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:java.util.Collection getRenewedTokens()",
            "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:java.util.Collection getValidTokens()"
        ]
    },
    "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:void processTokenExpiry()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:java.util.Collection getTokenIdentifiers()",
            "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:org.apache.cxf.ws.security.tokenstore.SecurityToken getToken(java.lang.String)",
            "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:java.util.Collection getTokens(org.apache.cxf.ws.security.tokenstore.SecurityToken$State)",
            "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:void removeExpiredTokens()"
        ]
    },
    "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:void removeCancelledTokens()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:void removeExpiredTokens()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.security.wss4j.policyhandlers.TransportBindingHandler:void addUsernameTokens(org.apache.cxf.ws.security.policy.model.SupportingToken)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.wss4j.policyhandlers.TransportBindingHandler:void handleBinding()"
        ]
    },
    "org.apache.cxf.ws.security.wss4j.policyhandlers.TransportBindingHandler:void handleBinding()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JOutInterceptor$PolicyBasedWSS4JOutInterceptorInternal:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)"
        ]
    },
    "org.apache.cxf.ws.security.wss4j.policyhandlers.TransportBindingHandler:byte[] doX509TokenSignature(org.apache.cxf.ws.security.policy.model.Token,org.apache.cxf.ws.security.policy.model.SignedEncryptedParts,org.apache.cxf.ws.security.policy.model.TokenWrapper)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.wss4j.policyhandlers.TransportBindingHandler:void handleBinding()"
        ]
    },
    "org.apache.cxf.ws.security.wss4j.policyhandlers.TransportBindingHandler:byte[] doIssuedTokenSignature(org.apache.cxf.ws.security.policy.model.Token,org.apache.cxf.ws.security.policy.model.SignedEncryptedParts,org.apache.cxf.ws.security.policy.model.TokenWrapper,org.apache.cxf.ws.security.tokenstore.SecurityToken)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.wss4j.policyhandlers.TransportBindingHandler:void handleBinding()"
        ]
    },
    "org.apache.cxf.ws.security.wss4j.policyhandlers.AsymmetricBindingHandler:void doSignBeforeEncrypt()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AsymmetricBindingHandler:void handleBinding()"
        ]
    },
    "org.apache.cxf.ws.security.wss4j.policyhandlers.AsymmetricBindingHandler:void doEncryptBeforeSign()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AsymmetricBindingHandler:void handleBinding()"
        ]
    },
    "org.apache.cxf.ws.security.wss4j.policyhandlers.AsymmetricBindingHandler:void assertUnusedTokens(org.apache.cxf.ws.security.policy.model.TokenWrapper)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AsymmetricBindingHandler:void doSignature(java.util.Vector)"
        ]
    },
    "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void policyNotAsserted(org.apache.cxf.ws.policy.PolicyAssertion,java.lang.Exception)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AsymmetricBindingHandler:org.apache.ws.security.message.WSSecBase doEncryption(org.apache.cxf.ws.security.policy.model.TokenWrapper,java.util.Vector,boolean)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:java.lang.String getPassword(java.lang.String,org.apache.cxf.ws.policy.PolicyAssertion,int)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:org.apache.ws.security.components.crypto.Crypto getCrypto(org.apache.cxf.ws.security.policy.model.TokenWrapper,java.lang.String,java.lang.String)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:org.apache.ws.security.message.WSSecSignature getSignatureBuider(org.apache.cxf.ws.security.policy.model.TokenWrapper,org.apache.cxf.ws.security.policy.model.Token,boolean)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void doEndorsedSignatures(java.util.Map,boolean,boolean)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.SymmetricBindingHandler:org.apache.ws.security.message.WSSecBase doEncryption(org.apache.cxf.ws.security.policy.model.TokenWrapper,org.apache.cxf.ws.security.tokenstore.SecurityToken,boolean,java.util.Vector,boolean)"
        ]
    },
    "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void policyNotAsserted(org.apache.cxf.ws.policy.PolicyAssertion,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AsymmetricBindingHandler:org.apache.ws.security.message.WSSecBase doEncryption(org.apache.cxf.ws.security.policy.model.TokenWrapper,java.util.Vector,boolean)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AsymmetricBindingHandler:void setupEncryptedKey(org.apache.cxf.ws.security.policy.model.TokenWrapper,org.apache.cxf.ws.security.policy.model.Token)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:java.util.Map handleSupportingTokens(org.apache.cxf.ws.security.policy.model.SupportingToken,boolean,java.util.Map)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void addSignatureParts(java.util.Map,java.util.List)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:org.apache.ws.security.message.WSSecUsernameToken addUsernameToken(org.apache.cxf.ws.security.policy.model.UsernameToken)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:java.lang.String getPassword(java.lang.String,org.apache.cxf.ws.policy.PolicyAssertion,int)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:org.apache.ws.security.components.crypto.Crypto getCrypto(org.apache.cxf.ws.security.policy.model.TokenWrapper,java.lang.String,java.lang.String)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void setEncryptionUser(org.apache.ws.security.message.WSSecEncryptedKey,org.apache.cxf.ws.security.policy.model.TokenWrapper,boolean,org.apache.ws.security.components.crypto.Crypto)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:org.apache.ws.security.message.WSSecSignature getSignatureBuider(org.apache.cxf.ws.security.policy.model.TokenWrapper,org.apache.cxf.ws.security.policy.model.Token,boolean)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.SymmetricBindingHandler:void doSignBeforeEncrypt()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.SymmetricBindingHandler:org.apache.ws.security.message.WSSecBase doEncryption(org.apache.cxf.ws.security.policy.model.TokenWrapper,org.apache.cxf.ws.security.tokenstore.SecurityToken,boolean,java.util.Vector,boolean)"
        ]
    },
    "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void policyAsserted(org.apache.cxf.ws.policy.PolicyAssertion)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AsymmetricBindingHandler:org.apache.ws.security.message.WSSecBase doEncryption(org.apache.cxf.ws.security.policy.model.TokenWrapper,java.util.Vector,boolean)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void assertSupportingTokens(java.util.Collection)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void setKeyIdentifierType(org.apache.ws.security.message.WSSecBase,org.apache.cxf.ws.security.policy.model.TokenWrapper,org.apache.cxf.ws.security.policy.model.Token)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.SymmetricBindingHandler:void doSignBeforeEncrypt()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.SymmetricBindingHandler:org.apache.ws.security.message.WSSecBase doEncryption(org.apache.cxf.ws.security.policy.model.TokenWrapper,org.apache.cxf.ws.security.tokenstore.SecurityToken,boolean,java.util.Vector,boolean)"
        ]
    },
    "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void policyAsserted(javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.wss4j.policyhandlers.SymmetricBindingHandler:void handleBinding()"
        ]
    },
    "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:java.util.Collection findAndAssertPolicy(javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void assertSupportingTokens(java.util.Vector)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void addSupportingTokens(java.util.Vector)"
        ]
    },
    "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:org.apache.ws.security.message.WSSecTimestamp createTimestamp()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.wss4j.policyhandlers.TransportBindingHandler:void handleBinding()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AsymmetricBindingHandler:void handleBinding()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.SymmetricBindingHandler:void handleBinding()"
        ]
    },
    "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:org.apache.ws.security.message.WSSecTimestamp handleLayout(org.apache.ws.security.message.WSSecTimestamp)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.wss4j.policyhandlers.TransportBindingHandler:void handleBinding()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AsymmetricBindingHandler:void handleBinding()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.SymmetricBindingHandler:void handleBinding()"
        ]
    },
    "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void assertSupportingTokens(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void assertSupportingTokens(java.util.Vector)"
        ]
    },
    "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:java.util.Map handleSupportingTokens(java.util.Collection,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void addSupportingTokens(java.util.Vector)"
        ]
    },
    "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:java.util.Map handleSupportingTokens(org.apache.cxf.ws.security.policy.model.SupportingToken,boolean,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:java.util.Map handleSupportingTokens(java.util.Collection,boolean)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:java.util.Map handleSupportingTokens(org.apache.cxf.ws.security.policy.model.SupportingToken,boolean)"
        ]
    },
    "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void addSignatureParts(java.util.Map,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void addSupportingTokens(java.util.Vector)"
        ]
    },
    "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:org.apache.ws.security.message.WSSecUsernameToken addUsernameToken(org.apache.cxf.ws.security.policy.model.UsernameToken)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.wss4j.policyhandlers.TransportBindingHandler:void addUsernameTokens(org.apache.cxf.ws.security.policy.model.SupportingToken)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:java.util.Map handleSupportingTokens(org.apache.cxf.ws.security.policy.model.SupportingToken,boolean,java.util.Map)"
        ]
    },
    "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:java.util.Vector getEncryptedParts()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AsymmetricBindingHandler:void doSignBeforeEncrypt()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AsymmetricBindingHandler:void doEncryptBeforeSign()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.SymmetricBindingHandler:void doEncryptBeforeSign()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.SymmetricBindingHandler:void doSignBeforeEncrypt()"
        ]
    },
    "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:java.util.Vector getSignedParts()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AsymmetricBindingHandler:void doSignBeforeEncrypt()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AsymmetricBindingHandler:void doEncryptBeforeSign()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.SymmetricBindingHandler:void doEncryptBeforeSign()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.SymmetricBindingHandler:void doSignBeforeEncrypt()"
        ]
    },
    "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:java.util.Vector getPartsAndElements(boolean,boolean,java.util.List,java.util.List,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:java.util.Vector getEncryptedParts()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:java.util.Vector getSignedParts()"
        ]
    },
    "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:org.apache.cxf.ws.security.policy.model.Wss10 getWss10()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void setKeyIdentifierType(org.apache.ws.security.message.WSSecBase,org.apache.cxf.ws.security.policy.model.TokenWrapper,org.apache.cxf.ws.security.policy.model.Token)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void addSignatureConfirmation(java.util.Vector)"
        ]
    },
    "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void doEndorsedSignatures(java.util.Map,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void doEndorse()"
        ]
    },
    "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void handleEncryptedSignedHeaders(java.util.Vector,java.util.Vector)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AsymmetricBindingHandler:void doEncryptBeforeSign()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.SymmetricBindingHandler:void doEncryptBeforeSign()"
        ]
    },
    "org.apache.cxf.ws.security.wss4j.policyhandlers.SymmetricBindingHandler:void doEncryptBeforeSign()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.wss4j.policyhandlers.SymmetricBindingHandler:void handleBinding()"
        ]
    },
    "org.apache.cxf.ws.security.wss4j.policyhandlers.SymmetricBindingHandler:void doSignBeforeEncrypt()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.wss4j.policyhandlers.SymmetricBindingHandler:void handleBinding()"
        ]
    },
    "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JOutInterceptor$PolicyBasedWSS4JOutInterceptorInternal:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JOutInterceptor$PolicyBasedWSS4JOutInterceptorInternal:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:void handleWSS11(org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.binding.soap.SoapMessage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:void computeAction(org.apache.cxf.binding.soap.SoapMessage,org.apache.ws.security.handler.RequestData)"
        ]
    },
    "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:boolean assertPolicy(org.apache.cxf.ws.policy.AssertionInfoMap,javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:void handleWSS11(org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:void computeAction(org.apache.cxf.binding.soap.SoapMessage,org.apache.ws.security.handler.RequestData)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:void doResults(org.apache.cxf.binding.soap.SoapMessage,java.lang.String,javax.xml.soap.SOAPMessage,java.util.Vector)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:boolean assertTransportBinding(org.apache.cxf.ws.policy.AssertionInfoMap)"
        ]
    },
    "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:void assertPolicy(org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.ws.policy.PolicyAssertion)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:boolean assertSymetricBinding(org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.binding.soap.SoapMessage,javax.xml.soap.SOAPMessage,org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor$Protections,boolean)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:boolean assertAsymetricBinding(org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.binding.soap.SoapMessage,javax.xml.soap.SOAPMessage,org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor$Protections,boolean)"
        ]
    },
    "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:void notAssertPolicy(org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.ws.policy.PolicyAssertion,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:void assertPolicy(org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.ws.security.policy.model.Token,boolean)"
        ]
    },
    "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:void assertTokens(org.apache.cxf.ws.policy.AssertionInfoMap,javax.xml.namespace.QName,java.util.Collection,org.apache.cxf.binding.soap.SoapMessage,javax.xml.soap.SOAPMessage,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:void doResults(org.apache.cxf.binding.soap.SoapMessage,java.lang.String,javax.xml.soap.SOAPMessage,java.util.Vector)"
        ]
    },
    "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:void doResults(org.apache.cxf.binding.soap.SoapMessage,java.lang.String,javax.xml.soap.SOAPMessage,java.util.Vector)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)"
        ]
    },
    "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:boolean assertSymetricBinding(org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.binding.soap.SoapMessage,javax.xml.soap.SOAPMessage,org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor$Protections,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:void doResults(org.apache.cxf.binding.soap.SoapMessage,java.lang.String,javax.xml.soap.SOAPMessage,java.util.Vector)"
        ]
    },
    "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:boolean assertAsymetricBinding(org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.binding.soap.SoapMessage,javax.xml.soap.SOAPMessage,org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor$Protections,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:void doResults(org.apache.cxf.binding.soap.SoapMessage,java.lang.String,javax.xml.soap.SOAPMessage,java.util.Vector)"
        ]
    },
    "org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor:void doResults(org.apache.cxf.binding.soap.SoapMessage,java.lang.String,javax.xml.soap.SOAPMessage,java.util.Vector)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:void doResults(org.apache.cxf.binding.soap.SoapMessage,java.lang.String,javax.xml.soap.SOAPMessage,java.util.Vector)"
        ]
    },
    "org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor:org.apache.ws.security.WSSecurityEngine createSecurityEngine(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor:void <init>(java.util.Map)"
        ]
    },
    "org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor$TokenStoreCallbackHandler:void handle(javax.security.auth.callback.Callback[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:java.lang.String getPassword(java.lang.String,org.apache.cxf.ws.policy.PolicyAssertion,int)",
            "org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor$TokenStoreCallbackHandler:void handle(javax.security.auth.callback.Callback[])"
        ]
    },
    "org.apache.cxf.ws.rm.AbstractRMInterceptor:void assertReliability(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.RMInInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.RMOutInterceptor:void handle(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.ws.rm.Servant:void terminateSequence(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.Servant:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object)"
        ]
    },
    "org.apache.cxf.ws.rm.AbstractSequence:boolean isAcknowledged(java.math.BigInteger)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.DestinationSequence:void applyDeliveryAssurance(java.math.BigInteger)",
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl:void purgeAcknowledged(org.apache.cxf.ws.rm.SourceSequence)"
        ]
    },
    "org.apache.cxf.ws.rm.DestinationSequence:void scheduleDeferredAcknowledgement(long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.DestinationSequence:void scheduleAcknowledgement(long)"
        ]
    },
    "org.apache.cxf.ws.rm.policy.PolicyUtils:org.apache.cxf.ws.rm.policy.RMAssertion getRMAssertion(org.apache.cxf.ws.rm.policy.RMAssertion,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.DestinationSequence:void acknowledge(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl$ResendCandidate:void <init>(org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.ws.rm.Source:java.util.Collection getAllUnacknowledgedSequences()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.RMEndpoint:void shutdown()"
        ]
    },
    "org.apache.cxf.ws.rm.RMOutInterceptor:void addAcknowledgements(org.apache.cxf.ws.rm.Destination,org.apache.cxf.ws.rm.RMProperties,org.apache.cxf.ws.rm.Identifier,org.apache.cxf.ws.addressing.v200408.AttributedURI)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.RMOutInterceptor:void handle(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.ws.rm.RMManager:void recoverReliableEndpoint(org.apache.cxf.endpoint.Endpoint,org.apache.cxf.transport.Conduit)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.RMManager:void startServer(org.apache.cxf.endpoint.Server)",
            "org.apache.cxf.ws.rm.RMManager:void clientCreated(org.apache.cxf.endpoint.Client)"
        ]
    },
    "org.apache.cxf.ws.rm.soap.RMSoapInterceptor:void encode(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.rm.RMProperties)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.soap.RMSoapInterceptor:void encode(org.apache.cxf.binding.soap.SoapMessage)"
        ]
    },
    "org.apache.cxf.ws.rm.soap.RMSoapInterceptor:org.apache.cxf.ws.rm.RMProperties unmarshalRMProperties(org.apache.cxf.binding.soap.SoapMessage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.soap.RMSoapInterceptor:void decode(org.apache.cxf.binding.soap.SoapMessage)"
        ]
    },
    "org.apache.cxf.ws.rm.soap.RMSoapInterceptor:void discardRMHeaders(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.soap.RMSoapInterceptor:void encode(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.rm.RMProperties)",
            "org.apache.cxf.ws.rm.soap.RMSoapInterceptor:void encodeFault(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.rm.SequenceFault)"
        ]
    },
    "org.apache.cxf.ws.rm.RMEndpoint:void setPolicies()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.RMEndpoint:void initialise(org.apache.cxf.transport.Conduit,org.apache.cxf.ws.addressing.EndpointReferenceType)"
        ]
    },
    "org.apache.cxf.ws.rm.RMEndpoint:java.lang.Object getUsingAddressing(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.RMEndpoint:java.lang.Object getUsingAddressing(org.apache.cxf.service.model.EndpointInfo)"
        ]
    },
    "org.apache.cxf.ws.rm.persistence.jdbc.RMTxStore:void removeMessages(org.apache.cxf.ws.rm.Identifier,java.util.Collection,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.DestinationSequence:void purgeAcknowledged(java.math.BigInteger)",
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl:void purgeAcknowledged(org.apache.cxf.ws.rm.SourceSequence)"
        ]
    },
    "org.apache.cxf.phase.PhaseInterceptorChain:void <init>(java.util.SortedSet)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:org.apache.cxf.interceptor.InterceptorChain getOutInterceptorChain(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.MultipleEndpointObserver:org.apache.cxf.phase.PhaseInterceptorChain createChain()",
            "org.apache.cxf.phase.PhaseChainCache:org.apache.cxf.phase.PhaseInterceptorChain getChain(java.util.SortedSet,java.util.List[])"
        ]
    },
    "org.apache.cxf.phase.PhaseInterceptorChain:void add(java.util.Collection,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:void add(java.util.Collection)"
        ]
    },
    "org.apache.cxf.workqueue.WorkQueueManagerImpl:void shutdown(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.workqueue.WorkQueueManagerImplMBeanWrapper:void shutdown(boolean)"
        ]
    },
    "org.apache.cxf.workqueue.WorkQueueManagerImpl:void run()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.databinding.AbstractDataBinding:void setNamespaceMap(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.databinding.AbstractDataBinding:void checkNamespaceMap(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.databinding.stax.StaxDataBindingFeature:void removeInterceptor(java.util.List,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.stax.StaxDataBindingFeature:void removeDatabindingInterceptor(java.util.List)"
        ]
    },
    "org.apache.cxf.wsdl.JAXBExtensionHelper$1:java.lang.String getPrefix(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.W3CDOMStreamWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.W3CDOMStreamWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.W3CDOMStreamWriter:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.wsdl.JAXBExtensionHelper$MappingReaderDelegate$1:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.aegis.util.NamespaceHelper:java.lang.String getUniquePrefix(javax.xml.stream.XMLStreamWriter,java.lang.String,boolean)",
            "org.apache.cxf.aegis.xml.stax.ElementWriter:void writeStartElement()",
            "org.apache.cxf.aegis.xml.stax.ElementWriter:java.lang.String getPrefixForNamespace(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.namespace.QName getServiceName(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.v200408.EndpointReferenceType convert(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.v200403.EndpointReferenceType convertTo200403(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.namespace.QName getPortQName(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.wsdl.Port getPort(org.apache.cxf.wsdl.WSDLManager,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.jaxws.ServiceImpl:java.lang.Object getPort(org.apache.cxf.ws.addressing.EndpointReferenceType,java.lang.Class,javax.xml.ws.WebServiceFeature[])"
        ]
    },
    "org.apache.cxf.wsdl.EndpointReferenceUtils:java.lang.String getPortName(org.apache.cxf.ws.addressing.EndpointReferenceType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.v200408.EndpointReferenceType convert(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.v200403.EndpointReferenceType convertTo200403(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.namespace.QName getPortQName(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.wsdl.Port getPort(org.apache.cxf.wsdl.WSDLManager,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.jaxws.ServiceImpl:java.lang.Object getPort(org.apache.cxf.ws.addressing.EndpointReferenceType,java.lang.Class,javax.xml.ws.WebServiceFeature[])"
        ]
    },
    "org.apache.cxf.wsdl.EndpointReferenceUtils:void setPortName(org.apache.cxf.ws.addressing.EndpointReferenceType,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.namespace.QName getInterfaceName(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.wsdl.EndpointReferenceUtils:void setMetadata(org.apache.cxf.ws.addressing.EndpointReferenceType,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.wsdl.Definition getWSDLDefinition(org.apache.cxf.wsdl.WSDLManager,org.apache.cxf.ws.addressing.EndpointReferenceType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.wsdl.Port getPort(org.apache.cxf.wsdl.WSDLManager,org.apache.cxf.ws.addressing.EndpointReferenceType)"
        ]
    },
    "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.wsdl.Port getPort(org.apache.cxf.wsdl.WSDLManager,org.apache.cxf.ws.addressing.EndpointReferenceType)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.wsdl.EndpointReferenceUtils:org.apache.cxf.transport.MultiplexDestination getMatchingMultiplexDestination(javax.xml.namespace.QName,java.lang.String,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl.EndpointReferenceUtils:org.apache.cxf.ws.addressing.EndpointReferenceType getEndpointReferenceWithId(javax.xml.namespace.QName,java.lang.String,java.lang.String,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.io.CachedOutputStream:void flush()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.LoggingInInterceptor:void logging(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.servlet.ServletController:void invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl:void resend(org.apache.cxf.transport.Conduit,org.apache.cxf.message.Message)",
            "org.apache.cxf.io.CachedOutputStream:void flush()",
            "org.apache.cxf.io.CachedOutputStream:void lockOutputStream()",
            "org.apache.cxf.io.CachedOutputStream:void close()",
            "org.apache.cxf.io.CachedOutputStream:byte[] getBytes()",
            "org.apache.cxf.io.CachedOutputStream:void writeCacheTo(java.io.OutputStream)",
            "org.apache.cxf.io.CachedOutputStream:void writeCacheTo(java.lang.StringBuilder,int)",
            "org.apache.cxf.io.CachedOutputStream:void writeCacheTo(java.lang.StringBuilder)",
            "org.apache.cxf.io.CachedOutputStream:java.io.InputStream getInputStream()",
            "org.apache.cxf.io.AbstractWrappedOutputStream:void flush()",
            "org.apache.cxf.io.WriteOnCloseOutputStream:void doClose()",
            "org.apache.cxf.io.CacheAndWriteOutputStream:void closeFlowthroughStream()",
            "org.apache.cxf.io.CacheAndWriteOutputStream:void postClose()",
            "org.apache.cxf.attachment.AttachmentSerializer:void writeAttachments()"
        ]
    },
    "org.apache.cxf.service.model.BindingOperationInfo:void <init>(org.apache.cxf.service.model.BindingInfo,org.apache.cxf.service.model.OperationInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.model.BindingOperationInfo:void <init>(org.apache.cxf.service.model.BindingInfo,org.apache.cxf.service.model.OperationInfo,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.service.model.BindingInfo:org.apache.cxf.service.model.BindingOperationInfo buildOperation(javax.xml.namespace.QName,java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean:void initializeWSDLOperationsForProvider()",
            "org.apache.cxf.jaxws.DispatchImpl:void addInvokeOperation(boolean)"
        ]
    },
    "org.apache.cxf.service.model.AbstractMessageContainer:int getMessagePartIndex(org.apache.cxf.service.model.MessagePartInfo)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePartByIndex(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean initializeParameter(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int,java.lang.Class,java.lang.reflect.Type)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createMessageParts(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void checkForWrapped(org.apache.cxf.service.model.OperationInfo,boolean)"
        ]
    },
    "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePart(javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.model.AbstractMessageContainer:void removeMessagePart(javax.xml.namespace.QName)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean initializeParameter(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int,java.lang.Class,java.lang.reflect.Type)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeParameter(org.apache.cxf.service.model.MessagePartInfo,java.lang.Class,java.lang.reflect.Type)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:void buildMessage(org.apache.cxf.service.model.MessageInfo,javax.wsdl.Message,org.apache.cxf.common.xmlschema.SchemaCollection,int,java.lang.String)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:void initializeMessage(org.apache.cxf.binding.soap.model.SoapBindingInfo,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.service.model.BindingMessageInfo)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:java.util.List handleMimePart(javax.wsdl.extensions.mime.MIMEPart,java.util.List,org.apache.cxf.service.model.MessageInfo,org.apache.cxf.service.model.BindingMessageInfo,java.util.List,java.util.List)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:void addSoapBodyPart(org.apache.cxf.service.model.MessageInfo,java.util.List,java.lang.String)",
            "org.apache.cxf.jaxws.interceptors.WrapperClassOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.interceptors.WrapperClassInInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePart(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.JAXBContextInitializer:void begin(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:org.apache.cxf.service.model.BindingOperationInfo findAnyOp(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.dynamic.TypeClassInitializer:void begin(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.ws.addressing.ContextUtils:java.lang.String getActionFromServiceModel(org.apache.cxf.message.Message,java.lang.Exception)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromClass()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void validateServiceModel()",
            "org.apache.cxf.jaxws.interceptors.WrapperClassInInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperation(org.apache.cxf.message.Exchange,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.URIMappingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.WrappedInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:org.apache.cxf.service.model.BindingOperationInfo getBindingOperationInfo(org.apache.cxf.message.Exchange,javax.xml.namespace.QName,boolean)"
        ]
    },
    "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperationForWrapperElement(org.apache.cxf.message.Exchange,javax.xml.namespace.QName,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:org.apache.cxf.service.model.BindingOperationInfo getBindingOperationInfo(org.apache.cxf.message.Exchange,javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.jaxws.handler.AbstractJAXWSHandlerInterceptor:void setupBindingOperationInfo(org.apache.cxf.message.Exchange,java.lang.Object)"
        ]
    },
    "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.SchemaInfo getSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.MessagePartInfo)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.service.model.ServiceModelUtil:java.util.List getOperationInputPartNames(org.apache.cxf.service.model.OperationInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.URIMappingInterceptor:org.apache.cxf.message.MessageContentsList getParameters(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo)"
        ]
    },
    "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.EndpointInfo findBestEndpointInfo(javax.xml.namespace.QName,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory:org.apache.cxf.endpoint.Endpoint createEndpoint()",
            "org.apache.cxf.jaxws.ServiceImpl:java.lang.Object createPort(javax.xml.namespace.QName,org.apache.cxf.ws.addressing.EndpointReferenceType,java.lang.Class,javax.xml.ws.WebServiceFeature[])"
        ]
    },
    "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.BindingInfo getBinding(javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.RMEndpoint:org.apache.cxf.service.model.BindingInfo getBindingInfo()",
            "org.apache.cxf.ws.rm.RMEndpoint:void createEndpoint()",
            "org.apache.cxf.service.model.ServiceInfo:void addBinding(org.apache.cxf.service.model.BindingInfo)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition,javax.wsdl.Service,javax.xml.namespace.QName,org.apache.cxf.service.model.DescriptionInfo)"
        ]
    },
    "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.EndpointInfo getEndpoint(javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.WrappedService:org.apache.cxf.service.model.EndpointInfo getEndpointInfo(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.ServiceInfo:void addEndpoint(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.service.ServiceImpl:org.apache.cxf.service.model.EndpointInfo getEndpointInfo(javax.xml.namespace.QName)"
        ]
    },
    "org.apache.cxf.service.model.ServiceInfo:void initMessagesMap()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.model.ServiceInfo:java.util.Map getMessages()",
            "org.apache.cxf.service.model.ServiceInfo:void refresh()"
        ]
    },
    "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.SchemaInfo getSchema(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.JAXBEncoderDecoder:void marshallException(javax.xml.bind.Marshaller,java.lang.Exception,org.apache.cxf.service.model.MessagePartInfo,java.lang.Object)",
            "org.apache.cxf.jaxb.JAXBSchemaInitializer:void createBridgeXsElement(org.apache.cxf.service.model.MessagePartInfo,javax.xml.namespace.QName,javax.xml.namespace.QName)",
            "org.apache.cxf.jaxb.JAXBSchemaInitializer:void end(org.apache.cxf.service.model.FaultInfo)",
            "org.apache.cxf.databinding.AbstractDataBinding:org.apache.ws.commons.schema.XmlSchema addSchemaDocument(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.common.xmlschema.SchemaCollection,org.w3c.dom.Document,java.lang.String)",
            "org.apache.cxf.jaxws.WrapperClassGenerator:void generatePackageInfo(java.lang.String,java.lang.String,java.lang.Class)"
        ]
    },
    "org.apache.cxf.service.model.MessageInfo:java.util.Map getMessagePartsMap()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.model.MessageInfo:java.util.List getOrderedParts(java.util.List)"
        ]
    },
    "org.apache.cxf.service.model.MessageInfo:java.util.List getOrderedParts(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.service.model.BindingInfo:org.apache.cxf.service.model.BindingOperationInfo buildOperation(javax.xml.namespace.QName,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.RMEndpoint:void buildBindingInfo(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.binding.AbstractBindingFactory:org.apache.cxf.service.model.BindingInfo initializeBindingInfo(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding,org.apache.cxf.service.model.BindingInfo)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:org.apache.cxf.service.model.BindingInfo createBindingInfo(org.apache.cxf.service.model.ServiceInfo,java.lang.String,java.lang.Object)",
            "org.apache.cxf.binding.xml.XMLBindingFactory:org.apache.cxf.service.model.BindingInfo createBindingInfo(org.apache.cxf.service.model.ServiceInfo,java.lang.String,java.lang.Object)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.BindingInfo buildBinding(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding)"
        ]
    },
    "org.apache.cxf.service.model.BindingInfo:org.apache.cxf.service.model.BindingOperationInfo getOperation(org.apache.cxf.service.model.OperationInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.BareInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:org.apache.cxf.service.model.MessagePartInfo findMessagePart(org.apache.cxf.message.Exchange,java.util.Collection,javax.xml.namespace.QName,boolean,int,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.trust.STSUtils:org.apache.cxf.endpoint.Endpoint createSTSEndpoint(org.apache.cxf.Bus,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.neethi.Policy,javax.xml.namespace.QName)",
            "org.apache.cxf.ws.rm.Proxy:java.lang.Object invoke(org.apache.cxf.service.model.OperationInfo,java.lang.Object[],java.util.Map)"
        ]
    },
    "org.apache.cxf.service.ServiceImpl:org.apache.cxf.service.model.EndpointInfo getEndpointInfo(javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.EndpointImpl:void <init>(org.apache.cxf.Bus,org.apache.cxf.service.Service,javax.xml.namespace.QName)",
            "org.apache.cxf.endpoint.ClientImpl:org.apache.cxf.service.model.EndpointInfo findEndpoint(org.apache.cxf.service.Service,javax.xml.namespace.QName)",
            "org.apache.cxf.ws.security.trust.STSClient:void createClient()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.EndpointInfo getEndpointInfo()",
            "org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory:org.apache.cxf.endpoint.Endpoint createEndpoint()",
            "org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory:org.apache.cxf.service.model.EndpointInfo createEndpointInfo()",
            "org.apache.cxf.jaxws.ServiceImpl:org.apache.cxf.jaxws.support.JaxWsClientEndpointImpl getJaxwsEndpoint(javax.xml.namespace.QName,org.apache.cxf.service.factory.AbstractServiceFactoryBean,javax.xml.ws.WebServiceFeature[])"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void fillInSchemaCrossreferences()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.Service create()"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createEndpoints()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.Service create()"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeServiceConfigurations()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.Service create()"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromWSDL(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeServiceModel()"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromClass()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeServiceModel()",
            "org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean:void buildServiceFromClass()"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean hasWrappedMethods(org.apache.cxf.service.model.InterfaceInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromClass()"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void validateServiceModel()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeServiceModel()"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.InterfaceInfo getInterfaceInfo()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeWSDLOperations()"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeWSDLOperations()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromWSDL(java.lang.String)",
            "org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean:void initializeWSDLOperations()"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void setFaultClassInfo(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean initializeClassInfo(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,java.util.List)"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.OperationInfo createOperation(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.InterfaceInfo,java.lang.reflect.Method)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.InterfaceInfo createInterface(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean:org.apache.cxf.service.model.OperationInfo createOperation(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.InterfaceInfo,java.lang.reflect.Method)"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeWrappedSchema(org.apache.cxf.service.model.ServiceInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromClass()"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void checkForElement(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.MessagePartInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromClass()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeWrappedSchema(org.apache.cxf.service.model.ServiceInfo)"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createBareMessage(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.OperationInfo,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromClass()"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isExistImport(org.apache.ws.commons.schema.XmlSchema,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void addImport(org.apache.ws.commons.schema.XmlSchema,java.lang.String)"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.ws.commons.schema.XmlSchemaElement getExistingSchemaElement(org.apache.ws.commons.schema.XmlSchema,javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createBareMessage(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.OperationInfo,boolean)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isExistSchemaElement(org.apache.ws.commons.schema.XmlSchema,javax.xml.namespace.QName)"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createWrappedMessageSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.AbstractMessageContainer,org.apache.cxf.service.model.AbstractMessageContainer,org.apache.ws.commons.schema.XmlSchema,javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createWrappedSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.AbstractMessageContainer,org.apache.cxf.service.model.AbstractMessageContainer,javax.xml.namespace.QName)"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.SchemaInfo getOrCreateSchema(org.apache.cxf.service.model.ServiceInfo,java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void checkForElement(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createWrappedSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.AbstractMessageContainer,org.apache.cxf.service.model.AbstractMessageContainer,javax.xml.namespace.QName)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createBareMessage(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.OperationInfo,boolean)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createWrappedMessageSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.AbstractMessageContainer,org.apache.cxf.service.model.AbstractMessageContainer,org.apache.ws.commons.schema.XmlSchema,javax.xml.namespace.QName)"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createInputWrappedMessageParts(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,org.apache.cxf.service.model.MessageInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.OperationInfo createOperation(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.InterfaceInfo,java.lang.reflect.Method)"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createOutputWrappedMessageParts(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,org.apache.cxf.service.model.MessageInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.OperationInfo createOperation(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.InterfaceInfo,java.lang.reflect.Method)"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getEndpointName(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromWSDL(java.lang.String)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getEndpointName()",
            "org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory:void <init>(org.apache.cxf.service.factory.ReflectionServiceFactoryBean)"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getServiceName()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getServiceQName(boolean)"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getServiceNamespace()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getServiceQName(boolean)",
            "org.apache.cxf.service.factory.DefaultServiceConfiguration:javax.xml.namespace.QName getInterfaceName()",
            "org.apache.cxf.service.factory.DefaultServiceConfiguration:javax.xml.namespace.QName getEndpointName()"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getInterfaceName()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.InterfaceInfo getInterfaceInfo()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.InterfaceInfo createInterface(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory:org.apache.cxf.endpoint.Endpoint createEndpoint()"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isValidMethod(java.lang.reflect.Method)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeWSDLOperations()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.InterfaceInfo createInterface(org.apache.cxf.service.model.ServiceInfo)"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isHolder(java.lang.Class,java.lang.reflect.Type)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeParameter(org.apache.cxf.service.model.MessagePartInfo,java.lang.Class,java.lang.reflect.Type)"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.reflect.Type getHolderType(java.lang.Class,java.lang.reflect.Type)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeParameter(org.apache.cxf.service.model.MessagePartInfo,java.lang.Class,java.lang.reflect.Type)"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isWrapped(java.lang.reflect.Method)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromClass()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean initializeClassInfo(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,java.util.List)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.OperationInfo createOperation(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.InterfaceInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createMessageParts(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void setParameterOrder(java.lang.reflect.Method,java.lang.Class[],org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getInPartName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getOutPartName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isOutParam(java.lang.reflect.Method,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean initializeParameter(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int,java.lang.Class,java.lang.reflect.Type)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createBareMessage(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.OperationInfo,boolean)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createMessageParts(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void setParameterOrder(java.lang.reflect.Method,java.lang.Class[],org.apache.cxf.service.model.OperationInfo)"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isInParam(java.lang.reflect.Method,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean initializeParameter(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int,java.lang.Class,java.lang.reflect.Type)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createMessageParts(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void setParameterOrder(java.lang.reflect.Method,java.lang.Class[],org.apache.cxf.service.model.OperationInfo)"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getInputMessageName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createMessageParts(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName createOutputMessageName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createMessageParts(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean hasOutMessage(java.lang.reflect.Method)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createMessageParts(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getFaultName(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.Class,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void setFaultClassInfo(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.FaultInfo addFault(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.Class)"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getAction(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.OperationInfo createOperation(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.InterfaceInfo,java.lang.reflect.Method)"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isHeader(java.lang.reflect.Method,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createMessageParts(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getInPartName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getOperationName(org.apache.cxf.service.model.InterfaceInfo,java.lang.reflect.Method)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeWSDLOperations()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.OperationInfo createOperation(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.InterfaceInfo,java.lang.reflect.Method)"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isAsync(java.lang.reflect.Method)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getInPartName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean initializeParameter(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int,java.lang.Class,java.lang.reflect.Type)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createMessageParts(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void setParameterOrder(java.lang.reflect.Method,java.lang.Class[],org.apache.cxf.service.model.OperationInfo)"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getInParameterName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createBareMessage(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.OperationInfo,boolean)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createMessageParts(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getInPartName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getOutParameterName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createBareMessage(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.OperationInfo,boolean)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createMessageParts(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getOutPartName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getOutPartName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean initializeParameter(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int,java.lang.Class,java.lang.reflect.Type)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createMessageParts(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void setParameterOrder(java.lang.reflect.Method,java.lang.Class[],org.apache.cxf.service.model.OperationInfo)"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.Class getResponseWrapper(java.lang.reflect.Method)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean initializeClassInfo(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,java.util.List)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createOutputWrappedMessageParts(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,org.apache.cxf.service.model.MessageInfo)",
            "org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean:void initializeWrapping(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getResponseWrapperClassName(java.lang.reflect.Method)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean initializeClassInfo(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,java.util.List)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createOutputWrappedMessageParts(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,org.apache.cxf.service.model.MessageInfo)",
            "org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean:void initializeWrapping(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.Class getRequestWrapper(java.lang.reflect.Method)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean initializeClassInfo(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,java.util.List)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createInputWrappedMessageParts(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,org.apache.cxf.service.model.MessageInfo)",
            "org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean:void initializeWrapping(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getRequestWrapperClassName(java.lang.reflect.Method)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean initializeClassInfo(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,java.util.List)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createInputWrappedMessageParts(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,org.apache.cxf.service.model.MessageInfo)",
            "org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean:void initializeWrapping(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isWrapperPartQualified(org.apache.cxf.service.model.MessagePartInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createWrappedMessageSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.AbstractMessageContainer,org.apache.cxf.service.model.AbstractMessageContainer,org.apache.ws.commons.schema.XmlSchema,javax.xml.namespace.QName)",
            "org.apache.cxf.jaxws.WrapperClassGenerator:void generateMessagePart(org.objectweb.asm.ClassWriter,org.apache.cxf.service.model.MessagePartInfo,java.lang.reflect.Method,java.lang.String)"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isWrapperPartNillable(org.apache.cxf.service.model.MessagePartInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createWrappedMessageSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.AbstractMessageContainer,org.apache.cxf.service.model.AbstractMessageContainer,org.apache.ws.commons.schema.XmlSchema,javax.xml.namespace.QName)",
            "org.apache.cxf.jaxws.WrapperClassGenerator:void generateMessagePart(org.objectweb.asm.ClassWriter,org.apache.cxf.service.model.MessagePartInfo,java.lang.reflect.Method,java.lang.String)"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:long getWrapperPartMaxOccurs(org.apache.cxf.service.model.MessagePartInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createWrappedMessageSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.AbstractMessageContainer,org.apache.cxf.service.model.AbstractMessageContainer,org.apache.ws.commons.schema.XmlSchema,javax.xml.namespace.QName)"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:long getWrapperPartMinOccurs(org.apache.cxf.service.model.MessagePartInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createWrappedMessageSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.AbstractMessageContainer,org.apache.cxf.service.model.AbstractMessageContainer,org.apache.ws.commons.schema.XmlSchema,javax.xml.namespace.QName)",
            "org.apache.cxf.jaxws.WrapperClassGenerator:void generateMessagePart(org.objectweb.asm.ClassWriter,org.apache.cxf.service.model.MessagePartInfo,java.lang.reflect.Method,java.lang.String)"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getWsdlURL()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isFromWsdl()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeServiceModel()",
            "org.apache.cxf.frontend.ClientProxyFactoryBean:java.lang.String getWsdlURL()",
            "org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory:java.lang.String getWsdlURL()"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isWrapped()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromClass()",
            "org.apache.cxf.service.factory.DefaultServiceConfiguration:java.lang.Boolean isWrapped(java.lang.reflect.Method)"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getStyle()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isRPC(java.lang.reflect.Method)",
            "org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory:org.apache.cxf.service.model.BindingInfo createBindingInfo()"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isRPC(java.lang.reflect.Method)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromClass()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.OperationInfo createOperation(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.InterfaceInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createMessageParts(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void setParameterOrder(java.lang.reflect.Method,java.lang.Class[],org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isWrapped(java.lang.reflect.Method)",
            "org.apache.cxf.jaxws.binding.soap.JaxWsSoapBindingConfiguration:java.lang.String getStyle(org.apache.cxf.service.model.OperationInfo)"
        ]
    },
    "org.apache.cxf.service.factory.DefaultServiceConfiguration:java.lang.Boolean isOperation(java.lang.reflect.Method)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isValidMethod(java.lang.reflect.Method)"
        ]
    },
    "org.apache.cxf.service.ServiceModelVisitor:void walk()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.JAXBDataBinding:void initialize(org.apache.cxf.service.Service)",
            "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:org.apache.cxf.endpoint.Client createClient(java.lang.String,javax.xml.namespace.QName,java.lang.ClassLoader,javax.xml.namespace.QName,java.util.List)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromClass()",
            "org.apache.cxf.xmlbeans.XmlBeansDataBinding:void initialize(org.apache.cxf.service.Service)"
        ]
    },
    "org.apache.cxf.service.ServiceModelVisitor:void visitOperation(org.apache.cxf.service.model.OperationInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.ServiceModelVisitor:void walk()",
            "org.apache.cxf.service.ServiceModelVisitor:void visitOperation(org.apache.cxf.service.model.OperationInfo)"
        ]
    },
    "org.apache.cxf.binding.AbstractBindingFactory:void registerWithBindingManager()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.binding.AbstractBindingFactory:org.apache.cxf.service.model.BindingInfo initializeBindingInfo(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding,org.apache.cxf.service.model.BindingInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.AbstractBindingFactory:org.apache.cxf.service.model.BindingInfo createBindingInfo(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding,java.lang.String)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:org.apache.cxf.service.model.BindingInfo createBindingInfo(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding,java.lang.String)"
        ]
    },
    "org.apache.cxf.binding.AbstractBindingFactory:void copyExtensors(org.apache.cxf.service.model.AbstractPropertiesHolder,javax.wsdl.extensions.ElementExtensible,org.apache.cxf.service.model.BindingOperationInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.AbstractBindingFactory:org.apache.cxf.service.model.BindingInfo initializeBindingInfo(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding,org.apache.cxf.service.model.BindingInfo)"
        ]
    },
    "org.apache.cxf.binding.soap.SoapBindingFactory:org.apache.cxf.service.model.BindingInfo createBindingInfo(org.apache.cxf.service.model.ServiceInfo,java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.AbstractBindingFactory:org.apache.cxf.service.model.BindingInfo createBindingInfo(org.apache.cxf.service.Service,java.lang.String,java.lang.Object)",
            "org.apache.cxf.binding.AbstractBindingFactory:org.apache.cxf.service.model.BindingInfo createBindingInfo(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding,java.lang.String)"
        ]
    },
    "org.apache.cxf.binding.soap.SoapBindingFactory:void createSoapBinding(org.apache.cxf.binding.soap.model.SoapBindingInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.soap.SoapBindingFactory:org.apache.cxf.service.model.BindingInfo createBindingInfo(org.apache.cxf.service.model.ServiceInfo,java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.cxf.binding.soap.SoapBindingFactory:void setupHeaders(org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.service.model.BindingMessageInfo,org.apache.cxf.service.model.BindingMessageInfo,org.apache.cxf.service.model.MessageInfo,org.apache.cxf.binding.soap.SoapBindingConfiguration)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.soap.SoapBindingFactory:org.apache.cxf.service.model.BindingInfo createBindingInfo(org.apache.cxf.service.model.ServiceInfo,java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.cxf.binding.soap.SoapBindingFactory:org.apache.cxf.binding.Binding createBinding(org.apache.cxf.service.model.BindingInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.EndpointImpl:void createBinding(org.apache.cxf.service.model.BindingInfo)"
        ]
    },
    "org.apache.cxf.binding.soap.SoapBindingFactory:void addOutOfBandParts(org.apache.cxf.service.model.BindingOperationInfo,javax.wsdl.Message,org.apache.cxf.common.xmlschema.SchemaCollection,boolean,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.soap.SoapBindingFactory:void addMessageFromBinding(javax.wsdl.extensions.ExtensibilityElement,org.apache.cxf.service.model.BindingOperationInfo,boolean)"
        ]
    },
    "org.apache.cxf.binding.soap.SoapBindingFactory:void buildMessage(org.apache.cxf.service.model.MessageInfo,javax.wsdl.Message,org.apache.cxf.common.xmlschema.SchemaCollection,int,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.soap.SoapBindingFactory:void addOutOfBandParts(org.apache.cxf.service.model.BindingOperationInfo,javax.wsdl.Message,org.apache.cxf.common.xmlschema.SchemaCollection,boolean,java.lang.String)"
        ]
    },
    "org.apache.cxf.binding.soap.SoapBindingFactory:org.apache.cxf.service.model.BindingInfo createBindingInfo(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.BindingInfo buildBinding(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding)"
        ]
    },
    "org.apache.cxf.binding.soap.SoapBindingFactory:void initializeMessage(org.apache.cxf.binding.soap.model.SoapBindingInfo,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.service.model.BindingMessageInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.soap.SoapBindingFactory:void initializeBindingOperation(org.apache.cxf.binding.soap.model.SoapBindingInfo,org.apache.cxf.service.model.BindingOperationInfo)"
        ]
    },
    "org.apache.cxf.binding.soap.SoapBindingFactory:java.util.List handleMimePart(javax.wsdl.extensions.mime.MIMEPart,java.util.List,org.apache.cxf.service.model.MessageInfo,org.apache.cxf.service.model.BindingMessageInfo,java.util.List,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.soap.SoapBindingFactory:void initializeMessage(org.apache.cxf.binding.soap.model.SoapBindingInfo,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.service.model.BindingMessageInfo)"
        ]
    },
    "org.apache.cxf.binding.soap.interceptor.ReadHeadersInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.soap.interceptor.ReadHeadersInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.binding.soap.interceptor.Soap12FaultOutInterceptor$Soap12FaultOutInterceptorInternal:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.soap.interceptor.Soap12FaultOutInterceptor$Soap12FaultOutInterceptorInternal:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.binding.soap.interceptor.RPCOutInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.binding.soap.interceptor.SoapActionInInterceptor:void getAndSetOperation(org.apache.cxf.binding.soap.SoapMessage,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.soap.interceptor.SoapActionInInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)"
        ]
    },
    "org.apache.cxf.binding.soap.interceptor.SoapHeaderOutFilterInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.soap.interceptor.SoapHeaderOutFilterInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.binding.soap.interceptor.RPCInInterceptor:org.apache.cxf.service.model.BindingOperationInfo getOperation(org.apache.cxf.message.Message,javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.soap.interceptor.RPCInInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor:void writeSoapEnvelopeStart(org.apache.cxf.binding.soap.SoapMessage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)"
        ]
    },
    "org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor:boolean handleHeaderPart(boolean,org.apache.cxf.binding.soap.SoapMessage,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor:void writeSoapEnvelopeStart(org.apache.cxf.binding.soap.SoapMessage)"
        ]
    },
    "org.apache.cxf.binding.soap.interceptor.MustUnderstandInterceptor:void initServiceSideInfo(java.util.Set,org.apache.cxf.binding.soap.SoapMessage,java.util.Set)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.soap.interceptor.MustUnderstandInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)"
        ]
    },
    "org.apache.cxf.binding.soap.interceptor.MustUnderstandInterceptor:void buildMustUnderstandHeaders(java.util.Set,org.apache.cxf.binding.soap.SoapMessage,java.util.Set,java.util.Set)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.soap.interceptor.MustUnderstandInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)"
        ]
    },
    "org.apache.cxf.binding.soap.interceptor.MustUnderstandInterceptor:void checkUnderstand(java.util.Set,java.util.Set,java.util.Set)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.soap.interceptor.MustUnderstandInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)"
        ]
    },
    "org.apache.cxf.binding.soap.interceptor.Soap11FaultOutInterceptor$Soap11FaultOutInterceptorInternal:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.soap.interceptor.Soap11FaultOutInterceptor$Soap11FaultOutInterceptorInternal:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.binding.soap.interceptor.EndpointSelectionInterceptor:org.apache.cxf.endpoint.Endpoint selectEndpoint(org.apache.cxf.message.Message,java.util.Set)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.AbstractEndpointSelectionInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.binding.soap.interceptor.MustUnderstandInterceptor$UltimateReceiverMustUnderstandInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.soap.interceptor.MustUnderstandInterceptor$UltimateReceiverMustUnderstandInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.binding.soap.HeaderUtil:java.util.Set getHeaderQNames(org.apache.cxf.service.model.BindingMessageInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.soap.HeaderUtil:java.util.Set getHeaderParts(org.apache.cxf.service.model.BindingMessageInfo)"
        ]
    },
    "org.apache.cxf.binding.soap.SoapTransportFactory:org.apache.cxf.service.model.EndpointInfo createEndpointInfo(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.BindingInfo,javax.wsdl.Port)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.EndpointInfo buildEndpoint(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.BindingInfo,javax.wsdl.Port)",
            "org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory:org.apache.cxf.service.model.EndpointInfo createEndpointInfo()"
        ]
    },
    "org.apache.cxf.binding.soap.SoapTransportFactory:void registerWithBindingManager()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.binding.soap.SoapMessage:boolean hasHeader(javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.binding.soap.SoapMessage:org.apache.cxf.headers.Header getHeader(javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.soap.interceptor.SoapHeaderInterceptor:org.apache.cxf.headers.Header findHeader(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.binding.soap.saaj.SAAJInInterceptor:void replaceHeaders(javax.xml.soap.SOAPMessage,org.apache.cxf.binding.soap.SoapMessage)"
        ]
    },
    "org.apache.cxf.binding.soap.saaj.SAAJInInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor:javax.xml.soap.SOAPMessage getSOAPMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.saaj.SAAJInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.handler.soap.SOAPMessageContextImpl:javax.xml.soap.SOAPMessage getMessage()"
        ]
    },
    "org.apache.cxf.binding.soap.saaj.SAAJOutInterceptor$SAAJOutEndingInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.soap.saaj.SAAJOutInterceptor$SAAJOutEndingInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.binding.soap.model.SoapBindingInfo:org.apache.cxf.service.model.OperationInfo getOperationByAction(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.binding.xml.interceptor.XMLMessageInInterceptor:org.apache.cxf.service.model.BindingOperationInfo getBindingOperationInfo(boolean,javax.xml.namespace.QName,org.apache.cxf.service.model.BindingInfo,javax.xml.stream.XMLStreamReader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.xml.interceptor.XMLMessageInInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.binding.xml.XMLFormatValidator:boolean checkXMLBindingFormat()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.xml.XMLFormatValidator:boolean isValid()"
        ]
    },
    "org.apache.cxf.binding.xml.XMLFormatValidator:boolean checkXMLFormat(org.apache.cxf.service.model.BindingInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.xml.XMLFormatValidator:boolean checkXMLBindingFormat()"
        ]
    },
    "org.apache.cxf.binding.xml.XMLFormatValidator:boolean findXMLFormatRootNode(java.util.Iterator,org.apache.cxf.service.model.BindingOperationInfo,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.xml.XMLFormatValidator:boolean checkXMLFormat(org.apache.cxf.service.model.BindingInfo)"
        ]
    },
    "org.apache.cxf.binding.xml.XMLBindingFactory:org.apache.cxf.service.model.BindingInfo createBindingInfo(org.apache.cxf.service.model.ServiceInfo,java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.AbstractBindingFactory:org.apache.cxf.service.model.BindingInfo createBindingInfo(org.apache.cxf.service.Service,java.lang.String,java.lang.Object)",
            "org.apache.cxf.binding.AbstractBindingFactory:org.apache.cxf.service.model.BindingInfo createBindingInfo(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding,java.lang.String)"
        ]
    },
    "org.apache.cxf.clustering.AbstractStaticFailoverStrategy:java.util.List getAlternateEndpoints(org.apache.cxf.message.Exchange)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.clustering.FailoverTargetSelector:org.apache.cxf.endpoint.Endpoint getFailoverTarget(org.apache.cxf.message.Exchange,org.apache.cxf.clustering.FailoverTargetSelector$InvocationContext)"
        ]
    },
    "org.apache.cxf.tools.common.Tag:java.lang.String formatAttribute(org.apache.cxf.tools.common.Tag)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.tools.common.Tag:java.lang.String formatTag(org.apache.cxf.tools.common.Tag,int)"
        ]
    },
    "org.apache.cxf.tools.common.Tag:java.lang.String formatTag(org.apache.cxf.tools.common.Tag,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.tools.common.Tag:java.lang.String formatTag(org.apache.cxf.tools.common.Tag,int)",
            "org.apache.cxf.tools.common.Tag:java.lang.String toString()"
        ]
    },
    "org.apache.cxf.tools.common.Tag:boolean equals(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.builder.jaxb.JaxbAssertion:boolean equal(org.apache.neethi.PolicyComponent)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:boolean equals(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.tools.common.ProcessorTestBase:org.apache.cxf.tools.common.Tag getFromSource(org.apache.cxf.tools.common.Tag,org.apache.cxf.tools.common.Tag)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:boolean containsValue(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:javax.activation.DataHandler get(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:javax.activation.DataHandler remove(java.lang.Object)",
            "org.apache.cxf.aegis.type.java5.AnnotationReader:java.lang.Object getAnnotationValue(java.lang.String,java.lang.reflect.AnnotatedElement,java.lang.Object,java.lang.Class[])",
            "org.apache.cxf.aegis.type.java5.AnnotationReader:java.lang.Object getAnnotationValue(java.lang.String,java.lang.reflect.Method,int,java.lang.Object,java.lang.Class[])"
        ]
    },
    "org.apache.cxf.tools.common.ToolContext:void addParameters(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.tools.common.VelocityGenerator:void doWrite(java.lang.String,java.io.Writer)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.tools.common.toolspec.ToolSpec:boolean isValidInputStream(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.tools.common.toolspec.ToolSpec:java.util.List getInstreamIds()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.tools.common.toolspec.ToolSpec:java.util.List getOutstreamIds()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.tools.common.toolspec.ToolSpec:java.lang.String getStreamRefName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.tools.common.toolspec.parser.CommandDocument:java.lang.String[] getParameters(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.tools.common.AbstractCXFToolContainer:java.util.Map getParametersMap(java.util.Set)",
            "org.apache.cxf.tools.common.toolspec.parser.CommandDocument:boolean hasParameter(java.lang.String)",
            "org.apache.cxf.tools.common.toolspec.parser.CommandDocument:java.lang.String getParameter(java.lang.String)"
        ]
    },
    "org.apache.cxf.tools.common.toolspec.parser.CommandDocument:java.lang.String[] getParameterNames()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.tools.common.AbstractCXFToolContainer:java.util.Map getParametersMap(java.util.Set)"
        ]
    },
    "org.apache.cxf.tools.common.toolspec.parser.Form:void <init>(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.tools.common.toolspec.parser.CommandLineParser:org.apache.cxf.tools.common.toolspec.parser.CommandDocument parseArguments(java.lang.String[])"
        ]
    },
    "org.apache.cxf.tools.common.toolspec.parser.Option:boolean accept(org.apache.cxf.tools.common.toolspec.parser.TokenInputStream,org.w3c.dom.Element,org.apache.cxf.tools.common.toolspec.parser.ErrorVisitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.tools.common.toolspec.parser.Form:boolean accept(org.apache.cxf.tools.common.toolspec.parser.TokenInputStream,org.w3c.dom.Element,org.apache.cxf.tools.common.toolspec.parser.ErrorVisitor)",
            "org.apache.cxf.tools.common.toolspec.parser.OptionGroup:boolean accept(org.apache.cxf.tools.common.toolspec.parser.TokenInputStream,org.w3c.dom.Element,org.apache.cxf.tools.common.toolspec.parser.ErrorVisitor)"
        ]
    },
    "org.apache.cxf.tools.common.toolspec.parser.OptionGroup:void <init>(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.tools.common.toolspec.parser.Form:void <init>(org.w3c.dom.Element)"
        ]
    },
    "org.apache.cxf.tools.common.toolspec.parser.OptionGroup:boolean accept(org.apache.cxf.tools.common.toolspec.parser.TokenInputStream,org.w3c.dom.Element,org.apache.cxf.tools.common.toolspec.parser.ErrorVisitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.tools.common.toolspec.parser.Form:boolean accept(org.apache.cxf.tools.common.toolspec.parser.TokenInputStream,org.w3c.dom.Element,org.apache.cxf.tools.common.toolspec.parser.ErrorVisitor)"
        ]
    },
    "org.apache.cxf.tools.common.toolspec.parser.OptionGroup:boolean isSatisfied(org.apache.cxf.tools.common.toolspec.parser.ErrorVisitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.tools.common.toolspec.parser.Form:boolean accept(org.apache.cxf.tools.common.toolspec.parser.TokenInputStream,org.w3c.dom.Element,org.apache.cxf.tools.common.toolspec.parser.ErrorVisitor)"
        ]
    },
    "org.apache.cxf.tools.common.toolspec.parser.ErrorVisitor:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:java.util.List enumeratorValues(org.apache.ws.commons.schema.XmlSchemaSimpleType)",
            "org.apache.cxf.common.logging.Log4jLogger$HandlerWrapper:void append(org.apache.log4j.spi.LoggingEvent)",
            "org.apache.cxf.common.util.PackageUtils:java.lang.String combine(java.util.List,char)",
            "org.apache.cxf.configuration.spring.SpringBeanMap:void processBeans(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.message.MessageUtils:boolean isTrue(java.lang.Object)",
            "org.apache.cxf.endpoint.ClientImpl:boolean isThreadLocalRequestContext()",
            "org.apache.cxf.ws.addressing.ContextUtils:java.lang.String getAction(org.apache.cxf.service.model.Extensible)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationOutInterceptor:void renewToken(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.ws.security.tokenstore.SecurityToken,org.apache.cxf.ws.security.policy.model.SecureConversationToken)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.policy.interceptors.IssuedTokenInterceptorProvider$IssuedTokenOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationTokenInterceptorProvider:java.lang.String setupClient(org.apache.cxf.ws.security.trust.STSClient,org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.ws.security.policy.model.SecureConversationToken,boolean)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:java.lang.String checkAsymetricBinding(org.apache.cxf.ws.policy.AssertionInfoMap,java.lang.String,org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:java.lang.String checkSymetricBinding(org.apache.cxf.ws.policy.AssertionInfoMap,java.lang.String,org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.wsdl.AbstractWSDLPlugin:java.lang.String getOption(java.util.Map,java.lang.String)",
            "org.apache.cxf.tools.common.toolspec.parser.BadUsageException:java.lang.String getMessage()",
            "org.apache.cxf.tools.common.toolspec.parser.ErrorVisitor:java.lang.String toString()",
            "org.apache.cxf.tools.util.URIParserUtil:java.lang.String combine(java.util.List,char)",
            "org.apache.cxf.aegis.xml.jdom.JDOMWriter:void writeValue(java.lang.Object)",
            "org.apache.cxf.aegis.xml.jdom.JDOMWriter:void writeValue(java.lang.Object,java.lang.String,java.lang.String)",
            "org.apache.cxf.aegis.xml.jdom.AttributeWriter:void writeValue(java.lang.Object)",
            "org.apache.cxf.aegis.xml.stax.AttributeWriter:void writeValue(java.lang.Object)",
            "org.apache.cxf.aegis.xml.stax.ElementWriter:void writeValue(java.lang.Object)",
            "org.apache.cxf.aegis.type.basic.BigIntegerType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.BigDecimalType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.jaxws.EndpointImpl:void checkProperties()",
            "org.apache.cxf.xmlbeans.tools.XMLBeansToolingDataBinding:void initialize(org.apache.cxf.tools.common.ToolContext)"
        ]
    },
    "org.apache.cxf.tools.common.toolspec.parser.CommandLineParser:org.apache.cxf.tools.common.toolspec.parser.CommandDocument parseArguments(java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.tools.common.toolspec.parser.CommandLineParser:org.apache.cxf.tools.common.toolspec.parser.CommandDocument parseArguments(java.lang.String)",
            "org.apache.cxf.tools.common.toolspec.AbstractToolContainer:void parseCommandLine()"
        ]
    },
    "org.apache.cxf.tools.common.ProcessorTestBase:boolean assertXmlEquals(java.io.File,java.io.File,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.tools.common.ProcessorTestBase:void assertAttributesEquals(javax.xml.namespace.QName,java.util.Map,java.util.Map,java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.tools.common.ProcessorTestBase:void assertTagEquals(org.apache.cxf.tools.common.Tag,org.apache.cxf.tools.common.Tag,java.util.List,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.tools.common.ProcessorTestBase:org.apache.cxf.tools.common.Tag getFromSource(org.apache.cxf.tools.common.Tag,org.apache.cxf.tools.common.Tag)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.tools.common.ProcessorTestBase:void assertTagEquals(org.apache.cxf.tools.common.Tag,org.apache.cxf.tools.common.Tag,java.util.List,java.util.List)"
        ]
    },
    "org.apache.cxf.tools.common.model.JAnnotation:java.util.Set getImports()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.tools.common.model.JavaMethod:void addAnnotation(java.lang.String,org.apache.cxf.tools.common.model.JAnnotation)",
            "org.apache.cxf.tools.common.model.JavaInterface:void addAnnotation(org.apache.cxf.tools.common.model.JAnnotation)",
            "org.apache.cxf.tools.common.model.JavaField:void addAnnotation(org.apache.cxf.tools.common.model.JAnnotation)",
            "org.apache.cxf.tools.common.model.JAnnotationElement:void appendValue(java.lang.StringBuffer,java.lang.Object)"
        ]
    },
    "org.apache.cxf.tools.common.model.JAnnotation:org.apache.cxf.tools.common.model.JAnnotationElement getElementByName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.tools.common.model.JAnnotation:void addElement(org.apache.cxf.tools.common.model.JAnnotationElement)"
        ]
    },
    "org.apache.cxf.tools.common.model.JavaMethod:java.lang.String getSignature()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.tools.common.model.JavaInterface:boolean hasMethod(org.apache.cxf.tools.common.model.JavaMethod)",
            "org.apache.cxf.tools.common.model.JavaInterface:int indexOf(org.apache.cxf.tools.common.model.JavaMethod)"
        ]
    },
    "org.apache.cxf.tools.common.model.JavaMethod:void addAnnotation(java.lang.String,org.apache.cxf.tools.common.model.JAnnotation)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.tools.common.model.JavaMethod:java.util.List getParameterList(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.tools.common.model.JavaMethod:java.util.List getParameterList()",
            "org.apache.cxf.tools.common.model.JavaMethod:java.util.List getParameterListWithoutAnnotation()"
        ]
    },
    "org.apache.cxf.tools.common.model.JavaInterface:void addAnnotation(org.apache.cxf.tools.common.model.JAnnotation)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.tools.common.model.JavaInterface:void addImports(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.tools.common.model.JavaInterface:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:java.util.List enumeratorValues(org.apache.ws.commons.schema.XmlSchemaSimpleType)",
            "org.apache.cxf.common.logging.Log4jLogger$HandlerWrapper:void append(org.apache.log4j.spi.LoggingEvent)",
            "org.apache.cxf.common.util.PackageUtils:java.lang.String combine(java.util.List,char)",
            "org.apache.cxf.configuration.spring.SpringBeanMap:void processBeans(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.message.MessageUtils:boolean isTrue(java.lang.Object)",
            "org.apache.cxf.endpoint.ClientImpl:boolean isThreadLocalRequestContext()",
            "org.apache.cxf.ws.addressing.ContextUtils:java.lang.String getAction(org.apache.cxf.service.model.Extensible)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationOutInterceptor:void renewToken(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.ws.security.tokenstore.SecurityToken,org.apache.cxf.ws.security.policy.model.SecureConversationToken)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.policy.interceptors.IssuedTokenInterceptorProvider$IssuedTokenOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationTokenInterceptorProvider:java.lang.String setupClient(org.apache.cxf.ws.security.trust.STSClient,org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.ws.security.policy.model.SecureConversationToken,boolean)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:java.lang.String checkAsymetricBinding(org.apache.cxf.ws.policy.AssertionInfoMap,java.lang.String,org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:java.lang.String checkSymetricBinding(org.apache.cxf.ws.policy.AssertionInfoMap,java.lang.String,org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.wsdl.AbstractWSDLPlugin:java.lang.String getOption(java.util.Map,java.lang.String)",
            "org.apache.cxf.tools.common.toolspec.parser.ErrorVisitor:java.lang.String toString()",
            "org.apache.cxf.tools.util.URIParserUtil:java.lang.String combine(java.util.List,char)",
            "org.apache.cxf.aegis.xml.jdom.JDOMWriter:void writeValue(java.lang.Object)",
            "org.apache.cxf.aegis.xml.jdom.JDOMWriter:void writeValue(java.lang.Object,java.lang.String,java.lang.String)",
            "org.apache.cxf.aegis.xml.jdom.AttributeWriter:void writeValue(java.lang.Object)",
            "org.apache.cxf.aegis.xml.stax.AttributeWriter:void writeValue(java.lang.Object)",
            "org.apache.cxf.aegis.xml.stax.ElementWriter:void writeValue(java.lang.Object)",
            "org.apache.cxf.aegis.type.basic.BigIntegerType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.BigDecimalType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.jaxws.EndpointImpl:void checkProperties()",
            "org.apache.cxf.xmlbeans.tools.XMLBeansToolingDataBinding:void initialize(org.apache.cxf.tools.common.ToolContext)"
        ]
    },
    "org.apache.cxf.tools.common.model.JavaField:void addAnnotation(org.apache.cxf.tools.common.model.JAnnotation)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.tools.util.SOAPBindingUtil:boolean isSOAPBinding(javax.wsdl.Binding)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.tools.util.SOAPBindingUtil:java.lang.String getBindingStyle(javax.wsdl.Binding)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.tools.util.SOAPBindingUtil:java.lang.String getCanonicalBindingStyle(javax.wsdl.Binding)"
        ]
    },
    "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapOperation getSoapOperation(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.soap.SoapBindingFactory:void initializeBindingOperation(org.apache.cxf.binding.soap.model.SoapBindingInfo,org.apache.cxf.service.model.BindingOperationInfo)"
        ]
    },
    "org.apache.cxf.tools.util.SOAPBindingUtil:java.lang.String getSOAPOperationStyle(javax.wsdl.BindingOperation)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.tools.util.SOAPBindingUtil:java.lang.String getCanonicalBindingStyle(javax.wsdl.Binding)"
        ]
    },
    "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapBody getBindingInputSOAPBody(javax.wsdl.BindingOperation)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapBody getBindingOutputSOAPBody(javax.wsdl.BindingOperation)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapBody getSoapBody(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.soap.SoapBindingFactory:void initializeMessage(org.apache.cxf.binding.soap.model.SoapBindingInfo,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.service.model.BindingMessageInfo)"
        ]
    },
    "org.apache.cxf.tools.util.SOAPBindingUtil:java.util.List getSoapHeaders(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.soap.SoapBindingFactory:void initializeMessage(org.apache.cxf.binding.soap.model.SoapBindingInfo,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.service.model.BindingMessageInfo)"
        ]
    },
    "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapHeader getBindingInputSOAPHeader(javax.wsdl.BindingOperation)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapHeader getBindingOutputSOAPHeader(javax.wsdl.BindingOperation)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapBinding getSoapBinding(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.soap.SoapBindingFactory:org.apache.cxf.service.model.BindingInfo createBindingInfo(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding,java.lang.String)"
        ]
    },
    "org.apache.cxf.tools.util.SOAPBindingUtil:java.util.List getBindingOperationSoapFaults(javax.wsdl.BindingOperation)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.tools.util.SOAPBindingUtil:boolean isMixedStyle(javax.wsdl.Binding)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.tools.util.SOAPBindingUtil:java.lang.String getCanonicalBindingStyle(javax.wsdl.Binding)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.buslifecycle.CXFBusLifeCycleManager:void initComplete()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.buslifecycle.CXFBusLifeCycleManager:void initComplete()",
            "org.apache.cxf.bus.spring.BusApplicationListener:void onApplicationEvent(org.springframework.context.ApplicationEvent)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void <init>(java.util.Map,java.util.Map)",
            "org.apache.cxf.bus.CXFBusFactory:void initializeBus(org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.buslifecycle.CXFBusLifeCycleManager:void preShutdown()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.buslifecycle.CXFBusLifeCycleManager:void preShutdown()",
            "org.apache.cxf.buslifecycle.CXFBusLifeCycleManager:void postShutdown()",
            "org.apache.cxf.bus.CXFBusImpl:void shutdown(boolean)"
        ]
    },
    "org.apache.cxf.buslifecycle.CXFBusLifeCycleManager:void postShutdown()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.buslifecycle.CXFBusLifeCycleManager:void postShutdown()",
            "org.apache.cxf.bus.spring.BusApplicationListener:void onApplicationEvent(org.springframework.context.ApplicationEvent)",
            "org.apache.cxf.bus.CXFBusImpl:void shutdown(boolean)"
        ]
    },
    "org.apache.cxf.wsdl11.SchemaUtil:void getSchemas(javax.wsdl.Definition,org.apache.cxf.common.xmlschema.SchemaCollection,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.SchemaUtil:void getSchemas(javax.wsdl.Definition,org.apache.cxf.common.xmlschema.SchemaCollection,org.apache.cxf.service.model.ServiceInfo)"
        ]
    },
    "org.apache.cxf.wsdl11.SchemaUtil:void extractSchema(javax.wsdl.Definition,org.apache.cxf.common.xmlschema.SchemaCollection,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.SchemaUtil:void getSchemas(javax.wsdl.Definition,org.apache.cxf.common.xmlschema.SchemaCollection,java.util.List)"
        ]
    },
    "org.apache.cxf.wsdl11.SchemaUtil:void parseImports(javax.wsdl.Definition,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.SchemaUtil:void getSchemas(javax.wsdl.Definition,org.apache.cxf.common.xmlschema.SchemaCollection,java.util.List)",
            "org.apache.cxf.wsdl11.SchemaUtil:void parseImports(javax.wsdl.Definition,java.util.List)"
        ]
    },
    "org.apache.cxf.wsdl11.SchemaUtil:void getSchemaList(javax.wsdl.Definition)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.SchemaUtil:void getSchemas(javax.wsdl.Definition,org.apache.cxf.common.xmlschema.SchemaCollection,java.util.List)"
        ]
    },
    "org.apache.cxf.wsdl11.SchemaUtil:void addSchema(java.lang.String,javax.wsdl.extensions.schema.Schema)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.SchemaUtil:void getSchemaList(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.SchemaUtil:void addSchema(java.lang.String,javax.wsdl.extensions.schema.Schema)"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void parseWSDL(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:javax.wsdl.Definition build(java.lang.String)"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:java.util.Collection getImports(javax.wsdl.Definition)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void parseImports(javax.wsdl.Definition)"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void parseImports(javax.wsdl.Definition)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void parseWSDL(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void parseImports(javax.wsdl.Definition)"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLServiceUtils:org.apache.cxf.binding.BindingFactory getBindingFactory(javax.wsdl.Binding,org.apache.cxf.Bus,java.lang.StringBuffer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.BindingInfo buildBinding(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding)"
        ]
    },
    "org.apache.cxf.wsdl11.ServiceWSDLBuilder:javax.wsdl.Definition build(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:javax.wsdl.Definition build()"
        ]
    },
    "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addExtensibilityElements(javax.wsdl.extensions.ElementExtensible,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:javax.wsdl.Definition build(java.util.Map)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBinding(java.util.Collection,java.util.Collection)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBindingOperation(javax.wsdl.Definition,javax.wsdl.Binding,java.util.Collection)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBindingFault(javax.wsdl.Definition,javax.wsdl.BindingOperation,java.util.Collection)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBindingInput(javax.wsdl.Definition,javax.wsdl.BindingOperation,org.apache.cxf.service.model.BindingMessageInfo)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBindingOutput(javax.wsdl.Definition,javax.wsdl.BindingOperation,org.apache.cxf.service.model.BindingMessageInfo)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildService(org.apache.cxf.service.model.ServiceInfo)"
        ]
    },
    "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addExtensibilityAttributes(javax.wsdl.extensions.AttributeExtensible,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBindingOperation(javax.wsdl.Definition,javax.wsdl.Binding,java.util.Collection)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBindingFault(javax.wsdl.Definition,javax.wsdl.BindingOperation,java.util.Collection)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBindingInput(javax.wsdl.Definition,javax.wsdl.BindingOperation,org.apache.cxf.service.model.BindingMessageInfo)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBindingOutput(javax.wsdl.Definition,javax.wsdl.BindingOperation,org.apache.cxf.service.model.BindingMessageInfo)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildPortTypeOperation(javax.wsdl.PortType,java.util.Collection,javax.wsdl.Definition)"
        ]
    },
    "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildTypes(java.util.Collection,java.util.Map,javax.wsdl.Definition)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:javax.wsdl.Definition build(java.util.Map)"
        ]
    },
    "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBinding(java.util.Collection,java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:javax.wsdl.Definition build(java.util.Map)"
        ]
    },
    "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBindingOperation(javax.wsdl.Definition,javax.wsdl.Binding,java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBinding(java.util.Collection,java.util.Collection)"
        ]
    },
    "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBindingFault(javax.wsdl.Definition,javax.wsdl.BindingOperation,java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBindingOperation(javax.wsdl.Definition,javax.wsdl.Binding,java.util.Collection)"
        ]
    },
    "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildService(org.apache.cxf.service.model.ServiceInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:javax.wsdl.Definition build(java.util.Map)"
        ]
    },
    "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildPortTypeOperation(javax.wsdl.PortType,java.util.Collection,javax.wsdl.Definition)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:javax.wsdl.PortType buildPortType(org.apache.cxf.service.model.InterfaceInfo,javax.wsdl.Definition)"
        ]
    },
    "org.apache.cxf.wsdl11.ServiceWSDLBuilder:java.lang.String getPrefix(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:javax.wsdl.Definition build(java.util.Map)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addNamespace(java.lang.String,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addNamespace(java.lang.String)"
        ]
    },
    "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildMessage(javax.wsdl.Message,org.apache.cxf.service.model.AbstractMessageContainer,javax.wsdl.Definition)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildPortTypeOperation(javax.wsdl.PortType,java.util.Collection,javax.wsdl.Definition)"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLManagerImpl:org.apache.cxf.service.model.ServiceSchemaInfo getSchemasForDefinition(javax.wsdl.Definition)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void getSchemas(javax.wsdl.Definition,org.apache.cxf.service.model.ServiceInfo)"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLManagerImpl:void putSchemasForDefinition(javax.wsdl.Definition,org.apache.cxf.service.model.ServiceSchemaInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void getSchemas(javax.wsdl.Definition,org.apache.cxf.service.model.ServiceInfo)"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLManagerImpl:void removeDefinition(javax.wsdl.Definition)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.wsdl11.WSDLServiceBuilder:void copyExtensors(org.apache.cxf.service.model.AbstractPropertiesHolder,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildMockServices(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.ServiceInfo buildMockService(javax.wsdl.Definition,javax.wsdl.PortType)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition,javax.wsdl.Service,javax.xml.namespace.QName,org.apache.cxf.service.model.DescriptionInfo)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.EndpointInfo buildEndpoint(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.BindingInfo,javax.wsdl.Port)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.BindingInfo buildBinding(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildInterface(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.PortType)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildInterfaceOperation(org.apache.cxf.service.model.InterfaceInfo,javax.wsdl.Operation)"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLServiceFactory:org.apache.cxf.service.Service create()"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildMockServices(javax.wsdl.Definition)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition,javax.wsdl.Service,javax.xml.namespace.QName,org.apache.cxf.service.model.DescriptionInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition,javax.xml.namespace.QName,javax.xml.namespace.QName,org.apache.cxf.service.model.DescriptionInfo)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition,javax.wsdl.Service)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition,javax.wsdl.Service,javax.xml.namespace.QName)"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLServiceBuilder:void parseImports(javax.wsdl.Definition,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildMockServices(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void parseImports(javax.wsdl.Definition,java.util.List)"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.EndpointInfo buildEndpoint(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.BindingInfo,javax.wsdl.Port)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition,javax.wsdl.Service,javax.xml.namespace.QName,org.apache.cxf.service.model.DescriptionInfo)"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.BindingInfo buildBinding(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildMockServices(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition,javax.wsdl.Service,javax.xml.namespace.QName,org.apache.cxf.service.model.DescriptionInfo)"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildInterface(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.PortType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.ServiceInfo buildMockService(javax.wsdl.Definition,javax.wsdl.PortType)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition,javax.wsdl.Service,javax.xml.namespace.QName,org.apache.cxf.service.model.DescriptionInfo)"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildInterfaceOperation(org.apache.cxf.service.model.InterfaceInfo,javax.wsdl.Operation)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildInterface(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.PortType)"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildMessage(org.apache.cxf.service.model.AbstractMessageContainer,javax.wsdl.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildInterfaceOperation(org.apache.cxf.service.model.InterfaceInfo,javax.wsdl.Operation)"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLServiceFactory:org.apache.cxf.service.Service create()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:void <init>(org.apache.cxf.Bus,java.net.URL,javax.xml.namespace.QName,javax.xml.namespace.QName,org.apache.cxf.endpoint.EndpointImplFactory)",
            "org.apache.cxf.ws.security.trust.STSClient:void createClient()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromWSDL(java.lang.String)",
            "org.apache.cxf.jaxws.ServiceImpl:void initializePorts()",
            "org.apache.cxf.jaxws.ServiceImpl:org.apache.cxf.service.factory.AbstractServiceFactoryBean createDispatchService(org.apache.cxf.databinding.DataBinding)"
        ]
    },
    "org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor:void insertConstructorArg(org.springframework.beans.factory.config.ConstructorArgumentValues,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor:void postProcessBeanFactory(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)"
        ]
    },
    "org.apache.cxf.bus.extension.ExtensionManagerImpl:void activateViaNS(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void activateAll()",
            "org.apache.cxf.bus.extension.DeferredMap:java.lang.Object get(java.lang.Object)"
        ]
    },
    "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadFragment(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void load(java.lang.String)"
        ]
    },
    "org.apache.cxf.bus.extension.ExtensionManagerImpl:void processExtension(org.apache.cxf.bus.extension.Extension)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadFragment(java.io.InputStream)"
        ]
    },
    "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadAndRegister(org.apache.cxf.bus.extension.Extension)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void activateViaNS(java.lang.String)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void processExtension(org.apache.cxf.bus.extension.Extension)"
        ]
    },
    "org.apache.cxf.bus.extension.ExtensionManagerImpl:java.lang.Object getExtension(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.extension.DeferredMap:java.lang.Object get(java.lang.Object)"
        ]
    },
    "org.apache.cxf.bus.extension.Extension:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:java.util.List enumeratorValues(org.apache.ws.commons.schema.XmlSchemaSimpleType)",
            "org.apache.cxf.common.logging.Log4jLogger$HandlerWrapper:void append(org.apache.log4j.spi.LoggingEvent)",
            "org.apache.cxf.common.util.PackageUtils:java.lang.String combine(java.util.List,char)",
            "org.apache.cxf.configuration.spring.SpringBeanMap:void processBeans(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.message.MessageUtils:boolean isTrue(java.lang.Object)",
            "org.apache.cxf.endpoint.ClientImpl:boolean isThreadLocalRequestContext()",
            "org.apache.cxf.ws.addressing.ContextUtils:java.lang.String getAction(org.apache.cxf.service.model.Extensible)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationOutInterceptor:void renewToken(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.ws.security.tokenstore.SecurityToken,org.apache.cxf.ws.security.policy.model.SecureConversationToken)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.policy.interceptors.IssuedTokenInterceptorProvider$IssuedTokenOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationTokenInterceptorProvider:java.lang.String setupClient(org.apache.cxf.ws.security.trust.STSClient,org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.ws.security.policy.model.SecureConversationToken,boolean)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:java.lang.String checkAsymetricBinding(org.apache.cxf.ws.policy.AssertionInfoMap,java.lang.String,org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:java.lang.String checkSymetricBinding(org.apache.cxf.ws.policy.AssertionInfoMap,java.lang.String,org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.wsdl.AbstractWSDLPlugin:java.lang.String getOption(java.util.Map,java.lang.String)",
            "org.apache.cxf.tools.common.toolspec.parser.ErrorVisitor:java.lang.String toString()",
            "org.apache.cxf.tools.util.URIParserUtil:java.lang.String combine(java.util.List,char)",
            "org.apache.cxf.aegis.xml.jdom.JDOMWriter:void writeValue(java.lang.Object)",
            "org.apache.cxf.aegis.xml.jdom.JDOMWriter:void writeValue(java.lang.Object,java.lang.String,java.lang.String)",
            "org.apache.cxf.aegis.xml.jdom.AttributeWriter:void writeValue(java.lang.Object)",
            "org.apache.cxf.aegis.xml.stax.AttributeWriter:void writeValue(java.lang.Object)",
            "org.apache.cxf.aegis.xml.stax.ElementWriter:void writeValue(java.lang.Object)",
            "org.apache.cxf.aegis.type.basic.BigIntegerType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.BigDecimalType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.jaxws.EndpointImpl:void checkProperties()",
            "org.apache.cxf.xmlbeans.tools.XMLBeansToolingDataBinding:void initialize(org.apache.cxf.tools.common.ToolContext)"
        ]
    },
    "org.apache.cxf.bus.CXFBusImpl:void initializeFeatures()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.CXFBusImpl:void initialize()",
            "org.apache.cxf.bus.CXFBusImpl:void setFeatures(java.util.Collection)"
        ]
    },
    "org.apache.cxf.attachment.LazyDataSource:void load()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.LazyDataSource:java.lang.String getContentType()",
            "org.apache.cxf.attachment.LazyDataSource:java.io.InputStream getInputStream()",
            "org.apache.cxf.attachment.LazyDataSource:java.lang.String getName()",
            "org.apache.cxf.attachment.LazyDataSource:java.io.OutputStream getOutputStream()"
        ]
    },
    "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:boolean containsKey(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.HttpHeaderHelper:java.lang.String getHeaderKey(java.lang.String)",
            "org.apache.cxf.common.xmlschema.FixedExtensionDeserializer:void deserialize(org.apache.ws.commons.schema.XmlSchemaObject,javax.xml.namespace.QName,org.w3c.dom.Node)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.common.util.CacheMap:void updateMainDataMap()",
            "org.apache.cxf.common.util.CacheMap:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.common.util.TwoStageMap:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.common.util.TwoStageMap:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.jaxb.JAXBDataBinding$1:javax.xml.transform.Result createOutput(java.lang.String,java.lang.String)",
            "org.apache.cxf.management.jmx.export.runtime.ModelMBeanInfoSupporter:boolean checkAttribute(java.lang.String)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:boolean isRecognizedQuery(java.lang.String,java.lang.String,org.apache.cxf.service.model.EndpointInfo,boolean)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void writeResponse(java.lang.String,java.lang.String,org.apache.cxf.service.model.EndpointInfo,java.io.OutputStream)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updateDoc(org.w3c.dom.Document,java.lang.String,java.util.Map,java.util.Map)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updateSchemaImports(javax.wsdl.extensions.schema.Schema,java.util.Map,java.lang.String)",
            "org.apache.cxf.transport.http.HTTPConduit:void transferProtocolHeadersToURLConnection(org.apache.cxf.message.Message,java.net.URLConnection)",
            "org.apache.cxf.transport.http.HTTPConduit:void setHeadersByClientPolicy(org.apache.cxf.message.Message,java.util.Map)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void copyRequestHeaders(org.apache.cxf.message.Message,java.util.Map)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void copyResponseHeaders(org.apache.cxf.message.Message,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:java.io.OutputStream flushHeaders(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.servlet.ServletContextResourceResolver:java.io.InputStream getAsStream(java.lang.String)",
            "org.apache.cxf.transport.servlet.ServletContextResourceResolver:java.lang.Object resolve(java.lang.String,java.lang.Class)",
            "org.apache.cxf.endpoint.ClientImpl:java.util.Map getRequestContext()",
            "org.apache.cxf.endpoint.ClientImpl:java.util.Map getResponseContext()",
            "org.apache.cxf.endpoint.ClientImpl:boolean isThreadLocalRequestContext()",
            "org.apache.cxf.wsdl.AbstractWSDLPlugin:boolean optionSet(java.util.Map,java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils$SchemaLSResourceResolver:org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.service.model.AbstractMessageContainer:void addMessagePart(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:boolean hasProperty(java.lang.String)",
            "org.apache.cxf.service.model.InterfaceInfo:org.apache.cxf.service.model.OperationInfo addOperation(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.BindingInfo:void addOperation(org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.service.model.OperationInfo:org.apache.cxf.service.model.FaultInfo addFault(javax.xml.namespace.QName,javax.xml.namespace.QName)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createWrappedMessageSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.AbstractMessageContainer,org.apache.cxf.service.model.AbstractMessageContainer,org.apache.ws.commons.schema.XmlSchema,javax.xml.namespace.QName)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.SchemaInfo getOrCreateSchema(org.apache.cxf.service.model.ServiceInfo,java.lang.String,boolean)",
            "org.apache.cxf.binding.soap.interceptor.SoapPreProtocolOutInterceptor:void setSoapAction(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.clustering.FailoverTargetSelector:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.tools.common.Tag:boolean equals(java.lang.Object)",
            "org.apache.cxf.tools.common.ToolContext:boolean containsKey(java.lang.String)",
            "org.apache.cxf.tools.common.ToolContext:boolean hasNamespace(java.lang.String)",
            "org.apache.cxf.tools.common.ToolContext:boolean hasExcludeNamespace(java.lang.String)",
            "org.apache.cxf.tools.common.ProcessorTestBase:boolean assertXmlEquals(java.io.File,java.io.File,java.util.List)",
            "org.apache.cxf.tools.common.model.JavaType:java.lang.String getDefaultTypeValue()",
            "org.apache.cxf.tools.util.ClassCollector:boolean containSeiClass(java.lang.String,java.lang.String)",
            "org.apache.cxf.tools.util.ClassCollector:boolean containTypesClass(java.lang.String,java.lang.String)",
            "org.apache.cxf.tools.util.ClassCollector:boolean containExceptionClass(java.lang.String,java.lang.String)",
            "org.apache.cxf.wsdl11.SchemaUtil:void addSchema(java.lang.String,javax.wsdl.extensions.schema.Schema)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(java.net.URL)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(org.w3c.dom.Element)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadAndRegister(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.aegis.type.DefaultTypeMapping:boolean isRegistered(java.lang.Class)",
            "org.apache.cxf.aegis.type.DefaultTypeMapping:boolean isRegistered(javax.xml.namespace.QName)",
            "org.apache.cxf.aegis.type.DefaultTypeMapping:void removeType(org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.jaxws.ServiceImpl:java.lang.Object getPort(javax.xml.namespace.QName,java.lang.Class,javax.xml.ws.WebServiceFeature[])",
            "org.apache.cxf.jaxws.EndpointImpl:void checkProperties()",
            "org.apache.cxf.jaxws.interceptors.SwAOutInterceptor:boolean callSWARefMethod(javax.xml.bind.JAXBContext)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:boolean isRequestor()",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:javax.xml.ws.handler.MessageContext$Scope getScope(java.lang.String)",
            "org.apache.cxf.jaxws.AbstractJAXWSMethodInvoker:void updateWebServiceContext(org.apache.cxf.message.Exchange,javax.xml.ws.handler.MessageContext)",
            "org.apache.cxf.xmlbeans.XmlBeansSchemaInitializer:org.apache.ws.commons.schema.XmlSchema getSchema(org.apache.xmlbeans.SchemaTypeSystem,java.lang.String)"
        ]
    },
    "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:boolean containsValue(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.WeakIdentityHashMap:boolean containsValue(java.lang.Object)",
            "org.apache.cxf.common.util.CacheMap:boolean containsValue(java.lang.Object)",
            "org.apache.cxf.common.util.TwoStageMap:boolean containsValue(java.lang.Object)",
            "org.apache.cxf.wsdl11.SchemaUtil:void addSchema(java.lang.String,javax.wsdl.extensions.schema.Schema)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:java.lang.String getNewPrefix()",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:boolean containsValue(java.lang.Object)"
        ]
    },
    "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:javax.activation.DataHandler get(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:java.lang.Object get(java.lang.Object)"
        ]
    },
    "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:javax.activation.DataHandler remove(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:java.lang.Object remove(java.lang.Object)"
        ]
    },
    "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:void putAll(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.MapNamespaceContext:void addNamespaces(java.util.Map)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:void putAll(java.util.Map)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void <init>(org.apache.cxf.Bus,java.util.Map,java.util.Map)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] processResult(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,java.util.Map)",
            "org.apache.cxf.endpoint.ClientImpl$EchoContext:void putAll(java.util.Map)",
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.RelatesToType convert(org.apache.cxf.ws.addressing.v200408.Relationship)",
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.RelatesToType convert(org.apache.cxf.ws.addressing.v200403.Relationship)",
            "org.apache.cxf.ws.addressing.VersionTransformer:void putAll(java.util.Map,java.util.Map)",
            "org.apache.cxf.ws.security.trust.STSClient:void setProperties(java.util.Map)",
            "org.apache.cxf.ws.security.trust.STSClient:org.apache.cxf.ws.security.tokenstore.SecurityToken requestSecurityToken(java.lang.String,java.lang.String,java.lang.String,org.apache.cxf.ws.security.tokenstore.SecurityToken)",
            "org.apache.cxf.ws.security.trust.STSClient:boolean validateSecurityToken(org.apache.cxf.ws.security.tokenstore.SecurityToken,java.lang.String)",
            "org.apache.cxf.ws.security.trust.STSClient:void cancelSecurityToken(org.apache.cxf.ws.security.tokenstore.SecurityToken)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void doEndorse()",
            "org.apache.cxf.tools.common.ToolContext:void loadDefaultNS2Pck(java.io.InputStream)",
            "org.apache.cxf.tools.common.ToolContext:void loadDefaultExcludes(java.io.InputStream)",
            "org.apache.cxf.wsdl11.SchemaUtil:void extractSchema(javax.wsdl.Definition,org.apache.cxf.common.xmlschema.SchemaCollection,java.util.List)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void getSchemas(javax.wsdl.Definition,org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.jaxws.JaxWsProxyFactoryBean:org.apache.cxf.frontend.ClientProxy clientClientProxy(org.apache.cxf.endpoint.Client)",
            "org.apache.cxf.jaxws.EndpointImpl:org.apache.cxf.endpoint.ServerImpl getServer(java.lang.String)"
        ]
    },
    "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$1$1:boolean hasNext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.MapNamespaceContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.helpers.WSDLHelper:javax.wsdl.BindingOperation getBindingOperation(javax.wsdl.Definition,java.lang.String)",
            "org.apache.cxf.helpers.WSDLHelper:javax.wsdl.BindingOperation getBindingOperation(javax.wsdl.Binding,java.lang.String)",
            "org.apache.cxf.helpers.WSDLHelper:java.util.List getPortTypes(javax.wsdl.Definition)",
            "org.apache.cxf.helpers.WSDLHelper:java.util.List getInMessageParts(javax.wsdl.Operation)",
            "org.apache.cxf.helpers.WSDLHelper:java.util.List getOutMessageParts(javax.wsdl.Operation)",
            "org.apache.cxf.helpers.WSDLHelper:javax.wsdl.Binding getBinding(javax.wsdl.BindingOperation,javax.wsdl.Definition)",
            "org.apache.cxf.helpers.XMLUtils:org.w3c.dom.Element fetchElementByNameAttribute(org.w3c.dom.Element,java.lang.String,java.lang.String)",
            "org.apache.cxf.common.util.SortedArraySet:boolean addAll(java.util.Collection)",
            "org.apache.cxf.common.util.SortedArraySet:boolean containsAll(java.util.Collection)",
            "org.apache.cxf.common.util.SortedArraySet:boolean removeAll(java.util.Collection)",
            "org.apache.cxf.common.util.SortedArraySet:boolean retainAll(java.util.Collection)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.util.Set entrySet()",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.util.Set keySet()",
            "org.apache.cxf.common.util.ReflectionInvokationHandler$WrapperIterator:boolean hasNext()",
            "org.apache.cxf.common.util.StringUtils:java.util.List getParts(java.lang.String,java.lang.String)",
            "org.apache.cxf.common.util.StringUtils:java.lang.String getFirstNotEmpty(java.lang.String,java.lang.String)",
            "org.apache.cxf.common.util.StringUtils:java.lang.String getFirstNotEmpty(java.util.List)",
            "org.apache.cxf.common.util.ReflectionUtil:java.util.List getPackagesFromJar(java.io.File)",
            "org.apache.cxf.common.util.CacheMap:void updateMainDataMap()",
            "org.apache.cxf.common.util.CacheMap:void putAll(java.util.Map)",
            "org.apache.cxf.common.util.AbstractTwoStageCache:boolean recycle(java.lang.Object)",
            "org.apache.cxf.common.util.CollectionUtils:java.util.Collection diff(java.util.Collection,java.util.Collection)",
            "org.apache.cxf.common.util.CollectionUtils:boolean isEmpty(java.util.Collection)",
            "org.apache.cxf.common.util.TwoStageMap:void putAll(java.util.Map)",
            "org.apache.cxf.common.injection.ResourceInjector:void invokePostConstruct()",
            "org.apache.cxf.common.injection.ResourceInjector:void invokePreDestroy()",
            "org.apache.cxf.common.annotation.AnnotationProcessor:void processMethods(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)",
            "org.apache.cxf.common.annotation.AnnotationProcessor:void processFields(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)",
            "org.apache.cxf.common.annotation.AnnotationProcessor:void processClass(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)",
            "org.apache.cxf.resource.DefaultResourceManager:java.lang.Object findResource(java.lang.String,java.lang.Class,boolean,java.util.List)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.util.Set entrySet()",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.util.Collection values()",
            "org.apache.cxf.configuration.spring.SpringBeanMap:void processBeans(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.configuration.spring.SpringBeanQNameMap:void processBeans(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void initWildcardDefinitionMap()",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureBean(java.lang.String,java.lang.Object,boolean)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureWithWildCard(java.lang.String,java.lang.Object)",
            "org.apache.cxf.configuration.jsse.spring.TLSParameterJaxBUtils:java.security.KeyStore createTrustStore(java.io.InputStream)",
            "org.apache.cxf.jaxb.JAXBUtils:java.lang.String makeConventionalIdentifier(java.util.List,org.apache.cxf.jaxb.JAXBUtils$IdentifierType)",
            "org.apache.cxf.jaxb.JAXBDataBinding:void initialize(org.apache.cxf.service.Service)",
            "org.apache.cxf.jaxb.JAXBDataBinding:org.apache.cxf.jaxb.JAXBDataBinding$CachedContextAndSchemas createJAXBContextAndSchemas(java.util.Set,java.lang.String)",
            "org.apache.cxf.jaxb.JAXBDataBinding:void scanPackages(java.util.Set)",
            "org.apache.cxf.jaxb.JAXBSchemaInitializer:javax.xml.namespace.QName getTypeName(org.apache.cxf.jaxb.JAXBBeanInfo)",
            "org.apache.cxf.jaxb.JAXBSchemaInitializer:void end(org.apache.cxf.service.model.FaultInfo)",
            "org.apache.cxf.jaxb.JAXBSchemaInitializer:void buildExceptionType(org.apache.cxf.service.model.MessagePartInfo,java.lang.Class)",
            "org.apache.cxf.jaxb.JAXBSchemaInitializer:void addElement(org.apache.ws.commons.schema.XmlSchemaSequence,org.apache.cxf.jaxb.JAXBBeanInfo,javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.jaxb.JAXBSchemaInitializer:boolean isExistSchemaElement(org.apache.ws.commons.schema.XmlSchema,javax.xml.namespace.QName)",
            "org.apache.cxf.jaxb.io.DataWriterImpl:javax.xml.bind.Marshaller createMarshaller(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.jaxb.io.DataReaderImpl:javax.xml.bind.Unmarshaller createUnmarshaller()",
            "org.apache.cxf.management.utils.ManagementConsole:void listAllManagedEndpoint()",
            "org.apache.cxf.management.utils.ManagementConsole:void invokeEndpoint(java.lang.String)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElementEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.message.MessageUtils:boolean isDOMPresent(org.apache.cxf.message.Message)",
            "org.apache.cxf.message.MessageImpl:void copyContent(org.apache.cxf.message.Message,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:org.apache.cxf.service.model.BindingOperationInfo findAnyOp(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.util.Map keepInOrder(java.util.Map,org.apache.cxf.service.model.OperationInfo,java.util.List)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:org.apache.cxf.message.MessageContentsList getParameters(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.util.Map getQueries(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.BareInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.ClientFaultConverter:void processFaultDetail(org.apache.cxf.interceptor.Fault,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:org.apache.cxf.service.model.MessagePartInfo findMessagePart(org.apache.cxf.message.Exchange,java.util.Collection,javax.xml.namespace.QName,boolean,int,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.FaultOutInterceptor:org.apache.cxf.service.model.FaultInfo getFaultForClass(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Class)",
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:void writeParts(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.message.MessageContentsList,java.util.List)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void getPara(org.apache.cxf.staxutils.DepthXMLStreamReader,org.apache.cxf.databinding.DataReader,org.apache.cxf.message.MessageContentsList,java.util.Iterator,org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.ConduitInitiatorManagerImpl:org.apache.cxf.transport.ConduitInitiator getConduitInitiatorForUri(java.lang.String)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updateDoc(org.w3c.dom.Document,java.lang.String,java.util.Map,java.util.Map)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updateDefinition(javax.wsdl.Definition,java.util.Map,java.util.Map,java.lang.String,org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updatePublishedEndpointUrl(java.lang.String,javax.wsdl.Definition,javax.xml.namespace.QName)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void setSoapAddressLocationOn(javax.wsdl.Port,java.lang.String)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updateSchemaImports(javax.wsdl.extensions.schema.Schema,java.util.Map,java.lang.String)",
            "org.apache.cxf.transport.http.Cookie:void handleSetCookie(java.util.Map,java.util.List)",
            "org.apache.cxf.transport.http.AbstractHTTPTransportFactory:void registerWithBindingManager()",
            "org.apache.cxf.transport.http.AbstractHTTPTransportFactory:org.apache.cxf.service.model.EndpointInfo createEndpointInfo(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.BindingInfo,javax.wsdl.Port)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPClientPolicy getClient(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPClientPolicy)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPServerPolicy getServer(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPServerPolicy)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPClientPolicy getClient(org.apache.cxf.ws.policy.PolicyEngine,org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.transport.Conduit)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPServerPolicy getServer(org.apache.cxf.ws.policy.PolicyEngine,org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.transport.Destination)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:void assertClientPolicy(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPClientPolicy)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:void assertServerPolicy(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPServerPolicy)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPClientPolicy getClient(java.util.Collection)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPServerPolicy getServer(java.util.Collection)",
            "org.apache.cxf.transport.http.HTTPConduit:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:void transferProtocolHeadersToURLConnection(org.apache.cxf.message.Message,java.net.URLConnection)",
            "org.apache.cxf.transport.http.HTTPConduit:void logProtocolHeaders(java.util.logging.Level,org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:java.lang.String extractAuthorizationRealm(java.util.Map)",
            "org.apache.cxf.transport.http.HTTPConduit:java.lang.String extractLocation(java.util.Map)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void copyResponseHeaders(org.apache.cxf.message.Message,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponseInternal()",
            "org.apache.cxf.transport.http.gzip.GZIPOutInterceptor:org.apache.cxf.transport.http.gzip.GZIPOutInterceptor$UseGzip gzipPermitted(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.gzip.GZIPInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.AbstractMultiplexDestination:java.lang.String extractStringElementFromAny(javax.xml.namespace.QName,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.transport.DestinationFactoryManagerImpl:org.apache.cxf.transport.DestinationFactory getDestinationFactoryForUri(java.lang.String)",
            "org.apache.cxf.transport.servlet.ServletController:void updateDests(javax.servlet.http.HttpServletRequest)",
            "org.apache.cxf.transport.servlet.ServletController:void invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.servlet.ServletController:org.apache.cxf.transport.servlet.ServletDestination checkRestfulRequest(javax.servlet.http.HttpServletRequest)",
            "org.apache.cxf.transport.servlet.ServletController:void generateServiceList(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.servlet.ServletController:void generateUnformattedServiceList(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.servlet.ServletTransportFactory:void register()",
            "org.apache.cxf.transport.servlet.AbstractCXFServlet:void replaceDestinationFactory()",
            "org.apache.cxf.transport.https.CertificateHostnameVerifier$Certificates:java.lang.String[] getDNSSubjectAlts(java.security.cert.X509Certificate)",
            "org.apache.cxf.transport.https.SSLUtils:java.util.List compileRegexPatterns(java.util.List,boolean,java.util.logging.Logger)",
            "org.apache.cxf.transport.https.SSLUtils:boolean matchesOneOf(java.lang.String,java.util.List)",
            "org.apache.cxf.transport.https.CertificateHostnameVerifier$AbstractVerifier:void check(java.lang.String[],java.lang.String[],java.lang.String[],boolean,boolean)",
            "org.apache.cxf.transport.http_jetty.spring.JettySpringTypesFactory:java.util.Map toThreadingParameters(java.util.List)",
            "org.apache.cxf.transport.http_jetty.spring.JettySpringTypesFactory:java.util.Map toTLSServerParamenters(java.util.List)",
            "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineFactoryBeanDefinitionParser:java.util.List getRequiredElementsList(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,javax.xml.namespace.QName,org.springframework.beans.factory.support.BeanDefinitionBuilder)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void doService(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine:void addServant(java.net.URL,org.apache.cxf.transport.http_jetty.JettyHTTPHandler)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPTransportFactory:void finalizeConfig()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void setEnginesList(java.util.List)",
            "org.apache.cxf.transport.jms.JMSUtils:void addProtocolHeaders(javax.jms.Message,java.util.Map)",
            "org.apache.cxf.feature.AbstractFeature:java.lang.Object getActive(java.util.List,java.lang.Class)",
            "org.apache.cxf.endpoint.ClientLifeCycleManagerImpl:void clientCreated(org.apache.cxf.endpoint.Client)",
            "org.apache.cxf.endpoint.ClientLifeCycleManagerImpl:void clientDestroyed(org.apache.cxf.endpoint.Client)",
            "org.apache.cxf.endpoint.ServerLifeCycleManagerImpl:void startServer(org.apache.cxf.endpoint.Server)",
            "org.apache.cxf.endpoint.ServerLifeCycleManagerImpl:void stopServer(org.apache.cxf.endpoint.Server)",
            "org.apache.cxf.endpoint.EndpointResolverRegistryImpl:org.apache.cxf.ws.addressing.EndpointReferenceType resolve(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.endpoint.EndpointResolverRegistryImpl:org.apache.cxf.ws.addressing.EndpointReferenceType renew(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.endpoint.EndpointResolverRegistryImpl:org.apache.cxf.ws.addressing.EndpointReferenceType mint(javax.xml.namespace.QName)",
            "org.apache.cxf.endpoint.EndpointResolverRegistryImpl:org.apache.cxf.ws.addressing.EndpointReferenceType mint(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.endpoint.ServiceContractResolverRegistryImpl:java.net.URI getContractLocation(javax.xml.namespace.QName)",
            "org.apache.cxf.endpoint.ClientImpl:org.apache.cxf.service.model.EndpointInfo findEndpoint(org.apache.cxf.service.Service,javax.xml.namespace.QName)",
            "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:org.apache.cxf.endpoint.Client createClient(java.lang.String,javax.xml.namespace.QName,java.lang.ClassLoader,javax.xml.namespace.QName,java.util.List)",
            "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:void addBindingFiles(java.util.List,org.apache.cxf.jaxb.JAXBUtils$SchemaCompiler)",
            "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:boolean isValidPackage(org.apache.cxf.jaxb.JAXBUtils$JPackage)",
            "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:void outputDebug(org.apache.cxf.jaxb.JAXBUtils$JCodeModel)",
            "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:void addSchemas(java.lang.String,java.util.Collection,org.apache.cxf.jaxb.JAXBUtils$SchemaCompiler)",
            "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:boolean compileJavaSrc(java.lang.String,java.util.List,java.lang.String)",
            "org.apache.cxf.endpoint.dynamic.TypeClassInitializer:void begin(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.ws.addressing.ContextUtils:java.lang.String getActionFromServiceModel(org.apache.cxf.message.Message,java.lang.Exception)",
            "org.apache.cxf.ws.addressing.MAPAggregator:void assertAssertion(org.apache.cxf.ws.policy.AssertionInfoMap,javax.xml.namespace.QName)",
            "org.apache.cxf.ws.addressing.MAPAggregator:boolean hasUsingAddressing(java.util.List)",
            "org.apache.cxf.ws.addressing.MAPAggregator:java.lang.String getActionFromFaultMessage(org.apache.cxf.service.model.OperationInfo,java.lang.String)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void encodeReferenceParameters(org.apache.cxf.ws.addressing.AddressingProperties,org.w3c.dom.Element,javax.xml.bind.Marshaller)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void addMustUnderstandAttribute(org.w3c.dom.Element,javax.xml.namespace.QName,org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.addressing.AddressingPropertiesImpl)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:org.apache.cxf.ws.addressing.AddressingProperties unmarshalMAPs(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void decodeReferenceParameters(java.util.Set,org.apache.cxf.ws.addressing.AddressingPropertiesImpl,javax.xml.bind.Unmarshaller)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void discardMAPs(java.util.List,org.apache.cxf.ws.addressing.AddressingProperties)",
            "org.apache.cxf.ws.policy.builder.primitive.NestedPrimitiveAssertion:org.apache.neethi.PolicyComponent normalize()",
            "org.apache.cxf.ws.policy.builder.primitive.NestedPrimitiveAssertion:boolean isAsserted(org.apache.cxf.ws.policy.AssertionInfoMap)",
            "org.apache.cxf.ws.policy.builder.primitive.NestedPrimitiveAssertion:boolean isPolicyAsserted(org.apache.neethi.PolicyOperator,org.apache.cxf.ws.policy.AssertionInfoMap)",
            "org.apache.cxf.ws.policy.builder.primitive.PrimitiveAssertion:boolean isAsserted(org.apache.cxf.ws.policy.AssertionInfoMap)",
            "org.apache.cxf.ws.policy.util.PolicyComparator:boolean compare(java.util.List,java.util.List)",
            "org.apache.cxf.ws.policy.AssertionInfoMap:void <init>(java.util.Collection)",
            "org.apache.cxf.ws.policy.AssertionInfoMap:void putAssertionInfo(org.apache.cxf.ws.policy.PolicyAssertion)",
            "org.apache.cxf.ws.policy.AssertionInfoMap:boolean supportsAlternative(org.apache.cxf.ws.policy.PolicyAssertion,java.util.List)",
            "org.apache.cxf.ws.policy.AssertionInfoMap:boolean supportsAlternative(java.util.Collection,java.util.List)",
            "org.apache.cxf.ws.policy.AssertionInfoMap:void checkEffectivePolicy(org.apache.neethi.Policy)",
            "org.apache.cxf.ws.policy.AssertionInfoMap:void check()",
            "org.apache.cxf.ws.policy.AssertionInfoMap:void getAssertions(org.apache.neethi.PolicyOperator,java.util.Collection)",
            "org.apache.cxf.ws.policy.Intersector:boolean compatibleAlternatives(java.util.Collection,java.util.Collection)",
            "org.apache.cxf.ws.policy.Intersector:boolean compatiblePolicies(org.apache.neethi.Policy,org.apache.neethi.Policy)",
            "org.apache.cxf.ws.policy.Intersector:org.apache.neethi.Policy intersect(org.apache.neethi.Policy,org.apache.neethi.Policy)",
            "org.apache.cxf.ws.policy.Intersector:org.apache.cxf.ws.policy.PolicyAssertion findCompatibleAssertion(org.apache.cxf.ws.policy.PolicyAssertion,java.util.Collection)",
            "org.apache.cxf.ws.policy.EndpointPolicyImpl:java.util.Collection getSupportedAlternatives()",
            "org.apache.cxf.ws.policy.EndpointPolicyImpl:void initializeVocabulary()",
            "org.apache.cxf.ws.policy.EndpointPolicyImpl:java.util.Collection getSupportedAlternatives(org.apache.neethi.Policy)",
            "org.apache.cxf.ws.policy.EndpointPolicyImpl:void initializeInterceptors(org.apache.cxf.ws.policy.PolicyInterceptorProviderRegistry,java.util.Set,org.apache.cxf.ws.policy.PolicyAssertion,boolean)",
            "org.apache.cxf.ws.policy.EndpointPolicyImpl:void initializeInterceptors()",
            "org.apache.cxf.ws.policy.EndpointPolicyImpl:void checkExactlyOnes()",
            "org.apache.cxf.ws.policy.ServerPolicyOutFaultInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.policy.WSPolicyFeature:org.apache.neethi.Policy initializeEndpointPolicy(org.apache.cxf.endpoint.Endpoint,org.apache.cxf.Bus)",
            "org.apache.cxf.ws.policy.PolicyInInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.policy.PolicyOutInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.policy.PolicyInterceptorProviderRegistryImpl:void register(org.apache.cxf.ws.policy.PolicyInterceptorProvider)",
            "org.apache.cxf.ws.policy.PolicyInterceptorProviderRegistryImpl:java.util.List getInterceptors(java.util.Collection,boolean,boolean)",
            "org.apache.cxf.ws.policy.selector.MinimalAlternativeSelector:java.util.Collection selectAlternative(org.apache.neethi.Policy,org.apache.cxf.ws.policy.PolicyEngine,org.apache.cxf.ws.policy.Assertor)",
            "org.apache.cxf.ws.policy.selector.FirstAlternativeSelector:java.util.Collection selectAlternative(org.apache.neethi.Policy,org.apache.cxf.ws.policy.PolicyEngine,org.apache.cxf.ws.policy.Assertor)",
            "org.apache.cxf.ws.policy.selector.MaximalAlternativeSelector:java.util.Collection selectAlternative(org.apache.neethi.Policy,org.apache.cxf.ws.policy.PolicyEngine,org.apache.cxf.ws.policy.Assertor)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:org.apache.neethi.Policy getAggregatedServicePolicy(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:org.apache.neethi.Policy getAggregatedEndpointPolicy(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:org.apache.neethi.Policy getAggregatedOperationPolicy(org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:org.apache.neethi.Policy getAggregatedMessagePolicy(org.apache.cxf.service.model.BindingMessageInfo)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:org.apache.neethi.Policy getAggregatedFaultPolicy(org.apache.cxf.service.model.BindingFaultInfo)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:java.util.Collection getAssertions(org.apache.cxf.ws.policy.EffectivePolicy,boolean)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:void addAssertions(org.apache.neethi.PolicyComponent,boolean,java.util.Collection)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:java.util.Set getVocabulary(org.apache.neethi.PolicyComponent,boolean)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:boolean supportsAlternative(java.util.Collection,org.apache.cxf.ws.policy.Assertor)",
            "org.apache.cxf.ws.policy.PolicyUtils:boolean contains(java.util.Collection,org.apache.neethi.Assertion)",
            "org.apache.cxf.ws.policy.PolicyUtils:boolean contains(java.util.Collection,java.util.Collection)",
            "org.apache.cxf.ws.policy.PolicyUtils:void printPolicyComponent(org.apache.neethi.PolicyComponent,java.lang.StringBuffer,int)",
            "org.apache.cxf.ws.policy.mtom.MTOMPolicyInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.policy.EffectivePolicyImpl:void initialiseInterceptors(org.apache.cxf.ws.policy.PolicyEngineImpl,boolean)",
            "org.apache.cxf.ws.policy.EffectivePolicyImpl:java.util.Collection getSupportedAlternatives(org.apache.cxf.ws.policy.PolicyEngineImpl,org.apache.neethi.Policy)",
            "org.apache.cxf.ws.policy.EffectivePolicyImpl:void initialiseInterceptors(org.apache.cxf.ws.policy.PolicyInterceptorProviderRegistry,org.apache.cxf.ws.policy.PolicyEngineImpl,java.util.Set,org.apache.cxf.ws.policy.PolicyAssertion,boolean)",
            "org.apache.cxf.ws.policy.attachment.wsdl11.Wsdl11AttachmentPolicyProvider$ExtensibleInfo:java.lang.Object getExtensor(java.lang.Class)",
            "org.apache.cxf.ws.policy.attachment.wsdl11.Wsdl11AttachmentPolicyProvider$ExtensibleInfo:java.util.List getExtensors(java.lang.Class)",
            "org.apache.cxf.ws.policy.attachment.wsdl11.Wsdl11AttachmentPolicyProvider:org.apache.neethi.Policy getElementPolicy(org.apache.cxf.service.model.Extensible,boolean,org.apache.cxf.service.model.DescriptionInfo)",
            "org.apache.cxf.ws.policy.attachment.reference.LocalServiceModelReferenceResolver:org.apache.neethi.Policy resolveReference(java.lang.String)",
            "org.apache.cxf.ws.policy.attachment.reference.RemoteReferenceResolver:org.apache.neethi.Policy resolveReference(java.lang.String)",
            "org.apache.cxf.ws.policy.attachment.external.PolicyAttachment:boolean appliesTo(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.ws.policy.attachment.external.PolicyAttachment:boolean appliesTo(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.ws.policy.attachment.external.PolicyAttachment:boolean appliesTo(org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.ws.policy.attachment.external.PolicyAttachment:boolean appliesTo(org.apache.cxf.service.model.BindingMessageInfo)",
            "org.apache.cxf.ws.policy.attachment.external.PolicyAttachment:boolean appliesTo(org.apache.cxf.service.model.BindingFaultInfo)",
            "org.apache.cxf.ws.policy.attachment.external.ExternalAttachmentProvider:org.apache.neethi.Policy getEffectivePolicy(org.apache.cxf.service.model.BindingFaultInfo)",
            "org.apache.cxf.ws.policy.attachment.external.ExternalAttachmentProvider:org.apache.neethi.Policy getEffectivePolicy(org.apache.cxf.service.model.BindingMessageInfo)",
            "org.apache.cxf.ws.policy.attachment.external.ExternalAttachmentProvider:org.apache.neethi.Policy getEffectivePolicy(org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.ws.policy.attachment.external.ExternalAttachmentProvider:org.apache.neethi.Policy getEffectivePolicy(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.ws.policy.attachment.external.ExternalAttachmentProvider:org.apache.neethi.Policy getEffectivePolicy(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.ws.policy.attachment.external.ExternalAttachmentProvider:void readDocument()",
            "org.apache.cxf.ws.policy.AssertionBuilderRegistryImpl:void register(org.apache.cxf.ws.policy.AssertionBuilder)",
            "org.apache.cxf.ws.policy.ClientPolicyInFaultInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.policy.AbstractPolicyInterceptor:org.apache.cxf.service.model.BindingFaultInfo getBindingFaultInfo(org.apache.cxf.message.Message,java.lang.Exception,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.ws.security.policy.builders.X509TokenBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.builders.X509TokenBuilder:void processAlternative(java.util.List,org.apache.cxf.ws.security.policy.model.X509Token,org.apache.cxf.ws.security.policy.SPConstants)",
            "org.apache.cxf.ws.security.policy.builders.SupportingTokens12Builder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.builders.SupportingTokens12Builder:void processAlternative(java.util.List,org.apache.cxf.ws.security.policy.model.SupportingToken)",
            "org.apache.cxf.ws.security.policy.builders.InitiatorTokenBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.builders.InitiatorTokenBuilder:void processAlternative(java.util.List,org.apache.cxf.ws.security.policy.model.InitiatorToken)",
            "org.apache.cxf.ws.security.policy.builders.AsymmetricBindingBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.builders.AsymmetricBindingBuilder:void processAlternative(java.util.List,org.apache.cxf.ws.security.policy.model.AsymmetricBinding,org.apache.cxf.ws.security.policy.SPConstants)",
            "org.apache.cxf.ws.security.policy.builders.IssuedTokenBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.builders.IssuedTokenBuilder:void processAlternative(java.util.List,org.apache.cxf.ws.security.policy.model.IssuedToken)",
            "org.apache.cxf.ws.security.policy.builders.ProtectionTokenBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.builders.TransportTokenBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.builders.RecipientTokenBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.builders.RecipientTokenBuilder:void processAlternative(java.util.List,org.apache.cxf.ws.security.policy.model.RecipientToken)",
            "org.apache.cxf.ws.security.policy.builders.SupportingTokensBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.builders.SupportingTokensBuilder:void processAlternative(java.util.List,org.apache.cxf.ws.security.policy.model.SupportingToken)",
            "org.apache.cxf.ws.security.policy.builders.SymmetricBindingBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.builders.SymmetricBindingBuilder:void processAlternatives(java.util.List,org.apache.cxf.ws.security.policy.model.SymmetricBinding,org.apache.cxf.ws.security.policy.SPConstants)",
            "org.apache.cxf.ws.security.policy.model.RequiredParts:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.ContentEncryptedElements:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SignedEncryptedElements:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.RequiredElements:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SupportingToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SupportingToken:org.apache.neethi.Policy getPolicy()",
            "org.apache.cxf.ws.security.policy.model.SignedEncryptedParts:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.AbstractSecurityAssertion:boolean isAsserted(org.apache.cxf.ws.policy.AssertionInfoMap)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor$SecureConversationTokenFinderInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.policy.interceptors.HttpsTokenInterceptorProvider$HttpsTokenInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.policy.interceptors.HttpsTokenInterceptorProvider$HttpsTokenInInterceptor:void assertHttps(java.util.Collection,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationOutInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor:void recalcEffectivePolicy(org.apache.cxf.binding.soap.SoapMessage,java.lang.String,org.apache.neethi.Policy)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor:void unmapSecurityProps(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.policy.interceptors.IssuedTokenInterceptorProvider$IssuedTokenOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationTokenInterceptorProvider:void mapSecurityProps(org.apache.cxf.message.Message,java.util.Map)",
            "org.apache.cxf.ws.security.policy.interceptors.HttpsTokenInterceptorProvider$HttpsTokenOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.policy.interceptors.HttpsTokenInterceptorProvider$HttpsTokenOutInterceptor:void assertHttps(java.util.Collection,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.policy.interceptors.IssuedTokenInterceptorProvider$IssuedTokenInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.trust.STSClient:void setPolicy(org.apache.neethi.Policy)",
            "org.apache.cxf.ws.security.trust.STSClient:org.apache.cxf.service.model.BindingOperationInfo findOperation(java.lang.String)",
            "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:org.apache.cxf.ws.security.tokenstore.SecurityToken getToken(java.lang.String)",
            "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:java.util.Collection getTokens(org.apache.cxf.ws.security.tokenstore.SecurityToken$State)",
            "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:void processTokenExpiry()",
            "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:void removeCancelledTokens()",
            "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:void removeExpiredTokens()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.TransportBindingHandler:void addUsernameTokens(org.apache.cxf.ws.security.policy.model.SupportingToken)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.TransportBindingHandler:void handleBinding()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.TransportBindingHandler:byte[] doX509TokenSignature(org.apache.cxf.ws.security.policy.model.Token,org.apache.cxf.ws.security.policy.model.SignedEncryptedParts,org.apache.cxf.ws.security.policy.model.TokenWrapper)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.TransportBindingHandler:byte[] doIssuedTokenSignature(org.apache.cxf.ws.security.policy.model.Token,org.apache.cxf.ws.security.policy.model.SignedEncryptedParts,org.apache.cxf.ws.security.policy.model.TokenWrapper,org.apache.cxf.ws.security.tokenstore.SecurityToken)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AsymmetricBindingHandler:void doSignBeforeEncrypt()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AsymmetricBindingHandler:void doEncryptBeforeSign()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AsymmetricBindingHandler:void assertUnusedTokens(org.apache.cxf.ws.security.policy.model.TokenWrapper)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void policyNotAsserted(org.apache.cxf.ws.policy.PolicyAssertion,java.lang.Exception)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void policyNotAsserted(org.apache.cxf.ws.policy.PolicyAssertion,java.lang.String)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void policyAsserted(org.apache.cxf.ws.policy.PolicyAssertion)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void policyAsserted(javax.xml.namespace.QName)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:java.util.Collection findAndAssertPolicy(javax.xml.namespace.QName)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:org.apache.ws.security.message.WSSecTimestamp createTimestamp()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:org.apache.ws.security.message.WSSecTimestamp handleLayout(org.apache.ws.security.message.WSSecTimestamp)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void assertSupportingTokens(java.util.Collection)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:java.util.Map handleSupportingTokens(java.util.Collection,boolean)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:java.util.Map handleSupportingTokens(org.apache.cxf.ws.security.policy.model.SupportingToken,boolean,java.util.Map)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void addSignatureParts(java.util.Map,java.util.List)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:org.apache.ws.security.message.WSSecUsernameToken addUsernameToken(org.apache.cxf.ws.security.policy.model.UsernameToken)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:java.util.Vector getEncryptedParts()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:java.util.Vector getSignedParts()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:java.util.Vector getPartsAndElements(boolean,boolean,java.util.List,java.util.List,java.util.Map)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:org.apache.cxf.ws.security.policy.model.Wss10 getWss10()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void doEndorsedSignatures(java.util.Map,boolean,boolean)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void handleEncryptedSignedHeaders(java.util.Vector,java.util.Vector)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.SymmetricBindingHandler:void doEncryptBeforeSign()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.SymmetricBindingHandler:void doSignBeforeEncrypt()",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JOutInterceptor$PolicyBasedWSS4JOutInterceptorInternal:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:void handleWSS11(org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:boolean assertPolicy(org.apache.cxf.ws.policy.AssertionInfoMap,javax.xml.namespace.QName)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:void assertPolicy(org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.ws.policy.PolicyAssertion)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:void notAssertPolicy(org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.ws.policy.PolicyAssertion,java.lang.String)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:java.lang.String checkAsymetricBinding(org.apache.cxf.ws.policy.AssertionInfoMap,java.lang.String,org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:java.lang.String checkSymetricBinding(org.apache.cxf.ws.policy.AssertionInfoMap,java.lang.String,org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:void assertTokens(org.apache.cxf.ws.policy.AssertionInfoMap,javax.xml.namespace.QName,java.util.Collection,org.apache.cxf.binding.soap.SoapMessage,javax.xml.soap.SOAPMessage,java.lang.String)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:void doResults(org.apache.cxf.binding.soap.SoapMessage,java.lang.String,javax.xml.soap.SOAPMessage,java.util.Vector)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:boolean assertSymetricBinding(org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.binding.soap.SoapMessage,javax.xml.soap.SOAPMessage,org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor$Protections,boolean)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:boolean assertAsymetricBinding(org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.binding.soap.SoapMessage,javax.xml.soap.SOAPMessage,org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor$Protections,boolean)",
            "org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor:void doResults(org.apache.cxf.binding.soap.SoapMessage,java.lang.String,javax.xml.soap.SOAPMessage,java.util.Vector)",
            "org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor:org.apache.ws.security.WSSecurityEngine createSecurityEngine(java.util.Map)",
            "org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor$TokenStoreCallbackHandler:void handle(javax.security.auth.callback.Callback[])",
            "org.apache.cxf.ws.rm.AbstractRMInterceptor:void assertReliability(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.Servant:void terminateSequence(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.AbstractSequence:boolean isAcknowledged(java.math.BigInteger)",
            "org.apache.cxf.ws.rm.DestinationSequence:void scheduleDeferredAcknowledgement(long)",
            "org.apache.cxf.ws.rm.policy.PolicyUtils:org.apache.cxf.ws.rm.policy.RMAssertion getRMAssertion(org.apache.cxf.ws.rm.policy.RMAssertion,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.Source:java.util.Collection getAllUnacknowledgedSequences()",
            "org.apache.cxf.ws.rm.RMInInterceptor:void processAcknowledgments(org.apache.cxf.ws.rm.Source,org.apache.cxf.ws.rm.RMProperties)",
            "org.apache.cxf.ws.rm.RMOutInterceptor:void addAcknowledgements(org.apache.cxf.ws.rm.Destination,org.apache.cxf.ws.rm.RMProperties,org.apache.cxf.ws.rm.Identifier,org.apache.cxf.ws.addressing.v200408.AttributedURI)",
            "org.apache.cxf.ws.rm.Destination:void ackRequested(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.RMManager:void shutdown()",
            "org.apache.cxf.ws.rm.RMManager:void recoverReliableEndpoint(org.apache.cxf.endpoint.Endpoint,org.apache.cxf.transport.Conduit)",
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl:void resend(org.apache.cxf.transport.Conduit,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.soap.RMSoapInterceptor:void encode(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.rm.RMProperties)",
            "org.apache.cxf.ws.rm.soap.RMSoapInterceptor:org.apache.cxf.ws.rm.RMProperties unmarshalRMProperties(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.rm.soap.RMSoapInterceptor:void discardRMHeaders(java.util.List)",
            "org.apache.cxf.ws.rm.RMEndpoint:void setPolicies()",
            "org.apache.cxf.ws.rm.RMEndpoint:java.lang.Object getUsingAddressing(java.util.List)",
            "org.apache.cxf.ws.rm.RMEndpoint:void shutdown()",
            "org.apache.cxf.ws.rm.persistence.jdbc.RMTxStore:void removeMessages(org.apache.cxf.ws.rm.Identifier,java.util.Collection,boolean)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void <init>(java.util.SortedSet)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void add(java.util.Collection,boolean)",
            "org.apache.cxf.workqueue.WorkQueueManagerImpl:void shutdown(boolean)",
            "org.apache.cxf.workqueue.WorkQueueManagerImpl:void run()",
            "org.apache.cxf.databinding.AbstractDataBinding:void setNamespaceMap(java.util.Map)",
            "org.apache.cxf.databinding.AbstractDataBinding:void checkNamespaceMap(java.util.Map)",
            "org.apache.cxf.databinding.stax.StaxDataBindingFeature:void removeInterceptor(java.util.List,java.lang.String)",
            "org.apache.cxf.wsdl.JAXBExtensionHelper$1:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils$SchemaLSResourceResolver:org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.namespace.QName getServiceName(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:java.lang.String getPortName(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:void setPortName(org.apache.cxf.ws.addressing.EndpointReferenceType,java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.namespace.QName getInterfaceName(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:void setMetadata(org.apache.cxf.ws.addressing.EndpointReferenceType,java.util.List)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.wsdl.Definition getWSDLDefinition(org.apache.cxf.wsdl.WSDLManager,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.validation.Schema createSchema(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.wsdl.Port getPort(org.apache.cxf.wsdl.WSDLManager,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:org.apache.cxf.transport.MultiplexDestination getMatchingMultiplexDestination(javax.xml.namespace.QName,java.lang.String,org.apache.cxf.Bus)",
            "org.apache.cxf.io.CachedOutputStream:void flush()",
            "org.apache.cxf.io.CachedOutputStream:void lockOutputStream()",
            "org.apache.cxf.io.CachedOutputStream:void close()",
            "org.apache.cxf.service.model.BindingOperationInfo:void <init>(org.apache.cxf.service.model.BindingInfo,org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:int getMessagePartIndex(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePartByIndex(int)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePart(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePart(int)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperation(org.apache.cxf.message.Exchange,java.lang.String)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperationForWrapperElement(org.apache.cxf.message.Exchange,javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.SchemaInfo getSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.ServiceModelUtil:java.util.List getOperationInputPartNames(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.EndpointInfo findBestEndpointInfo(javax.xml.namespace.QName,java.util.List)",
            "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.BindingInfo getBinding(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.EndpointInfo getEndpoint(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.ServiceInfo:void initMessagesMap()",
            "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.SchemaInfo getSchema(java.lang.String)",
            "org.apache.cxf.service.model.MessageInfo:java.util.Map getMessagePartsMap()",
            "org.apache.cxf.service.model.MessageInfo:java.util.List getOrderedParts(java.util.List)",
            "org.apache.cxf.service.model.BindingInfo:org.apache.cxf.service.model.BindingOperationInfo buildOperation(javax.xml.namespace.QName,java.lang.String,java.lang.String)",
            "org.apache.cxf.service.model.BindingInfo:org.apache.cxf.service.model.BindingOperationInfo getOperation(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.ServiceImpl:org.apache.cxf.service.model.EndpointInfo getEndpointInfo(javax.xml.namespace.QName)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void fillInSchemaCrossreferences()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createEndpoints()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeServiceConfigurations()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromWSDL(java.lang.String)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromClass()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean hasWrappedMethods(org.apache.cxf.service.model.InterfaceInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void validateServiceModel()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.InterfaceInfo getInterfaceInfo()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeWSDLOperations()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void setFaultClassInfo(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.OperationInfo createOperation(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.InterfaceInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeWrappedSchema(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void checkForElement(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createBareMessage(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.OperationInfo,boolean)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isExistImport(org.apache.ws.commons.schema.XmlSchema,java.lang.String)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.ws.commons.schema.XmlSchemaElement getExistingSchemaElement(org.apache.ws.commons.schema.XmlSchema,javax.xml.namespace.QName)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createWrappedMessageSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.AbstractMessageContainer,org.apache.cxf.service.model.AbstractMessageContainer,org.apache.ws.commons.schema.XmlSchema,javax.xml.namespace.QName)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.SchemaInfo getOrCreateSchema(org.apache.cxf.service.model.ServiceInfo,java.lang.String,boolean)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createInputWrappedMessageParts(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,org.apache.cxf.service.model.MessageInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createOutputWrappedMessageParts(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,org.apache.cxf.service.model.MessageInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getEndpointName(boolean)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getServiceName()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getServiceNamespace()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getInterfaceName()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isValidMethod(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isHolder(java.lang.Class,java.lang.reflect.Type)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.reflect.Type getHolderType(java.lang.Class,java.lang.reflect.Type)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isWrapped(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isOutParam(java.lang.reflect.Method,int)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isInParam(java.lang.reflect.Method,int)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getInputMessageName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName createOutputMessageName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean hasOutMessage(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getFaultName(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.Class,java.lang.Class)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getAction(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isHeader(java.lang.reflect.Method,int)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getOperationName(org.apache.cxf.service.model.InterfaceInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isAsync(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getInPartName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getInParameterName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getOutParameterName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getOutPartName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.Class getResponseWrapper(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getResponseWrapperClassName(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.Class getRequestWrapper(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getRequestWrapperClassName(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isWrapperPartQualified(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isWrapperPartNillable(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:long getWrapperPartMaxOccurs(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:long getWrapperPartMinOccurs(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getWsdlURL()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isWrapped()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getStyle()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isRPC(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.DefaultServiceConfiguration:java.lang.Boolean isOperation(java.lang.reflect.Method)",
            "org.apache.cxf.service.ServiceModelVisitor:void walk()",
            "org.apache.cxf.service.ServiceModelVisitor:void visitOperation(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.binding.AbstractBindingFactory:void registerWithBindingManager()",
            "org.apache.cxf.binding.AbstractBindingFactory:org.apache.cxf.service.model.BindingInfo initializeBindingInfo(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding,org.apache.cxf.service.model.BindingInfo)",
            "org.apache.cxf.binding.AbstractBindingFactory:void copyExtensors(org.apache.cxf.service.model.AbstractPropertiesHolder,javax.wsdl.extensions.ElementExtensible,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:org.apache.cxf.service.model.BindingInfo createBindingInfo(org.apache.cxf.service.model.ServiceInfo,java.lang.String,java.lang.Object)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:void createSoapBinding(org.apache.cxf.binding.soap.model.SoapBindingInfo)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:void setupHeaders(org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.service.model.BindingMessageInfo,org.apache.cxf.service.model.BindingMessageInfo,org.apache.cxf.service.model.MessageInfo,org.apache.cxf.binding.soap.SoapBindingConfiguration)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:org.apache.cxf.binding.Binding createBinding(org.apache.cxf.service.model.BindingInfo)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:void addOutOfBandParts(org.apache.cxf.service.model.BindingOperationInfo,javax.wsdl.Message,org.apache.cxf.common.xmlschema.SchemaCollection,boolean,java.lang.String)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:void buildMessage(org.apache.cxf.service.model.MessageInfo,javax.wsdl.Message,org.apache.cxf.common.xmlschema.SchemaCollection,int,java.lang.String)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:org.apache.cxf.service.model.BindingInfo createBindingInfo(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding,java.lang.String)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:void initializeMessage(org.apache.cxf.binding.soap.model.SoapBindingInfo,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.service.model.BindingMessageInfo)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:java.util.List handleMimePart(javax.wsdl.extensions.mime.MIMEPart,java.util.List,org.apache.cxf.service.model.MessageInfo,org.apache.cxf.service.model.BindingMessageInfo,java.util.List,java.util.List)",
            "org.apache.cxf.binding.soap.interceptor.ReadHeadersInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.Soap12FaultOutInterceptor$Soap12FaultOutInterceptorInternal:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.RPCOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.soap.interceptor.SoapActionInInterceptor:void getAndSetOperation(org.apache.cxf.binding.soap.SoapMessage,java.lang.String)",
            "org.apache.cxf.binding.soap.interceptor.SoapHeaderOutFilterInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.RPCInInterceptor:org.apache.cxf.service.model.BindingOperationInfo getOperation(org.apache.cxf.message.Message,javax.xml.namespace.QName)",
            "org.apache.cxf.binding.soap.interceptor.RPCInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor:void writeSoapEnvelopeStart(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor:boolean handleHeaderPart(boolean,org.apache.cxf.binding.soap.SoapMessage,java.lang.String)",
            "org.apache.cxf.binding.soap.interceptor.MustUnderstandInterceptor:void initServiceSideInfo(java.util.Set,org.apache.cxf.binding.soap.SoapMessage,java.util.Set)",
            "org.apache.cxf.binding.soap.interceptor.MustUnderstandInterceptor:void buildMustUnderstandHeaders(java.util.Set,org.apache.cxf.binding.soap.SoapMessage,java.util.Set,java.util.Set)",
            "org.apache.cxf.binding.soap.interceptor.MustUnderstandInterceptor:void checkUnderstand(java.util.Set,java.util.Set,java.util.Set)",
            "org.apache.cxf.binding.soap.interceptor.Soap11FaultOutInterceptor$Soap11FaultOutInterceptorInternal:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.EndpointSelectionInterceptor:org.apache.cxf.endpoint.Endpoint selectEndpoint(org.apache.cxf.message.Message,java.util.Set)",
            "org.apache.cxf.binding.soap.interceptor.MustUnderstandInterceptor$UltimateReceiverMustUnderstandInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.SoapHeaderInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.soap.HeaderUtil:java.util.Set getHeaderQNames(org.apache.cxf.service.model.BindingMessageInfo)",
            "org.apache.cxf.binding.soap.SoapTransportFactory:org.apache.cxf.service.model.EndpointInfo createEndpointInfo(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.BindingInfo,javax.wsdl.Port)",
            "org.apache.cxf.binding.soap.SoapTransportFactory:void registerWithBindingManager()",
            "org.apache.cxf.binding.soap.SoapMessage:boolean hasHeader(javax.xml.namespace.QName)",
            "org.apache.cxf.binding.soap.SoapMessage:org.apache.cxf.headers.Header getHeader(javax.xml.namespace.QName)",
            "org.apache.cxf.binding.soap.saaj.SAAJInInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.saaj.SAAJOutInterceptor$SAAJOutEndingInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.model.SoapBindingInfo:org.apache.cxf.service.model.OperationInfo getOperationByAction(java.lang.String)",
            "org.apache.cxf.binding.xml.interceptor.XMLMessageInInterceptor:org.apache.cxf.service.model.BindingOperationInfo getBindingOperationInfo(boolean,javax.xml.namespace.QName,org.apache.cxf.service.model.BindingInfo,javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.binding.xml.XMLFormatValidator:boolean checkXMLBindingFormat()",
            "org.apache.cxf.binding.xml.XMLFormatValidator:boolean checkXMLFormat(org.apache.cxf.service.model.BindingInfo)",
            "org.apache.cxf.binding.xml.XMLFormatValidator:boolean findXMLFormatRootNode(java.util.Iterator,org.apache.cxf.service.model.BindingOperationInfo,java.lang.String)",
            "org.apache.cxf.binding.xml.XMLBindingFactory:org.apache.cxf.service.model.BindingInfo createBindingInfo(org.apache.cxf.service.model.ServiceInfo,java.lang.String,java.lang.Object)",
            "org.apache.cxf.clustering.AbstractStaticFailoverStrategy:java.util.List getAlternateEndpoints(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.tools.common.Tag:java.lang.String formatAttribute(org.apache.cxf.tools.common.Tag)",
            "org.apache.cxf.tools.common.Tag:java.lang.String formatTag(org.apache.cxf.tools.common.Tag,int)",
            "org.apache.cxf.tools.common.Tag:boolean equals(java.lang.Object)",
            "org.apache.cxf.tools.common.ClassUtils:void compile(org.apache.cxf.tools.common.ToolContext)",
            "org.apache.cxf.tools.common.ToolContext:void addParameters(java.util.Map)",
            "org.apache.cxf.tools.common.VelocityGenerator:void doWrite(java.lang.String,java.io.Writer)",
            "org.apache.cxf.tools.common.toolspec.ToolSpec:boolean isValidInputStream(java.lang.String)",
            "org.apache.cxf.tools.common.toolspec.ToolSpec:java.util.List getInstreamIds()",
            "org.apache.cxf.tools.common.toolspec.ToolSpec:java.util.List getOutstreamIds()",
            "org.apache.cxf.tools.common.toolspec.ToolSpec:java.lang.String getStreamRefName(java.lang.String)",
            "org.apache.cxf.tools.common.toolspec.parser.CommandDocument:java.lang.String[] getParameters(java.lang.String)",
            "org.apache.cxf.tools.common.toolspec.parser.CommandDocument:java.lang.String[] getParameterNames()",
            "org.apache.cxf.tools.common.toolspec.parser.Form:void <init>(org.w3c.dom.Element)",
            "org.apache.cxf.tools.common.toolspec.parser.Option:boolean accept(org.apache.cxf.tools.common.toolspec.parser.TokenInputStream,org.w3c.dom.Element,org.apache.cxf.tools.common.toolspec.parser.ErrorVisitor)",
            "org.apache.cxf.tools.common.toolspec.parser.OptionGroup:void <init>(org.w3c.dom.Element)",
            "org.apache.cxf.tools.common.toolspec.parser.OptionGroup:boolean accept(org.apache.cxf.tools.common.toolspec.parser.TokenInputStream,org.w3c.dom.Element,org.apache.cxf.tools.common.toolspec.parser.ErrorVisitor)",
            "org.apache.cxf.tools.common.toolspec.parser.OptionGroup:boolean isSatisfied(org.apache.cxf.tools.common.toolspec.parser.ErrorVisitor)",
            "org.apache.cxf.tools.common.toolspec.parser.ErrorVisitor:java.lang.String toString()",
            "org.apache.cxf.tools.common.toolspec.parser.CommandLineParser:org.apache.cxf.tools.common.toolspec.parser.CommandDocument parseArguments(java.lang.String[])",
            "org.apache.cxf.tools.common.ProcessorTestBase:boolean assertXmlEquals(java.io.File,java.io.File,java.util.List)",
            "org.apache.cxf.tools.common.ProcessorTestBase:void assertAttributesEquals(javax.xml.namespace.QName,java.util.Map,java.util.Map,java.util.Collection)",
            "org.apache.cxf.tools.common.ProcessorTestBase:void assertTagEquals(org.apache.cxf.tools.common.Tag,org.apache.cxf.tools.common.Tag,java.util.List,java.util.List)",
            "org.apache.cxf.tools.common.ProcessorTestBase:org.apache.cxf.tools.common.Tag getFromSource(org.apache.cxf.tools.common.Tag,org.apache.cxf.tools.common.Tag)",
            "org.apache.cxf.tools.common.model.JAnnotation:java.util.Set getImports()",
            "org.apache.cxf.tools.common.model.JAnnotation:org.apache.cxf.tools.common.model.JAnnotationElement getElementByName(java.lang.String)",
            "org.apache.cxf.tools.common.model.JavaMethod:java.lang.String getSignature()",
            "org.apache.cxf.tools.common.model.JavaMethod:void addAnnotation(java.lang.String,org.apache.cxf.tools.common.model.JAnnotation)",
            "org.apache.cxf.tools.common.model.JavaMethod:java.util.List getParameterList(boolean)",
            "org.apache.cxf.tools.common.model.JavaInterface:void addAnnotation(org.apache.cxf.tools.common.model.JAnnotation)",
            "org.apache.cxf.tools.common.model.JavaInterface:void addImports(java.util.Collection)",
            "org.apache.cxf.tools.common.model.JavaInterface:java.lang.String toString()",
            "org.apache.cxf.tools.common.model.JavaField:void addAnnotation(org.apache.cxf.tools.common.model.JAnnotation)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:boolean isSOAPBinding(javax.wsdl.Binding)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:java.lang.String getBindingStyle(javax.wsdl.Binding)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapOperation getSoapOperation(java.util.List)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:java.lang.String getSOAPOperationStyle(javax.wsdl.BindingOperation)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapBody getBindingInputSOAPBody(javax.wsdl.BindingOperation)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapBody getBindingOutputSOAPBody(javax.wsdl.BindingOperation)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapBody getSoapBody(java.util.List)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:java.util.List getSoapHeaders(java.util.List)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapHeader getBindingInputSOAPHeader(javax.wsdl.BindingOperation)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapHeader getBindingOutputSOAPHeader(javax.wsdl.BindingOperation)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapBinding getSoapBinding(java.util.List)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:java.util.List getBindingOperationSoapFaults(javax.wsdl.BindingOperation)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:boolean isMixedStyle(javax.wsdl.Binding)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:java.lang.String getCanonicalBindingStyle(javax.wsdl.Binding)",
            "org.apache.cxf.buslifecycle.CXFBusLifeCycleManager:void initComplete()",
            "org.apache.cxf.buslifecycle.CXFBusLifeCycleManager:void preShutdown()",
            "org.apache.cxf.buslifecycle.CXFBusLifeCycleManager:void postShutdown()",
            "org.apache.cxf.wsdl11.SchemaUtil:void getSchemas(javax.wsdl.Definition,org.apache.cxf.common.xmlschema.SchemaCollection,java.util.List)",
            "org.apache.cxf.wsdl11.SchemaUtil:void extractSchema(javax.wsdl.Definition,org.apache.cxf.common.xmlschema.SchemaCollection,java.util.List)",
            "org.apache.cxf.wsdl11.SchemaUtil:void parseImports(javax.wsdl.Definition,java.util.List)",
            "org.apache.cxf.wsdl11.SchemaUtil:void getSchemaList(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.SchemaUtil:void addSchema(java.lang.String,javax.wsdl.extensions.schema.Schema)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void parseWSDL(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:java.util.Collection getImports(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void parseImports(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void registerWSDLExtensibilityPlugins(javax.wsdl.extensions.ExtensionRegistry)",
            "org.apache.cxf.wsdl11.WSDLServiceUtils:org.apache.cxf.binding.BindingFactory getBindingFactory(javax.wsdl.Binding,org.apache.cxf.Bus,java.lang.StringBuffer)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:javax.wsdl.Definition build(java.util.Map)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addExtensibilityElements(javax.wsdl.extensions.ElementExtensible,java.util.List)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addExtensibilityAttributes(javax.wsdl.extensions.AttributeExtensible,java.util.Map)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildTypes(java.util.Collection,java.util.Map,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBinding(java.util.Collection,java.util.Collection)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBindingOperation(javax.wsdl.Definition,javax.wsdl.Binding,java.util.Collection)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBindingFault(javax.wsdl.Definition,javax.wsdl.BindingOperation,java.util.Collection)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildService(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildPortTypeOperation(javax.wsdl.PortType,java.util.Collection,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildMessage(javax.wsdl.Message,org.apache.cxf.service.model.AbstractMessageContainer,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void registerInitialExtensions(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:org.apache.cxf.service.model.ServiceSchemaInfo getSchemasForDefinition(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void putSchemasForDefinition(javax.wsdl.Definition,org.apache.cxf.service.model.ServiceSchemaInfo)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void removeDefinition(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void copyExtensors(org.apache.cxf.service.model.AbstractPropertiesHolder,java.util.List)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildMockServices(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition,javax.wsdl.Service,javax.xml.namespace.QName,org.apache.cxf.service.model.DescriptionInfo)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void parseImports(javax.wsdl.Definition,java.util.List)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.EndpointInfo buildEndpoint(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.BindingInfo,javax.wsdl.Port)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.BindingInfo buildBinding(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildInterface(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.PortType)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildInterfaceOperation(org.apache.cxf.service.model.InterfaceInfo,javax.wsdl.Operation)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildMessage(org.apache.cxf.service.model.AbstractMessageContainer,javax.wsdl.Message)",
            "org.apache.cxf.wsdl11.WSDLServiceFactory:org.apache.cxf.service.Service create()",
            "org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor:void insertConstructorArg(org.springframework.beans.factory.config.ConstructorArgumentValues,java.lang.Object)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void activateViaNS(java.lang.String)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadFragment(java.io.InputStream)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void processExtension(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadAndRegister(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:java.lang.Object getExtension(java.lang.String,java.lang.Class)",
            "org.apache.cxf.bus.extension.Extension:java.lang.String toString()",
            "org.apache.cxf.bus.CXFBusImpl:void initializeFeatures()",
            "org.apache.cxf.attachment.LazyDataSource:void load()",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:boolean containsValue(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:javax.activation.DataHandler get(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:javax.activation.DataHandler remove(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:void putAll(java.util.Map)",
            "org.apache.cxf.attachment.AttachmentDeserializer:void cacheStreamedAttachments()",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$1$1:boolean hasNext()",
            "org.apache.cxf.attachment.AttachmentSerializer:void writeAttachments()",
            "org.apache.cxf.attachment.AttachmentUtil:java.util.Map getDHMap(java.util.Collection)",
            "org.apache.cxf.attachment.AttachmentUtil:boolean isTypeSupported(java.lang.String,java.util.List)",
            "org.apache.cxf.attachment.LazyAttachmentCollection:boolean isEmpty()",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$3$1:boolean hasNext()",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$2$1:boolean hasNext()",
            "org.apache.cxf.frontend.ClientFactoryBean:void applyFeatures()",
            "org.apache.cxf.frontend.SimpleMethodDispatcher:org.apache.cxf.service.model.BindingOperationInfo getBindingOperation(java.lang.reflect.Method,org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory:org.apache.cxf.service.model.BindingInfo createBindingInfo()",
            "org.apache.cxf.frontend.ServerFactoryBean:void initializeServiceFactory()",
            "org.apache.cxf.frontend.ServerFactoryBean:void applyFeatures()",
            "org.apache.cxf.aegis.DatabindingException:java.lang.String getActualMessage()",
            "org.apache.cxf.aegis.util.jdom.StaxSerializer:void writeDocument(org.jdom.Document,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.aegis.util.jdom.StaxSerializer:void writeElement(org.jdom.Element,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.aegis.util.jdom.StaxSerializer:boolean isDeclared(javax.xml.stream.XMLStreamWriter,java.lang.String,java.lang.String)",
            "org.apache.cxf.aegis.util.jdom.StaxBuilder:void buildTree(org.jdom.JDOMFactory,javax.xml.stream.XMLStreamReader,org.jdom.Document)",
            "org.apache.cxf.aegis.util.stax.JDOMStreamReader:void setupNamespaces(org.jdom.Element)",
            "org.apache.cxf.aegis.util.stax.JDOMNamespaceContext:java.lang.String rawGetPrefix(org.jdom.Element,java.lang.String)",
            "org.apache.cxf.aegis.util.stax.JDOMNamespaceContext:void rawGetPrefixes(org.jdom.Element,java.lang.String,java.util.List)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void initialize(org.apache.cxf.service.Service)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void initializeOperation(org.apache.cxf.service.Service,org.apache.cxf.aegis.type.TypeMapping,org.apache.cxf.service.model.OperationInfo,java.util.Set)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void initializeOperationTypes(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void initializeMessage(org.apache.cxf.service.Service,org.apache.cxf.aegis.type.TypeMapping,org.apache.cxf.service.model.AbstractMessageContainer,int,java.util.Set)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void initializeMessageTypes(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.AbstractMessageContainer,int)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void addDependencies(java.util.Set,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void createSchemas(org.apache.cxf.service.Service,java.util.Set)",
            "org.apache.cxf.aegis.AegisContext:void processRootTypes()",
            "org.apache.cxf.aegis.type.basic.XMLBeanTypeInfo:org.w3c.dom.Element getPropertyElement(java.lang.String)",
            "org.apache.cxf.aegis.type.basic.BeanType:void writeObjectInternal(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,boolean)",
            "org.apache.cxf.aegis.type.basic.BeanType:java.util.Set getDependencies()",
            "org.apache.cxf.aegis.type.basic.BeanType:void writeSchema(org.apache.ws.commons.schema.XmlSchema)",
            "org.apache.cxf.aegis.type.basic.BeanTypeInfo:boolean containsPropertyName(java.util.List,java.lang.String)",
            "org.apache.cxf.aegis.type.mtom.AttachmentUtil:org.apache.cxf.message.Attachment getAttachment(java.lang.String,java.util.Collection)",
            "org.apache.cxf.aegis.type.encoded.ArrayTypeInfo:void <init>(javax.xml.namespace.NamespaceContext,java.lang.String,java.lang.String)",
            "org.apache.cxf.aegis.type.encoded.ArrayTypeInfo:java.lang.String toString()",
            "org.apache.cxf.aegis.type.encoded.SoapArrayType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.SoapArrayType:java.lang.Object makeArray(java.util.List,java.util.List,java.lang.Class)",
            "org.apache.cxf.aegis.type.encoded.TrailingBlocks:java.util.List writeBlocks(org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.SoapRefRegistry:void addInstance(java.lang.String,java.lang.Object)",
            "org.apache.cxf.aegis.type.XMLTypeCreator:org.w3c.dom.Element getBestMatch(org.w3c.dom.Element,java.lang.reflect.Method,java.util.List)",
            "org.apache.cxf.aegis.type.collection.MapType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.collection.CollectionType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.jaxws.JaxWsProxyFactoryBean:boolean needWrapperClassInterceptor(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.jaxws.JaxWsProxyFactoryBean:void buildHandlerChain(org.apache.cxf.jaxws.JaxWsClientProxy)",
            "org.apache.cxf.jaxws.handler.HandlerResolverImpl:java.util.List createHandlerChain(javax.xml.ws.handler.PortInfo)",
            "org.apache.cxf.jaxws.handler.HandlerChainInvoker:void <init>(java.util.List,boolean)",
            "org.apache.cxf.jaxws.handler.HandlerChainInvoker:boolean invokeHandleFault(java.util.List,javax.xml.ws.handler.MessageContext)",
            "org.apache.cxf.jaxws.handler.HandlerChainInvoker:boolean invokeHandleMessage(java.util.List,javax.xml.ws.handler.MessageContext)",
            "org.apache.cxf.jaxws.handler.HandlerChainBuilder:java.util.List buildHandlerChainFromConfiguration(java.util.List)",
            "org.apache.cxf.jaxws.handler.HandlerChainBuilder:java.util.List sortHandlers(java.util.List)",
            "org.apache.cxf.jaxws.handler.HandlerChainBuilder:void configureHandler(javax.xml.ws.handler.Handler,org.apache.cxf.jaxws.javaee.PortComponentHandlerType)",
            "org.apache.cxf.jaxws.handler.soap.SOAPMessageContextImpl:java.lang.Object[] getHeaders(javax.xml.namespace.QName,javax.xml.bind.JAXBContext,boolean)",
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerInterceptor:java.util.Set getUnderstoodHeaders()",
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerInterceptor:javax.xml.ws.handler.MessageContext createProtocolMessageContext(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerFaultInInterceptor:java.util.Set getUnderstoodHeaders()",
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerFaultOutInterceptor:java.util.Set getUnderstoodHeaders()",
            "org.apache.cxf.jaxws.support.JaxWsEndpointImpl:boolean hasUsingAddressing(java.util.List)",
            "org.apache.cxf.jaxws.support.JaxWsEndpointImpl:boolean addressingRequired(java.util.List)",
            "org.apache.cxf.jaxws.support.JaxWsEndpointImpl:javax.xml.ws.soap.AddressingFeature getAddressingFeature()",
            "org.apache.cxf.jaxws.support.JaxWsEndpointImpl:org.apache.cxf.ws.addressing.WSAddressingFeature getWSAddressingFeature()",
            "org.apache.cxf.jaxws.support.JaxWsEndpointImpl:javax.xml.ws.soap.MTOMFeature getMTOMFeature()",
            "org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean:void initializeWSDLOperationsForProvider()",
            "org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean:org.apache.cxf.service.model.FaultInfo getFaultInfo(org.apache.cxf.service.model.OperationInfo,java.lang.Class)",
            "org.apache.cxf.jaxws.support.JaxWsImplementorInfo:java.lang.String getWsdlLocation()",
            "org.apache.cxf.jaxws.support.JaxWsImplementorInfo:javax.xml.namespace.QName getInterfaceName()",
            "org.apache.cxf.jaxws.support.JaxWsImplementorInfo:java.lang.String getImplementorClassName()",
            "org.apache.cxf.jaxws.WrapperClassGenerator:java.util.Set generate()",
            "org.apache.cxf.jaxws.WrapperClassGenerator:void createWrapperClass(org.apache.cxf.service.model.MessagePartInfo,org.apache.cxf.service.model.MessageInfo,org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,boolean)",
            "org.apache.cxf.jaxws.WrapperClassGenerator:void addJAXBAnnotations(org.objectweb.asm.FieldVisitor,java.util.List)",
            "org.apache.cxf.jaxws.JaxWsClientProxy:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])",
            "org.apache.cxf.jaxws.ServiceImpl:void initializePorts()",
            "org.apache.cxf.jaxws.ServiceImpl:org.apache.cxf.service.factory.AbstractServiceFactoryBean createDispatchService(org.apache.cxf.databinding.DataBinding)",
            "org.apache.cxf.jaxws.ServiceImpl:java.lang.Object getPort(org.apache.cxf.ws.addressing.EndpointReferenceType,java.lang.Class,javax.xml.ws.WebServiceFeature[])",
            "org.apache.cxf.jaxws.ServiceImpl:javax.xml.ws.Dispatch createDispatch(javax.xml.namespace.QName,java.lang.Class,javax.xml.ws.Service$Mode,javax.xml.ws.WebServiceFeature[])",
            "org.apache.cxf.jaxws.ServiceImpl:javax.xml.ws.Dispatch createDispatch(javax.xml.namespace.QName,javax.xml.bind.JAXBContext,javax.xml.ws.Service$Mode,javax.xml.ws.WebServiceFeature[])",
            "org.apache.cxf.jaxws.spi.ProviderImpl:javax.xml.ws.wsaddressing.W3CEndpointReference createW3CEndpointReference(java.lang.String,javax.xml.namespace.QName,javax.xml.namespace.QName,java.util.List,java.lang.String,java.util.List)",
            "org.apache.cxf.jaxws.JaxWsServerFactoryBean:void buildHandlerChain()",
            "org.apache.cxf.jaxws.DispatchImpl:void addInvokeOperation(boolean)",
            "org.apache.cxf.jaxws.interceptors.MessageModeInInterceptor$MultiPartDataSource:void nextCurrent()",
            "org.apache.cxf.jaxws.interceptors.WebFaultOutInterceptor:org.apache.cxf.service.model.MessagePartInfo getFaultMessagePart(javax.xml.namespace.QName,org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.jaxws.interceptors.HolderOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.interceptors.SwAInInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.jaxws.interceptors.WrapperClassOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.interceptors.WrapperClassOutInterceptor:org.apache.cxf.databinding.WrapperHelper createWrapperHelper(org.apache.cxf.databinding.WrapperCapableDatabinding,org.apache.cxf.service.model.MessageInfo,org.apache.cxf.service.model.MessageInfo,java.lang.Class)",
            "org.apache.cxf.jaxws.interceptors.HolderInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.interceptors.WrapperClassInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.interceptors.WrapperClassInInterceptor:org.apache.cxf.databinding.WrapperHelper createWrapperHelper(org.apache.cxf.databinding.WrapperCapableDatabinding,org.apache.cxf.service.model.MessageInfo,org.apache.cxf.service.model.MessageInfo,java.lang.Class)",
            "org.apache.cxf.jaxws.interceptors.SwAOutInterceptor:void processAttachments(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.binding.soap.model.SoapBodyInfo)",
            "org.apache.cxf.jaxws.binding.http.HTTPBindingImpl:void validate()",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:void copyScoped(java.util.Map)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:void clear()",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:java.util.Set keySet()",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:java.util.Set entrySet()",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:void putAll(java.util.Map)",
            "org.apache.cxf.jaxws.AbstractJAXWSMethodInvoker:java.util.Map removeHandlerProperties(org.apache.cxf.jaxws.context.WrappedMessageContext)",
            "org.apache.cxf.jaxws.AbstractJAXWSMethodInvoker:void addHandlerProperties(org.apache.cxf.jaxws.context.WrappedMessageContext,java.util.Map)",
            "org.apache.cxf.jaxws.AbstractJAXWSMethodInvoker:void updateWebServiceContext(org.apache.cxf.message.Exchange,javax.xml.ws.handler.MessageContext)",
            "org.apache.cxf.xmlbeans.XmlBeansDataBinding:void initialize(org.apache.cxf.service.Service)"
        ]
    },
    "org.apache.cxf.attachment.AttachmentSerializer:void writeAttachments()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.AttachmentOutInterceptor$AttachmentOutEndingInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.attachment.AttachmentUtil:java.util.Map getDHMap(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.context.WrappedMessageContext:java.lang.Object createAttachments(org.apache.cxf.message.Message,java.lang.String)"
        ]
    },
    "org.apache.cxf.attachment.AttachmentUtil:boolean isTypeSupported(java.lang.String,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.AttachmentInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.attachment.AttachmentDeserializer:void initializeRootMessage()"
        ]
    },
    "org.apache.cxf.attachment.LazyAttachmentCollection:boolean isEmpty()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.JAXBSchemaInitializer:void begin(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.interceptor.AttachmentOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updatePublishedEndpointUrl(java.lang.String,javax.wsdl.Definition,javax.xml.namespace.QName)",
            "org.apache.cxf.ws.addressing.MAPAggregator:void setupNamespace(org.apache.cxf.ws.addressing.AddressingPropertiesImpl,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.policy.Intersector:boolean compatibleAlternatives(java.util.Collection,java.util.Collection)",
            "org.apache.cxf.ws.policy.ServerPolicyOutFaultInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.policy.PolicyInInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.policy.PolicyOutInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.policy.PolicyUtils:boolean contains(java.util.Collection,java.util.Collection)",
            "org.apache.cxf.ws.policy.attachment.external.ExternalAttachmentProvider:void readDocument()",
            "org.apache.cxf.ws.policy.ClientPolicyInFaultInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor$SecureConversationTokenFinderInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor$SecureConversationCancelInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationOutInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor:org.apache.cxf.ws.security.policy.model.Binding getBinding(org.apache.cxf.ws.policy.AssertionInfoMap)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.policy.interceptors.IssuedTokenInterceptorProvider$IssuedTokenOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.policy.interceptors.IssuedTokenInterceptorProvider$IssuedTokenOutInterceptor:org.apache.cxf.ws.security.policy.model.Trust10 getTrust10(org.apache.cxf.ws.policy.AssertionInfoMap)",
            "org.apache.cxf.ws.security.policy.interceptors.IssuedTokenInterceptorProvider$IssuedTokenOutInterceptor:org.apache.cxf.ws.security.policy.model.Trust13 getTrust13(org.apache.cxf.ws.policy.AssertionInfoMap)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationTokenInterceptorProvider:org.apache.cxf.ws.security.policy.model.Trust10 getTrust10(org.apache.cxf.ws.policy.AssertionInfoMap)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationTokenInterceptorProvider:org.apache.cxf.ws.security.policy.model.Trust13 getTrust13(org.apache.cxf.ws.policy.AssertionInfoMap)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationTokenInterceptorProvider:org.apache.cxf.ws.policy.PolicyAssertion getAddressingPolicy(org.apache.cxf.ws.policy.AssertionInfoMap,boolean)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void policyAsserted(javax.xml.namespace.QName)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:java.util.Collection findAndAssertPolicy(javax.xml.namespace.QName)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:boolean containsPolicy(org.apache.cxf.ws.policy.AssertionInfoMap,javax.xml.namespace.QName)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:boolean assertPolicy(org.apache.cxf.ws.policy.AssertionInfoMap,javax.xml.namespace.QName)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:void assertPolicy(org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.ws.policy.PolicyAssertion)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:void notAssertPolicy(org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.ws.policy.PolicyAssertion,java.lang.String)",
            "org.apache.cxf.service.model.BindingOperationInfo:void <init>(org.apache.cxf.service.model.BindingInfo,org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:boolean isEmpty()",
            "org.apache.cxf.jaxws.interceptors.MessageModeInInterceptor:void doDataSource(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$3$1:boolean hasNext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.MapNamespaceContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.helpers.WSDLHelper:javax.wsdl.BindingOperation getBindingOperation(javax.wsdl.Definition,java.lang.String)",
            "org.apache.cxf.helpers.WSDLHelper:javax.wsdl.BindingOperation getBindingOperation(javax.wsdl.Binding,java.lang.String)",
            "org.apache.cxf.helpers.WSDLHelper:java.util.List getPortTypes(javax.wsdl.Definition)",
            "org.apache.cxf.helpers.WSDLHelper:java.util.List getInMessageParts(javax.wsdl.Operation)",
            "org.apache.cxf.helpers.WSDLHelper:java.util.List getOutMessageParts(javax.wsdl.Operation)",
            "org.apache.cxf.helpers.WSDLHelper:javax.wsdl.Binding getBinding(javax.wsdl.BindingOperation,javax.wsdl.Definition)",
            "org.apache.cxf.helpers.XMLUtils:org.w3c.dom.Element fetchElementByNameAttribute(org.w3c.dom.Element,java.lang.String,java.lang.String)",
            "org.apache.cxf.common.util.SortedArraySet:boolean addAll(java.util.Collection)",
            "org.apache.cxf.common.util.SortedArraySet:boolean containsAll(java.util.Collection)",
            "org.apache.cxf.common.util.SortedArraySet:boolean removeAll(java.util.Collection)",
            "org.apache.cxf.common.util.SortedArraySet:boolean retainAll(java.util.Collection)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.util.Set entrySet()",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.util.Set keySet()",
            "org.apache.cxf.common.util.ReflectionInvokationHandler$WrapperIterator:boolean hasNext()",
            "org.apache.cxf.common.util.StringUtils:java.util.List getParts(java.lang.String,java.lang.String)",
            "org.apache.cxf.common.util.StringUtils:java.lang.String getFirstNotEmpty(java.lang.String,java.lang.String)",
            "org.apache.cxf.common.util.StringUtils:java.lang.String getFirstNotEmpty(java.util.List)",
            "org.apache.cxf.common.util.ReflectionUtil:java.util.List getPackagesFromJar(java.io.File)",
            "org.apache.cxf.common.util.CacheMap:void updateMainDataMap()",
            "org.apache.cxf.common.util.CacheMap:void putAll(java.util.Map)",
            "org.apache.cxf.common.util.AbstractTwoStageCache:boolean recycle(java.lang.Object)",
            "org.apache.cxf.common.util.CollectionUtils:java.util.Collection diff(java.util.Collection,java.util.Collection)",
            "org.apache.cxf.common.util.CollectionUtils:boolean isEmpty(java.util.Collection)",
            "org.apache.cxf.common.util.TwoStageMap:void putAll(java.util.Map)",
            "org.apache.cxf.common.injection.ResourceInjector:void invokePostConstruct()",
            "org.apache.cxf.common.injection.ResourceInjector:void invokePreDestroy()",
            "org.apache.cxf.common.annotation.AnnotationProcessor:void processMethods(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)",
            "org.apache.cxf.common.annotation.AnnotationProcessor:void processFields(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)",
            "org.apache.cxf.common.annotation.AnnotationProcessor:void processClass(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)",
            "org.apache.cxf.resource.DefaultResourceManager:java.lang.Object findResource(java.lang.String,java.lang.Class,boolean,java.util.List)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.util.Set entrySet()",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.util.Collection values()",
            "org.apache.cxf.configuration.spring.SpringBeanMap:void processBeans(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.configuration.spring.SpringBeanQNameMap:void processBeans(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void initWildcardDefinitionMap()",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureBean(java.lang.String,java.lang.Object,boolean)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureWithWildCard(java.lang.String,java.lang.Object)",
            "org.apache.cxf.configuration.jsse.spring.TLSParameterJaxBUtils:java.security.KeyStore createTrustStore(java.io.InputStream)",
            "org.apache.cxf.jaxb.JAXBUtils:java.lang.String makeConventionalIdentifier(java.util.List,org.apache.cxf.jaxb.JAXBUtils$IdentifierType)",
            "org.apache.cxf.jaxb.JAXBDataBinding:void initialize(org.apache.cxf.service.Service)",
            "org.apache.cxf.jaxb.JAXBDataBinding:org.apache.cxf.jaxb.JAXBDataBinding$CachedContextAndSchemas createJAXBContextAndSchemas(java.util.Set,java.lang.String)",
            "org.apache.cxf.jaxb.JAXBDataBinding:void scanPackages(java.util.Set)",
            "org.apache.cxf.jaxb.JAXBSchemaInitializer:javax.xml.namespace.QName getTypeName(org.apache.cxf.jaxb.JAXBBeanInfo)",
            "org.apache.cxf.jaxb.JAXBSchemaInitializer:void end(org.apache.cxf.service.model.FaultInfo)",
            "org.apache.cxf.jaxb.JAXBSchemaInitializer:void buildExceptionType(org.apache.cxf.service.model.MessagePartInfo,java.lang.Class)",
            "org.apache.cxf.jaxb.JAXBSchemaInitializer:void addElement(org.apache.ws.commons.schema.XmlSchemaSequence,org.apache.cxf.jaxb.JAXBBeanInfo,javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.jaxb.JAXBSchemaInitializer:boolean isExistSchemaElement(org.apache.ws.commons.schema.XmlSchema,javax.xml.namespace.QName)",
            "org.apache.cxf.jaxb.io.DataWriterImpl:javax.xml.bind.Marshaller createMarshaller(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.jaxb.io.DataReaderImpl:javax.xml.bind.Unmarshaller createUnmarshaller()",
            "org.apache.cxf.management.utils.ManagementConsole:void listAllManagedEndpoint()",
            "org.apache.cxf.management.utils.ManagementConsole:void invokeEndpoint(java.lang.String)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElementEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.message.MessageUtils:boolean isDOMPresent(org.apache.cxf.message.Message)",
            "org.apache.cxf.message.MessageImpl:void copyContent(org.apache.cxf.message.Message,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:org.apache.cxf.service.model.BindingOperationInfo findAnyOp(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.util.Map keepInOrder(java.util.Map,org.apache.cxf.service.model.OperationInfo,java.util.List)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:org.apache.cxf.message.MessageContentsList getParameters(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.util.Map getQueries(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.BareInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.ClientFaultConverter:void processFaultDetail(org.apache.cxf.interceptor.Fault,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:org.apache.cxf.service.model.MessagePartInfo findMessagePart(org.apache.cxf.message.Exchange,java.util.Collection,javax.xml.namespace.QName,boolean,int,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.FaultOutInterceptor:org.apache.cxf.service.model.FaultInfo getFaultForClass(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Class)",
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:void writeParts(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.message.MessageContentsList,java.util.List)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void getPara(org.apache.cxf.staxutils.DepthXMLStreamReader,org.apache.cxf.databinding.DataReader,org.apache.cxf.message.MessageContentsList,java.util.Iterator,org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.ConduitInitiatorManagerImpl:org.apache.cxf.transport.ConduitInitiator getConduitInitiatorForUri(java.lang.String)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updateDoc(org.w3c.dom.Document,java.lang.String,java.util.Map,java.util.Map)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updateDefinition(javax.wsdl.Definition,java.util.Map,java.util.Map,java.lang.String,org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updatePublishedEndpointUrl(java.lang.String,javax.wsdl.Definition,javax.xml.namespace.QName)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void setSoapAddressLocationOn(javax.wsdl.Port,java.lang.String)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updateSchemaImports(javax.wsdl.extensions.schema.Schema,java.util.Map,java.lang.String)",
            "org.apache.cxf.transport.http.Cookie:void handleSetCookie(java.util.Map,java.util.List)",
            "org.apache.cxf.transport.http.AbstractHTTPTransportFactory:void registerWithBindingManager()",
            "org.apache.cxf.transport.http.AbstractHTTPTransportFactory:org.apache.cxf.service.model.EndpointInfo createEndpointInfo(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.BindingInfo,javax.wsdl.Port)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPClientPolicy getClient(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPClientPolicy)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPServerPolicy getServer(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPServerPolicy)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPClientPolicy getClient(org.apache.cxf.ws.policy.PolicyEngine,org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.transport.Conduit)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPServerPolicy getServer(org.apache.cxf.ws.policy.PolicyEngine,org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.transport.Destination)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:void assertClientPolicy(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPClientPolicy)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:void assertServerPolicy(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPServerPolicy)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPClientPolicy getClient(java.util.Collection)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPServerPolicy getServer(java.util.Collection)",
            "org.apache.cxf.transport.http.HTTPConduit:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:void transferProtocolHeadersToURLConnection(org.apache.cxf.message.Message,java.net.URLConnection)",
            "org.apache.cxf.transport.http.HTTPConduit:void logProtocolHeaders(java.util.logging.Level,org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:java.lang.String extractAuthorizationRealm(java.util.Map)",
            "org.apache.cxf.transport.http.HTTPConduit:java.lang.String extractLocation(java.util.Map)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void copyResponseHeaders(org.apache.cxf.message.Message,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponseInternal()",
            "org.apache.cxf.transport.http.gzip.GZIPOutInterceptor:org.apache.cxf.transport.http.gzip.GZIPOutInterceptor$UseGzip gzipPermitted(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.gzip.GZIPInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.AbstractMultiplexDestination:java.lang.String extractStringElementFromAny(javax.xml.namespace.QName,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.transport.DestinationFactoryManagerImpl:org.apache.cxf.transport.DestinationFactory getDestinationFactoryForUri(java.lang.String)",
            "org.apache.cxf.transport.servlet.ServletController:void updateDests(javax.servlet.http.HttpServletRequest)",
            "org.apache.cxf.transport.servlet.ServletController:void invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.servlet.ServletController:org.apache.cxf.transport.servlet.ServletDestination checkRestfulRequest(javax.servlet.http.HttpServletRequest)",
            "org.apache.cxf.transport.servlet.ServletController:void generateServiceList(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.servlet.ServletController:void generateUnformattedServiceList(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.servlet.ServletTransportFactory:void register()",
            "org.apache.cxf.transport.servlet.AbstractCXFServlet:void replaceDestinationFactory()",
            "org.apache.cxf.transport.https.CertificateHostnameVerifier$Certificates:java.lang.String[] getDNSSubjectAlts(java.security.cert.X509Certificate)",
            "org.apache.cxf.transport.https.SSLUtils:java.util.List compileRegexPatterns(java.util.List,boolean,java.util.logging.Logger)",
            "org.apache.cxf.transport.https.SSLUtils:boolean matchesOneOf(java.lang.String,java.util.List)",
            "org.apache.cxf.transport.https.CertificateHostnameVerifier$AbstractVerifier:void check(java.lang.String[],java.lang.String[],java.lang.String[],boolean,boolean)",
            "org.apache.cxf.transport.http_jetty.spring.JettySpringTypesFactory:java.util.Map toThreadingParameters(java.util.List)",
            "org.apache.cxf.transport.http_jetty.spring.JettySpringTypesFactory:java.util.Map toTLSServerParamenters(java.util.List)",
            "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineFactoryBeanDefinitionParser:java.util.List getRequiredElementsList(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,javax.xml.namespace.QName,org.springframework.beans.factory.support.BeanDefinitionBuilder)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void doService(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine:void addServant(java.net.URL,org.apache.cxf.transport.http_jetty.JettyHTTPHandler)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPTransportFactory:void finalizeConfig()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void setEnginesList(java.util.List)",
            "org.apache.cxf.transport.jms.JMSUtils:void addProtocolHeaders(javax.jms.Message,java.util.Map)",
            "org.apache.cxf.feature.AbstractFeature:java.lang.Object getActive(java.util.List,java.lang.Class)",
            "org.apache.cxf.endpoint.ClientLifeCycleManagerImpl:void clientCreated(org.apache.cxf.endpoint.Client)",
            "org.apache.cxf.endpoint.ClientLifeCycleManagerImpl:void clientDestroyed(org.apache.cxf.endpoint.Client)",
            "org.apache.cxf.endpoint.ServerLifeCycleManagerImpl:void startServer(org.apache.cxf.endpoint.Server)",
            "org.apache.cxf.endpoint.ServerLifeCycleManagerImpl:void stopServer(org.apache.cxf.endpoint.Server)",
            "org.apache.cxf.endpoint.EndpointResolverRegistryImpl:org.apache.cxf.ws.addressing.EndpointReferenceType resolve(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.endpoint.EndpointResolverRegistryImpl:org.apache.cxf.ws.addressing.EndpointReferenceType renew(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.endpoint.EndpointResolverRegistryImpl:org.apache.cxf.ws.addressing.EndpointReferenceType mint(javax.xml.namespace.QName)",
            "org.apache.cxf.endpoint.EndpointResolverRegistryImpl:org.apache.cxf.ws.addressing.EndpointReferenceType mint(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.endpoint.ServiceContractResolverRegistryImpl:java.net.URI getContractLocation(javax.xml.namespace.QName)",
            "org.apache.cxf.endpoint.ClientImpl:org.apache.cxf.service.model.EndpointInfo findEndpoint(org.apache.cxf.service.Service,javax.xml.namespace.QName)",
            "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:org.apache.cxf.endpoint.Client createClient(java.lang.String,javax.xml.namespace.QName,java.lang.ClassLoader,javax.xml.namespace.QName,java.util.List)",
            "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:void addBindingFiles(java.util.List,org.apache.cxf.jaxb.JAXBUtils$SchemaCompiler)",
            "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:boolean isValidPackage(org.apache.cxf.jaxb.JAXBUtils$JPackage)",
            "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:void outputDebug(org.apache.cxf.jaxb.JAXBUtils$JCodeModel)",
            "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:void addSchemas(java.lang.String,java.util.Collection,org.apache.cxf.jaxb.JAXBUtils$SchemaCompiler)",
            "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:boolean compileJavaSrc(java.lang.String,java.util.List,java.lang.String)",
            "org.apache.cxf.endpoint.dynamic.TypeClassInitializer:void begin(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.ws.addressing.ContextUtils:java.lang.String getActionFromServiceModel(org.apache.cxf.message.Message,java.lang.Exception)",
            "org.apache.cxf.ws.addressing.MAPAggregator:void assertAssertion(org.apache.cxf.ws.policy.AssertionInfoMap,javax.xml.namespace.QName)",
            "org.apache.cxf.ws.addressing.MAPAggregator:boolean hasUsingAddressing(java.util.List)",
            "org.apache.cxf.ws.addressing.MAPAggregator:java.lang.String getActionFromFaultMessage(org.apache.cxf.service.model.OperationInfo,java.lang.String)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void encodeReferenceParameters(org.apache.cxf.ws.addressing.AddressingProperties,org.w3c.dom.Element,javax.xml.bind.Marshaller)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void addMustUnderstandAttribute(org.w3c.dom.Element,javax.xml.namespace.QName,org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.addressing.AddressingPropertiesImpl)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:org.apache.cxf.ws.addressing.AddressingProperties unmarshalMAPs(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void decodeReferenceParameters(java.util.Set,org.apache.cxf.ws.addressing.AddressingPropertiesImpl,javax.xml.bind.Unmarshaller)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void discardMAPs(java.util.List,org.apache.cxf.ws.addressing.AddressingProperties)",
            "org.apache.cxf.ws.policy.builder.primitive.NestedPrimitiveAssertion:org.apache.neethi.PolicyComponent normalize()",
            "org.apache.cxf.ws.policy.builder.primitive.NestedPrimitiveAssertion:boolean isAsserted(org.apache.cxf.ws.policy.AssertionInfoMap)",
            "org.apache.cxf.ws.policy.builder.primitive.NestedPrimitiveAssertion:boolean isPolicyAsserted(org.apache.neethi.PolicyOperator,org.apache.cxf.ws.policy.AssertionInfoMap)",
            "org.apache.cxf.ws.policy.builder.primitive.PrimitiveAssertion:boolean isAsserted(org.apache.cxf.ws.policy.AssertionInfoMap)",
            "org.apache.cxf.ws.policy.util.PolicyComparator:boolean compare(java.util.List,java.util.List)",
            "org.apache.cxf.ws.policy.AssertionInfoMap:void <init>(java.util.Collection)",
            "org.apache.cxf.ws.policy.AssertionInfoMap:void putAssertionInfo(org.apache.cxf.ws.policy.PolicyAssertion)",
            "org.apache.cxf.ws.policy.AssertionInfoMap:boolean supportsAlternative(org.apache.cxf.ws.policy.PolicyAssertion,java.util.List)",
            "org.apache.cxf.ws.policy.AssertionInfoMap:boolean supportsAlternative(java.util.Collection,java.util.List)",
            "org.apache.cxf.ws.policy.AssertionInfoMap:void checkEffectivePolicy(org.apache.neethi.Policy)",
            "org.apache.cxf.ws.policy.AssertionInfoMap:void check()",
            "org.apache.cxf.ws.policy.AssertionInfoMap:void getAssertions(org.apache.neethi.PolicyOperator,java.util.Collection)",
            "org.apache.cxf.ws.policy.Intersector:boolean compatibleAlternatives(java.util.Collection,java.util.Collection)",
            "org.apache.cxf.ws.policy.Intersector:boolean compatiblePolicies(org.apache.neethi.Policy,org.apache.neethi.Policy)",
            "org.apache.cxf.ws.policy.Intersector:org.apache.neethi.Policy intersect(org.apache.neethi.Policy,org.apache.neethi.Policy)",
            "org.apache.cxf.ws.policy.Intersector:org.apache.cxf.ws.policy.PolicyAssertion findCompatibleAssertion(org.apache.cxf.ws.policy.PolicyAssertion,java.util.Collection)",
            "org.apache.cxf.ws.policy.EndpointPolicyImpl:java.util.Collection getSupportedAlternatives()",
            "org.apache.cxf.ws.policy.EndpointPolicyImpl:void initializeVocabulary()",
            "org.apache.cxf.ws.policy.EndpointPolicyImpl:java.util.Collection getSupportedAlternatives(org.apache.neethi.Policy)",
            "org.apache.cxf.ws.policy.EndpointPolicyImpl:void initializeInterceptors(org.apache.cxf.ws.policy.PolicyInterceptorProviderRegistry,java.util.Set,org.apache.cxf.ws.policy.PolicyAssertion,boolean)",
            "org.apache.cxf.ws.policy.EndpointPolicyImpl:void initializeInterceptors()",
            "org.apache.cxf.ws.policy.EndpointPolicyImpl:void checkExactlyOnes()",
            "org.apache.cxf.ws.policy.ServerPolicyOutFaultInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.policy.WSPolicyFeature:org.apache.neethi.Policy initializeEndpointPolicy(org.apache.cxf.endpoint.Endpoint,org.apache.cxf.Bus)",
            "org.apache.cxf.ws.policy.PolicyInInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.policy.PolicyOutInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.policy.PolicyInterceptorProviderRegistryImpl:void register(org.apache.cxf.ws.policy.PolicyInterceptorProvider)",
            "org.apache.cxf.ws.policy.PolicyInterceptorProviderRegistryImpl:java.util.List getInterceptors(java.util.Collection,boolean,boolean)",
            "org.apache.cxf.ws.policy.selector.MinimalAlternativeSelector:java.util.Collection selectAlternative(org.apache.neethi.Policy,org.apache.cxf.ws.policy.PolicyEngine,org.apache.cxf.ws.policy.Assertor)",
            "org.apache.cxf.ws.policy.selector.FirstAlternativeSelector:java.util.Collection selectAlternative(org.apache.neethi.Policy,org.apache.cxf.ws.policy.PolicyEngine,org.apache.cxf.ws.policy.Assertor)",
            "org.apache.cxf.ws.policy.selector.MaximalAlternativeSelector:java.util.Collection selectAlternative(org.apache.neethi.Policy,org.apache.cxf.ws.policy.PolicyEngine,org.apache.cxf.ws.policy.Assertor)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:org.apache.neethi.Policy getAggregatedServicePolicy(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:org.apache.neethi.Policy getAggregatedEndpointPolicy(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:org.apache.neethi.Policy getAggregatedOperationPolicy(org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:org.apache.neethi.Policy getAggregatedMessagePolicy(org.apache.cxf.service.model.BindingMessageInfo)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:org.apache.neethi.Policy getAggregatedFaultPolicy(org.apache.cxf.service.model.BindingFaultInfo)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:java.util.Collection getAssertions(org.apache.cxf.ws.policy.EffectivePolicy,boolean)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:void addAssertions(org.apache.neethi.PolicyComponent,boolean,java.util.Collection)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:java.util.Set getVocabulary(org.apache.neethi.PolicyComponent,boolean)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:boolean supportsAlternative(java.util.Collection,org.apache.cxf.ws.policy.Assertor)",
            "org.apache.cxf.ws.policy.PolicyUtils:boolean contains(java.util.Collection,org.apache.neethi.Assertion)",
            "org.apache.cxf.ws.policy.PolicyUtils:boolean contains(java.util.Collection,java.util.Collection)",
            "org.apache.cxf.ws.policy.PolicyUtils:void printPolicyComponent(org.apache.neethi.PolicyComponent,java.lang.StringBuffer,int)",
            "org.apache.cxf.ws.policy.mtom.MTOMPolicyInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.policy.EffectivePolicyImpl:void initialiseInterceptors(org.apache.cxf.ws.policy.PolicyEngineImpl,boolean)",
            "org.apache.cxf.ws.policy.EffectivePolicyImpl:java.util.Collection getSupportedAlternatives(org.apache.cxf.ws.policy.PolicyEngineImpl,org.apache.neethi.Policy)",
            "org.apache.cxf.ws.policy.EffectivePolicyImpl:void initialiseInterceptors(org.apache.cxf.ws.policy.PolicyInterceptorProviderRegistry,org.apache.cxf.ws.policy.PolicyEngineImpl,java.util.Set,org.apache.cxf.ws.policy.PolicyAssertion,boolean)",
            "org.apache.cxf.ws.policy.attachment.wsdl11.Wsdl11AttachmentPolicyProvider$ExtensibleInfo:java.lang.Object getExtensor(java.lang.Class)",
            "org.apache.cxf.ws.policy.attachment.wsdl11.Wsdl11AttachmentPolicyProvider$ExtensibleInfo:java.util.List getExtensors(java.lang.Class)",
            "org.apache.cxf.ws.policy.attachment.wsdl11.Wsdl11AttachmentPolicyProvider:org.apache.neethi.Policy getElementPolicy(org.apache.cxf.service.model.Extensible,boolean,org.apache.cxf.service.model.DescriptionInfo)",
            "org.apache.cxf.ws.policy.attachment.reference.LocalServiceModelReferenceResolver:org.apache.neethi.Policy resolveReference(java.lang.String)",
            "org.apache.cxf.ws.policy.attachment.reference.RemoteReferenceResolver:org.apache.neethi.Policy resolveReference(java.lang.String)",
            "org.apache.cxf.ws.policy.attachment.external.PolicyAttachment:boolean appliesTo(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.ws.policy.attachment.external.PolicyAttachment:boolean appliesTo(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.ws.policy.attachment.external.PolicyAttachment:boolean appliesTo(org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.ws.policy.attachment.external.PolicyAttachment:boolean appliesTo(org.apache.cxf.service.model.BindingMessageInfo)",
            "org.apache.cxf.ws.policy.attachment.external.PolicyAttachment:boolean appliesTo(org.apache.cxf.service.model.BindingFaultInfo)",
            "org.apache.cxf.ws.policy.attachment.external.ExternalAttachmentProvider:org.apache.neethi.Policy getEffectivePolicy(org.apache.cxf.service.model.BindingFaultInfo)",
            "org.apache.cxf.ws.policy.attachment.external.ExternalAttachmentProvider:org.apache.neethi.Policy getEffectivePolicy(org.apache.cxf.service.model.BindingMessageInfo)",
            "org.apache.cxf.ws.policy.attachment.external.ExternalAttachmentProvider:org.apache.neethi.Policy getEffectivePolicy(org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.ws.policy.attachment.external.ExternalAttachmentProvider:org.apache.neethi.Policy getEffectivePolicy(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.ws.policy.attachment.external.ExternalAttachmentProvider:org.apache.neethi.Policy getEffectivePolicy(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.ws.policy.attachment.external.ExternalAttachmentProvider:void readDocument()",
            "org.apache.cxf.ws.policy.AssertionBuilderRegistryImpl:void register(org.apache.cxf.ws.policy.AssertionBuilder)",
            "org.apache.cxf.ws.policy.ClientPolicyInFaultInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.policy.AbstractPolicyInterceptor:org.apache.cxf.service.model.BindingFaultInfo getBindingFaultInfo(org.apache.cxf.message.Message,java.lang.Exception,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.ws.security.policy.builders.X509TokenBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.builders.X509TokenBuilder:void processAlternative(java.util.List,org.apache.cxf.ws.security.policy.model.X509Token,org.apache.cxf.ws.security.policy.SPConstants)",
            "org.apache.cxf.ws.security.policy.builders.SupportingTokens12Builder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.builders.SupportingTokens12Builder:void processAlternative(java.util.List,org.apache.cxf.ws.security.policy.model.SupportingToken)",
            "org.apache.cxf.ws.security.policy.builders.InitiatorTokenBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.builders.InitiatorTokenBuilder:void processAlternative(java.util.List,org.apache.cxf.ws.security.policy.model.InitiatorToken)",
            "org.apache.cxf.ws.security.policy.builders.AsymmetricBindingBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.builders.AsymmetricBindingBuilder:void processAlternative(java.util.List,org.apache.cxf.ws.security.policy.model.AsymmetricBinding,org.apache.cxf.ws.security.policy.SPConstants)",
            "org.apache.cxf.ws.security.policy.builders.IssuedTokenBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.builders.IssuedTokenBuilder:void processAlternative(java.util.List,org.apache.cxf.ws.security.policy.model.IssuedToken)",
            "org.apache.cxf.ws.security.policy.builders.ProtectionTokenBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.builders.TransportTokenBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.builders.RecipientTokenBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.builders.RecipientTokenBuilder:void processAlternative(java.util.List,org.apache.cxf.ws.security.policy.model.RecipientToken)",
            "org.apache.cxf.ws.security.policy.builders.SupportingTokensBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.builders.SupportingTokensBuilder:void processAlternative(java.util.List,org.apache.cxf.ws.security.policy.model.SupportingToken)",
            "org.apache.cxf.ws.security.policy.builders.SymmetricBindingBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.builders.SymmetricBindingBuilder:void processAlternatives(java.util.List,org.apache.cxf.ws.security.policy.model.SymmetricBinding,org.apache.cxf.ws.security.policy.SPConstants)",
            "org.apache.cxf.ws.security.policy.model.RequiredParts:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.ContentEncryptedElements:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SignedEncryptedElements:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.RequiredElements:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SupportingToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SupportingToken:org.apache.neethi.Policy getPolicy()",
            "org.apache.cxf.ws.security.policy.model.SignedEncryptedParts:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.AbstractSecurityAssertion:boolean isAsserted(org.apache.cxf.ws.policy.AssertionInfoMap)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor$SecureConversationTokenFinderInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.policy.interceptors.HttpsTokenInterceptorProvider$HttpsTokenInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.policy.interceptors.HttpsTokenInterceptorProvider$HttpsTokenInInterceptor:void assertHttps(java.util.Collection,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationOutInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor:void recalcEffectivePolicy(org.apache.cxf.binding.soap.SoapMessage,java.lang.String,org.apache.neethi.Policy)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor:void unmapSecurityProps(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.policy.interceptors.IssuedTokenInterceptorProvider$IssuedTokenOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationTokenInterceptorProvider:void mapSecurityProps(org.apache.cxf.message.Message,java.util.Map)",
            "org.apache.cxf.ws.security.policy.interceptors.HttpsTokenInterceptorProvider$HttpsTokenOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.policy.interceptors.HttpsTokenInterceptorProvider$HttpsTokenOutInterceptor:void assertHttps(java.util.Collection,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.policy.interceptors.IssuedTokenInterceptorProvider$IssuedTokenInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.trust.STSClient:void setPolicy(org.apache.neethi.Policy)",
            "org.apache.cxf.ws.security.trust.STSClient:org.apache.cxf.service.model.BindingOperationInfo findOperation(java.lang.String)",
            "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:org.apache.cxf.ws.security.tokenstore.SecurityToken getToken(java.lang.String)",
            "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:java.util.Collection getTokens(org.apache.cxf.ws.security.tokenstore.SecurityToken$State)",
            "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:void processTokenExpiry()",
            "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:void removeCancelledTokens()",
            "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:void removeExpiredTokens()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.TransportBindingHandler:void addUsernameTokens(org.apache.cxf.ws.security.policy.model.SupportingToken)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.TransportBindingHandler:void handleBinding()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.TransportBindingHandler:byte[] doX509TokenSignature(org.apache.cxf.ws.security.policy.model.Token,org.apache.cxf.ws.security.policy.model.SignedEncryptedParts,org.apache.cxf.ws.security.policy.model.TokenWrapper)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.TransportBindingHandler:byte[] doIssuedTokenSignature(org.apache.cxf.ws.security.policy.model.Token,org.apache.cxf.ws.security.policy.model.SignedEncryptedParts,org.apache.cxf.ws.security.policy.model.TokenWrapper,org.apache.cxf.ws.security.tokenstore.SecurityToken)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AsymmetricBindingHandler:void doSignBeforeEncrypt()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AsymmetricBindingHandler:void doEncryptBeforeSign()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AsymmetricBindingHandler:void assertUnusedTokens(org.apache.cxf.ws.security.policy.model.TokenWrapper)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void policyNotAsserted(org.apache.cxf.ws.policy.PolicyAssertion,java.lang.Exception)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void policyNotAsserted(org.apache.cxf.ws.policy.PolicyAssertion,java.lang.String)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void policyAsserted(org.apache.cxf.ws.policy.PolicyAssertion)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void policyAsserted(javax.xml.namespace.QName)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:java.util.Collection findAndAssertPolicy(javax.xml.namespace.QName)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:org.apache.ws.security.message.WSSecTimestamp createTimestamp()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:org.apache.ws.security.message.WSSecTimestamp handleLayout(org.apache.ws.security.message.WSSecTimestamp)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void assertSupportingTokens(java.util.Collection)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:java.util.Map handleSupportingTokens(java.util.Collection,boolean)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:java.util.Map handleSupportingTokens(org.apache.cxf.ws.security.policy.model.SupportingToken,boolean,java.util.Map)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void addSignatureParts(java.util.Map,java.util.List)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:org.apache.ws.security.message.WSSecUsernameToken addUsernameToken(org.apache.cxf.ws.security.policy.model.UsernameToken)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:java.util.Vector getEncryptedParts()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:java.util.Vector getSignedParts()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:java.util.Vector getPartsAndElements(boolean,boolean,java.util.List,java.util.List,java.util.Map)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:org.apache.cxf.ws.security.policy.model.Wss10 getWss10()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void doEndorsedSignatures(java.util.Map,boolean,boolean)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void handleEncryptedSignedHeaders(java.util.Vector,java.util.Vector)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.SymmetricBindingHandler:void doEncryptBeforeSign()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.SymmetricBindingHandler:void doSignBeforeEncrypt()",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JOutInterceptor$PolicyBasedWSS4JOutInterceptorInternal:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:void handleWSS11(org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:boolean assertPolicy(org.apache.cxf.ws.policy.AssertionInfoMap,javax.xml.namespace.QName)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:void assertPolicy(org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.ws.policy.PolicyAssertion)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:void notAssertPolicy(org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.ws.policy.PolicyAssertion,java.lang.String)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:java.lang.String checkAsymetricBinding(org.apache.cxf.ws.policy.AssertionInfoMap,java.lang.String,org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:java.lang.String checkSymetricBinding(org.apache.cxf.ws.policy.AssertionInfoMap,java.lang.String,org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:void assertTokens(org.apache.cxf.ws.policy.AssertionInfoMap,javax.xml.namespace.QName,java.util.Collection,org.apache.cxf.binding.soap.SoapMessage,javax.xml.soap.SOAPMessage,java.lang.String)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:void doResults(org.apache.cxf.binding.soap.SoapMessage,java.lang.String,javax.xml.soap.SOAPMessage,java.util.Vector)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:boolean assertSymetricBinding(org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.binding.soap.SoapMessage,javax.xml.soap.SOAPMessage,org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor$Protections,boolean)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:boolean assertAsymetricBinding(org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.binding.soap.SoapMessage,javax.xml.soap.SOAPMessage,org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor$Protections,boolean)",
            "org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor:void doResults(org.apache.cxf.binding.soap.SoapMessage,java.lang.String,javax.xml.soap.SOAPMessage,java.util.Vector)",
            "org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor:org.apache.ws.security.WSSecurityEngine createSecurityEngine(java.util.Map)",
            "org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor$TokenStoreCallbackHandler:void handle(javax.security.auth.callback.Callback[])",
            "org.apache.cxf.ws.rm.AbstractRMInterceptor:void assertReliability(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.Servant:void terminateSequence(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.AbstractSequence:boolean isAcknowledged(java.math.BigInteger)",
            "org.apache.cxf.ws.rm.DestinationSequence:void scheduleDeferredAcknowledgement(long)",
            "org.apache.cxf.ws.rm.policy.PolicyUtils:org.apache.cxf.ws.rm.policy.RMAssertion getRMAssertion(org.apache.cxf.ws.rm.policy.RMAssertion,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.Source:java.util.Collection getAllUnacknowledgedSequences()",
            "org.apache.cxf.ws.rm.RMInInterceptor:void processAcknowledgments(org.apache.cxf.ws.rm.Source,org.apache.cxf.ws.rm.RMProperties)",
            "org.apache.cxf.ws.rm.RMOutInterceptor:void addAcknowledgements(org.apache.cxf.ws.rm.Destination,org.apache.cxf.ws.rm.RMProperties,org.apache.cxf.ws.rm.Identifier,org.apache.cxf.ws.addressing.v200408.AttributedURI)",
            "org.apache.cxf.ws.rm.Destination:void ackRequested(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.RMManager:void shutdown()",
            "org.apache.cxf.ws.rm.RMManager:void recoverReliableEndpoint(org.apache.cxf.endpoint.Endpoint,org.apache.cxf.transport.Conduit)",
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl:void resend(org.apache.cxf.transport.Conduit,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.soap.RMSoapInterceptor:void encode(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.rm.RMProperties)",
            "org.apache.cxf.ws.rm.soap.RMSoapInterceptor:org.apache.cxf.ws.rm.RMProperties unmarshalRMProperties(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.rm.soap.RMSoapInterceptor:void discardRMHeaders(java.util.List)",
            "org.apache.cxf.ws.rm.RMEndpoint:void setPolicies()",
            "org.apache.cxf.ws.rm.RMEndpoint:java.lang.Object getUsingAddressing(java.util.List)",
            "org.apache.cxf.ws.rm.RMEndpoint:void shutdown()",
            "org.apache.cxf.ws.rm.persistence.jdbc.RMTxStore:void removeMessages(org.apache.cxf.ws.rm.Identifier,java.util.Collection,boolean)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void <init>(java.util.SortedSet)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void add(java.util.Collection,boolean)",
            "org.apache.cxf.workqueue.WorkQueueManagerImpl:void shutdown(boolean)",
            "org.apache.cxf.workqueue.WorkQueueManagerImpl:void run()",
            "org.apache.cxf.databinding.AbstractDataBinding:void setNamespaceMap(java.util.Map)",
            "org.apache.cxf.databinding.AbstractDataBinding:void checkNamespaceMap(java.util.Map)",
            "org.apache.cxf.databinding.stax.StaxDataBindingFeature:void removeInterceptor(java.util.List,java.lang.String)",
            "org.apache.cxf.wsdl.JAXBExtensionHelper$1:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils$SchemaLSResourceResolver:org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.namespace.QName getServiceName(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:java.lang.String getPortName(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:void setPortName(org.apache.cxf.ws.addressing.EndpointReferenceType,java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.namespace.QName getInterfaceName(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:void setMetadata(org.apache.cxf.ws.addressing.EndpointReferenceType,java.util.List)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.wsdl.Definition getWSDLDefinition(org.apache.cxf.wsdl.WSDLManager,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.validation.Schema createSchema(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.wsdl.Port getPort(org.apache.cxf.wsdl.WSDLManager,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:org.apache.cxf.transport.MultiplexDestination getMatchingMultiplexDestination(javax.xml.namespace.QName,java.lang.String,org.apache.cxf.Bus)",
            "org.apache.cxf.io.CachedOutputStream:void flush()",
            "org.apache.cxf.io.CachedOutputStream:void lockOutputStream()",
            "org.apache.cxf.io.CachedOutputStream:void close()",
            "org.apache.cxf.service.model.BindingOperationInfo:void <init>(org.apache.cxf.service.model.BindingInfo,org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:int getMessagePartIndex(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePartByIndex(int)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePart(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePart(int)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperation(org.apache.cxf.message.Exchange,java.lang.String)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperationForWrapperElement(org.apache.cxf.message.Exchange,javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.SchemaInfo getSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.ServiceModelUtil:java.util.List getOperationInputPartNames(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.EndpointInfo findBestEndpointInfo(javax.xml.namespace.QName,java.util.List)",
            "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.BindingInfo getBinding(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.EndpointInfo getEndpoint(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.ServiceInfo:void initMessagesMap()",
            "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.SchemaInfo getSchema(java.lang.String)",
            "org.apache.cxf.service.model.MessageInfo:java.util.Map getMessagePartsMap()",
            "org.apache.cxf.service.model.MessageInfo:java.util.List getOrderedParts(java.util.List)",
            "org.apache.cxf.service.model.BindingInfo:org.apache.cxf.service.model.BindingOperationInfo buildOperation(javax.xml.namespace.QName,java.lang.String,java.lang.String)",
            "org.apache.cxf.service.model.BindingInfo:org.apache.cxf.service.model.BindingOperationInfo getOperation(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.ServiceImpl:org.apache.cxf.service.model.EndpointInfo getEndpointInfo(javax.xml.namespace.QName)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void fillInSchemaCrossreferences()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createEndpoints()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeServiceConfigurations()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromWSDL(java.lang.String)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromClass()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean hasWrappedMethods(org.apache.cxf.service.model.InterfaceInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void validateServiceModel()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.InterfaceInfo getInterfaceInfo()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeWSDLOperations()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void setFaultClassInfo(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.OperationInfo createOperation(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.InterfaceInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeWrappedSchema(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void checkForElement(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createBareMessage(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.OperationInfo,boolean)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isExistImport(org.apache.ws.commons.schema.XmlSchema,java.lang.String)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.ws.commons.schema.XmlSchemaElement getExistingSchemaElement(org.apache.ws.commons.schema.XmlSchema,javax.xml.namespace.QName)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createWrappedMessageSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.AbstractMessageContainer,org.apache.cxf.service.model.AbstractMessageContainer,org.apache.ws.commons.schema.XmlSchema,javax.xml.namespace.QName)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.SchemaInfo getOrCreateSchema(org.apache.cxf.service.model.ServiceInfo,java.lang.String,boolean)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createInputWrappedMessageParts(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,org.apache.cxf.service.model.MessageInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createOutputWrappedMessageParts(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,org.apache.cxf.service.model.MessageInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getEndpointName(boolean)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getServiceName()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getServiceNamespace()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getInterfaceName()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isValidMethod(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isHolder(java.lang.Class,java.lang.reflect.Type)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.reflect.Type getHolderType(java.lang.Class,java.lang.reflect.Type)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isWrapped(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isOutParam(java.lang.reflect.Method,int)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isInParam(java.lang.reflect.Method,int)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getInputMessageName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName createOutputMessageName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean hasOutMessage(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getFaultName(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.Class,java.lang.Class)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getAction(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isHeader(java.lang.reflect.Method,int)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getOperationName(org.apache.cxf.service.model.InterfaceInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isAsync(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getInPartName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getInParameterName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getOutParameterName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getOutPartName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.Class getResponseWrapper(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getResponseWrapperClassName(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.Class getRequestWrapper(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getRequestWrapperClassName(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isWrapperPartQualified(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isWrapperPartNillable(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:long getWrapperPartMaxOccurs(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:long getWrapperPartMinOccurs(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getWsdlURL()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isWrapped()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getStyle()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isRPC(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.DefaultServiceConfiguration:java.lang.Boolean isOperation(java.lang.reflect.Method)",
            "org.apache.cxf.service.ServiceModelVisitor:void walk()",
            "org.apache.cxf.service.ServiceModelVisitor:void visitOperation(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.binding.AbstractBindingFactory:void registerWithBindingManager()",
            "org.apache.cxf.binding.AbstractBindingFactory:org.apache.cxf.service.model.BindingInfo initializeBindingInfo(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding,org.apache.cxf.service.model.BindingInfo)",
            "org.apache.cxf.binding.AbstractBindingFactory:void copyExtensors(org.apache.cxf.service.model.AbstractPropertiesHolder,javax.wsdl.extensions.ElementExtensible,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:org.apache.cxf.service.model.BindingInfo createBindingInfo(org.apache.cxf.service.model.ServiceInfo,java.lang.String,java.lang.Object)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:void createSoapBinding(org.apache.cxf.binding.soap.model.SoapBindingInfo)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:void setupHeaders(org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.service.model.BindingMessageInfo,org.apache.cxf.service.model.BindingMessageInfo,org.apache.cxf.service.model.MessageInfo,org.apache.cxf.binding.soap.SoapBindingConfiguration)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:org.apache.cxf.binding.Binding createBinding(org.apache.cxf.service.model.BindingInfo)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:void addOutOfBandParts(org.apache.cxf.service.model.BindingOperationInfo,javax.wsdl.Message,org.apache.cxf.common.xmlschema.SchemaCollection,boolean,java.lang.String)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:void buildMessage(org.apache.cxf.service.model.MessageInfo,javax.wsdl.Message,org.apache.cxf.common.xmlschema.SchemaCollection,int,java.lang.String)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:org.apache.cxf.service.model.BindingInfo createBindingInfo(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding,java.lang.String)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:void initializeMessage(org.apache.cxf.binding.soap.model.SoapBindingInfo,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.service.model.BindingMessageInfo)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:java.util.List handleMimePart(javax.wsdl.extensions.mime.MIMEPart,java.util.List,org.apache.cxf.service.model.MessageInfo,org.apache.cxf.service.model.BindingMessageInfo,java.util.List,java.util.List)",
            "org.apache.cxf.binding.soap.interceptor.ReadHeadersInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.Soap12FaultOutInterceptor$Soap12FaultOutInterceptorInternal:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.RPCOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.soap.interceptor.SoapActionInInterceptor:void getAndSetOperation(org.apache.cxf.binding.soap.SoapMessage,java.lang.String)",
            "org.apache.cxf.binding.soap.interceptor.SoapHeaderOutFilterInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.RPCInInterceptor:org.apache.cxf.service.model.BindingOperationInfo getOperation(org.apache.cxf.message.Message,javax.xml.namespace.QName)",
            "org.apache.cxf.binding.soap.interceptor.RPCInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor:void writeSoapEnvelopeStart(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor:boolean handleHeaderPart(boolean,org.apache.cxf.binding.soap.SoapMessage,java.lang.String)",
            "org.apache.cxf.binding.soap.interceptor.MustUnderstandInterceptor:void initServiceSideInfo(java.util.Set,org.apache.cxf.binding.soap.SoapMessage,java.util.Set)",
            "org.apache.cxf.binding.soap.interceptor.MustUnderstandInterceptor:void buildMustUnderstandHeaders(java.util.Set,org.apache.cxf.binding.soap.SoapMessage,java.util.Set,java.util.Set)",
            "org.apache.cxf.binding.soap.interceptor.MustUnderstandInterceptor:void checkUnderstand(java.util.Set,java.util.Set,java.util.Set)",
            "org.apache.cxf.binding.soap.interceptor.Soap11FaultOutInterceptor$Soap11FaultOutInterceptorInternal:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.EndpointSelectionInterceptor:org.apache.cxf.endpoint.Endpoint selectEndpoint(org.apache.cxf.message.Message,java.util.Set)",
            "org.apache.cxf.binding.soap.interceptor.MustUnderstandInterceptor$UltimateReceiverMustUnderstandInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.SoapHeaderInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.soap.HeaderUtil:java.util.Set getHeaderQNames(org.apache.cxf.service.model.BindingMessageInfo)",
            "org.apache.cxf.binding.soap.SoapTransportFactory:org.apache.cxf.service.model.EndpointInfo createEndpointInfo(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.BindingInfo,javax.wsdl.Port)",
            "org.apache.cxf.binding.soap.SoapTransportFactory:void registerWithBindingManager()",
            "org.apache.cxf.binding.soap.SoapMessage:boolean hasHeader(javax.xml.namespace.QName)",
            "org.apache.cxf.binding.soap.SoapMessage:org.apache.cxf.headers.Header getHeader(javax.xml.namespace.QName)",
            "org.apache.cxf.binding.soap.saaj.SAAJInInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.saaj.SAAJOutInterceptor$SAAJOutEndingInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.model.SoapBindingInfo:org.apache.cxf.service.model.OperationInfo getOperationByAction(java.lang.String)",
            "org.apache.cxf.binding.xml.interceptor.XMLMessageInInterceptor:org.apache.cxf.service.model.BindingOperationInfo getBindingOperationInfo(boolean,javax.xml.namespace.QName,org.apache.cxf.service.model.BindingInfo,javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.binding.xml.XMLFormatValidator:boolean checkXMLBindingFormat()",
            "org.apache.cxf.binding.xml.XMLFormatValidator:boolean checkXMLFormat(org.apache.cxf.service.model.BindingInfo)",
            "org.apache.cxf.binding.xml.XMLFormatValidator:boolean findXMLFormatRootNode(java.util.Iterator,org.apache.cxf.service.model.BindingOperationInfo,java.lang.String)",
            "org.apache.cxf.binding.xml.XMLBindingFactory:org.apache.cxf.service.model.BindingInfo createBindingInfo(org.apache.cxf.service.model.ServiceInfo,java.lang.String,java.lang.Object)",
            "org.apache.cxf.clustering.AbstractStaticFailoverStrategy:java.util.List getAlternateEndpoints(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.tools.common.Tag:java.lang.String formatAttribute(org.apache.cxf.tools.common.Tag)",
            "org.apache.cxf.tools.common.Tag:java.lang.String formatTag(org.apache.cxf.tools.common.Tag,int)",
            "org.apache.cxf.tools.common.Tag:boolean equals(java.lang.Object)",
            "org.apache.cxf.tools.common.ClassUtils:void compile(org.apache.cxf.tools.common.ToolContext)",
            "org.apache.cxf.tools.common.ToolContext:void addParameters(java.util.Map)",
            "org.apache.cxf.tools.common.VelocityGenerator:void doWrite(java.lang.String,java.io.Writer)",
            "org.apache.cxf.tools.common.toolspec.ToolSpec:boolean isValidInputStream(java.lang.String)",
            "org.apache.cxf.tools.common.toolspec.ToolSpec:java.util.List getInstreamIds()",
            "org.apache.cxf.tools.common.toolspec.ToolSpec:java.util.List getOutstreamIds()",
            "org.apache.cxf.tools.common.toolspec.ToolSpec:java.lang.String getStreamRefName(java.lang.String)",
            "org.apache.cxf.tools.common.toolspec.parser.CommandDocument:java.lang.String[] getParameters(java.lang.String)",
            "org.apache.cxf.tools.common.toolspec.parser.CommandDocument:java.lang.String[] getParameterNames()",
            "org.apache.cxf.tools.common.toolspec.parser.Form:void <init>(org.w3c.dom.Element)",
            "org.apache.cxf.tools.common.toolspec.parser.Option:boolean accept(org.apache.cxf.tools.common.toolspec.parser.TokenInputStream,org.w3c.dom.Element,org.apache.cxf.tools.common.toolspec.parser.ErrorVisitor)",
            "org.apache.cxf.tools.common.toolspec.parser.OptionGroup:void <init>(org.w3c.dom.Element)",
            "org.apache.cxf.tools.common.toolspec.parser.OptionGroup:boolean accept(org.apache.cxf.tools.common.toolspec.parser.TokenInputStream,org.w3c.dom.Element,org.apache.cxf.tools.common.toolspec.parser.ErrorVisitor)",
            "org.apache.cxf.tools.common.toolspec.parser.OptionGroup:boolean isSatisfied(org.apache.cxf.tools.common.toolspec.parser.ErrorVisitor)",
            "org.apache.cxf.tools.common.toolspec.parser.ErrorVisitor:java.lang.String toString()",
            "org.apache.cxf.tools.common.toolspec.parser.CommandLineParser:org.apache.cxf.tools.common.toolspec.parser.CommandDocument parseArguments(java.lang.String[])",
            "org.apache.cxf.tools.common.ProcessorTestBase:boolean assertXmlEquals(java.io.File,java.io.File,java.util.List)",
            "org.apache.cxf.tools.common.ProcessorTestBase:void assertAttributesEquals(javax.xml.namespace.QName,java.util.Map,java.util.Map,java.util.Collection)",
            "org.apache.cxf.tools.common.ProcessorTestBase:void assertTagEquals(org.apache.cxf.tools.common.Tag,org.apache.cxf.tools.common.Tag,java.util.List,java.util.List)",
            "org.apache.cxf.tools.common.ProcessorTestBase:org.apache.cxf.tools.common.Tag getFromSource(org.apache.cxf.tools.common.Tag,org.apache.cxf.tools.common.Tag)",
            "org.apache.cxf.tools.common.model.JAnnotation:java.util.Set getImports()",
            "org.apache.cxf.tools.common.model.JAnnotation:org.apache.cxf.tools.common.model.JAnnotationElement getElementByName(java.lang.String)",
            "org.apache.cxf.tools.common.model.JavaMethod:java.lang.String getSignature()",
            "org.apache.cxf.tools.common.model.JavaMethod:void addAnnotation(java.lang.String,org.apache.cxf.tools.common.model.JAnnotation)",
            "org.apache.cxf.tools.common.model.JavaMethod:java.util.List getParameterList(boolean)",
            "org.apache.cxf.tools.common.model.JavaInterface:void addAnnotation(org.apache.cxf.tools.common.model.JAnnotation)",
            "org.apache.cxf.tools.common.model.JavaInterface:void addImports(java.util.Collection)",
            "org.apache.cxf.tools.common.model.JavaInterface:java.lang.String toString()",
            "org.apache.cxf.tools.common.model.JavaField:void addAnnotation(org.apache.cxf.tools.common.model.JAnnotation)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:boolean isSOAPBinding(javax.wsdl.Binding)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:java.lang.String getBindingStyle(javax.wsdl.Binding)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapOperation getSoapOperation(java.util.List)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:java.lang.String getSOAPOperationStyle(javax.wsdl.BindingOperation)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapBody getBindingInputSOAPBody(javax.wsdl.BindingOperation)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapBody getBindingOutputSOAPBody(javax.wsdl.BindingOperation)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapBody getSoapBody(java.util.List)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:java.util.List getSoapHeaders(java.util.List)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapHeader getBindingInputSOAPHeader(javax.wsdl.BindingOperation)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapHeader getBindingOutputSOAPHeader(javax.wsdl.BindingOperation)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapBinding getSoapBinding(java.util.List)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:java.util.List getBindingOperationSoapFaults(javax.wsdl.BindingOperation)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:boolean isMixedStyle(javax.wsdl.Binding)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:java.lang.String getCanonicalBindingStyle(javax.wsdl.Binding)",
            "org.apache.cxf.buslifecycle.CXFBusLifeCycleManager:void initComplete()",
            "org.apache.cxf.buslifecycle.CXFBusLifeCycleManager:void preShutdown()",
            "org.apache.cxf.buslifecycle.CXFBusLifeCycleManager:void postShutdown()",
            "org.apache.cxf.wsdl11.SchemaUtil:void getSchemas(javax.wsdl.Definition,org.apache.cxf.common.xmlschema.SchemaCollection,java.util.List)",
            "org.apache.cxf.wsdl11.SchemaUtil:void extractSchema(javax.wsdl.Definition,org.apache.cxf.common.xmlschema.SchemaCollection,java.util.List)",
            "org.apache.cxf.wsdl11.SchemaUtil:void parseImports(javax.wsdl.Definition,java.util.List)",
            "org.apache.cxf.wsdl11.SchemaUtil:void getSchemaList(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.SchemaUtil:void addSchema(java.lang.String,javax.wsdl.extensions.schema.Schema)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void parseWSDL(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:java.util.Collection getImports(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void parseImports(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void registerWSDLExtensibilityPlugins(javax.wsdl.extensions.ExtensionRegistry)",
            "org.apache.cxf.wsdl11.WSDLServiceUtils:org.apache.cxf.binding.BindingFactory getBindingFactory(javax.wsdl.Binding,org.apache.cxf.Bus,java.lang.StringBuffer)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:javax.wsdl.Definition build(java.util.Map)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addExtensibilityElements(javax.wsdl.extensions.ElementExtensible,java.util.List)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addExtensibilityAttributes(javax.wsdl.extensions.AttributeExtensible,java.util.Map)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildTypes(java.util.Collection,java.util.Map,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBinding(java.util.Collection,java.util.Collection)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBindingOperation(javax.wsdl.Definition,javax.wsdl.Binding,java.util.Collection)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBindingFault(javax.wsdl.Definition,javax.wsdl.BindingOperation,java.util.Collection)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildService(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildPortTypeOperation(javax.wsdl.PortType,java.util.Collection,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildMessage(javax.wsdl.Message,org.apache.cxf.service.model.AbstractMessageContainer,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void registerInitialExtensions(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:org.apache.cxf.service.model.ServiceSchemaInfo getSchemasForDefinition(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void putSchemasForDefinition(javax.wsdl.Definition,org.apache.cxf.service.model.ServiceSchemaInfo)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void removeDefinition(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void copyExtensors(org.apache.cxf.service.model.AbstractPropertiesHolder,java.util.List)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildMockServices(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition,javax.wsdl.Service,javax.xml.namespace.QName,org.apache.cxf.service.model.DescriptionInfo)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void parseImports(javax.wsdl.Definition,java.util.List)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.EndpointInfo buildEndpoint(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.BindingInfo,javax.wsdl.Port)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.BindingInfo buildBinding(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildInterface(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.PortType)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildInterfaceOperation(org.apache.cxf.service.model.InterfaceInfo,javax.wsdl.Operation)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildMessage(org.apache.cxf.service.model.AbstractMessageContainer,javax.wsdl.Message)",
            "org.apache.cxf.wsdl11.WSDLServiceFactory:org.apache.cxf.service.Service create()",
            "org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor:void insertConstructorArg(org.springframework.beans.factory.config.ConstructorArgumentValues,java.lang.Object)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void activateViaNS(java.lang.String)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadFragment(java.io.InputStream)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void processExtension(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadAndRegister(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:java.lang.Object getExtension(java.lang.String,java.lang.Class)",
            "org.apache.cxf.bus.extension.Extension:java.lang.String toString()",
            "org.apache.cxf.bus.CXFBusImpl:void initializeFeatures()",
            "org.apache.cxf.attachment.LazyDataSource:void load()",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:boolean containsValue(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:javax.activation.DataHandler get(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:javax.activation.DataHandler remove(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:void putAll(java.util.Map)",
            "org.apache.cxf.attachment.AttachmentDeserializer:void cacheStreamedAttachments()",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$1$1:boolean hasNext()",
            "org.apache.cxf.attachment.AttachmentSerializer:void writeAttachments()",
            "org.apache.cxf.attachment.AttachmentUtil:java.util.Map getDHMap(java.util.Collection)",
            "org.apache.cxf.attachment.AttachmentUtil:boolean isTypeSupported(java.lang.String,java.util.List)",
            "org.apache.cxf.attachment.LazyAttachmentCollection:boolean isEmpty()",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$3$1:boolean hasNext()",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$2$1:boolean hasNext()",
            "org.apache.cxf.frontend.ClientFactoryBean:void applyFeatures()",
            "org.apache.cxf.frontend.SimpleMethodDispatcher:org.apache.cxf.service.model.BindingOperationInfo getBindingOperation(java.lang.reflect.Method,org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory:org.apache.cxf.service.model.BindingInfo createBindingInfo()",
            "org.apache.cxf.frontend.ServerFactoryBean:void initializeServiceFactory()",
            "org.apache.cxf.frontend.ServerFactoryBean:void applyFeatures()",
            "org.apache.cxf.aegis.DatabindingException:java.lang.String getActualMessage()",
            "org.apache.cxf.aegis.util.jdom.StaxSerializer:void writeDocument(org.jdom.Document,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.aegis.util.jdom.StaxSerializer:void writeElement(org.jdom.Element,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.aegis.util.jdom.StaxSerializer:boolean isDeclared(javax.xml.stream.XMLStreamWriter,java.lang.String,java.lang.String)",
            "org.apache.cxf.aegis.util.jdom.StaxBuilder:void buildTree(org.jdom.JDOMFactory,javax.xml.stream.XMLStreamReader,org.jdom.Document)",
            "org.apache.cxf.aegis.util.stax.JDOMStreamReader:void setupNamespaces(org.jdom.Element)",
            "org.apache.cxf.aegis.util.stax.JDOMNamespaceContext:java.lang.String rawGetPrefix(org.jdom.Element,java.lang.String)",
            "org.apache.cxf.aegis.util.stax.JDOMNamespaceContext:void rawGetPrefixes(org.jdom.Element,java.lang.String,java.util.List)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void initialize(org.apache.cxf.service.Service)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void initializeOperation(org.apache.cxf.service.Service,org.apache.cxf.aegis.type.TypeMapping,org.apache.cxf.service.model.OperationInfo,java.util.Set)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void initializeOperationTypes(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void initializeMessage(org.apache.cxf.service.Service,org.apache.cxf.aegis.type.TypeMapping,org.apache.cxf.service.model.AbstractMessageContainer,int,java.util.Set)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void initializeMessageTypes(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.AbstractMessageContainer,int)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void addDependencies(java.util.Set,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void createSchemas(org.apache.cxf.service.Service,java.util.Set)",
            "org.apache.cxf.aegis.AegisContext:void processRootTypes()",
            "org.apache.cxf.aegis.type.basic.XMLBeanTypeInfo:org.w3c.dom.Element getPropertyElement(java.lang.String)",
            "org.apache.cxf.aegis.type.basic.BeanType:void writeObjectInternal(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,boolean)",
            "org.apache.cxf.aegis.type.basic.BeanType:java.util.Set getDependencies()",
            "org.apache.cxf.aegis.type.basic.BeanType:void writeSchema(org.apache.ws.commons.schema.XmlSchema)",
            "org.apache.cxf.aegis.type.basic.BeanTypeInfo:boolean containsPropertyName(java.util.List,java.lang.String)",
            "org.apache.cxf.aegis.type.mtom.AttachmentUtil:org.apache.cxf.message.Attachment getAttachment(java.lang.String,java.util.Collection)",
            "org.apache.cxf.aegis.type.encoded.ArrayTypeInfo:void <init>(javax.xml.namespace.NamespaceContext,java.lang.String,java.lang.String)",
            "org.apache.cxf.aegis.type.encoded.ArrayTypeInfo:java.lang.String toString()",
            "org.apache.cxf.aegis.type.encoded.SoapArrayType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.SoapArrayType:java.lang.Object makeArray(java.util.List,java.util.List,java.lang.Class)",
            "org.apache.cxf.aegis.type.encoded.TrailingBlocks:java.util.List writeBlocks(org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.SoapRefRegistry:void addInstance(java.lang.String,java.lang.Object)",
            "org.apache.cxf.aegis.type.XMLTypeCreator:org.w3c.dom.Element getBestMatch(org.w3c.dom.Element,java.lang.reflect.Method,java.util.List)",
            "org.apache.cxf.aegis.type.collection.MapType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.collection.CollectionType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.jaxws.JaxWsProxyFactoryBean:boolean needWrapperClassInterceptor(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.jaxws.JaxWsProxyFactoryBean:void buildHandlerChain(org.apache.cxf.jaxws.JaxWsClientProxy)",
            "org.apache.cxf.jaxws.handler.HandlerResolverImpl:java.util.List createHandlerChain(javax.xml.ws.handler.PortInfo)",
            "org.apache.cxf.jaxws.handler.HandlerChainInvoker:void <init>(java.util.List,boolean)",
            "org.apache.cxf.jaxws.handler.HandlerChainInvoker:boolean invokeHandleFault(java.util.List,javax.xml.ws.handler.MessageContext)",
            "org.apache.cxf.jaxws.handler.HandlerChainInvoker:boolean invokeHandleMessage(java.util.List,javax.xml.ws.handler.MessageContext)",
            "org.apache.cxf.jaxws.handler.HandlerChainBuilder:java.util.List buildHandlerChainFromConfiguration(java.util.List)",
            "org.apache.cxf.jaxws.handler.HandlerChainBuilder:java.util.List sortHandlers(java.util.List)",
            "org.apache.cxf.jaxws.handler.HandlerChainBuilder:void configureHandler(javax.xml.ws.handler.Handler,org.apache.cxf.jaxws.javaee.PortComponentHandlerType)",
            "org.apache.cxf.jaxws.handler.soap.SOAPMessageContextImpl:java.lang.Object[] getHeaders(javax.xml.namespace.QName,javax.xml.bind.JAXBContext,boolean)",
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerInterceptor:java.util.Set getUnderstoodHeaders()",
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerInterceptor:javax.xml.ws.handler.MessageContext createProtocolMessageContext(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerFaultInInterceptor:java.util.Set getUnderstoodHeaders()",
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerFaultOutInterceptor:java.util.Set getUnderstoodHeaders()",
            "org.apache.cxf.jaxws.support.JaxWsEndpointImpl:boolean hasUsingAddressing(java.util.List)",
            "org.apache.cxf.jaxws.support.JaxWsEndpointImpl:boolean addressingRequired(java.util.List)",
            "org.apache.cxf.jaxws.support.JaxWsEndpointImpl:javax.xml.ws.soap.AddressingFeature getAddressingFeature()",
            "org.apache.cxf.jaxws.support.JaxWsEndpointImpl:org.apache.cxf.ws.addressing.WSAddressingFeature getWSAddressingFeature()",
            "org.apache.cxf.jaxws.support.JaxWsEndpointImpl:javax.xml.ws.soap.MTOMFeature getMTOMFeature()",
            "org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean:void initializeWSDLOperationsForProvider()",
            "org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean:org.apache.cxf.service.model.FaultInfo getFaultInfo(org.apache.cxf.service.model.OperationInfo,java.lang.Class)",
            "org.apache.cxf.jaxws.support.JaxWsImplementorInfo:java.lang.String getWsdlLocation()",
            "org.apache.cxf.jaxws.support.JaxWsImplementorInfo:javax.xml.namespace.QName getInterfaceName()",
            "org.apache.cxf.jaxws.support.JaxWsImplementorInfo:java.lang.String getImplementorClassName()",
            "org.apache.cxf.jaxws.WrapperClassGenerator:java.util.Set generate()",
            "org.apache.cxf.jaxws.WrapperClassGenerator:void createWrapperClass(org.apache.cxf.service.model.MessagePartInfo,org.apache.cxf.service.model.MessageInfo,org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,boolean)",
            "org.apache.cxf.jaxws.WrapperClassGenerator:void addJAXBAnnotations(org.objectweb.asm.FieldVisitor,java.util.List)",
            "org.apache.cxf.jaxws.JaxWsClientProxy:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])",
            "org.apache.cxf.jaxws.ServiceImpl:void initializePorts()",
            "org.apache.cxf.jaxws.ServiceImpl:org.apache.cxf.service.factory.AbstractServiceFactoryBean createDispatchService(org.apache.cxf.databinding.DataBinding)",
            "org.apache.cxf.jaxws.ServiceImpl:java.lang.Object getPort(org.apache.cxf.ws.addressing.EndpointReferenceType,java.lang.Class,javax.xml.ws.WebServiceFeature[])",
            "org.apache.cxf.jaxws.ServiceImpl:javax.xml.ws.Dispatch createDispatch(javax.xml.namespace.QName,java.lang.Class,javax.xml.ws.Service$Mode,javax.xml.ws.WebServiceFeature[])",
            "org.apache.cxf.jaxws.ServiceImpl:javax.xml.ws.Dispatch createDispatch(javax.xml.namespace.QName,javax.xml.bind.JAXBContext,javax.xml.ws.Service$Mode,javax.xml.ws.WebServiceFeature[])",
            "org.apache.cxf.jaxws.spi.ProviderImpl:javax.xml.ws.wsaddressing.W3CEndpointReference createW3CEndpointReference(java.lang.String,javax.xml.namespace.QName,javax.xml.namespace.QName,java.util.List,java.lang.String,java.util.List)",
            "org.apache.cxf.jaxws.JaxWsServerFactoryBean:void buildHandlerChain()",
            "org.apache.cxf.jaxws.DispatchImpl:void addInvokeOperation(boolean)",
            "org.apache.cxf.jaxws.interceptors.MessageModeInInterceptor$MultiPartDataSource:void nextCurrent()",
            "org.apache.cxf.jaxws.interceptors.WebFaultOutInterceptor:org.apache.cxf.service.model.MessagePartInfo getFaultMessagePart(javax.xml.namespace.QName,org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.jaxws.interceptors.HolderOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.interceptors.SwAInInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.jaxws.interceptors.WrapperClassOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.interceptors.WrapperClassOutInterceptor:org.apache.cxf.databinding.WrapperHelper createWrapperHelper(org.apache.cxf.databinding.WrapperCapableDatabinding,org.apache.cxf.service.model.MessageInfo,org.apache.cxf.service.model.MessageInfo,java.lang.Class)",
            "org.apache.cxf.jaxws.interceptors.HolderInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.interceptors.WrapperClassInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.interceptors.WrapperClassInInterceptor:org.apache.cxf.databinding.WrapperHelper createWrapperHelper(org.apache.cxf.databinding.WrapperCapableDatabinding,org.apache.cxf.service.model.MessageInfo,org.apache.cxf.service.model.MessageInfo,java.lang.Class)",
            "org.apache.cxf.jaxws.interceptors.SwAOutInterceptor:void processAttachments(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.binding.soap.model.SoapBodyInfo)",
            "org.apache.cxf.jaxws.binding.http.HTTPBindingImpl:void validate()",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:void copyScoped(java.util.Map)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:void clear()",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:java.util.Set keySet()",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:java.util.Set entrySet()",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:void putAll(java.util.Map)",
            "org.apache.cxf.jaxws.AbstractJAXWSMethodInvoker:java.util.Map removeHandlerProperties(org.apache.cxf.jaxws.context.WrappedMessageContext)",
            "org.apache.cxf.jaxws.AbstractJAXWSMethodInvoker:void addHandlerProperties(org.apache.cxf.jaxws.context.WrappedMessageContext,java.util.Map)",
            "org.apache.cxf.jaxws.AbstractJAXWSMethodInvoker:void updateWebServiceContext(org.apache.cxf.message.Exchange,javax.xml.ws.handler.MessageContext)",
            "org.apache.cxf.xmlbeans.XmlBeansDataBinding:void initialize(org.apache.cxf.service.Service)"
        ]
    },
    "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$2$1:boolean hasNext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.MapNamespaceContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.helpers.WSDLHelper:javax.wsdl.BindingOperation getBindingOperation(javax.wsdl.Definition,java.lang.String)",
            "org.apache.cxf.helpers.WSDLHelper:javax.wsdl.BindingOperation getBindingOperation(javax.wsdl.Binding,java.lang.String)",
            "org.apache.cxf.helpers.WSDLHelper:java.util.List getPortTypes(javax.wsdl.Definition)",
            "org.apache.cxf.helpers.WSDLHelper:java.util.List getInMessageParts(javax.wsdl.Operation)",
            "org.apache.cxf.helpers.WSDLHelper:java.util.List getOutMessageParts(javax.wsdl.Operation)",
            "org.apache.cxf.helpers.WSDLHelper:javax.wsdl.Binding getBinding(javax.wsdl.BindingOperation,javax.wsdl.Definition)",
            "org.apache.cxf.helpers.XMLUtils:org.w3c.dom.Element fetchElementByNameAttribute(org.w3c.dom.Element,java.lang.String,java.lang.String)",
            "org.apache.cxf.common.util.SortedArraySet:boolean addAll(java.util.Collection)",
            "org.apache.cxf.common.util.SortedArraySet:boolean containsAll(java.util.Collection)",
            "org.apache.cxf.common.util.SortedArraySet:boolean removeAll(java.util.Collection)",
            "org.apache.cxf.common.util.SortedArraySet:boolean retainAll(java.util.Collection)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.util.Set entrySet()",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.util.Set keySet()",
            "org.apache.cxf.common.util.ReflectionInvokationHandler$WrapperIterator:boolean hasNext()",
            "org.apache.cxf.common.util.StringUtils:java.util.List getParts(java.lang.String,java.lang.String)",
            "org.apache.cxf.common.util.StringUtils:java.lang.String getFirstNotEmpty(java.lang.String,java.lang.String)",
            "org.apache.cxf.common.util.StringUtils:java.lang.String getFirstNotEmpty(java.util.List)",
            "org.apache.cxf.common.util.ReflectionUtil:java.util.List getPackagesFromJar(java.io.File)",
            "org.apache.cxf.common.util.CacheMap:void updateMainDataMap()",
            "org.apache.cxf.common.util.CacheMap:void putAll(java.util.Map)",
            "org.apache.cxf.common.util.AbstractTwoStageCache:boolean recycle(java.lang.Object)",
            "org.apache.cxf.common.util.CollectionUtils:java.util.Collection diff(java.util.Collection,java.util.Collection)",
            "org.apache.cxf.common.util.CollectionUtils:boolean isEmpty(java.util.Collection)",
            "org.apache.cxf.common.util.TwoStageMap:void putAll(java.util.Map)",
            "org.apache.cxf.common.injection.ResourceInjector:void invokePostConstruct()",
            "org.apache.cxf.common.injection.ResourceInjector:void invokePreDestroy()",
            "org.apache.cxf.common.annotation.AnnotationProcessor:void processMethods(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)",
            "org.apache.cxf.common.annotation.AnnotationProcessor:void processFields(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)",
            "org.apache.cxf.common.annotation.AnnotationProcessor:void processClass(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)",
            "org.apache.cxf.resource.DefaultResourceManager:java.lang.Object findResource(java.lang.String,java.lang.Class,boolean,java.util.List)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.util.Set entrySet()",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.util.Collection values()",
            "org.apache.cxf.configuration.spring.SpringBeanMap:void processBeans(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.configuration.spring.SpringBeanQNameMap:void processBeans(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void initWildcardDefinitionMap()",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureBean(java.lang.String,java.lang.Object,boolean)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureWithWildCard(java.lang.String,java.lang.Object)",
            "org.apache.cxf.configuration.jsse.spring.TLSParameterJaxBUtils:java.security.KeyStore createTrustStore(java.io.InputStream)",
            "org.apache.cxf.jaxb.JAXBUtils:java.lang.String makeConventionalIdentifier(java.util.List,org.apache.cxf.jaxb.JAXBUtils$IdentifierType)",
            "org.apache.cxf.jaxb.JAXBDataBinding:void initialize(org.apache.cxf.service.Service)",
            "org.apache.cxf.jaxb.JAXBDataBinding:org.apache.cxf.jaxb.JAXBDataBinding$CachedContextAndSchemas createJAXBContextAndSchemas(java.util.Set,java.lang.String)",
            "org.apache.cxf.jaxb.JAXBDataBinding:void scanPackages(java.util.Set)",
            "org.apache.cxf.jaxb.JAXBSchemaInitializer:javax.xml.namespace.QName getTypeName(org.apache.cxf.jaxb.JAXBBeanInfo)",
            "org.apache.cxf.jaxb.JAXBSchemaInitializer:void end(org.apache.cxf.service.model.FaultInfo)",
            "org.apache.cxf.jaxb.JAXBSchemaInitializer:void buildExceptionType(org.apache.cxf.service.model.MessagePartInfo,java.lang.Class)",
            "org.apache.cxf.jaxb.JAXBSchemaInitializer:void addElement(org.apache.ws.commons.schema.XmlSchemaSequence,org.apache.cxf.jaxb.JAXBBeanInfo,javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.jaxb.JAXBSchemaInitializer:boolean isExistSchemaElement(org.apache.ws.commons.schema.XmlSchema,javax.xml.namespace.QName)",
            "org.apache.cxf.jaxb.io.DataWriterImpl:javax.xml.bind.Marshaller createMarshaller(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.jaxb.io.DataReaderImpl:javax.xml.bind.Unmarshaller createUnmarshaller()",
            "org.apache.cxf.management.utils.ManagementConsole:void listAllManagedEndpoint()",
            "org.apache.cxf.management.utils.ManagementConsole:void invokeEndpoint(java.lang.String)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElementEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.message.MessageUtils:boolean isDOMPresent(org.apache.cxf.message.Message)",
            "org.apache.cxf.message.MessageImpl:void copyContent(org.apache.cxf.message.Message,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:org.apache.cxf.service.model.BindingOperationInfo findAnyOp(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.util.Map keepInOrder(java.util.Map,org.apache.cxf.service.model.OperationInfo,java.util.List)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:org.apache.cxf.message.MessageContentsList getParameters(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.util.Map getQueries(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.BareInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.ClientFaultConverter:void processFaultDetail(org.apache.cxf.interceptor.Fault,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:org.apache.cxf.service.model.MessagePartInfo findMessagePart(org.apache.cxf.message.Exchange,java.util.Collection,javax.xml.namespace.QName,boolean,int,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.FaultOutInterceptor:org.apache.cxf.service.model.FaultInfo getFaultForClass(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Class)",
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:void writeParts(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.message.MessageContentsList,java.util.List)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void getPara(org.apache.cxf.staxutils.DepthXMLStreamReader,org.apache.cxf.databinding.DataReader,org.apache.cxf.message.MessageContentsList,java.util.Iterator,org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.ConduitInitiatorManagerImpl:org.apache.cxf.transport.ConduitInitiator getConduitInitiatorForUri(java.lang.String)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updateDoc(org.w3c.dom.Document,java.lang.String,java.util.Map,java.util.Map)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updateDefinition(javax.wsdl.Definition,java.util.Map,java.util.Map,java.lang.String,org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updatePublishedEndpointUrl(java.lang.String,javax.wsdl.Definition,javax.xml.namespace.QName)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void setSoapAddressLocationOn(javax.wsdl.Port,java.lang.String)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updateSchemaImports(javax.wsdl.extensions.schema.Schema,java.util.Map,java.lang.String)",
            "org.apache.cxf.transport.http.Cookie:void handleSetCookie(java.util.Map,java.util.List)",
            "org.apache.cxf.transport.http.AbstractHTTPTransportFactory:void registerWithBindingManager()",
            "org.apache.cxf.transport.http.AbstractHTTPTransportFactory:org.apache.cxf.service.model.EndpointInfo createEndpointInfo(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.BindingInfo,javax.wsdl.Port)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPClientPolicy getClient(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPClientPolicy)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPServerPolicy getServer(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPServerPolicy)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPClientPolicy getClient(org.apache.cxf.ws.policy.PolicyEngine,org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.transport.Conduit)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPServerPolicy getServer(org.apache.cxf.ws.policy.PolicyEngine,org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.transport.Destination)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:void assertClientPolicy(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPClientPolicy)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:void assertServerPolicy(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPServerPolicy)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPClientPolicy getClient(java.util.Collection)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPServerPolicy getServer(java.util.Collection)",
            "org.apache.cxf.transport.http.HTTPConduit:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:void transferProtocolHeadersToURLConnection(org.apache.cxf.message.Message,java.net.URLConnection)",
            "org.apache.cxf.transport.http.HTTPConduit:void logProtocolHeaders(java.util.logging.Level,org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:java.lang.String extractAuthorizationRealm(java.util.Map)",
            "org.apache.cxf.transport.http.HTTPConduit:java.lang.String extractLocation(java.util.Map)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void copyResponseHeaders(org.apache.cxf.message.Message,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponseInternal()",
            "org.apache.cxf.transport.http.gzip.GZIPOutInterceptor:org.apache.cxf.transport.http.gzip.GZIPOutInterceptor$UseGzip gzipPermitted(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.gzip.GZIPInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.AbstractMultiplexDestination:java.lang.String extractStringElementFromAny(javax.xml.namespace.QName,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.transport.DestinationFactoryManagerImpl:org.apache.cxf.transport.DestinationFactory getDestinationFactoryForUri(java.lang.String)",
            "org.apache.cxf.transport.servlet.ServletController:void updateDests(javax.servlet.http.HttpServletRequest)",
            "org.apache.cxf.transport.servlet.ServletController:void invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.servlet.ServletController:org.apache.cxf.transport.servlet.ServletDestination checkRestfulRequest(javax.servlet.http.HttpServletRequest)",
            "org.apache.cxf.transport.servlet.ServletController:void generateServiceList(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.servlet.ServletController:void generateUnformattedServiceList(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.servlet.ServletTransportFactory:void register()",
            "org.apache.cxf.transport.servlet.AbstractCXFServlet:void replaceDestinationFactory()",
            "org.apache.cxf.transport.https.CertificateHostnameVerifier$Certificates:java.lang.String[] getDNSSubjectAlts(java.security.cert.X509Certificate)",
            "org.apache.cxf.transport.https.SSLUtils:java.util.List compileRegexPatterns(java.util.List,boolean,java.util.logging.Logger)",
            "org.apache.cxf.transport.https.SSLUtils:boolean matchesOneOf(java.lang.String,java.util.List)",
            "org.apache.cxf.transport.https.CertificateHostnameVerifier$AbstractVerifier:void check(java.lang.String[],java.lang.String[],java.lang.String[],boolean,boolean)",
            "org.apache.cxf.transport.http_jetty.spring.JettySpringTypesFactory:java.util.Map toThreadingParameters(java.util.List)",
            "org.apache.cxf.transport.http_jetty.spring.JettySpringTypesFactory:java.util.Map toTLSServerParamenters(java.util.List)",
            "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineFactoryBeanDefinitionParser:java.util.List getRequiredElementsList(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,javax.xml.namespace.QName,org.springframework.beans.factory.support.BeanDefinitionBuilder)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void doService(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine:void addServant(java.net.URL,org.apache.cxf.transport.http_jetty.JettyHTTPHandler)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPTransportFactory:void finalizeConfig()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void setEnginesList(java.util.List)",
            "org.apache.cxf.transport.jms.JMSUtils:void addProtocolHeaders(javax.jms.Message,java.util.Map)",
            "org.apache.cxf.feature.AbstractFeature:java.lang.Object getActive(java.util.List,java.lang.Class)",
            "org.apache.cxf.endpoint.ClientLifeCycleManagerImpl:void clientCreated(org.apache.cxf.endpoint.Client)",
            "org.apache.cxf.endpoint.ClientLifeCycleManagerImpl:void clientDestroyed(org.apache.cxf.endpoint.Client)",
            "org.apache.cxf.endpoint.ServerLifeCycleManagerImpl:void startServer(org.apache.cxf.endpoint.Server)",
            "org.apache.cxf.endpoint.ServerLifeCycleManagerImpl:void stopServer(org.apache.cxf.endpoint.Server)",
            "org.apache.cxf.endpoint.EndpointResolverRegistryImpl:org.apache.cxf.ws.addressing.EndpointReferenceType resolve(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.endpoint.EndpointResolverRegistryImpl:org.apache.cxf.ws.addressing.EndpointReferenceType renew(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.endpoint.EndpointResolverRegistryImpl:org.apache.cxf.ws.addressing.EndpointReferenceType mint(javax.xml.namespace.QName)",
            "org.apache.cxf.endpoint.EndpointResolverRegistryImpl:org.apache.cxf.ws.addressing.EndpointReferenceType mint(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.endpoint.ServiceContractResolverRegistryImpl:java.net.URI getContractLocation(javax.xml.namespace.QName)",
            "org.apache.cxf.endpoint.ClientImpl:org.apache.cxf.service.model.EndpointInfo findEndpoint(org.apache.cxf.service.Service,javax.xml.namespace.QName)",
            "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:org.apache.cxf.endpoint.Client createClient(java.lang.String,javax.xml.namespace.QName,java.lang.ClassLoader,javax.xml.namespace.QName,java.util.List)",
            "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:void addBindingFiles(java.util.List,org.apache.cxf.jaxb.JAXBUtils$SchemaCompiler)",
            "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:boolean isValidPackage(org.apache.cxf.jaxb.JAXBUtils$JPackage)",
            "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:void outputDebug(org.apache.cxf.jaxb.JAXBUtils$JCodeModel)",
            "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:void addSchemas(java.lang.String,java.util.Collection,org.apache.cxf.jaxb.JAXBUtils$SchemaCompiler)",
            "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:boolean compileJavaSrc(java.lang.String,java.util.List,java.lang.String)",
            "org.apache.cxf.endpoint.dynamic.TypeClassInitializer:void begin(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.ws.addressing.ContextUtils:java.lang.String getActionFromServiceModel(org.apache.cxf.message.Message,java.lang.Exception)",
            "org.apache.cxf.ws.addressing.MAPAggregator:void assertAssertion(org.apache.cxf.ws.policy.AssertionInfoMap,javax.xml.namespace.QName)",
            "org.apache.cxf.ws.addressing.MAPAggregator:boolean hasUsingAddressing(java.util.List)",
            "org.apache.cxf.ws.addressing.MAPAggregator:java.lang.String getActionFromFaultMessage(org.apache.cxf.service.model.OperationInfo,java.lang.String)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void encodeReferenceParameters(org.apache.cxf.ws.addressing.AddressingProperties,org.w3c.dom.Element,javax.xml.bind.Marshaller)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void addMustUnderstandAttribute(org.w3c.dom.Element,javax.xml.namespace.QName,org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.addressing.AddressingPropertiesImpl)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:org.apache.cxf.ws.addressing.AddressingProperties unmarshalMAPs(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void decodeReferenceParameters(java.util.Set,org.apache.cxf.ws.addressing.AddressingPropertiesImpl,javax.xml.bind.Unmarshaller)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void discardMAPs(java.util.List,org.apache.cxf.ws.addressing.AddressingProperties)",
            "org.apache.cxf.ws.policy.builder.primitive.NestedPrimitiveAssertion:org.apache.neethi.PolicyComponent normalize()",
            "org.apache.cxf.ws.policy.builder.primitive.NestedPrimitiveAssertion:boolean isAsserted(org.apache.cxf.ws.policy.AssertionInfoMap)",
            "org.apache.cxf.ws.policy.builder.primitive.NestedPrimitiveAssertion:boolean isPolicyAsserted(org.apache.neethi.PolicyOperator,org.apache.cxf.ws.policy.AssertionInfoMap)",
            "org.apache.cxf.ws.policy.builder.primitive.PrimitiveAssertion:boolean isAsserted(org.apache.cxf.ws.policy.AssertionInfoMap)",
            "org.apache.cxf.ws.policy.util.PolicyComparator:boolean compare(java.util.List,java.util.List)",
            "org.apache.cxf.ws.policy.AssertionInfoMap:void <init>(java.util.Collection)",
            "org.apache.cxf.ws.policy.AssertionInfoMap:void putAssertionInfo(org.apache.cxf.ws.policy.PolicyAssertion)",
            "org.apache.cxf.ws.policy.AssertionInfoMap:boolean supportsAlternative(org.apache.cxf.ws.policy.PolicyAssertion,java.util.List)",
            "org.apache.cxf.ws.policy.AssertionInfoMap:boolean supportsAlternative(java.util.Collection,java.util.List)",
            "org.apache.cxf.ws.policy.AssertionInfoMap:void checkEffectivePolicy(org.apache.neethi.Policy)",
            "org.apache.cxf.ws.policy.AssertionInfoMap:void check()",
            "org.apache.cxf.ws.policy.AssertionInfoMap:void getAssertions(org.apache.neethi.PolicyOperator,java.util.Collection)",
            "org.apache.cxf.ws.policy.Intersector:boolean compatibleAlternatives(java.util.Collection,java.util.Collection)",
            "org.apache.cxf.ws.policy.Intersector:boolean compatiblePolicies(org.apache.neethi.Policy,org.apache.neethi.Policy)",
            "org.apache.cxf.ws.policy.Intersector:org.apache.neethi.Policy intersect(org.apache.neethi.Policy,org.apache.neethi.Policy)",
            "org.apache.cxf.ws.policy.Intersector:org.apache.cxf.ws.policy.PolicyAssertion findCompatibleAssertion(org.apache.cxf.ws.policy.PolicyAssertion,java.util.Collection)",
            "org.apache.cxf.ws.policy.EndpointPolicyImpl:java.util.Collection getSupportedAlternatives()",
            "org.apache.cxf.ws.policy.EndpointPolicyImpl:void initializeVocabulary()",
            "org.apache.cxf.ws.policy.EndpointPolicyImpl:java.util.Collection getSupportedAlternatives(org.apache.neethi.Policy)",
            "org.apache.cxf.ws.policy.EndpointPolicyImpl:void initializeInterceptors(org.apache.cxf.ws.policy.PolicyInterceptorProviderRegistry,java.util.Set,org.apache.cxf.ws.policy.PolicyAssertion,boolean)",
            "org.apache.cxf.ws.policy.EndpointPolicyImpl:void initializeInterceptors()",
            "org.apache.cxf.ws.policy.EndpointPolicyImpl:void checkExactlyOnes()",
            "org.apache.cxf.ws.policy.ServerPolicyOutFaultInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.policy.WSPolicyFeature:org.apache.neethi.Policy initializeEndpointPolicy(org.apache.cxf.endpoint.Endpoint,org.apache.cxf.Bus)",
            "org.apache.cxf.ws.policy.PolicyInInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.policy.PolicyOutInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.policy.PolicyInterceptorProviderRegistryImpl:void register(org.apache.cxf.ws.policy.PolicyInterceptorProvider)",
            "org.apache.cxf.ws.policy.PolicyInterceptorProviderRegistryImpl:java.util.List getInterceptors(java.util.Collection,boolean,boolean)",
            "org.apache.cxf.ws.policy.selector.MinimalAlternativeSelector:java.util.Collection selectAlternative(org.apache.neethi.Policy,org.apache.cxf.ws.policy.PolicyEngine,org.apache.cxf.ws.policy.Assertor)",
            "org.apache.cxf.ws.policy.selector.FirstAlternativeSelector:java.util.Collection selectAlternative(org.apache.neethi.Policy,org.apache.cxf.ws.policy.PolicyEngine,org.apache.cxf.ws.policy.Assertor)",
            "org.apache.cxf.ws.policy.selector.MaximalAlternativeSelector:java.util.Collection selectAlternative(org.apache.neethi.Policy,org.apache.cxf.ws.policy.PolicyEngine,org.apache.cxf.ws.policy.Assertor)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:org.apache.neethi.Policy getAggregatedServicePolicy(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:org.apache.neethi.Policy getAggregatedEndpointPolicy(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:org.apache.neethi.Policy getAggregatedOperationPolicy(org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:org.apache.neethi.Policy getAggregatedMessagePolicy(org.apache.cxf.service.model.BindingMessageInfo)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:org.apache.neethi.Policy getAggregatedFaultPolicy(org.apache.cxf.service.model.BindingFaultInfo)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:java.util.Collection getAssertions(org.apache.cxf.ws.policy.EffectivePolicy,boolean)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:void addAssertions(org.apache.neethi.PolicyComponent,boolean,java.util.Collection)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:java.util.Set getVocabulary(org.apache.neethi.PolicyComponent,boolean)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:boolean supportsAlternative(java.util.Collection,org.apache.cxf.ws.policy.Assertor)",
            "org.apache.cxf.ws.policy.PolicyUtils:boolean contains(java.util.Collection,org.apache.neethi.Assertion)",
            "org.apache.cxf.ws.policy.PolicyUtils:boolean contains(java.util.Collection,java.util.Collection)",
            "org.apache.cxf.ws.policy.PolicyUtils:void printPolicyComponent(org.apache.neethi.PolicyComponent,java.lang.StringBuffer,int)",
            "org.apache.cxf.ws.policy.mtom.MTOMPolicyInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.policy.EffectivePolicyImpl:void initialiseInterceptors(org.apache.cxf.ws.policy.PolicyEngineImpl,boolean)",
            "org.apache.cxf.ws.policy.EffectivePolicyImpl:java.util.Collection getSupportedAlternatives(org.apache.cxf.ws.policy.PolicyEngineImpl,org.apache.neethi.Policy)",
            "org.apache.cxf.ws.policy.EffectivePolicyImpl:void initialiseInterceptors(org.apache.cxf.ws.policy.PolicyInterceptorProviderRegistry,org.apache.cxf.ws.policy.PolicyEngineImpl,java.util.Set,org.apache.cxf.ws.policy.PolicyAssertion,boolean)",
            "org.apache.cxf.ws.policy.attachment.wsdl11.Wsdl11AttachmentPolicyProvider$ExtensibleInfo:java.lang.Object getExtensor(java.lang.Class)",
            "org.apache.cxf.ws.policy.attachment.wsdl11.Wsdl11AttachmentPolicyProvider$ExtensibleInfo:java.util.List getExtensors(java.lang.Class)",
            "org.apache.cxf.ws.policy.attachment.wsdl11.Wsdl11AttachmentPolicyProvider:org.apache.neethi.Policy getElementPolicy(org.apache.cxf.service.model.Extensible,boolean,org.apache.cxf.service.model.DescriptionInfo)",
            "org.apache.cxf.ws.policy.attachment.reference.LocalServiceModelReferenceResolver:org.apache.neethi.Policy resolveReference(java.lang.String)",
            "org.apache.cxf.ws.policy.attachment.reference.RemoteReferenceResolver:org.apache.neethi.Policy resolveReference(java.lang.String)",
            "org.apache.cxf.ws.policy.attachment.external.PolicyAttachment:boolean appliesTo(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.ws.policy.attachment.external.PolicyAttachment:boolean appliesTo(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.ws.policy.attachment.external.PolicyAttachment:boolean appliesTo(org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.ws.policy.attachment.external.PolicyAttachment:boolean appliesTo(org.apache.cxf.service.model.BindingMessageInfo)",
            "org.apache.cxf.ws.policy.attachment.external.PolicyAttachment:boolean appliesTo(org.apache.cxf.service.model.BindingFaultInfo)",
            "org.apache.cxf.ws.policy.attachment.external.ExternalAttachmentProvider:org.apache.neethi.Policy getEffectivePolicy(org.apache.cxf.service.model.BindingFaultInfo)",
            "org.apache.cxf.ws.policy.attachment.external.ExternalAttachmentProvider:org.apache.neethi.Policy getEffectivePolicy(org.apache.cxf.service.model.BindingMessageInfo)",
            "org.apache.cxf.ws.policy.attachment.external.ExternalAttachmentProvider:org.apache.neethi.Policy getEffectivePolicy(org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.ws.policy.attachment.external.ExternalAttachmentProvider:org.apache.neethi.Policy getEffectivePolicy(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.ws.policy.attachment.external.ExternalAttachmentProvider:org.apache.neethi.Policy getEffectivePolicy(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.ws.policy.attachment.external.ExternalAttachmentProvider:void readDocument()",
            "org.apache.cxf.ws.policy.AssertionBuilderRegistryImpl:void register(org.apache.cxf.ws.policy.AssertionBuilder)",
            "org.apache.cxf.ws.policy.ClientPolicyInFaultInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.policy.AbstractPolicyInterceptor:org.apache.cxf.service.model.BindingFaultInfo getBindingFaultInfo(org.apache.cxf.message.Message,java.lang.Exception,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.ws.security.policy.builders.X509TokenBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.builders.X509TokenBuilder:void processAlternative(java.util.List,org.apache.cxf.ws.security.policy.model.X509Token,org.apache.cxf.ws.security.policy.SPConstants)",
            "org.apache.cxf.ws.security.policy.builders.SupportingTokens12Builder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.builders.SupportingTokens12Builder:void processAlternative(java.util.List,org.apache.cxf.ws.security.policy.model.SupportingToken)",
            "org.apache.cxf.ws.security.policy.builders.InitiatorTokenBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.builders.InitiatorTokenBuilder:void processAlternative(java.util.List,org.apache.cxf.ws.security.policy.model.InitiatorToken)",
            "org.apache.cxf.ws.security.policy.builders.AsymmetricBindingBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.builders.AsymmetricBindingBuilder:void processAlternative(java.util.List,org.apache.cxf.ws.security.policy.model.AsymmetricBinding,org.apache.cxf.ws.security.policy.SPConstants)",
            "org.apache.cxf.ws.security.policy.builders.IssuedTokenBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.builders.IssuedTokenBuilder:void processAlternative(java.util.List,org.apache.cxf.ws.security.policy.model.IssuedToken)",
            "org.apache.cxf.ws.security.policy.builders.ProtectionTokenBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.builders.TransportTokenBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.builders.RecipientTokenBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.builders.RecipientTokenBuilder:void processAlternative(java.util.List,org.apache.cxf.ws.security.policy.model.RecipientToken)",
            "org.apache.cxf.ws.security.policy.builders.SupportingTokensBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.builders.SupportingTokensBuilder:void processAlternative(java.util.List,org.apache.cxf.ws.security.policy.model.SupportingToken)",
            "org.apache.cxf.ws.security.policy.builders.SymmetricBindingBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.builders.SymmetricBindingBuilder:void processAlternatives(java.util.List,org.apache.cxf.ws.security.policy.model.SymmetricBinding,org.apache.cxf.ws.security.policy.SPConstants)",
            "org.apache.cxf.ws.security.policy.model.RequiredParts:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.ContentEncryptedElements:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SignedEncryptedElements:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.RequiredElements:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SupportingToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SupportingToken:org.apache.neethi.Policy getPolicy()",
            "org.apache.cxf.ws.security.policy.model.SignedEncryptedParts:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.AbstractSecurityAssertion:boolean isAsserted(org.apache.cxf.ws.policy.AssertionInfoMap)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor$SecureConversationTokenFinderInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.policy.interceptors.HttpsTokenInterceptorProvider$HttpsTokenInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.policy.interceptors.HttpsTokenInterceptorProvider$HttpsTokenInInterceptor:void assertHttps(java.util.Collection,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationOutInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor:void recalcEffectivePolicy(org.apache.cxf.binding.soap.SoapMessage,java.lang.String,org.apache.neethi.Policy)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor:void unmapSecurityProps(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.policy.interceptors.IssuedTokenInterceptorProvider$IssuedTokenOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationTokenInterceptorProvider:void mapSecurityProps(org.apache.cxf.message.Message,java.util.Map)",
            "org.apache.cxf.ws.security.policy.interceptors.HttpsTokenInterceptorProvider$HttpsTokenOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.policy.interceptors.HttpsTokenInterceptorProvider$HttpsTokenOutInterceptor:void assertHttps(java.util.Collection,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.policy.interceptors.IssuedTokenInterceptorProvider$IssuedTokenInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.trust.STSClient:void setPolicy(org.apache.neethi.Policy)",
            "org.apache.cxf.ws.security.trust.STSClient:org.apache.cxf.service.model.BindingOperationInfo findOperation(java.lang.String)",
            "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:org.apache.cxf.ws.security.tokenstore.SecurityToken getToken(java.lang.String)",
            "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:java.util.Collection getTokens(org.apache.cxf.ws.security.tokenstore.SecurityToken$State)",
            "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:void processTokenExpiry()",
            "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:void removeCancelledTokens()",
            "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:void removeExpiredTokens()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.TransportBindingHandler:void addUsernameTokens(org.apache.cxf.ws.security.policy.model.SupportingToken)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.TransportBindingHandler:void handleBinding()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.TransportBindingHandler:byte[] doX509TokenSignature(org.apache.cxf.ws.security.policy.model.Token,org.apache.cxf.ws.security.policy.model.SignedEncryptedParts,org.apache.cxf.ws.security.policy.model.TokenWrapper)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.TransportBindingHandler:byte[] doIssuedTokenSignature(org.apache.cxf.ws.security.policy.model.Token,org.apache.cxf.ws.security.policy.model.SignedEncryptedParts,org.apache.cxf.ws.security.policy.model.TokenWrapper,org.apache.cxf.ws.security.tokenstore.SecurityToken)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AsymmetricBindingHandler:void doSignBeforeEncrypt()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AsymmetricBindingHandler:void doEncryptBeforeSign()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AsymmetricBindingHandler:void assertUnusedTokens(org.apache.cxf.ws.security.policy.model.TokenWrapper)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void policyNotAsserted(org.apache.cxf.ws.policy.PolicyAssertion,java.lang.Exception)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void policyNotAsserted(org.apache.cxf.ws.policy.PolicyAssertion,java.lang.String)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void policyAsserted(org.apache.cxf.ws.policy.PolicyAssertion)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void policyAsserted(javax.xml.namespace.QName)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:java.util.Collection findAndAssertPolicy(javax.xml.namespace.QName)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:org.apache.ws.security.message.WSSecTimestamp createTimestamp()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:org.apache.ws.security.message.WSSecTimestamp handleLayout(org.apache.ws.security.message.WSSecTimestamp)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void assertSupportingTokens(java.util.Collection)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:java.util.Map handleSupportingTokens(java.util.Collection,boolean)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:java.util.Map handleSupportingTokens(org.apache.cxf.ws.security.policy.model.SupportingToken,boolean,java.util.Map)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void addSignatureParts(java.util.Map,java.util.List)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:org.apache.ws.security.message.WSSecUsernameToken addUsernameToken(org.apache.cxf.ws.security.policy.model.UsernameToken)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:java.util.Vector getEncryptedParts()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:java.util.Vector getSignedParts()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:java.util.Vector getPartsAndElements(boolean,boolean,java.util.List,java.util.List,java.util.Map)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:org.apache.cxf.ws.security.policy.model.Wss10 getWss10()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void doEndorsedSignatures(java.util.Map,boolean,boolean)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void handleEncryptedSignedHeaders(java.util.Vector,java.util.Vector)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.SymmetricBindingHandler:void doEncryptBeforeSign()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.SymmetricBindingHandler:void doSignBeforeEncrypt()",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JOutInterceptor$PolicyBasedWSS4JOutInterceptorInternal:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:void handleWSS11(org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:boolean assertPolicy(org.apache.cxf.ws.policy.AssertionInfoMap,javax.xml.namespace.QName)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:void assertPolicy(org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.ws.policy.PolicyAssertion)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:void notAssertPolicy(org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.ws.policy.PolicyAssertion,java.lang.String)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:java.lang.String checkAsymetricBinding(org.apache.cxf.ws.policy.AssertionInfoMap,java.lang.String,org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:java.lang.String checkSymetricBinding(org.apache.cxf.ws.policy.AssertionInfoMap,java.lang.String,org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:void assertTokens(org.apache.cxf.ws.policy.AssertionInfoMap,javax.xml.namespace.QName,java.util.Collection,org.apache.cxf.binding.soap.SoapMessage,javax.xml.soap.SOAPMessage,java.lang.String)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:void doResults(org.apache.cxf.binding.soap.SoapMessage,java.lang.String,javax.xml.soap.SOAPMessage,java.util.Vector)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:boolean assertSymetricBinding(org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.binding.soap.SoapMessage,javax.xml.soap.SOAPMessage,org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor$Protections,boolean)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:boolean assertAsymetricBinding(org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.binding.soap.SoapMessage,javax.xml.soap.SOAPMessage,org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor$Protections,boolean)",
            "org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor:void doResults(org.apache.cxf.binding.soap.SoapMessage,java.lang.String,javax.xml.soap.SOAPMessage,java.util.Vector)",
            "org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor:org.apache.ws.security.WSSecurityEngine createSecurityEngine(java.util.Map)",
            "org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor$TokenStoreCallbackHandler:void handle(javax.security.auth.callback.Callback[])",
            "org.apache.cxf.ws.rm.AbstractRMInterceptor:void assertReliability(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.Servant:void terminateSequence(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.AbstractSequence:boolean isAcknowledged(java.math.BigInteger)",
            "org.apache.cxf.ws.rm.DestinationSequence:void scheduleDeferredAcknowledgement(long)",
            "org.apache.cxf.ws.rm.policy.PolicyUtils:org.apache.cxf.ws.rm.policy.RMAssertion getRMAssertion(org.apache.cxf.ws.rm.policy.RMAssertion,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.Source:java.util.Collection getAllUnacknowledgedSequences()",
            "org.apache.cxf.ws.rm.RMInInterceptor:void processAcknowledgments(org.apache.cxf.ws.rm.Source,org.apache.cxf.ws.rm.RMProperties)",
            "org.apache.cxf.ws.rm.RMOutInterceptor:void addAcknowledgements(org.apache.cxf.ws.rm.Destination,org.apache.cxf.ws.rm.RMProperties,org.apache.cxf.ws.rm.Identifier,org.apache.cxf.ws.addressing.v200408.AttributedURI)",
            "org.apache.cxf.ws.rm.Destination:void ackRequested(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.RMManager:void shutdown()",
            "org.apache.cxf.ws.rm.RMManager:void recoverReliableEndpoint(org.apache.cxf.endpoint.Endpoint,org.apache.cxf.transport.Conduit)",
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl:void resend(org.apache.cxf.transport.Conduit,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.soap.RMSoapInterceptor:void encode(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.rm.RMProperties)",
            "org.apache.cxf.ws.rm.soap.RMSoapInterceptor:org.apache.cxf.ws.rm.RMProperties unmarshalRMProperties(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.rm.soap.RMSoapInterceptor:void discardRMHeaders(java.util.List)",
            "org.apache.cxf.ws.rm.RMEndpoint:void setPolicies()",
            "org.apache.cxf.ws.rm.RMEndpoint:java.lang.Object getUsingAddressing(java.util.List)",
            "org.apache.cxf.ws.rm.RMEndpoint:void shutdown()",
            "org.apache.cxf.ws.rm.persistence.jdbc.RMTxStore:void removeMessages(org.apache.cxf.ws.rm.Identifier,java.util.Collection,boolean)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void <init>(java.util.SortedSet)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void add(java.util.Collection,boolean)",
            "org.apache.cxf.workqueue.WorkQueueManagerImpl:void shutdown(boolean)",
            "org.apache.cxf.workqueue.WorkQueueManagerImpl:void run()",
            "org.apache.cxf.databinding.AbstractDataBinding:void setNamespaceMap(java.util.Map)",
            "org.apache.cxf.databinding.AbstractDataBinding:void checkNamespaceMap(java.util.Map)",
            "org.apache.cxf.databinding.stax.StaxDataBindingFeature:void removeInterceptor(java.util.List,java.lang.String)",
            "org.apache.cxf.wsdl.JAXBExtensionHelper$1:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils$SchemaLSResourceResolver:org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.namespace.QName getServiceName(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:java.lang.String getPortName(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:void setPortName(org.apache.cxf.ws.addressing.EndpointReferenceType,java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.namespace.QName getInterfaceName(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:void setMetadata(org.apache.cxf.ws.addressing.EndpointReferenceType,java.util.List)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.wsdl.Definition getWSDLDefinition(org.apache.cxf.wsdl.WSDLManager,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.validation.Schema createSchema(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.wsdl.Port getPort(org.apache.cxf.wsdl.WSDLManager,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:org.apache.cxf.transport.MultiplexDestination getMatchingMultiplexDestination(javax.xml.namespace.QName,java.lang.String,org.apache.cxf.Bus)",
            "org.apache.cxf.io.CachedOutputStream:void flush()",
            "org.apache.cxf.io.CachedOutputStream:void lockOutputStream()",
            "org.apache.cxf.io.CachedOutputStream:void close()",
            "org.apache.cxf.service.model.BindingOperationInfo:void <init>(org.apache.cxf.service.model.BindingInfo,org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:int getMessagePartIndex(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePartByIndex(int)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePart(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePart(int)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperation(org.apache.cxf.message.Exchange,java.lang.String)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperationForWrapperElement(org.apache.cxf.message.Exchange,javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.SchemaInfo getSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.ServiceModelUtil:java.util.List getOperationInputPartNames(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.EndpointInfo findBestEndpointInfo(javax.xml.namespace.QName,java.util.List)",
            "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.BindingInfo getBinding(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.EndpointInfo getEndpoint(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.ServiceInfo:void initMessagesMap()",
            "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.SchemaInfo getSchema(java.lang.String)",
            "org.apache.cxf.service.model.MessageInfo:java.util.Map getMessagePartsMap()",
            "org.apache.cxf.service.model.MessageInfo:java.util.List getOrderedParts(java.util.List)",
            "org.apache.cxf.service.model.BindingInfo:org.apache.cxf.service.model.BindingOperationInfo buildOperation(javax.xml.namespace.QName,java.lang.String,java.lang.String)",
            "org.apache.cxf.service.model.BindingInfo:org.apache.cxf.service.model.BindingOperationInfo getOperation(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.ServiceImpl:org.apache.cxf.service.model.EndpointInfo getEndpointInfo(javax.xml.namespace.QName)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void fillInSchemaCrossreferences()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createEndpoints()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeServiceConfigurations()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromWSDL(java.lang.String)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromClass()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean hasWrappedMethods(org.apache.cxf.service.model.InterfaceInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void validateServiceModel()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.InterfaceInfo getInterfaceInfo()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeWSDLOperations()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void setFaultClassInfo(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.OperationInfo createOperation(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.InterfaceInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeWrappedSchema(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void checkForElement(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createBareMessage(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.OperationInfo,boolean)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isExistImport(org.apache.ws.commons.schema.XmlSchema,java.lang.String)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.ws.commons.schema.XmlSchemaElement getExistingSchemaElement(org.apache.ws.commons.schema.XmlSchema,javax.xml.namespace.QName)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createWrappedMessageSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.AbstractMessageContainer,org.apache.cxf.service.model.AbstractMessageContainer,org.apache.ws.commons.schema.XmlSchema,javax.xml.namespace.QName)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.SchemaInfo getOrCreateSchema(org.apache.cxf.service.model.ServiceInfo,java.lang.String,boolean)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createInputWrappedMessageParts(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,org.apache.cxf.service.model.MessageInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createOutputWrappedMessageParts(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,org.apache.cxf.service.model.MessageInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getEndpointName(boolean)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getServiceName()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getServiceNamespace()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getInterfaceName()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isValidMethod(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isHolder(java.lang.Class,java.lang.reflect.Type)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.reflect.Type getHolderType(java.lang.Class,java.lang.reflect.Type)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isWrapped(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isOutParam(java.lang.reflect.Method,int)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isInParam(java.lang.reflect.Method,int)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getInputMessageName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName createOutputMessageName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean hasOutMessage(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getFaultName(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.Class,java.lang.Class)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getAction(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isHeader(java.lang.reflect.Method,int)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getOperationName(org.apache.cxf.service.model.InterfaceInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isAsync(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getInPartName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getInParameterName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getOutParameterName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getOutPartName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.Class getResponseWrapper(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getResponseWrapperClassName(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.Class getRequestWrapper(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getRequestWrapperClassName(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isWrapperPartQualified(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isWrapperPartNillable(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:long getWrapperPartMaxOccurs(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:long getWrapperPartMinOccurs(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getWsdlURL()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isWrapped()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getStyle()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isRPC(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.DefaultServiceConfiguration:java.lang.Boolean isOperation(java.lang.reflect.Method)",
            "org.apache.cxf.service.ServiceModelVisitor:void walk()",
            "org.apache.cxf.service.ServiceModelVisitor:void visitOperation(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.binding.AbstractBindingFactory:void registerWithBindingManager()",
            "org.apache.cxf.binding.AbstractBindingFactory:org.apache.cxf.service.model.BindingInfo initializeBindingInfo(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding,org.apache.cxf.service.model.BindingInfo)",
            "org.apache.cxf.binding.AbstractBindingFactory:void copyExtensors(org.apache.cxf.service.model.AbstractPropertiesHolder,javax.wsdl.extensions.ElementExtensible,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:org.apache.cxf.service.model.BindingInfo createBindingInfo(org.apache.cxf.service.model.ServiceInfo,java.lang.String,java.lang.Object)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:void createSoapBinding(org.apache.cxf.binding.soap.model.SoapBindingInfo)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:void setupHeaders(org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.service.model.BindingMessageInfo,org.apache.cxf.service.model.BindingMessageInfo,org.apache.cxf.service.model.MessageInfo,org.apache.cxf.binding.soap.SoapBindingConfiguration)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:org.apache.cxf.binding.Binding createBinding(org.apache.cxf.service.model.BindingInfo)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:void addOutOfBandParts(org.apache.cxf.service.model.BindingOperationInfo,javax.wsdl.Message,org.apache.cxf.common.xmlschema.SchemaCollection,boolean,java.lang.String)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:void buildMessage(org.apache.cxf.service.model.MessageInfo,javax.wsdl.Message,org.apache.cxf.common.xmlschema.SchemaCollection,int,java.lang.String)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:org.apache.cxf.service.model.BindingInfo createBindingInfo(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding,java.lang.String)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:void initializeMessage(org.apache.cxf.binding.soap.model.SoapBindingInfo,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.service.model.BindingMessageInfo)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:java.util.List handleMimePart(javax.wsdl.extensions.mime.MIMEPart,java.util.List,org.apache.cxf.service.model.MessageInfo,org.apache.cxf.service.model.BindingMessageInfo,java.util.List,java.util.List)",
            "org.apache.cxf.binding.soap.interceptor.ReadHeadersInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.Soap12FaultOutInterceptor$Soap12FaultOutInterceptorInternal:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.RPCOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.soap.interceptor.SoapActionInInterceptor:void getAndSetOperation(org.apache.cxf.binding.soap.SoapMessage,java.lang.String)",
            "org.apache.cxf.binding.soap.interceptor.SoapHeaderOutFilterInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.RPCInInterceptor:org.apache.cxf.service.model.BindingOperationInfo getOperation(org.apache.cxf.message.Message,javax.xml.namespace.QName)",
            "org.apache.cxf.binding.soap.interceptor.RPCInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor:void writeSoapEnvelopeStart(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor:boolean handleHeaderPart(boolean,org.apache.cxf.binding.soap.SoapMessage,java.lang.String)",
            "org.apache.cxf.binding.soap.interceptor.MustUnderstandInterceptor:void initServiceSideInfo(java.util.Set,org.apache.cxf.binding.soap.SoapMessage,java.util.Set)",
            "org.apache.cxf.binding.soap.interceptor.MustUnderstandInterceptor:void buildMustUnderstandHeaders(java.util.Set,org.apache.cxf.binding.soap.SoapMessage,java.util.Set,java.util.Set)",
            "org.apache.cxf.binding.soap.interceptor.MustUnderstandInterceptor:void checkUnderstand(java.util.Set,java.util.Set,java.util.Set)",
            "org.apache.cxf.binding.soap.interceptor.Soap11FaultOutInterceptor$Soap11FaultOutInterceptorInternal:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.EndpointSelectionInterceptor:org.apache.cxf.endpoint.Endpoint selectEndpoint(org.apache.cxf.message.Message,java.util.Set)",
            "org.apache.cxf.binding.soap.interceptor.MustUnderstandInterceptor$UltimateReceiverMustUnderstandInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.SoapHeaderInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.soap.HeaderUtil:java.util.Set getHeaderQNames(org.apache.cxf.service.model.BindingMessageInfo)",
            "org.apache.cxf.binding.soap.SoapTransportFactory:org.apache.cxf.service.model.EndpointInfo createEndpointInfo(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.BindingInfo,javax.wsdl.Port)",
            "org.apache.cxf.binding.soap.SoapTransportFactory:void registerWithBindingManager()",
            "org.apache.cxf.binding.soap.SoapMessage:boolean hasHeader(javax.xml.namespace.QName)",
            "org.apache.cxf.binding.soap.SoapMessage:org.apache.cxf.headers.Header getHeader(javax.xml.namespace.QName)",
            "org.apache.cxf.binding.soap.saaj.SAAJInInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.saaj.SAAJOutInterceptor$SAAJOutEndingInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.model.SoapBindingInfo:org.apache.cxf.service.model.OperationInfo getOperationByAction(java.lang.String)",
            "org.apache.cxf.binding.xml.interceptor.XMLMessageInInterceptor:org.apache.cxf.service.model.BindingOperationInfo getBindingOperationInfo(boolean,javax.xml.namespace.QName,org.apache.cxf.service.model.BindingInfo,javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.binding.xml.XMLFormatValidator:boolean checkXMLBindingFormat()",
            "org.apache.cxf.binding.xml.XMLFormatValidator:boolean checkXMLFormat(org.apache.cxf.service.model.BindingInfo)",
            "org.apache.cxf.binding.xml.XMLFormatValidator:boolean findXMLFormatRootNode(java.util.Iterator,org.apache.cxf.service.model.BindingOperationInfo,java.lang.String)",
            "org.apache.cxf.binding.xml.XMLBindingFactory:org.apache.cxf.service.model.BindingInfo createBindingInfo(org.apache.cxf.service.model.ServiceInfo,java.lang.String,java.lang.Object)",
            "org.apache.cxf.clustering.AbstractStaticFailoverStrategy:java.util.List getAlternateEndpoints(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.tools.common.Tag:java.lang.String formatAttribute(org.apache.cxf.tools.common.Tag)",
            "org.apache.cxf.tools.common.Tag:java.lang.String formatTag(org.apache.cxf.tools.common.Tag,int)",
            "org.apache.cxf.tools.common.Tag:boolean equals(java.lang.Object)",
            "org.apache.cxf.tools.common.ClassUtils:void compile(org.apache.cxf.tools.common.ToolContext)",
            "org.apache.cxf.tools.common.ToolContext:void addParameters(java.util.Map)",
            "org.apache.cxf.tools.common.VelocityGenerator:void doWrite(java.lang.String,java.io.Writer)",
            "org.apache.cxf.tools.common.toolspec.ToolSpec:boolean isValidInputStream(java.lang.String)",
            "org.apache.cxf.tools.common.toolspec.ToolSpec:java.util.List getInstreamIds()",
            "org.apache.cxf.tools.common.toolspec.ToolSpec:java.util.List getOutstreamIds()",
            "org.apache.cxf.tools.common.toolspec.ToolSpec:java.lang.String getStreamRefName(java.lang.String)",
            "org.apache.cxf.tools.common.toolspec.parser.CommandDocument:java.lang.String[] getParameters(java.lang.String)",
            "org.apache.cxf.tools.common.toolspec.parser.CommandDocument:java.lang.String[] getParameterNames()",
            "org.apache.cxf.tools.common.toolspec.parser.Form:void <init>(org.w3c.dom.Element)",
            "org.apache.cxf.tools.common.toolspec.parser.Option:boolean accept(org.apache.cxf.tools.common.toolspec.parser.TokenInputStream,org.w3c.dom.Element,org.apache.cxf.tools.common.toolspec.parser.ErrorVisitor)",
            "org.apache.cxf.tools.common.toolspec.parser.OptionGroup:void <init>(org.w3c.dom.Element)",
            "org.apache.cxf.tools.common.toolspec.parser.OptionGroup:boolean accept(org.apache.cxf.tools.common.toolspec.parser.TokenInputStream,org.w3c.dom.Element,org.apache.cxf.tools.common.toolspec.parser.ErrorVisitor)",
            "org.apache.cxf.tools.common.toolspec.parser.OptionGroup:boolean isSatisfied(org.apache.cxf.tools.common.toolspec.parser.ErrorVisitor)",
            "org.apache.cxf.tools.common.toolspec.parser.ErrorVisitor:java.lang.String toString()",
            "org.apache.cxf.tools.common.toolspec.parser.CommandLineParser:org.apache.cxf.tools.common.toolspec.parser.CommandDocument parseArguments(java.lang.String[])",
            "org.apache.cxf.tools.common.ProcessorTestBase:boolean assertXmlEquals(java.io.File,java.io.File,java.util.List)",
            "org.apache.cxf.tools.common.ProcessorTestBase:void assertAttributesEquals(javax.xml.namespace.QName,java.util.Map,java.util.Map,java.util.Collection)",
            "org.apache.cxf.tools.common.ProcessorTestBase:void assertTagEquals(org.apache.cxf.tools.common.Tag,org.apache.cxf.tools.common.Tag,java.util.List,java.util.List)",
            "org.apache.cxf.tools.common.ProcessorTestBase:org.apache.cxf.tools.common.Tag getFromSource(org.apache.cxf.tools.common.Tag,org.apache.cxf.tools.common.Tag)",
            "org.apache.cxf.tools.common.model.JAnnotation:java.util.Set getImports()",
            "org.apache.cxf.tools.common.model.JAnnotation:org.apache.cxf.tools.common.model.JAnnotationElement getElementByName(java.lang.String)",
            "org.apache.cxf.tools.common.model.JavaMethod:java.lang.String getSignature()",
            "org.apache.cxf.tools.common.model.JavaMethod:void addAnnotation(java.lang.String,org.apache.cxf.tools.common.model.JAnnotation)",
            "org.apache.cxf.tools.common.model.JavaMethod:java.util.List getParameterList(boolean)",
            "org.apache.cxf.tools.common.model.JavaInterface:void addAnnotation(org.apache.cxf.tools.common.model.JAnnotation)",
            "org.apache.cxf.tools.common.model.JavaInterface:void addImports(java.util.Collection)",
            "org.apache.cxf.tools.common.model.JavaInterface:java.lang.String toString()",
            "org.apache.cxf.tools.common.model.JavaField:void addAnnotation(org.apache.cxf.tools.common.model.JAnnotation)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:boolean isSOAPBinding(javax.wsdl.Binding)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:java.lang.String getBindingStyle(javax.wsdl.Binding)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapOperation getSoapOperation(java.util.List)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:java.lang.String getSOAPOperationStyle(javax.wsdl.BindingOperation)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapBody getBindingInputSOAPBody(javax.wsdl.BindingOperation)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapBody getBindingOutputSOAPBody(javax.wsdl.BindingOperation)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapBody getSoapBody(java.util.List)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:java.util.List getSoapHeaders(java.util.List)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapHeader getBindingInputSOAPHeader(javax.wsdl.BindingOperation)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapHeader getBindingOutputSOAPHeader(javax.wsdl.BindingOperation)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapBinding getSoapBinding(java.util.List)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:java.util.List getBindingOperationSoapFaults(javax.wsdl.BindingOperation)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:boolean isMixedStyle(javax.wsdl.Binding)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:java.lang.String getCanonicalBindingStyle(javax.wsdl.Binding)",
            "org.apache.cxf.buslifecycle.CXFBusLifeCycleManager:void initComplete()",
            "org.apache.cxf.buslifecycle.CXFBusLifeCycleManager:void preShutdown()",
            "org.apache.cxf.buslifecycle.CXFBusLifeCycleManager:void postShutdown()",
            "org.apache.cxf.wsdl11.SchemaUtil:void getSchemas(javax.wsdl.Definition,org.apache.cxf.common.xmlschema.SchemaCollection,java.util.List)",
            "org.apache.cxf.wsdl11.SchemaUtil:void extractSchema(javax.wsdl.Definition,org.apache.cxf.common.xmlschema.SchemaCollection,java.util.List)",
            "org.apache.cxf.wsdl11.SchemaUtil:void parseImports(javax.wsdl.Definition,java.util.List)",
            "org.apache.cxf.wsdl11.SchemaUtil:void getSchemaList(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.SchemaUtil:void addSchema(java.lang.String,javax.wsdl.extensions.schema.Schema)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void parseWSDL(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:java.util.Collection getImports(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void parseImports(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void registerWSDLExtensibilityPlugins(javax.wsdl.extensions.ExtensionRegistry)",
            "org.apache.cxf.wsdl11.WSDLServiceUtils:org.apache.cxf.binding.BindingFactory getBindingFactory(javax.wsdl.Binding,org.apache.cxf.Bus,java.lang.StringBuffer)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:javax.wsdl.Definition build(java.util.Map)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addExtensibilityElements(javax.wsdl.extensions.ElementExtensible,java.util.List)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addExtensibilityAttributes(javax.wsdl.extensions.AttributeExtensible,java.util.Map)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildTypes(java.util.Collection,java.util.Map,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBinding(java.util.Collection,java.util.Collection)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBindingOperation(javax.wsdl.Definition,javax.wsdl.Binding,java.util.Collection)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBindingFault(javax.wsdl.Definition,javax.wsdl.BindingOperation,java.util.Collection)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildService(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildPortTypeOperation(javax.wsdl.PortType,java.util.Collection,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildMessage(javax.wsdl.Message,org.apache.cxf.service.model.AbstractMessageContainer,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void registerInitialExtensions(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:org.apache.cxf.service.model.ServiceSchemaInfo getSchemasForDefinition(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void putSchemasForDefinition(javax.wsdl.Definition,org.apache.cxf.service.model.ServiceSchemaInfo)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void removeDefinition(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void copyExtensors(org.apache.cxf.service.model.AbstractPropertiesHolder,java.util.List)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildMockServices(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition,javax.wsdl.Service,javax.xml.namespace.QName,org.apache.cxf.service.model.DescriptionInfo)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void parseImports(javax.wsdl.Definition,java.util.List)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.EndpointInfo buildEndpoint(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.BindingInfo,javax.wsdl.Port)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.BindingInfo buildBinding(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildInterface(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.PortType)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildInterfaceOperation(org.apache.cxf.service.model.InterfaceInfo,javax.wsdl.Operation)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildMessage(org.apache.cxf.service.model.AbstractMessageContainer,javax.wsdl.Message)",
            "org.apache.cxf.wsdl11.WSDLServiceFactory:org.apache.cxf.service.Service create()",
            "org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor:void insertConstructorArg(org.springframework.beans.factory.config.ConstructorArgumentValues,java.lang.Object)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void activateViaNS(java.lang.String)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadFragment(java.io.InputStream)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void processExtension(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadAndRegister(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:java.lang.Object getExtension(java.lang.String,java.lang.Class)",
            "org.apache.cxf.bus.extension.Extension:java.lang.String toString()",
            "org.apache.cxf.bus.CXFBusImpl:void initializeFeatures()",
            "org.apache.cxf.attachment.LazyDataSource:void load()",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:boolean containsValue(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:javax.activation.DataHandler get(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:javax.activation.DataHandler remove(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:void putAll(java.util.Map)",
            "org.apache.cxf.attachment.AttachmentDeserializer:void cacheStreamedAttachments()",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$1$1:boolean hasNext()",
            "org.apache.cxf.attachment.AttachmentSerializer:void writeAttachments()",
            "org.apache.cxf.attachment.AttachmentUtil:java.util.Map getDHMap(java.util.Collection)",
            "org.apache.cxf.attachment.AttachmentUtil:boolean isTypeSupported(java.lang.String,java.util.List)",
            "org.apache.cxf.attachment.LazyAttachmentCollection:boolean isEmpty()",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$3$1:boolean hasNext()",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$2$1:boolean hasNext()",
            "org.apache.cxf.frontend.ClientFactoryBean:void applyFeatures()",
            "org.apache.cxf.frontend.SimpleMethodDispatcher:org.apache.cxf.service.model.BindingOperationInfo getBindingOperation(java.lang.reflect.Method,org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory:org.apache.cxf.service.model.BindingInfo createBindingInfo()",
            "org.apache.cxf.frontend.ServerFactoryBean:void initializeServiceFactory()",
            "org.apache.cxf.frontend.ServerFactoryBean:void applyFeatures()",
            "org.apache.cxf.aegis.DatabindingException:java.lang.String getActualMessage()",
            "org.apache.cxf.aegis.util.jdom.StaxSerializer:void writeDocument(org.jdom.Document,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.aegis.util.jdom.StaxSerializer:void writeElement(org.jdom.Element,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.aegis.util.jdom.StaxSerializer:boolean isDeclared(javax.xml.stream.XMLStreamWriter,java.lang.String,java.lang.String)",
            "org.apache.cxf.aegis.util.jdom.StaxBuilder:void buildTree(org.jdom.JDOMFactory,javax.xml.stream.XMLStreamReader,org.jdom.Document)",
            "org.apache.cxf.aegis.util.stax.JDOMStreamReader:void setupNamespaces(org.jdom.Element)",
            "org.apache.cxf.aegis.util.stax.JDOMNamespaceContext:java.lang.String rawGetPrefix(org.jdom.Element,java.lang.String)",
            "org.apache.cxf.aegis.util.stax.JDOMNamespaceContext:void rawGetPrefixes(org.jdom.Element,java.lang.String,java.util.List)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void initialize(org.apache.cxf.service.Service)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void initializeOperation(org.apache.cxf.service.Service,org.apache.cxf.aegis.type.TypeMapping,org.apache.cxf.service.model.OperationInfo,java.util.Set)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void initializeOperationTypes(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void initializeMessage(org.apache.cxf.service.Service,org.apache.cxf.aegis.type.TypeMapping,org.apache.cxf.service.model.AbstractMessageContainer,int,java.util.Set)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void initializeMessageTypes(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.AbstractMessageContainer,int)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void addDependencies(java.util.Set,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void createSchemas(org.apache.cxf.service.Service,java.util.Set)",
            "org.apache.cxf.aegis.AegisContext:void processRootTypes()",
            "org.apache.cxf.aegis.type.basic.XMLBeanTypeInfo:org.w3c.dom.Element getPropertyElement(java.lang.String)",
            "org.apache.cxf.aegis.type.basic.BeanType:void writeObjectInternal(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,boolean)",
            "org.apache.cxf.aegis.type.basic.BeanType:java.util.Set getDependencies()",
            "org.apache.cxf.aegis.type.basic.BeanType:void writeSchema(org.apache.ws.commons.schema.XmlSchema)",
            "org.apache.cxf.aegis.type.basic.BeanTypeInfo:boolean containsPropertyName(java.util.List,java.lang.String)",
            "org.apache.cxf.aegis.type.mtom.AttachmentUtil:org.apache.cxf.message.Attachment getAttachment(java.lang.String,java.util.Collection)",
            "org.apache.cxf.aegis.type.encoded.ArrayTypeInfo:void <init>(javax.xml.namespace.NamespaceContext,java.lang.String,java.lang.String)",
            "org.apache.cxf.aegis.type.encoded.ArrayTypeInfo:java.lang.String toString()",
            "org.apache.cxf.aegis.type.encoded.SoapArrayType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.SoapArrayType:java.lang.Object makeArray(java.util.List,java.util.List,java.lang.Class)",
            "org.apache.cxf.aegis.type.encoded.TrailingBlocks:java.util.List writeBlocks(org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.SoapRefRegistry:void addInstance(java.lang.String,java.lang.Object)",
            "org.apache.cxf.aegis.type.XMLTypeCreator:org.w3c.dom.Element getBestMatch(org.w3c.dom.Element,java.lang.reflect.Method,java.util.List)",
            "org.apache.cxf.aegis.type.collection.MapType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.collection.CollectionType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.jaxws.JaxWsProxyFactoryBean:boolean needWrapperClassInterceptor(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.jaxws.JaxWsProxyFactoryBean:void buildHandlerChain(org.apache.cxf.jaxws.JaxWsClientProxy)",
            "org.apache.cxf.jaxws.handler.HandlerResolverImpl:java.util.List createHandlerChain(javax.xml.ws.handler.PortInfo)",
            "org.apache.cxf.jaxws.handler.HandlerChainInvoker:void <init>(java.util.List,boolean)",
            "org.apache.cxf.jaxws.handler.HandlerChainInvoker:boolean invokeHandleFault(java.util.List,javax.xml.ws.handler.MessageContext)",
            "org.apache.cxf.jaxws.handler.HandlerChainInvoker:boolean invokeHandleMessage(java.util.List,javax.xml.ws.handler.MessageContext)",
            "org.apache.cxf.jaxws.handler.HandlerChainBuilder:java.util.List buildHandlerChainFromConfiguration(java.util.List)",
            "org.apache.cxf.jaxws.handler.HandlerChainBuilder:java.util.List sortHandlers(java.util.List)",
            "org.apache.cxf.jaxws.handler.HandlerChainBuilder:void configureHandler(javax.xml.ws.handler.Handler,org.apache.cxf.jaxws.javaee.PortComponentHandlerType)",
            "org.apache.cxf.jaxws.handler.soap.SOAPMessageContextImpl:java.lang.Object[] getHeaders(javax.xml.namespace.QName,javax.xml.bind.JAXBContext,boolean)",
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerInterceptor:java.util.Set getUnderstoodHeaders()",
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerInterceptor:javax.xml.ws.handler.MessageContext createProtocolMessageContext(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerFaultInInterceptor:java.util.Set getUnderstoodHeaders()",
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerFaultOutInterceptor:java.util.Set getUnderstoodHeaders()",
            "org.apache.cxf.jaxws.support.JaxWsEndpointImpl:boolean hasUsingAddressing(java.util.List)",
            "org.apache.cxf.jaxws.support.JaxWsEndpointImpl:boolean addressingRequired(java.util.List)",
            "org.apache.cxf.jaxws.support.JaxWsEndpointImpl:javax.xml.ws.soap.AddressingFeature getAddressingFeature()",
            "org.apache.cxf.jaxws.support.JaxWsEndpointImpl:org.apache.cxf.ws.addressing.WSAddressingFeature getWSAddressingFeature()",
            "org.apache.cxf.jaxws.support.JaxWsEndpointImpl:javax.xml.ws.soap.MTOMFeature getMTOMFeature()",
            "org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean:void initializeWSDLOperationsForProvider()",
            "org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean:org.apache.cxf.service.model.FaultInfo getFaultInfo(org.apache.cxf.service.model.OperationInfo,java.lang.Class)",
            "org.apache.cxf.jaxws.support.JaxWsImplementorInfo:java.lang.String getWsdlLocation()",
            "org.apache.cxf.jaxws.support.JaxWsImplementorInfo:javax.xml.namespace.QName getInterfaceName()",
            "org.apache.cxf.jaxws.support.JaxWsImplementorInfo:java.lang.String getImplementorClassName()",
            "org.apache.cxf.jaxws.WrapperClassGenerator:java.util.Set generate()",
            "org.apache.cxf.jaxws.WrapperClassGenerator:void createWrapperClass(org.apache.cxf.service.model.MessagePartInfo,org.apache.cxf.service.model.MessageInfo,org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,boolean)",
            "org.apache.cxf.jaxws.WrapperClassGenerator:void addJAXBAnnotations(org.objectweb.asm.FieldVisitor,java.util.List)",
            "org.apache.cxf.jaxws.JaxWsClientProxy:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])",
            "org.apache.cxf.jaxws.ServiceImpl:void initializePorts()",
            "org.apache.cxf.jaxws.ServiceImpl:org.apache.cxf.service.factory.AbstractServiceFactoryBean createDispatchService(org.apache.cxf.databinding.DataBinding)",
            "org.apache.cxf.jaxws.ServiceImpl:java.lang.Object getPort(org.apache.cxf.ws.addressing.EndpointReferenceType,java.lang.Class,javax.xml.ws.WebServiceFeature[])",
            "org.apache.cxf.jaxws.ServiceImpl:javax.xml.ws.Dispatch createDispatch(javax.xml.namespace.QName,java.lang.Class,javax.xml.ws.Service$Mode,javax.xml.ws.WebServiceFeature[])",
            "org.apache.cxf.jaxws.ServiceImpl:javax.xml.ws.Dispatch createDispatch(javax.xml.namespace.QName,javax.xml.bind.JAXBContext,javax.xml.ws.Service$Mode,javax.xml.ws.WebServiceFeature[])",
            "org.apache.cxf.jaxws.spi.ProviderImpl:javax.xml.ws.wsaddressing.W3CEndpointReference createW3CEndpointReference(java.lang.String,javax.xml.namespace.QName,javax.xml.namespace.QName,java.util.List,java.lang.String,java.util.List)",
            "org.apache.cxf.jaxws.JaxWsServerFactoryBean:void buildHandlerChain()",
            "org.apache.cxf.jaxws.DispatchImpl:void addInvokeOperation(boolean)",
            "org.apache.cxf.jaxws.interceptors.MessageModeInInterceptor$MultiPartDataSource:void nextCurrent()",
            "org.apache.cxf.jaxws.interceptors.WebFaultOutInterceptor:org.apache.cxf.service.model.MessagePartInfo getFaultMessagePart(javax.xml.namespace.QName,org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.jaxws.interceptors.HolderOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.interceptors.SwAInInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.jaxws.interceptors.WrapperClassOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.interceptors.WrapperClassOutInterceptor:org.apache.cxf.databinding.WrapperHelper createWrapperHelper(org.apache.cxf.databinding.WrapperCapableDatabinding,org.apache.cxf.service.model.MessageInfo,org.apache.cxf.service.model.MessageInfo,java.lang.Class)",
            "org.apache.cxf.jaxws.interceptors.HolderInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.interceptors.WrapperClassInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.interceptors.WrapperClassInInterceptor:org.apache.cxf.databinding.WrapperHelper createWrapperHelper(org.apache.cxf.databinding.WrapperCapableDatabinding,org.apache.cxf.service.model.MessageInfo,org.apache.cxf.service.model.MessageInfo,java.lang.Class)",
            "org.apache.cxf.jaxws.interceptors.SwAOutInterceptor:void processAttachments(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.binding.soap.model.SoapBodyInfo)",
            "org.apache.cxf.jaxws.binding.http.HTTPBindingImpl:void validate()",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:void copyScoped(java.util.Map)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:void clear()",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:java.util.Set keySet()",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:java.util.Set entrySet()",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:void putAll(java.util.Map)",
            "org.apache.cxf.jaxws.AbstractJAXWSMethodInvoker:java.util.Map removeHandlerProperties(org.apache.cxf.jaxws.context.WrappedMessageContext)",
            "org.apache.cxf.jaxws.AbstractJAXWSMethodInvoker:void addHandlerProperties(org.apache.cxf.jaxws.context.WrappedMessageContext,java.util.Map)",
            "org.apache.cxf.jaxws.AbstractJAXWSMethodInvoker:void updateWebServiceContext(org.apache.cxf.message.Exchange,javax.xml.ws.handler.MessageContext)",
            "org.apache.cxf.xmlbeans.XmlBeansDataBinding:void initialize(org.apache.cxf.service.Service)"
        ]
    },
    "org.apache.cxf.frontend.ClientFactoryBean:void applyFeatures()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.frontend.ClientFactoryBean:org.apache.cxf.endpoint.Client create()"
        ]
    },
    "org.apache.cxf.frontend.SimpleMethodDispatcher:org.apache.cxf.service.model.BindingOperationInfo getBindingOperation(java.lang.reflect.Method,org.apache.cxf.endpoint.Endpoint)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.frontend.ClientProxy:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])",
            "org.apache.cxf.jaxws.JaxWsClientProxy:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])",
            "org.apache.cxf.jaxws.JAXWSMethodDispatcher:org.apache.cxf.service.model.BindingOperationInfo getBindingOperation(java.lang.reflect.Method,org.apache.cxf.endpoint.Endpoint)"
        ]
    },
    "org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory:org.apache.cxf.service.model.BindingInfo createBindingInfo()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory:org.apache.cxf.service.model.EndpointInfo createEndpointInfo()",
            "org.apache.cxf.jaxws.JaxWsServerFactoryBean:org.apache.cxf.service.model.BindingInfo createBindingInfo()"
        ]
    },
    "org.apache.cxf.frontend.ServerFactoryBean:void initializeServiceFactory()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory:org.apache.cxf.endpoint.Endpoint createEndpoint()"
        ]
    },
    "org.apache.cxf.frontend.ServerFactoryBean:void applyFeatures()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.frontend.ServerFactoryBean:org.apache.cxf.endpoint.Server create()"
        ]
    },
    "org.apache.cxf.aegis.DatabindingException:java.lang.String getActualMessage()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.DatabindingException:java.lang.String getMessage()"
        ]
    },
    "org.apache.cxf.aegis.util.jdom.StaxSerializer:void writeDocument(org.jdom.Document,javax.xml.stream.XMLStreamWriter)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.aegis.util.jdom.StaxSerializer:void writeElement(org.jdom.Element,javax.xml.stream.XMLStreamWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.util.jdom.StaxSerializer:void writeDocument(org.jdom.Document,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.aegis.util.jdom.StaxSerializer:void writeElement(org.jdom.Element,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.aegis.type.xml.JDOMElementType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.xml.JDOMDocumentType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)"
        ]
    },
    "org.apache.cxf.aegis.util.jdom.StaxSerializer:boolean isDeclared(javax.xml.stream.XMLStreamWriter,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.util.jdom.StaxSerializer:void writeElement(org.jdom.Element,javax.xml.stream.XMLStreamWriter)"
        ]
    },
    "org.apache.cxf.aegis.util.jdom.StaxBuilder:void buildTree(org.jdom.JDOMFactory,javax.xml.stream.XMLStreamReader,org.jdom.Document)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.util.jdom.StaxBuilder:org.jdom.Document buildInternal(javax.xml.stream.XMLStreamReader)"
        ]
    },
    "org.apache.cxf.aegis.util.stax.JDOMStreamReader:void setupNamespaces(org.jdom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.util.stax.JDOMStreamReader:void <init>(org.jdom.Element)",
            "org.apache.cxf.aegis.util.stax.JDOMStreamReader:int nextChild()"
        ]
    },
    "org.apache.cxf.aegis.util.stax.JDOMNamespaceContext:java.lang.String rawGetPrefix(org.jdom.Element,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.util.stax.JDOMStreamWriter:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.aegis.util.stax.JDOMNamespaceContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.aegis.util.stax.JDOMNamespaceContext:java.lang.String rawGetPrefix(org.jdom.Element,java.lang.String)",
            "org.apache.cxf.aegis.xml.jdom.JDOMWriter:java.lang.String getUniquePrefix(org.jdom.Element,java.lang.String)"
        ]
    },
    "org.apache.cxf.aegis.util.stax.JDOMNamespaceContext:void rawGetPrefixes(org.jdom.Element,java.lang.String,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.util.stax.JDOMNamespaceContext:java.util.Iterator getPrefixes(java.lang.String)",
            "org.apache.cxf.aegis.util.stax.JDOMNamespaceContext:void rawGetPrefixes(org.jdom.Element,java.lang.String,java.util.List)"
        ]
    },
    "org.apache.cxf.aegis.databinding.AegisDatabinding:void initialize(org.apache.cxf.service.Service)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.AbstractServiceFactoryBean:void initializeDataBindings()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromWSDL(java.lang.String)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromClass()"
        ]
    },
    "org.apache.cxf.aegis.databinding.AegisDatabinding:void initializeOperation(org.apache.cxf.service.Service,org.apache.cxf.aegis.type.TypeMapping,org.apache.cxf.service.model.OperationInfo,java.util.Set)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void initialize(org.apache.cxf.service.Service)"
        ]
    },
    "org.apache.cxf.aegis.databinding.AegisDatabinding:void initializeOperationTypes(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.OperationInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void initialize(org.apache.cxf.service.Service)"
        ]
    },
    "org.apache.cxf.aegis.databinding.AegisDatabinding:void initializeMessage(org.apache.cxf.service.Service,org.apache.cxf.aegis.type.TypeMapping,org.apache.cxf.service.model.AbstractMessageContainer,int,java.util.Set)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void initializeOperation(org.apache.cxf.service.Service,org.apache.cxf.aegis.type.TypeMapping,org.apache.cxf.service.model.OperationInfo,java.util.Set)"
        ]
    },
    "org.apache.cxf.aegis.databinding.AegisDatabinding:void initializeMessageTypes(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.AbstractMessageContainer,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void initializeOperationTypes(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.OperationInfo)"
        ]
    },
    "org.apache.cxf.aegis.databinding.AegisDatabinding:void addDependencies(java.util.Set,org.apache.cxf.aegis.type.Type)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void initialize(org.apache.cxf.service.Service)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void initializeMessage(org.apache.cxf.service.Service,org.apache.cxf.aegis.type.TypeMapping,org.apache.cxf.service.model.AbstractMessageContainer,int,java.util.Set)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void addDependencies(java.util.Set,org.apache.cxf.aegis.type.Type)"
        ]
    },
    "org.apache.cxf.aegis.databinding.AegisDatabinding:void createSchemas(org.apache.cxf.service.Service,java.util.Set)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void initialize(org.apache.cxf.service.Service)"
        ]
    },
    "org.apache.cxf.aegis.AegisContext:void processRootTypes()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.AegisContext:void initialize()"
        ]
    },
    "org.apache.cxf.aegis.type.basic.XMLBeanTypeInfo:org.w3c.dom.Element getPropertyElement(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.basic.XMLBeanTypeInfo:boolean registerType(java.beans.PropertyDescriptor)",
            "org.apache.cxf.aegis.type.basic.XMLBeanTypeInfo:void mapProperty(java.beans.PropertyDescriptor)"
        ]
    },
    "org.apache.cxf.aegis.type.basic.BeanType:void writeObjectInternal(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.basic.BeanType:void writeObjectFromObjectType(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,boolean)",
            "org.apache.cxf.aegis.type.basic.BeanType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)"
        ]
    },
    "org.apache.cxf.aegis.type.basic.BeanType:java.util.Set getDependencies()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void addDependencies(java.util.Set,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.encoded.SoapRefType:java.util.Set getDependencies()"
        ]
    },
    "org.apache.cxf.aegis.type.basic.BeanType:void writeSchema(org.apache.ws.commons.schema.XmlSchema)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void createSchemas(org.apache.cxf.service.Service,java.util.Set)",
            "org.apache.cxf.aegis.type.encoded.SoapRefType:void writeSchema(org.apache.ws.commons.schema.XmlSchema)"
        ]
    },
    "org.apache.cxf.aegis.type.basic.BeanTypeInfo:boolean containsPropertyName(java.util.List,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.basic.BeanTypeInfo:void getInterfacePropertyDescriptors(java.lang.Class,java.util.List,java.util.Set)"
        ]
    },
    "org.apache.cxf.aegis.type.mtom.AttachmentUtil:org.apache.cxf.message.Attachment getAttachment(java.lang.String,java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.mtom.AbstractXOPType:java.lang.Object readInclude(java.lang.String,org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)"
        ]
    },
    "org.apache.cxf.aegis.type.encoded.ArrayTypeInfo:void <init>(javax.xml.namespace.NamespaceContext,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.encoded.ArrayTypeInfo:void <init>(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.type.TypeMapping)",
            "org.apache.cxf.aegis.type.encoded.ArrayTypeInfo:void <init>(javax.xml.namespace.NamespaceContext,java.lang.String)"
        ]
    },
    "org.apache.cxf.aegis.type.encoded.ArrayTypeInfo:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:java.util.List enumeratorValues(org.apache.ws.commons.schema.XmlSchemaSimpleType)",
            "org.apache.cxf.common.logging.Log4jLogger$HandlerWrapper:void append(org.apache.log4j.spi.LoggingEvent)",
            "org.apache.cxf.common.util.PackageUtils:java.lang.String combine(java.util.List,char)",
            "org.apache.cxf.configuration.spring.SpringBeanMap:void processBeans(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.message.MessageUtils:boolean isTrue(java.lang.Object)",
            "org.apache.cxf.endpoint.ClientImpl:boolean isThreadLocalRequestContext()",
            "org.apache.cxf.ws.addressing.ContextUtils:java.lang.String getAction(org.apache.cxf.service.model.Extensible)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationOutInterceptor:void renewToken(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.ws.security.tokenstore.SecurityToken,org.apache.cxf.ws.security.policy.model.SecureConversationToken)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.policy.interceptors.IssuedTokenInterceptorProvider$IssuedTokenOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationTokenInterceptorProvider:java.lang.String setupClient(org.apache.cxf.ws.security.trust.STSClient,org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.ws.security.policy.model.SecureConversationToken,boolean)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:java.lang.String checkAsymetricBinding(org.apache.cxf.ws.policy.AssertionInfoMap,java.lang.String,org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:java.lang.String checkSymetricBinding(org.apache.cxf.ws.policy.AssertionInfoMap,java.lang.String,org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.wsdl.AbstractWSDLPlugin:java.lang.String getOption(java.util.Map,java.lang.String)",
            "org.apache.cxf.tools.common.toolspec.parser.ErrorVisitor:java.lang.String toString()",
            "org.apache.cxf.tools.util.URIParserUtil:java.lang.String combine(java.util.List,char)",
            "org.apache.cxf.aegis.xml.jdom.JDOMWriter:void writeValue(java.lang.Object)",
            "org.apache.cxf.aegis.xml.jdom.JDOMWriter:void writeValue(java.lang.Object,java.lang.String,java.lang.String)",
            "org.apache.cxf.aegis.xml.jdom.AttributeWriter:void writeValue(java.lang.Object)",
            "org.apache.cxf.aegis.xml.stax.AttributeWriter:void writeValue(java.lang.Object)",
            "org.apache.cxf.aegis.xml.stax.ElementWriter:void writeValue(java.lang.Object)",
            "org.apache.cxf.aegis.type.basic.BigIntegerType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.BigDecimalType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.ArrayTypeInfo:void writeAttribute(org.apache.cxf.aegis.xml.MessageWriter)",
            "org.apache.cxf.aegis.type.encoded.SoapArrayType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.jaxws.EndpointImpl:void checkProperties()",
            "org.apache.cxf.xmlbeans.tools.XMLBeansToolingDataBinding:void initialize(org.apache.cxf.tools.common.ToolContext)"
        ]
    },
    "org.apache.cxf.aegis.type.encoded.SoapArrayType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.AegisXMLStreamDataReader:java.lang.Object read(javax.xml.stream.XMLStreamReader,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.basic.ObjectType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.BeanType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.ArrayType:java.util.Collection readCollection(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.SoapRefType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.collection.MapType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)"
        ]
    },
    "org.apache.cxf.aegis.type.encoded.SoapArrayType:java.lang.Object makeArray(java.util.List,java.util.List,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.encoded.SoapArrayType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.SoapArrayType:java.lang.Object makeArray(java.util.List,java.util.List,java.lang.Class)"
        ]
    },
    "org.apache.cxf.aegis.type.encoded.TrailingBlocks:java.util.List writeBlocks(org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.aegis.type.encoded.SoapRefRegistry:void addInstance(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.encoded.TrailingBlocks:java.util.List readBlocks(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)"
        ]
    },
    "org.apache.cxf.aegis.type.XMLTypeCreator:org.w3c.dom.Element getBestMatch(org.w3c.dom.Element,java.lang.reflect.Method,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.XMLTypeCreator:org.apache.cxf.aegis.type.AbstractTypeCreator$TypeClassInfo createClassInfo(java.lang.reflect.Method,int)"
        ]
    },
    "org.apache.cxf.aegis.type.collection.MapType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.databinding.XMLStreamDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.aegis.databinding.ElementDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,org.w3c.dom.Element)",
            "org.apache.cxf.aegis.AegisXMLStreamDataWriter:void write(java.lang.Object,javax.xml.namespace.QName,boolean,javax.xml.stream.XMLStreamWriter,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.basic.ObjectType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.BeanType:void writeObjectInternal(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,boolean)",
            "org.apache.cxf.aegis.type.basic.BeanType:void writeElement(javax.xml.namespace.QName,java.lang.Object,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.ArrayType:void writeValue(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type,java.lang.String,java.lang.String)",
            "org.apache.cxf.aegis.type.encoded.StructType:void writeElement(javax.xml.namespace.QName,java.lang.Object,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.SoapArrayType:void writeValue(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.collection.MapType:void writeEntry(org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.type.Type,java.util.Map$Entry)"
        ]
    },
    "org.apache.cxf.aegis.type.collection.CollectionType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.databinding.XMLStreamDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.aegis.databinding.ElementDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,org.w3c.dom.Element)",
            "org.apache.cxf.aegis.AegisXMLStreamDataWriter:void write(java.lang.Object,javax.xml.namespace.QName,boolean,javax.xml.stream.XMLStreamWriter,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.basic.ObjectType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.BeanType:void writeObjectInternal(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,boolean)",
            "org.apache.cxf.aegis.type.basic.BeanType:void writeElement(javax.xml.namespace.QName,java.lang.Object,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.ArrayType:void writeValue(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type,java.lang.String,java.lang.String)",
            "org.apache.cxf.aegis.type.encoded.StructType:void writeElement(javax.xml.namespace.QName,java.lang.Object,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.SoapArrayType:void writeValue(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.collection.MapType:void writeEntry(org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.type.Type,java.util.Map$Entry)"
        ]
    },
    "org.apache.cxf.jaxws.JaxWsProxyFactoryBean:boolean needWrapperClassInterceptor(org.apache.cxf.service.model.ServiceInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.JaxWsProxyFactoryBean:java.lang.Object create()"
        ]
    },
    "org.apache.cxf.jaxws.JaxWsProxyFactoryBean:void buildHandlerChain(org.apache.cxf.jaxws.JaxWsClientProxy)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.JaxWsProxyFactoryBean:org.apache.cxf.frontend.ClientProxy clientClientProxy(org.apache.cxf.endpoint.Client)"
        ]
    },
    "org.apache.cxf.jaxws.handler.HandlerResolverImpl:java.util.List createHandlerChain(javax.xml.ws.handler.PortInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.handler.HandlerResolverImpl:java.util.List getHandlerChain(javax.xml.ws.handler.PortInfo)"
        ]
    },
    "org.apache.cxf.jaxws.handler.HandlerChainInvoker:void <init>(java.util.List,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.handler.HandlerChainInvoker:void <init>(java.util.List)",
            "org.apache.cxf.jaxws.handler.AbstractJAXWSHandlerInterceptor:org.apache.cxf.jaxws.handler.HandlerChainInvoker getInvoker(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxws.handler.HandlerChainInvoker:boolean invokeHandleFault(java.util.List,javax.xml.ws.handler.MessageContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.handler.HandlerChainInvoker:boolean invokeHandlerChainHandleFault(java.util.List,javax.xml.ws.handler.MessageContext)"
        ]
    },
    "org.apache.cxf.jaxws.handler.HandlerChainInvoker:boolean invokeHandleMessage(java.util.List,javax.xml.ws.handler.MessageContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.handler.HandlerChainInvoker:boolean invokeHandlerChain(java.util.List,javax.xml.ws.handler.MessageContext)"
        ]
    },
    "org.apache.cxf.jaxws.handler.HandlerChainBuilder:java.util.List buildHandlerChainFromConfiguration(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxws.handler.HandlerChainBuilder:java.util.List sortHandlers(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.handler.AnnotationHandlerChainBuilder:java.util.List buildHandlerChainFromClass(java.lang.Class,java.util.List,javax.xml.namespace.QName,javax.xml.namespace.QName,java.lang.String)",
            "org.apache.cxf.jaxws.handler.HandlerChainBuilder:java.util.List buildHandlerChainFromConfiguration(org.apache.cxf.jaxws.javaee.PortComponentHandlerType)",
            "org.apache.cxf.jaxws.handler.HandlerChainBuilder:java.util.List buildHandlerChainFromConfiguration(java.util.List)"
        ]
    },
    "org.apache.cxf.jaxws.handler.HandlerChainBuilder:void configureHandler(javax.xml.ws.handler.Handler,org.apache.cxf.jaxws.javaee.PortComponentHandlerType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.handler.HandlerChainBuilder:java.util.List buildHandlerChain(org.apache.cxf.jaxws.javaee.PortComponentHandlerType,java.lang.ClassLoader)"
        ]
    },
    "org.apache.cxf.jaxws.handler.soap.SOAPMessageContextImpl:java.lang.Object[] getHeaders(javax.xml.namespace.QName,javax.xml.bind.JAXBContext,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxws.handler.soap.SOAPHandlerInterceptor:java.util.Set getUnderstoodHeaders()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.soap.interceptor.MustUnderstandInterceptor:void initServiceSideInfo(java.util.Set,org.apache.cxf.binding.soap.SoapMessage,java.util.Set)"
        ]
    },
    "org.apache.cxf.jaxws.handler.soap.SOAPHandlerInterceptor:javax.xml.ws.handler.MessageContext createProtocolMessageContext(org.apache.cxf.binding.soap.SoapMessage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerInterceptor:boolean handleMessageInternal(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerInterceptor:javax.xml.ws.handler.MessageContext createProtocolMessageContext(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxws.handler.soap.SOAPHandlerFaultInInterceptor:java.util.Set getUnderstoodHeaders()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.soap.interceptor.MustUnderstandInterceptor:void initServiceSideInfo(java.util.Set,org.apache.cxf.binding.soap.SoapMessage,java.util.Set)"
        ]
    },
    "org.apache.cxf.jaxws.handler.soap.SOAPHandlerFaultOutInterceptor:java.util.Set getUnderstoodHeaders()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.soap.interceptor.MustUnderstandInterceptor:void initServiceSideInfo(java.util.Set,org.apache.cxf.binding.soap.SoapMessage,java.util.Set)"
        ]
    },
    "org.apache.cxf.jaxws.support.JaxWsEndpointImpl:boolean hasUsingAddressing(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.support.JaxWsEndpointImpl:void extractWsdlExtensibilities(org.apache.cxf.service.model.EndpointInfo)"
        ]
    },
    "org.apache.cxf.jaxws.support.JaxWsEndpointImpl:boolean addressingRequired(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.support.JaxWsEndpointImpl:void extractWsdlExtensibilities(org.apache.cxf.service.model.EndpointInfo)"
        ]
    },
    "org.apache.cxf.jaxws.support.JaxWsEndpointImpl:javax.xml.ws.soap.AddressingFeature getAddressingFeature()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.support.JaxWsEndpointImpl:void resolveFeatures()"
        ]
    },
    "org.apache.cxf.jaxws.support.JaxWsEndpointImpl:org.apache.cxf.ws.addressing.WSAddressingFeature getWSAddressingFeature()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.support.JaxWsEndpointImpl:void resolveFeatures()",
            "org.apache.cxf.jaxws.support.JaxWsEndpointImpl:void addAddressingFeature(org.apache.cxf.feature.AbstractFeature)",
            "org.apache.cxf.jaxws.support.JaxWsEndpointImpl:void removeAddressingFeature()"
        ]
    },
    "org.apache.cxf.jaxws.support.JaxWsEndpointImpl:javax.xml.ws.soap.MTOMFeature getMTOMFeature()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.support.JaxWsEndpointImpl:void createJaxwsBinding()"
        ]
    },
    "org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean:void initializeWSDLOperationsForProvider()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean:void initializeWSDLOperations()"
        ]
    },
    "org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean:org.apache.cxf.service.model.FaultInfo getFaultInfo(org.apache.cxf.service.model.OperationInfo,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean:void buildWSAActions(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)"
        ]
    },
    "org.apache.cxf.jaxws.support.JaxWsImplementorInfo:java.lang.String getWsdlLocation()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.JaxwsServiceBuilder:java.io.File getOutputFile()",
            "org.apache.cxf.jaxws.support.WebServiceProviderConfiguration:java.lang.String getWsdlURL()",
            "org.apache.cxf.jaxws.support.JaxWsServiceConfiguration:java.lang.String getWsdlURL()"
        ]
    },
    "org.apache.cxf.jaxws.support.JaxWsImplementorInfo:javax.xml.namespace.QName getInterfaceName()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.support.JaxWsServiceConfiguration:javax.xml.namespace.QName getInterfaceName()"
        ]
    },
    "org.apache.cxf.jaxws.support.JaxWsImplementorInfo:java.lang.String getImplementorClassName()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.support.JaxWsImplementorInfo:void initialize()"
        ]
    },
    "org.apache.cxf.jaxws.WrapperClassGenerator:java.util.Set generate()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean:java.util.Set generatedWrapperBeanClass()"
        ]
    },
    "org.apache.cxf.jaxws.WrapperClassGenerator:void createWrapperClass(org.apache.cxf.service.model.MessagePartInfo,org.apache.cxf.service.model.MessageInfo,org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.WrapperClassGenerator:java.util.Set generate()"
        ]
    },
    "org.apache.cxf.jaxws.WrapperClassGenerator:void addJAXBAnnotations(org.objectweb.asm.FieldVisitor,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.WrapperClassGenerator:void generateMessagePart(org.objectweb.asm.ClassWriter,org.apache.cxf.service.model.MessagePartInfo,java.lang.reflect.Method,java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxws.ServiceImpl:void initializePorts()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.ServiceImpl:void <init>(org.apache.cxf.Bus,java.net.URL,javax.xml.namespace.QName,java.lang.Class)"
        ]
    },
    "org.apache.cxf.jaxws.ServiceImpl:org.apache.cxf.service.factory.AbstractServiceFactoryBean createDispatchService(org.apache.cxf.databinding.DataBinding)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.ServiceImpl:javax.xml.ws.Dispatch createDispatch(javax.xml.namespace.QName,java.lang.Class,javax.xml.ws.Service$Mode,javax.xml.ws.WebServiceFeature[])",
            "org.apache.cxf.jaxws.ServiceImpl:javax.xml.ws.Dispatch createDispatch(javax.xml.namespace.QName,javax.xml.bind.JAXBContext,javax.xml.ws.Service$Mode,javax.xml.ws.WebServiceFeature[])"
        ]
    },
    "org.apache.cxf.jaxws.ServiceImpl:java.lang.Object getPort(org.apache.cxf.ws.addressing.EndpointReferenceType,java.lang.Class,javax.xml.ws.WebServiceFeature[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.ServiceImpl:java.lang.Object getPort(org.apache.cxf.ws.addressing.EndpointReferenceType,java.lang.Class)",
            "org.apache.cxf.jaxws.ServiceImpl:java.lang.Object getPort(javax.xml.ws.EndpointReference,java.lang.Class,javax.xml.ws.WebServiceFeature[])"
        ]
    },
    "org.apache.cxf.jaxws.ServiceImpl:javax.xml.ws.Dispatch createDispatch(javax.xml.namespace.QName,java.lang.Class,javax.xml.ws.Service$Mode,javax.xml.ws.WebServiceFeature[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.ServiceImpl:javax.xml.ws.Dispatch createDispatch(javax.xml.namespace.QName,java.lang.Class,javax.xml.ws.Service$Mode)",
            "org.apache.cxf.jaxws.ServiceImpl:javax.xml.ws.Dispatch createDispatch(javax.xml.ws.EndpointReference,java.lang.Class,javax.xml.ws.Service$Mode,javax.xml.ws.WebServiceFeature[])"
        ]
    },
    "org.apache.cxf.jaxws.ServiceImpl:javax.xml.ws.Dispatch createDispatch(javax.xml.namespace.QName,javax.xml.bind.JAXBContext,javax.xml.ws.Service$Mode,javax.xml.ws.WebServiceFeature[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.ServiceImpl:javax.xml.ws.Dispatch createDispatch(javax.xml.namespace.QName,javax.xml.bind.JAXBContext,javax.xml.ws.Service$Mode)",
            "org.apache.cxf.jaxws.ServiceImpl:javax.xml.ws.Dispatch createDispatch(javax.xml.ws.EndpointReference,javax.xml.bind.JAXBContext,javax.xml.ws.Service$Mode,javax.xml.ws.WebServiceFeature[])"
        ]
    },
    "org.apache.cxf.jaxws.spi.ProviderImpl:javax.xml.ws.wsaddressing.W3CEndpointReference createW3CEndpointReference(java.lang.String,javax.xml.namespace.QName,javax.xml.namespace.QName,java.util.List,java.lang.String,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxws.JaxWsServerFactoryBean:void buildHandlerChain()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.JaxWsServerFactoryBean:void init()"
        ]
    },
    "org.apache.cxf.jaxws.DispatchImpl:void addInvokeOperation(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.DispatchImpl:void <init>(org.apache.cxf.endpoint.Client,javax.xml.ws.Service$Mode,javax.xml.bind.JAXBContext,java.lang.Class)"
        ]
    },
    "org.apache.cxf.jaxws.interceptors.MessageModeInInterceptor$MultiPartDataSource:void nextCurrent()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.interceptors.MessageModeInInterceptor$MultiPartDataSource:void access$000(org.apache.cxf.jaxws.interceptors.MessageModeInInterceptor$MultiPartDataSource)"
        ]
    },
    "org.apache.cxf.jaxws.interceptors.WebFaultOutInterceptor:org.apache.cxf.service.model.MessagePartInfo getFaultMessagePart(javax.xml.namespace.QName,org.apache.cxf.service.model.OperationInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.interceptors.WebFaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxws.interceptors.HolderOutInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxws.interceptors.WrapperClassOutInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxws.interceptors.WrapperClassOutInterceptor:org.apache.cxf.databinding.WrapperHelper createWrapperHelper(org.apache.cxf.databinding.WrapperCapableDatabinding,org.apache.cxf.service.model.MessageInfo,org.apache.cxf.service.model.MessageInfo,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.interceptors.WrapperClassOutInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxws.interceptors.HolderInInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxws.interceptors.WrapperClassInInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxws.interceptors.WrapperClassInInterceptor:org.apache.cxf.databinding.WrapperHelper createWrapperHelper(org.apache.cxf.databinding.WrapperCapableDatabinding,org.apache.cxf.service.model.MessageInfo,org.apache.cxf.service.model.MessageInfo,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.interceptors.WrapperClassInInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxws.interceptors.SwAOutInterceptor:void processAttachments(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.binding.soap.model.SoapBodyInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.interceptors.SwAOutInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)"
        ]
    },
    "org.apache.cxf.jaxws.binding.http.HTTPBindingImpl:void validate()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.binding.http.HTTPBindingImpl:void setHandlerChain(java.util.List)"
        ]
    },
    "org.apache.cxf.jaxws.context.WrappedMessageContext:void copyScoped(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.context.WrappedMessageContext:void <init>(java.util.Map,org.apache.cxf.message.Exchange,javax.xml.ws.handler.MessageContext$Scope)"
        ]
    },
    "org.apache.cxf.jaxws.context.WrappedMessageContext:void clear()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.WeakIdentityHashMap:void clear()",
            "org.apache.cxf.common.util.CacheMap:void clear()",
            "org.apache.cxf.common.util.TwoStageMap:void clear()",
            "org.apache.cxf.jaxb.JAXBDataBinding:void clearCaches()",
            "org.apache.cxf.management.jmx.export.runtime.ModelMBeanInfoSupporter:void clear()",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void postShutdown()",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.ClientImpl:void invoke(org.apache.cxf.endpoint.ClientCallback,org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[])",
            "org.apache.cxf.tools.common.VelocityGenerator:void clearAttributes()"
        ]
    },
    "org.apache.cxf.jaxws.context.WrappedMessageContext:java.util.Set keySet()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.util.Set keySet()",
            "org.apache.cxf.common.util.CacheMap:void updateMainDataMap()",
            "org.apache.cxf.common.util.CacheMap:java.util.Set keySet()",
            "org.apache.cxf.common.util.TwoStageMap:java.util.Set keySet()",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.util.Set keySet()",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.util.Collection values()",
            "org.apache.cxf.message.MessageImpl:java.util.Set getContentFormats()",
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.util.Map keepInOrder(java.util.Map,org.apache.cxf.service.model.OperationInfo,java.util.List)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:org.apache.cxf.message.MessageContentsList getParameters(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.transport.http.HTTPConduit:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:void transferProtocolHeadersToURLConnection(org.apache.cxf.message.Message,java.net.URLConnection)",
            "org.apache.cxf.transport.http.HTTPConduit:void logProtocolHeaders(java.util.logging.Level,org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void copyResponseHeaders(org.apache.cxf.message.Message,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponseInternal()",
            "org.apache.cxf.transport.http.gzip.GZIPInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.servlet.ServletTransportFactory:java.util.Set getDestinationsPaths()",
            "org.apache.cxf.NSManager:java.util.Set getNamespaces()",
            "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:java.util.Collection getTokenIdentifiers()",
            "org.apache.cxf.wsdl.JAXBExtensionHelper$1:java.util.Iterator getPrefixes(java.lang.String)",
            "org.apache.cxf.tools.common.Tag:boolean equals(java.lang.Object)",
            "org.apache.cxf.tools.common.ToolContext:void addParameters(java.util.Map)",
            "org.apache.cxf.tools.common.VelocityGenerator:void doWrite(java.lang.String,java.io.Writer)",
            "org.apache.cxf.tools.common.model.JavaParameter:java.util.Collection getAnnotationTags()",
            "org.apache.cxf.wsdl11.SchemaUtil:void extractSchema(javax.wsdl.Definition,org.apache.cxf.common.xmlschema.SchemaCollection,java.util.List)",
            "org.apache.cxf.wsdl11.SchemaUtil:void addSchema(java.lang.String,javax.wsdl.extensions.schema.Schema)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void parseWSDL(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:java.util.Collection getImports(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addExtensibilityAttributes(javax.wsdl.extensions.AttributeExtensible,java.util.Map)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void activateAll()",
            "org.apache.cxf.attachment.AttachmentImpl:java.util.Iterator getHeaderNames()",
            "org.apache.cxf.aegis.util.jdom.StaxBuilder:void buildTree(org.jdom.JDOMFactory,javax.xml.stream.XMLStreamReader,org.jdom.Document)",
            "org.apache.cxf.jaxws.ServiceImpl:java.lang.Object getPort(org.apache.cxf.ws.addressing.EndpointReferenceType,java.lang.Class,javax.xml.ws.WebServiceFeature[])",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:void copyScoped(java.util.Map)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:void clear()",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:java.util.Set keySet()"
        ]
    },
    "org.apache.cxf.jaxws.context.WrappedMessageContext:java.util.Set entrySet()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.MapNamespaceContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.util.Set entrySet()",
            "org.apache.cxf.common.util.CacheMap:java.util.Set entrySet()",
            "org.apache.cxf.common.util.CacheMap:void putAll(java.util.Map)",
            "org.apache.cxf.common.util.TwoStageMap:void putAll(java.util.Map)",
            "org.apache.cxf.common.util.TwoStageMap:java.util.Set entrySet()",
            "org.apache.cxf.jaxb.io.DataWriterImpl:javax.xml.bind.Marshaller createMarshaller(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.jaxb.io.DataReaderImpl:javax.xml.bind.Unmarshaller createUnmarshaller()",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.transport.http.HTTPConduit:java.lang.String extractLocation(java.util.Map)",
            "org.apache.cxf.transport.DestinationFactoryManagerImpl:org.apache.cxf.transport.DestinationFactory getDestinationFactoryForUri(java.lang.String)",
            "org.apache.cxf.transport.jms.JMSUtils:void addProtocolHeaders(javax.jms.Message,java.util.Map)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void addMustUnderstandAttribute(org.w3c.dom.Element,javax.xml.namespace.QName,org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.addressing.AddressingPropertiesImpl)",
            "org.apache.cxf.ws.policy.attachment.wsdl11.Wsdl11AttachmentPolicyProvider:org.apache.neethi.Policy getElementPolicy(org.apache.cxf.service.model.Extensible,boolean,org.apache.cxf.service.model.DescriptionInfo)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void addSignatureParts(java.util.Map,java.util.List)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void doEndorsedSignatures(java.util.Map,boolean,boolean)",
            "org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor:org.apache.ws.security.WSSecurityEngine createSecurityEngine(java.util.Map)",
            "org.apache.cxf.databinding.AbstractDataBinding:void setNamespaceMap(java.util.Map)",
            "org.apache.cxf.databinding.AbstractDataBinding:void checkNamespaceMap(java.util.Map)",
            "org.apache.cxf.wsdl.JAXBExtensionHelper$1:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils$SchemaLSResourceResolver:org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.SchemaInfo getOrCreateSchema(org.apache.cxf.service.model.ServiceInfo,java.lang.String,boolean)",
            "org.apache.cxf.binding.soap.interceptor.Soap12FaultOutInterceptor$Soap12FaultOutInterceptorInternal:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor:void writeSoapEnvelopeStart(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.Soap11FaultOutInterceptor$Soap11FaultOutInterceptorInternal:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.tools.common.Tag:java.lang.String formatAttribute(org.apache.cxf.tools.common.Tag)",
            "org.apache.cxf.tools.common.ProcessorTestBase:boolean assertXmlEquals(java.io.File,java.io.File,java.util.List)",
            "org.apache.cxf.tools.common.ProcessorTestBase:void assertAttributesEquals(javax.xml.namespace.QName,java.util.Map,java.util.Map,java.util.Collection)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildService(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:org.apache.cxf.service.model.ServiceSchemaInfo getSchemasForDefinition(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void putSchemasForDefinition(javax.wsdl.Definition,org.apache.cxf.service.model.ServiceSchemaInfo)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void removeDefinition(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildMockServices(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildInterfaceOperation(org.apache.cxf.service.model.InterfaceInfo,javax.wsdl.Operation)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:void putAll(java.util.Map)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void createSchemas(org.apache.cxf.service.Service,java.util.Set)",
            "org.apache.cxf.aegis.type.collection.MapType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.jaxws.JaxWsClientProxy:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:java.util.Set entrySet()",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:void putAll(java.util.Map)",
            "org.apache.cxf.jaxws.AbstractJAXWSMethodInvoker:java.util.Map removeHandlerProperties(org.apache.cxf.jaxws.context.WrappedMessageContext)",
            "org.apache.cxf.jaxws.AbstractJAXWSMethodInvoker:void addHandlerProperties(org.apache.cxf.jaxws.context.WrappedMessageContext,java.util.Map)",
            "org.apache.cxf.jaxws.AbstractJAXWSMethodInvoker:void updateWebServiceContext(org.apache.cxf.message.Exchange,javax.xml.ws.handler.MessageContext)"
        ]
    },
    "org.apache.cxf.jaxws.context.WrappedMessageContext:void putAll(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.MapNamespaceContext:void addNamespaces(java.util.Map)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:void putAll(java.util.Map)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void <init>(org.apache.cxf.Bus,java.util.Map,java.util.Map)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] processResult(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,java.util.Map)",
            "org.apache.cxf.endpoint.ClientImpl$EchoContext:void putAll(java.util.Map)",
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.RelatesToType convert(org.apache.cxf.ws.addressing.v200408.Relationship)",
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.RelatesToType convert(org.apache.cxf.ws.addressing.v200403.Relationship)",
            "org.apache.cxf.ws.addressing.VersionTransformer:void putAll(java.util.Map,java.util.Map)",
            "org.apache.cxf.ws.security.trust.STSClient:void setProperties(java.util.Map)",
            "org.apache.cxf.ws.security.trust.STSClient:org.apache.cxf.ws.security.tokenstore.SecurityToken requestSecurityToken(java.lang.String,java.lang.String,java.lang.String,org.apache.cxf.ws.security.tokenstore.SecurityToken)",
            "org.apache.cxf.ws.security.trust.STSClient:boolean validateSecurityToken(org.apache.cxf.ws.security.tokenstore.SecurityToken,java.lang.String)",
            "org.apache.cxf.ws.security.trust.STSClient:void cancelSecurityToken(org.apache.cxf.ws.security.tokenstore.SecurityToken)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void doEndorse()",
            "org.apache.cxf.tools.common.ToolContext:void loadDefaultNS2Pck(java.io.InputStream)",
            "org.apache.cxf.tools.common.ToolContext:void loadDefaultExcludes(java.io.InputStream)",
            "org.apache.cxf.wsdl11.SchemaUtil:void extractSchema(javax.wsdl.Definition,org.apache.cxf.common.xmlschema.SchemaCollection,java.util.List)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void getSchemas(javax.wsdl.Definition,org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.jaxws.JaxWsProxyFactoryBean:org.apache.cxf.frontend.ClientProxy clientClientProxy(org.apache.cxf.endpoint.Client)",
            "org.apache.cxf.jaxws.EndpointImpl:org.apache.cxf.endpoint.ServerImpl getServer(java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxws.AbstractJAXWSMethodInvoker:java.util.Map removeHandlerProperties(org.apache.cxf.jaxws.context.WrappedMessageContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.JAXWSMethodInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object,java.lang.reflect.Method,java.util.List)"
        ]
    },
    "org.apache.cxf.jaxws.AbstractJAXWSMethodInvoker:void addHandlerProperties(org.apache.cxf.jaxws.context.WrappedMessageContext,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.JAXWSMethodInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object,java.lang.reflect.Method,java.util.List)"
        ]
    },
    "org.apache.cxf.jaxws.AbstractJAXWSMethodInvoker:void updateWebServiceContext(org.apache.cxf.message.Exchange,javax.xml.ws.handler.MessageContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.JAXWSMethodInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object,java.lang.reflect.Method,java.util.List)"
        ]
    },
    "org.apache.cxf.xmlbeans.XmlBeansDataBinding:void initialize(org.apache.cxf.service.Service)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.AbstractServiceFactoryBean:void initializeDataBindings()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromWSDL(java.lang.String)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromClass()"
        ]
    },
    "org.apache.cxf.attachment.LazyAttachmentCollection:int size()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.CollectionUtils:java.util.Collection diff(java.util.Collection,java.util.Collection)",
            "org.apache.cxf.common.util.CollectionUtils:boolean isEmpty(java.util.Collection)",
            "org.apache.cxf.configuration.spring.SpringBeanQNameMap:void processBeans(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.jaxb.JAXBEncoderDecoder:void marshall(javax.xml.bind.Marshaller,java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,java.lang.Object)",
            "org.apache.cxf.jaxb.io.DataWriterImpl:javax.xml.bind.Marshaller createMarshaller(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.util.Map keepInOrder(java.util.Map,org.apache.cxf.service.model.OperationInfo,java.util.List)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:void assertClientPolicy(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPClientPolicy)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:void assertServerPolicy(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPServerPolicy)",
            "org.apache.cxf.transport.jms.continuations.JMSContinuation:void updateContinuations(boolean)",
            "org.apache.cxf.transport.jms.JMSConduit:void sendExchange(org.apache.cxf.message.Exchange,java.lang.Object)",
            "org.apache.cxf.ws.policy.AssertionInfoMap:void <init>(java.util.Collection)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:java.util.Collection findAndAssertPolicy(javax.xml.namespace.QName)",
            "org.apache.cxf.ws.rm.AbstractRMInterceptor:void assertReliability(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.RMOutInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.RMOutInterceptor:void addAcknowledgements(org.apache.cxf.ws.rm.Destination,org.apache.cxf.ws.rm.RMProperties,org.apache.cxf.ws.rm.Identifier,org.apache.cxf.ws.addressing.v200408.AttributedURI)",
            "org.apache.cxf.ws.rm.RMManager:void clientCreated(org.apache.cxf.endpoint.Client)",
            "org.apache.cxf.ws.rm.RMManager:void recoverReliableEndpoint(org.apache.cxf.endpoint.Endpoint,org.apache.cxf.transport.Conduit)",
            "org.apache.cxf.ws.rm.RMEndpoint:void shutdown()",
            "org.apache.cxf.service.invoker.PooledFactory:void <init>(java.util.Collection)",
            "org.apache.cxf.service.model.BindingOperationInfo:void <init>(org.apache.cxf.service.model.BindingInfo,org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.tools.common.toolspec.parser.Option:boolean isSatisfied(org.apache.cxf.tools.common.toolspec.parser.ErrorVisitor)",
            "org.apache.cxf.tools.common.toolspec.parser.Argument:boolean isSatisfied(org.apache.cxf.tools.common.toolspec.parser.ErrorVisitor)",
            "org.apache.cxf.tools.common.model.JavaMethod:java.util.List getParameterList(boolean)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:int size()",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$3:int size()",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$2:int size()",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$1:int size()",
            "org.apache.cxf.aegis.type.basic.ArrayType:java.util.Collection readCollection(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.ArrayType:java.lang.Object makeArray(java.lang.Class,java.util.Collection)"
        ]
    },
    "org.apache.cxf.attachment.LazyAttachmentCollection:java.lang.Object[] toArray()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.JAXBToStringBuilder:java.lang.String valueOf(java.lang.Object,org.apache.commons.lang.builder.ToStringStyle)",
            "org.apache.cxf.aegis.type.basic.ArrayType:java.lang.Object makeArray(java.lang.Class,java.util.Collection)"
        ]
    },
    "org.apache.cxf.attachment.LazyAttachmentCollection:java.lang.Object[] toArray(java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.JAXBEncoderDecoder:void marshall(javax.xml.bind.Marshaller,java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,java.lang.Object)",
            "org.apache.cxf.jaxb.io.DataWriterImpl:javax.xml.bind.Marshaller createMarshaller(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.management.jmx.export.runtime.ModelMBeanInfoSupporter:javax.management.modelmbean.ModelMBeanInfo buildModelMBeanInfo(javax.management.Descriptor)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void postShutdown()",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.validation.Schema createSchema(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.aegis.type.basic.ArrayType:java.lang.Object makeArray(java.lang.Class,java.util.Collection)"
        ]
    },
    "org.apache.cxf.attachment.AttachmentDeserializer:org.apache.cxf.message.Attachment createAttachment(javax.mail.internet.InternetHeaders)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.AttachmentDeserializer:org.apache.cxf.attachment.AttachmentImpl readNext()"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection retransmit(java.net.HttpURLConnection,java.net.URL,org.apache.cxf.message.Message,org.apache.cxf.io.CacheAndWriteOutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection redirectRetransmit(java.net.HttpURLConnection,org.apache.cxf.message.Message,org.apache.cxf.io.CacheAndWriteOutputStream)",
            "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection authorizationRetransmit(java.net.HttpURLConnection,org.apache.cxf.message.Message,org.apache.cxf.io.CacheAndWriteOutputStream)"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleRetransmits()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponse()"
        ]
    },
    "org.apache.cxf.ws.rm.RetransmissionCallback:void onClose(org.apache.cxf.io.CachedOutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.io.CachedOutputStream:void lockOutputStream()",
            "org.apache.cxf.io.CachedOutputStream:void close()"
        ]
    },
    "org.apache.cxf.jaxws.interceptors.SwAInInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.common.util.ParamReader:java.lang.String[] getParameterNamesFromDebugInfo(java.lang.reflect.Method)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.DefaultServiceConfiguration:java.lang.String createName(java.lang.reflect.Method,int,int,boolean,java.lang.String)"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLManagerImpl:void registerInitialExtensions()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void <init>()"
        ]
    },
    "org.apache.cxf.resource.URIResolver:void <init>(java.lang.String,java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.resource.URIResolver:void <init>(java.lang.String,java.lang.String)",
            "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:java.net.URL composeUrl(java.lang.String)"
        ]
    },
    "org.apache.cxf.resource.URIResolver:void resolve(java.lang.String,java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.resource.ExtendedURIResolver:org.xml.sax.InputSource resolve(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.resource.URIResolver:void tryFileSystem(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.resource.URIResolver:void <init>(java.lang.String,java.lang.String,java.lang.Class)",
            "org.apache.cxf.resource.URIResolver:void resolve(java.lang.String,java.lang.String,java.lang.Class)",
            "org.apache.cxf.resource.URIResolver:void tryArchive(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.resource.URIResolver:void tryArchive(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.resource.URIResolver:void <init>(java.lang.String,java.lang.String,java.lang.Class)",
            "org.apache.cxf.resource.URIResolver:void resolve(java.lang.String,java.lang.String,java.lang.Class)",
            "org.apache.cxf.resource.URIResolver:void tryArchive(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.tools.common.VelocityGenerator:void setCommonAttributes()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.tools.common.AbstractCXFToolContainer:void outputVersion()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxb.JAXBDataBinding:javax.xml.bind.JAXBContext createJAXBContext(java.util.Set,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.JAXBDataBinding:javax.xml.bind.JAXBContext createJAXBContext(java.util.Set)"
        ]
    },
    "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:org.apache.ws.security.message.WSSecSignature getSignatureBuider(org.apache.cxf.ws.security.policy.model.TokenWrapper,org.apache.cxf.ws.security.policy.model.Token,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.wss4j.policyhandlers.TransportBindingHandler:byte[] doX509TokenSignature(org.apache.cxf.ws.security.policy.model.Token,org.apache.cxf.ws.security.policy.model.SignedEncryptedParts,org.apache.cxf.ws.security.policy.model.TokenWrapper)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AsymmetricBindingHandler:void doSignature(java.util.Vector)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:java.util.Map handleSupportingTokens(org.apache.cxf.ws.security.policy.model.SupportingToken,boolean,java.util.Map)"
        ]
    },
    "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void doSymmSignature(org.apache.cxf.ws.security.policy.model.Token,org.apache.cxf.ws.security.tokenstore.SecurityToken,java.util.Vector,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void doEndorsedSignatures(java.util.Map,boolean,boolean)"
        ]
    },
    "org.apache.cxf.ws.security.wss4j.policyhandlers.SymmetricBindingHandler:byte[] doSignature(java.util.Vector,org.apache.cxf.ws.security.policy.model.TokenWrapper,org.apache.cxf.ws.security.policy.model.Token,org.apache.cxf.ws.security.tokenstore.SecurityToken,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.wss4j.policyhandlers.SymmetricBindingHandler:void doEncryptBeforeSign()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.SymmetricBindingHandler:void doSignBeforeEncrypt()"
        ]
    },
    "org.apache.cxf.ws.security.wss4j.policyhandlers.AsymmetricBindingHandler:org.apache.ws.security.message.WSSecBase doEncryption(org.apache.cxf.ws.security.policy.model.TokenWrapper,java.util.Vector,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AsymmetricBindingHandler:void doSignBeforeEncrypt()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AsymmetricBindingHandler:void doEncryptBeforeSign()"
        ]
    },
    "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:org.apache.ws.security.message.WSSecEncryptedKey getEncryptedKeyBuilder(org.apache.cxf.ws.security.policy.model.TokenWrapper,org.apache.cxf.ws.security.policy.model.Token)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.wss4j.policyhandlers.TransportBindingHandler:byte[] doX509TokenSignature(org.apache.cxf.ws.security.policy.model.Token,org.apache.cxf.ws.security.policy.model.SignedEncryptedParts,org.apache.cxf.ws.security.policy.model.TokenWrapper)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AsymmetricBindingHandler:void createEncryptedKey(org.apache.cxf.ws.security.policy.model.TokenWrapper,org.apache.cxf.ws.security.policy.model.Token)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.SymmetricBindingHandler:java.lang.String setupEncryptedKey(org.apache.cxf.ws.security.policy.model.TokenWrapper,org.apache.cxf.ws.security.policy.model.Token)"
        ]
    },
    "org.apache.cxf.ws.security.wss4j.policyhandlers.SymmetricBindingHandler:org.apache.ws.security.message.WSSecBase doEncryption(org.apache.cxf.ws.security.policy.model.TokenWrapper,org.apache.cxf.ws.security.tokenstore.SecurityToken,boolean,java.util.Vector,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.wss4j.policyhandlers.SymmetricBindingHandler:void doEncryptBeforeSign()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.SymmetricBindingHandler:void doSignBeforeEncrypt()"
        ]
    },
    "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:void computeAction(org.apache.cxf.binding.soap.SoapMessage,org.apache.ws.security.handler.RequestData)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)"
        ]
    },
    "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:void setSchemaInMessage(org.apache.cxf.service.Service,org.apache.cxf.message.Message,org.apache.cxf.databinding.DataReader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:org.apache.cxf.databinding.DataReader getDataReader(org.apache.cxf.message.Message,java.lang.Class)"
        ]
    },
    "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:void setSchemaOutMessage(org.apache.cxf.service.Service,org.apache.cxf.message.Message,org.apache.cxf.databinding.DataWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:org.apache.cxf.databinding.DataWriter getDataWriter(org.apache.cxf.message.Message,org.apache.cxf.service.Service,java.lang.Class)"
        ]
    },
    "org.apache.cxf.transport.jms.JMSOutputStream:void doClose()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.io.CachedOutputStream:void lockOutputStream()",
            "org.apache.cxf.io.CachedOutputStream:void close()"
        ]
    },
    "org.apache.cxf.common.xmlschema.XmlSchemaUtils:java.util.List enumeratorValues(org.apache.ws.commons.schema.XmlSchemaSimpleType)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.logging.Log4jLogger$HandlerWrapper:void append(org.apache.log4j.spi.LoggingEvent)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.util.PackageUtils:java.lang.String combine(java.util.List,char)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.PackageUtils:java.lang.String getPackageNameByNameSpaceURI(java.lang.String)"
        ]
    },
    "org.apache.cxf.message.MessageUtils:boolean isTrue(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.AttachmentOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:void writeParts(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.message.MessageContentsList,java.util.List)",
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:org.apache.cxf.databinding.DataWriter getDataWriter(org.apache.cxf.message.Message,org.apache.cxf.service.Service,java.lang.Class)",
            "org.apache.cxf.transport.jms.JMSConduit:void sendExchange(org.apache.cxf.message.Exchange,java.lang.Object)",
            "org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:boolean isThreadLocalRequestContext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:java.util.Map getRequestContext()"
        ]
    },
    "org.apache.cxf.ws.addressing.ContextUtils:java.lang.String getAction(org.apache.cxf.service.model.Extensible)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.ContextUtils:java.lang.String getActionFromMessageAttributes(org.apache.cxf.service.model.MessageInfo)",
            "org.apache.cxf.ws.addressing.MAPAggregator:java.lang.String getActionFromInputMessage(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.ws.addressing.MAPAggregator:java.lang.String getActionFromOutputMessage(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.ws.addressing.MAPAggregator:java.lang.String getActionFromFaultMessage(org.apache.cxf.service.model.OperationInfo,java.lang.String)"
        ]
    },
    "org.apache.cxf.ws.security.policy.interceptors.SecureConversationTokenInterceptorProvider:java.lang.String setupClient(org.apache.cxf.ws.security.trust.STSClient,org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.ws.security.policy.model.SecureConversationToken,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor$SecureConversationCancelInterceptor:void doCancel(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.ws.security.policy.model.SecureConversationToken)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationOutInterceptor:void renewToken(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.ws.security.tokenstore.SecurityToken,org.apache.cxf.ws.security.policy.model.SecureConversationToken)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationOutInterceptor:org.apache.cxf.ws.security.tokenstore.SecurityToken issueToken(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.ws.security.policy.model.SecureConversationToken)"
        ]
    },
    "org.apache.cxf.wsdl.AbstractWSDLPlugin:java.lang.String getOption(java.util.Map,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.jms.wsdl11.JmsTransportPlugin:javax.wsdl.extensions.ExtensibilityElement createExtension(java.util.Map)",
            "org.apache.cxf.wsdl.AbstractWSDLPlugin:java.lang.String getOption(java.util.Map,java.lang.String,java.lang.String)",
            "org.apache.cxf.binding.soap.wsdl11.SoapAddressPlugin:javax.wsdl.extensions.ExtensibilityElement createExtension(java.util.Map)",
            "org.apache.cxf.binding.xml.wsdl11.HttpAddressPlugin:javax.wsdl.extensions.ExtensibilityElement createExtension(java.util.Map)"
        ]
    },
    "org.apache.cxf.tools.util.URIParserUtil:java.lang.String combine(java.util.List,char)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.tools.util.URIParserUtil:java.lang.String getPackageName(java.lang.String)"
        ]
    },
    "org.apache.cxf.aegis.xml.jdom.JDOMWriter:void writeValue(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.xml.AbstractMessageWriter:void writeXsiType(javax.xml.namespace.QName)",
            "org.apache.cxf.aegis.xml.AbstractMessageWriter:void writeXsiNil()",
            "org.apache.cxf.aegis.xml.AbstractMessageWriter:void writeValueAsInt(java.lang.Integer)",
            "org.apache.cxf.aegis.xml.AbstractMessageWriter:void writeValueAsByte(java.lang.Byte)",
            "org.apache.cxf.aegis.xml.AbstractMessageWriter:void writeValueAsDouble(java.lang.Double)",
            "org.apache.cxf.aegis.xml.AbstractMessageWriter:void writeValueAsCharacter(java.lang.Character)",
            "org.apache.cxf.aegis.xml.AbstractMessageWriter:void writeValueAsLong(java.lang.Long)",
            "org.apache.cxf.aegis.xml.AbstractMessageWriter:void writeValueAsFloat(java.lang.Float)",
            "org.apache.cxf.aegis.xml.AbstractMessageWriter:void writeValueAsBoolean(boolean)",
            "org.apache.cxf.aegis.xml.AbstractMessageWriter:void writeValueAsShort(java.lang.Short)",
            "org.apache.cxf.aegis.type.basic.BigIntegerType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.ObjectType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.DateType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.CalendarType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.URIType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.TimestampType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.BigDecimalType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.DateTimeType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.Base64Type:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.StringType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.TimeType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.TimezoneLessDateType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.mtom.AbstractXOPType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.SoapEncodingUtil:void writeAttribute(org.apache.cxf.aegis.xml.MessageWriter,javax.xml.namespace.QName,java.lang.String)",
            "org.apache.cxf.aegis.type.java5.EnumType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.java5.XMLGregorianCalendarType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.java5.DurationType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)"
        ]
    },
    "org.apache.cxf.aegis.xml.jdom.JDOMWriter:void writeValue(java.lang.Object,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.aegis.xml.jdom.AttributeWriter:void writeValue(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.xml.AbstractMessageWriter:void writeXsiType(javax.xml.namespace.QName)",
            "org.apache.cxf.aegis.xml.AbstractMessageWriter:void writeXsiNil()",
            "org.apache.cxf.aegis.xml.AbstractMessageWriter:void writeValueAsInt(java.lang.Integer)",
            "org.apache.cxf.aegis.xml.AbstractMessageWriter:void writeValueAsByte(java.lang.Byte)",
            "org.apache.cxf.aegis.xml.AbstractMessageWriter:void writeValueAsDouble(java.lang.Double)",
            "org.apache.cxf.aegis.xml.AbstractMessageWriter:void writeValueAsCharacter(java.lang.Character)",
            "org.apache.cxf.aegis.xml.AbstractMessageWriter:void writeValueAsLong(java.lang.Long)",
            "org.apache.cxf.aegis.xml.AbstractMessageWriter:void writeValueAsFloat(java.lang.Float)",
            "org.apache.cxf.aegis.xml.AbstractMessageWriter:void writeValueAsBoolean(boolean)",
            "org.apache.cxf.aegis.xml.AbstractMessageWriter:void writeValueAsShort(java.lang.Short)",
            "org.apache.cxf.aegis.type.basic.BigIntegerType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.ObjectType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.DateType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.CalendarType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.URIType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.TimestampType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.BigDecimalType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.DateTimeType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.Base64Type:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.StringType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.TimeType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.TimezoneLessDateType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.mtom.AbstractXOPType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.SoapEncodingUtil:void writeAttribute(org.apache.cxf.aegis.xml.MessageWriter,javax.xml.namespace.QName,java.lang.String)",
            "org.apache.cxf.aegis.type.java5.EnumType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.java5.XMLGregorianCalendarType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.java5.DurationType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)"
        ]
    },
    "org.apache.cxf.aegis.xml.stax.AttributeWriter:void writeValue(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.xml.AbstractMessageWriter:void writeXsiType(javax.xml.namespace.QName)",
            "org.apache.cxf.aegis.xml.AbstractMessageWriter:void writeXsiNil()",
            "org.apache.cxf.aegis.xml.AbstractMessageWriter:void writeValueAsInt(java.lang.Integer)",
            "org.apache.cxf.aegis.xml.AbstractMessageWriter:void writeValueAsByte(java.lang.Byte)",
            "org.apache.cxf.aegis.xml.AbstractMessageWriter:void writeValueAsDouble(java.lang.Double)",
            "org.apache.cxf.aegis.xml.AbstractMessageWriter:void writeValueAsCharacter(java.lang.Character)",
            "org.apache.cxf.aegis.xml.AbstractMessageWriter:void writeValueAsLong(java.lang.Long)",
            "org.apache.cxf.aegis.xml.AbstractMessageWriter:void writeValueAsFloat(java.lang.Float)",
            "org.apache.cxf.aegis.xml.AbstractMessageWriter:void writeValueAsBoolean(boolean)",
            "org.apache.cxf.aegis.xml.AbstractMessageWriter:void writeValueAsShort(java.lang.Short)",
            "org.apache.cxf.aegis.type.basic.BigIntegerType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.ObjectType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.DateType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.CalendarType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.URIType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.TimestampType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.BigDecimalType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.DateTimeType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.Base64Type:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.StringType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.TimeType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.TimezoneLessDateType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.mtom.AbstractXOPType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.SoapEncodingUtil:void writeAttribute(org.apache.cxf.aegis.xml.MessageWriter,javax.xml.namespace.QName,java.lang.String)",
            "org.apache.cxf.aegis.type.java5.EnumType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.java5.XMLGregorianCalendarType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.java5.DurationType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)"
        ]
    },
    "org.apache.cxf.aegis.xml.stax.ElementWriter:void writeValue(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.xml.AbstractMessageWriter:void writeXsiType(javax.xml.namespace.QName)",
            "org.apache.cxf.aegis.xml.AbstractMessageWriter:void writeXsiNil()",
            "org.apache.cxf.aegis.xml.AbstractMessageWriter:void writeValueAsInt(java.lang.Integer)",
            "org.apache.cxf.aegis.xml.AbstractMessageWriter:void writeValueAsByte(java.lang.Byte)",
            "org.apache.cxf.aegis.xml.AbstractMessageWriter:void writeValueAsDouble(java.lang.Double)",
            "org.apache.cxf.aegis.xml.AbstractMessageWriter:void writeValueAsCharacter(java.lang.Character)",
            "org.apache.cxf.aegis.xml.AbstractMessageWriter:void writeValueAsLong(java.lang.Long)",
            "org.apache.cxf.aegis.xml.AbstractMessageWriter:void writeValueAsFloat(java.lang.Float)",
            "org.apache.cxf.aegis.xml.AbstractMessageWriter:void writeValueAsBoolean(boolean)",
            "org.apache.cxf.aegis.xml.AbstractMessageWriter:void writeValueAsShort(java.lang.Short)",
            "org.apache.cxf.aegis.type.basic.BigIntegerType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.ObjectType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.DateType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.CalendarType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.URIType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.TimestampType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.BigDecimalType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.DateTimeType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.Base64Type:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.StringType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.TimeType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.TimezoneLessDateType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.mtom.AbstractXOPType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.SoapEncodingUtil:void writeAttribute(org.apache.cxf.aegis.xml.MessageWriter,javax.xml.namespace.QName,java.lang.String)",
            "org.apache.cxf.aegis.type.java5.EnumType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.java5.XMLGregorianCalendarType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.java5.DurationType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)"
        ]
    },
    "org.apache.cxf.aegis.type.basic.BigIntegerType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.databinding.XMLStreamDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.aegis.databinding.ElementDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,org.w3c.dom.Element)",
            "org.apache.cxf.aegis.AegisXMLStreamDataWriter:void write(java.lang.Object,javax.xml.namespace.QName,boolean,javax.xml.stream.XMLStreamWriter,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.basic.ObjectType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.BeanType:void writeObjectInternal(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,boolean)",
            "org.apache.cxf.aegis.type.basic.BeanType:void writeElement(javax.xml.namespace.QName,java.lang.Object,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.ArrayType:void writeValue(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type,java.lang.String,java.lang.String)",
            "org.apache.cxf.aegis.type.encoded.StructType:void writeElement(javax.xml.namespace.QName,java.lang.Object,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.SoapArrayType:void writeValue(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.collection.MapType:void writeEntry(org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.type.Type,java.util.Map$Entry)"
        ]
    },
    "org.apache.cxf.aegis.type.basic.BigDecimalType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.databinding.XMLStreamDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.aegis.databinding.ElementDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,org.w3c.dom.Element)",
            "org.apache.cxf.aegis.AegisXMLStreamDataWriter:void write(java.lang.Object,javax.xml.namespace.QName,boolean,javax.xml.stream.XMLStreamWriter,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.basic.ObjectType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.BeanType:void writeObjectInternal(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,boolean)",
            "org.apache.cxf.aegis.type.basic.BeanType:void writeElement(javax.xml.namespace.QName,java.lang.Object,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.ArrayType:void writeValue(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type,java.lang.String,java.lang.String)",
            "org.apache.cxf.aegis.type.encoded.StructType:void writeElement(javax.xml.namespace.QName,java.lang.Object,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.SoapArrayType:void writeValue(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.collection.MapType:void writeEntry(org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.type.Type,java.util.Map$Entry)"
        ]
    },
    "org.apache.cxf.jaxws.EndpointImpl:void checkProperties()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.EndpointImpl:org.apache.cxf.endpoint.ServerImpl getServer(java.lang.String)"
        ]
    },
    "org.apache.cxf.xmlbeans.tools.XMLBeansToolingDataBinding:void initialize(org.apache.cxf.tools.common.ToolContext)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.aegis.AegisContext:org.apache.cxf.aegis.type.TypeCreator createTypeCreator()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.AegisContext:void initialize()"
        ]
    },
    "org.apache.cxf.aegis.type.XMLTypeCreator:org.w3c.dom.Element findMapping(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.XMLTypeCreator:boolean isEnum(java.lang.Class)",
            "org.apache.cxf.aegis.type.XMLTypeCreator:org.apache.cxf.aegis.type.Type createEnumType(org.apache.cxf.aegis.type.AbstractTypeCreator$TypeClassInfo)",
            "org.apache.cxf.aegis.type.XMLTypeCreator:org.apache.cxf.aegis.type.AbstractTypeCreator$TypeClassInfo createClassInfo(java.beans.PropertyDescriptor)",
            "org.apache.cxf.aegis.type.XMLTypeCreator:java.util.List findMappings(java.lang.Class)",
            "org.apache.cxf.aegis.type.XMLTypeCreator:org.apache.cxf.aegis.type.Type createDefaultType(org.apache.cxf.aegis.type.AbstractTypeCreator$TypeClassInfo)",
            "org.apache.cxf.aegis.type.XMLTypeCreator:org.apache.cxf.aegis.type.AbstractTypeCreator$TypeClassInfo createClassInfo(java.lang.reflect.Method,int)"
        ]
    },
    "org.apache.cxf.aegis.type.XMLTypeCreator:org.apache.cxf.aegis.type.Type createDefaultType(org.apache.cxf.aegis.type.AbstractTypeCreator$TypeClassInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.AbstractTypeCreator:org.apache.cxf.aegis.type.Type createTypeForClass(org.apache.cxf.aegis.type.AbstractTypeCreator$TypeClassInfo)",
            "org.apache.cxf.aegis.type.XMLTypeCreator:org.apache.cxf.aegis.type.Type createDefaultType(org.apache.cxf.aegis.type.AbstractTypeCreator$TypeClassInfo)"
        ]
    },
    "org.apache.cxf.aegis.AegisXMLStreamDataReader:java.lang.Object read(javax.xml.stream.XMLStreamReader,org.apache.cxf.aegis.type.Type)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.AegisXMLStreamDataReader:java.lang.Object read(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.aegis.AegisXMLStreamDataReader:java.lang.Object read(java.lang.Object,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.AegisElementDataReader:java.lang.Object read(org.w3c.dom.Element,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.databinding.XMLStreamDataReader:java.lang.Object read(org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.aegis.databinding.XMLStreamDataReader:java.lang.Object read(javax.xml.stream.XMLStreamReader)"
        ]
    },
    "org.apache.cxf.aegis.type.basic.ObjectType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.AegisXMLStreamDataReader:java.lang.Object read(javax.xml.stream.XMLStreamReader,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.basic.ObjectType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.BeanType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.ArrayType:java.util.Collection readCollection(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.SoapRefType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.TrailingBlocks:java.util.List readBlocks(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.collection.MapType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)"
        ]
    },
    "org.apache.cxf.aegis.type.basic.BeanType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.AegisXMLStreamDataReader:java.lang.Object read(javax.xml.stream.XMLStreamReader,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.basic.ObjectType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.BeanType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.ArrayType:java.util.Collection readCollection(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.SoapRefType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.collection.MapType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)"
        ]
    },
    "org.apache.cxf.aegis.type.basic.ArrayType:java.util.Collection readCollection(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.basic.ArrayType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.collection.CollectionType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)"
        ]
    },
    "org.apache.cxf.aegis.type.mtom.AbstractXOPType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.AegisXMLStreamDataReader:java.lang.Object read(javax.xml.stream.XMLStreamReader,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.basic.ObjectType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.BeanType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.ArrayType:java.util.Collection readCollection(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.SoapRefType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.collection.MapType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)"
        ]
    },
    "org.apache.cxf.aegis.type.encoded.SoapRefType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.AegisXMLStreamDataReader:java.lang.Object read(javax.xml.stream.XMLStreamReader,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.basic.ObjectType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.BeanType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.ArrayType:java.util.Collection readCollection(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.SoapRefType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.SoapArrayType:java.util.List readCollection(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.encoded.ArrayTypeInfo,int)",
            "org.apache.cxf.aegis.type.collection.MapType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)"
        ]
    },
    "org.apache.cxf.aegis.type.collection.MapType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.AegisXMLStreamDataReader:java.lang.Object read(javax.xml.stream.XMLStreamReader,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.basic.ObjectType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.BeanType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.ArrayType:java.util.Collection readCollection(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.SoapRefType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.collection.MapType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)"
        ]
    },
    "org.apache.cxf.endpoint.ManagedEndpoint:void stop()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.endpoint.ServerRegistryImpl:void preShutdown()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.buslifecycle.CXFBusLifeCycleManager:void preShutdown()"
        ]
    },
    "org.apache.cxf.jaxws.EndpointImpl:void stop()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.policy.WSPolicyFeature:void initialize(org.apache.cxf.endpoint.Client,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.frontend.ClientFactoryBean:void applyFeatures()",
            "org.apache.cxf.jaxws.ServiceImpl:javax.xml.ws.Dispatch createDispatch(javax.xml.namespace.QName,java.lang.Class,javax.xml.ws.Service$Mode,javax.xml.ws.WebServiceFeature[])",
            "org.apache.cxf.jaxws.ServiceImpl:javax.xml.ws.Dispatch createDispatch(javax.xml.namespace.QName,javax.xml.bind.JAXBContext,javax.xml.ws.Service$Mode,javax.xml.ws.WebServiceFeature[])"
        ]
    },
    "org.apache.cxf.ws.policy.WSPolicyFeature:void initialize(org.apache.cxf.endpoint.Server,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.frontend.ServerFactoryBean:void applyFeatures()"
        ]
    },
    "org.apache.cxf.ws.policy.attachment.wsdl11.Wsdl11AttachmentPolicyProvider:org.apache.neethi.Policy getEffectivePolicy(org.apache.cxf.service.model.BindingOperationInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.PolicyEngineImpl:org.apache.neethi.Policy getAggregatedOperationPolicy(org.apache.cxf.service.model.BindingOperationInfo)"
        ]
    },
    "org.apache.cxf.ws.policy.attachment.wsdl11.Wsdl11AttachmentPolicyProvider:org.apache.neethi.Policy getEffectivePolicy(org.apache.cxf.service.model.BindingMessageInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.PolicyEngineImpl:org.apache.neethi.Policy getAggregatedMessagePolicy(org.apache.cxf.service.model.BindingMessageInfo)"
        ]
    },
    "org.apache.cxf.ws.policy.attachment.wsdl11.Wsdl11AttachmentPolicyProvider:org.apache.neethi.Policy getEffectivePolicy(org.apache.cxf.service.model.BindingFaultInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.PolicyEngineImpl:org.apache.neethi.Policy getAggregatedFaultPolicy(org.apache.cxf.service.model.BindingFaultInfo)"
        ]
    },
    "org.apache.cxf.ws.policy.attachment.wsdl11.Wsdl11AttachmentPolicyProvider:org.apache.neethi.Policy getElementPolicy(org.apache.cxf.service.model.AbstractDescriptionElement,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.attachment.wsdl11.Wsdl11AttachmentPolicyProvider:org.apache.neethi.Policy getEffectivePolicy(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.ws.policy.attachment.wsdl11.Wsdl11AttachmentPolicyProvider:org.apache.neethi.Policy getElementPolicy(org.apache.cxf.service.model.AbstractDescriptionElement)"
        ]
    },
    "org.apache.cxf.interceptor.ClientFaultConverter:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.staxutils.W3CDOMStreamWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.JAXBEncoderDecoder:void marshallException(javax.xml.bind.Marshaller,java.lang.Exception,org.apache.cxf.service.model.MessagePartInfo,java.lang.Object)",
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.OverlayW3CDOMStreamWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cxf.staxutils.W3CDOMStreamWriter:void writeEmptyElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamWriter,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElementEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.interceptor.WrappedOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.policy.model.InitiatorToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.RequiredParts:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.TransportToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.AlgorithmSuite:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.Wss11:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.EncryptionToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SymmetricBinding:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.X509Token:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SignatureToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.Trust10:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.HttpsToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.AsymmetricBinding:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.ContentEncryptedElements:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.KeyValueToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SignedEncryptedElements:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.Trust13:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.RequiredElements:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.UsernameToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SupportingToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.TransportBinding:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SignedEncryptedParts:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.Layout:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.IssuedToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SecureConversationToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.Wss10:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.ProtectionToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.RecipientToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor$STSInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor$STSInvoker:void doIssue(org.w3c.dom.Element,org.apache.cxf.message.Exchange,org.apache.cxf.staxutils.W3CDOMStreamWriter,java.lang.String,java.lang.String)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationTokenInterceptorProvider:byte[] writeProofToken(java.lang.String,java.lang.String,org.apache.cxf.staxutils.W3CDOMStreamWriter,byte[],int)",
            "org.apache.cxf.ws.security.trust.STSClient:org.apache.cxf.ws.security.tokenstore.SecurityToken requestSecurityToken(java.lang.String,java.lang.String,java.lang.String,org.apache.cxf.ws.security.tokenstore.SecurityToken)",
            "org.apache.cxf.ws.security.trust.STSClient:boolean validateSecurityToken(org.apache.cxf.ws.security.tokenstore.SecurityToken,java.lang.String)",
            "org.apache.cxf.ws.security.trust.STSClient:void cancelSecurityToken(org.apache.cxf.ws.security.tokenstore.SecurityToken)",
            "org.apache.cxf.ws.security.trust.STSClient:java.lang.String writeKeyType(org.apache.cxf.staxutils.W3CDOMStreamWriter,java.lang.String)",
            "org.apache.cxf.ws.security.trust.STSClient:void addLifetime(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.trust.STSClient:void addAppliesTo(javax.xml.stream.XMLStreamWriter,java.lang.String)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.binding.soap.interceptor.Soap12FaultOutInterceptor$Soap12FaultOutInterceptorInternal:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor:void writeSoapEnvelopeStart(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor:boolean handleHeaderPart(boolean,org.apache.cxf.binding.soap.SoapMessage,java.lang.String)",
            "org.apache.cxf.binding.soap.interceptor.Soap11FaultOutInterceptor$Soap11FaultOutInterceptorInternal:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.aegis.util.jdom.StaxSerializer:void writeElement(org.jdom.Element,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.aegis.xml.stax.ElementWriter:void writeStartElement()",
            "org.apache.cxf.jaxws.spi.ProviderImpl:javax.xml.ws.wsaddressing.W3CEndpointReference createW3CEndpointReference(java.lang.String,javax.xml.namespace.QName,javax.xml.namespace.QName,java.util.List,java.lang.String,java.util.List)",
            "org.apache.cxf.xmlbeans.DataWriterImpl:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamWriter)"
        ]
    },
    "org.apache.cxf.staxutils.W3CDOMStreamWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeAttributeEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.X509Token:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.ContentEncryptedElements:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.KeyValueToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SignedEncryptedElements:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.RequiredElements:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.UsernameToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.IssuedToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SecureConversationToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.binding.soap.interceptor.Soap12FaultOutInterceptor$Soap12FaultOutInterceptorInternal:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.aegis.util.jdom.StaxSerializer:void writeElement(org.jdom.Element,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.aegis.xml.stax.AttributeWriter:void writeValue(java.lang.Object)"
        ]
    },
    "org.apache.cxf.staxutils.W3CDOMStreamWriter:java.lang.String getPrefix(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:java.lang.String getUniquePrefix(javax.xml.stream.XMLStreamWriter,java.lang.String,boolean)",
            "org.apache.cxf.ws.security.policy.model.InitiatorToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.RequiredParts:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.TransportToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.AlgorithmSuite:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.Wss11:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.EncryptionToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SymmetricBinding:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.X509Token:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SignatureToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.Trust10:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.HttpsToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.AsymmetricBinding:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.ContentEncryptedElements:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.KeyValueToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SignedEncryptedElements:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.Trust13:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.RequiredElements:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.UsernameToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SupportingToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.TransportBinding:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SignedEncryptedParts:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.Layout:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.IssuedToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SecureConversationToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.Wss10:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.ProtectionToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.RecipientToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.binding.soap.interceptor.Soap11FaultOutInterceptor$Soap11FaultOutInterceptorInternal:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.aegis.util.jdom.StaxSerializer:void writeElement(org.jdom.Element,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.aegis.xml.stax.ElementWriter:java.lang.String getPrefixForNamespace(java.lang.String)",
            "org.apache.cxf.aegis.xml.stax.ElementWriter:java.lang.String getPrefixForNamespace(java.lang.String,java.lang.String)",
            "org.apache.cxf.xmlbeans.DataWriterImpl:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamWriter)"
        ]
    },
    "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.lang.String getPrefix(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.W3CDOMStreamWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.W3CDOMStreamWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.W3CDOMStreamWriter:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.util.Iterator getPrefixes(java.lang.String)",
            "org.apache.cxf.wsdl.JAXBExtensionHelper$MappingReaderDelegate$1:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.aegis.util.NamespaceHelper:java.lang.String getUniquePrefix(javax.xml.stream.XMLStreamWriter,java.lang.String,boolean)",
            "org.apache.cxf.aegis.xml.stax.ElementWriter:void writeStartElement()",
            "org.apache.cxf.aegis.xml.stax.ElementWriter:java.lang.String getPrefixForNamespace(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.wsdl.JAXBExtensionHelper$MappingReaderDelegate$1:java.lang.String getPrefix(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.W3CDOMStreamWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.W3CDOMStreamWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.W3CDOMStreamWriter:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.wsdl.JAXBExtensionHelper$MappingReaderDelegate$1:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.aegis.util.NamespaceHelper:java.lang.String getUniquePrefix(javax.xml.stream.XMLStreamWriter,java.lang.String,boolean)",
            "org.apache.cxf.aegis.xml.stax.ElementWriter:void writeStartElement()",
            "org.apache.cxf.aegis.xml.stax.ElementWriter:java.lang.String getPrefixForNamespace(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.aegis.util.NamespaceHelper:java.lang.String getUniquePrefix(javax.xml.stream.XMLStreamWriter,java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.xml.stax.AttributeWriter:void <init>(javax.xml.stream.XMLStreamWriter,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.aegis.xml.stax.ElementWriter:void writeStartElement()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.xml.stax.ElementWriter:void <init>(javax.xml.stream.XMLStreamWriter,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.aegis.xml.stax.ElementWriter:void <init>(java.io.OutputStream,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.aegis.xml.stax.ElementWriter:java.lang.String getPrefixForNamespace(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.xml.AbstractMessageWriter:void writeXsiType(javax.xml.namespace.QName)",
            "org.apache.cxf.aegis.type.encoded.SoapArrayType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)"
        ]
    },
    "org.apache.cxf.common.util.TwoStageMap:java.util.Set keySet()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.util.Set keySet()",
            "org.apache.cxf.common.util.CacheMap:void updateMainDataMap()",
            "org.apache.cxf.common.util.CacheMap:java.util.Set keySet()",
            "org.apache.cxf.common.util.TwoStageMap:java.util.Set keySet()",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.util.Set keySet()",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.util.Collection values()",
            "org.apache.cxf.message.MessageImpl:java.util.Set getContentFormats()",
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.util.Map keepInOrder(java.util.Map,org.apache.cxf.service.model.OperationInfo,java.util.List)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:org.apache.cxf.message.MessageContentsList getParameters(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.transport.http.HTTPConduit:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:void transferProtocolHeadersToURLConnection(org.apache.cxf.message.Message,java.net.URLConnection)",
            "org.apache.cxf.transport.http.HTTPConduit:void logProtocolHeaders(java.util.logging.Level,org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void copyResponseHeaders(org.apache.cxf.message.Message,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponseInternal()",
            "org.apache.cxf.transport.http.gzip.GZIPInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.servlet.ServletTransportFactory:java.util.Set getDestinationsPaths()",
            "org.apache.cxf.NSManager:java.util.Set getNamespaces()",
            "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:java.util.Collection getTokenIdentifiers()",
            "org.apache.cxf.wsdl.JAXBExtensionHelper$1:java.util.Iterator getPrefixes(java.lang.String)",
            "org.apache.cxf.tools.common.Tag:boolean equals(java.lang.Object)",
            "org.apache.cxf.tools.common.ToolContext:void addParameters(java.util.Map)",
            "org.apache.cxf.tools.common.VelocityGenerator:void doWrite(java.lang.String,java.io.Writer)",
            "org.apache.cxf.tools.common.model.JavaParameter:java.util.Collection getAnnotationTags()",
            "org.apache.cxf.wsdl11.SchemaUtil:void extractSchema(javax.wsdl.Definition,org.apache.cxf.common.xmlschema.SchemaCollection,java.util.List)",
            "org.apache.cxf.wsdl11.SchemaUtil:void addSchema(java.lang.String,javax.wsdl.extensions.schema.Schema)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void parseWSDL(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:java.util.Collection getImports(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addExtensibilityAttributes(javax.wsdl.extensions.AttributeExtensible,java.util.Map)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void activateAll()",
            "org.apache.cxf.attachment.AttachmentImpl:java.util.Iterator getHeaderNames()",
            "org.apache.cxf.aegis.util.jdom.StaxBuilder:void buildTree(org.jdom.JDOMFactory,javax.xml.stream.XMLStreamReader,org.jdom.Document)",
            "org.apache.cxf.jaxws.ServiceImpl:java.lang.Object getPort(org.apache.cxf.ws.addressing.EndpointReferenceType,java.lang.Class,javax.xml.ws.WebServiceFeature[])",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:void copyScoped(java.util.Map)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:void clear()",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:java.util.Set keySet()"
        ]
    },
    "org.apache.cxf.common.util.TwoStageMap:java.util.Collection values()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.WSDLHelper:javax.wsdl.BindingOperation getBindingOperation(javax.wsdl.Definition,java.lang.String)",
            "org.apache.cxf.helpers.WSDLHelper:java.util.List getPortTypes(javax.wsdl.Definition)",
            "org.apache.cxf.helpers.WSDLHelper:java.util.List getInMessageParts(javax.wsdl.Operation)",
            "org.apache.cxf.helpers.WSDLHelper:java.util.List getOutMessageParts(javax.wsdl.Operation)",
            "org.apache.cxf.helpers.WSDLHelper:javax.wsdl.Binding getBinding(javax.wsdl.BindingOperation,javax.wsdl.Definition)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.util.Collection values()",
            "org.apache.cxf.common.util.CacheMap:java.util.Collection values()",
            "org.apache.cxf.common.util.TwoStageMap:java.util.Collection values()",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.util.Collection values()",
            "org.apache.cxf.management.jmx.export.runtime.ModelMBeanInfoSupporter:javax.management.modelmbean.ModelMBeanInfo buildModelMBeanInfo(javax.management.Descriptor)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:org.apache.cxf.message.MessageContentsList getParameters(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.transport.ConduitInitiatorManagerImpl:org.apache.cxf.transport.ConduitInitiator getConduitInitiatorForUri(java.lang.String)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updateDefinition(javax.wsdl.Definition,java.util.Map,java.util.Map,java.lang.String,org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updatePublishedEndpointUrl(java.lang.String,javax.wsdl.Definition,javax.xml.namespace.QName)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updateSchemaImports(javax.wsdl.extensions.schema.Schema,java.util.Map,java.lang.String)",
            "org.apache.cxf.transport.http.HTTPConduit:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.DestinationFactoryManagerImpl:org.apache.cxf.transport.DestinationFactory getDestinationFactoryForUri(java.lang.String)",
            "org.apache.cxf.transport.servlet.ServletTransportFactory:java.util.Collection getDestinations()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void postShutdown()",
            "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:org.apache.cxf.ws.security.tokenstore.SecurityToken getToken(java.lang.String)",
            "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:java.util.Collection getTokens(org.apache.cxf.ws.security.tokenstore.SecurityToken$State)",
            "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:void processTokenExpiry()",
            "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:void removeCancelledTokens()",
            "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:void removeExpiredTokens()",
            "org.apache.cxf.ws.rm.Source:java.util.Collection getAllSequences()",
            "org.apache.cxf.ws.rm.Source:java.util.Collection getAllUnacknowledgedSequences()",
            "org.apache.cxf.ws.rm.Destination:java.util.Collection getAllSequences()",
            "org.apache.cxf.ws.rm.RMManager:void shutdown()",
            "org.apache.cxf.workqueue.WorkQueueManagerImpl:void shutdown(boolean)",
            "org.apache.cxf.workqueue.WorkQueueManagerImpl:void run()",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.wsdl.Port getPort(org.apache.cxf.wsdl.WSDLManager,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.service.model.BindingOperationInfo:java.util.Collection getFaults()",
            "org.apache.cxf.service.model.AbstractMessageContainer:int getMessagePartIndex(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePartByIndex(int)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePart(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.AbstractMessageContainer:java.util.List getMessageParts()",
            "org.apache.cxf.service.model.InterfaceInfo:java.util.Collection getOperations()",
            "org.apache.cxf.service.model.BindingInfo:java.util.Collection getOperations()",
            "org.apache.cxf.service.model.BindingInfo:org.apache.cxf.service.model.BindingOperationInfo getOperation(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.OperationInfo:java.util.Collection getFaults()",
            "org.apache.cxf.binding.AbstractBindingFactory:org.apache.cxf.service.model.BindingInfo initializeBindingInfo(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding,org.apache.cxf.service.model.BindingInfo)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:void buildMessage(org.apache.cxf.service.model.MessageInfo,javax.wsdl.Message,org.apache.cxf.common.xmlschema.SchemaCollection,int,java.lang.String)",
            "org.apache.cxf.binding.soap.SoapVersionFactory:java.util.Iterator getVersions()",
            "org.apache.cxf.tools.common.model.JavaMethod:java.util.Collection getAnnotations()",
            "org.apache.cxf.tools.common.model.JavaParameter:java.util.Collection getAnnotations()",
            "org.apache.cxf.tools.util.SOAPBindingUtil:java.util.List getBindingOperationSoapFaults(javax.wsdl.BindingOperation)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:void addSOAPNamespace(javax.wsdl.Definition,boolean)",
            "org.apache.cxf.tools.util.ClassCollector:java.util.Collection getGeneratedFileInfo()",
            "org.apache.cxf.wsdl11.SchemaUtil:void parseImports(javax.wsdl.Definition,java.util.List)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildMockServices(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition,javax.wsdl.Service,javax.xml.namespace.QName,org.apache.cxf.service.model.DescriptionInfo)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void parseImports(javax.wsdl.Definition,java.util.List)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.BindingInfo buildBinding(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding)",
            "org.apache.cxf.bus.spring.Jsr250BeanPostProcessor:java.lang.Object postProcessAfterInitialization(java.lang.Object,java.lang.String)",
            "org.apache.cxf.aegis.type.encoded.MarshalRegistry$1:java.lang.Object next()",
            "org.apache.cxf.jaxws.ServiceImpl:void initializePorts()",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:java.util.Collection values()"
        ]
    },
    "org.apache.cxf.common.util.TwoStageMap:java.util.Set entrySet()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.MapNamespaceContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.util.Set entrySet()",
            "org.apache.cxf.common.util.CacheMap:java.util.Set entrySet()",
            "org.apache.cxf.common.util.CacheMap:void putAll(java.util.Map)",
            "org.apache.cxf.common.util.TwoStageMap:void putAll(java.util.Map)",
            "org.apache.cxf.common.util.TwoStageMap:java.util.Set entrySet()",
            "org.apache.cxf.jaxb.io.DataWriterImpl:javax.xml.bind.Marshaller createMarshaller(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.jaxb.io.DataReaderImpl:javax.xml.bind.Unmarshaller createUnmarshaller()",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.transport.http.HTTPConduit:java.lang.String extractLocation(java.util.Map)",
            "org.apache.cxf.transport.DestinationFactoryManagerImpl:org.apache.cxf.transport.DestinationFactory getDestinationFactoryForUri(java.lang.String)",
            "org.apache.cxf.transport.jms.JMSUtils:void addProtocolHeaders(javax.jms.Message,java.util.Map)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void addMustUnderstandAttribute(org.w3c.dom.Element,javax.xml.namespace.QName,org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.addressing.AddressingPropertiesImpl)",
            "org.apache.cxf.ws.policy.attachment.wsdl11.Wsdl11AttachmentPolicyProvider:org.apache.neethi.Policy getElementPolicy(org.apache.cxf.service.model.Extensible,boolean,org.apache.cxf.service.model.DescriptionInfo)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void addSignatureParts(java.util.Map,java.util.List)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void doEndorsedSignatures(java.util.Map,boolean,boolean)",
            "org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor:org.apache.ws.security.WSSecurityEngine createSecurityEngine(java.util.Map)",
            "org.apache.cxf.databinding.AbstractDataBinding:void setNamespaceMap(java.util.Map)",
            "org.apache.cxf.databinding.AbstractDataBinding:void checkNamespaceMap(java.util.Map)",
            "org.apache.cxf.wsdl.JAXBExtensionHelper$1:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils$SchemaLSResourceResolver:org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.SchemaInfo getOrCreateSchema(org.apache.cxf.service.model.ServiceInfo,java.lang.String,boolean)",
            "org.apache.cxf.binding.soap.interceptor.Soap12FaultOutInterceptor$Soap12FaultOutInterceptorInternal:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor:void writeSoapEnvelopeStart(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.Soap11FaultOutInterceptor$Soap11FaultOutInterceptorInternal:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.tools.common.Tag:java.lang.String formatAttribute(org.apache.cxf.tools.common.Tag)",
            "org.apache.cxf.tools.common.ProcessorTestBase:boolean assertXmlEquals(java.io.File,java.io.File,java.util.List)",
            "org.apache.cxf.tools.common.ProcessorTestBase:void assertAttributesEquals(javax.xml.namespace.QName,java.util.Map,java.util.Map,java.util.Collection)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildService(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:org.apache.cxf.service.model.ServiceSchemaInfo getSchemasForDefinition(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void putSchemasForDefinition(javax.wsdl.Definition,org.apache.cxf.service.model.ServiceSchemaInfo)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void removeDefinition(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildMockServices(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildInterfaceOperation(org.apache.cxf.service.model.InterfaceInfo,javax.wsdl.Operation)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:void putAll(java.util.Map)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void createSchemas(org.apache.cxf.service.Service,java.util.Set)",
            "org.apache.cxf.aegis.type.collection.MapType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.jaxws.JaxWsClientProxy:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:java.util.Set entrySet()",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:void putAll(java.util.Map)",
            "org.apache.cxf.jaxws.AbstractJAXWSMethodInvoker:java.util.Map removeHandlerProperties(org.apache.cxf.jaxws.context.WrappedMessageContext)",
            "org.apache.cxf.jaxws.AbstractJAXWSMethodInvoker:void addHandlerProperties(org.apache.cxf.jaxws.context.WrappedMessageContext,java.util.Map)",
            "org.apache.cxf.jaxws.AbstractJAXWSMethodInvoker:void updateWebServiceContext(org.apache.cxf.message.Exchange,javax.xml.ws.handler.MessageContext)"
        ]
    },
    "org.apache.cxf.jaxb.JAXBDataBinding:void <init>(java.lang.Class[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:java.util.Collection getValidTokens()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor$TokenStoreCallbackHandler:void handle(javax.security.auth.callback.Callback[])"
        ]
    },
    "org.apache.cxf.phase.AbstractPhaseInterceptor:void setBefore(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.phase.AbstractPhaseInterceptor:void setAfter(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.phase.AbstractPhaseInterceptor:void addBefore(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.phase.AbstractPhaseInterceptor:void addAfter(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.tools.common.model.JAnnotationElement:void appendValue(java.lang.StringBuffer,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.tools.common.model.JAnnotationElement:java.lang.String toString()"
        ]
    },
    "org.apache.cxf.common.util.CacheMap:java.util.Set entrySet()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.MapNamespaceContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.util.Set entrySet()",
            "org.apache.cxf.common.util.CacheMap:java.util.Set entrySet()",
            "org.apache.cxf.common.util.CacheMap:void putAll(java.util.Map)",
            "org.apache.cxf.common.util.TwoStageMap:void putAll(java.util.Map)",
            "org.apache.cxf.common.util.TwoStageMap:java.util.Set entrySet()",
            "org.apache.cxf.jaxb.io.DataWriterImpl:javax.xml.bind.Marshaller createMarshaller(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.jaxb.io.DataReaderImpl:javax.xml.bind.Unmarshaller createUnmarshaller()",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.transport.http.HTTPConduit:java.lang.String extractLocation(java.util.Map)",
            "org.apache.cxf.transport.DestinationFactoryManagerImpl:org.apache.cxf.transport.DestinationFactory getDestinationFactoryForUri(java.lang.String)",
            "org.apache.cxf.transport.jms.JMSUtils:void addProtocolHeaders(javax.jms.Message,java.util.Map)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void addMustUnderstandAttribute(org.w3c.dom.Element,javax.xml.namespace.QName,org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.addressing.AddressingPropertiesImpl)",
            "org.apache.cxf.ws.policy.attachment.wsdl11.Wsdl11AttachmentPolicyProvider:org.apache.neethi.Policy getElementPolicy(org.apache.cxf.service.model.Extensible,boolean,org.apache.cxf.service.model.DescriptionInfo)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void addSignatureParts(java.util.Map,java.util.List)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void doEndorsedSignatures(java.util.Map,boolean,boolean)",
            "org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor:org.apache.ws.security.WSSecurityEngine createSecurityEngine(java.util.Map)",
            "org.apache.cxf.databinding.AbstractDataBinding:void setNamespaceMap(java.util.Map)",
            "org.apache.cxf.databinding.AbstractDataBinding:void checkNamespaceMap(java.util.Map)",
            "org.apache.cxf.wsdl.JAXBExtensionHelper$1:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils$SchemaLSResourceResolver:org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.SchemaInfo getOrCreateSchema(org.apache.cxf.service.model.ServiceInfo,java.lang.String,boolean)",
            "org.apache.cxf.binding.soap.interceptor.Soap12FaultOutInterceptor$Soap12FaultOutInterceptorInternal:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor:void writeSoapEnvelopeStart(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.Soap11FaultOutInterceptor$Soap11FaultOutInterceptorInternal:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.tools.common.Tag:java.lang.String formatAttribute(org.apache.cxf.tools.common.Tag)",
            "org.apache.cxf.tools.common.ProcessorTestBase:boolean assertXmlEquals(java.io.File,java.io.File,java.util.List)",
            "org.apache.cxf.tools.common.ProcessorTestBase:void assertAttributesEquals(javax.xml.namespace.QName,java.util.Map,java.util.Map,java.util.Collection)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildService(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:org.apache.cxf.service.model.ServiceSchemaInfo getSchemasForDefinition(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void putSchemasForDefinition(javax.wsdl.Definition,org.apache.cxf.service.model.ServiceSchemaInfo)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void removeDefinition(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildMockServices(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildInterfaceOperation(org.apache.cxf.service.model.InterfaceInfo,javax.wsdl.Operation)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:void putAll(java.util.Map)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void createSchemas(org.apache.cxf.service.Service,java.util.Set)",
            "org.apache.cxf.aegis.type.collection.MapType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.jaxws.JaxWsClientProxy:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:java.util.Set entrySet()",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:void putAll(java.util.Map)",
            "org.apache.cxf.jaxws.AbstractJAXWSMethodInvoker:java.util.Map removeHandlerProperties(org.apache.cxf.jaxws.context.WrappedMessageContext)",
            "org.apache.cxf.jaxws.AbstractJAXWSMethodInvoker:void addHandlerProperties(org.apache.cxf.jaxws.context.WrappedMessageContext,java.util.Map)",
            "org.apache.cxf.jaxws.AbstractJAXWSMethodInvoker:void updateWebServiceContext(org.apache.cxf.message.Exchange,javax.xml.ws.handler.MessageContext)"
        ]
    },
    "org.apache.cxf.common.util.CacheMap:java.util.Set keySet()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.util.Set keySet()",
            "org.apache.cxf.common.util.CacheMap:void updateMainDataMap()",
            "org.apache.cxf.common.util.CacheMap:java.util.Set keySet()",
            "org.apache.cxf.common.util.TwoStageMap:java.util.Set keySet()",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.util.Set keySet()",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.util.Collection values()",
            "org.apache.cxf.message.MessageImpl:java.util.Set getContentFormats()",
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.util.Map keepInOrder(java.util.Map,org.apache.cxf.service.model.OperationInfo,java.util.List)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:org.apache.cxf.message.MessageContentsList getParameters(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.transport.http.HTTPConduit:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:void transferProtocolHeadersToURLConnection(org.apache.cxf.message.Message,java.net.URLConnection)",
            "org.apache.cxf.transport.http.HTTPConduit:void logProtocolHeaders(java.util.logging.Level,org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void copyResponseHeaders(org.apache.cxf.message.Message,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponseInternal()",
            "org.apache.cxf.transport.http.gzip.GZIPInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.servlet.ServletTransportFactory:java.util.Set getDestinationsPaths()",
            "org.apache.cxf.NSManager:java.util.Set getNamespaces()",
            "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:java.util.Collection getTokenIdentifiers()",
            "org.apache.cxf.wsdl.JAXBExtensionHelper$1:java.util.Iterator getPrefixes(java.lang.String)",
            "org.apache.cxf.tools.common.Tag:boolean equals(java.lang.Object)",
            "org.apache.cxf.tools.common.ToolContext:void addParameters(java.util.Map)",
            "org.apache.cxf.tools.common.VelocityGenerator:void doWrite(java.lang.String,java.io.Writer)",
            "org.apache.cxf.tools.common.model.JavaParameter:java.util.Collection getAnnotationTags()",
            "org.apache.cxf.wsdl11.SchemaUtil:void extractSchema(javax.wsdl.Definition,org.apache.cxf.common.xmlschema.SchemaCollection,java.util.List)",
            "org.apache.cxf.wsdl11.SchemaUtil:void addSchema(java.lang.String,javax.wsdl.extensions.schema.Schema)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void parseWSDL(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:java.util.Collection getImports(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addExtensibilityAttributes(javax.wsdl.extensions.AttributeExtensible,java.util.Map)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void activateAll()",
            "org.apache.cxf.attachment.AttachmentImpl:java.util.Iterator getHeaderNames()",
            "org.apache.cxf.aegis.util.jdom.StaxBuilder:void buildTree(org.jdom.JDOMFactory,javax.xml.stream.XMLStreamReader,org.jdom.Document)",
            "org.apache.cxf.jaxws.ServiceImpl:java.lang.Object getPort(org.apache.cxf.ws.addressing.EndpointReferenceType,java.lang.Class,javax.xml.ws.WebServiceFeature[])",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:void copyScoped(java.util.Map)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:void clear()",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:java.util.Set keySet()"
        ]
    },
    "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.util.Set keySet()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.util.Set entrySet()",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap$SpringBeanMapWrapper:java.util.Set keySet()"
        ]
    },
    "org.apache.cxf.message.MessageImpl:java.util.Set getContentFormats()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.message.MessageUtils:boolean isDOMPresent(org.apache.cxf.message.Message)",
            "org.apache.cxf.message.AbstractWrappedMessage:java.util.Set getContentFormats()",
            "org.apache.cxf.message.MessageImpl:void copyContent(org.apache.cxf.message.Message,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.FIStaxInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.AbstractDestination$1:void onMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.servlet.ServletTransportFactory:java.util.Set getDestinationsPaths()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.servlet.ServletController:void updateDests(javax.servlet.http.HttpServletRequest)",
            "org.apache.cxf.transport.servlet.ServletController:org.apache.cxf.transport.servlet.ServletDestination checkRestfulRequest(javax.servlet.http.HttpServletRequest)"
        ]
    },
    "org.apache.cxf.NSManager:java.util.Set getNamespaces()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:java.lang.String getPrefix(java.lang.String)"
        ]
    },
    "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:java.util.Collection getTokenIdentifiers()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.wsdl.JAXBExtensionHelper$1:java.util.Iterator getPrefixes(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl.JAXBExtensionHelper$MappingReaderDelegate$1:java.util.Iterator getPrefixes(java.lang.String)",
            "org.apache.cxf.aegis.util.jdom.StaxSerializer:boolean isDeclared(javax.xml.stream.XMLStreamWriter,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.tools.common.model.JavaParameter:java.util.Collection getAnnotationTags()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.extension.ExtensionManagerImpl:void activateAll()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.extension.DeferredMap:void undefer()"
        ]
    },
    "org.apache.cxf.attachment.AttachmentImpl:java.util.Iterator getHeaderNames()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.interceptors.MessageModeInInterceptor$MultiPartDataSource:void nextCurrent()"
        ]
    },
    "org.apache.cxf.interceptor.URIMappingInterceptor:java.lang.String getOperationName(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.URIMappingInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.common.util.StringUtils:java.lang.String formatVersionNumber(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.util.CacheMap:boolean containsKey(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.HttpHeaderHelper:java.lang.String getHeaderKey(java.lang.String)",
            "org.apache.cxf.common.xmlschema.FixedExtensionDeserializer:void deserialize(org.apache.ws.commons.schema.XmlSchemaObject,javax.xml.namespace.QName,org.w3c.dom.Node)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.common.util.CacheMap:void updateMainDataMap()",
            "org.apache.cxf.common.util.CacheMap:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.common.util.TwoStageMap:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.common.util.TwoStageMap:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.jaxb.JAXBDataBinding$1:javax.xml.transform.Result createOutput(java.lang.String,java.lang.String)",
            "org.apache.cxf.management.jmx.export.runtime.ModelMBeanInfoSupporter:boolean checkAttribute(java.lang.String)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:boolean isRecognizedQuery(java.lang.String,java.lang.String,org.apache.cxf.service.model.EndpointInfo,boolean)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void writeResponse(java.lang.String,java.lang.String,org.apache.cxf.service.model.EndpointInfo,java.io.OutputStream)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updateDoc(org.w3c.dom.Document,java.lang.String,java.util.Map,java.util.Map)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updateSchemaImports(javax.wsdl.extensions.schema.Schema,java.util.Map,java.lang.String)",
            "org.apache.cxf.transport.http.HTTPConduit:void transferProtocolHeadersToURLConnection(org.apache.cxf.message.Message,java.net.URLConnection)",
            "org.apache.cxf.transport.http.HTTPConduit:void setHeadersByClientPolicy(org.apache.cxf.message.Message,java.util.Map)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void copyRequestHeaders(org.apache.cxf.message.Message,java.util.Map)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void copyResponseHeaders(org.apache.cxf.message.Message,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:java.io.OutputStream flushHeaders(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.servlet.ServletContextResourceResolver:java.io.InputStream getAsStream(java.lang.String)",
            "org.apache.cxf.transport.servlet.ServletContextResourceResolver:java.lang.Object resolve(java.lang.String,java.lang.Class)",
            "org.apache.cxf.endpoint.ClientImpl:java.util.Map getRequestContext()",
            "org.apache.cxf.endpoint.ClientImpl:java.util.Map getResponseContext()",
            "org.apache.cxf.endpoint.ClientImpl:boolean isThreadLocalRequestContext()",
            "org.apache.cxf.wsdl.AbstractWSDLPlugin:boolean optionSet(java.util.Map,java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils$SchemaLSResourceResolver:org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.service.model.AbstractMessageContainer:void addMessagePart(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:boolean hasProperty(java.lang.String)",
            "org.apache.cxf.service.model.InterfaceInfo:org.apache.cxf.service.model.OperationInfo addOperation(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.BindingInfo:void addOperation(org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.service.model.OperationInfo:org.apache.cxf.service.model.FaultInfo addFault(javax.xml.namespace.QName,javax.xml.namespace.QName)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createWrappedMessageSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.AbstractMessageContainer,org.apache.cxf.service.model.AbstractMessageContainer,org.apache.ws.commons.schema.XmlSchema,javax.xml.namespace.QName)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.SchemaInfo getOrCreateSchema(org.apache.cxf.service.model.ServiceInfo,java.lang.String,boolean)",
            "org.apache.cxf.binding.soap.interceptor.SoapPreProtocolOutInterceptor:void setSoapAction(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.clustering.FailoverTargetSelector:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.tools.common.Tag:boolean equals(java.lang.Object)",
            "org.apache.cxf.tools.common.ToolContext:boolean containsKey(java.lang.String)",
            "org.apache.cxf.tools.common.ToolContext:boolean hasNamespace(java.lang.String)",
            "org.apache.cxf.tools.common.ToolContext:boolean hasExcludeNamespace(java.lang.String)",
            "org.apache.cxf.tools.common.ProcessorTestBase:boolean assertXmlEquals(java.io.File,java.io.File,java.util.List)",
            "org.apache.cxf.tools.common.model.JavaType:java.lang.String getDefaultTypeValue()",
            "org.apache.cxf.tools.util.ClassCollector:boolean containSeiClass(java.lang.String,java.lang.String)",
            "org.apache.cxf.tools.util.ClassCollector:boolean containTypesClass(java.lang.String,java.lang.String)",
            "org.apache.cxf.tools.util.ClassCollector:boolean containExceptionClass(java.lang.String,java.lang.String)",
            "org.apache.cxf.wsdl11.SchemaUtil:void addSchema(java.lang.String,javax.wsdl.extensions.schema.Schema)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(java.net.URL)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(org.w3c.dom.Element)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadAndRegister(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.aegis.type.DefaultTypeMapping:boolean isRegistered(java.lang.Class)",
            "org.apache.cxf.aegis.type.DefaultTypeMapping:boolean isRegistered(javax.xml.namespace.QName)",
            "org.apache.cxf.aegis.type.DefaultTypeMapping:void removeType(org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.jaxws.ServiceImpl:java.lang.Object getPort(javax.xml.namespace.QName,java.lang.Class,javax.xml.ws.WebServiceFeature[])",
            "org.apache.cxf.jaxws.EndpointImpl:void checkProperties()",
            "org.apache.cxf.jaxws.interceptors.SwAOutInterceptor:boolean callSWARefMethod(javax.xml.bind.JAXBContext)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:boolean isRequestor()",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:javax.xml.ws.handler.MessageContext$Scope getScope(java.lang.String)",
            "org.apache.cxf.jaxws.AbstractJAXWSMethodInvoker:void updateWebServiceContext(org.apache.cxf.message.Exchange,javax.xml.ws.handler.MessageContext)",
            "org.apache.cxf.xmlbeans.XmlBeansSchemaInitializer:org.apache.ws.commons.schema.XmlSchema getSchema(org.apache.xmlbeans.SchemaTypeSystem,java.lang.String)"
        ]
    },
    "org.apache.cxf.common.util.CacheMap:java.lang.Object get(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.MapNamespaceContext:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.helpers.HttpHeaderHelper:java.util.List getHeader(java.util.Map,java.lang.String)",
            "org.apache.cxf.helpers.HttpHeaderHelper:java.lang.String getHeaderKey(java.lang.String)",
            "org.apache.cxf.helpers.HttpHeaderHelper:java.lang.String mapCharset(java.lang.String)",
            "org.apache.cxf.helpers.XMLUtils:javax.xml.transform.TransformerFactory getTransformerFactory()",
            "org.apache.cxf.helpers.XMLUtils:javax.xml.parsers.DocumentBuilderFactory getDocumentBuilderFactory()",
            "org.apache.cxf.helpers.XMLUtils:javax.xml.namespace.QName getNamespace(java.util.Map,java.lang.String,java.lang.String)",
            "org.apache.cxf.common.xmlschema.FixedExtensionDeserializer:void deserialize(org.apache.ws.commons.schema.XmlSchemaObject,javax.xml.namespace.QName,org.w3c.dom.Node)",
            "org.apache.cxf.common.logging.Log4jLogger:void setLevel(java.util.logging.Level)",
            "org.apache.cxf.common.logging.Log4jLogger:void internalLogFormatted(java.lang.String,java.util.logging.LogRecord)",
            "org.apache.cxf.common.logging.Log4jLogger$HandlerWrapper:org.apache.log4j.Priority getThreshold()",
            "org.apache.cxf.common.util.ClassReader:void readAttributes()",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.common.util.ASMHelper:java.lang.String getClassCode(java.lang.Class)",
            "org.apache.cxf.common.util.ASMHelper:org.apache.cxf.common.util.ASMHelper$TypeHelperClassLoader getTypeHelperClassLoader(java.lang.Class)",
            "org.apache.cxf.common.util.ASMHelper$TypeHelperClassLoader:java.lang.Class lookupDefinedClass(java.lang.String)",
            "org.apache.cxf.common.util.CacheMap:void updateMainDataMap()",
            "org.apache.cxf.common.util.CacheMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.common.util.ParamReader:java.lang.String[] getParameterNames(java.lang.reflect.Member,java.lang.Class[])",
            "org.apache.cxf.common.util.ParamReader:org.apache.cxf.common.util.ParamReader$MethodInfo getMethodInfo()",
            "org.apache.cxf.common.util.TwoStageMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.resource.PropertiesResolver:java.lang.Object resolve(java.lang.String,java.lang.Class)",
            "org.apache.cxf.resource.URIResolver:void tryRemote(java.lang.String)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.util.List getBeanListForId(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void mapElementToJaxbProperty(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder,java.lang.String,java.lang.Class)",
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:java.lang.Object unmarshalFactoryString(java.lang.String,java.lang.Class)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void initWildcardDefinitionMap()",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureWithWildCard(java.lang.String,java.lang.Object)",
            "org.apache.cxf.jaxb.NamespaceMapper:java.lang.String getPreferredPrefix(java.lang.String,java.lang.String,boolean)",
            "org.apache.cxf.jaxb.JAXBUtils:java.lang.String builtInTypeToJavaType(java.lang.String)",
            "org.apache.cxf.jaxb.JAXBUtils:java.lang.Class holderClass(java.lang.String)",
            "org.apache.cxf.jaxb.JAXBDataBinding:org.apache.cxf.jaxb.JAXBDataBinding$CachedContextAndSchemas createJAXBContextAndSchemas(java.util.Set,java.lang.String)",
            "org.apache.cxf.jaxb.JAXBDataBinding:void scanPackages(java.util.Set)",
            "org.apache.cxf.jaxb.JAXBDataBinding$1:javax.xml.transform.Result createOutput(java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxb.WrapperHelperCompiler:boolean addCreateWrapperObject(java.lang.String,java.lang.Class)",
            "org.apache.cxf.jaxb.WrapperHelperCompiler:void createObjectWrapper(org.objectweb.asm.MethodVisitor,java.lang.Class)",
            "org.apache.cxf.management.counters.CounterRepository:org.apache.cxf.management.counters.Counter getCounter(javax.management.ObjectName)",
            "org.apache.cxf.staxutils.AbstractDOMStreamReader:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.staxutils.W3CDOMStreamWriter:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.message.MessageImpl:java.lang.Object getContent(java.lang.Class)",
            "org.apache.cxf.headers.HeaderManagerImpl:org.apache.cxf.headers.HeaderProcessor getHeaderProcessor(java.lang.String)",
            "org.apache.cxf.interceptor.StaxOutInterceptor:javax.xml.stream.XMLOutputFactory getXMLOutputFactory(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.util.Map keepInOrder(java.util.Map,org.apache.cxf.service.model.OperationInfo,java.util.List)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:org.apache.cxf.message.MessageContentsList getParameters(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.interceptor.ClientOutFaultObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxInInterceptor:javax.xml.stream.XMLInputFactory getXMLInputFactory(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.FIStaxOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.ConduitInitiatorManagerImpl:org.apache.cxf.transport.ConduitInitiator getConduitInitiator(java.lang.String)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void writeResponse(java.lang.String,java.lang.String,org.apache.cxf.service.model.EndpointInfo,java.io.OutputStream)",
            "org.apache.cxf.transport.http.DigestAuthSupplier:java.lang.String getPreemptiveAuthorization(org.apache.cxf.transport.http.HTTPConduit,java.net.URL,org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:void transferProtocolHeadersToURLConnection(org.apache.cxf.message.Message,java.net.URLConnection)",
            "org.apache.cxf.transport.http.HTTPConduit:void logProtocolHeaders(java.util.logging.Level,org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:java.lang.String extractAuthorizationRealm(java.util.Map)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void copyRequestHeaders(org.apache.cxf.message.Message,java.util.Map)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void copyResponseHeaders(org.apache.cxf.message.Message,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:java.lang.String getId(java.util.Map)",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponseInternal()",
            "org.apache.cxf.transport.http.gzip.GZIPOutInterceptor:void addHeader(org.apache.cxf.message.Message,java.lang.String,java.lang.String)",
            "org.apache.cxf.transport.AbstractMultiplexDestination:java.lang.String getId(java.util.Map)",
            "org.apache.cxf.transport.DestinationFactoryManagerImpl:org.apache.cxf.transport.DestinationFactory getDestinationFactory(java.lang.String)",
            "org.apache.cxf.transport.servlet.ServletContextResourceResolver:java.io.InputStream getAsStream(java.lang.String)",
            "org.apache.cxf.transport.servlet.ServletContextResourceResolver:java.lang.Object resolve(java.lang.String,java.lang.Class)",
            "org.apache.cxf.transport.servlet.ServletTransportFactory:org.apache.cxf.transport.servlet.ServletDestination getDestinationForPath(java.lang.String)",
            "org.apache.cxf.transport.servlet.AbstractCXFServlet:void init(javax.servlet.ServletConfig)",
            "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser$SpringJettyHTTPServerEngine:void finalizeConfig()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPTransportFactory:org.apache.cxf.transport.Destination getDestination(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPTransportFactory:org.apache.cxf.transport.http_jetty.JettyHTTPDestination createDestination(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine retrieveJettyHTTPServerEngine(int)",
            "org.apache.cxf.transport.jms.JMSUtils:void addContentTypeToProtocolHeader(org.apache.cxf.message.Message)",
            "org.apache.cxf.NSManager:java.lang.String getPrefixFromNS(java.lang.String)",
            "org.apache.cxf.extension.RegistryImpl:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.endpoint.ClientImpl:java.util.Map getRequestContext()",
            "org.apache.cxf.endpoint.ClientImpl:java.util.Map getResponseContext()",
            "org.apache.cxf.endpoint.ClientImpl:boolean isThreadLocalRequestContext()",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.ClientImpl:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.addressing.ContextUtils:java.lang.String getActionFromServiceModel(org.apache.cxf.message.Message,java.lang.Exception)",
            "org.apache.cxf.ws.addressing.ContextUtils:java.lang.String getAction(org.apache.cxf.service.model.Extensible)",
            "org.apache.cxf.ws.addressing.MAPAggregator:boolean validateIncomingMAPs(org.apache.cxf.ws.addressing.AddressingProperties,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void propogateAction(org.apache.cxf.ws.addressing.AttributedURIType,org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void restoreExchange(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.addressing.AddressingProperties)",
            "org.apache.cxf.ws.policy.PolicyRegistryImpl:org.apache.neethi.Policy lookup(java.lang.String)",
            "org.apache.cxf.ws.security.policy.interceptors.HttpsTokenInterceptorProvider$HttpsTokenInInterceptor:void assertHttps(java.util.Collection,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.policy.interceptors.HttpsTokenInterceptorProvider$HttpsTokenOutInterceptor:void assertHttps(java.util.Collection,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.trust.STSClient:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:org.apache.cxf.ws.security.tokenstore.SecurityToken getToken(java.lang.String)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:org.apache.ws.security.components.crypto.Crypto getCrypto(org.apache.cxf.ws.security.policy.model.TokenWrapper,java.lang.String,java.lang.String)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:java.util.Properties getProps(java.lang.Object,org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor:void <init>(java.util.Map)",
            "org.apache.cxf.ws.security.wss4j.AbstractWSS4JInterceptor:java.lang.Object getOption(java.lang.String)",
            "org.apache.cxf.ws.security.wss4j.AbstractWSS4JInterceptor:org.apache.ws.security.components.crypto.Crypto loadSignatureCrypto(org.apache.ws.security.handler.RequestData)",
            "org.apache.cxf.ws.security.wss4j.AbstractWSS4JInterceptor:org.apache.ws.security.components.crypto.Crypto loadDecryptionCrypto(org.apache.ws.security.handler.RequestData)",
            "org.apache.cxf.ws.security.wss4j.AbstractWSS4JInterceptor:org.apache.ws.security.components.crypto.Crypto loadEncryptionCrypto(org.apache.ws.security.handler.RequestData)",
            "org.apache.cxf.ws.rm.Source:org.apache.cxf.ws.rm.SourceSequence getSequence(org.apache.cxf.ws.rm.Identifier)",
            "org.apache.cxf.ws.rm.Source:org.apache.cxf.ws.rm.SourceSequence getAssociatedSequence(org.apache.cxf.ws.rm.Identifier)",
            "org.apache.cxf.ws.rm.RMOutInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.Destination:org.apache.cxf.ws.rm.DestinationSequence getSequence(org.apache.cxf.ws.rm.Identifier)",
            "org.apache.cxf.ws.rm.RMManager:org.apache.cxf.ws.rm.RMEndpoint getReliableEndpoint(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.RMManager:void shutdownReliableEndpoint(org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl:java.util.List getSequenceCandidates(java.lang.String)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void add(org.apache.cxf.interceptor.Interceptor,boolean)",
            "org.apache.cxf.workqueue.WorkQueueManagerImpl:org.apache.cxf.workqueue.AutomaticWorkQueue getNamedWorkQueue(java.lang.String)",
            "org.apache.cxf.databinding.AbstractDataBinding:void updateSchemaLocation(org.w3c.dom.Element)",
            "org.apache.cxf.databinding.source.mime.MimeSerializer:void serialize(org.apache.ws.commons.schema.XmlSchemaObject,java.lang.Class,org.w3c.dom.Node)",
            "org.apache.cxf.wsdl.AbstractWSDLPlugin:java.lang.String getOption(java.util.Map,java.lang.String)",
            "org.apache.cxf.wsdl.AbstractWSDLPlugin:java.lang.Object getOption(java.util.Map,java.lang.String,java.lang.Class)",
            "org.apache.cxf.wsdl.AbstractWSDLPlugin:java.lang.Object getOption(java.util.Map,java.lang.Class)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:int getIndentLevel(java.lang.Class)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:java.lang.String getWSDLLocation(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:java.lang.String getEndpointReferenceId(java.util.Map)",
            "org.apache.cxf.service.model.BindingOperationInfo:org.apache.cxf.service.model.BindingFaultInfo getFault(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.AbstractMessageContainer:void addMessagePart(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePart(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:java.lang.Object getExtensionAttribute(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperationForWrapperElement(org.apache.cxf.message.Exchange,javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.service.model.InterfaceInfo:org.apache.cxf.service.model.OperationInfo getOperation(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.MessageInfo getMessage(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.MessageInfo:java.util.List getOrderedParts(java.util.List)",
            "org.apache.cxf.service.model.BindingInfo:org.apache.cxf.service.model.BindingOperationInfo getOperation(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.OperationInfo:org.apache.cxf.service.model.FaultInfo getFault(javax.xml.namespace.QName)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void addImport(org.apache.ws.commons.schema.XmlSchema,java.lang.String)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isWrapped(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isRPC(java.lang.reflect.Method)",
            "org.apache.cxf.binding.BindingFactoryManagerImpl:org.apache.cxf.binding.BindingFactory getBindingFactory(java.lang.String)",
            "org.apache.cxf.binding.soap.interceptor.SoapActionInInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.SoapVersionFactory:org.apache.cxf.binding.soap.SoapVersion getSoapVersion(java.lang.String)",
            "org.apache.cxf.clustering.AbstractStaticFailoverStrategy:java.util.List getAlternateEndpoints(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.clustering.FailoverTargetSelector:void complete(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.clustering.FailoverTargetSelector:void overrideAddressProperty(java.util.Map)",
            "org.apache.cxf.tools.common.Tag:boolean equals(java.lang.Object)",
            "org.apache.cxf.tools.common.ToolContext:void addParameters(java.util.Map)",
            "org.apache.cxf.tools.common.ToolContext:java.lang.Object get(java.lang.String)",
            "org.apache.cxf.tools.common.ToolContext:java.lang.String mapNamespaceToPackageName(java.lang.String)",
            "org.apache.cxf.tools.common.ToolContext:java.lang.String getExcludePackageName(java.lang.String)",
            "org.apache.cxf.tools.common.VelocityGenerator:void doWrite(java.lang.String,java.io.Writer)",
            "org.apache.cxf.tools.common.ProcessorTestBase:boolean assertXmlEquals(java.io.File,java.io.File,java.util.List)",
            "org.apache.cxf.tools.common.ProcessorTestBase:void assertAttributesEquals(javax.xml.namespace.QName,java.util.Map,java.util.Map,java.util.Collection)",
            "org.apache.cxf.tools.common.model.JavaType:java.lang.String getDefaultTypeValue()",
            "org.apache.cxf.tools.common.model.JavaMethod:boolean isEquiv(java.lang.String,java.lang.String)",
            "org.apache.cxf.tools.common.model.JavaParameter:org.apache.cxf.tools.common.model.JAnnotation getAnnotation(java.lang.String)",
            "org.apache.cxf.tools.util.BuiltInTypesJavaMappingUtil:java.lang.String getJType(java.lang.String,java.lang.String)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:java.lang.String getBindingAnnotation(java.lang.String)",
            "org.apache.cxf.tools.util.PropertyUtil:java.lang.String getProperty(java.lang.String)",
            "org.apache.cxf.tools.util.ClassCollector:java.lang.String getTypesFullClassName(java.lang.String,java.lang.String)",
            "org.apache.cxf.wsdl11.SchemaUtil:void extractSchema(javax.wsdl.Definition,org.apache.cxf.common.xmlschema.SchemaCollection,java.util.List)",
            "org.apache.cxf.wsdl11.SchemaUtil:void addSchema(java.lang.String,javax.wsdl.extensions.schema.Schema)",
            "org.apache.cxf.wsdl11.SchemaUtil:boolean isSchemaParsed(java.lang.String,java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:java.util.Collection getImports(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addExtensibilityAttributes(javax.wsdl.extensions.AttributeExtensible,java.util.Map)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(java.net.URL)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(org.w3c.dom.Element)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:org.apache.cxf.service.model.ServiceSchemaInfo getSchemasForDefinition(javax.wsdl.Definition)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void activateViaNS(java.lang.String)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void processExtension(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadAndRegister(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:java.lang.Object getExtension(java.lang.String,java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void <init>(java.util.Map,java.util.Map)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:java.lang.String getBusId(java.util.Map)",
            "org.apache.cxf.bus.CXFBusImpl:java.lang.Object getExtension(java.lang.Class)",
            "org.apache.cxf.attachment.AttachmentImpl:java.lang.String getHeader(java.lang.String)",
            "org.apache.cxf.frontend.ClientFactoryBean:void applyExtraClass()",
            "org.apache.cxf.frontend.ClientFactoryBean:void applyProperties(org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.frontend.SimpleMethodDispatcher:org.apache.cxf.service.model.BindingOperationInfo getBindingOperation(java.lang.reflect.Method,org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.frontend.SimpleMethodDispatcher:java.lang.reflect.Method getMethod(org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.frontend.SimpleMethodDispatcher:java.lang.reflect.Method getPrimaryMethod(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory:org.apache.cxf.endpoint.Endpoint createEndpoint()",
            "org.apache.cxf.frontend.ServerFactoryBean:void applyExtraClass()",
            "org.apache.cxf.aegis.Context:java.lang.Object getProperty(java.lang.Class)",
            "org.apache.cxf.aegis.util.jdom.StaxBuilder:void buildTree(org.jdom.JDOMFactory,javax.xml.stream.XMLStreamReader,org.jdom.Document)",
            "org.apache.cxf.aegis.util.jdom.StaxBuilder:int resolveAttrType(java.lang.String)",
            "org.apache.cxf.aegis.util.stax.JDOMStreamWriter:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.aegis.util.stax.JDOMStreamReader:java.lang.String getDeclaredURI(java.lang.String)",
            "org.apache.cxf.aegis.databinding.XMLStreamDataWriter:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.aegis.databinding.ElementDataWriter:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:org.apache.cxf.aegis.type.Type getType(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.aegis.type.basic.XMLBeanTypeInfo:org.apache.cxf.aegis.type.basic.BeanTypePropertyInfo getPropertyInfo(javax.xml.namespace.QName)",
            "org.apache.cxf.aegis.type.basic.BeanType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.InterfaceInvocationHandler:java.lang.Object readProperty(java.lang.Object)",
            "org.apache.cxf.aegis.type.basic.BeanTypeInfo:org.apache.cxf.aegis.type.Type getType(javax.xml.namespace.QName)",
            "org.apache.cxf.aegis.type.basic.BeanTypeInfo:javax.xml.namespace.QName getMappedTypeName(javax.xml.namespace.QName)",
            "org.apache.cxf.aegis.type.basic.BeanTypeInfo:java.lang.String getPropertyNameFromMappedName(javax.xml.namespace.QName)",
            "org.apache.cxf.aegis.type.encoded.MarshalRegistry:java.lang.String getInstanceId(java.lang.Object)",
            "org.apache.cxf.aegis.type.XMLTypeCreator:org.w3c.dom.Document getDocument(java.lang.Class)",
            "org.apache.cxf.aegis.type.DefaultTypeMapping:org.apache.cxf.aegis.type.Type getType(java.lang.Class)",
            "org.apache.cxf.aegis.type.DefaultTypeMapping:org.apache.cxf.aegis.type.Type getType(javax.xml.namespace.QName)",
            "org.apache.cxf.aegis.type.DefaultTypeMapping:javax.xml.namespace.QName getTypeQName(java.lang.Class)",
            "org.apache.cxf.jaxws.handler.HandlerResolverImpl:java.util.List getHandlerChain(javax.xml.ws.handler.PortInfo)",
            "org.apache.cxf.jaxws.handler.InitParamResourceResolver:java.lang.Object resolve(java.lang.String,java.lang.Class)",
            "org.apache.cxf.jaxws.support.JaxWsServiceConfiguration:javax.jws.WebParam getWebParam(java.lang.reflect.Method,int)",
            "org.apache.cxf.jaxws.support.JaxWsServiceConfiguration:java.lang.Class getResponseWrapper(java.lang.reflect.Method)",
            "org.apache.cxf.jaxws.support.JaxWsServiceConfiguration:java.lang.Class getRequestWrapper(java.lang.reflect.Method)",
            "org.apache.cxf.jaxws.JaxWsClientProxy:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])",
            "org.apache.cxf.jaxws.ServiceImpl:java.lang.Object createPort(javax.xml.namespace.QName,org.apache.cxf.ws.addressing.EndpointReferenceType,java.lang.Class,javax.xml.ws.WebServiceFeature[])",
            "org.apache.cxf.jaxws.ServiceImpl:org.apache.cxf.jaxws.handler.PortInfoImpl getPortInfo(javax.xml.namespace.QName)",
            "org.apache.cxf.jaxws.EndpointImpl:void checkProperties()",
            "org.apache.cxf.jaxws.DispatchImpl:java.lang.Object invoke(java.lang.Object,boolean)",
            "org.apache.cxf.jaxws.DispatchImpl:java.util.concurrent.Future invokeAsync(java.lang.Object,javax.xml.ws.AsyncHandler)",
            "org.apache.cxf.jaxws.interceptors.SwAOutInterceptor:boolean callSWARefMethod(javax.xml.bind.JAXBContext)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:void <init>(java.util.Map,org.apache.cxf.message.Exchange,javax.xml.ws.handler.MessageContext$Scope)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:void copyScoped(java.util.Map)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:java.lang.String mapKey(java.lang.String)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:java.lang.String mapKeyReverse(java.lang.String)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:java.lang.Object put(java.lang.String,java.lang.Object,javax.xml.ws.handler.MessageContext$Scope)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:javax.xml.ws.handler.MessageContext$Scope getScope(java.lang.String)",
            "org.apache.cxf.jaxws.AbstractJAXWSMethodInvoker:void updateWebServiceContext(org.apache.cxf.message.Exchange,javax.xml.ws.handler.MessageContext)",
            "org.apache.cxf.xmlbeans.XmlBeansSchemaInitializer:org.apache.ws.commons.schema.XmlSchema getSchema(org.apache.xmlbeans.SchemaTypeSystem,java.lang.String)",
            "org.apache.cxf.xmlbeans.XmlBeansSchemaInitializer:void mapClass(org.apache.cxf.service.model.MessagePartInfo,java.lang.Class)",
            "org.apache.cxf.xmlbeans.tools.XMLBeansSchemaTypeUtils:java.lang.String getNaturalJavaClassName(org.apache.xmlbeans.SchemaType)"
        ]
    },
    "org.apache.cxf.common.util.CacheMap:int size()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.WeakIdentityHashMap:int size()",
            "org.apache.cxf.common.util.CacheMap:int size()",
            "org.apache.cxf.common.util.TwoStageMap:int size()",
            "org.apache.cxf.common.util.TwoStageMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:int size()",
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.util.Map keepInOrder(java.util.Map,org.apache.cxf.service.model.OperationInfo,java.util.List)",
            "org.apache.cxf.transport.http.HTTPConduit:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.RMManager:void shutdown()",
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl:boolean isEmpty()",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.wsdl.Port getPort(org.apache.cxf.wsdl.WSDLManager,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.service.model.AbstractMessageContainer:void addMessagePart(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo addOutOfBandMessagePart(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.AbstractMessageContainer:int size()",
            "org.apache.cxf.service.model.OperationInfo:boolean hasFaults()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createMessageParts(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.binding.soap.interceptor.SoapPreProtocolOutInterceptor:void setSoapAction(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.tools.common.ToolContext:boolean isExcludeNamespaceEnabled()",
            "org.apache.cxf.wsdl11.SchemaUtil:void addSchema(java.lang.String,javax.wsdl.extensions.schema.Schema)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildMockServices(javax.wsdl.Definition)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:int size()"
        ]
    },
    "org.apache.cxf.common.util.CacheMap:java.util.Collection values()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.WSDLHelper:javax.wsdl.BindingOperation getBindingOperation(javax.wsdl.Definition,java.lang.String)",
            "org.apache.cxf.helpers.WSDLHelper:java.util.List getPortTypes(javax.wsdl.Definition)",
            "org.apache.cxf.helpers.WSDLHelper:java.util.List getInMessageParts(javax.wsdl.Operation)",
            "org.apache.cxf.helpers.WSDLHelper:java.util.List getOutMessageParts(javax.wsdl.Operation)",
            "org.apache.cxf.helpers.WSDLHelper:javax.wsdl.Binding getBinding(javax.wsdl.BindingOperation,javax.wsdl.Definition)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.util.Collection values()",
            "org.apache.cxf.common.util.CacheMap:java.util.Collection values()",
            "org.apache.cxf.common.util.TwoStageMap:java.util.Collection values()",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.util.Collection values()",
            "org.apache.cxf.management.jmx.export.runtime.ModelMBeanInfoSupporter:javax.management.modelmbean.ModelMBeanInfo buildModelMBeanInfo(javax.management.Descriptor)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:org.apache.cxf.message.MessageContentsList getParameters(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.transport.ConduitInitiatorManagerImpl:org.apache.cxf.transport.ConduitInitiator getConduitInitiatorForUri(java.lang.String)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updateDefinition(javax.wsdl.Definition,java.util.Map,java.util.Map,java.lang.String,org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updatePublishedEndpointUrl(java.lang.String,javax.wsdl.Definition,javax.xml.namespace.QName)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updateSchemaImports(javax.wsdl.extensions.schema.Schema,java.util.Map,java.lang.String)",
            "org.apache.cxf.transport.http.HTTPConduit:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.DestinationFactoryManagerImpl:org.apache.cxf.transport.DestinationFactory getDestinationFactoryForUri(java.lang.String)",
            "org.apache.cxf.transport.servlet.ServletTransportFactory:java.util.Collection getDestinations()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void postShutdown()",
            "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:org.apache.cxf.ws.security.tokenstore.SecurityToken getToken(java.lang.String)",
            "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:java.util.Collection getTokens(org.apache.cxf.ws.security.tokenstore.SecurityToken$State)",
            "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:void processTokenExpiry()",
            "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:void removeCancelledTokens()",
            "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:void removeExpiredTokens()",
            "org.apache.cxf.ws.rm.Source:java.util.Collection getAllSequences()",
            "org.apache.cxf.ws.rm.Source:java.util.Collection getAllUnacknowledgedSequences()",
            "org.apache.cxf.ws.rm.Destination:java.util.Collection getAllSequences()",
            "org.apache.cxf.ws.rm.RMManager:void shutdown()",
            "org.apache.cxf.workqueue.WorkQueueManagerImpl:void shutdown(boolean)",
            "org.apache.cxf.workqueue.WorkQueueManagerImpl:void run()",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.wsdl.Port getPort(org.apache.cxf.wsdl.WSDLManager,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.service.model.BindingOperationInfo:java.util.Collection getFaults()",
            "org.apache.cxf.service.model.AbstractMessageContainer:int getMessagePartIndex(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePartByIndex(int)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePart(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.AbstractMessageContainer:java.util.List getMessageParts()",
            "org.apache.cxf.service.model.InterfaceInfo:java.util.Collection getOperations()",
            "org.apache.cxf.service.model.BindingInfo:java.util.Collection getOperations()",
            "org.apache.cxf.service.model.BindingInfo:org.apache.cxf.service.model.BindingOperationInfo getOperation(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.OperationInfo:java.util.Collection getFaults()",
            "org.apache.cxf.binding.AbstractBindingFactory:org.apache.cxf.service.model.BindingInfo initializeBindingInfo(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding,org.apache.cxf.service.model.BindingInfo)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:void buildMessage(org.apache.cxf.service.model.MessageInfo,javax.wsdl.Message,org.apache.cxf.common.xmlschema.SchemaCollection,int,java.lang.String)",
            "org.apache.cxf.binding.soap.SoapVersionFactory:java.util.Iterator getVersions()",
            "org.apache.cxf.tools.common.model.JavaMethod:java.util.Collection getAnnotations()",
            "org.apache.cxf.tools.common.model.JavaParameter:java.util.Collection getAnnotations()",
            "org.apache.cxf.tools.util.SOAPBindingUtil:java.util.List getBindingOperationSoapFaults(javax.wsdl.BindingOperation)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:void addSOAPNamespace(javax.wsdl.Definition,boolean)",
            "org.apache.cxf.tools.util.ClassCollector:java.util.Collection getGeneratedFileInfo()",
            "org.apache.cxf.wsdl11.SchemaUtil:void parseImports(javax.wsdl.Definition,java.util.List)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildMockServices(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition,javax.wsdl.Service,javax.xml.namespace.QName,org.apache.cxf.service.model.DescriptionInfo)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void parseImports(javax.wsdl.Definition,java.util.List)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.BindingInfo buildBinding(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding)",
            "org.apache.cxf.bus.spring.Jsr250BeanPostProcessor:java.lang.Object postProcessAfterInitialization(java.lang.Object,java.lang.String)",
            "org.apache.cxf.aegis.type.encoded.MarshalRegistry$1:java.lang.Object next()",
            "org.apache.cxf.jaxws.ServiceImpl:void initializePorts()",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:java.util.Collection values()"
        ]
    },
    "org.apache.cxf.common.util.CacheMap:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:java.util.List enumeratorValues(org.apache.ws.commons.schema.XmlSchemaSimpleType)",
            "org.apache.cxf.common.logging.Log4jLogger$HandlerWrapper:void append(org.apache.log4j.spi.LoggingEvent)",
            "org.apache.cxf.common.util.PackageUtils:java.lang.String combine(java.util.List,char)",
            "org.apache.cxf.common.util.CacheMap:java.lang.String toString()",
            "org.apache.cxf.configuration.spring.SpringBeanMap:void processBeans(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.message.MessageUtils:boolean isTrue(java.lang.Object)",
            "org.apache.cxf.endpoint.ClientImpl:boolean isThreadLocalRequestContext()",
            "org.apache.cxf.ws.addressing.ContextUtils:java.lang.String getAction(org.apache.cxf.service.model.Extensible)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationOutInterceptor:void renewToken(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.ws.security.tokenstore.SecurityToken,org.apache.cxf.ws.security.policy.model.SecureConversationToken)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.policy.interceptors.IssuedTokenInterceptorProvider$IssuedTokenOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationTokenInterceptorProvider:java.lang.String setupClient(org.apache.cxf.ws.security.trust.STSClient,org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.ws.security.policy.model.SecureConversationToken,boolean)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:java.lang.String checkAsymetricBinding(org.apache.cxf.ws.policy.AssertionInfoMap,java.lang.String,org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:java.lang.String checkSymetricBinding(org.apache.cxf.ws.policy.AssertionInfoMap,java.lang.String,org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.wsdl.AbstractWSDLPlugin:java.lang.String getOption(java.util.Map,java.lang.String)",
            "org.apache.cxf.tools.common.toolspec.parser.ErrorVisitor:java.lang.String toString()",
            "org.apache.cxf.tools.util.URIParserUtil:java.lang.String combine(java.util.List,char)",
            "org.apache.cxf.aegis.xml.jdom.JDOMWriter:void writeValue(java.lang.Object)",
            "org.apache.cxf.aegis.xml.jdom.JDOMWriter:void writeValue(java.lang.Object,java.lang.String,java.lang.String)",
            "org.apache.cxf.aegis.xml.jdom.AttributeWriter:void writeValue(java.lang.Object)",
            "org.apache.cxf.aegis.xml.stax.AttributeWriter:void writeValue(java.lang.Object)",
            "org.apache.cxf.aegis.xml.stax.ElementWriter:void writeValue(java.lang.Object)",
            "org.apache.cxf.aegis.type.basic.BigIntegerType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.BigDecimalType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.jaxws.EndpointImpl:void checkProperties()",
            "org.apache.cxf.xmlbeans.tools.XMLBeansToolingDataBinding:void initialize(org.apache.cxf.tools.common.ToolContext)"
        ]
    },
    "org.apache.cxf.helpers.MapNamespaceContext:void addNamespaces(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:void putAll(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap$SpringBeanMapWrapper:void putAll(java.util.Map)"
        ]
    },
    "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void <init>(org.apache.cxf.Bus,java.util.Map,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineFactoryBeanDefinitionParser$SpringJettyHTTPServerEngineFactory:void <init>(org.apache.cxf.Bus,java.util.Map,java.util.Map)"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl$EchoContext:void putAll(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.MapNamespaceContext:void addNamespaces(java.util.Map)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:void putAll(java.util.Map)",
            "org.apache.cxf.jaxb.JAXBDataBinding:org.apache.cxf.jaxb.JAXBDataBinding$CachedContextAndSchemas createJAXBContextAndSchemas(java.util.Set,java.lang.String)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void <init>(org.apache.cxf.Bus,java.util.Map,java.util.Map)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] processResult(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,java.util.Map)",
            "org.apache.cxf.endpoint.ClientImpl$EchoContext:void putAll(java.util.Map)",
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.RelatesToType convert(org.apache.cxf.ws.addressing.v200408.Relationship)",
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.RelatesToType convert(org.apache.cxf.ws.addressing.v200403.Relationship)",
            "org.apache.cxf.ws.addressing.VersionTransformer:void putAll(java.util.Map,java.util.Map)",
            "org.apache.cxf.ws.security.trust.STSClient:void setProperties(java.util.Map)",
            "org.apache.cxf.ws.security.trust.STSClient:org.apache.cxf.ws.security.tokenstore.SecurityToken requestSecurityToken(java.lang.String,java.lang.String,java.lang.String,org.apache.cxf.ws.security.tokenstore.SecurityToken)",
            "org.apache.cxf.ws.security.trust.STSClient:boolean validateSecurityToken(org.apache.cxf.ws.security.tokenstore.SecurityToken,java.lang.String)",
            "org.apache.cxf.ws.security.trust.STSClient:void cancelSecurityToken(org.apache.cxf.ws.security.tokenstore.SecurityToken)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void doEndorse()",
            "org.apache.cxf.tools.common.ToolContext:void loadDefaultNS2Pck(java.io.InputStream)",
            "org.apache.cxf.tools.common.ToolContext:void loadDefaultExcludes(java.io.InputStream)",
            "org.apache.cxf.wsdl11.SchemaUtil:void extractSchema(javax.wsdl.Definition,org.apache.cxf.common.xmlschema.SchemaCollection,java.util.List)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void getSchemas(javax.wsdl.Definition,org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.jaxws.JaxWsProxyFactoryBean:org.apache.cxf.frontend.ClientProxy clientClientProxy(org.apache.cxf.endpoint.Client)",
            "org.apache.cxf.jaxws.EndpointImpl:org.apache.cxf.endpoint.ServerImpl getServer(java.lang.String)"
        ]
    },
    "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.RelatesToType convert(org.apache.cxf.ws.addressing.v200408.Relationship)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.soap.VersionTransformer:java.lang.Object decodeAsNative(java.lang.String,java.lang.Class,org.w3c.dom.Element,javax.xml.bind.Unmarshaller)"
        ]
    },
    "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.RelatesToType convert(org.apache.cxf.ws.addressing.v200403.Relationship)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.soap.VersionTransformer:java.lang.Object decodeAsNative(java.lang.String,java.lang.Class,org.w3c.dom.Element,javax.xml.bind.Unmarshaller)"
        ]
    },
    "org.apache.cxf.ws.addressing.VersionTransformer:void putAll(java.util.Map,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.v200408.AttributedURI convert(org.apache.cxf.ws.addressing.AttributedURIType)",
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.v200403.AttributedURI convertTo200403(org.apache.cxf.ws.addressing.AttributedURIType)",
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.AttributedURIType convert(org.apache.cxf.ws.addressing.v200408.AttributedURI)",
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.AttributedURIType convert(org.apache.cxf.ws.addressing.v200403.AttributedURI)",
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.v200408.EndpointReferenceType convert(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.v200403.EndpointReferenceType convertTo200403(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.EndpointReferenceType convert(org.apache.cxf.ws.addressing.v200408.EndpointReferenceType)",
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.EndpointReferenceType convert(org.apache.cxf.ws.addressing.v200403.EndpointReferenceType)",
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.v200408.Relationship convert(org.apache.cxf.ws.addressing.RelatesToType)",
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.v200403.Relationship convertTo200403(org.apache.cxf.ws.addressing.RelatesToType)"
        ]
    },
    "org.apache.cxf.ws.security.trust.STSClient:void setProperties(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void doEndorse()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AsymmetricBindingHandler:void doSignBeforeEncrypt()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AsymmetricBindingHandler:void doEncryptBeforeSign()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.SymmetricBindingHandler:void doEncryptBeforeSign()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.SymmetricBindingHandler:void doSignBeforeEncrypt()"
        ]
    },
    "org.apache.cxf.tools.common.ToolContext:void loadDefaultNS2Pck(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.tools.common.ToolContext:void loadDefaultExcludes(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.wsdl11.WSDLServiceBuilder:void getSchemas(javax.wsdl.Definition,org.apache.cxf.service.model.ServiceInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildMockServices(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.ServiceInfo buildMockService(javax.wsdl.Definition,javax.wsdl.PortType)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition,javax.wsdl.Service,javax.xml.namespace.QName,org.apache.cxf.service.model.DescriptionInfo)"
        ]
    },
    "org.apache.cxf.jaxws.JaxWsProxyFactoryBean:org.apache.cxf.frontend.ClientProxy clientClientProxy(org.apache.cxf.endpoint.Client)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.frontend.ClientProxyFactoryBean:java.lang.Object create()"
        ]
    },
    "org.apache.cxf.jaxws.EndpointImpl:org.apache.cxf.endpoint.ServerImpl getServer(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.EndpointImpl:void doPublish(java.lang.String)",
            "org.apache.cxf.jaxws.EndpointImpl:org.apache.cxf.endpoint.ServerImpl getServer()",
            "org.apache.cxf.jaxws.EndpointImpl:org.apache.cxf.endpoint.Endpoint getEndpoint()"
        ]
    },
    "org.apache.cxf.common.injection.ResourceInjector:void construct(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.invoker.PerRequestFactory:java.lang.Object create(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.bus.spring.Jsr250BeanPostProcessor:java.lang.Object postProcessAfterInitialization(java.lang.Object,java.lang.String)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadAndRegister(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.jaxws.JaxWsProxyFactoryBean:void buildHandlerChain(org.apache.cxf.jaxws.JaxWsClientProxy)",
            "org.apache.cxf.jaxws.handler.HandlerResolverImpl:void configHandler(javax.xml.ws.handler.Handler)",
            "org.apache.cxf.jaxws.handler.HandlerChainBuilder:void initializeViaInjection(javax.xml.ws.handler.Handler,java.util.Map)",
            "org.apache.cxf.jaxws.JaxWsServerFactoryBean:void injectResources(java.lang.Object)"
        ]
    },
    "org.apache.cxf.common.injection.ResourceInjector:void construct(java.lang.Object,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.JaxWsProxyFactoryBean:void buildHandlerChain(org.apache.cxf.jaxws.JaxWsClientProxy)",
            "org.apache.cxf.jaxws.JaxWsServerFactoryBean:void injectResources(java.lang.Object)"
        ]
    },
    "org.apache.cxf.common.injection.ResourceInjector:void destroy(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.Jsr250BeanPostProcessor:void postProcessBeforeDestruction(java.lang.Object,java.lang.String)"
        ]
    },
    "org.apache.cxf.common.annotation.AnnotationProcessor:void accept(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.injection.ResourceInjector:void inject(java.lang.Object,java.lang.Class)",
            "org.apache.cxf.common.annotation.AnnotationProcessor:void accept(org.apache.cxf.common.'annotation'.AnnotationVisitor)"
        ]
    },
    "org.apache.cxf.resource.DefaultResourceManager:java.lang.Object resolveResource(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.trust.STSClient:org.apache.ws.security.components.crypto.Crypto createCrypto(boolean)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:org.apache.ws.security.components.crypto.Crypto getCrypto(org.apache.cxf.ws.security.policy.model.TokenWrapper,java.lang.String,java.lang.String)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:java.util.Properties getProps(java.lang.Object,org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.wsdl11.ResourceManagerWSDLLocator:org.xml.sax.InputSource getInputSource()",
            "org.apache.cxf.frontend.ServerFactoryBean:void initializeServiceFactory()"
        ]
    },
    "org.apache.cxf.resource.DefaultResourceManager:java.lang.Object resolveResource(java.lang.String,java.lang.Class,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.injection.ResourceInjector:java.lang.Object resolveResource(java.lang.String,java.lang.Class)"
        ]
    },
    "org.apache.cxf.resource.DefaultResourceManager:java.io.InputStream getResourceAsStream(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.ResourceManagerWSDLLocator:org.xml.sax.InputSource getInputSource()"
        ]
    },
    "org.apache.cxf.configuration.spring.AbstractSpringBeanMap$SpringBeanMapWrapper:java.util.Set entrySet()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.MapNamespaceContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.util.Set entrySet()",
            "org.apache.cxf.common.util.CacheMap:java.util.Set entrySet()",
            "org.apache.cxf.common.util.CacheMap:void putAll(java.util.Map)",
            "org.apache.cxf.common.util.TwoStageMap:void putAll(java.util.Map)",
            "org.apache.cxf.common.util.TwoStageMap:java.util.Set entrySet()",
            "org.apache.cxf.jaxb.io.DataWriterImpl:javax.xml.bind.Marshaller createMarshaller(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.jaxb.io.DataReaderImpl:javax.xml.bind.Unmarshaller createUnmarshaller()",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.transport.http.HTTPConduit:java.lang.String extractLocation(java.util.Map)",
            "org.apache.cxf.transport.DestinationFactoryManagerImpl:org.apache.cxf.transport.DestinationFactory getDestinationFactoryForUri(java.lang.String)",
            "org.apache.cxf.transport.jms.JMSUtils:void addProtocolHeaders(javax.jms.Message,java.util.Map)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void addMustUnderstandAttribute(org.w3c.dom.Element,javax.xml.namespace.QName,org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.addressing.AddressingPropertiesImpl)",
            "org.apache.cxf.ws.policy.attachment.wsdl11.Wsdl11AttachmentPolicyProvider:org.apache.neethi.Policy getElementPolicy(org.apache.cxf.service.model.Extensible,boolean,org.apache.cxf.service.model.DescriptionInfo)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void addSignatureParts(java.util.Map,java.util.List)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void doEndorsedSignatures(java.util.Map,boolean,boolean)",
            "org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor:org.apache.ws.security.WSSecurityEngine createSecurityEngine(java.util.Map)",
            "org.apache.cxf.databinding.AbstractDataBinding:void setNamespaceMap(java.util.Map)",
            "org.apache.cxf.databinding.AbstractDataBinding:void checkNamespaceMap(java.util.Map)",
            "org.apache.cxf.wsdl.JAXBExtensionHelper$1:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils$SchemaLSResourceResolver:org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.SchemaInfo getOrCreateSchema(org.apache.cxf.service.model.ServiceInfo,java.lang.String,boolean)",
            "org.apache.cxf.binding.soap.interceptor.Soap12FaultOutInterceptor$Soap12FaultOutInterceptorInternal:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor:void writeSoapEnvelopeStart(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.Soap11FaultOutInterceptor$Soap11FaultOutInterceptorInternal:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.tools.common.Tag:java.lang.String formatAttribute(org.apache.cxf.tools.common.Tag)",
            "org.apache.cxf.tools.common.ProcessorTestBase:boolean assertXmlEquals(java.io.File,java.io.File,java.util.List)",
            "org.apache.cxf.tools.common.ProcessorTestBase:void assertAttributesEquals(javax.xml.namespace.QName,java.util.Map,java.util.Map,java.util.Collection)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildService(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:org.apache.cxf.service.model.ServiceSchemaInfo getSchemasForDefinition(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void putSchemasForDefinition(javax.wsdl.Definition,org.apache.cxf.service.model.ServiceSchemaInfo)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void removeDefinition(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildMockServices(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildInterfaceOperation(org.apache.cxf.service.model.InterfaceInfo,javax.wsdl.Operation)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:void putAll(java.util.Map)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void createSchemas(org.apache.cxf.service.Service,java.util.Set)",
            "org.apache.cxf.aegis.type.collection.MapType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.jaxws.JaxWsClientProxy:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:java.util.Set entrySet()",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:void putAll(java.util.Map)",
            "org.apache.cxf.jaxws.AbstractJAXWSMethodInvoker:java.util.Map removeHandlerProperties(org.apache.cxf.jaxws.context.WrappedMessageContext)",
            "org.apache.cxf.jaxws.AbstractJAXWSMethodInvoker:void addHandlerProperties(org.apache.cxf.jaxws.context.WrappedMessageContext,java.util.Map)",
            "org.apache.cxf.jaxws.AbstractJAXWSMethodInvoker:void updateWebServiceContext(org.apache.cxf.message.Exchange,javax.xml.ws.handler.MessageContext)"
        ]
    },
    "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object remove(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap$SpringBeanMapWrapper:java.lang.Object remove(java.lang.Object)"
        ]
    },
    "org.apache.cxf.configuration.spring.AbstractSpringBeanMap$Entry:java.lang.Object getValue()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.MapNamespaceContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.util.Set entrySet()",
            "org.apache.cxf.common.util.CacheMap:void putAll(java.util.Map)",
            "org.apache.cxf.common.util.TwoStageMap:void putAll(java.util.Map)",
            "org.apache.cxf.jaxb.JAXBDataBinding:void scanPackages(java.util.Set)",
            "org.apache.cxf.jaxb.io.DataWriterImpl:javax.xml.bind.Marshaller createMarshaller(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.jaxb.io.DataReaderImpl:javax.xml.bind.Unmarshaller createUnmarshaller()",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.transport.http.HTTPConduit:java.lang.String extractLocation(java.util.Map)",
            "org.apache.cxf.transport.DestinationFactoryManagerImpl:org.apache.cxf.transport.DestinationFactory getDestinationFactoryForUri(java.lang.String)",
            "org.apache.cxf.transport.jms.JMSUtils:void addProtocolHeaders(javax.jms.Message,java.util.Map)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void addMustUnderstandAttribute(org.w3c.dom.Element,javax.xml.namespace.QName,org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.addressing.AddressingPropertiesImpl)",
            "org.apache.cxf.ws.policy.attachment.wsdl11.Wsdl11AttachmentPolicyProvider:org.apache.neethi.Policy getElementPolicy(org.apache.cxf.service.model.Extensible,boolean,org.apache.cxf.service.model.DescriptionInfo)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void addSignatureParts(java.util.Map,java.util.List)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void doEndorsedSignatures(java.util.Map,boolean,boolean)",
            "org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor:org.apache.ws.security.WSSecurityEngine createSecurityEngine(java.util.Map)",
            "org.apache.cxf.databinding.AbstractDataBinding:void setNamespaceMap(java.util.Map)",
            "org.apache.cxf.databinding.AbstractDataBinding:void checkNamespaceMap(java.util.Map)",
            "org.apache.cxf.wsdl.JAXBExtensionHelper$1:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils$SchemaLSResourceResolver:org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeWSDLOperations()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.SchemaInfo getOrCreateSchema(org.apache.cxf.service.model.ServiceInfo,java.lang.String,boolean)",
            "org.apache.cxf.binding.soap.interceptor.Soap12FaultOutInterceptor$Soap12FaultOutInterceptorInternal:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor:void writeSoapEnvelopeStart(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.Soap11FaultOutInterceptor$Soap11FaultOutInterceptorInternal:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.tools.common.Tag:java.lang.String formatAttribute(org.apache.cxf.tools.common.Tag)",
            "org.apache.cxf.tools.common.ProcessorTestBase:boolean assertXmlEquals(java.io.File,java.io.File,java.util.List)",
            "org.apache.cxf.tools.common.ProcessorTestBase:void assertAttributesEquals(javax.xml.namespace.QName,java.util.Map,java.util.Map,java.util.Collection)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildService(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:org.apache.cxf.service.model.ServiceSchemaInfo getSchemasForDefinition(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void putSchemasForDefinition(javax.wsdl.Definition,org.apache.cxf.service.model.ServiceSchemaInfo)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void removeDefinition(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildInterfaceOperation(org.apache.cxf.service.model.InterfaceInfo,javax.wsdl.Operation)",
            "org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor:void insertConstructorArg(org.springframework.beans.factory.config.ConstructorArgumentValues,java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:void putAll(java.util.Map)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void createSchemas(org.apache.cxf.service.Service,java.util.Set)",
            "org.apache.cxf.aegis.type.collection.MapType:void writeEntry(org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.type.Type,java.util.Map$Entry)",
            "org.apache.cxf.jaxws.JaxWsClientProxy:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:java.util.Set entrySet()",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:void putAll(java.util.Map)",
            "org.apache.cxf.jaxws.AbstractJAXWSMethodInvoker:java.util.Map removeHandlerProperties(org.apache.cxf.jaxws.context.WrappedMessageContext)",
            "org.apache.cxf.jaxws.AbstractJAXWSMethodInvoker:void addHandlerProperties(org.apache.cxf.jaxws.context.WrappedMessageContext,java.util.Map)",
            "org.apache.cxf.jaxws.AbstractJAXWSMethodInvoker:void updateWebServiceContext(org.apache.cxf.message.Exchange,javax.xml.ws.handler.MessageContext)"
        ]
    },
    "org.apache.cxf.configuration.spring.AbstractSpringBeanMap$SpringBeanMapWrapper:java.lang.Object get(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.MapNamespaceContext:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.helpers.HttpHeaderHelper:java.util.List getHeader(java.util.Map,java.lang.String)",
            "org.apache.cxf.helpers.HttpHeaderHelper:java.lang.String getHeaderKey(java.lang.String)",
            "org.apache.cxf.helpers.HttpHeaderHelper:java.lang.String mapCharset(java.lang.String)",
            "org.apache.cxf.helpers.XMLUtils:javax.xml.transform.TransformerFactory getTransformerFactory()",
            "org.apache.cxf.helpers.XMLUtils:javax.xml.parsers.DocumentBuilderFactory getDocumentBuilderFactory()",
            "org.apache.cxf.helpers.XMLUtils:javax.xml.namespace.QName getNamespace(java.util.Map,java.lang.String,java.lang.String)",
            "org.apache.cxf.common.xmlschema.FixedExtensionDeserializer:void deserialize(org.apache.ws.commons.schema.XmlSchemaObject,javax.xml.namespace.QName,org.w3c.dom.Node)",
            "org.apache.cxf.common.logging.Log4jLogger:void setLevel(java.util.logging.Level)",
            "org.apache.cxf.common.logging.Log4jLogger:void internalLogFormatted(java.lang.String,java.util.logging.LogRecord)",
            "org.apache.cxf.common.logging.Log4jLogger$HandlerWrapper:org.apache.log4j.Priority getThreshold()",
            "org.apache.cxf.common.util.ClassReader:void readAttributes()",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.common.util.ASMHelper:java.lang.String getClassCode(java.lang.Class)",
            "org.apache.cxf.common.util.ASMHelper:org.apache.cxf.common.util.ASMHelper$TypeHelperClassLoader getTypeHelperClassLoader(java.lang.Class)",
            "org.apache.cxf.common.util.ASMHelper$TypeHelperClassLoader:java.lang.Class lookupDefinedClass(java.lang.String)",
            "org.apache.cxf.common.util.CacheMap:void updateMainDataMap()",
            "org.apache.cxf.common.util.CacheMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.common.util.ParamReader:java.lang.String[] getParameterNames(java.lang.reflect.Member,java.lang.Class[])",
            "org.apache.cxf.common.util.ParamReader:org.apache.cxf.common.util.ParamReader$MethodInfo getMethodInfo()",
            "org.apache.cxf.common.util.TwoStageMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.resource.PropertiesResolver:java.lang.Object resolve(java.lang.String,java.lang.Class)",
            "org.apache.cxf.resource.URIResolver:void tryRemote(java.lang.String)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.util.List getBeanListForId(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void mapElementToJaxbProperty(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder,java.lang.String,java.lang.Class)",
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:java.lang.Object unmarshalFactoryString(java.lang.String,java.lang.Class)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void initWildcardDefinitionMap()",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureWithWildCard(java.lang.String,java.lang.Object)",
            "org.apache.cxf.jaxb.NamespaceMapper:java.lang.String getPreferredPrefix(java.lang.String,java.lang.String,boolean)",
            "org.apache.cxf.jaxb.JAXBUtils:java.lang.String builtInTypeToJavaType(java.lang.String)",
            "org.apache.cxf.jaxb.JAXBUtils:java.lang.Class holderClass(java.lang.String)",
            "org.apache.cxf.jaxb.JAXBDataBinding:org.apache.cxf.jaxb.JAXBDataBinding$CachedContextAndSchemas createJAXBContextAndSchemas(java.util.Set,java.lang.String)",
            "org.apache.cxf.jaxb.JAXBDataBinding:void scanPackages(java.util.Set)",
            "org.apache.cxf.jaxb.JAXBDataBinding$1:javax.xml.transform.Result createOutput(java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxb.WrapperHelperCompiler:boolean addCreateWrapperObject(java.lang.String,java.lang.Class)",
            "org.apache.cxf.jaxb.WrapperHelperCompiler:void createObjectWrapper(org.objectweb.asm.MethodVisitor,java.lang.Class)",
            "org.apache.cxf.management.counters.CounterRepository:org.apache.cxf.management.counters.Counter getCounter(javax.management.ObjectName)",
            "org.apache.cxf.staxutils.AbstractDOMStreamReader:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.staxutils.W3CDOMStreamWriter:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.message.MessageImpl:java.lang.Object getContent(java.lang.Class)",
            "org.apache.cxf.headers.HeaderManagerImpl:org.apache.cxf.headers.HeaderProcessor getHeaderProcessor(java.lang.String)",
            "org.apache.cxf.interceptor.StaxOutInterceptor:javax.xml.stream.XMLOutputFactory getXMLOutputFactory(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.util.Map keepInOrder(java.util.Map,org.apache.cxf.service.model.OperationInfo,java.util.List)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:org.apache.cxf.message.MessageContentsList getParameters(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.interceptor.ClientOutFaultObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxInInterceptor:javax.xml.stream.XMLInputFactory getXMLInputFactory(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.FIStaxOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.ConduitInitiatorManagerImpl:org.apache.cxf.transport.ConduitInitiator getConduitInitiator(java.lang.String)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void writeResponse(java.lang.String,java.lang.String,org.apache.cxf.service.model.EndpointInfo,java.io.OutputStream)",
            "org.apache.cxf.transport.http.DigestAuthSupplier:java.lang.String getPreemptiveAuthorization(org.apache.cxf.transport.http.HTTPConduit,java.net.URL,org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:void transferProtocolHeadersToURLConnection(org.apache.cxf.message.Message,java.net.URLConnection)",
            "org.apache.cxf.transport.http.HTTPConduit:void logProtocolHeaders(java.util.logging.Level,org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:java.lang.String extractAuthorizationRealm(java.util.Map)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void copyRequestHeaders(org.apache.cxf.message.Message,java.util.Map)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void copyResponseHeaders(org.apache.cxf.message.Message,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:java.lang.String getId(java.util.Map)",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponseInternal()",
            "org.apache.cxf.transport.http.gzip.GZIPOutInterceptor:void addHeader(org.apache.cxf.message.Message,java.lang.String,java.lang.String)",
            "org.apache.cxf.transport.AbstractMultiplexDestination:java.lang.String getId(java.util.Map)",
            "org.apache.cxf.transport.DestinationFactoryManagerImpl:org.apache.cxf.transport.DestinationFactory getDestinationFactory(java.lang.String)",
            "org.apache.cxf.transport.servlet.ServletContextResourceResolver:java.io.InputStream getAsStream(java.lang.String)",
            "org.apache.cxf.transport.servlet.ServletContextResourceResolver:java.lang.Object resolve(java.lang.String,java.lang.Class)",
            "org.apache.cxf.transport.servlet.ServletTransportFactory:org.apache.cxf.transport.servlet.ServletDestination getDestinationForPath(java.lang.String)",
            "org.apache.cxf.transport.servlet.AbstractCXFServlet:void init(javax.servlet.ServletConfig)",
            "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser$SpringJettyHTTPServerEngine:void finalizeConfig()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPTransportFactory:org.apache.cxf.transport.Destination getDestination(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPTransportFactory:org.apache.cxf.transport.http_jetty.JettyHTTPDestination createDestination(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine retrieveJettyHTTPServerEngine(int)",
            "org.apache.cxf.transport.jms.JMSUtils:void addContentTypeToProtocolHeader(org.apache.cxf.message.Message)",
            "org.apache.cxf.NSManager:java.lang.String getPrefixFromNS(java.lang.String)",
            "org.apache.cxf.extension.RegistryImpl:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.endpoint.ClientImpl:java.util.Map getRequestContext()",
            "org.apache.cxf.endpoint.ClientImpl:java.util.Map getResponseContext()",
            "org.apache.cxf.endpoint.ClientImpl:boolean isThreadLocalRequestContext()",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.ClientImpl:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.addressing.ContextUtils:java.lang.String getActionFromServiceModel(org.apache.cxf.message.Message,java.lang.Exception)",
            "org.apache.cxf.ws.addressing.ContextUtils:java.lang.String getAction(org.apache.cxf.service.model.Extensible)",
            "org.apache.cxf.ws.addressing.MAPAggregator:boolean validateIncomingMAPs(org.apache.cxf.ws.addressing.AddressingProperties,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void propogateAction(org.apache.cxf.ws.addressing.AttributedURIType,org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void restoreExchange(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.addressing.AddressingProperties)",
            "org.apache.cxf.ws.policy.PolicyRegistryImpl:org.apache.neethi.Policy lookup(java.lang.String)",
            "org.apache.cxf.ws.security.policy.interceptors.HttpsTokenInterceptorProvider$HttpsTokenInInterceptor:void assertHttps(java.util.Collection,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.policy.interceptors.HttpsTokenInterceptorProvider$HttpsTokenOutInterceptor:void assertHttps(java.util.Collection,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.trust.STSClient:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:org.apache.cxf.ws.security.tokenstore.SecurityToken getToken(java.lang.String)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:org.apache.ws.security.components.crypto.Crypto getCrypto(org.apache.cxf.ws.security.policy.model.TokenWrapper,java.lang.String,java.lang.String)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:java.util.Properties getProps(java.lang.Object,org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor:void <init>(java.util.Map)",
            "org.apache.cxf.ws.security.wss4j.AbstractWSS4JInterceptor:java.lang.Object getOption(java.lang.String)",
            "org.apache.cxf.ws.security.wss4j.AbstractWSS4JInterceptor:org.apache.ws.security.components.crypto.Crypto loadSignatureCrypto(org.apache.ws.security.handler.RequestData)",
            "org.apache.cxf.ws.security.wss4j.AbstractWSS4JInterceptor:org.apache.ws.security.components.crypto.Crypto loadDecryptionCrypto(org.apache.ws.security.handler.RequestData)",
            "org.apache.cxf.ws.security.wss4j.AbstractWSS4JInterceptor:org.apache.ws.security.components.crypto.Crypto loadEncryptionCrypto(org.apache.ws.security.handler.RequestData)",
            "org.apache.cxf.ws.rm.Source:org.apache.cxf.ws.rm.SourceSequence getSequence(org.apache.cxf.ws.rm.Identifier)",
            "org.apache.cxf.ws.rm.Source:org.apache.cxf.ws.rm.SourceSequence getAssociatedSequence(org.apache.cxf.ws.rm.Identifier)",
            "org.apache.cxf.ws.rm.RMOutInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.Destination:org.apache.cxf.ws.rm.DestinationSequence getSequence(org.apache.cxf.ws.rm.Identifier)",
            "org.apache.cxf.ws.rm.RMManager:org.apache.cxf.ws.rm.RMEndpoint getReliableEndpoint(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.RMManager:void shutdownReliableEndpoint(org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl:java.util.List getSequenceCandidates(java.lang.String)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void add(org.apache.cxf.interceptor.Interceptor,boolean)",
            "org.apache.cxf.workqueue.WorkQueueManagerImpl:org.apache.cxf.workqueue.AutomaticWorkQueue getNamedWorkQueue(java.lang.String)",
            "org.apache.cxf.databinding.AbstractDataBinding:void updateSchemaLocation(org.w3c.dom.Element)",
            "org.apache.cxf.databinding.source.mime.MimeSerializer:void serialize(org.apache.ws.commons.schema.XmlSchemaObject,java.lang.Class,org.w3c.dom.Node)",
            "org.apache.cxf.wsdl.AbstractWSDLPlugin:java.lang.String getOption(java.util.Map,java.lang.String)",
            "org.apache.cxf.wsdl.AbstractWSDLPlugin:java.lang.Object getOption(java.util.Map,java.lang.String,java.lang.Class)",
            "org.apache.cxf.wsdl.AbstractWSDLPlugin:java.lang.Object getOption(java.util.Map,java.lang.Class)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:int getIndentLevel(java.lang.Class)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:java.lang.String getWSDLLocation(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:java.lang.String getEndpointReferenceId(java.util.Map)",
            "org.apache.cxf.service.model.BindingOperationInfo:org.apache.cxf.service.model.BindingFaultInfo getFault(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.AbstractMessageContainer:void addMessagePart(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePart(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:java.lang.Object getExtensionAttribute(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperationForWrapperElement(org.apache.cxf.message.Exchange,javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.service.model.InterfaceInfo:org.apache.cxf.service.model.OperationInfo getOperation(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.MessageInfo getMessage(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.MessageInfo:java.util.List getOrderedParts(java.util.List)",
            "org.apache.cxf.service.model.BindingInfo:org.apache.cxf.service.model.BindingOperationInfo getOperation(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.OperationInfo:org.apache.cxf.service.model.FaultInfo getFault(javax.xml.namespace.QName)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void addImport(org.apache.ws.commons.schema.XmlSchema,java.lang.String)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isWrapped(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isRPC(java.lang.reflect.Method)",
            "org.apache.cxf.binding.BindingFactoryManagerImpl:org.apache.cxf.binding.BindingFactory getBindingFactory(java.lang.String)",
            "org.apache.cxf.binding.soap.interceptor.SoapActionInInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.SoapVersionFactory:org.apache.cxf.binding.soap.SoapVersion getSoapVersion(java.lang.String)",
            "org.apache.cxf.clustering.AbstractStaticFailoverStrategy:java.util.List getAlternateEndpoints(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.clustering.FailoverTargetSelector:void complete(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.clustering.FailoverTargetSelector:void overrideAddressProperty(java.util.Map)",
            "org.apache.cxf.tools.common.Tag:boolean equals(java.lang.Object)",
            "org.apache.cxf.tools.common.ToolContext:void addParameters(java.util.Map)",
            "org.apache.cxf.tools.common.ToolContext:java.lang.Object get(java.lang.String)",
            "org.apache.cxf.tools.common.ToolContext:java.lang.String mapNamespaceToPackageName(java.lang.String)",
            "org.apache.cxf.tools.common.ToolContext:java.lang.String getExcludePackageName(java.lang.String)",
            "org.apache.cxf.tools.common.VelocityGenerator:void doWrite(java.lang.String,java.io.Writer)",
            "org.apache.cxf.tools.common.ProcessorTestBase:boolean assertXmlEquals(java.io.File,java.io.File,java.util.List)",
            "org.apache.cxf.tools.common.ProcessorTestBase:void assertAttributesEquals(javax.xml.namespace.QName,java.util.Map,java.util.Map,java.util.Collection)",
            "org.apache.cxf.tools.common.model.JavaType:java.lang.String getDefaultTypeValue()",
            "org.apache.cxf.tools.common.model.JavaMethod:boolean isEquiv(java.lang.String,java.lang.String)",
            "org.apache.cxf.tools.common.model.JavaParameter:org.apache.cxf.tools.common.model.JAnnotation getAnnotation(java.lang.String)",
            "org.apache.cxf.tools.util.BuiltInTypesJavaMappingUtil:java.lang.String getJType(java.lang.String,java.lang.String)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:java.lang.String getBindingAnnotation(java.lang.String)",
            "org.apache.cxf.tools.util.PropertyUtil:java.lang.String getProperty(java.lang.String)",
            "org.apache.cxf.tools.util.ClassCollector:java.lang.String getTypesFullClassName(java.lang.String,java.lang.String)",
            "org.apache.cxf.wsdl11.SchemaUtil:void extractSchema(javax.wsdl.Definition,org.apache.cxf.common.xmlschema.SchemaCollection,java.util.List)",
            "org.apache.cxf.wsdl11.SchemaUtil:void addSchema(java.lang.String,javax.wsdl.extensions.schema.Schema)",
            "org.apache.cxf.wsdl11.SchemaUtil:boolean isSchemaParsed(java.lang.String,java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:java.util.Collection getImports(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addExtensibilityAttributes(javax.wsdl.extensions.AttributeExtensible,java.util.Map)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(java.net.URL)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(org.w3c.dom.Element)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:org.apache.cxf.service.model.ServiceSchemaInfo getSchemasForDefinition(javax.wsdl.Definition)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void activateViaNS(java.lang.String)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void processExtension(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadAndRegister(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:java.lang.Object getExtension(java.lang.String,java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void <init>(java.util.Map,java.util.Map)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:java.lang.String getBusId(java.util.Map)",
            "org.apache.cxf.bus.CXFBusImpl:java.lang.Object getExtension(java.lang.Class)",
            "org.apache.cxf.attachment.AttachmentImpl:java.lang.String getHeader(java.lang.String)",
            "org.apache.cxf.frontend.ClientFactoryBean:void applyExtraClass()",
            "org.apache.cxf.frontend.ClientFactoryBean:void applyProperties(org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.frontend.SimpleMethodDispatcher:org.apache.cxf.service.model.BindingOperationInfo getBindingOperation(java.lang.reflect.Method,org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.frontend.SimpleMethodDispatcher:java.lang.reflect.Method getMethod(org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.frontend.SimpleMethodDispatcher:java.lang.reflect.Method getPrimaryMethod(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory:org.apache.cxf.endpoint.Endpoint createEndpoint()",
            "org.apache.cxf.frontend.ServerFactoryBean:void applyExtraClass()",
            "org.apache.cxf.aegis.Context:java.lang.Object getProperty(java.lang.Class)",
            "org.apache.cxf.aegis.util.jdom.StaxBuilder:void buildTree(org.jdom.JDOMFactory,javax.xml.stream.XMLStreamReader,org.jdom.Document)",
            "org.apache.cxf.aegis.util.jdom.StaxBuilder:int resolveAttrType(java.lang.String)",
            "org.apache.cxf.aegis.util.stax.JDOMStreamWriter:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.aegis.util.stax.JDOMStreamReader:java.lang.String getDeclaredURI(java.lang.String)",
            "org.apache.cxf.aegis.databinding.XMLStreamDataWriter:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.aegis.databinding.ElementDataWriter:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:org.apache.cxf.aegis.type.Type getType(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.aegis.type.basic.XMLBeanTypeInfo:org.apache.cxf.aegis.type.basic.BeanTypePropertyInfo getPropertyInfo(javax.xml.namespace.QName)",
            "org.apache.cxf.aegis.type.basic.BeanType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.InterfaceInvocationHandler:java.lang.Object readProperty(java.lang.Object)",
            "org.apache.cxf.aegis.type.basic.BeanTypeInfo:org.apache.cxf.aegis.type.Type getType(javax.xml.namespace.QName)",
            "org.apache.cxf.aegis.type.basic.BeanTypeInfo:javax.xml.namespace.QName getMappedTypeName(javax.xml.namespace.QName)",
            "org.apache.cxf.aegis.type.basic.BeanTypeInfo:java.lang.String getPropertyNameFromMappedName(javax.xml.namespace.QName)",
            "org.apache.cxf.aegis.type.encoded.MarshalRegistry:java.lang.String getInstanceId(java.lang.Object)",
            "org.apache.cxf.aegis.type.XMLTypeCreator:org.w3c.dom.Document getDocument(java.lang.Class)",
            "org.apache.cxf.aegis.type.DefaultTypeMapping:org.apache.cxf.aegis.type.Type getType(java.lang.Class)",
            "org.apache.cxf.aegis.type.DefaultTypeMapping:org.apache.cxf.aegis.type.Type getType(javax.xml.namespace.QName)",
            "org.apache.cxf.aegis.type.DefaultTypeMapping:javax.xml.namespace.QName getTypeQName(java.lang.Class)",
            "org.apache.cxf.jaxws.handler.HandlerResolverImpl:java.util.List getHandlerChain(javax.xml.ws.handler.PortInfo)",
            "org.apache.cxf.jaxws.handler.InitParamResourceResolver:java.lang.Object resolve(java.lang.String,java.lang.Class)",
            "org.apache.cxf.jaxws.support.JaxWsServiceConfiguration:javax.jws.WebParam getWebParam(java.lang.reflect.Method,int)",
            "org.apache.cxf.jaxws.support.JaxWsServiceConfiguration:java.lang.Class getResponseWrapper(java.lang.reflect.Method)",
            "org.apache.cxf.jaxws.support.JaxWsServiceConfiguration:java.lang.Class getRequestWrapper(java.lang.reflect.Method)",
            "org.apache.cxf.jaxws.JaxWsClientProxy:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])",
            "org.apache.cxf.jaxws.ServiceImpl:java.lang.Object createPort(javax.xml.namespace.QName,org.apache.cxf.ws.addressing.EndpointReferenceType,java.lang.Class,javax.xml.ws.WebServiceFeature[])",
            "org.apache.cxf.jaxws.ServiceImpl:org.apache.cxf.jaxws.handler.PortInfoImpl getPortInfo(javax.xml.namespace.QName)",
            "org.apache.cxf.jaxws.EndpointImpl:void checkProperties()",
            "org.apache.cxf.jaxws.DispatchImpl:java.lang.Object invoke(java.lang.Object,boolean)",
            "org.apache.cxf.jaxws.DispatchImpl:java.util.concurrent.Future invokeAsync(java.lang.Object,javax.xml.ws.AsyncHandler)",
            "org.apache.cxf.jaxws.interceptors.SwAOutInterceptor:boolean callSWARefMethod(javax.xml.bind.JAXBContext)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:void <init>(java.util.Map,org.apache.cxf.message.Exchange,javax.xml.ws.handler.MessageContext$Scope)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:void copyScoped(java.util.Map)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:java.lang.String mapKey(java.lang.String)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:java.lang.String mapKeyReverse(java.lang.String)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:java.lang.Object put(java.lang.String,java.lang.Object,javax.xml.ws.handler.MessageContext$Scope)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:javax.xml.ws.handler.MessageContext$Scope getScope(java.lang.String)",
            "org.apache.cxf.jaxws.AbstractJAXWSMethodInvoker:void updateWebServiceContext(org.apache.cxf.message.Exchange,javax.xml.ws.handler.MessageContext)",
            "org.apache.cxf.xmlbeans.XmlBeansSchemaInitializer:org.apache.ws.commons.schema.XmlSchema getSchema(org.apache.xmlbeans.SchemaTypeSystem,java.lang.String)",
            "org.apache.cxf.xmlbeans.XmlBeansSchemaInitializer:void mapClass(org.apache.cxf.service.model.MessagePartInfo,java.lang.Class)",
            "org.apache.cxf.xmlbeans.tools.XMLBeansSchemaTypeUtils:java.lang.String getNaturalJavaClassName(org.apache.xmlbeans.SchemaType)"
        ]
    },
    "org.apache.cxf.configuration.spring.AbstractSpringBeanMap$SpringBeanMapWrapper:java.util.Collection values()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.WSDLHelper:javax.wsdl.BindingOperation getBindingOperation(javax.wsdl.Definition,java.lang.String)",
            "org.apache.cxf.helpers.WSDLHelper:java.util.List getPortTypes(javax.wsdl.Definition)",
            "org.apache.cxf.helpers.WSDLHelper:java.util.List getInMessageParts(javax.wsdl.Operation)",
            "org.apache.cxf.helpers.WSDLHelper:java.util.List getOutMessageParts(javax.wsdl.Operation)",
            "org.apache.cxf.helpers.WSDLHelper:javax.wsdl.Binding getBinding(javax.wsdl.BindingOperation,javax.wsdl.Definition)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.util.Collection values()",
            "org.apache.cxf.common.util.CacheMap:java.util.Collection values()",
            "org.apache.cxf.common.util.TwoStageMap:java.util.Collection values()",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.util.Collection values()",
            "org.apache.cxf.management.jmx.export.runtime.ModelMBeanInfoSupporter:javax.management.modelmbean.ModelMBeanInfo buildModelMBeanInfo(javax.management.Descriptor)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:org.apache.cxf.message.MessageContentsList getParameters(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.transport.ConduitInitiatorManagerImpl:org.apache.cxf.transport.ConduitInitiator getConduitInitiatorForUri(java.lang.String)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updateDefinition(javax.wsdl.Definition,java.util.Map,java.util.Map,java.lang.String,org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updatePublishedEndpointUrl(java.lang.String,javax.wsdl.Definition,javax.xml.namespace.QName)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updateSchemaImports(javax.wsdl.extensions.schema.Schema,java.util.Map,java.lang.String)",
            "org.apache.cxf.transport.http.HTTPConduit:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.DestinationFactoryManagerImpl:org.apache.cxf.transport.DestinationFactory getDestinationFactoryForUri(java.lang.String)",
            "org.apache.cxf.transport.servlet.ServletTransportFactory:java.util.Collection getDestinations()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void postShutdown()",
            "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:org.apache.cxf.ws.security.tokenstore.SecurityToken getToken(java.lang.String)",
            "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:java.util.Collection getTokens(org.apache.cxf.ws.security.tokenstore.SecurityToken$State)",
            "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:void processTokenExpiry()",
            "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:void removeCancelledTokens()",
            "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:void removeExpiredTokens()",
            "org.apache.cxf.ws.rm.Source:java.util.Collection getAllSequences()",
            "org.apache.cxf.ws.rm.Source:java.util.Collection getAllUnacknowledgedSequences()",
            "org.apache.cxf.ws.rm.Destination:java.util.Collection getAllSequences()",
            "org.apache.cxf.ws.rm.RMManager:void shutdown()",
            "org.apache.cxf.workqueue.WorkQueueManagerImpl:void shutdown(boolean)",
            "org.apache.cxf.workqueue.WorkQueueManagerImpl:void run()",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.wsdl.Port getPort(org.apache.cxf.wsdl.WSDLManager,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.service.model.BindingOperationInfo:java.util.Collection getFaults()",
            "org.apache.cxf.service.model.AbstractMessageContainer:int getMessagePartIndex(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePartByIndex(int)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePart(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.AbstractMessageContainer:java.util.List getMessageParts()",
            "org.apache.cxf.service.model.InterfaceInfo:java.util.Collection getOperations()",
            "org.apache.cxf.service.model.BindingInfo:java.util.Collection getOperations()",
            "org.apache.cxf.service.model.BindingInfo:org.apache.cxf.service.model.BindingOperationInfo getOperation(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.OperationInfo:java.util.Collection getFaults()",
            "org.apache.cxf.binding.AbstractBindingFactory:org.apache.cxf.service.model.BindingInfo initializeBindingInfo(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding,org.apache.cxf.service.model.BindingInfo)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:void buildMessage(org.apache.cxf.service.model.MessageInfo,javax.wsdl.Message,org.apache.cxf.common.xmlschema.SchemaCollection,int,java.lang.String)",
            "org.apache.cxf.binding.soap.SoapVersionFactory:java.util.Iterator getVersions()",
            "org.apache.cxf.tools.common.model.JavaMethod:java.util.Collection getAnnotations()",
            "org.apache.cxf.tools.common.model.JavaParameter:java.util.Collection getAnnotations()",
            "org.apache.cxf.tools.util.SOAPBindingUtil:java.util.List getBindingOperationSoapFaults(javax.wsdl.BindingOperation)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:void addSOAPNamespace(javax.wsdl.Definition,boolean)",
            "org.apache.cxf.tools.util.ClassCollector:java.util.Collection getGeneratedFileInfo()",
            "org.apache.cxf.wsdl11.SchemaUtil:void parseImports(javax.wsdl.Definition,java.util.List)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildMockServices(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition,javax.wsdl.Service,javax.xml.namespace.QName,org.apache.cxf.service.model.DescriptionInfo)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void parseImports(javax.wsdl.Definition,java.util.List)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.BindingInfo buildBinding(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding)",
            "org.apache.cxf.bus.spring.Jsr250BeanPostProcessor:java.lang.Object postProcessAfterInitialization(java.lang.Object,java.lang.String)",
            "org.apache.cxf.aegis.type.encoded.MarshalRegistry$1:java.lang.Object next()",
            "org.apache.cxf.jaxws.ServiceImpl:void initializePorts()",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:java.util.Collection values()"
        ]
    },
    "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:void afterPropertiesSet()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.configuration.spring.ConfigurerImpl:void addApplicationContext(org.springframework.context.ApplicationContext)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.configuration.jsse.spring.TLSParameterJaxBUtils:java.security.KeyStore getKeyStore(org.apache.cxf.configuration.security.CertStoreType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.jsse.spring.TLSParameterJaxBUtils:javax.net.ssl.TrustManager[] getTrustManagers(org.apache.cxf.configuration.security.TrustManagersType)"
        ]
    },
    "org.apache.cxf.jaxb.JAXBUtils:java.lang.String nameToIdentifier(java.lang.String,org.apache.cxf.jaxb.JAXBUtils$IdentifierType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.JAXBDataBinding:org.apache.cxf.databinding.WrapperHelper createWrapperHelper(java.lang.Class,java.util.List,java.util.List,java.util.List)",
            "org.apache.cxf.jaxb.JAXBDataBinding:java.lang.reflect.Field getElField(java.lang.String,java.lang.Class)",
            "org.apache.cxf.ws.policy.builder.jaxb.JaxbAssertionBuilder:void <init>(javax.xml.namespace.QName)",
            "org.apache.cxf.jaxws.WrapperClassGenerator:void generateMessagePart(org.objectweb.asm.ClassWriter,org.apache.cxf.service.model.MessagePartInfo,java.lang.reflect.Method,java.lang.String)",
            "org.apache.cxf.xmlbeans.XmlBeansDataBinding:org.apache.cxf.databinding.WrapperHelper createWrapperHelper(java.lang.Class,java.util.List,java.util.List,java.util.List)"
        ]
    },
    "org.apache.cxf.service.factory.AbstractServiceFactoryBean:void initializeDataBindings()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxb.JAXBSchemaInitializer:void begin(org.apache.cxf.service.model.MessagePartInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.ServiceModelVisitor:void visitOperation(org.apache.cxf.service.model.OperationInfo)"
        ]
    },
    "org.apache.cxf.jaxb.JAXBSchemaInitializer:void checkForExistence(org.apache.cxf.service.model.MessagePartInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.JAXBSchemaInitializer:void begin(org.apache.cxf.service.model.MessagePartInfo)"
        ]
    },
    "org.apache.cxf.jaxb.io.DataWriterImpl:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.io.DataWriterImpl:void write(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.interceptor.FaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:void writeParts(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.message.MessageContentsList,java.util.List)",
            "org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor:void writeSoapEnvelopeStart(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor:boolean handleHeaderPart(boolean,org.apache.cxf.binding.soap.SoapMessage,java.lang.String)",
            "org.apache.cxf.jaxws.interceptors.WebFaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxb.io.DataReaderImpl:java.lang.Object read(org.apache.cxf.service.model.MessagePartInfo,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.io.DataReaderImpl:java.lang.Object read(java.lang.Object)",
            "org.apache.cxf.interceptor.WrappedInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.BareInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.ClientFaultConverter:void processFaultDetail(org.apache.cxf.interceptor.Fault,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void getPara(org.apache.cxf.staxutils.DepthXMLStreamReader,org.apache.cxf.databinding.DataReader,org.apache.cxf.message.MessageContentsList,java.util.Iterator,org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.soap.interceptor.RPCInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.soap.interceptor.SoapHeaderInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxb.io.DataReaderImpl:java.lang.Object read(javax.xml.namespace.QName,java.lang.Object,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.management.utils.ManagementConsole:void doManagement()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.management.utils.ManagementConsole:void main(java.lang.String[])"
        ]
    },
    "org.apache.cxf.management.utils.ManagementConsole:void startEndpoint()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.management.utils.ManagementConsole:void doManagement()"
        ]
    },
    "org.apache.cxf.management.utils.ManagementConsole:void stopEndpoint()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.management.utils.ManagementConsole:void doManagement()"
        ]
    },
    "org.apache.cxf.management.utils.ManagementConsole:void restartEndpoint()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.management.utils.ManagementConsole:void doManagement()"
        ]
    },
    "org.apache.cxf.staxutils.StaxSource:void parse()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxSource:void parse(org.xml.sax.InputSource)",
            "org.apache.cxf.staxutils.StaxSource:void parse(java.lang.String)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:void writeEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElementEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:void writeParts(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.message.MessageContentsList,java.util.List)"
        ]
    },
    "org.apache.cxf.staxutils.CachingXmlEventWriter:java.lang.String creatPrefix()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.CachingXmlEventWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:java.lang.String getUniquePrefix(javax.xml.stream.XMLStreamWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:java.lang.String getUniquePrefix(javax.xml.stream.XMLStreamWriter,java.lang.String,boolean)"
        ]
    },
    "org.apache.cxf.interceptor.WrappedOutInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.wsdl.JAXBExtensionHelper$MappingReaderDelegate$1:java.lang.String getNamespaceURI(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:java.lang.String getUniquePrefix(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.interceptor.WrappedOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.wsdl.JAXBExtensionHelper$MappingReaderDelegate$1:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.aegis.util.NamespaceHelper:java.lang.String getUniquePrefix(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.aegis.util.NamespaceHelper:javax.xml.namespace.QName createQName(javax.xml.namespace.NamespaceContext,java.lang.String)",
            "org.apache.cxf.aegis.xml.stax.ElementWriter:void writeStartElement()",
            "org.apache.cxf.aegis.xml.stax.ElementWriter:java.lang.String getPrefixForNamespace(java.lang.String,java.lang.String)",
            "org.apache.cxf.aegis.xml.stax.ElementReader:void extractXsiType()",
            "org.apache.cxf.aegis.type.encoded.ArrayTypeInfo:void <init>(javax.xml.namespace.NamespaceContext,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.aegis.util.NamespaceHelper:java.lang.String getUniquePrefix(javax.xml.stream.XMLStreamWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.util.NamespaceHelper:java.lang.String getUniquePrefix(javax.xml.stream.XMLStreamWriter,java.lang.String,boolean)",
            "org.apache.cxf.aegis.xml.stax.ElementWriter:void writeStartElement()",
            "org.apache.cxf.aegis.xml.stax.ElementWriter:java.lang.String getPrefixForNamespace(java.lang.String)",
            "org.apache.cxf.aegis.xml.stax.ElementWriter:java.lang.String getPrefixForNamespace(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.aegis.util.NamespaceHelper:javax.xml.namespace.QName createQName(javax.xml.namespace.NamespaceContext,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.TypeUtil:org.apache.cxf.aegis.type.Type getReadType(javax.xml.stream.XMLStreamReader,org.apache.cxf.aegis.AegisContext,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.TypeUtil:org.apache.cxf.aegis.type.Type getReadTypeStandalone(javax.xml.stream.XMLStreamReader,org.apache.cxf.aegis.AegisContext,org.apache.cxf.aegis.type.Type)"
        ]
    },
    "org.apache.cxf.aegis.xml.stax.ElementReader:void extractXsiType()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.xml.stax.ElementReader:void <init>(org.apache.cxf.staxutils.DepthXMLStreamReader)",
            "org.apache.cxf.aegis.xml.stax.ElementReader:void <init>(java.io.InputStream)"
        ]
    },
    "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:boolean writeToOutputStream(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingInfo,org.apache.cxf.service.Service)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:void writeParts(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.message.MessageContentsList,java.util.List)"
        ]
    },
    "org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.URIMappingInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.FaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.interceptors.WebFaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.BareOutInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.xml.interceptor.XMLMessageOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.xml.interceptor.XMLMessageOutInterceptor:void writeMessage(org.apache.cxf.message.Message,javax.xml.namespace.QName,boolean)"
        ]
    },
    "org.apache.cxf.ws.security.trust.STSUtils:org.apache.cxf.endpoint.Endpoint createSTSEndpoint(org.apache.cxf.Bus,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.neethi.Policy,javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor:void recalcEffectivePolicy(org.apache.cxf.binding.soap.SoapMessage,java.lang.String,org.apache.neethi.Policy)",
            "org.apache.cxf.ws.security.trust.STSClient:void createClient()"
        ]
    },
    "org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory:void modifyTransportIdPerAddress(org.apache.cxf.service.model.EndpointInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory:org.apache.cxf.endpoint.Endpoint createEndpoint()"
        ]
    },
    "org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory:org.apache.cxf.service.model.EndpointInfo createEndpointInfo()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory:org.apache.cxf.endpoint.Endpoint createEndpoint()"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit:org.apache.cxf.transports.http.configuration.HTTPClientPolicy getClient(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:void setHeadersByClientPolicy(org.apache.cxf.message.Message,java.util.Map)",
            "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection redirectRetransmit(java.net.HttpURLConnection,org.apache.cxf.message.Message,org.apache.cxf.io.CacheAndWriteOutputStream)",
            "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection retransmit(java.net.HttpURLConnection,java.net.URL,org.apache.cxf.message.Message,org.apache.cxf.io.CacheAndWriteOutputStream)",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleRetransmits()"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit:void initializeConfig()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:void <init>(org.apache.cxf.Bus,org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.ws.addressing.EndpointReferenceType)"
        ]
    },
    "org.apache.cxf.transport.http.AbstractHTTPDestination:void initConfig()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void <init>(org.apache.cxf.Bus,org.apache.cxf.transport.ConduitInitiator,org.apache.cxf.service.model.EndpointInfo,boolean)"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit:void assertMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.AbstractPolicyInterceptor:void getTransportAssertions(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.http.AbstractHTTPDestination:void assertMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.AbstractPolicyInterceptor:void getTransportAssertions(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.MessageSenderInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit:void setURLRequestHeaders(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection retransmit(java.net.HttpURLConnection,java.net.URL,org.apache.cxf.message.Message,org.apache.cxf.io.CacheAndWriteOutputStream)",
            "org.apache.cxf.transport.http.HTTPConduit:void access$000(org.apache.cxf.transport.http.HTTPConduit,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection authorizationRetransmit(java.net.HttpURLConnection,org.apache.cxf.message.Message,org.apache.cxf.io.CacheAndWriteOutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection processRetransmit(java.net.HttpURLConnection,org.apache.cxf.message.Message,org.apache.cxf.io.CacheAndWriteOutputStream)"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection redirectRetransmit(java.net.HttpURLConnection,org.apache.cxf.message.Message,org.apache.cxf.io.CacheAndWriteOutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection processRetransmit(java.net.HttpURLConnection,org.apache.cxf.message.Message,org.apache.cxf.io.CacheAndWriteOutputStream)"
        ]
    },
    "org.apache.cxf.transport.http.AbstractHTTPDestination:java.io.OutputStream flushHeaders(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.AbstractHTTPDestination$WrappedOutputStream:void onFirstWrite()",
            "org.apache.cxf.transport.http.AbstractHTTPDestination$WrappedOutputStream:void close()"
        ]
    },
    "org.apache.cxf.transport.http.gzip.GZIPOutInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.AbstractMultiplexDestination:java.lang.String getId(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.AbstractHTTPDestination:java.lang.String getId(java.util.Map)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:java.lang.String getEndpointReferenceId(java.util.Map)"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit:org.apache.cxf.transport.Destination getDestination(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:void setUpDecoupledDestination()"
        ]
    },
    "org.apache.cxf.endpoint.ServerImpl:void initDestination(org.apache.cxf.transport.DestinationFactory)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ServerImpl:void <init>(org.apache.cxf.Bus,org.apache.cxf.endpoint.Endpoint,org.apache.cxf.transport.DestinationFactory,org.apache.cxf.transport.MessageObserver)",
            "org.apache.cxf.endpoint.ServerImpl:void <init>(org.apache.cxf.Bus,org.apache.cxf.endpoint.Endpoint,org.apache.cxf.transport.DestinationFactory,org.apache.cxf.binding.BindingFactory)"
        ]
    },
    "org.apache.cxf.jaxws.ServiceImpl:org.apache.cxf.service.model.EndpointInfo createEndpointInfo(org.apache.cxf.service.factory.AbstractServiceFactoryBean,javax.xml.namespace.QName,org.apache.cxf.jaxws.handler.PortInfoImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.ServiceImpl:org.apache.cxf.jaxws.support.JaxWsClientEndpointImpl getJaxwsEndpoint(javax.xml.namespace.QName,org.apache.cxf.service.factory.AbstractServiceFactoryBean,javax.xml.ws.WebServiceFeature[])"
        ]
    },
    "org.apache.cxf.transport.https.CertificateHostnameVerifier$AbstractVerifier:void check(java.lang.String[],java.security.cert.X509Certificate)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.https.CertificateHostnameVerifier$AbstractVerifier:boolean verify(java.lang.String,javax.net.ssl.SSLSession)",
            "org.apache.cxf.transport.https.CertificateHostnameVerifier$AbstractVerifier:void check(java.lang.String,java.security.cert.X509Certificate)",
            "org.apache.cxf.transport.https.CertificateHostnameVerifier$AbstractVerifier:void check(java.lang.String[],javax.net.ssl.SSLSocket)"
        ]
    },
    "org.apache.cxf.transport.https.SSLUtils:java.lang.String[] getCiphersuites(java.util.List,java.lang.String[],org.apache.cxf.configuration.security.FiltersType,java.util.logging.Logger,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.https.HttpsURLConnectionFactory:void decorateWithTLS(java.net.HttpURLConnection)",
            "org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector:javax.net.ssl.SSLServerSocketFactory createFactory()"
        ]
    },
    "org.apache.cxf.transport.https.CertificateHostnameVerifier$3:void check(java.lang.String[],java.lang.String[],java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.https.CertificateHostnameVerifier$AbstractVerifier:void check(java.lang.String,java.lang.String[],java.lang.String[])",
            "org.apache.cxf.transport.https.CertificateHostnameVerifier$AbstractVerifier:void check(java.lang.String[],java.security.cert.X509Certificate)"
        ]
    },
    "org.apache.cxf.transport.https.CertificateHostnameVerifier$4:void check(java.lang.String[],java.lang.String[],java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.https.CertificateHostnameVerifier$AbstractVerifier:void check(java.lang.String,java.lang.String[],java.lang.String[])",
            "org.apache.cxf.transport.https.CertificateHostnameVerifier$AbstractVerifier:void check(java.lang.String[],java.security.cert.X509Certificate)"
        ]
    },
    "org.apache.cxf.transport.https.CertificateHostnameVerifier$1:void check(java.lang.String[],java.lang.String[],java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.https.CertificateHostnameVerifier$AbstractVerifier:void check(java.lang.String,java.lang.String[],java.lang.String[])",
            "org.apache.cxf.transport.https.CertificateHostnameVerifier$AbstractVerifier:void check(java.lang.String[],java.security.cert.X509Certificate)"
        ]
    },
    "org.apache.cxf.transport.https.CertificateHostnameVerifier$2:void check(java.lang.String[],java.lang.String[],java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.https.CertificateHostnameVerifier$AbstractVerifier:void check(java.lang.String,java.lang.String[],java.lang.String[])",
            "org.apache.cxf.transport.https.CertificateHostnameVerifier$AbstractVerifier:void check(java.lang.String[],java.security.cert.X509Certificate)"
        ]
    },
    "org.apache.cxf.transport.http_jetty.spring.JettySpringTypesFactory:java.util.Map createThreadingParametersMap(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.http_jetty.spring.JettySpringTypesFactory:java.util.Map createTLSServerParametersMap(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineFactoryBeanDefinitionParser:void doParse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void activate()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.AbstractObservable:void setMessageObserver(org.apache.cxf.transport.MessageObserver)"
        ]
    },
    "org.apache.cxf.transport.jms.JMSDestination$2:javax.jms.Message createMessage(javax.jms.Session)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.jms.JMSUtils:javax.jms.Message buildJMSMessageFromCXFMessage(org.apache.cxf.message.Message,java.lang.Object,java.lang.String,javax.jms.Session,javax.jms.Destination,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.jms.JMSConduit$1:javax.jms.Message createMessage(javax.jms.Session)"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:void notifyLifecycleManager()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:void <init>(org.apache.cxf.Bus,org.apache.cxf.endpoint.Endpoint,org.apache.cxf.endpoint.ConduitSelector)",
            "org.apache.cxf.endpoint.ClientImpl:void <init>(org.apache.cxf.Bus,java.net.URL,javax.xml.namespace.QName,javax.xml.namespace.QName,org.apache.cxf.endpoint.EndpointImplFactory)"
        ]
    },
    "org.apache.cxf.endpoint.ServerImpl:void start()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ManagedEndpoint:void start()",
            "org.apache.cxf.frontend.ServerFactoryBean:org.apache.cxf.endpoint.Server create()",
            "org.apache.cxf.jaxws.EndpointImpl:void doPublish(java.lang.String)"
        ]
    },
    "org.apache.cxf.wsdl.EndpointReferenceUtils:org.apache.cxf.ws.addressing.EndpointReferenceType resolve(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.ServiceImpl:java.lang.Object getPort(org.apache.cxf.ws.addressing.EndpointReferenceType,java.lang.Class,javax.xml.ws.WebServiceFeature[])"
        ]
    },
    "org.apache.cxf.wsdl.EndpointReferenceUtils:org.apache.cxf.ws.addressing.EndpointReferenceType renew(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.wsdl.EndpointReferenceUtils:org.apache.cxf.ws.addressing.EndpointReferenceType mint(javax.xml.namespace.QName,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.wsdl.EndpointReferenceUtils:org.apache.cxf.ws.addressing.EndpointReferenceType mint(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.AbstractMultiplexDestination:org.apache.cxf.ws.addressing.EndpointReferenceType getAddressWithId(java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxws.ServiceImpl:void <init>(org.apache.cxf.Bus,java.net.URL,javax.xml.namespace.QName,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.spi.ProviderImpl:javax.xml.ws.spi.ServiceDelegate createServiceDelegate(java.net.URL,javax.xml.namespace.QName,java.lang.Class)"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:void <init>(org.apache.cxf.Bus,java.net.URL,javax.xml.namespace.QName,javax.xml.namespace.QName,org.apache.cxf.endpoint.EndpointImplFactory)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:void <init>(java.net.URL)",
            "org.apache.cxf.endpoint.ClientImpl:void <init>(java.net.URL,javax.xml.namespace.QName)",
            "org.apache.cxf.endpoint.ClientImpl:void <init>(org.apache.cxf.Bus,java.net.URL,javax.xml.namespace.QName,javax.xml.namespace.QName)",
            "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:org.apache.cxf.endpoint.Client createClient(java.lang.String,javax.xml.namespace.QName,java.lang.ClassLoader,javax.xml.namespace.QName,java.util.List)"
        ]
    },
    "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:org.apache.cxf.endpoint.Client createClient(java.lang.String,java.lang.ClassLoader,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:org.apache.cxf.endpoint.Client createClient(java.lang.String,javax.xml.namespace.QName,javax.xml.namespace.QName,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:org.apache.cxf.endpoint.Client createClient(java.lang.String,java.util.List)",
            "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:org.apache.cxf.endpoint.Client createClient(java.lang.String,javax.xml.namespace.QName,java.util.List)"
        ]
    },
    "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:org.apache.cxf.endpoint.Client createClient(java.lang.String,javax.xml.namespace.QName,java.lang.ClassLoader,javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:org.apache.cxf.endpoint.Client createClient(java.lang.String,java.lang.ClassLoader)",
            "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:org.apache.cxf.endpoint.Client createClient(java.lang.String,javax.xml.namespace.QName,javax.xml.namespace.QName)"
        ]
    },
    "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:org.apache.cxf.endpoint.Client createClient(java.net.URL,java.lang.ClassLoader,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:org.apache.cxf.endpoint.Client createClient(java.net.URL,javax.xml.namespace.QName,javax.xml.namespace.QName,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:org.apache.cxf.endpoint.Client createClient(java.net.URL,java.util.List)",
            "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:org.apache.cxf.endpoint.Client createClient(java.net.URL,javax.xml.namespace.QName,java.util.List)"
        ]
    },
    "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:org.apache.cxf.endpoint.Client createClient(java.net.URL,javax.xml.namespace.QName,java.lang.ClassLoader,javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:org.apache.cxf.endpoint.Client createClient(java.net.URL,java.lang.ClassLoader)",
            "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:org.apache.cxf.endpoint.Client createClient(java.net.URL,javax.xml.namespace.QName,javax.xml.namespace.QName)"
        ]
    },
    "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:org.apache.cxf.endpoint.Client createClient(java.net.URL,javax.xml.namespace.QName,java.lang.ClassLoader,javax.xml.namespace.QName,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.addressing.ContextUtils:org.apache.cxf.ws.addressing.AttributedURIType getAction(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.MAPAggregator:org.apache.cxf.ws.addressing.AddressingPropertiesImpl assembleGeneric(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.ws.addressing.MAPAggregator:void assertAddressing(org.apache.cxf.message.Message,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.MAPAggregator:boolean mediate(org.apache.cxf.message.Message,boolean)"
        ]
    },
    "org.apache.cxf.ws.addressing.MAPAggregator:boolean hasUsingAddressing(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.MAPAggregator:boolean usingAddressing(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.ws.addressing.MAPAggregator:java.lang.String getActionUri(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.MAPAggregator:org.apache.cxf.ws.addressing.AddressingPropertiesImpl assembleGeneric(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.ws.addressing.soap.MAPCodec:void encode(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.addressing.AddressingPropertiesImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void mediate(org.apache.cxf.binding.soap.SoapMessage)"
        ]
    },
    "org.apache.cxf.ws.addressing.soap.MAPCodec:void encodeAsExposed(org.apache.cxf.ws.addressing.AddressingPropertiesImpl,org.apache.cxf.binding.soap.SoapMessage,java.lang.Object,javax.xml.namespace.QName,java.lang.Class,org.w3c.dom.Element,javax.xml.bind.Marshaller)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void encode(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.addressing.AddressingPropertiesImpl)"
        ]
    },
    "org.apache.cxf.ws.addressing.soap.MAPCodec:org.apache.cxf.ws.addressing.AddressingProperties decode(org.apache.cxf.binding.soap.SoapMessage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void mediate(org.apache.cxf.binding.soap.SoapMessage)"
        ]
    },
    "org.apache.cxf.ws.policy.util.PolicyComparator:boolean compare(org.apache.neethi.Policy,org.apache.neethi.Policy)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.util.PolicyComparator:boolean compare(org.apache.neethi.PolicyComponent,org.apache.neethi.PolicyComponent)"
        ]
    },
    "org.apache.cxf.ws.policy.util.PolicyComparator:boolean compare(org.apache.neethi.All,org.apache.neethi.All)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.util.PolicyComparator:boolean compare(org.apache.neethi.PolicyComponent,org.apache.neethi.PolicyComponent)"
        ]
    },
    "org.apache.cxf.ws.policy.util.PolicyComparator:boolean compare(org.apache.neethi.ExactlyOne,org.apache.neethi.ExactlyOne)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.util.PolicyComparator:boolean compare(org.apache.neethi.PolicyComponent,org.apache.neethi.PolicyComponent)"
        ]
    },
    "org.apache.cxf.ws.policy.AssertionInfoMap:void <init>(org.apache.neethi.Policy)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.PolicyInInterceptor:void handle(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.ws.policy.PolicyVerificationInInterceptor:void handle(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.AbstractPolicyInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.ws.policy.PolicyVerificationOutInterceptor:void handle(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.AbstractPolicyInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.ws.policy.PolicyVerificationInFaultInterceptor:void handle(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.AbstractPolicyInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.ws.policy.AssertionInfoMap:java.util.Collection getAssertions(org.apache.neethi.PolicyOperator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.AssertionInfoMap:void <init>(org.apache.neethi.Policy)"
        ]
    },
    "org.apache.cxf.ws.policy.Intersector:java.util.Collection intersect(java.util.Collection,java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.policy.builder.primitive.NestedPrimitiveAssertionBuilder:org.apache.cxf.ws.policy.PolicyAssertion buildCompatible(org.apache.cxf.ws.policy.PolicyAssertion,org.apache.cxf.ws.policy.PolicyAssertion)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.policy.AddressingAssertionBuilder:org.apache.cxf.ws.policy.PolicyAssertion buildCompatible(org.apache.cxf.ws.policy.PolicyAssertion,org.apache.cxf.ws.policy.PolicyAssertion)",
            "org.apache.cxf.ws.policy.Intersector:boolean compatibleAssertions(org.apache.cxf.ws.policy.PolicyAssertion,org.apache.cxf.ws.policy.PolicyAssertion)",
            "org.apache.cxf.ws.policy.Intersector:org.apache.cxf.ws.policy.PolicyAssertion intersect(org.apache.cxf.ws.policy.PolicyAssertion,org.apache.cxf.ws.policy.PolicyAssertion)",
            "org.apache.cxf.ws.policy.mtom.MTOMAssertionBuilder:org.apache.cxf.ws.policy.PolicyAssertion buildCompatible(org.apache.cxf.ws.policy.PolicyAssertion,org.apache.cxf.ws.policy.PolicyAssertion)"
        ]
    },
    "org.apache.cxf.ws.policy.EndpointPolicyImpl:void chooseAlternative()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.EndpointPolicyImpl:void finalizeConfig()"
        ]
    },
    "org.apache.cxf.ws.policy.EndpointPolicyImpl:java.util.Collection getVocabulary()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.PolicyInInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor:void recalcEffectivePolicy(org.apache.cxf.binding.soap.SoapMessage,java.lang.String,org.apache.neethi.Policy)"
        ]
    },
    "org.apache.cxf.ws.policy.EndpointPolicyImpl:java.util.Collection getFaultVocabulary()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.ClientPolicyInFaultInterceptor:void handle(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.ws.policy.EndpointPolicyImpl:java.util.List getInterceptors()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.PolicyInInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor:void recalcEffectivePolicy(org.apache.cxf.binding.soap.SoapMessage,java.lang.String,org.apache.neethi.Policy)"
        ]
    },
    "org.apache.cxf.ws.policy.EndpointPolicyImpl:java.util.List getFaultInterceptors()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.ClientPolicyInFaultInterceptor:void handle(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.ws.policy.EndpointPolicyImpl:org.apache.cxf.ws.policy.EndpointPolicy updatePolicy(org.apache.neethi.Policy)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.WSPolicyFeature:void initialize(org.apache.cxf.endpoint.Client,org.apache.cxf.Bus)",
            "org.apache.cxf.ws.policy.WSPolicyFeature:void initialize(org.apache.cxf.endpoint.Server,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.ws.policy.EndpointPolicyImpl:void initialize()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.PolicyEngineImpl:org.apache.cxf.ws.policy.EndpointPolicyImpl createEndpointPolicyInfo(org.apache.cxf.service.model.EndpointInfo,boolean,org.apache.cxf.ws.policy.Assertor)"
        ]
    },
    "org.apache.cxf.ws.policy.AbstractPolicyInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.ws.security.policy.WSSecurityPolicyLoader:void registerProviders()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.policy.WSSecurityPolicyLoader:void register()"
        ]
    },
    "org.apache.cxf.ws.rm.RMEndpoint$EffectivePolicyImpl:void <init>(org.apache.cxf.ws.rm.RMEndpoint,org.apache.cxf.ws.policy.EndpointPolicy,org.apache.cxf.ws.policy.PolicyInterceptorProviderRegistry,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.RMEndpoint:void setPolicies()"
        ]
    },
    "org.apache.cxf.ws.policy.EffectivePolicyImpl:void chooseAlternative(org.apache.cxf.ws.policy.PolicyEngineImpl,org.apache.cxf.ws.policy.Assertor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.EffectivePolicyImpl:void initialise(org.apache.cxf.ws.policy.EndpointPolicyImpl,org.apache.cxf.ws.policy.PolicyEngineImpl,boolean)",
            "org.apache.cxf.ws.policy.EffectivePolicyImpl:void initialise(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.ws.policy.PolicyEngineImpl,org.apache.cxf.ws.policy.Assertor,boolean)",
            "org.apache.cxf.ws.policy.EffectivePolicyImpl:void initialise(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.ws.policy.PolicyEngineImpl,boolean)",
            "org.apache.cxf.ws.policy.EffectivePolicyImpl:void initialise(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.service.model.BindingFaultInfo,org.apache.cxf.ws.policy.PolicyEngineImpl,org.apache.cxf.ws.policy.Assertor)"
        ]
    },
    "org.apache.cxf.ws.policy.EndpointPolicyImpl:void initializePolicy()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.EndpointPolicyImpl:void initialize()"
        ]
    },
    "org.apache.cxf.ws.policy.EffectivePolicyImpl:org.apache.cxf.ws.policy.Assertor initialisePolicy(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.ws.policy.PolicyEngineImpl,boolean,org.apache.cxf.ws.policy.Assertor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.EffectivePolicyImpl:void initialise(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.ws.policy.PolicyEngineImpl,org.apache.cxf.ws.policy.Assertor,boolean)",
            "org.apache.cxf.ws.policy.EffectivePolicyImpl:void initialise(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.ws.policy.PolicyEngineImpl,boolean)"
        ]
    },
    "org.apache.cxf.ws.policy.EffectivePolicyImpl:void initialisePolicy(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.service.model.BindingFaultInfo,org.apache.cxf.ws.policy.PolicyEngineImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.PolicyEngineImpl:org.apache.cxf.ws.policy.EffectivePolicy getEffectiveClientFaultPolicy(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.service.model.BindingFaultInfo)",
            "org.apache.cxf.ws.policy.EffectivePolicyImpl:void initialise(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.service.model.BindingFaultInfo,org.apache.cxf.ws.policy.PolicyEngineImpl,org.apache.cxf.ws.policy.Assertor)"
        ]
    },
    "org.apache.cxf.ws.policy.PolicyEngineImpl:java.util.Collection getAssertions(org.apache.neethi.PolicyComponent,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.PolicyEngineImpl:java.util.Set getVocabulary(org.apache.neethi.PolicyComponent,boolean)"
        ]
    },
    "org.apache.cxf.ws.policy.PolicyUtils:void logPolicy(java.util.logging.Logger,java.util.logging.Level,java.lang.String,org.apache.neethi.PolicyComponent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.PolicyInInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.policy.PolicyOutInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.policy.EffectivePolicyImpl:void chooseAlternative(org.apache.cxf.ws.policy.PolicyEngineImpl,org.apache.cxf.ws.policy.Assertor)"
        ]
    },
    "org.apache.cxf.ws.policy.PolicyUtils:void printPolicyComponent(org.apache.neethi.PolicyComponent)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.policy.EffectivePolicyImpl:void initialise(org.apache.cxf.ws.policy.EndpointPolicyImpl,org.apache.cxf.ws.policy.PolicyEngineImpl,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.PolicyInInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.policy.PolicyOutInterceptor:void handle(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.ws.policy.EffectivePolicyImpl:void initialise(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.ws.policy.PolicyEngineImpl,org.apache.cxf.ws.policy.Assertor,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.PolicyEngineImpl:org.apache.cxf.ws.policy.EffectivePolicy getEffectiveClientRequestPolicy(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.transport.Conduit)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:org.apache.cxf.ws.policy.EffectivePolicy getEffectiveServerResponsePolicy(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.transport.Destination)"
        ]
    },
    "org.apache.cxf.ws.policy.EffectivePolicyImpl:void initialise(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.ws.policy.PolicyEngineImpl,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.PolicyEngineImpl:org.apache.cxf.ws.policy.EffectivePolicy getEffectiveServerRequestPolicy(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:org.apache.cxf.ws.policy.EffectivePolicy getEffectiveClientResponsePolicy(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.service.model.BindingOperationInfo)"
        ]
    },
    "org.apache.cxf.ws.policy.EffectivePolicyImpl:void initialise(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.service.model.BindingFaultInfo,org.apache.cxf.ws.policy.PolicyEngineImpl,org.apache.cxf.ws.policy.Assertor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.PolicyEngineImpl:org.apache.cxf.ws.policy.EffectivePolicy getEffectiveServerFaultPolicy(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.service.model.BindingFaultInfo,org.apache.cxf.transport.Destination)"
        ]
    },
    "org.apache.cxf.ws.policy.EffectivePolicyImpl:void initialiseInterceptors(org.apache.cxf.ws.policy.PolicyEngineImpl)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.policy.attachment.wsdl11.Wsdl11AttachmentPolicyProvider:org.apache.neethi.Policy resolveLocal(org.apache.neethi.PolicyReference,org.apache.cxf.service.model.DescriptionInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.attachment.wsdl11.Wsdl11AttachmentPolicyProvider:org.apache.neethi.Policy resolveReference(org.apache.neethi.PolicyReference,org.apache.cxf.service.model.DescriptionInfo)"
        ]
    },
    "org.apache.cxf.ws.security.policy.WSSecurityPolicyLoader:void registerBuilders()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.policy.WSSecurityPolicyLoader:void register()"
        ]
    },
    "org.apache.cxf.ws.policy.AssertionBuilderRegistryImpl:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.PolicyBuilderImpl:org.apache.neethi.PolicyOperator processOperationElement(org.w3c.dom.Element,org.apache.neethi.PolicyOperator)"
        ]
    },
    "org.apache.cxf.ws.security.policy.builders.TransportBindingBuilder:void processAlternative(org.w3c.dom.Element,org.apache.cxf.ws.security.policy.model.TransportBinding,org.apache.cxf.ws.security.policy.SPConstants)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.policy.builders.TransportBindingBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)"
        ]
    },
    "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor$SecureConversationTokenFinderInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.ws.security.trust.STSClient:void setPolicy(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor$STSInvoker:org.apache.cxf.ws.security.tokenstore.SecurityToken findCancelToken(org.apache.cxf.message.Exchange,org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor$STSInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object)"
        ]
    },
    "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:org.apache.cxf.ws.security.tokenstore.SecurityToken getSecurityToken()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.wss4j.policyhandlers.TransportBindingHandler:void addUsernameTokens(org.apache.cxf.ws.security.policy.model.SupportingToken)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.TransportBindingHandler:byte[] doIssuedTokenSignature(org.apache.cxf.ws.security.policy.model.Token,org.apache.cxf.ws.security.policy.model.SignedEncryptedParts,org.apache.cxf.ws.security.policy.model.TokenWrapper,org.apache.cxf.ws.security.tokenstore.SecurityToken)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:java.util.Map handleSupportingTokens(org.apache.cxf.ws.security.policy.model.SupportingToken,boolean,java.util.Map)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.SymmetricBindingHandler:void doEncryptBeforeSign()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.SymmetricBindingHandler:void doSignBeforeEncrypt()"
        ]
    },
    "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:java.util.Collection getCancelledTokens()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:java.util.Collection getExpiredTokens()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:java.util.Collection getRenewedTokens()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.security.wss4j.policyhandlers.AsymmetricBindingHandler:void handleBinding()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JOutInterceptor$PolicyBasedWSS4JOutInterceptorInternal:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)"
        ]
    },
    "org.apache.cxf.ws.security.wss4j.policyhandlers.AsymmetricBindingHandler:void doSignature(java.util.Vector)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AsymmetricBindingHandler:void doSignBeforeEncrypt()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AsymmetricBindingHandler:void doEncryptBeforeSign()"
        ]
    },
    "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:java.lang.String getPassword(java.lang.String,org.apache.cxf.ws.policy.PolicyAssertion,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.wss4j.policyhandlers.TransportBindingHandler:byte[] doIssuedTokenSignature(org.apache.cxf.ws.security.policy.model.Token,org.apache.cxf.ws.security.policy.model.SignedEncryptedParts,org.apache.cxf.ws.security.policy.model.TokenWrapper,org.apache.cxf.ws.security.tokenstore.SecurityToken)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:java.util.Map handleSupportingTokens(org.apache.cxf.ws.security.policy.model.SupportingToken,boolean,java.util.Map)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:org.apache.ws.security.message.WSSecUsernameToken addUsernameToken(org.apache.cxf.ws.security.policy.model.UsernameToken)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:org.apache.ws.security.message.WSSecSignature getSignatureBuider(org.apache.cxf.ws.security.policy.model.TokenWrapper,org.apache.cxf.ws.security.policy.model.Token,boolean)"
        ]
    },
    "org.apache.cxf.ws.security.wss4j.policyhandlers.AsymmetricBindingHandler:void setupEncryptedKey(org.apache.cxf.ws.security.policy.model.TokenWrapper,org.apache.cxf.ws.security.policy.model.Token)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AsymmetricBindingHandler:org.apache.ws.security.message.WSSecBase doEncryption(org.apache.cxf.ws.security.policy.model.TokenWrapper,java.util.Vector,boolean)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AsymmetricBindingHandler:void doSignature(java.util.Vector)"
        ]
    },
    "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void setEncryptionUser(org.apache.ws.security.message.WSSecEncryptedKey,org.apache.cxf.ws.security.policy.model.TokenWrapper,boolean,org.apache.ws.security.components.crypto.Crypto)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AsymmetricBindingHandler:org.apache.ws.security.message.WSSecBase doEncryption(org.apache.cxf.ws.security.policy.model.TokenWrapper,java.util.Vector,boolean)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:org.apache.ws.security.message.WSSecEncryptedKey getEncryptedKeyBuilder(org.apache.cxf.ws.security.policy.model.TokenWrapper,org.apache.cxf.ws.security.policy.model.Token)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.SymmetricBindingHandler:org.apache.ws.security.message.WSSecBase doEncryption(org.apache.cxf.ws.security.policy.model.TokenWrapper,org.apache.cxf.ws.security.tokenstore.SecurityToken,boolean,java.util.Vector,boolean)"
        ]
    },
    "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void setKeyIdentifierType(org.apache.ws.security.message.WSSecBase,org.apache.cxf.ws.security.policy.model.TokenWrapper,org.apache.cxf.ws.security.policy.model.Token)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AsymmetricBindingHandler:org.apache.ws.security.message.WSSecBase doEncryption(org.apache.cxf.ws.security.policy.model.TokenWrapper,java.util.Vector,boolean)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:org.apache.ws.security.message.WSSecEncryptedKey getEncryptedKeyBuilder(org.apache.cxf.ws.security.policy.model.TokenWrapper,org.apache.cxf.ws.security.policy.model.Token)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:org.apache.ws.security.message.WSSecSignature getSignatureBuider(org.apache.cxf.ws.security.policy.model.TokenWrapper,org.apache.cxf.ws.security.policy.model.Token,boolean)"
        ]
    },
    "org.apache.cxf.ws.security.wss4j.policyhandlers.SymmetricBindingHandler:void handleBinding()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JOutInterceptor$PolicyBasedWSS4JOutInterceptorInternal:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)"
        ]
    },
    "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void assertSupportingTokens(java.util.Vector)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AsymmetricBindingHandler:void doSignBeforeEncrypt()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.SymmetricBindingHandler:void doSignBeforeEncrypt()"
        ]
    },
    "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void addSupportingTokens(java.util.Vector)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AsymmetricBindingHandler:void doSignBeforeEncrypt()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AsymmetricBindingHandler:void doEncryptBeforeSign()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.SymmetricBindingHandler:void doEncryptBeforeSign()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.SymmetricBindingHandler:void doSignBeforeEncrypt()"
        ]
    },
    "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:java.util.Map handleSupportingTokens(org.apache.cxf.ws.security.policy.model.SupportingToken,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.wss4j.policyhandlers.TransportBindingHandler:void handleBinding()"
        ]
    },
    "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void addSignatureConfirmation(java.util.Vector)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.wss4j.policyhandlers.TransportBindingHandler:void handleBinding()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AsymmetricBindingHandler:void doSignBeforeEncrypt()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AsymmetricBindingHandler:void doEncryptBeforeSign()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.SymmetricBindingHandler:void doEncryptBeforeSign()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.SymmetricBindingHandler:void doSignBeforeEncrypt()"
        ]
    },
    "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JOutInterceptor$PolicyBasedWSS4JOutInterceptorInternal:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:boolean assertTransportBinding(org.apache.cxf.ws.policy.AssertionInfoMap)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:void doResults(org.apache.cxf.binding.soap.SoapMessage,java.lang.String,javax.xml.soap.SOAPMessage,java.util.Vector)"
        ]
    },
    "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:void assertPolicy(org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.ws.security.policy.model.Token,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:boolean assertSymetricBinding(org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.binding.soap.SoapMessage,javax.xml.soap.SOAPMessage,org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor$Protections,boolean)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:boolean assertAsymetricBinding(org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.binding.soap.SoapMessage,javax.xml.soap.SOAPMessage,org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor$Protections,boolean)"
        ]
    },
    "org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor:void <init>(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.rm.Servant:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.ServiceInvokerInterceptor$1:void run()"
        ]
    },
    "org.apache.cxf.ws.rm.DestinationSequence:void applyDeliveryAssurance(java.math.BigInteger)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.Destination:void acknowledge(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl:void purgeAcknowledged(org.apache.cxf.ws.rm.SourceSequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.SourceSequence:void setAcknowledged(org.apache.cxf.ws.rm.SequenceAcknowledgement)"
        ]
    },
    "org.apache.cxf.ws.rm.DestinationSequence:void scheduleAcknowledgement(long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.DestinationSequence:void acknowledge(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.ws.rm.DestinationSequence:void acknowledge(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.Destination:void acknowledge(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl$ResendCandidate:void <init>(org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl:org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl$ResendCandidate createResendCandidate(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl:org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl$ResendCandidate cacheUnacknowledged(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.ws.rm.RMManager:void startServer(org.apache.cxf.endpoint.Server)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ServerLifeCycleManagerImpl:void startServer(org.apache.cxf.endpoint.Server)"
        ]
    },
    "org.apache.cxf.ws.rm.RMManager:void clientCreated(org.apache.cxf.endpoint.Client)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientLifeCycleManagerImpl:void clientCreated(org.apache.cxf.endpoint.Client)"
        ]
    },
    "org.apache.cxf.ws.rm.soap.RMSoapInterceptor:void encode(org.apache.cxf.binding.soap.SoapMessage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.soap.RMSoapInterceptor:void mediate(org.apache.cxf.binding.soap.SoapMessage)"
        ]
    },
    "org.apache.cxf.ws.rm.soap.RMSoapInterceptor:void decode(org.apache.cxf.binding.soap.SoapMessage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.soap.RMSoapInterceptor:void mediate(org.apache.cxf.binding.soap.SoapMessage)"
        ]
    },
    "org.apache.cxf.ws.rm.soap.RMSoapInterceptor:void encodeFault(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.rm.SequenceFault)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.soap.RMSoapInterceptor:void encode(org.apache.cxf.binding.soap.SoapMessage)"
        ]
    },
    "org.apache.cxf.ws.rm.RMEndpoint:void initialise(org.apache.cxf.transport.Conduit,org.apache.cxf.ws.addressing.EndpointReferenceType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.RMManager:org.apache.cxf.ws.rm.RMEndpoint getReliableEndpoint(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.RMManager:void recoverReliableEndpoint(org.apache.cxf.endpoint.Endpoint,org.apache.cxf.transport.Conduit)"
        ]
    },
    "org.apache.cxf.ws.rm.RMEndpoint:java.lang.Object getUsingAddressing(org.apache.cxf.service.model.EndpointInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.RMEndpoint:void createEndpoint()"
        ]
    },
    "org.apache.cxf.ws.rm.DestinationSequence:void purgeAcknowledged(java.math.BigInteger)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.DestinationSequence:void acknowledge(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.OutgoingChainInterceptor:org.apache.cxf.interceptor.InterceptorChain getOutInterceptorChain(org.apache.cxf.message.Exchange)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.ContextUtils:void rebaseResponse(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.ws.addressing.AddressingProperties,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerInterceptor:void handleAbort(org.apache.cxf.binding.soap.SoapMessage,javax.xml.ws.handler.MessageContext)",
            "org.apache.cxf.jaxws.handler.logical.LogicalHandlerInInterceptor:void handleAbort(org.apache.cxf.message.Message,org.apache.cxf.staxutils.W3CDOMStreamWriter)"
        ]
    },
    "org.apache.cxf.transport.MultipleEndpointObserver:org.apache.cxf.phase.PhaseInterceptorChain createChain()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.MultipleEndpointObserver:void onMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.phase.PhaseChainCache:org.apache.cxf.phase.PhaseInterceptorChain getChain(java.util.SortedSet,java.util.List[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseChainCache:org.apache.cxf.phase.PhaseInterceptorChain get(java.util.SortedSet,java.util.List)",
            "org.apache.cxf.phase.PhaseChainCache:org.apache.cxf.phase.PhaseInterceptorChain get(java.util.SortedSet,java.util.List,java.util.List)",
            "org.apache.cxf.phase.PhaseChainCache:org.apache.cxf.phase.PhaseInterceptorChain get(java.util.SortedSet,java.util.List,java.util.List,java.util.List)",
            "org.apache.cxf.phase.PhaseChainCache:org.apache.cxf.phase.PhaseInterceptorChain get(java.util.SortedSet,java.util.List,java.util.List,java.util.List,java.util.List)",
            "org.apache.cxf.phase.PhaseChainCache:org.apache.cxf.phase.PhaseInterceptorChain get(java.util.SortedSet,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List)"
        ]
    },
    "org.apache.cxf.phase.PhaseInterceptorChain:void add(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.OutFaultChainInitiatorObserver:void initializeInterceptors(org.apache.cxf.message.Exchange,org.apache.cxf.phase.PhaseInterceptorChain)",
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:org.apache.cxf.interceptor.InterceptorChain getOutInterceptorChain(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.interceptor.AbstractEndpointSelectionInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.InFaultChainInitiatorObserver:void initializeInterceptors(org.apache.cxf.message.Exchange,org.apache.cxf.phase.PhaseInterceptorChain)",
            "org.apache.cxf.transport.MultipleEndpointObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.phase.PhaseChainCache:org.apache.cxf.phase.PhaseInterceptorChain getChain(java.util.SortedSet,java.util.List[])"
        ]
    },
    "org.apache.cxf.workqueue.WorkQueueManagerImplMBeanWrapper:void shutdown(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.databinding.stax.StaxDataBindingFeature:void removeDatabindingInterceptor(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.stax.StaxDataBindingFeature:void initialize(org.apache.cxf.endpoint.Client,org.apache.cxf.Bus)",
            "org.apache.cxf.databinding.stax.StaxDataBindingFeature:void initialize(org.apache.cxf.endpoint.Server,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.v200408.EndpointReferenceType convert(org.apache.cxf.ws.addressing.EndpointReferenceType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.soap.VersionTransformer:void encodeAsExposed(java.lang.String,java.lang.Object,java.lang.String,java.lang.Class,org.w3c.dom.Element,javax.xml.bind.Marshaller)",
            "org.apache.cxf.ws.rm.RMManager:org.apache.cxf.ws.rm.SourceSequence getSequence(org.apache.cxf.ws.rm.Identifier,org.apache.cxf.message.Message,org.apache.cxf.ws.addressing.AddressingProperties)",
            "org.apache.cxf.ws.rm.RMUtils:org.apache.cxf.ws.addressing.v200408.EndpointReferenceType createAnonymousReference2004()",
            "org.apache.cxf.ws.rm.RMUtils:org.apache.cxf.ws.addressing.v200408.EndpointReferenceType createNoneReference2004()"
        ]
    },
    "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.v200403.EndpointReferenceType convertTo200403(org.apache.cxf.ws.addressing.EndpointReferenceType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.soap.VersionTransformer:void encodeAsExposed(java.lang.String,java.lang.Object,java.lang.String,java.lang.Class,org.w3c.dom.Element,javax.xml.bind.Marshaller)"
        ]
    },
    "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.namespace.QName getPortQName(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.ServiceImpl:javax.xml.ws.Dispatch createDispatch(javax.xml.ws.EndpointReference,java.lang.Class,javax.xml.ws.Service$Mode,javax.xml.ws.WebServiceFeature[])",
            "org.apache.cxf.jaxws.ServiceImpl:javax.xml.ws.Dispatch createDispatch(javax.xml.ws.EndpointReference,javax.xml.bind.JAXBContext,javax.xml.ws.Service$Mode,javax.xml.ws.WebServiceFeature[])"
        ]
    },
    "org.apache.cxf.wsdl.EndpointReferenceUtils:org.apache.cxf.ws.addressing.EndpointReferenceType getEndpointReferenceWithId(javax.xml.namespace.QName,java.lang.String,java.lang.String,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.io.CachedOutputStream:java.io.InputStream getInputStream()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.PrettyLoggingOutInterceptor$LoggingCallback:void onClose(org.apache.cxf.io.CachedOutputStream)",
            "org.apache.cxf.interceptor.LoggingInInterceptor:void logging(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit$InterposedMessageObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.databinding.source.XMLStreamDataReader:java.io.InputStream getInputStream(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.databinding.source.NodeDataReader:java.lang.Object read(javax.xml.namespace.QName,org.w3c.dom.Node,java.lang.Class)",
            "org.apache.cxf.io.CachedOutputStream:void resetOut(java.io.OutputStream,boolean)",
            "org.apache.cxf.attachment.AttachmentDeserializer:void cache(org.apache.cxf.attachment.DelegatingInputStream,boolean)",
            "org.apache.cxf.attachment.AttachmentDataSource:java.io.InputStream getInputStream()",
            "org.apache.cxf.jaxws.handler.logical.LogicalMessageImpl:javax.xml.transform.Source handleDispatchProviderCase(javax.xml.ws.Service$Mode)",
            "org.apache.cxf.jaxws.spi.ProviderImpl:javax.xml.ws.wsaddressing.W3CEndpointReference createW3CEndpointReference(java.lang.String,javax.xml.namespace.QName,javax.xml.namespace.QName,java.util.List,java.lang.String,java.util.List)",
            "org.apache.cxf.jaxws.interceptors.MessageModeInInterceptor:void doFromSoapMessage(org.apache.cxf.message.Message,java.lang.Object)"
        ]
    },
    "org.apache.cxf.io.AbstractWrappedOutputStream:void flush()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void flush()",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void close()",
            "org.apache.cxf.transport.servlet.ServletController:void invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl:void resend(org.apache.cxf.transport.Conduit,org.apache.cxf.message.Message)",
            "org.apache.cxf.io.CachedOutputStream:void flush()",
            "org.apache.cxf.io.CachedOutputStream:void lockOutputStream()",
            "org.apache.cxf.io.CachedOutputStream:void close()",
            "org.apache.cxf.io.AbstractWrappedOutputStream:void flush()",
            "org.apache.cxf.io.WriteOnCloseOutputStream:void doClose()",
            "org.apache.cxf.io.CacheAndWriteOutputStream:void closeFlowthroughStream()",
            "org.apache.cxf.io.CacheAndWriteOutputStream:void postClose()",
            "org.apache.cxf.attachment.AttachmentSerializer:void writeAttachments()"
        ]
    },
    "org.apache.cxf.service.model.BindingOperationInfo:void <init>(org.apache.cxf.service.model.BindingInfo,org.apache.cxf.service.model.OperationInfo,org.apache.cxf.service.model.BindingOperationInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.model.BindingOperationInfo:void <init>(org.apache.cxf.service.model.BindingInfo,org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.BindingOperationInfo:void updateUnwrappedOperation()"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean initializeParameter(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int,java.lang.Class,java.lang.reflect.Type)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean initializeClassInfo(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,java.util.List)"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createMessageParts(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.OperationInfo createOperation(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.InterfaceInfo,java.lang.reflect.Method)"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLServiceBuilder:void checkForWrapped(org.apache.cxf.service.model.OperationInfo,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean initializeClassInfo(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,java.util.List)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildInterfaceOperation(org.apache.cxf.service.model.InterfaceInfo,javax.wsdl.Operation)"
        ]
    },
    "org.apache.cxf.service.model.AbstractMessageContainer:void removeMessagePart(javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeParameter(org.apache.cxf.service.model.MessagePartInfo,java.lang.Class,java.lang.reflect.Type)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean initializeParameter(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int,java.lang.Class,java.lang.reflect.Type)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createMessageParts(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean:void initializeParameter(org.apache.cxf.service.model.MessagePartInfo,java.lang.Class,java.lang.reflect.Type)"
        ]
    },
    "org.apache.cxf.binding.soap.SoapBindingFactory:void addSoapBodyPart(org.apache.cxf.service.model.MessageInfo,java.util.List,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.soap.SoapBindingFactory:void initializeMessage(org.apache.cxf.binding.soap.model.SoapBindingInfo,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.service.model.BindingMessageInfo)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:java.util.List handleMimePart(javax.wsdl.extensions.mime.MIMEPart,java.util.List,org.apache.cxf.service.model.MessageInfo,org.apache.cxf.service.model.BindingMessageInfo,java.util.List,java.util.List)"
        ]
    },
    "org.apache.cxf.jaxb.JAXBContextInitializer:void begin(org.apache.cxf.service.model.MessagePartInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.ServiceModelVisitor:void visitOperation(org.apache.cxf.service.model.OperationInfo)"
        ]
    },
    "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:org.apache.cxf.service.model.BindingOperationInfo getBindingOperationInfo(org.apache.cxf.message.Exchange,javax.xml.namespace.QName,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:org.apache.cxf.service.model.BindingOperationInfo getBindingOperationInfo(org.apache.cxf.message.Exchange,javax.xml.namespace.QName,boolean)"
        ]
    },
    "org.apache.cxf.interceptor.DocLiteralInInterceptor:org.apache.cxf.service.model.BindingOperationInfo getBindingOperationInfo(org.apache.cxf.message.Exchange,javax.xml.namespace.QName,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory:org.apache.cxf.endpoint.Endpoint createEndpoint()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.frontend.ClientFactoryBean:org.apache.cxf.endpoint.Client create()",
            "org.apache.cxf.frontend.AbstractServiceFactory:org.apache.cxf.service.model.ServiceInfo createService()",
            "org.apache.cxf.frontend.ServerFactoryBean:org.apache.cxf.endpoint.Server create()"
        ]
    },
    "org.apache.cxf.jaxws.ServiceImpl:java.lang.Object createPort(javax.xml.namespace.QName,org.apache.cxf.ws.addressing.EndpointReferenceType,java.lang.Class,javax.xml.ws.WebServiceFeature[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.ServiceImpl:java.lang.Object getPort(java.lang.Class,javax.xml.ws.WebServiceFeature[])",
            "org.apache.cxf.jaxws.ServiceImpl:java.lang.Object getPort(javax.xml.namespace.QName,java.lang.Class,javax.xml.ws.WebServiceFeature[])",
            "org.apache.cxf.jaxws.ServiceImpl:java.lang.Object getPort(org.apache.cxf.ws.addressing.EndpointReferenceType,java.lang.Class,javax.xml.ws.WebServiceFeature[])",
            "org.apache.cxf.jaxws.ServiceImpl:java.lang.Object createPort(javax.xml.namespace.QName,org.apache.cxf.ws.addressing.EndpointReferenceType,java.lang.Class)"
        ]
    },
    "org.apache.cxf.ws.rm.RMEndpoint:org.apache.cxf.service.model.BindingInfo getBindingInfo()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.Proxy:java.lang.Object invoke(org.apache.cxf.service.model.OperationInfo,java.lang.Object[],java.util.Map)"
        ]
    },
    "org.apache.cxf.ws.rm.RMEndpoint:void createEndpoint()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.RMEndpoint:void initialise(org.apache.cxf.transport.Conduit,org.apache.cxf.ws.addressing.EndpointReferenceType)"
        ]
    },
    "org.apache.cxf.service.model.ServiceInfo:void addBinding(org.apache.cxf.service.model.BindingInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.trust.STSUtils:org.apache.cxf.endpoint.Endpoint createSTSEndpoint(org.apache.cxf.Bus,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.neethi.Policy,javax.xml.namespace.QName)",
            "org.apache.cxf.ws.rm.RMEndpoint:void buildBindingInfo(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.BindingInfo buildBinding(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding)",
            "org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory:org.apache.cxf.service.model.EndpointInfo createEndpointInfo()",
            "org.apache.cxf.jaxws.ServiceImpl:org.apache.cxf.service.model.EndpointInfo createEndpointInfo(org.apache.cxf.service.factory.AbstractServiceFactoryBean,javax.xml.namespace.QName,org.apache.cxf.jaxws.handler.PortInfoImpl)"
        ]
    },
    "org.apache.cxf.ws.rm.WrappedService:org.apache.cxf.service.model.EndpointInfo getEndpointInfo(javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.EndpointImpl:void <init>(org.apache.cxf.Bus,org.apache.cxf.service.Service,javax.xml.namespace.QName)",
            "org.apache.cxf.endpoint.ClientImpl:org.apache.cxf.service.model.EndpointInfo findEndpoint(org.apache.cxf.service.Service,javax.xml.namespace.QName)",
            "org.apache.cxf.ws.security.trust.STSClient:void createClient()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.EndpointInfo getEndpointInfo()",
            "org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory:org.apache.cxf.endpoint.Endpoint createEndpoint()",
            "org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory:org.apache.cxf.service.model.EndpointInfo createEndpointInfo()",
            "org.apache.cxf.jaxws.ServiceImpl:org.apache.cxf.jaxws.support.JaxWsClientEndpointImpl getJaxwsEndpoint(javax.xml.namespace.QName,org.apache.cxf.service.factory.AbstractServiceFactoryBean,javax.xml.ws.WebServiceFeature[])"
        ]
    },
    "org.apache.cxf.service.model.ServiceInfo:void addEndpoint(org.apache.cxf.service.model.EndpointInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.trust.STSUtils:org.apache.cxf.endpoint.Endpoint createSTSEndpoint(org.apache.cxf.Bus,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.neethi.Policy,javax.xml.namespace.QName)",
            "org.apache.cxf.ws.rm.RMEndpoint:void createEndpoint()",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.EndpointInfo buildEndpoint(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.BindingInfo,javax.wsdl.Port)",
            "org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory:org.apache.cxf.service.model.EndpointInfo createEndpointInfo()",
            "org.apache.cxf.jaxws.ServiceImpl:org.apache.cxf.service.model.EndpointInfo createEndpointInfo(org.apache.cxf.service.factory.AbstractServiceFactoryBean,javax.xml.namespace.QName,org.apache.cxf.jaxws.handler.PortInfoImpl)"
        ]
    },
    "org.apache.cxf.service.model.ServiceInfo:java.util.Map getMessages()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.MessageInfo getMessage(javax.xml.namespace.QName)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildService(org.apache.cxf.service.model.ServiceInfo)"
        ]
    },
    "org.apache.cxf.service.model.ServiceInfo:void refresh()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.soap.SoapBindingFactory:void addMessageFromBinding(javax.wsdl.extensions.ExtensibilityElement,org.apache.cxf.service.model.BindingOperationInfo,boolean)"
        ]
    },
    "org.apache.cxf.jaxb.JAXBEncoderDecoder:void marshallException(javax.xml.bind.Marshaller,java.lang.Exception,org.apache.cxf.service.model.MessagePartInfo,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.io.DataWriterImpl:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,java.lang.Object)"
        ]
    },
    "org.apache.cxf.jaxb.JAXBSchemaInitializer:void createBridgeXsElement(org.apache.cxf.service.model.MessagePartInfo,javax.xml.namespace.QName,javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.JAXBSchemaInitializer:void checkForExistence(org.apache.cxf.service.model.MessagePartInfo)"
        ]
    },
    "org.apache.cxf.databinding.AbstractDataBinding:org.apache.ws.commons.schema.XmlSchema addSchemaDocument(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.common.xmlschema.SchemaCollection,org.w3c.dom.Document,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.JAXBDataBinding:void initialize(org.apache.cxf.service.Service)",
            "org.apache.cxf.xmlbeans.XmlBeansSchemaInitializer:org.apache.ws.commons.schema.XmlSchema getSchema(org.apache.xmlbeans.SchemaTypeSystem,java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxws.WrapperClassGenerator:void generatePackageInfo(java.lang.String,java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.WrapperClassGenerator:void createWrapperClass(org.apache.cxf.service.model.MessagePartInfo,org.apache.cxf.service.model.MessageInfo,org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,boolean)"
        ]
    },
    "org.apache.cxf.ws.rm.RMEndpoint:void buildBindingInfo(org.apache.cxf.service.model.ServiceInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.RMEndpoint:void createEndpoint()"
        ]
    },
    "org.apache.cxf.endpoint.EndpointImpl:void <init>(org.apache.cxf.Bus,org.apache.cxf.service.Service,javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.security.trust.STSClient:void createClient()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.trust.STSClient:org.apache.cxf.ws.security.tokenstore.SecurityToken requestSecurityToken(java.lang.String,java.lang.String,java.lang.String,org.apache.cxf.ws.security.tokenstore.SecurityToken)",
            "org.apache.cxf.ws.security.trust.STSClient:boolean validateSecurityToken(org.apache.cxf.ws.security.tokenstore.SecurityToken,java.lang.String)",
            "org.apache.cxf.ws.security.trust.STSClient:void cancelSecurityToken(org.apache.cxf.ws.security.tokenstore.SecurityToken)"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.EndpointInfo getEndpointInfo()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.InterfaceInfo getInterfaceInfo()",
            "org.apache.cxf.jaxws.JaxWsProxyFactoryBean:void buildHandlerChain(org.apache.cxf.jaxws.JaxWsClientProxy)",
            "org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean:void initializeWSDLOperationsForProvider()",
            "org.apache.cxf.jaxws.JaxWsServerFactoryBean:void buildHandlerChain()"
        ]
    },
    "org.apache.cxf.jaxws.ServiceImpl:org.apache.cxf.jaxws.support.JaxWsClientEndpointImpl getJaxwsEndpoint(javax.xml.namespace.QName,org.apache.cxf.service.factory.AbstractServiceFactoryBean,javax.xml.ws.WebServiceFeature[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.ServiceImpl:javax.xml.ws.Dispatch createDispatch(javax.xml.namespace.QName,java.lang.Class,javax.xml.ws.Service$Mode,javax.xml.ws.WebServiceFeature[])",
            "org.apache.cxf.jaxws.ServiceImpl:javax.xml.ws.Dispatch createDispatch(javax.xml.namespace.QName,javax.xml.bind.JAXBContext,javax.xml.ws.Service$Mode,javax.xml.ws.WebServiceFeature[])"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.Service create()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory:org.apache.cxf.endpoint.Endpoint createEndpoint()",
            "org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean:org.apache.cxf.service.Service create()"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeServiceModel()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.Service create()"
        ]
    },
    "org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean:void buildServiceFromClass()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeServiceModel()"
        ]
    },
    "org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean:void initializeWSDLOperations()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromWSDL(java.lang.String)"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean initializeClassInfo(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeWSDLOperation(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean:void initializeWSDLOperation(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.InterfaceInfo createInterface(org.apache.cxf.service.model.ServiceInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromClass()"
        ]
    },
    "org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean:org.apache.cxf.service.model.OperationInfo createOperation(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.InterfaceInfo,java.lang.reflect.Method)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.InterfaceInfo createInterface(org.apache.cxf.service.model.ServiceInfo)"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void addImport(org.apache.ws.commons.schema.XmlSchema,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createBareMessage(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.OperationInfo,boolean)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createWrappedMessageSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.AbstractMessageContainer,org.apache.cxf.service.model.AbstractMessageContainer,org.apache.ws.commons.schema.XmlSchema,javax.xml.namespace.QName)"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isExistSchemaElement(org.apache.ws.commons.schema.XmlSchema,javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void checkForElement(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createBareMessage(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.OperationInfo,boolean)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createWrappedMessageSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.AbstractMessageContainer,org.apache.cxf.service.model.AbstractMessageContainer,org.apache.ws.commons.schema.XmlSchema,javax.xml.namespace.QName)"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createWrappedSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.AbstractMessageContainer,org.apache.cxf.service.model.AbstractMessageContainer,javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeWrappedSchema(org.apache.cxf.service.model.ServiceInfo)"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getEndpointName()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.EndpointInfo getEndpointInfo()",
            "org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory:org.apache.cxf.endpoint.Endpoint createEndpoint()",
            "org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean:void initializeWSDLOperationsForProvider()",
            "org.apache.cxf.jaxws.ServiceImpl:java.lang.Object createPort(javax.xml.namespace.QName,org.apache.cxf.ws.addressing.EndpointReferenceType,java.lang.Class,javax.xml.ws.WebServiceFeature[])"
        ]
    },
    "org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory:void <init>(org.apache.cxf.service.factory.ReflectionServiceFactoryBean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.frontend.ClientFactoryBean:void <init>(org.apache.cxf.service.factory.ReflectionServiceFactoryBean)",
            "org.apache.cxf.frontend.AbstractServiceFactory:void <init>(org.apache.cxf.service.factory.ReflectionServiceFactoryBean)",
            "org.apache.cxf.frontend.ServerFactoryBean:void <init>(org.apache.cxf.service.factory.ReflectionServiceFactoryBean)"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getServiceQName(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getServiceQName()",
            "org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory:void <init>(org.apache.cxf.service.factory.ReflectionServiceFactoryBean)"
        ]
    },
    "org.apache.cxf.service.factory.DefaultServiceConfiguration:javax.xml.namespace.QName getInterfaceName()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getInterfaceName()"
        ]
    },
    "org.apache.cxf.service.factory.DefaultServiceConfiguration:javax.xml.namespace.QName getEndpointName()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getEndpointName(boolean)"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void setParameterOrder(java.lang.reflect.Method,java.lang.Class[],org.apache.cxf.service.model.OperationInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createMessageParts(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.FaultInfo addFault(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeFaults(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)"
        ]
    },
    "org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean:void initializeWrapping(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean:void initializeWSDLOperation(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)"
        ]
    },
    "org.apache.cxf.jaxws.WrapperClassGenerator:void generateMessagePart(org.objectweb.asm.ClassWriter,org.apache.cxf.service.model.MessagePartInfo,java.lang.reflect.Method,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.WrapperClassGenerator:void createWrapperClass(org.apache.cxf.service.model.MessagePartInfo,org.apache.cxf.service.model.MessageInfo,org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,boolean)"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isFromWsdl()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeServiceModel()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean initializeParameter(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int,java.lang.Class,java.lang.reflect.Type)",
            "org.apache.cxf.service.factory.DefaultServiceConfiguration:javax.xml.namespace.QName getOperationName(org.apache.cxf.service.model.InterfaceInfo,java.lang.reflect.Method)",
            "org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean:org.apache.cxf.endpoint.Endpoint createEndpoint(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean:void initializeWSDLOperationsForProvider()"
        ]
    },
    "org.apache.cxf.frontend.ClientProxyFactoryBean:java.lang.String getWsdlURL()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.frontend.ClientProxyFactoryBean:java.lang.String getWsdlLocation()"
        ]
    },
    "org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory:java.lang.String getWsdlURL()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.frontend.ServerFactoryBean:java.lang.String getWsdlLocation()",
            "org.apache.cxf.jaxws.EndpointImpl:org.apache.cxf.endpoint.ServerImpl getServer(java.lang.String)"
        ]
    },
    "org.apache.cxf.service.factory.DefaultServiceConfiguration:java.lang.Boolean isWrapped(java.lang.reflect.Method)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isWrapped(java.lang.reflect.Method)"
        ]
    },
    "org.apache.cxf.jaxws.binding.soap.JaxWsSoapBindingConfiguration:java.lang.String getStyle(org.apache.cxf.service.model.OperationInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.soap.SoapBindingFactory:org.apache.cxf.service.model.BindingInfo createBindingInfo(org.apache.cxf.service.model.ServiceInfo,java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.cxf.binding.AbstractBindingFactory:org.apache.cxf.service.model.BindingInfo createBindingInfo(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.BindingInfo buildBinding(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding)"
        ]
    },
    "org.apache.cxf.binding.AbstractBindingFactory:org.apache.cxf.service.model.BindingInfo createBindingInfo(org.apache.cxf.service.Service,java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.trust.STSUtils:org.apache.cxf.endpoint.Endpoint createSTSEndpoint(org.apache.cxf.Bus,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.neethi.Policy,javax.xml.namespace.QName)",
            "org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory:org.apache.cxf.service.model.BindingInfo createBindingInfo()",
            "org.apache.cxf.jaxws.ServiceImpl:org.apache.cxf.service.model.EndpointInfo createEndpointInfo(org.apache.cxf.service.factory.AbstractServiceFactoryBean,javax.xml.namespace.QName,org.apache.cxf.jaxws.handler.PortInfoImpl)"
        ]
    },
    "org.apache.cxf.endpoint.EndpointImpl:void createBinding(org.apache.cxf.service.model.BindingInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.EndpointImpl:void <init>(org.apache.cxf.Bus,org.apache.cxf.service.Service,org.apache.cxf.service.model.EndpointInfo)"
        ]
    },
    "org.apache.cxf.binding.soap.SoapBindingFactory:void addMessageFromBinding(javax.wsdl.extensions.ExtensibilityElement,org.apache.cxf.service.model.BindingOperationInfo,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.AbstractBindingFactory:void copyExtensors(org.apache.cxf.service.model.AbstractPropertiesHolder,javax.wsdl.extensions.ElementExtensible,org.apache.cxf.service.model.BindingOperationInfo)"
        ]
    },
    "org.apache.cxf.binding.soap.SoapBindingFactory:void initializeBindingOperation(org.apache.cxf.binding.soap.model.SoapBindingInfo,org.apache.cxf.service.model.BindingOperationInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.soap.SoapBindingFactory:org.apache.cxf.service.model.BindingInfo createBindingInfo(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding,java.lang.String)"
        ]
    },
    "org.apache.cxf.binding.soap.interceptor.ReadHeadersInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.binding.soap.interceptor.Soap12FaultOutInterceptor$Soap12FaultOutInterceptorInternal:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.binding.soap.interceptor.SoapActionInInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.soap.interceptor.SoapActionInInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.binding.soap.interceptor.SoapHeaderOutFilterInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.binding.soap.interceptor.MustUnderstandInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.soap.interceptor.MustUnderstandInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.binding.soap.interceptor.Soap11FaultOutInterceptor$Soap11FaultOutInterceptorInternal:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.AbstractEndpointSelectionInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.binding.soap.interceptor.MustUnderstandInterceptor$UltimateReceiverMustUnderstandInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.binding.soap.HeaderUtil:java.util.Set getHeaderParts(org.apache.cxf.service.model.BindingMessageInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.soap.HeaderUtil:java.util.Set getHeaderQNameInOperationParam(org.apache.cxf.binding.soap.SoapMessage)"
        ]
    },
    "org.apache.cxf.binding.soap.interceptor.SoapHeaderInterceptor:org.apache.cxf.headers.Header findHeader(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.service.model.MessagePartInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.soap.interceptor.SoapHeaderInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.binding.soap.saaj.SAAJInInterceptor:void replaceHeaders(javax.xml.soap.SOAPMessage,org.apache.cxf.binding.soap.SoapMessage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.soap.saaj.SAAJInInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)"
        ]
    },
    "org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor:javax.xml.soap.SOAPMessage getSOAPMessage(org.apache.cxf.binding.soap.SoapMessage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)"
        ]
    },
    "org.apache.cxf.binding.soap.saaj.SAAJInInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxws.handler.soap.SOAPMessageContextImpl:javax.xml.soap.SOAPMessage getMessage()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.handler.soap.SOAPMessageContextImpl:java.lang.Object[] getHeaders(javax.xml.namespace.QName,javax.xml.bind.JAXBContext,boolean)",
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerInterceptor:void handleAbort(org.apache.cxf.binding.soap.SoapMessage,javax.xml.ws.handler.MessageContext)",
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerInterceptor:javax.xml.ws.handler.MessageContext createProtocolMessageContext(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerInterceptor:javax.xml.namespace.QName getOpQName(org.apache.cxf.message.Exchange,java.lang.Object)"
        ]
    },
    "org.apache.cxf.binding.soap.saaj.SAAJOutInterceptor$SAAJOutEndingInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.binding.xml.XMLFormatValidator:boolean isValid()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.clustering.FailoverTargetSelector:org.apache.cxf.endpoint.Endpoint getFailoverTarget(org.apache.cxf.message.Exchange,org.apache.cxf.clustering.FailoverTargetSelector$InvocationContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.clustering.FailoverTargetSelector:void complete(org.apache.cxf.message.Exchange)"
        ]
    },
    "org.apache.cxf.tools.common.Tag:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:java.util.List enumeratorValues(org.apache.ws.commons.schema.XmlSchemaSimpleType)",
            "org.apache.cxf.common.logging.Log4jLogger$HandlerWrapper:void append(org.apache.log4j.spi.LoggingEvent)",
            "org.apache.cxf.common.util.PackageUtils:java.lang.String combine(java.util.List,char)",
            "org.apache.cxf.configuration.spring.SpringBeanMap:void processBeans(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.message.MessageUtils:boolean isTrue(java.lang.Object)",
            "org.apache.cxf.endpoint.ClientImpl:boolean isThreadLocalRequestContext()",
            "org.apache.cxf.ws.addressing.ContextUtils:java.lang.String getAction(org.apache.cxf.service.model.Extensible)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationOutInterceptor:void renewToken(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.ws.security.tokenstore.SecurityToken,org.apache.cxf.ws.security.policy.model.SecureConversationToken)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.policy.interceptors.IssuedTokenInterceptorProvider$IssuedTokenOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationTokenInterceptorProvider:java.lang.String setupClient(org.apache.cxf.ws.security.trust.STSClient,org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.ws.security.policy.model.SecureConversationToken,boolean)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:java.lang.String checkAsymetricBinding(org.apache.cxf.ws.policy.AssertionInfoMap,java.lang.String,org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:java.lang.String checkSymetricBinding(org.apache.cxf.ws.policy.AssertionInfoMap,java.lang.String,org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.wsdl.AbstractWSDLPlugin:java.lang.String getOption(java.util.Map,java.lang.String)",
            "org.apache.cxf.tools.common.toolspec.parser.ErrorVisitor:java.lang.String toString()",
            "org.apache.cxf.tools.common.ProcessorTestBase:void assertTagEquals(org.apache.cxf.tools.common.Tag,org.apache.cxf.tools.common.Tag,java.util.List,java.util.List)",
            "org.apache.cxf.tools.util.URIParserUtil:java.lang.String combine(java.util.List,char)",
            "org.apache.cxf.aegis.xml.jdom.JDOMWriter:void writeValue(java.lang.Object)",
            "org.apache.cxf.aegis.xml.jdom.JDOMWriter:void writeValue(java.lang.Object,java.lang.String,java.lang.String)",
            "org.apache.cxf.aegis.xml.jdom.AttributeWriter:void writeValue(java.lang.Object)",
            "org.apache.cxf.aegis.xml.stax.AttributeWriter:void writeValue(java.lang.Object)",
            "org.apache.cxf.aegis.xml.stax.ElementWriter:void writeValue(java.lang.Object)",
            "org.apache.cxf.aegis.type.basic.BigIntegerType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.BigDecimalType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.jaxws.EndpointImpl:void checkProperties()",
            "org.apache.cxf.xmlbeans.tools.XMLBeansToolingDataBinding:void initialize(org.apache.cxf.tools.common.ToolContext)"
        ]
    },
    "org.apache.cxf.ws.policy.builder.jaxb.JaxbAssertion:boolean equal(org.apache.neethi.PolicyComponent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.builder.primitive.PrimitiveAssertion:boolean isAsserted(org.apache.cxf.ws.policy.AssertionInfoMap)",
            "org.apache.cxf.ws.policy.builder.jaxb.JaxbAssertionBuilder:org.apache.cxf.ws.policy.PolicyAssertion buildCompatible(org.apache.cxf.ws.policy.PolicyAssertion,org.apache.cxf.ws.policy.PolicyAssertion)",
            "org.apache.cxf.ws.policy.util.PolicyComparator:boolean compare(org.apache.neethi.Assertion,org.apache.neethi.Assertion)",
            "org.apache.cxf.ws.policy.PolicyUtils:boolean contains(java.util.Collection,org.apache.neethi.Assertion)"
        ]
    },
    "org.apache.cxf.service.model.AbstractPropertiesHolder:boolean equals(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.model.BindingOperationInfo:boolean equals(java.lang.Object)",
            "org.apache.cxf.service.model.FaultInfo:boolean equals(java.lang.Object)",
            "org.apache.cxf.service.model.MessagePartInfo:boolean equals(java.lang.Object)",
            "org.apache.cxf.service.model.AbstractMessageContainer:boolean equals(java.lang.Object)",
            "org.apache.cxf.service.model.OperationInfo:boolean equals(java.lang.Object)"
        ]
    },
    "org.apache.cxf.aegis.type.java5.AnnotationReader:java.lang.Object getAnnotationValue(java.lang.String,java.lang.reflect.AnnotatedElement,java.lang.Object,java.lang.Class[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.java5.AnnotationReader:boolean isNillable(java.lang.reflect.AnnotatedElement)",
            "org.apache.cxf.aegis.type.java5.AnnotationReader:java.lang.Class getType(java.lang.reflect.AnnotatedElement)",
            "org.apache.cxf.aegis.type.java5.AnnotationReader:java.lang.Class getReturnType(java.lang.reflect.AnnotatedElement)",
            "org.apache.cxf.aegis.type.java5.AnnotationReader:java.lang.String getName(java.lang.reflect.AnnotatedElement)",
            "org.apache.cxf.aegis.type.java5.AnnotationReader:java.lang.String getReturnName(java.lang.reflect.AnnotatedElement)",
            "org.apache.cxf.aegis.type.java5.AnnotationReader:java.lang.String getNamespace(java.lang.reflect.AnnotatedElement)",
            "org.apache.cxf.aegis.type.java5.AnnotationReader:java.lang.String getReturnNamespace(java.lang.reflect.AnnotatedElement)",
            "org.apache.cxf.aegis.type.java5.AnnotationReader:int getMinOccurs(java.lang.reflect.AnnotatedElement)",
            "org.apache.cxf.aegis.type.java5.AnnotationReader:boolean isExtensibleElements(java.lang.reflect.AnnotatedElement,boolean)",
            "org.apache.cxf.aegis.type.java5.AnnotationReader:boolean isExtensibleAttributes(java.lang.reflect.AnnotatedElement,boolean)"
        ]
    },
    "org.apache.cxf.aegis.type.java5.AnnotationReader:java.lang.Object getAnnotationValue(java.lang.String,java.lang.reflect.Method,int,java.lang.Object,java.lang.Class[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.java5.AnnotationReader:java.lang.Class getParamType(java.lang.reflect.Method,int)",
            "org.apache.cxf.aegis.type.java5.AnnotationReader:java.lang.String getParamName(java.lang.reflect.Method,int)",
            "org.apache.cxf.aegis.type.java5.AnnotationReader:java.lang.String getParamNamespace(java.lang.reflect.Method,int)"
        ]
    },
    "org.apache.cxf.tools.common.AbstractCXFToolContainer:java.util.Map getParametersMap(java.util.Set)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.tools.common.toolspec.parser.CommandDocument:boolean hasParameter(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.tools.common.AbstractCXFToolContainer:boolean hasInfoOption()",
            "org.apache.cxf.tools.common.AbstractCXFToolContainer:void execute(boolean)",
            "org.apache.cxf.tools.common.AbstractCXFToolContainer:void outputInfo()",
            "org.apache.cxf.tools.common.AbstractCXFToolContainer:void checkParams(org.apache.cxf.tools.common.toolspec.parser.ErrorVisitor)"
        ]
    },
    "org.apache.cxf.tools.common.toolspec.parser.CommandDocument:java.lang.String getParameter(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.tools.common.AbstractCXFToolContainer:void checkParams(org.apache.cxf.tools.common.toolspec.parser.ErrorVisitor)",
            "org.apache.cxf.tools.common.AbstractCXFToolContainer:java.util.Map getParametersMap(java.util.Set)"
        ]
    },
    "org.apache.cxf.tools.common.toolspec.parser.Form:boolean accept(org.apache.cxf.tools.common.toolspec.parser.TokenInputStream,org.w3c.dom.Element,org.apache.cxf.tools.common.toolspec.parser.ErrorVisitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.tools.common.toolspec.parser.CommandLineParser:org.apache.cxf.tools.common.toolspec.parser.CommandDocument parseArguments(java.lang.String[])"
        ]
    },
    "org.apache.cxf.tools.common.toolspec.parser.BadUsageException:java.lang.String getMessage()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.JAXBEncoderDecoder:void marshall(javax.xml.bind.Marshaller,java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,java.lang.Object)",
            "org.apache.cxf.jaxb.JAXBEncoderDecoder:void marshalWithBridge(javax.xml.namespace.QName,java.lang.Class,java.lang.'annotation'.Annotation[],java.util.Set,java.lang.Object,java.lang.Object,javax.xml.bind.attachment.AttachmentMarshaller)",
            "org.apache.cxf.jaxb.JAXBEncoderDecoder:java.lang.Object unmarshalWithBridge(javax.xml.namespace.QName,java.lang.Class,java.lang.'annotation'.Annotation[],java.util.Set,java.lang.Object,javax.xml.bind.attachment.AttachmentUnmarshaller)",
            "org.apache.cxf.jaxb.JAXBEncoderDecoder:void marshallException(javax.xml.bind.Marshaller,java.lang.Exception,org.apache.cxf.service.model.MessagePartInfo,java.lang.Object)",
            "org.apache.cxf.jaxb.JAXBEncoderDecoder:java.lang.Exception unmarshallException(javax.xml.bind.Unmarshaller,java.lang.Object,org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.jaxb.JAXBEncoderDecoder:java.lang.Object unmarshall(javax.xml.bind.Unmarshaller,java.lang.Object,javax.xml.namespace.QName,java.lang.Class,boolean)",
            "org.apache.cxf.jaxb.JAXBEncoderDecoder:java.util.List unmarshallArray(javax.xml.bind.Unmarshaller,java.lang.Object,javax.xml.namespace.QName,java.lang.Class,java.util.List)",
            "org.apache.cxf.jaxb.io.DataWriterImpl:javax.xml.bind.Marshaller createMarshaller(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.jaxb.io.DataReaderImpl:javax.xml.bind.Unmarshaller createUnmarshaller()",
            "org.apache.cxf.interceptor.Fault:void <init>(java.lang.Throwable)",
            "org.apache.cxf.interceptor.Fault:void <init>(java.lang.Throwable,javax.xml.namespace.QName)",
            "org.apache.cxf.interceptor.ClientFaultConverter:void processFaultDetail(org.apache.cxf.interceptor.Fault,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.FaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.https.SSLUtils:javax.net.ssl.KeyManager[] loadKeyStore(javax.net.ssl.KeyManagerFactory,java.security.KeyStore,java.io.ByteArrayInputStream,java.lang.String,java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.transport.https.SSLUtils:javax.net.ssl.TrustManager[] getTrustStoreManagers(boolean,java.lang.String,java.lang.String,java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void activate()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void doService(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine:void addServant(java.net.URL,org.apache.cxf.transport.http_jetty.JettyHTTPHandler)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine:void removeServant(java.net.URL)",
            "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:org.apache.cxf.endpoint.Client createClient(java.lang.String,javax.xml.namespace.QName,java.lang.ClassLoader,javax.xml.namespace.QName,java.util.List)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void policyNotAsserted(org.apache.cxf.ws.policy.PolicyAssertion,java.lang.Exception)",
            "org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor:javax.security.auth.callback.CallbackHandler getCallback(org.apache.ws.security.handler.RequestData,int)",
            "org.apache.cxf.service.invoker.AbstractInvoker:org.apache.cxf.interceptor.Fault createFault(java.lang.Throwable,java.lang.reflect.Method,java.util.List,boolean)",
            "org.apache.cxf.tools.common.AbstractCXFToolContainer:void printUsageException(java.lang.String,org.apache.cxf.tools.common.toolspec.parser.BadUsageException)",
            "org.apache.cxf.tools.util.URLFactory:java.net.URLStreamHandler findHandler(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void parseWSDL(java.lang.String)",
            "org.apache.cxf.aegis.DatabindingException:java.lang.String getMessage()",
            "org.apache.cxf.aegis.type.basic.BeanType:void writeProperty(javax.xml.namespace.QName,java.lang.Object,java.lang.Object,java.lang.Class,org.apache.cxf.aegis.type.basic.BeanTypeInfo)",
            "org.apache.cxf.jaxws.handler.HandlerChainInvoker:void setFaultMessage(javax.xml.ws.handler.MessageContext,java.lang.Exception)",
            "org.apache.cxf.jaxws.support.ServiceDelegateAccessor:org.apache.cxf.jaxws.ServiceImpl get(javax.xml.ws.Service)",
            "org.apache.cxf.jaxws.JaxWsClientProxy:javax.xml.soap.SOAPFault createSoapFault(javax.xml.ws.soap.SOAPBinding,java.lang.Exception)",
            "org.apache.cxf.jaxws.interceptors.WebFaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.xmlbeans.tools.XMLBeansToolingDataBinding:org.apache.xmlbeans.SchemaTypeSystem loadTypeSystem(java.lang.String,java.lang.String[],java.util.Set,java.io.File,java.io.File,org.xml.sax.EntityResolver)"
        ]
    },
    "org.apache.cxf.tools.common.toolspec.parser.CommandLineParser:org.apache.cxf.tools.common.toolspec.parser.CommandDocument parseArguments(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.tools.common.toolspec.AbstractToolContainer:void parseCommandLine()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.tools.common.model.JAnnotation:void addElement(org.apache.cxf.tools.common.model.JAnnotationElement)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.tools.common.model.JavaInterface:boolean hasMethod(org.apache.cxf.tools.common.model.JavaMethod)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.tools.common.model.JavaInterface:void addMethod(org.apache.cxf.tools.common.model.JavaMethod)"
        ]
    },
    "org.apache.cxf.tools.common.model.JavaInterface:int indexOf(org.apache.cxf.tools.common.model.JavaMethod)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.tools.common.model.JavaInterface:int removeMethod(org.apache.cxf.tools.common.model.JavaMethod)"
        ]
    },
    "org.apache.cxf.tools.common.model.JavaMethod:java.util.List getParameterList()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.tools.common.model.JavaMethod:java.lang.String toString()"
        ]
    },
    "org.apache.cxf.tools.common.model.JavaMethod:java.util.List getParameterListWithoutAnnotation()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.spring.BusApplicationListener:void onApplicationEvent(org.springframework.context.ApplicationEvent)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.extension.ExtensionManagerBus:void <init>(java.util.Map,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void <init>()",
            "org.apache.cxf.bus.CXFBusFactory:org.apache.cxf.Bus createBus(java.util.Map,java.util.Map)"
        ]
    },
    "org.apache.cxf.bus.CXFBusFactory:void initializeBus(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.CXFBusFactory:org.apache.cxf.Bus createBus(java.util.Map,java.util.Map)"
        ]
    },
    "org.apache.cxf.bus.CXFBusImpl:void shutdown(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.servlet.AbstractCXFServlet:void destroy()",
            "org.apache.cxf.bus.ManagedBus:void shutdown(boolean)"
        ]
    },
    "org.apache.cxf.wsdl11.SchemaUtil:void getSchemas(javax.wsdl.Definition,org.apache.cxf.common.xmlschema.SchemaCollection,org.apache.cxf.service.model.ServiceInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.SchemaUtil:void getSchemas(javax.wsdl.Definition,org.apache.cxf.service.model.ServiceInfo)"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:javax.wsdl.Definition build(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:java.lang.Object build(java.lang.String)"
        ]
    },
    "org.apache.cxf.wsdl11.ServiceWSDLBuilder:javax.wsdl.Definition build()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.WSDLQueryHandler:void writeResponse(java.lang.String,java.lang.String,org.apache.cxf.service.model.EndpointInfo,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBindingInput(javax.wsdl.Definition,javax.wsdl.BindingOperation,org.apache.cxf.service.model.BindingMessageInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBindingOperation(javax.wsdl.Definition,javax.wsdl.Binding,java.util.Collection)"
        ]
    },
    "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBindingOutput(javax.wsdl.Definition,javax.wsdl.BindingOperation,org.apache.cxf.service.model.BindingMessageInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBindingOperation(javax.wsdl.Definition,javax.wsdl.Binding,java.util.Collection)"
        ]
    },
    "org.apache.cxf.wsdl11.ServiceWSDLBuilder:javax.wsdl.PortType buildPortType(org.apache.cxf.service.model.InterfaceInfo,javax.wsdl.Definition)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:javax.wsdl.Definition build(java.util.Map)"
        ]
    },
    "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addNamespace(java.lang.String,javax.wsdl.Definition)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:javax.wsdl.PortType buildPortType(org.apache.cxf.service.model.InterfaceInfo,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildPortTypeOperation(javax.wsdl.PortType,java.util.Collection,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildMessage(javax.wsdl.Message,org.apache.cxf.service.model.AbstractMessageContainer,javax.wsdl.Definition)"
        ]
    },
    "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addNamespace(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addExtensibilityElements(javax.wsdl.extensions.ElementExtensible,java.util.List)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addExtensibilityAttributes(javax.wsdl.extensions.AttributeExtensible,java.util.Map)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildService(org.apache.cxf.service.model.ServiceInfo)"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.ServiceInfo buildMockService(javax.wsdl.Definition,javax.wsdl.PortType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildMockServices(javax.wsdl.Definition)"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition,javax.xml.namespace.QName,javax.xml.namespace.QName,org.apache.cxf.service.model.DescriptionInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition,javax.xml.namespace.QName)"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition,javax.wsdl.Service)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition,javax.wsdl.Service,javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLServiceFactory:org.apache.cxf.service.Service create()"
        ]
    },
    "org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor:void postProcessBeanFactory(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor:void updateBusReferencesInContext(org.apache.cxf.Bus,org.springframework.context.ApplicationContext)"
        ]
    },
    "org.apache.cxf.bus.extension.DeferredMap:java.lang.Object get(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.MapNamespaceContext:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.helpers.HttpHeaderHelper:java.util.List getHeader(java.util.Map,java.lang.String)",
            "org.apache.cxf.helpers.HttpHeaderHelper:java.lang.String getHeaderKey(java.lang.String)",
            "org.apache.cxf.helpers.HttpHeaderHelper:java.lang.String mapCharset(java.lang.String)",
            "org.apache.cxf.helpers.XMLUtils:javax.xml.transform.TransformerFactory getTransformerFactory()",
            "org.apache.cxf.helpers.XMLUtils:javax.xml.parsers.DocumentBuilderFactory getDocumentBuilderFactory()",
            "org.apache.cxf.helpers.XMLUtils:javax.xml.namespace.QName getNamespace(java.util.Map,java.lang.String,java.lang.String)",
            "org.apache.cxf.common.xmlschema.FixedExtensionDeserializer:void deserialize(org.apache.ws.commons.schema.XmlSchemaObject,javax.xml.namespace.QName,org.w3c.dom.Node)",
            "org.apache.cxf.common.logging.Log4jLogger:void setLevel(java.util.logging.Level)",
            "org.apache.cxf.common.logging.Log4jLogger:void internalLogFormatted(java.lang.String,java.util.logging.LogRecord)",
            "org.apache.cxf.common.logging.Log4jLogger$HandlerWrapper:org.apache.log4j.Priority getThreshold()",
            "org.apache.cxf.common.util.ClassReader:void readAttributes()",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.common.util.ASMHelper:java.lang.String getClassCode(java.lang.Class)",
            "org.apache.cxf.common.util.ASMHelper:org.apache.cxf.common.util.ASMHelper$TypeHelperClassLoader getTypeHelperClassLoader(java.lang.Class)",
            "org.apache.cxf.common.util.ASMHelper$TypeHelperClassLoader:java.lang.Class lookupDefinedClass(java.lang.String)",
            "org.apache.cxf.common.util.CacheMap:void updateMainDataMap()",
            "org.apache.cxf.common.util.CacheMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.common.util.ParamReader:java.lang.String[] getParameterNames(java.lang.reflect.Member,java.lang.Class[])",
            "org.apache.cxf.common.util.ParamReader:org.apache.cxf.common.util.ParamReader$MethodInfo getMethodInfo()",
            "org.apache.cxf.common.util.TwoStageMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.resource.PropertiesResolver:java.lang.Object resolve(java.lang.String,java.lang.Class)",
            "org.apache.cxf.resource.URIResolver:void tryRemote(java.lang.String)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.util.List getBeanListForId(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void mapElementToJaxbProperty(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder,java.lang.String,java.lang.Class)",
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:java.lang.Object unmarshalFactoryString(java.lang.String,java.lang.Class)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void initWildcardDefinitionMap()",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureWithWildCard(java.lang.String,java.lang.Object)",
            "org.apache.cxf.jaxb.NamespaceMapper:java.lang.String getPreferredPrefix(java.lang.String,java.lang.String,boolean)",
            "org.apache.cxf.jaxb.JAXBUtils:java.lang.String builtInTypeToJavaType(java.lang.String)",
            "org.apache.cxf.jaxb.JAXBUtils:java.lang.Class holderClass(java.lang.String)",
            "org.apache.cxf.jaxb.JAXBDataBinding:org.apache.cxf.jaxb.JAXBDataBinding$CachedContextAndSchemas createJAXBContextAndSchemas(java.util.Set,java.lang.String)",
            "org.apache.cxf.jaxb.JAXBDataBinding:void scanPackages(java.util.Set)",
            "org.apache.cxf.jaxb.JAXBDataBinding$1:javax.xml.transform.Result createOutput(java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxb.WrapperHelperCompiler:boolean addCreateWrapperObject(java.lang.String,java.lang.Class)",
            "org.apache.cxf.jaxb.WrapperHelperCompiler:void createObjectWrapper(org.objectweb.asm.MethodVisitor,java.lang.Class)",
            "org.apache.cxf.management.counters.CounterRepository:org.apache.cxf.management.counters.Counter getCounter(javax.management.ObjectName)",
            "org.apache.cxf.staxutils.AbstractDOMStreamReader:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.staxutils.W3CDOMStreamWriter:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.message.MessageImpl:java.lang.Object getContent(java.lang.Class)",
            "org.apache.cxf.headers.HeaderManagerImpl:org.apache.cxf.headers.HeaderProcessor getHeaderProcessor(java.lang.String)",
            "org.apache.cxf.interceptor.StaxOutInterceptor:javax.xml.stream.XMLOutputFactory getXMLOutputFactory(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.util.Map keepInOrder(java.util.Map,org.apache.cxf.service.model.OperationInfo,java.util.List)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:org.apache.cxf.message.MessageContentsList getParameters(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.interceptor.ClientOutFaultObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxInInterceptor:javax.xml.stream.XMLInputFactory getXMLInputFactory(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.FIStaxOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.ConduitInitiatorManagerImpl:org.apache.cxf.transport.ConduitInitiator getConduitInitiator(java.lang.String)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void writeResponse(java.lang.String,java.lang.String,org.apache.cxf.service.model.EndpointInfo,java.io.OutputStream)",
            "org.apache.cxf.transport.http.DigestAuthSupplier:java.lang.String getPreemptiveAuthorization(org.apache.cxf.transport.http.HTTPConduit,java.net.URL,org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:void transferProtocolHeadersToURLConnection(org.apache.cxf.message.Message,java.net.URLConnection)",
            "org.apache.cxf.transport.http.HTTPConduit:void logProtocolHeaders(java.util.logging.Level,org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:java.lang.String extractAuthorizationRealm(java.util.Map)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void copyRequestHeaders(org.apache.cxf.message.Message,java.util.Map)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void copyResponseHeaders(org.apache.cxf.message.Message,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:java.lang.String getId(java.util.Map)",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponseInternal()",
            "org.apache.cxf.transport.http.gzip.GZIPOutInterceptor:void addHeader(org.apache.cxf.message.Message,java.lang.String,java.lang.String)",
            "org.apache.cxf.transport.AbstractMultiplexDestination:java.lang.String getId(java.util.Map)",
            "org.apache.cxf.transport.DestinationFactoryManagerImpl:org.apache.cxf.transport.DestinationFactory getDestinationFactory(java.lang.String)",
            "org.apache.cxf.transport.servlet.ServletContextResourceResolver:java.io.InputStream getAsStream(java.lang.String)",
            "org.apache.cxf.transport.servlet.ServletContextResourceResolver:java.lang.Object resolve(java.lang.String,java.lang.Class)",
            "org.apache.cxf.transport.servlet.ServletTransportFactory:org.apache.cxf.transport.servlet.ServletDestination getDestinationForPath(java.lang.String)",
            "org.apache.cxf.transport.servlet.AbstractCXFServlet:void init(javax.servlet.ServletConfig)",
            "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser$SpringJettyHTTPServerEngine:void finalizeConfig()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPTransportFactory:org.apache.cxf.transport.Destination getDestination(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPTransportFactory:org.apache.cxf.transport.http_jetty.JettyHTTPDestination createDestination(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine retrieveJettyHTTPServerEngine(int)",
            "org.apache.cxf.transport.jms.JMSUtils:void addContentTypeToProtocolHeader(org.apache.cxf.message.Message)",
            "org.apache.cxf.NSManager:java.lang.String getPrefixFromNS(java.lang.String)",
            "org.apache.cxf.extension.RegistryImpl:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.endpoint.ClientImpl:java.util.Map getRequestContext()",
            "org.apache.cxf.endpoint.ClientImpl:java.util.Map getResponseContext()",
            "org.apache.cxf.endpoint.ClientImpl:boolean isThreadLocalRequestContext()",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.ClientImpl:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.addressing.ContextUtils:java.lang.String getActionFromServiceModel(org.apache.cxf.message.Message,java.lang.Exception)",
            "org.apache.cxf.ws.addressing.ContextUtils:java.lang.String getAction(org.apache.cxf.service.model.Extensible)",
            "org.apache.cxf.ws.addressing.MAPAggregator:boolean validateIncomingMAPs(org.apache.cxf.ws.addressing.AddressingProperties,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void propogateAction(org.apache.cxf.ws.addressing.AttributedURIType,org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void restoreExchange(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.addressing.AddressingProperties)",
            "org.apache.cxf.ws.policy.PolicyRegistryImpl:org.apache.neethi.Policy lookup(java.lang.String)",
            "org.apache.cxf.ws.security.policy.interceptors.HttpsTokenInterceptorProvider$HttpsTokenInInterceptor:void assertHttps(java.util.Collection,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.policy.interceptors.HttpsTokenInterceptorProvider$HttpsTokenOutInterceptor:void assertHttps(java.util.Collection,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.trust.STSClient:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:org.apache.cxf.ws.security.tokenstore.SecurityToken getToken(java.lang.String)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:org.apache.ws.security.components.crypto.Crypto getCrypto(org.apache.cxf.ws.security.policy.model.TokenWrapper,java.lang.String,java.lang.String)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:java.util.Properties getProps(java.lang.Object,org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor:void <init>(java.util.Map)",
            "org.apache.cxf.ws.security.wss4j.AbstractWSS4JInterceptor:java.lang.Object getOption(java.lang.String)",
            "org.apache.cxf.ws.security.wss4j.AbstractWSS4JInterceptor:org.apache.ws.security.components.crypto.Crypto loadSignatureCrypto(org.apache.ws.security.handler.RequestData)",
            "org.apache.cxf.ws.security.wss4j.AbstractWSS4JInterceptor:org.apache.ws.security.components.crypto.Crypto loadDecryptionCrypto(org.apache.ws.security.handler.RequestData)",
            "org.apache.cxf.ws.security.wss4j.AbstractWSS4JInterceptor:org.apache.ws.security.components.crypto.Crypto loadEncryptionCrypto(org.apache.ws.security.handler.RequestData)",
            "org.apache.cxf.ws.rm.Source:org.apache.cxf.ws.rm.SourceSequence getSequence(org.apache.cxf.ws.rm.Identifier)",
            "org.apache.cxf.ws.rm.Source:org.apache.cxf.ws.rm.SourceSequence getAssociatedSequence(org.apache.cxf.ws.rm.Identifier)",
            "org.apache.cxf.ws.rm.RMOutInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.Destination:org.apache.cxf.ws.rm.DestinationSequence getSequence(org.apache.cxf.ws.rm.Identifier)",
            "org.apache.cxf.ws.rm.RMManager:org.apache.cxf.ws.rm.RMEndpoint getReliableEndpoint(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.RMManager:void shutdownReliableEndpoint(org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl:java.util.List getSequenceCandidates(java.lang.String)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void add(org.apache.cxf.interceptor.Interceptor,boolean)",
            "org.apache.cxf.workqueue.WorkQueueManagerImpl:org.apache.cxf.workqueue.AutomaticWorkQueue getNamedWorkQueue(java.lang.String)",
            "org.apache.cxf.databinding.AbstractDataBinding:void updateSchemaLocation(org.w3c.dom.Element)",
            "org.apache.cxf.databinding.source.mime.MimeSerializer:void serialize(org.apache.ws.commons.schema.XmlSchemaObject,java.lang.Class,org.w3c.dom.Node)",
            "org.apache.cxf.wsdl.AbstractWSDLPlugin:java.lang.String getOption(java.util.Map,java.lang.String)",
            "org.apache.cxf.wsdl.AbstractWSDLPlugin:java.lang.Object getOption(java.util.Map,java.lang.String,java.lang.Class)",
            "org.apache.cxf.wsdl.AbstractWSDLPlugin:java.lang.Object getOption(java.util.Map,java.lang.Class)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:int getIndentLevel(java.lang.Class)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:java.lang.String getWSDLLocation(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:java.lang.String getEndpointReferenceId(java.util.Map)",
            "org.apache.cxf.service.model.BindingOperationInfo:org.apache.cxf.service.model.BindingFaultInfo getFault(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.AbstractMessageContainer:void addMessagePart(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePart(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:java.lang.Object getExtensionAttribute(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperationForWrapperElement(org.apache.cxf.message.Exchange,javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.service.model.InterfaceInfo:org.apache.cxf.service.model.OperationInfo getOperation(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.MessageInfo getMessage(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.MessageInfo:java.util.List getOrderedParts(java.util.List)",
            "org.apache.cxf.service.model.BindingInfo:org.apache.cxf.service.model.BindingOperationInfo getOperation(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.OperationInfo:org.apache.cxf.service.model.FaultInfo getFault(javax.xml.namespace.QName)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void addImport(org.apache.ws.commons.schema.XmlSchema,java.lang.String)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isWrapped(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isRPC(java.lang.reflect.Method)",
            "org.apache.cxf.binding.BindingFactoryManagerImpl:org.apache.cxf.binding.BindingFactory getBindingFactory(java.lang.String)",
            "org.apache.cxf.binding.soap.interceptor.SoapActionInInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.SoapVersionFactory:org.apache.cxf.binding.soap.SoapVersion getSoapVersion(java.lang.String)",
            "org.apache.cxf.clustering.AbstractStaticFailoverStrategy:java.util.List getAlternateEndpoints(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.clustering.FailoverTargetSelector:void complete(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.clustering.FailoverTargetSelector:void overrideAddressProperty(java.util.Map)",
            "org.apache.cxf.tools.common.Tag:boolean equals(java.lang.Object)",
            "org.apache.cxf.tools.common.ToolContext:void addParameters(java.util.Map)",
            "org.apache.cxf.tools.common.ToolContext:java.lang.Object get(java.lang.String)",
            "org.apache.cxf.tools.common.ToolContext:java.lang.String mapNamespaceToPackageName(java.lang.String)",
            "org.apache.cxf.tools.common.ToolContext:java.lang.String getExcludePackageName(java.lang.String)",
            "org.apache.cxf.tools.common.VelocityGenerator:void doWrite(java.lang.String,java.io.Writer)",
            "org.apache.cxf.tools.common.ProcessorTestBase:boolean assertXmlEquals(java.io.File,java.io.File,java.util.List)",
            "org.apache.cxf.tools.common.ProcessorTestBase:void assertAttributesEquals(javax.xml.namespace.QName,java.util.Map,java.util.Map,java.util.Collection)",
            "org.apache.cxf.tools.common.model.JavaType:java.lang.String getDefaultTypeValue()",
            "org.apache.cxf.tools.common.model.JavaMethod:boolean isEquiv(java.lang.String,java.lang.String)",
            "org.apache.cxf.tools.common.model.JavaParameter:org.apache.cxf.tools.common.model.JAnnotation getAnnotation(java.lang.String)",
            "org.apache.cxf.tools.util.BuiltInTypesJavaMappingUtil:java.lang.String getJType(java.lang.String,java.lang.String)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:java.lang.String getBindingAnnotation(java.lang.String)",
            "org.apache.cxf.tools.util.PropertyUtil:java.lang.String getProperty(java.lang.String)",
            "org.apache.cxf.tools.util.ClassCollector:java.lang.String getTypesFullClassName(java.lang.String,java.lang.String)",
            "org.apache.cxf.wsdl11.SchemaUtil:void extractSchema(javax.wsdl.Definition,org.apache.cxf.common.xmlschema.SchemaCollection,java.util.List)",
            "org.apache.cxf.wsdl11.SchemaUtil:void addSchema(java.lang.String,javax.wsdl.extensions.schema.Schema)",
            "org.apache.cxf.wsdl11.SchemaUtil:boolean isSchemaParsed(java.lang.String,java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:java.util.Collection getImports(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addExtensibilityAttributes(javax.wsdl.extensions.AttributeExtensible,java.util.Map)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(java.net.URL)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(org.w3c.dom.Element)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:org.apache.cxf.service.model.ServiceSchemaInfo getSchemasForDefinition(javax.wsdl.Definition)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void activateViaNS(java.lang.String)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void processExtension(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadAndRegister(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:java.lang.Object getExtension(java.lang.String,java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void <init>(java.util.Map,java.util.Map)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:java.lang.String getBusId(java.util.Map)",
            "org.apache.cxf.bus.CXFBusImpl:java.lang.Object getExtension(java.lang.Class)",
            "org.apache.cxf.attachment.AttachmentImpl:java.lang.String getHeader(java.lang.String)",
            "org.apache.cxf.frontend.ClientFactoryBean:void applyExtraClass()",
            "org.apache.cxf.frontend.ClientFactoryBean:void applyProperties(org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.frontend.SimpleMethodDispatcher:org.apache.cxf.service.model.BindingOperationInfo getBindingOperation(java.lang.reflect.Method,org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.frontend.SimpleMethodDispatcher:java.lang.reflect.Method getMethod(org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.frontend.SimpleMethodDispatcher:java.lang.reflect.Method getPrimaryMethod(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory:org.apache.cxf.endpoint.Endpoint createEndpoint()",
            "org.apache.cxf.frontend.ServerFactoryBean:void applyExtraClass()",
            "org.apache.cxf.aegis.Context:java.lang.Object getProperty(java.lang.Class)",
            "org.apache.cxf.aegis.util.jdom.StaxBuilder:void buildTree(org.jdom.JDOMFactory,javax.xml.stream.XMLStreamReader,org.jdom.Document)",
            "org.apache.cxf.aegis.util.jdom.StaxBuilder:int resolveAttrType(java.lang.String)",
            "org.apache.cxf.aegis.util.stax.JDOMStreamWriter:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.aegis.util.stax.JDOMStreamReader:java.lang.String getDeclaredURI(java.lang.String)",
            "org.apache.cxf.aegis.databinding.XMLStreamDataWriter:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.aegis.databinding.ElementDataWriter:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:org.apache.cxf.aegis.type.Type getType(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.aegis.type.basic.XMLBeanTypeInfo:org.apache.cxf.aegis.type.basic.BeanTypePropertyInfo getPropertyInfo(javax.xml.namespace.QName)",
            "org.apache.cxf.aegis.type.basic.BeanType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.InterfaceInvocationHandler:java.lang.Object readProperty(java.lang.Object)",
            "org.apache.cxf.aegis.type.basic.BeanTypeInfo:org.apache.cxf.aegis.type.Type getType(javax.xml.namespace.QName)",
            "org.apache.cxf.aegis.type.basic.BeanTypeInfo:javax.xml.namespace.QName getMappedTypeName(javax.xml.namespace.QName)",
            "org.apache.cxf.aegis.type.basic.BeanTypeInfo:java.lang.String getPropertyNameFromMappedName(javax.xml.namespace.QName)",
            "org.apache.cxf.aegis.type.encoded.MarshalRegistry:java.lang.String getInstanceId(java.lang.Object)",
            "org.apache.cxf.aegis.type.XMLTypeCreator:org.w3c.dom.Document getDocument(java.lang.Class)",
            "org.apache.cxf.aegis.type.DefaultTypeMapping:org.apache.cxf.aegis.type.Type getType(java.lang.Class)",
            "org.apache.cxf.aegis.type.DefaultTypeMapping:org.apache.cxf.aegis.type.Type getType(javax.xml.namespace.QName)",
            "org.apache.cxf.aegis.type.DefaultTypeMapping:javax.xml.namespace.QName getTypeQName(java.lang.Class)",
            "org.apache.cxf.jaxws.handler.HandlerResolverImpl:java.util.List getHandlerChain(javax.xml.ws.handler.PortInfo)",
            "org.apache.cxf.jaxws.handler.InitParamResourceResolver:java.lang.Object resolve(java.lang.String,java.lang.Class)",
            "org.apache.cxf.jaxws.support.JaxWsServiceConfiguration:javax.jws.WebParam getWebParam(java.lang.reflect.Method,int)",
            "org.apache.cxf.jaxws.support.JaxWsServiceConfiguration:java.lang.Class getResponseWrapper(java.lang.reflect.Method)",
            "org.apache.cxf.jaxws.support.JaxWsServiceConfiguration:java.lang.Class getRequestWrapper(java.lang.reflect.Method)",
            "org.apache.cxf.jaxws.JaxWsClientProxy:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])",
            "org.apache.cxf.jaxws.ServiceImpl:java.lang.Object createPort(javax.xml.namespace.QName,org.apache.cxf.ws.addressing.EndpointReferenceType,java.lang.Class,javax.xml.ws.WebServiceFeature[])",
            "org.apache.cxf.jaxws.ServiceImpl:org.apache.cxf.jaxws.handler.PortInfoImpl getPortInfo(javax.xml.namespace.QName)",
            "org.apache.cxf.jaxws.EndpointImpl:void checkProperties()",
            "org.apache.cxf.jaxws.DispatchImpl:java.lang.Object invoke(java.lang.Object,boolean)",
            "org.apache.cxf.jaxws.DispatchImpl:java.util.concurrent.Future invokeAsync(java.lang.Object,javax.xml.ws.AsyncHandler)",
            "org.apache.cxf.jaxws.interceptors.SwAOutInterceptor:boolean callSWARefMethod(javax.xml.bind.JAXBContext)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:void <init>(java.util.Map,org.apache.cxf.message.Exchange,javax.xml.ws.handler.MessageContext$Scope)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:void copyScoped(java.util.Map)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:java.lang.String mapKey(java.lang.String)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:java.lang.String mapKeyReverse(java.lang.String)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:java.lang.Object put(java.lang.String,java.lang.Object,javax.xml.ws.handler.MessageContext$Scope)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:javax.xml.ws.handler.MessageContext$Scope getScope(java.lang.String)",
            "org.apache.cxf.jaxws.AbstractJAXWSMethodInvoker:void updateWebServiceContext(org.apache.cxf.message.Exchange,javax.xml.ws.handler.MessageContext)",
            "org.apache.cxf.xmlbeans.XmlBeansSchemaInitializer:org.apache.ws.commons.schema.XmlSchema getSchema(org.apache.xmlbeans.SchemaTypeSystem,java.lang.String)",
            "org.apache.cxf.xmlbeans.XmlBeansSchemaInitializer:void mapClass(org.apache.cxf.service.model.MessagePartInfo,java.lang.Class)",
            "org.apache.cxf.xmlbeans.tools.XMLBeansSchemaTypeUtils:java.lang.String getNaturalJavaClassName(org.apache.xmlbeans.SchemaType)"
        ]
    },
    "org.apache.cxf.bus.extension.ExtensionManagerImpl:void load(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void <init>(java.lang.String[],java.lang.ClassLoader,java.util.Map,org.apache.cxf.resource.ResourceManager)"
        ]
    },
    "org.apache.cxf.bus.CXFBusImpl:void initialize()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.BusApplicationListener:void onApplicationEvent(org.springframework.context.ApplicationEvent)"
        ]
    },
    "org.apache.cxf.bus.CXFBusImpl:void setFeatures(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.attachment.LazyDataSource:java.lang.String getContentType()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.LazyDataSource:java.lang.String getContentType()",
            "org.apache.cxf.aegis.type.mtom.DataSourceType:java.lang.String getContentType(java.lang.Object,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.jaxws.interceptors.MessageModeInInterceptor$MultiPartDataSource:void nextCurrent()",
            "org.apache.cxf.jaxws.interceptors.MessageModeOutInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.attachment.LazyDataSource:java.io.InputStream getInputStream()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.attachment.JAXBAttachmentUnmarshaller:byte[] getAttachmentAsByteArray(java.lang.String)",
            "org.apache.cxf.databinding.source.XMLStreamDataWriter:void write(java.lang.Object,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.attachment.LazyDataSource:java.io.InputStream getInputStream()",
            "org.apache.cxf.attachment.AttachmentDeserializer:void cacheStreamedAttachments()",
            "org.apache.cxf.aegis.type.mtom.DataSourceType:byte[] getBytes(java.lang.Object)",
            "org.apache.cxf.jaxws.interceptors.MessageModeInInterceptor$MultiPartDataSource:void nextCurrent()",
            "org.apache.cxf.jaxws.interceptors.MessageModeOutInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.attachment.LazyDataSource:java.lang.String getName()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.LazyDataSource:java.lang.String getName()"
        ]
    },
    "org.apache.cxf.attachment.LazyDataSource:java.io.OutputStream getOutputStream()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.LazyDataSource:java.io.OutputStream getOutputStream()"
        ]
    },
    "org.apache.cxf.helpers.HttpHeaderHelper:java.lang.String getHeaderKey(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.HttpHeaderHelper:java.util.List getHeader(java.util.Map,java.lang.String)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void copyRequestHeaders(org.apache.cxf.message.Message,java.util.Map)",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponseInternal()",
            "org.apache.cxf.attachment.AttachmentUtil:java.lang.String getAttchmentPartHeader(org.apache.cxf.message.Attachment)"
        ]
    },
    "org.apache.cxf.common.xmlschema.FixedExtensionDeserializer:void deserialize(org.apache.ws.commons.schema.XmlSchemaObject,javax.xml.namespace.QName,org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.util.WeakIdentityHashMap:boolean containsKey(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.HttpHeaderHelper:java.lang.String getHeaderKey(java.lang.String)",
            "org.apache.cxf.common.xmlschema.FixedExtensionDeserializer:void deserialize(org.apache.ws.commons.schema.XmlSchemaObject,javax.xml.namespace.QName,org.w3c.dom.Node)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.common.util.CacheMap:void updateMainDataMap()",
            "org.apache.cxf.common.util.CacheMap:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.common.util.TwoStageMap:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.common.util.TwoStageMap:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.jaxb.JAXBDataBinding$1:javax.xml.transform.Result createOutput(java.lang.String,java.lang.String)",
            "org.apache.cxf.management.jmx.export.runtime.ModelMBeanInfoSupporter:boolean checkAttribute(java.lang.String)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:boolean isRecognizedQuery(java.lang.String,java.lang.String,org.apache.cxf.service.model.EndpointInfo,boolean)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void writeResponse(java.lang.String,java.lang.String,org.apache.cxf.service.model.EndpointInfo,java.io.OutputStream)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updateDoc(org.w3c.dom.Document,java.lang.String,java.util.Map,java.util.Map)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updateSchemaImports(javax.wsdl.extensions.schema.Schema,java.util.Map,java.lang.String)",
            "org.apache.cxf.transport.http.HTTPConduit:void transferProtocolHeadersToURLConnection(org.apache.cxf.message.Message,java.net.URLConnection)",
            "org.apache.cxf.transport.http.HTTPConduit:void setHeadersByClientPolicy(org.apache.cxf.message.Message,java.util.Map)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void copyRequestHeaders(org.apache.cxf.message.Message,java.util.Map)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void copyResponseHeaders(org.apache.cxf.message.Message,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:java.io.OutputStream flushHeaders(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.servlet.ServletContextResourceResolver:java.io.InputStream getAsStream(java.lang.String)",
            "org.apache.cxf.transport.servlet.ServletContextResourceResolver:java.lang.Object resolve(java.lang.String,java.lang.Class)",
            "org.apache.cxf.endpoint.ClientImpl:java.util.Map getRequestContext()",
            "org.apache.cxf.endpoint.ClientImpl:java.util.Map getResponseContext()",
            "org.apache.cxf.endpoint.ClientImpl:boolean isThreadLocalRequestContext()",
            "org.apache.cxf.wsdl.AbstractWSDLPlugin:boolean optionSet(java.util.Map,java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils$SchemaLSResourceResolver:org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.service.model.AbstractMessageContainer:void addMessagePart(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:boolean hasProperty(java.lang.String)",
            "org.apache.cxf.service.model.InterfaceInfo:org.apache.cxf.service.model.OperationInfo addOperation(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.BindingInfo:void addOperation(org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.service.model.OperationInfo:org.apache.cxf.service.model.FaultInfo addFault(javax.xml.namespace.QName,javax.xml.namespace.QName)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createWrappedMessageSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.AbstractMessageContainer,org.apache.cxf.service.model.AbstractMessageContainer,org.apache.ws.commons.schema.XmlSchema,javax.xml.namespace.QName)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.SchemaInfo getOrCreateSchema(org.apache.cxf.service.model.ServiceInfo,java.lang.String,boolean)",
            "org.apache.cxf.binding.soap.interceptor.SoapPreProtocolOutInterceptor:void setSoapAction(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.clustering.FailoverTargetSelector:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.tools.common.Tag:boolean equals(java.lang.Object)",
            "org.apache.cxf.tools.common.ToolContext:boolean containsKey(java.lang.String)",
            "org.apache.cxf.tools.common.ToolContext:boolean hasNamespace(java.lang.String)",
            "org.apache.cxf.tools.common.ToolContext:boolean hasExcludeNamespace(java.lang.String)",
            "org.apache.cxf.tools.common.ProcessorTestBase:boolean assertXmlEquals(java.io.File,java.io.File,java.util.List)",
            "org.apache.cxf.tools.common.model.JavaType:java.lang.String getDefaultTypeValue()",
            "org.apache.cxf.tools.util.ClassCollector:boolean containSeiClass(java.lang.String,java.lang.String)",
            "org.apache.cxf.tools.util.ClassCollector:boolean containTypesClass(java.lang.String,java.lang.String)",
            "org.apache.cxf.tools.util.ClassCollector:boolean containExceptionClass(java.lang.String,java.lang.String)",
            "org.apache.cxf.wsdl11.SchemaUtil:void addSchema(java.lang.String,javax.wsdl.extensions.schema.Schema)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(java.net.URL)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(org.w3c.dom.Element)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadAndRegister(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.aegis.type.DefaultTypeMapping:boolean isRegistered(java.lang.Class)",
            "org.apache.cxf.aegis.type.DefaultTypeMapping:boolean isRegistered(javax.xml.namespace.QName)",
            "org.apache.cxf.aegis.type.DefaultTypeMapping:void removeType(org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.jaxws.ServiceImpl:java.lang.Object getPort(javax.xml.namespace.QName,java.lang.Class,javax.xml.ws.WebServiceFeature[])",
            "org.apache.cxf.jaxws.EndpointImpl:void checkProperties()",
            "org.apache.cxf.jaxws.interceptors.SwAOutInterceptor:boolean callSWARefMethod(javax.xml.bind.JAXBContext)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:boolean isRequestor()",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:javax.xml.ws.handler.MessageContext$Scope getScope(java.lang.String)",
            "org.apache.cxf.jaxws.AbstractJAXWSMethodInvoker:void updateWebServiceContext(org.apache.cxf.message.Exchange,javax.xml.ws.handler.MessageContext)",
            "org.apache.cxf.xmlbeans.XmlBeansSchemaInitializer:org.apache.ws.commons.schema.XmlSchema getSchema(org.apache.xmlbeans.SchemaTypeSystem,java.lang.String)"
        ]
    },
    "org.apache.cxf.common.util.TwoStageMap:boolean containsKey(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.HttpHeaderHelper:java.lang.String getHeaderKey(java.lang.String)",
            "org.apache.cxf.common.xmlschema.FixedExtensionDeserializer:void deserialize(org.apache.ws.commons.schema.XmlSchemaObject,javax.xml.namespace.QName,org.w3c.dom.Node)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.common.util.CacheMap:void updateMainDataMap()",
            "org.apache.cxf.common.util.CacheMap:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.common.util.TwoStageMap:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.common.util.TwoStageMap:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.jaxb.JAXBDataBinding$1:javax.xml.transform.Result createOutput(java.lang.String,java.lang.String)",
            "org.apache.cxf.management.jmx.export.runtime.ModelMBeanInfoSupporter:boolean checkAttribute(java.lang.String)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:boolean isRecognizedQuery(java.lang.String,java.lang.String,org.apache.cxf.service.model.EndpointInfo,boolean)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void writeResponse(java.lang.String,java.lang.String,org.apache.cxf.service.model.EndpointInfo,java.io.OutputStream)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updateDoc(org.w3c.dom.Document,java.lang.String,java.util.Map,java.util.Map)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updateSchemaImports(javax.wsdl.extensions.schema.Schema,java.util.Map,java.lang.String)",
            "org.apache.cxf.transport.http.HTTPConduit:void transferProtocolHeadersToURLConnection(org.apache.cxf.message.Message,java.net.URLConnection)",
            "org.apache.cxf.transport.http.HTTPConduit:void setHeadersByClientPolicy(org.apache.cxf.message.Message,java.util.Map)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void copyRequestHeaders(org.apache.cxf.message.Message,java.util.Map)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void copyResponseHeaders(org.apache.cxf.message.Message,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:java.io.OutputStream flushHeaders(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.servlet.ServletContextResourceResolver:java.io.InputStream getAsStream(java.lang.String)",
            "org.apache.cxf.transport.servlet.ServletContextResourceResolver:java.lang.Object resolve(java.lang.String,java.lang.Class)",
            "org.apache.cxf.endpoint.ClientImpl:java.util.Map getRequestContext()",
            "org.apache.cxf.endpoint.ClientImpl:java.util.Map getResponseContext()",
            "org.apache.cxf.endpoint.ClientImpl:boolean isThreadLocalRequestContext()",
            "org.apache.cxf.wsdl.AbstractWSDLPlugin:boolean optionSet(java.util.Map,java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils$SchemaLSResourceResolver:org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.service.model.AbstractMessageContainer:void addMessagePart(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:boolean hasProperty(java.lang.String)",
            "org.apache.cxf.service.model.InterfaceInfo:org.apache.cxf.service.model.OperationInfo addOperation(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.BindingInfo:void addOperation(org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.service.model.OperationInfo:org.apache.cxf.service.model.FaultInfo addFault(javax.xml.namespace.QName,javax.xml.namespace.QName)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createWrappedMessageSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.AbstractMessageContainer,org.apache.cxf.service.model.AbstractMessageContainer,org.apache.ws.commons.schema.XmlSchema,javax.xml.namespace.QName)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.SchemaInfo getOrCreateSchema(org.apache.cxf.service.model.ServiceInfo,java.lang.String,boolean)",
            "org.apache.cxf.binding.soap.interceptor.SoapPreProtocolOutInterceptor:void setSoapAction(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.clustering.FailoverTargetSelector:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.tools.common.Tag:boolean equals(java.lang.Object)",
            "org.apache.cxf.tools.common.ToolContext:boolean containsKey(java.lang.String)",
            "org.apache.cxf.tools.common.ToolContext:boolean hasNamespace(java.lang.String)",
            "org.apache.cxf.tools.common.ToolContext:boolean hasExcludeNamespace(java.lang.String)",
            "org.apache.cxf.tools.common.ProcessorTestBase:boolean assertXmlEquals(java.io.File,java.io.File,java.util.List)",
            "org.apache.cxf.tools.common.model.JavaType:java.lang.String getDefaultTypeValue()",
            "org.apache.cxf.tools.util.ClassCollector:boolean containSeiClass(java.lang.String,java.lang.String)",
            "org.apache.cxf.tools.util.ClassCollector:boolean containTypesClass(java.lang.String,java.lang.String)",
            "org.apache.cxf.tools.util.ClassCollector:boolean containExceptionClass(java.lang.String,java.lang.String)",
            "org.apache.cxf.wsdl11.SchemaUtil:void addSchema(java.lang.String,javax.wsdl.extensions.schema.Schema)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(java.net.URL)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(org.w3c.dom.Element)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadAndRegister(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.aegis.type.DefaultTypeMapping:boolean isRegistered(java.lang.Class)",
            "org.apache.cxf.aegis.type.DefaultTypeMapping:boolean isRegistered(javax.xml.namespace.QName)",
            "org.apache.cxf.aegis.type.DefaultTypeMapping:void removeType(org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.jaxws.ServiceImpl:java.lang.Object getPort(javax.xml.namespace.QName,java.lang.Class,javax.xml.ws.WebServiceFeature[])",
            "org.apache.cxf.jaxws.EndpointImpl:void checkProperties()",
            "org.apache.cxf.jaxws.interceptors.SwAOutInterceptor:boolean callSWARefMethod(javax.xml.bind.JAXBContext)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:boolean isRequestor()",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:javax.xml.ws.handler.MessageContext$Scope getScope(java.lang.String)",
            "org.apache.cxf.jaxws.AbstractJAXWSMethodInvoker:void updateWebServiceContext(org.apache.cxf.message.Exchange,javax.xml.ws.handler.MessageContext)",
            "org.apache.cxf.xmlbeans.XmlBeansSchemaInitializer:org.apache.ws.commons.schema.XmlSchema getSchema(org.apache.xmlbeans.SchemaTypeSystem,java.lang.String)"
        ]
    },
    "org.apache.cxf.common.util.TwoStageMap:java.lang.Object remove(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:void reap()",
            "org.apache.cxf.common.util.CacheMap:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.common.util.TwoStageMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.common.util.TwoStageMap:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.message.MessageImpl:void removeContent(java.lang.Class)",
            "org.apache.cxf.transport.ConduitInitiatorManagerImpl:void deregisterConduitInitiator(java.lang.String)",
            "org.apache.cxf.transport.http.Cookie:void handleSetCookie(java.util.Map,java.util.List)",
            "org.apache.cxf.transport.http.HTTPConduit:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection redirectRetransmit(java.net.HttpURLConnection,org.apache.cxf.message.Message,org.apache.cxf.io.CacheAndWriteOutputStream)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:java.io.OutputStream flushHeaders(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.gzip.GZIPInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.DestinationFactoryManagerImpl:void deregisterDestinationFactory(java.lang.String)",
            "org.apache.cxf.transport.servlet.ServletTransportFactory:void removeDestination(java.lang.String)",
            "org.apache.cxf.transport.servlet.AbstractCXFServlet:void destroy()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPTransportFactory:void removeDestination(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void destroyForPort(int)",
            "org.apache.cxf.transport.jms.JMSConduit:void sendExchange(org.apache.cxf.message.Exchange,java.lang.Object)",
            "org.apache.cxf.transport.jms.JMSConduit:void onMessage(javax.jms.Message)",
            "org.apache.cxf.extension.RegistryImpl:void unregister(java.lang.Object)",
            "org.apache.cxf.endpoint.ClientImpl$EchoContext:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void handleFault(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void restoreExchange(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.addressing.AddressingProperties)",
            "org.apache.cxf.ws.policy.PolicyRegistryImpl:void remove(java.lang.String)",
            "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:void remove(org.apache.cxf.ws.security.tokenstore.SecurityToken)",
            "org.apache.cxf.ws.rm.Source:void removeSequence(org.apache.cxf.ws.rm.SourceSequence)",
            "org.apache.cxf.ws.rm.Destination:void removeSequence(org.apache.cxf.ws.rm.DestinationSequence)",
            "org.apache.cxf.ws.rm.RMManager:void shutdownReliableEndpoint(org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl:void purgeAcknowledged(org.apache.cxf.ws.rm.SourceSequence)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils$SchemaLSResourceResolver:org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.service.model.AbstractMessageContainer:void removeMessagePart(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:void setProperty(java.lang.String,java.lang.Object)",
            "org.apache.cxf.service.model.InterfaceInfo:void removeOperation(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.BindingInfo:void removeOperation(org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.service.model.OperationInfo:void removeFault(javax.xml.namespace.QName)",
            "org.apache.cxf.binding.BindingFactoryManagerImpl:void unregisterBindingFactory(java.lang.String)",
            "org.apache.cxf.clustering.FailoverTargetSelector:void complete(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.tools.common.ToolContext:void remove(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void removeDefinition(javax.wsdl.Definition)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void activateViaNS(java.lang.String)",
            "org.apache.cxf.aegis.type.DefaultTypeMapping:void removeType(org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.jaxws.JaxWsClientProxy:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.jaxws.AbstractJAXWSMethodInvoker:void updateWebServiceContext(org.apache.cxf.message.Exchange,javax.xml.ws.handler.MessageContext)"
        ]
    },
    "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:boolean containsKey(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap$SpringBeanMapWrapper:boolean containsKey(java.lang.Object)"
        ]
    },
    "org.apache.cxf.jaxb.JAXBDataBinding$1:javax.xml.transform.Result createOutput(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.management.jmx.export.runtime.ModelMBeanInfoSupporter:boolean checkAttribute(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.management.jmx.export.runtime.ModelMBeanAssembler:javax.management.modelmbean.ModelMBeanInfo getModelMbeanInfo(java.lang.Class)"
        ]
    },
    "org.apache.cxf.transport.http.WSDLQueryHandler:boolean isRecognizedQuery(java.lang.String,java.lang.String,org.apache.cxf.service.model.EndpointInfo,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.WSDLQueryHandler:boolean isRecognizedQuery(java.lang.String,java.lang.String,org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void doService(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit:void setHeadersByClientPolicy(org.apache.cxf.message.Message,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:void setHeadersByPolicy(org.apache.cxf.message.Message,java.net.URL,java.util.Map)"
        ]
    },
    "org.apache.cxf.transport.http.AbstractHTTPDestination:void copyRequestHeaders(org.apache.cxf.message.Message,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void setHeaders(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.servlet.ServletContextResourceResolver:java.io.InputStream getAsStream(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.resource.DefaultResourceManager:java.lang.Object findResource(java.lang.String,java.lang.Class,boolean,java.util.List)",
            "org.apache.cxf.transport.servlet.ServletContextResourceResolver:java.lang.Object resolve(java.lang.String,java.lang.Class)"
        ]
    },
    "org.apache.cxf.transport.servlet.ServletContextResourceResolver:java.lang.Object resolve(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.resource.DefaultResourceManager:java.lang.Object findResource(java.lang.String,java.lang.Class,boolean,java.util.List)"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:java.util.Map getRequestContext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.ClientImpl:void invoke(org.apache.cxf.endpoint.ClientCallback,org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[])",
            "org.apache.cxf.ws.security.trust.STSClient:org.apache.cxf.ws.security.tokenstore.SecurityToken requestSecurityToken(java.lang.String,java.lang.String,java.lang.String,org.apache.cxf.ws.security.tokenstore.SecurityToken)",
            "org.apache.cxf.ws.security.trust.STSClient:boolean validateSecurityToken(org.apache.cxf.ws.security.tokenstore.SecurityToken,java.lang.String)",
            "org.apache.cxf.ws.security.trust.STSClient:void cancelSecurityToken(org.apache.cxf.ws.security.tokenstore.SecurityToken)",
            "org.apache.cxf.frontend.ClientProxy:java.util.Map getRequestContext()",
            "org.apache.cxf.jaxws.JaxWsClientProxy:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])",
            "org.apache.cxf.jaxws.JaxWsClientProxy:java.util.Map getRequestContext()",
            "org.apache.cxf.jaxws.DispatchImpl:java.util.Map getRequestContext()",
            "org.apache.cxf.jaxws.DispatchImpl:void setupEndpointAddressContext(org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.jaxws.DispatchImpl:java.lang.Object invoke(java.lang.Object,boolean)"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:java.util.Map getResponseContext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.ClientImpl:void invoke(org.apache.cxf.endpoint.ClientCallback,org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[])",
            "org.apache.cxf.frontend.ClientProxy:java.util.Map getResponseContext()",
            "org.apache.cxf.jaxws.JaxWsClientProxy:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])",
            "org.apache.cxf.jaxws.JaxWsClientProxy:java.util.Map getResponseContext()",
            "org.apache.cxf.jaxws.DispatchImpl:java.util.Map getResponseContext()"
        ]
    },
    "org.apache.cxf.wsdl.AbstractWSDLPlugin:boolean optionSet(java.util.Map,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.jms.wsdl11.JmsTransportPlugin:javax.wsdl.extensions.ExtensibilityElement createExtension(java.util.Map)",
            "org.apache.cxf.wsdl.AbstractWSDLPlugin:java.lang.String getOption(java.util.Map,java.lang.String,java.lang.String)",
            "org.apache.cxf.binding.soap.wsdl11.SoapAddressPlugin:javax.wsdl.extensions.ExtensibilityElement createExtension(java.util.Map)"
        ]
    },
    "org.apache.cxf.service.model.AbstractMessageContainer:void addMessagePart(org.apache.cxf.service.model.MessagePartInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo addMessagePart(javax.xml.namespace.QName)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createInputWrappedMessageParts(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,org.apache.cxf.service.model.MessageInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createOutputWrappedMessageParts(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,org.apache.cxf.service.model.MessageInfo)"
        ]
    },
    "org.apache.cxf.service.model.AbstractPropertiesHolder:boolean hasProperty(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.validation.Schema getSchema(org.apache.cxf.service.model.ServiceInfo)"
        ]
    },
    "org.apache.cxf.service.model.InterfaceInfo:org.apache.cxf.service.model.OperationInfo addOperation(javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.trust.STSUtils:org.apache.cxf.service.model.OperationInfo addIssueOperation(org.apache.cxf.service.model.InterfaceInfo,java.lang.String,java.lang.String)",
            "org.apache.cxf.ws.security.trust.STSUtils:org.apache.cxf.service.model.OperationInfo addCancelOperation(org.apache.cxf.service.model.InterfaceInfo,java.lang.String,java.lang.String)",
            "org.apache.cxf.ws.rm.RMEndpoint:void buildCreateSequenceOperationInfo(org.apache.cxf.service.model.InterfaceInfo)",
            "org.apache.cxf.ws.rm.RMEndpoint:void buildTerminateSequenceOperationInfo(org.apache.cxf.service.model.InterfaceInfo)",
            "org.apache.cxf.ws.rm.RMEndpoint:void buildSequenceAckOperationInfo(org.apache.cxf.service.model.InterfaceInfo)",
            "org.apache.cxf.ws.rm.RMEndpoint:void buildLastMessageOperationInfo(org.apache.cxf.service.model.InterfaceInfo)",
            "org.apache.cxf.ws.rm.RMEndpoint:void buildAckRequestedOperationInfo(org.apache.cxf.service.model.InterfaceInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.OperationInfo createOperation(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.InterfaceInfo,java.lang.reflect.Method)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildInterfaceOperation(org.apache.cxf.service.model.InterfaceInfo,javax.wsdl.Operation)",
            "org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean:void initializeWSDLOperationsForProvider()",
            "org.apache.cxf.jaxws.DispatchImpl:void addInvokeOperation(boolean)"
        ]
    },
    "org.apache.cxf.service.model.BindingInfo:void addOperation(org.apache.cxf.service.model.BindingOperationInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.RMEndpoint:void buildBindingInfo(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.binding.AbstractBindingFactory:org.apache.cxf.service.model.BindingInfo initializeBindingInfo(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding,org.apache.cxf.service.model.BindingInfo)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:org.apache.cxf.service.model.BindingInfo createBindingInfo(org.apache.cxf.service.model.ServiceInfo,java.lang.String,java.lang.Object)",
            "org.apache.cxf.binding.xml.XMLBindingFactory:org.apache.cxf.service.model.BindingInfo createBindingInfo(org.apache.cxf.service.model.ServiceInfo,java.lang.String,java.lang.Object)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.BindingInfo buildBinding(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding)",
            "org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean:void initializeWSDLOperationsForProvider()",
            "org.apache.cxf.jaxws.DispatchImpl:void addInvokeOperation(boolean)"
        ]
    },
    "org.apache.cxf.service.model.OperationInfo:org.apache.cxf.service.model.FaultInfo addFault(javax.xml.namespace.QName,javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.model.UnwrappedOperationInfo:org.apache.cxf.service.model.FaultInfo addFault(javax.xml.namespace.QName,javax.xml.namespace.QName)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.FaultInfo addFault(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.Class)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildInterfaceOperation(org.apache.cxf.service.model.InterfaceInfo,javax.wsdl.Operation)"
        ]
    },
    "org.apache.cxf.binding.soap.interceptor.SoapPreProtocolOutInterceptor:void setSoapAction(org.apache.cxf.binding.soap.SoapMessage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.soap.interceptor.SoapPreProtocolOutInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)"
        ]
    },
    "org.apache.cxf.clustering.FailoverTargetSelector:void prepare(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:void prepareConduitSelector(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.tools.common.ToolContext:boolean containsKey(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.tools.common.ToolContext:boolean hasNamespace(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.tools.common.ToolContext:java.lang.String mapPackageName(java.lang.String)"
        ]
    },
    "org.apache.cxf.tools.common.ToolContext:boolean hasExcludeNamespace(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.tools.common.model.JavaType:java.lang.String getDefaultTypeValue()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.tools.common.model.JavaType:void writeDefaultValue(java.io.Writer,java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.tools.util.ClassCollector:boolean containSeiClass(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.tools.util.ClassCollector:boolean containTypesClass(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.tools.util.ClassCollector:boolean containExceptionClass(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(java.net.URL)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLServiceFactory:void <init>(org.apache.cxf.Bus,java.net.URL)"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl.EndpointReferenceUtils:java.lang.String findNamespaceHack(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.wsdl.Definition getWSDLDefinition(org.apache.cxf.wsdl.WSDLManager,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void parseWSDL(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLServiceFactory:void <init>(org.apache.cxf.Bus,java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLServiceFactory:void <init>(org.apache.cxf.Bus,java.lang.String,javax.xml.namespace.QName)",
            "org.apache.cxf.jaxws.ServiceImpl:void initializePorts()",
            "org.apache.cxf.jaxws.spi.ProviderImpl:javax.xml.ws.wsaddressing.W3CEndpointReference createW3CEndpointReference(java.lang.String,javax.xml.namespace.QName,javax.xml.namespace.QName,java.util.List,java.lang.String,java.util.List)"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.wsdl.Definition getWSDLDefinition(org.apache.cxf.wsdl.WSDLManager,org.apache.cxf.ws.addressing.EndpointReferenceType)"
        ]
    },
    "org.apache.cxf.aegis.type.DefaultTypeMapping:boolean isRegistered(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.DefaultTypeMapping:boolean isRegistered(java.lang.Class)"
        ]
    },
    "org.apache.cxf.aegis.type.DefaultTypeMapping:boolean isRegistered(javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.DefaultTypeMapping:boolean isRegistered(javax.xml.namespace.QName)"
        ]
    },
    "org.apache.cxf.aegis.type.DefaultTypeMapping:void removeType(org.apache.cxf.aegis.type.Type)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.DefaultTypeMapping:void removeType(org.apache.cxf.aegis.type.Type)"
        ]
    },
    "org.apache.cxf.jaxws.ServiceImpl:java.lang.Object getPort(javax.xml.namespace.QName,java.lang.Class,javax.xml.ws.WebServiceFeature[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.ServiceImpl:java.lang.Object getPort(javax.xml.namespace.QName,java.lang.Class)"
        ]
    },
    "org.apache.cxf.jaxws.interceptors.SwAOutInterceptor:boolean callSWARefMethod(javax.xml.bind.JAXBContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.interceptors.SwAOutInterceptor:boolean hasSwaRef(org.apache.cxf.jaxb.JAXBDataBinding)"
        ]
    },
    "org.apache.cxf.jaxws.context.WrappedMessageContext:boolean isRequestor()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.handler.soap.SOAPMessageContextImpl:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.jaxws.handler.logical.LogicalMessageContextImpl:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:void <init>(java.util.Map,org.apache.cxf.message.Exchange,javax.xml.ws.handler.MessageContext$Scope)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:boolean isResponse()",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:org.apache.cxf.message.Message createResponseMessage()",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:java.lang.Object put(java.lang.String,java.lang.Object,javax.xml.ws.handler.MessageContext$Scope)"
        ]
    },
    "org.apache.cxf.jaxws.context.WrappedMessageContext:boolean containsKey(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.HttpHeaderHelper:java.lang.String getHeaderKey(java.lang.String)",
            "org.apache.cxf.common.xmlschema.FixedExtensionDeserializer:void deserialize(org.apache.ws.commons.schema.XmlSchemaObject,javax.xml.namespace.QName,org.w3c.dom.Node)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.common.util.CacheMap:void updateMainDataMap()",
            "org.apache.cxf.common.util.CacheMap:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.common.util.TwoStageMap:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.common.util.TwoStageMap:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.jaxb.JAXBDataBinding$1:javax.xml.transform.Result createOutput(java.lang.String,java.lang.String)",
            "org.apache.cxf.management.jmx.export.runtime.ModelMBeanInfoSupporter:boolean checkAttribute(java.lang.String)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:boolean isRecognizedQuery(java.lang.String,java.lang.String,org.apache.cxf.service.model.EndpointInfo,boolean)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void writeResponse(java.lang.String,java.lang.String,org.apache.cxf.service.model.EndpointInfo,java.io.OutputStream)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updateDoc(org.w3c.dom.Document,java.lang.String,java.util.Map,java.util.Map)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updateSchemaImports(javax.wsdl.extensions.schema.Schema,java.util.Map,java.lang.String)",
            "org.apache.cxf.transport.http.HTTPConduit:void transferProtocolHeadersToURLConnection(org.apache.cxf.message.Message,java.net.URLConnection)",
            "org.apache.cxf.transport.http.HTTPConduit:void setHeadersByClientPolicy(org.apache.cxf.message.Message,java.util.Map)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void copyRequestHeaders(org.apache.cxf.message.Message,java.util.Map)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void copyResponseHeaders(org.apache.cxf.message.Message,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:java.io.OutputStream flushHeaders(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.servlet.ServletContextResourceResolver:java.io.InputStream getAsStream(java.lang.String)",
            "org.apache.cxf.transport.servlet.ServletContextResourceResolver:java.lang.Object resolve(java.lang.String,java.lang.Class)",
            "org.apache.cxf.endpoint.ClientImpl:java.util.Map getRequestContext()",
            "org.apache.cxf.endpoint.ClientImpl:java.util.Map getResponseContext()",
            "org.apache.cxf.endpoint.ClientImpl:boolean isThreadLocalRequestContext()",
            "org.apache.cxf.wsdl.AbstractWSDLPlugin:boolean optionSet(java.util.Map,java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils$SchemaLSResourceResolver:org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.service.model.AbstractMessageContainer:void addMessagePart(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:boolean hasProperty(java.lang.String)",
            "org.apache.cxf.service.model.InterfaceInfo:org.apache.cxf.service.model.OperationInfo addOperation(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.BindingInfo:void addOperation(org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.service.model.OperationInfo:org.apache.cxf.service.model.FaultInfo addFault(javax.xml.namespace.QName,javax.xml.namespace.QName)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createWrappedMessageSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.AbstractMessageContainer,org.apache.cxf.service.model.AbstractMessageContainer,org.apache.ws.commons.schema.XmlSchema,javax.xml.namespace.QName)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.SchemaInfo getOrCreateSchema(org.apache.cxf.service.model.ServiceInfo,java.lang.String,boolean)",
            "org.apache.cxf.binding.soap.interceptor.SoapPreProtocolOutInterceptor:void setSoapAction(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.clustering.FailoverTargetSelector:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.tools.common.Tag:boolean equals(java.lang.Object)",
            "org.apache.cxf.tools.common.ToolContext:boolean containsKey(java.lang.String)",
            "org.apache.cxf.tools.common.ToolContext:boolean hasNamespace(java.lang.String)",
            "org.apache.cxf.tools.common.ToolContext:boolean hasExcludeNamespace(java.lang.String)",
            "org.apache.cxf.tools.common.ProcessorTestBase:boolean assertXmlEquals(java.io.File,java.io.File,java.util.List)",
            "org.apache.cxf.tools.common.model.JavaType:java.lang.String getDefaultTypeValue()",
            "org.apache.cxf.tools.util.ClassCollector:boolean containSeiClass(java.lang.String,java.lang.String)",
            "org.apache.cxf.tools.util.ClassCollector:boolean containTypesClass(java.lang.String,java.lang.String)",
            "org.apache.cxf.tools.util.ClassCollector:boolean containExceptionClass(java.lang.String,java.lang.String)",
            "org.apache.cxf.wsdl11.SchemaUtil:void addSchema(java.lang.String,javax.wsdl.extensions.schema.Schema)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(java.net.URL)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(org.w3c.dom.Element)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadAndRegister(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.aegis.type.DefaultTypeMapping:boolean isRegistered(java.lang.Class)",
            "org.apache.cxf.aegis.type.DefaultTypeMapping:boolean isRegistered(javax.xml.namespace.QName)",
            "org.apache.cxf.aegis.type.DefaultTypeMapping:void removeType(org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.jaxws.ServiceImpl:java.lang.Object getPort(javax.xml.namespace.QName,java.lang.Class,javax.xml.ws.WebServiceFeature[])",
            "org.apache.cxf.jaxws.EndpointImpl:void checkProperties()",
            "org.apache.cxf.jaxws.interceptors.SwAOutInterceptor:boolean callSWARefMethod(javax.xml.bind.JAXBContext)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:boolean isRequestor()",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:void setScope(java.lang.String,javax.xml.ws.handler.MessageContext$Scope)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:javax.xml.ws.handler.MessageContext$Scope getScope(java.lang.String)",
            "org.apache.cxf.jaxws.AbstractJAXWSMethodInvoker:void updateWebServiceContext(org.apache.cxf.message.Exchange,javax.xml.ws.handler.MessageContext)",
            "org.apache.cxf.xmlbeans.XmlBeansSchemaInitializer:org.apache.ws.commons.schema.XmlSchema getSchema(org.apache.xmlbeans.SchemaTypeSystem,java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxws.context.WrappedMessageContext:javax.xml.ws.handler.MessageContext$Scope getScope(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.xmlbeans.XmlBeansSchemaInitializer:org.apache.ws.commons.schema.XmlSchema getSchema(org.apache.xmlbeans.SchemaTypeSystem,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.xmlbeans.XmlBeansSchemaInitializer:org.apache.ws.commons.schema.XmlSchema getSchema(org.apache.xmlbeans.SchemaTypeSystem,java.lang.String)",
            "org.apache.cxf.xmlbeans.XmlBeansSchemaInitializer:void mapClass(org.apache.cxf.service.model.MessagePartInfo,java.lang.Class)"
        ]
    },
    "org.apache.cxf.common.util.WeakIdentityHashMap:boolean containsValue(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.WeakIdentityHashMap:boolean containsValue(java.lang.Object)",
            "org.apache.cxf.common.util.CacheMap:boolean containsValue(java.lang.Object)",
            "org.apache.cxf.common.util.TwoStageMap:boolean containsValue(java.lang.Object)",
            "org.apache.cxf.wsdl11.SchemaUtil:void addSchema(java.lang.String,javax.wsdl.extensions.schema.Schema)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:java.lang.String getNewPrefix()",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:boolean containsValue(java.lang.Object)"
        ]
    },
    "org.apache.cxf.common.util.CacheMap:boolean containsValue(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.WeakIdentityHashMap:boolean containsValue(java.lang.Object)",
            "org.apache.cxf.common.util.CacheMap:boolean containsValue(java.lang.Object)",
            "org.apache.cxf.common.util.TwoStageMap:boolean containsValue(java.lang.Object)",
            "org.apache.cxf.wsdl11.SchemaUtil:void addSchema(java.lang.String,javax.wsdl.extensions.schema.Schema)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:java.lang.String getNewPrefix()",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:boolean containsValue(java.lang.Object)"
        ]
    },
    "org.apache.cxf.common.util.TwoStageMap:boolean containsValue(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.WeakIdentityHashMap:boolean containsValue(java.lang.Object)",
            "org.apache.cxf.common.util.CacheMap:boolean containsValue(java.lang.Object)",
            "org.apache.cxf.common.util.TwoStageMap:boolean containsValue(java.lang.Object)",
            "org.apache.cxf.wsdl11.SchemaUtil:void addSchema(java.lang.String,javax.wsdl.extensions.schema.Schema)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:java.lang.String getNewPrefix()",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:boolean containsValue(java.lang.Object)"
        ]
    },
    "org.apache.cxf.wsdl11.ServiceWSDLBuilder:java.lang.String getNewPrefix()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:java.lang.String getPrefix(java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxws.context.WrappedMessageContext:boolean containsValue(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.WeakIdentityHashMap:boolean containsValue(java.lang.Object)",
            "org.apache.cxf.common.util.CacheMap:boolean containsValue(java.lang.Object)",
            "org.apache.cxf.common.util.TwoStageMap:boolean containsValue(java.lang.Object)",
            "org.apache.cxf.wsdl11.SchemaUtil:void addSchema(java.lang.String,javax.wsdl.extensions.schema.Schema)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:java.lang.String getNewPrefix()",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:boolean containsValue(java.lang.Object)"
        ]
    },
    "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:java.lang.Object get(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.MapNamespaceContext:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.helpers.HttpHeaderHelper:java.util.List getHeader(java.util.Map,java.lang.String)",
            "org.apache.cxf.helpers.HttpHeaderHelper:java.lang.String getHeaderKey(java.lang.String)",
            "org.apache.cxf.helpers.HttpHeaderHelper:java.lang.String mapCharset(java.lang.String)",
            "org.apache.cxf.helpers.XMLUtils:javax.xml.transform.TransformerFactory getTransformerFactory()",
            "org.apache.cxf.helpers.XMLUtils:javax.xml.parsers.DocumentBuilderFactory getDocumentBuilderFactory()",
            "org.apache.cxf.helpers.XMLUtils:javax.xml.namespace.QName getNamespace(java.util.Map,java.lang.String,java.lang.String)",
            "org.apache.cxf.common.xmlschema.FixedExtensionDeserializer:void deserialize(org.apache.ws.commons.schema.XmlSchemaObject,javax.xml.namespace.QName,org.w3c.dom.Node)",
            "org.apache.cxf.common.logging.Log4jLogger:void setLevel(java.util.logging.Level)",
            "org.apache.cxf.common.logging.Log4jLogger:void internalLogFormatted(java.lang.String,java.util.logging.LogRecord)",
            "org.apache.cxf.common.logging.Log4jLogger$HandlerWrapper:org.apache.log4j.Priority getThreshold()",
            "org.apache.cxf.common.util.ClassReader:void readAttributes()",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.common.util.ASMHelper:java.lang.String getClassCode(java.lang.Class)",
            "org.apache.cxf.common.util.ASMHelper:org.apache.cxf.common.util.ASMHelper$TypeHelperClassLoader getTypeHelperClassLoader(java.lang.Class)",
            "org.apache.cxf.common.util.ASMHelper$TypeHelperClassLoader:java.lang.Class lookupDefinedClass(java.lang.String)",
            "org.apache.cxf.common.util.CacheMap:void updateMainDataMap()",
            "org.apache.cxf.common.util.CacheMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.common.util.ParamReader:java.lang.String[] getParameterNames(java.lang.reflect.Member,java.lang.Class[])",
            "org.apache.cxf.common.util.ParamReader:org.apache.cxf.common.util.ParamReader$MethodInfo getMethodInfo()",
            "org.apache.cxf.common.util.TwoStageMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.resource.PropertiesResolver:java.lang.Object resolve(java.lang.String,java.lang.Class)",
            "org.apache.cxf.resource.URIResolver:void tryRemote(java.lang.String)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.util.List getBeanListForId(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void mapElementToJaxbProperty(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder,java.lang.String,java.lang.Class)",
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:java.lang.Object unmarshalFactoryString(java.lang.String,java.lang.Class)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void initWildcardDefinitionMap()",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureWithWildCard(java.lang.String,java.lang.Object)",
            "org.apache.cxf.jaxb.NamespaceMapper:java.lang.String getPreferredPrefix(java.lang.String,java.lang.String,boolean)",
            "org.apache.cxf.jaxb.JAXBUtils:java.lang.String builtInTypeToJavaType(java.lang.String)",
            "org.apache.cxf.jaxb.JAXBUtils:java.lang.Class holderClass(java.lang.String)",
            "org.apache.cxf.jaxb.JAXBDataBinding:org.apache.cxf.jaxb.JAXBDataBinding$CachedContextAndSchemas createJAXBContextAndSchemas(java.util.Set,java.lang.String)",
            "org.apache.cxf.jaxb.JAXBDataBinding:void scanPackages(java.util.Set)",
            "org.apache.cxf.jaxb.JAXBDataBinding$1:javax.xml.transform.Result createOutput(java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxb.WrapperHelperCompiler:boolean addCreateWrapperObject(java.lang.String,java.lang.Class)",
            "org.apache.cxf.jaxb.WrapperHelperCompiler:void createObjectWrapper(org.objectweb.asm.MethodVisitor,java.lang.Class)",
            "org.apache.cxf.management.counters.CounterRepository:org.apache.cxf.management.counters.Counter getCounter(javax.management.ObjectName)",
            "org.apache.cxf.staxutils.AbstractDOMStreamReader:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.staxutils.W3CDOMStreamWriter:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.message.MessageImpl:java.lang.Object getContent(java.lang.Class)",
            "org.apache.cxf.headers.HeaderManagerImpl:org.apache.cxf.headers.HeaderProcessor getHeaderProcessor(java.lang.String)",
            "org.apache.cxf.interceptor.StaxOutInterceptor:javax.xml.stream.XMLOutputFactory getXMLOutputFactory(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.util.Map keepInOrder(java.util.Map,org.apache.cxf.service.model.OperationInfo,java.util.List)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:org.apache.cxf.message.MessageContentsList getParameters(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.interceptor.ClientOutFaultObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxInInterceptor:javax.xml.stream.XMLInputFactory getXMLInputFactory(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.FIStaxOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.ConduitInitiatorManagerImpl:org.apache.cxf.transport.ConduitInitiator getConduitInitiator(java.lang.String)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void writeResponse(java.lang.String,java.lang.String,org.apache.cxf.service.model.EndpointInfo,java.io.OutputStream)",
            "org.apache.cxf.transport.http.DigestAuthSupplier:java.lang.String getPreemptiveAuthorization(org.apache.cxf.transport.http.HTTPConduit,java.net.URL,org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:void transferProtocolHeadersToURLConnection(org.apache.cxf.message.Message,java.net.URLConnection)",
            "org.apache.cxf.transport.http.HTTPConduit:void logProtocolHeaders(java.util.logging.Level,org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:java.lang.String extractAuthorizationRealm(java.util.Map)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void copyRequestHeaders(org.apache.cxf.message.Message,java.util.Map)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void copyResponseHeaders(org.apache.cxf.message.Message,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:java.lang.String getId(java.util.Map)",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponseInternal()",
            "org.apache.cxf.transport.http.gzip.GZIPOutInterceptor:void addHeader(org.apache.cxf.message.Message,java.lang.String,java.lang.String)",
            "org.apache.cxf.transport.AbstractMultiplexDestination:java.lang.String getId(java.util.Map)",
            "org.apache.cxf.transport.DestinationFactoryManagerImpl:org.apache.cxf.transport.DestinationFactory getDestinationFactory(java.lang.String)",
            "org.apache.cxf.transport.servlet.ServletContextResourceResolver:java.io.InputStream getAsStream(java.lang.String)",
            "org.apache.cxf.transport.servlet.ServletContextResourceResolver:java.lang.Object resolve(java.lang.String,java.lang.Class)",
            "org.apache.cxf.transport.servlet.ServletTransportFactory:org.apache.cxf.transport.servlet.ServletDestination getDestinationForPath(java.lang.String)",
            "org.apache.cxf.transport.servlet.AbstractCXFServlet:void init(javax.servlet.ServletConfig)",
            "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser$SpringJettyHTTPServerEngine:void finalizeConfig()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPTransportFactory:org.apache.cxf.transport.Destination getDestination(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPTransportFactory:org.apache.cxf.transport.http_jetty.JettyHTTPDestination createDestination(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine retrieveJettyHTTPServerEngine(int)",
            "org.apache.cxf.transport.jms.JMSUtils:void addContentTypeToProtocolHeader(org.apache.cxf.message.Message)",
            "org.apache.cxf.NSManager:java.lang.String getPrefixFromNS(java.lang.String)",
            "org.apache.cxf.extension.RegistryImpl:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.endpoint.ClientImpl:java.util.Map getRequestContext()",
            "org.apache.cxf.endpoint.ClientImpl:java.util.Map getResponseContext()",
            "org.apache.cxf.endpoint.ClientImpl:boolean isThreadLocalRequestContext()",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.ClientImpl:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.addressing.ContextUtils:java.lang.String getActionFromServiceModel(org.apache.cxf.message.Message,java.lang.Exception)",
            "org.apache.cxf.ws.addressing.ContextUtils:java.lang.String getAction(org.apache.cxf.service.model.Extensible)",
            "org.apache.cxf.ws.addressing.MAPAggregator:boolean validateIncomingMAPs(org.apache.cxf.ws.addressing.AddressingProperties,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void propogateAction(org.apache.cxf.ws.addressing.AttributedURIType,org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void restoreExchange(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.addressing.AddressingProperties)",
            "org.apache.cxf.ws.policy.PolicyRegistryImpl:org.apache.neethi.Policy lookup(java.lang.String)",
            "org.apache.cxf.ws.security.policy.interceptors.HttpsTokenInterceptorProvider$HttpsTokenInInterceptor:void assertHttps(java.util.Collection,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.policy.interceptors.HttpsTokenInterceptorProvider$HttpsTokenOutInterceptor:void assertHttps(java.util.Collection,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.trust.STSClient:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:org.apache.cxf.ws.security.tokenstore.SecurityToken getToken(java.lang.String)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:org.apache.ws.security.components.crypto.Crypto getCrypto(org.apache.cxf.ws.security.policy.model.TokenWrapper,java.lang.String,java.lang.String)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:java.util.Properties getProps(java.lang.Object,org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor:void <init>(java.util.Map)",
            "org.apache.cxf.ws.security.wss4j.AbstractWSS4JInterceptor:java.lang.Object getOption(java.lang.String)",
            "org.apache.cxf.ws.security.wss4j.AbstractWSS4JInterceptor:org.apache.ws.security.components.crypto.Crypto loadSignatureCrypto(org.apache.ws.security.handler.RequestData)",
            "org.apache.cxf.ws.security.wss4j.AbstractWSS4JInterceptor:org.apache.ws.security.components.crypto.Crypto loadDecryptionCrypto(org.apache.ws.security.handler.RequestData)",
            "org.apache.cxf.ws.security.wss4j.AbstractWSS4JInterceptor:org.apache.ws.security.components.crypto.Crypto loadEncryptionCrypto(org.apache.ws.security.handler.RequestData)",
            "org.apache.cxf.ws.rm.Source:org.apache.cxf.ws.rm.SourceSequence getSequence(org.apache.cxf.ws.rm.Identifier)",
            "org.apache.cxf.ws.rm.Source:org.apache.cxf.ws.rm.SourceSequence getAssociatedSequence(org.apache.cxf.ws.rm.Identifier)",
            "org.apache.cxf.ws.rm.RMOutInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.Destination:org.apache.cxf.ws.rm.DestinationSequence getSequence(org.apache.cxf.ws.rm.Identifier)",
            "org.apache.cxf.ws.rm.RMManager:org.apache.cxf.ws.rm.RMEndpoint getReliableEndpoint(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.RMManager:void shutdownReliableEndpoint(org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl:java.util.List getSequenceCandidates(java.lang.String)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void add(org.apache.cxf.interceptor.Interceptor,boolean)",
            "org.apache.cxf.workqueue.WorkQueueManagerImpl:org.apache.cxf.workqueue.AutomaticWorkQueue getNamedWorkQueue(java.lang.String)",
            "org.apache.cxf.databinding.AbstractDataBinding:void updateSchemaLocation(org.w3c.dom.Element)",
            "org.apache.cxf.databinding.source.mime.MimeSerializer:void serialize(org.apache.ws.commons.schema.XmlSchemaObject,java.lang.Class,org.w3c.dom.Node)",
            "org.apache.cxf.wsdl.AbstractWSDLPlugin:java.lang.String getOption(java.util.Map,java.lang.String)",
            "org.apache.cxf.wsdl.AbstractWSDLPlugin:java.lang.Object getOption(java.util.Map,java.lang.String,java.lang.Class)",
            "org.apache.cxf.wsdl.AbstractWSDLPlugin:java.lang.Object getOption(java.util.Map,java.lang.Class)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:int getIndentLevel(java.lang.Class)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:java.lang.String getWSDLLocation(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:java.lang.String getEndpointReferenceId(java.util.Map)",
            "org.apache.cxf.service.model.BindingOperationInfo:org.apache.cxf.service.model.BindingFaultInfo getFault(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.AbstractMessageContainer:void addMessagePart(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePart(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:java.lang.Object getExtensionAttribute(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperationForWrapperElement(org.apache.cxf.message.Exchange,javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.service.model.InterfaceInfo:org.apache.cxf.service.model.OperationInfo getOperation(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.MessageInfo getMessage(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.MessageInfo:java.util.List getOrderedParts(java.util.List)",
            "org.apache.cxf.service.model.BindingInfo:org.apache.cxf.service.model.BindingOperationInfo getOperation(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.OperationInfo:org.apache.cxf.service.model.FaultInfo getFault(javax.xml.namespace.QName)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void addImport(org.apache.ws.commons.schema.XmlSchema,java.lang.String)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isWrapped(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isRPC(java.lang.reflect.Method)",
            "org.apache.cxf.binding.BindingFactoryManagerImpl:org.apache.cxf.binding.BindingFactory getBindingFactory(java.lang.String)",
            "org.apache.cxf.binding.soap.interceptor.SoapActionInInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.SoapVersionFactory:org.apache.cxf.binding.soap.SoapVersion getSoapVersion(java.lang.String)",
            "org.apache.cxf.clustering.AbstractStaticFailoverStrategy:java.util.List getAlternateEndpoints(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.clustering.FailoverTargetSelector:void complete(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.clustering.FailoverTargetSelector:void overrideAddressProperty(java.util.Map)",
            "org.apache.cxf.tools.common.Tag:boolean equals(java.lang.Object)",
            "org.apache.cxf.tools.common.ToolContext:void addParameters(java.util.Map)",
            "org.apache.cxf.tools.common.ToolContext:java.lang.Object get(java.lang.String)",
            "org.apache.cxf.tools.common.ToolContext:java.lang.String mapNamespaceToPackageName(java.lang.String)",
            "org.apache.cxf.tools.common.ToolContext:java.lang.String getExcludePackageName(java.lang.String)",
            "org.apache.cxf.tools.common.VelocityGenerator:void doWrite(java.lang.String,java.io.Writer)",
            "org.apache.cxf.tools.common.ProcessorTestBase:boolean assertXmlEquals(java.io.File,java.io.File,java.util.List)",
            "org.apache.cxf.tools.common.ProcessorTestBase:void assertAttributesEquals(javax.xml.namespace.QName,java.util.Map,java.util.Map,java.util.Collection)",
            "org.apache.cxf.tools.common.model.JavaType:java.lang.String getDefaultTypeValue()",
            "org.apache.cxf.tools.common.model.JavaMethod:boolean isEquiv(java.lang.String,java.lang.String)",
            "org.apache.cxf.tools.common.model.JavaParameter:org.apache.cxf.tools.common.model.JAnnotation getAnnotation(java.lang.String)",
            "org.apache.cxf.tools.util.BuiltInTypesJavaMappingUtil:java.lang.String getJType(java.lang.String,java.lang.String)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:java.lang.String getBindingAnnotation(java.lang.String)",
            "org.apache.cxf.tools.util.PropertyUtil:java.lang.String getProperty(java.lang.String)",
            "org.apache.cxf.tools.util.ClassCollector:java.lang.String getTypesFullClassName(java.lang.String,java.lang.String)",
            "org.apache.cxf.wsdl11.SchemaUtil:void extractSchema(javax.wsdl.Definition,org.apache.cxf.common.xmlschema.SchemaCollection,java.util.List)",
            "org.apache.cxf.wsdl11.SchemaUtil:void addSchema(java.lang.String,javax.wsdl.extensions.schema.Schema)",
            "org.apache.cxf.wsdl11.SchemaUtil:boolean isSchemaParsed(java.lang.String,java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:java.util.Collection getImports(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addExtensibilityAttributes(javax.wsdl.extensions.AttributeExtensible,java.util.Map)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(java.net.URL)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(org.w3c.dom.Element)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:org.apache.cxf.service.model.ServiceSchemaInfo getSchemasForDefinition(javax.wsdl.Definition)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void activateViaNS(java.lang.String)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void processExtension(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadAndRegister(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:java.lang.Object getExtension(java.lang.String,java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void <init>(java.util.Map,java.util.Map)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:java.lang.String getBusId(java.util.Map)",
            "org.apache.cxf.bus.CXFBusImpl:java.lang.Object getExtension(java.lang.Class)",
            "org.apache.cxf.attachment.AttachmentImpl:java.lang.String getHeader(java.lang.String)",
            "org.apache.cxf.frontend.ClientFactoryBean:void applyExtraClass()",
            "org.apache.cxf.frontend.ClientFactoryBean:void applyProperties(org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.frontend.SimpleMethodDispatcher:org.apache.cxf.service.model.BindingOperationInfo getBindingOperation(java.lang.reflect.Method,org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.frontend.SimpleMethodDispatcher:java.lang.reflect.Method getMethod(org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.frontend.SimpleMethodDispatcher:java.lang.reflect.Method getPrimaryMethod(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory:org.apache.cxf.endpoint.Endpoint createEndpoint()",
            "org.apache.cxf.frontend.ServerFactoryBean:void applyExtraClass()",
            "org.apache.cxf.aegis.Context:java.lang.Object getProperty(java.lang.Class)",
            "org.apache.cxf.aegis.util.jdom.StaxBuilder:void buildTree(org.jdom.JDOMFactory,javax.xml.stream.XMLStreamReader,org.jdom.Document)",
            "org.apache.cxf.aegis.util.jdom.StaxBuilder:int resolveAttrType(java.lang.String)",
            "org.apache.cxf.aegis.util.stax.JDOMStreamWriter:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.aegis.util.stax.JDOMStreamReader:java.lang.String getDeclaredURI(java.lang.String)",
            "org.apache.cxf.aegis.databinding.XMLStreamDataWriter:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.aegis.databinding.ElementDataWriter:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:org.apache.cxf.aegis.type.Type getType(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.aegis.type.basic.XMLBeanTypeInfo:org.apache.cxf.aegis.type.basic.BeanTypePropertyInfo getPropertyInfo(javax.xml.namespace.QName)",
            "org.apache.cxf.aegis.type.basic.BeanType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.InterfaceInvocationHandler:java.lang.Object readProperty(java.lang.Object)",
            "org.apache.cxf.aegis.type.basic.BeanTypeInfo:org.apache.cxf.aegis.type.Type getType(javax.xml.namespace.QName)",
            "org.apache.cxf.aegis.type.basic.BeanTypeInfo:javax.xml.namespace.QName getMappedTypeName(javax.xml.namespace.QName)",
            "org.apache.cxf.aegis.type.basic.BeanTypeInfo:java.lang.String getPropertyNameFromMappedName(javax.xml.namespace.QName)",
            "org.apache.cxf.aegis.type.encoded.MarshalRegistry:java.lang.String getInstanceId(java.lang.Object)",
            "org.apache.cxf.aegis.type.XMLTypeCreator:org.w3c.dom.Document getDocument(java.lang.Class)",
            "org.apache.cxf.aegis.type.DefaultTypeMapping:org.apache.cxf.aegis.type.Type getType(java.lang.Class)",
            "org.apache.cxf.aegis.type.DefaultTypeMapping:org.apache.cxf.aegis.type.Type getType(javax.xml.namespace.QName)",
            "org.apache.cxf.aegis.type.DefaultTypeMapping:javax.xml.namespace.QName getTypeQName(java.lang.Class)",
            "org.apache.cxf.jaxws.handler.HandlerResolverImpl:java.util.List getHandlerChain(javax.xml.ws.handler.PortInfo)",
            "org.apache.cxf.jaxws.handler.InitParamResourceResolver:java.lang.Object resolve(java.lang.String,java.lang.Class)",
            "org.apache.cxf.jaxws.support.JaxWsServiceConfiguration:javax.jws.WebParam getWebParam(java.lang.reflect.Method,int)",
            "org.apache.cxf.jaxws.support.JaxWsServiceConfiguration:java.lang.Class getResponseWrapper(java.lang.reflect.Method)",
            "org.apache.cxf.jaxws.support.JaxWsServiceConfiguration:java.lang.Class getRequestWrapper(java.lang.reflect.Method)",
            "org.apache.cxf.jaxws.JaxWsClientProxy:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])",
            "org.apache.cxf.jaxws.ServiceImpl:java.lang.Object createPort(javax.xml.namespace.QName,org.apache.cxf.ws.addressing.EndpointReferenceType,java.lang.Class,javax.xml.ws.WebServiceFeature[])",
            "org.apache.cxf.jaxws.ServiceImpl:org.apache.cxf.jaxws.handler.PortInfoImpl getPortInfo(javax.xml.namespace.QName)",
            "org.apache.cxf.jaxws.EndpointImpl:void checkProperties()",
            "org.apache.cxf.jaxws.DispatchImpl:java.lang.Object invoke(java.lang.Object,boolean)",
            "org.apache.cxf.jaxws.DispatchImpl:java.util.concurrent.Future invokeAsync(java.lang.Object,javax.xml.ws.AsyncHandler)",
            "org.apache.cxf.jaxws.interceptors.SwAOutInterceptor:boolean callSWARefMethod(javax.xml.bind.JAXBContext)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:void <init>(java.util.Map,org.apache.cxf.message.Exchange,javax.xml.ws.handler.MessageContext$Scope)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:void copyScoped(java.util.Map)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:java.lang.String mapKey(java.lang.String)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:java.lang.String mapKeyReverse(java.lang.String)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:java.lang.Object put(java.lang.String,java.lang.Object,javax.xml.ws.handler.MessageContext$Scope)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:javax.xml.ws.handler.MessageContext$Scope getScope(java.lang.String)",
            "org.apache.cxf.jaxws.AbstractJAXWSMethodInvoker:void updateWebServiceContext(org.apache.cxf.message.Exchange,javax.xml.ws.handler.MessageContext)",
            "org.apache.cxf.xmlbeans.XmlBeansSchemaInitializer:org.apache.ws.commons.schema.XmlSchema getSchema(org.apache.xmlbeans.SchemaTypeSystem,java.lang.String)",
            "org.apache.cxf.xmlbeans.XmlBeansSchemaInitializer:void mapClass(org.apache.cxf.service.model.MessagePartInfo,java.lang.Class)",
            "org.apache.cxf.xmlbeans.tools.XMLBeansSchemaTypeUtils:java.lang.String getNaturalJavaClassName(org.apache.xmlbeans.SchemaType)"
        ]
    },
    "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:java.lang.Object remove(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:void reap()",
            "org.apache.cxf.common.util.CacheMap:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.common.util.TwoStageMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.common.util.TwoStageMap:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.message.MessageImpl:void removeContent(java.lang.Class)",
            "org.apache.cxf.transport.ConduitInitiatorManagerImpl:void deregisterConduitInitiator(java.lang.String)",
            "org.apache.cxf.transport.http.Cookie:void handleSetCookie(java.util.Map,java.util.List)",
            "org.apache.cxf.transport.http.HTTPConduit:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection redirectRetransmit(java.net.HttpURLConnection,org.apache.cxf.message.Message,org.apache.cxf.io.CacheAndWriteOutputStream)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:java.io.OutputStream flushHeaders(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.gzip.GZIPInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.DestinationFactoryManagerImpl:void deregisterDestinationFactory(java.lang.String)",
            "org.apache.cxf.transport.servlet.ServletTransportFactory:void removeDestination(java.lang.String)",
            "org.apache.cxf.transport.servlet.AbstractCXFServlet:void destroy()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPTransportFactory:void removeDestination(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void destroyForPort(int)",
            "org.apache.cxf.transport.jms.JMSConduit:void sendExchange(org.apache.cxf.message.Exchange,java.lang.Object)",
            "org.apache.cxf.transport.jms.JMSConduit:void onMessage(javax.jms.Message)",
            "org.apache.cxf.extension.RegistryImpl:void unregister(java.lang.Object)",
            "org.apache.cxf.endpoint.ClientImpl$EchoContext:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void handleFault(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void restoreExchange(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.addressing.AddressingProperties)",
            "org.apache.cxf.ws.policy.PolicyRegistryImpl:void remove(java.lang.String)",
            "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:void remove(org.apache.cxf.ws.security.tokenstore.SecurityToken)",
            "org.apache.cxf.ws.rm.Source:void removeSequence(org.apache.cxf.ws.rm.SourceSequence)",
            "org.apache.cxf.ws.rm.Destination:void removeSequence(org.apache.cxf.ws.rm.DestinationSequence)",
            "org.apache.cxf.ws.rm.RMManager:void shutdownReliableEndpoint(org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl:void purgeAcknowledged(org.apache.cxf.ws.rm.SourceSequence)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils$SchemaLSResourceResolver:org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.service.model.AbstractMessageContainer:void removeMessagePart(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:void setProperty(java.lang.String,java.lang.Object)",
            "org.apache.cxf.service.model.InterfaceInfo:void removeOperation(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.BindingInfo:void removeOperation(org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.service.model.OperationInfo:void removeFault(javax.xml.namespace.QName)",
            "org.apache.cxf.binding.BindingFactoryManagerImpl:void unregisterBindingFactory(java.lang.String)",
            "org.apache.cxf.clustering.FailoverTargetSelector:void complete(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.tools.common.ToolContext:void remove(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void removeDefinition(javax.wsdl.Definition)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void activateViaNS(java.lang.String)",
            "org.apache.cxf.aegis.type.DefaultTypeMapping:void removeType(org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.jaxws.JaxWsClientProxy:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.jaxws.AbstractJAXWSMethodInvoker:void updateWebServiceContext(org.apache.cxf.message.Exchange,javax.xml.ws.handler.MessageContext)"
        ]
    },
    "org.apache.cxf.interceptor.AttachmentOutInterceptor$AttachmentOutEndingInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxws.context.WrappedMessageContext:java.lang.Object createAttachments(org.apache.cxf.message.Message,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.context.WrappedMessageContext:java.lang.Object get(java.lang.Object)"
        ]
    },
    "org.apache.cxf.interceptor.AttachmentInInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.attachment.AttachmentDeserializer:void initializeRootMessage()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.AttachmentDeserializer:void initializeAttachments()"
        ]
    },
    "org.apache.cxf.interceptor.AttachmentOutInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.ws.addressing.MAPAggregator:void setupNamespace(org.apache.cxf.ws.addressing.AddressingPropertiesImpl,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.MAPAggregator:org.apache.cxf.ws.addressing.AddressingPropertiesImpl getMAPs(org.apache.cxf.message.Message,boolean,boolean)"
        ]
    },
    "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor:org.apache.cxf.ws.security.policy.model.Binding getBinding(org.apache.cxf.ws.policy.AssertionInfoMap)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)"
        ]
    },
    "org.apache.cxf.ws.security.policy.interceptors.IssuedTokenInterceptorProvider$IssuedTokenOutInterceptor:org.apache.cxf.ws.security.policy.model.Trust10 getTrust10(org.apache.cxf.ws.policy.AssertionInfoMap)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.policy.interceptors.IssuedTokenInterceptorProvider$IssuedTokenOutInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.ws.security.policy.interceptors.IssuedTokenInterceptorProvider$IssuedTokenOutInterceptor:org.apache.cxf.ws.security.policy.model.Trust13 getTrust13(org.apache.cxf.ws.policy.AssertionInfoMap)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.policy.interceptors.IssuedTokenInterceptorProvider$IssuedTokenOutInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.ws.security.policy.interceptors.SecureConversationTokenInterceptorProvider:org.apache.cxf.ws.security.policy.model.Trust10 getTrust10(org.apache.cxf.ws.policy.AssertionInfoMap)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationTokenInterceptorProvider:java.lang.String setupClient(org.apache.cxf.ws.security.trust.STSClient,org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.ws.security.policy.model.SecureConversationToken,boolean)"
        ]
    },
    "org.apache.cxf.ws.security.policy.interceptors.SecureConversationTokenInterceptorProvider:org.apache.cxf.ws.security.policy.model.Trust13 getTrust13(org.apache.cxf.ws.policy.AssertionInfoMap)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationTokenInterceptorProvider:java.lang.String setupClient(org.apache.cxf.ws.security.trust.STSClient,org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.ws.security.policy.model.SecureConversationToken,boolean)"
        ]
    },
    "org.apache.cxf.ws.security.policy.interceptors.SecureConversationTokenInterceptorProvider:org.apache.cxf.ws.policy.PolicyAssertion getAddressingPolicy(org.apache.cxf.ws.policy.AssertionInfoMap,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationTokenInterceptorProvider:java.lang.String setupClient(org.apache.cxf.ws.security.trust.STSClient,org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.ws.security.policy.model.SecureConversationToken,boolean)"
        ]
    },
    "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:boolean containsPolicy(org.apache.cxf.ws.policy.AssertionInfoMap,javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:void computeAction(org.apache.cxf.binding.soap.SoapMessage,org.apache.ws.security.handler.RequestData)"
        ]
    },
    "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:boolean isEmpty()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.xmlschema.FixedExtensionDeserializer:void deserialize(org.apache.ws.commons.schema.XmlSchemaObject,javax.xml.namespace.QName,org.w3c.dom.Node)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:boolean isEmpty()",
            "org.apache.cxf.common.util.CacheMap:boolean isEmpty()",
            "org.apache.cxf.common.util.TwoStageMap:boolean isEmpty()",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:boolean isEmpty()",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureWithWildCard(java.lang.String,java.lang.Object)",
            "org.apache.cxf.binding.soap.SoapMessage:boolean hasAdditionalEnvNs()",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void parseWSDL(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void copyExtensionAttributes(org.apache.cxf.service.model.AbstractPropertiesHolder,javax.wsdl.extensions.AttributeExtensible)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void activateAll()",
            "org.apache.cxf.aegis.type.encoded.MarshalRegistry$1:boolean hasNext()",
            "org.apache.cxf.jaxws.handler.soap.SOAPMessageContextImpl:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.jaxws.handler.logical.LogicalMessageContextImpl:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:boolean isEmpty()",
            "org.apache.cxf.jaxws.AbstractJAXWSMethodInvoker:void updateWebServiceContext(org.apache.cxf.message.Exchange,javax.xml.ws.handler.MessageContext)"
        ]
    },
    "org.apache.cxf.jaxws.interceptors.MessageModeInInterceptor:void doDataSource(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.interceptors.MessageModeInInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.frontend.ClientFactoryBean:org.apache.cxf.endpoint.Client create()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.frontend.ClientProxyFactoryBean:java.lang.Object create()"
        ]
    },
    "org.apache.cxf.jaxws.JAXWSMethodDispatcher:org.apache.cxf.service.model.BindingOperationInfo getBindingOperation(java.lang.reflect.Method,org.apache.cxf.endpoint.Endpoint)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.frontend.ClientProxy:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])",
            "org.apache.cxf.jaxws.JaxWsClientProxy:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])"
        ]
    },
    "org.apache.cxf.jaxws.JaxWsServerFactoryBean:org.apache.cxf.service.model.BindingInfo createBindingInfo()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory:org.apache.cxf.service.model.EndpointInfo createEndpointInfo()"
        ]
    },
    "org.apache.cxf.frontend.ServerFactoryBean:org.apache.cxf.endpoint.Server create()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.JaxWsServerFactoryBean:org.apache.cxf.endpoint.Server create()"
        ]
    },
    "org.apache.cxf.aegis.DatabindingException:java.lang.String getMessage()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.JAXBEncoderDecoder:void marshall(javax.xml.bind.Marshaller,java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,java.lang.Object)",
            "org.apache.cxf.jaxb.JAXBEncoderDecoder:void marshalWithBridge(javax.xml.namespace.QName,java.lang.Class,java.lang.'annotation'.Annotation[],java.util.Set,java.lang.Object,java.lang.Object,javax.xml.bind.attachment.AttachmentMarshaller)",
            "org.apache.cxf.jaxb.JAXBEncoderDecoder:java.lang.Object unmarshalWithBridge(javax.xml.namespace.QName,java.lang.Class,java.lang.'annotation'.Annotation[],java.util.Set,java.lang.Object,javax.xml.bind.attachment.AttachmentUnmarshaller)",
            "org.apache.cxf.jaxb.JAXBEncoderDecoder:void marshallException(javax.xml.bind.Marshaller,java.lang.Exception,org.apache.cxf.service.model.MessagePartInfo,java.lang.Object)",
            "org.apache.cxf.jaxb.JAXBEncoderDecoder:java.lang.Exception unmarshallException(javax.xml.bind.Unmarshaller,java.lang.Object,org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.jaxb.JAXBEncoderDecoder:java.lang.Object unmarshall(javax.xml.bind.Unmarshaller,java.lang.Object,javax.xml.namespace.QName,java.lang.Class,boolean)",
            "org.apache.cxf.jaxb.JAXBEncoderDecoder:java.util.List unmarshallArray(javax.xml.bind.Unmarshaller,java.lang.Object,javax.xml.namespace.QName,java.lang.Class,java.util.List)",
            "org.apache.cxf.jaxb.io.DataWriterImpl:javax.xml.bind.Marshaller createMarshaller(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.jaxb.io.DataReaderImpl:javax.xml.bind.Unmarshaller createUnmarshaller()",
            "org.apache.cxf.interceptor.Fault:void <init>(java.lang.Throwable)",
            "org.apache.cxf.interceptor.Fault:void <init>(java.lang.Throwable,javax.xml.namespace.QName)",
            "org.apache.cxf.interceptor.ClientFaultConverter:void processFaultDetail(org.apache.cxf.interceptor.Fault,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.FaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.https.SSLUtils:javax.net.ssl.KeyManager[] loadKeyStore(javax.net.ssl.KeyManagerFactory,java.security.KeyStore,java.io.ByteArrayInputStream,java.lang.String,java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.transport.https.SSLUtils:javax.net.ssl.TrustManager[] getTrustStoreManagers(boolean,java.lang.String,java.lang.String,java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void activate()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void doService(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine:void addServant(java.net.URL,org.apache.cxf.transport.http_jetty.JettyHTTPHandler)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine:void removeServant(java.net.URL)",
            "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:org.apache.cxf.endpoint.Client createClient(java.lang.String,javax.xml.namespace.QName,java.lang.ClassLoader,javax.xml.namespace.QName,java.util.List)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void policyNotAsserted(org.apache.cxf.ws.policy.PolicyAssertion,java.lang.Exception)",
            "org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor:javax.security.auth.callback.CallbackHandler getCallback(org.apache.ws.security.handler.RequestData,int)",
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)",
            "org.apache.cxf.service.invoker.AbstractInvoker:org.apache.cxf.interceptor.Fault createFault(java.lang.Throwable,java.lang.reflect.Method,java.util.List,boolean)",
            "org.apache.cxf.tools.util.URLFactory:java.net.URLStreamHandler findHandler(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void parseWSDL(java.lang.String)",
            "org.apache.cxf.aegis.DatabindingException:java.lang.String getMessage()",
            "org.apache.cxf.aegis.type.basic.BeanType:void writeProperty(javax.xml.namespace.QName,java.lang.Object,java.lang.Object,java.lang.Class,org.apache.cxf.aegis.type.basic.BeanTypeInfo)",
            "org.apache.cxf.jaxws.handler.HandlerChainInvoker:void setFaultMessage(javax.xml.ws.handler.MessageContext,java.lang.Exception)",
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerFaultOutInterceptor:void handleMessageInternal(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.jaxws.support.ServiceDelegateAccessor:org.apache.cxf.jaxws.ServiceImpl get(javax.xml.ws.Service)",
            "org.apache.cxf.jaxws.JaxWsClientProxy:javax.xml.soap.SOAPFault createSoapFault(javax.xml.ws.soap.SOAPBinding,java.lang.Exception)",
            "org.apache.cxf.jaxws.interceptors.WebFaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.xmlbeans.tools.XMLBeansToolingDataBinding:org.apache.xmlbeans.SchemaTypeSystem loadTypeSystem(java.lang.String,java.lang.String[],java.util.Set,java.io.File,java.io.File,org.xml.sax.EntityResolver)"
        ]
    },
    "org.apache.cxf.aegis.type.xml.JDOMElementType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.databinding.XMLStreamDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.aegis.databinding.ElementDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,org.w3c.dom.Element)",
            "org.apache.cxf.aegis.AegisXMLStreamDataWriter:void write(java.lang.Object,javax.xml.namespace.QName,boolean,javax.xml.stream.XMLStreamWriter,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.basic.ObjectType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.BeanType:void writeObjectInternal(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,boolean)",
            "org.apache.cxf.aegis.type.basic.BeanType:void writeElement(javax.xml.namespace.QName,java.lang.Object,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.ArrayType:void writeValue(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type,java.lang.String,java.lang.String)",
            "org.apache.cxf.aegis.type.encoded.StructType:void writeElement(javax.xml.namespace.QName,java.lang.Object,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.SoapArrayType:void writeValue(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.collection.MapType:void writeEntry(org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.type.Type,java.util.Map$Entry)"
        ]
    },
    "org.apache.cxf.aegis.type.xml.JDOMDocumentType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.databinding.XMLStreamDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.aegis.databinding.ElementDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,org.w3c.dom.Element)",
            "org.apache.cxf.aegis.AegisXMLStreamDataWriter:void write(java.lang.Object,javax.xml.namespace.QName,boolean,javax.xml.stream.XMLStreamWriter,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.basic.ObjectType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.BeanType:void writeObjectInternal(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,boolean)",
            "org.apache.cxf.aegis.type.basic.BeanType:void writeElement(javax.xml.namespace.QName,java.lang.Object,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.ArrayType:void writeValue(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type,java.lang.String,java.lang.String)",
            "org.apache.cxf.aegis.type.encoded.StructType:void writeElement(javax.xml.namespace.QName,java.lang.Object,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.SoapArrayType:void writeValue(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.collection.MapType:void writeEntry(org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.type.Type,java.util.Map$Entry)"
        ]
    },
    "org.apache.cxf.aegis.util.jdom.StaxBuilder:org.jdom.Document buildInternal(javax.xml.stream.XMLStreamReader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.util.jdom.StaxBuilder:org.jdom.Document build(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.aegis.util.jdom.StaxBuilder:org.jdom.Document build(java.io.InputStream)",
            "org.apache.cxf.aegis.util.jdom.StaxBuilder:org.jdom.Document build(java.io.Reader)"
        ]
    },
    "org.apache.cxf.aegis.util.stax.JDOMStreamReader:void <init>(org.jdom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.util.stax.JDOMStreamReader:void <init>(org.jdom.Document)",
            "org.apache.cxf.aegis.xml.jdom.JDOMReader:javax.xml.stream.XMLStreamReader getXMLStreamReader()"
        ]
    },
    "org.apache.cxf.aegis.util.stax.JDOMStreamReader:int nextChild()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.AbstractDOMStreamReader:int next()"
        ]
    },
    "org.apache.cxf.aegis.util.stax.JDOMStreamWriter:java.lang.String getPrefix(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:java.lang.String getUniquePrefix(javax.xml.stream.XMLStreamWriter,java.lang.String,boolean)",
            "org.apache.cxf.ws.security.policy.model.InitiatorToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.RequiredParts:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.TransportToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.AlgorithmSuite:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.Wss11:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.EncryptionToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SymmetricBinding:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.X509Token:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SignatureToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.Trust10:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.HttpsToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.AsymmetricBinding:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.ContentEncryptedElements:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.KeyValueToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SignedEncryptedElements:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.Trust13:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.RequiredElements:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.UsernameToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SupportingToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.TransportBinding:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SignedEncryptedParts:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.Layout:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.IssuedToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SecureConversationToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.Wss10:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.ProtectionToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.RecipientToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.binding.soap.interceptor.Soap11FaultOutInterceptor$Soap11FaultOutInterceptorInternal:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.aegis.util.jdom.StaxSerializer:void writeElement(org.jdom.Element,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.aegis.xml.stax.ElementWriter:java.lang.String getPrefixForNamespace(java.lang.String)",
            "org.apache.cxf.aegis.xml.stax.ElementWriter:java.lang.String getPrefixForNamespace(java.lang.String,java.lang.String)",
            "org.apache.cxf.xmlbeans.DataWriterImpl:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamWriter)"
        ]
    },
    "org.apache.cxf.aegis.util.stax.JDOMNamespaceContext:java.lang.String getPrefix(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.W3CDOMStreamWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.W3CDOMStreamWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.W3CDOMStreamWriter:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.wsdl.JAXBExtensionHelper$MappingReaderDelegate$1:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.aegis.util.NamespaceHelper:java.lang.String getUniquePrefix(javax.xml.stream.XMLStreamWriter,java.lang.String,boolean)",
            "org.apache.cxf.aegis.xml.stax.ElementWriter:void writeStartElement()",
            "org.apache.cxf.aegis.xml.stax.ElementWriter:java.lang.String getPrefixForNamespace(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.aegis.xml.jdom.JDOMWriter:java.lang.String getUniquePrefix(org.jdom.Element,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.xml.jdom.JDOMWriter:void writeValue(java.lang.Object,java.lang.String,java.lang.String)",
            "org.apache.cxf.aegis.xml.jdom.JDOMWriter:org.apache.cxf.aegis.xml.MessageWriter getElementWriter(java.lang.String,java.lang.String)",
            "org.apache.cxf.aegis.xml.jdom.JDOMWriter:java.lang.String getPrefixForNamespace(java.lang.String)",
            "org.apache.cxf.aegis.xml.jdom.JDOMWriter:java.lang.String getPrefixForNamespace(java.lang.String,java.lang.String)",
            "org.apache.cxf.aegis.xml.jdom.JDOMWriter:org.apache.cxf.aegis.xml.MessageWriter getAttributeWriter(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.aegis.util.stax.JDOMNamespaceContext:java.util.Iterator getPrefixes(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl.JAXBExtensionHelper$MappingReaderDelegate$1:java.util.Iterator getPrefixes(java.lang.String)",
            "org.apache.cxf.aegis.util.jdom.StaxSerializer:boolean isDeclared(javax.xml.stream.XMLStreamWriter,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.aegis.AegisContext:void initialize()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void ensureInitialized()",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void initialize(org.apache.cxf.service.Service)"
        ]
    },
    "org.apache.cxf.aegis.type.basic.XMLBeanTypeInfo:boolean registerType(java.beans.PropertyDescriptor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.basic.BeanTypeInfo:org.apache.cxf.aegis.type.Type getType(javax.xml.namespace.QName)"
        ]
    },
    "org.apache.cxf.aegis.type.basic.XMLBeanTypeInfo:void mapProperty(java.beans.PropertyDescriptor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.basic.BeanTypeInfo:void initializeSync()"
        ]
    },
    "org.apache.cxf.aegis.type.basic.BeanType:void writeObjectFromObjectType(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.basic.ObjectType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)"
        ]
    },
    "org.apache.cxf.aegis.type.basic.BeanType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.databinding.XMLStreamDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.aegis.databinding.ElementDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,org.w3c.dom.Element)",
            "org.apache.cxf.aegis.AegisXMLStreamDataWriter:void write(java.lang.Object,javax.xml.namespace.QName,boolean,javax.xml.stream.XMLStreamWriter,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.basic.ObjectType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.BeanType:void writeObjectInternal(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,boolean)",
            "org.apache.cxf.aegis.type.basic.BeanType:void writeElement(javax.xml.namespace.QName,java.lang.Object,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.ArrayType:void writeValue(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type,java.lang.String,java.lang.String)",
            "org.apache.cxf.aegis.type.encoded.StructType:void writeElement(javax.xml.namespace.QName,java.lang.Object,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.SoapArrayType:void writeValue(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.collection.MapType:void writeEntry(org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.type.Type,java.util.Map$Entry)"
        ]
    },
    "org.apache.cxf.aegis.type.encoded.SoapRefType:java.util.Set getDependencies()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void addDependencies(java.util.Set,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.encoded.SoapRefType:java.util.Set getDependencies()"
        ]
    },
    "org.apache.cxf.aegis.type.encoded.SoapRefType:void writeSchema(org.apache.ws.commons.schema.XmlSchema)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void createSchemas(org.apache.cxf.service.Service,java.util.Set)",
            "org.apache.cxf.aegis.type.encoded.SoapRefType:void writeSchema(org.apache.ws.commons.schema.XmlSchema)"
        ]
    },
    "org.apache.cxf.aegis.type.basic.BeanTypeInfo:void getInterfacePropertyDescriptors(java.lang.Class,java.util.List,java.util.Set)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.basic.BeanTypeInfo:java.beans.PropertyDescriptor[] getInterfacePropertyDescriptors(java.lang.Class)",
            "org.apache.cxf.aegis.type.basic.BeanTypeInfo:void getInterfacePropertyDescriptors(java.lang.Class,java.util.List,java.util.Set)"
        ]
    },
    "org.apache.cxf.aegis.type.encoded.ArrayTypeInfo:void <init>(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.type.TypeMapping)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.encoded.SoapArrayType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)"
        ]
    },
    "org.apache.cxf.aegis.type.encoded.ArrayTypeInfo:void <init>(javax.xml.namespace.NamespaceContext,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.aegis.type.encoded.ArrayTypeInfo:void writeAttribute(org.apache.cxf.aegis.xml.MessageWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.encoded.SoapArrayType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)"
        ]
    },
    "org.apache.cxf.aegis.type.encoded.TrailingBlocks:java.util.List readBlocks(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.aegis.type.XMLTypeCreator:org.apache.cxf.aegis.type.AbstractTypeCreator$TypeClassInfo createClassInfo(java.lang.reflect.Method,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.databinding.AegisDatabinding:org.apache.cxf.aegis.type.Type getParameterType(org.apache.cxf.service.Service,org.apache.cxf.aegis.type.TypeMapping,org.apache.cxf.service.model.MessagePartInfo,int)",
            "org.apache.cxf.aegis.type.AbstractTypeCreator:org.apache.cxf.aegis.type.Type createType(java.lang.reflect.Method,int)",
            "org.apache.cxf.aegis.type.AbstractTypeCreator:javax.xml.namespace.QName getElementName(java.lang.reflect.Method,int)",
            "org.apache.cxf.aegis.type.java5.Java5TypeCreator:org.apache.cxf.aegis.type.AbstractTypeCreator$TypeClassInfo createClassInfo(java.lang.reflect.Method,int)",
            "org.apache.cxf.aegis.type.XMLTypeCreator:org.apache.cxf.aegis.type.AbstractTypeCreator$TypeClassInfo createClassInfo(java.lang.reflect.Method,int)"
        ]
    },
    "org.apache.cxf.aegis.databinding.XMLStreamDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.databinding.XMLStreamDataWriter:void write(java.lang.Object,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.aegis.databinding.XMLStreamDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,java.lang.Object)"
        ]
    },
    "org.apache.cxf.aegis.databinding.ElementDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.databinding.ElementDataWriter:void write(java.lang.Object,org.w3c.dom.Element)",
            "org.apache.cxf.aegis.databinding.ElementDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,java.lang.Object)"
        ]
    },
    "org.apache.cxf.aegis.AegisXMLStreamDataWriter:void write(java.lang.Object,javax.xml.namespace.QName,boolean,javax.xml.stream.XMLStreamWriter,org.apache.cxf.aegis.type.Type)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.AegisXMLStreamDataWriter:void write(java.lang.Object,javax.xml.namespace.QName,boolean,java.lang.Object,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.AegisElementDataWriter:void write(java.lang.Object,javax.xml.namespace.QName,boolean,org.w3c.dom.Element,org.apache.cxf.aegis.type.Type)"
        ]
    },
    "org.apache.cxf.aegis.type.basic.ObjectType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.databinding.XMLStreamDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.aegis.databinding.ElementDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,org.w3c.dom.Element)",
            "org.apache.cxf.aegis.AegisXMLStreamDataWriter:void write(java.lang.Object,javax.xml.namespace.QName,boolean,javax.xml.stream.XMLStreamWriter,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.basic.ObjectType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.BeanType:void writeObjectInternal(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,boolean)",
            "org.apache.cxf.aegis.type.basic.BeanType:void writeElement(javax.xml.namespace.QName,java.lang.Object,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.ArrayType:void writeValue(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type,java.lang.String,java.lang.String)",
            "org.apache.cxf.aegis.type.encoded.StructType:void writeElement(javax.xml.namespace.QName,java.lang.Object,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.SoapArrayType:void writeValue(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.encoded.TrailingBlocks:java.util.List writeBlocks(org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.collection.MapType:void writeEntry(org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.type.Type,java.util.Map$Entry)"
        ]
    },
    "org.apache.cxf.aegis.type.basic.BeanType:void writeElement(javax.xml.namespace.QName,java.lang.Object,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.basic.BeanType:void writeObjectInternal(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,boolean)"
        ]
    },
    "org.apache.cxf.aegis.type.basic.ArrayType:void writeValue(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.basic.ArrayType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.collection.CollectionType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)"
        ]
    },
    "org.apache.cxf.aegis.type.encoded.StructType:void writeElement(javax.xml.namespace.QName,java.lang.Object,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.basic.BeanType:void writeObjectInternal(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,boolean)"
        ]
    },
    "org.apache.cxf.aegis.type.encoded.SoapArrayType:void writeValue(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.encoded.SoapArrayType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)"
        ]
    },
    "org.apache.cxf.aegis.type.collection.MapType:void writeEntry(org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.type.Type,java.util.Map$Entry)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.collection.MapType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)"
        ]
    },
    "org.apache.cxf.jaxws.JaxWsProxyFactoryBean:java.lang.Object create()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.ServiceImpl:java.lang.Object createPort(javax.xml.namespace.QName,org.apache.cxf.ws.addressing.EndpointReferenceType,java.lang.Class,javax.xml.ws.WebServiceFeature[])"
        ]
    },
    "org.apache.cxf.jaxws.handler.HandlerResolverImpl:java.util.List getHandlerChain(javax.xml.ws.handler.PortInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.ServiceImpl:java.lang.Object createPort(javax.xml.namespace.QName,org.apache.cxf.ws.addressing.EndpointReferenceType,java.lang.Class,javax.xml.ws.WebServiceFeature[])"
        ]
    },
    "org.apache.cxf.jaxws.handler.HandlerChainInvoker:void <init>(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxws.handler.AbstractJAXWSHandlerInterceptor:org.apache.cxf.jaxws.handler.HandlerChainInvoker getInvoker(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.handler.AbstractProtocolHandlerInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerInterceptor:boolean handleMessageInternal(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerInterceptor:void handleAbort(org.apache.cxf.binding.soap.SoapMessage,javax.xml.ws.handler.MessageContext)",
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerInterceptor:void handleFault(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerFaultInInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerFaultInInterceptor:void handleAbort(org.apache.cxf.binding.soap.SoapMessage,javax.xml.ws.handler.MessageContext)",
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerFaultOutInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerFaultOutInterceptor:void handleMessageInternal(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.jaxws.handler.logical.LogicalHandlerFaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.handler.logical.LogicalHandlerFaultOutInterceptor$LogicalHandlerFaultOutEndingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.handler.logical.LogicalHandlerOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.handler.logical.LogicalHandlerOutInterceptor$LogicalHandlerOutEndingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.handler.logical.LogicalHandlerInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.handler.logical.LogicalHandlerFaultInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.handler.AbstractJAXWSHandlerInterceptor:void onCompletion(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.handler.AbstractJAXWSHandlerInterceptor:boolean isMEPComlete(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxws.handler.HandlerChainInvoker:boolean invokeHandlerChainHandleFault(java.util.List,javax.xml.ws.handler.MessageContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.handler.HandlerChainInvoker:boolean invokeLogicalHandlersHandleFault(boolean,javax.xml.ws.handler.LogicalMessageContext)",
            "org.apache.cxf.jaxws.handler.HandlerChainInvoker:boolean invokeProtocolHandlersHandleFault(boolean,javax.xml.ws.handler.MessageContext)"
        ]
    },
    "org.apache.cxf.jaxws.handler.HandlerChainInvoker:boolean invokeHandlerChain(java.util.List,javax.xml.ws.handler.MessageContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.handler.HandlerChainInvoker:boolean invokeLogicalHandlers(boolean,javax.xml.ws.handler.LogicalMessageContext)",
            "org.apache.cxf.jaxws.handler.HandlerChainInvoker:boolean invokeProtocolHandlers(boolean,javax.xml.ws.handler.MessageContext)"
        ]
    },
    "org.apache.cxf.jaxws.handler.AnnotationHandlerChainBuilder:java.util.List buildHandlerChainFromClass(java.lang.Class,java.util.List,javax.xml.namespace.QName,javax.xml.namespace.QName,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.handler.AnnotationHandlerChainBuilder:java.util.List buildHandlerChainFromClass(java.lang.Class,javax.xml.namespace.QName,javax.xml.namespace.QName,java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxws.handler.HandlerChainBuilder:java.util.List buildHandlerChainFromConfiguration(org.apache.cxf.jaxws.javaee.PortComponentHandlerType)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxws.handler.HandlerChainBuilder:java.util.List buildHandlerChain(org.apache.cxf.jaxws.javaee.PortComponentHandlerType,java.lang.ClassLoader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.handler.AnnotationHandlerChainBuilder:void processHandlerElement(org.w3c.dom.Element,java.util.List)",
            "org.apache.cxf.jaxws.handler.HandlerChainBuilder:java.util.List buildHandlerChainFromConfiguration(org.apache.cxf.jaxws.javaee.PortComponentHandlerType)",
            "org.apache.cxf.jaxws.handler.HandlerChainBuilder:java.util.List buildHandlerChainFromConfiguration(java.util.List)"
        ]
    },
    "org.apache.cxf.jaxws.handler.soap.SOAPHandlerInterceptor:javax.xml.ws.handler.MessageContext createProtocolMessageContext(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.handler.AbstractProtocolHandlerInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxws.support.JaxWsEndpointImpl:void extractWsdlExtensibilities(org.apache.cxf.service.model.EndpointInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.support.JaxWsEndpointImpl:void <init>(org.apache.cxf.Bus,org.apache.cxf.service.Service,org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.jaxws.support.JaxWsImplementorInfo,java.util.List,java.util.List,boolean)"
        ]
    },
    "org.apache.cxf.jaxws.support.JaxWsEndpointImpl:void resolveFeatures()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.support.JaxWsEndpointImpl:void <init>(org.apache.cxf.Bus,org.apache.cxf.service.Service,org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.jaxws.support.JaxWsImplementorInfo,java.util.List,java.util.List,boolean)"
        ]
    },
    "org.apache.cxf.jaxws.support.JaxWsEndpointImpl:void addAddressingFeature(org.apache.cxf.feature.AbstractFeature)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.support.JaxWsEndpointImpl:void extractWsdlExtensibilities(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.jaxws.support.JaxWsEndpointImpl:void resolveFeatures()"
        ]
    },
    "org.apache.cxf.jaxws.support.JaxWsEndpointImpl:void removeAddressingFeature()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.support.JaxWsEndpointImpl:void resolveFeatures()"
        ]
    },
    "org.apache.cxf.jaxws.support.JaxWsEndpointImpl:void createJaxwsBinding()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.support.JaxWsEndpointImpl:void <init>(org.apache.cxf.Bus,org.apache.cxf.service.Service,org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.jaxws.support.JaxWsImplementorInfo,java.util.List,java.util.List,boolean)"
        ]
    },
    "org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean:void buildWSAActions(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean:org.apache.cxf.service.model.OperationInfo createOperation(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.InterfaceInfo,java.lang.reflect.Method)"
        ]
    },
    "org.apache.cxf.jaxws.JaxwsServiceBuilder:java.io.File getOutputFile()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxws.support.WebServiceProviderConfiguration:java.lang.String getWsdlURL()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getWsdlURL()"
        ]
    },
    "org.apache.cxf.jaxws.support.JaxWsServiceConfiguration:java.lang.String getWsdlURL()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getWsdlURL()"
        ]
    },
    "org.apache.cxf.jaxws.support.JaxWsServiceConfiguration:javax.xml.namespace.QName getInterfaceName()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getInterfaceName()"
        ]
    },
    "org.apache.cxf.jaxws.support.JaxWsImplementorInfo:void initialize()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.support.JaxWsImplementorInfo:void <init>(java.lang.Class)"
        ]
    },
    "org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean:java.util.Set generatedWrapperBeanClass()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean:java.util.Set getExtraClass()"
        ]
    },
    "org.apache.cxf.jaxws.ServiceImpl:java.lang.Object getPort(org.apache.cxf.ws.addressing.EndpointReferenceType,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxws.ServiceImpl:java.lang.Object getPort(javax.xml.ws.EndpointReference,java.lang.Class,javax.xml.ws.WebServiceFeature[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.spi.ProviderImpl:java.lang.Object getPort(javax.xml.ws.EndpointReference,java.lang.Class,javax.xml.ws.WebServiceFeature[])"
        ]
    },
    "org.apache.cxf.jaxws.ServiceImpl:javax.xml.ws.Dispatch createDispatch(javax.xml.namespace.QName,java.lang.Class,javax.xml.ws.Service$Mode)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxws.ServiceImpl:javax.xml.ws.Dispatch createDispatch(javax.xml.ws.EndpointReference,java.lang.Class,javax.xml.ws.Service$Mode,javax.xml.ws.WebServiceFeature[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxws.ServiceImpl:javax.xml.ws.Dispatch createDispatch(javax.xml.namespace.QName,javax.xml.bind.JAXBContext,javax.xml.ws.Service$Mode)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxws.ServiceImpl:javax.xml.ws.Dispatch createDispatch(javax.xml.ws.EndpointReference,javax.xml.bind.JAXBContext,javax.xml.ws.Service$Mode,javax.xml.ws.WebServiceFeature[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxws.JaxWsServerFactoryBean:void init()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.JaxWsServerFactoryBean:org.apache.cxf.endpoint.Server create()"
        ]
    },
    "org.apache.cxf.jaxws.DispatchImpl:void <init>(org.apache.cxf.endpoint.Client,javax.xml.ws.Service$Mode,javax.xml.bind.JAXBContext,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.ServiceImpl:javax.xml.ws.Dispatch createDispatch(javax.xml.namespace.QName,javax.xml.bind.JAXBContext,javax.xml.ws.Service$Mode,javax.xml.ws.WebServiceFeature[])",
            "org.apache.cxf.jaxws.DispatchImpl:void <init>(org.apache.cxf.endpoint.Client,javax.xml.ws.Service$Mode,java.lang.Class)"
        ]
    },
    "org.apache.cxf.jaxws.interceptors.MessageModeInInterceptor$MultiPartDataSource:void access$000(org.apache.cxf.jaxws.interceptors.MessageModeInInterceptor$MultiPartDataSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.interceptors.MessageModeInInterceptor$MultiPartDataSource$1:int read()"
        ]
    },
    "org.apache.cxf.jaxws.interceptors.WebFaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxws.interceptors.SwAOutInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.interceptors.SwAOutInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxws.binding.http.HTTPBindingImpl:void setHandlerChain(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.JaxWsProxyFactoryBean:void buildHandlerChain(org.apache.cxf.jaxws.JaxWsClientProxy)",
            "org.apache.cxf.jaxws.JaxWsServerFactoryBean:void buildHandlerChain()"
        ]
    },
    "org.apache.cxf.jaxws.context.WrappedMessageContext:void <init>(java.util.Map,org.apache.cxf.message.Exchange,javax.xml.ws.handler.MessageContext$Scope)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.JaxWsClientProxy:java.util.Map getRequestContext()",
            "org.apache.cxf.jaxws.JaxWsClientProxy:java.util.Map getResponseContext()",
            "org.apache.cxf.jaxws.DispatchImpl:java.util.Map getRequestContext()",
            "org.apache.cxf.jaxws.DispatchImpl:java.util.Map getResponseContext()",
            "org.apache.cxf.jaxws.DispatchImpl:void setupEndpointAddressContext(org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:void <init>(org.apache.cxf.message.Message,javax.xml.ws.handler.MessageContext$Scope)"
        ]
    },
    "org.apache.cxf.common.util.WeakIdentityHashMap:void clear()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.WeakIdentityHashMap:void clear()",
            "org.apache.cxf.common.util.CacheMap:void clear()",
            "org.apache.cxf.common.util.TwoStageMap:void clear()",
            "org.apache.cxf.jaxb.JAXBDataBinding:void clearCaches()",
            "org.apache.cxf.management.jmx.export.runtime.ModelMBeanInfoSupporter:void clear()",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void postShutdown()",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.ClientImpl:void invoke(org.apache.cxf.endpoint.ClientCallback,org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[])",
            "org.apache.cxf.tools.common.VelocityGenerator:void clearAttributes()"
        ]
    },
    "org.apache.cxf.common.util.CacheMap:void clear()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.WeakIdentityHashMap:void clear()",
            "org.apache.cxf.common.util.CacheMap:void clear()",
            "org.apache.cxf.common.util.TwoStageMap:void clear()",
            "org.apache.cxf.jaxb.JAXBDataBinding:void clearCaches()",
            "org.apache.cxf.management.jmx.export.runtime.ModelMBeanInfoSupporter:void clear()",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void postShutdown()",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.ClientImpl:void invoke(org.apache.cxf.endpoint.ClientCallback,org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[])",
            "org.apache.cxf.tools.common.VelocityGenerator:void clearAttributes()"
        ]
    },
    "org.apache.cxf.common.util.TwoStageMap:void clear()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.WeakIdentityHashMap:void clear()",
            "org.apache.cxf.common.util.CacheMap:void clear()",
            "org.apache.cxf.common.util.TwoStageMap:void clear()",
            "org.apache.cxf.jaxb.JAXBDataBinding:void clearCaches()",
            "org.apache.cxf.management.jmx.export.runtime.ModelMBeanInfoSupporter:void clear()",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void postShutdown()",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.ClientImpl:void invoke(org.apache.cxf.endpoint.ClientCallback,org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[])",
            "org.apache.cxf.tools.common.VelocityGenerator:void clearAttributes()"
        ]
    },
    "org.apache.cxf.jaxb.JAXBDataBinding:void clearCaches()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.management.jmx.export.runtime.ModelMBeanInfoSupporter:void clear()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.management.jmx.export.runtime.ModelMBeanAssembler:javax.management.modelmbean.ModelMBeanInfo getModelMbeanInfo(java.lang.Class)"
        ]
    },
    "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void postShutdown()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.buslifecycle.CXFBusLifeCycleManager:void postShutdown()"
        ]
    },
    "org.apache.cxf.tools.common.VelocityGenerator:void clearAttributes()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxws.JAXWSMethodInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object,java.lang.reflect.Method,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.invoker.AbstractInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object)"
        ]
    },
    "org.apache.cxf.jaxb.JAXBEncoderDecoder:void marshall(javax.xml.bind.Marshaller,java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.io.DataWriterImpl:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,java.lang.Object)"
        ]
    },
    "org.apache.cxf.transport.jms.continuations.JMSContinuation:void updateContinuations(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.jms.continuations.JMSContinuation:void doResume()",
            "org.apache.cxf.transport.jms.continuations.JMSContinuation:boolean suspend(long)"
        ]
    },
    "org.apache.cxf.transport.jms.JMSConduit:void sendExchange(org.apache.cxf.message.Exchange,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.jms.JMSOutputStream:void doClose()"
        ]
    },
    "org.apache.cxf.service.invoker.PooledFactory:void <init>(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.tools.common.toolspec.parser.Option:boolean isSatisfied(org.apache.cxf.tools.common.toolspec.parser.ErrorVisitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.tools.common.toolspec.parser.Form:boolean accept(org.apache.cxf.tools.common.toolspec.parser.TokenInputStream,org.w3c.dom.Element,org.apache.cxf.tools.common.toolspec.parser.ErrorVisitor)",
            "org.apache.cxf.tools.common.toolspec.parser.OptionGroup:boolean isSatisfied(org.apache.cxf.tools.common.toolspec.parser.ErrorVisitor)"
        ]
    },
    "org.apache.cxf.tools.common.toolspec.parser.Argument:boolean isSatisfied(org.apache.cxf.tools.common.toolspec.parser.ErrorVisitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.tools.common.toolspec.parser.Form:boolean accept(org.apache.cxf.tools.common.toolspec.parser.TokenInputStream,org.w3c.dom.Element,org.apache.cxf.tools.common.toolspec.parser.ErrorVisitor)"
        ]
    },
    "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:int size()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.WeakIdentityHashMap:int size()",
            "org.apache.cxf.common.util.CacheMap:int size()",
            "org.apache.cxf.common.util.TwoStageMap:int size()",
            "org.apache.cxf.common.util.TwoStageMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:int size()",
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.util.Map keepInOrder(java.util.Map,org.apache.cxf.service.model.OperationInfo,java.util.List)",
            "org.apache.cxf.transport.http.HTTPConduit:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.RMManager:void shutdown()",
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl:boolean isEmpty()",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.wsdl.Port getPort(org.apache.cxf.wsdl.WSDLManager,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.service.model.AbstractMessageContainer:void addMessagePart(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo addOutOfBandMessagePart(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.AbstractMessageContainer:int size()",
            "org.apache.cxf.service.model.OperationInfo:boolean hasFaults()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createMessageParts(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.binding.soap.interceptor.SoapPreProtocolOutInterceptor:void setSoapAction(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.tools.common.ToolContext:boolean isExcludeNamespaceEnabled()",
            "org.apache.cxf.wsdl11.SchemaUtil:void addSchema(java.lang.String,javax.wsdl.extensions.schema.Schema)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildMockServices(javax.wsdl.Definition)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:int size()"
        ]
    },
    "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$3:int size()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.CollectionUtils:java.util.Collection diff(java.util.Collection,java.util.Collection)",
            "org.apache.cxf.common.util.CollectionUtils:boolean isEmpty(java.util.Collection)",
            "org.apache.cxf.configuration.spring.SpringBeanQNameMap:void processBeans(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.jaxb.JAXBEncoderDecoder:void marshall(javax.xml.bind.Marshaller,java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,java.lang.Object)",
            "org.apache.cxf.jaxb.io.DataWriterImpl:javax.xml.bind.Marshaller createMarshaller(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.util.Map keepInOrder(java.util.Map,org.apache.cxf.service.model.OperationInfo,java.util.List)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:void assertClientPolicy(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPClientPolicy)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:void assertServerPolicy(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPServerPolicy)",
            "org.apache.cxf.transport.jms.continuations.JMSContinuation:void updateContinuations(boolean)",
            "org.apache.cxf.transport.jms.JMSConduit:void sendExchange(org.apache.cxf.message.Exchange,java.lang.Object)",
            "org.apache.cxf.ws.policy.AssertionInfoMap:void <init>(java.util.Collection)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:java.util.Collection findAndAssertPolicy(javax.xml.namespace.QName)",
            "org.apache.cxf.ws.rm.AbstractRMInterceptor:void assertReliability(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.RMOutInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.RMOutInterceptor:void addAcknowledgements(org.apache.cxf.ws.rm.Destination,org.apache.cxf.ws.rm.RMProperties,org.apache.cxf.ws.rm.Identifier,org.apache.cxf.ws.addressing.v200408.AttributedURI)",
            "org.apache.cxf.ws.rm.RMManager:void clientCreated(org.apache.cxf.endpoint.Client)",
            "org.apache.cxf.ws.rm.RMManager:void recoverReliableEndpoint(org.apache.cxf.endpoint.Endpoint,org.apache.cxf.transport.Conduit)",
            "org.apache.cxf.ws.rm.RMEndpoint:void shutdown()",
            "org.apache.cxf.service.invoker.PooledFactory:void <init>(java.util.Collection)",
            "org.apache.cxf.service.model.BindingOperationInfo:void <init>(org.apache.cxf.service.model.BindingInfo,org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.tools.common.toolspec.parser.Option:boolean isSatisfied(org.apache.cxf.tools.common.toolspec.parser.ErrorVisitor)",
            "org.apache.cxf.tools.common.toolspec.parser.Argument:boolean isSatisfied(org.apache.cxf.tools.common.toolspec.parser.ErrorVisitor)",
            "org.apache.cxf.tools.common.model.JavaMethod:java.util.List getParameterList(boolean)",
            "org.apache.cxf.aegis.type.basic.ArrayType:java.util.Collection readCollection(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.ArrayType:java.lang.Object makeArray(java.lang.Class,java.util.Collection)"
        ]
    },
    "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$2:int size()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.CollectionUtils:java.util.Collection diff(java.util.Collection,java.util.Collection)",
            "org.apache.cxf.common.util.CollectionUtils:boolean isEmpty(java.util.Collection)",
            "org.apache.cxf.configuration.spring.SpringBeanQNameMap:void processBeans(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.jaxb.JAXBDataBinding:void initialize(org.apache.cxf.service.Service)",
            "org.apache.cxf.jaxb.JAXBDataBinding:org.apache.cxf.jaxb.JAXBDataBinding$CachedContextAndSchemas createJAXBContextAndSchemas(java.util.Set,java.lang.String)",
            "org.apache.cxf.jaxb.JAXBEncoderDecoder:void marshall(javax.xml.bind.Marshaller,java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,java.lang.Object)",
            "org.apache.cxf.jaxb.io.DataWriterImpl:javax.xml.bind.Marshaller createMarshaller(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.util.Map keepInOrder(java.util.Map,org.apache.cxf.service.model.OperationInfo,java.util.List)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:void assertClientPolicy(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPClientPolicy)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:void assertServerPolicy(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPServerPolicy)",
            "org.apache.cxf.transport.jms.continuations.JMSContinuation:void updateContinuations(boolean)",
            "org.apache.cxf.transport.jms.JMSConduit:void sendExchange(org.apache.cxf.message.Exchange,java.lang.Object)",
            "org.apache.cxf.ws.policy.AssertionInfoMap:void <init>(java.util.Collection)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:java.util.Collection findAndAssertPolicy(javax.xml.namespace.QName)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.SymmetricBindingHandler:void doEncryptBeforeSign()",
            "org.apache.cxf.ws.rm.AbstractRMInterceptor:void assertReliability(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.RMOutInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.RMOutInterceptor:void addAcknowledgements(org.apache.cxf.ws.rm.Destination,org.apache.cxf.ws.rm.RMProperties,org.apache.cxf.ws.rm.Identifier,org.apache.cxf.ws.addressing.v200408.AttributedURI)",
            "org.apache.cxf.ws.rm.RMManager:void clientCreated(org.apache.cxf.endpoint.Client)",
            "org.apache.cxf.ws.rm.RMManager:void recoverReliableEndpoint(org.apache.cxf.endpoint.Endpoint,org.apache.cxf.transport.Conduit)",
            "org.apache.cxf.ws.rm.RMEndpoint:void shutdown()",
            "org.apache.cxf.service.invoker.PooledFactory:void <init>(java.util.Collection)",
            "org.apache.cxf.service.model.BindingOperationInfo:void <init>(org.apache.cxf.service.model.BindingInfo,org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.tools.common.toolspec.parser.Option:boolean isSatisfied(org.apache.cxf.tools.common.toolspec.parser.ErrorVisitor)",
            "org.apache.cxf.tools.common.toolspec.parser.Argument:boolean isSatisfied(org.apache.cxf.tools.common.toolspec.parser.ErrorVisitor)",
            "org.apache.cxf.tools.common.model.JavaMethod:java.util.List getParameterList(boolean)",
            "org.apache.cxf.aegis.type.basic.ArrayType:java.util.Collection readCollection(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.ArrayType:java.lang.Object makeArray(java.lang.Class,java.util.Collection)"
        ]
    },
    "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$1:int size()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.CollectionUtils:java.util.Collection diff(java.util.Collection,java.util.Collection)",
            "org.apache.cxf.common.util.CollectionUtils:boolean isEmpty(java.util.Collection)",
            "org.apache.cxf.configuration.spring.SpringBeanQNameMap:void processBeans(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.jaxb.JAXBDataBinding:void initialize(org.apache.cxf.service.Service)",
            "org.apache.cxf.jaxb.JAXBDataBinding:org.apache.cxf.jaxb.JAXBDataBinding$CachedContextAndSchemas createJAXBContextAndSchemas(java.util.Set,java.lang.String)",
            "org.apache.cxf.jaxb.JAXBEncoderDecoder:void marshall(javax.xml.bind.Marshaller,java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,java.lang.Object)",
            "org.apache.cxf.jaxb.io.DataWriterImpl:javax.xml.bind.Marshaller createMarshaller(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.util.Map keepInOrder(java.util.Map,org.apache.cxf.service.model.OperationInfo,java.util.List)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:void assertClientPolicy(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPClientPolicy)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:void assertServerPolicy(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPServerPolicy)",
            "org.apache.cxf.transport.jms.continuations.JMSContinuation:void updateContinuations(boolean)",
            "org.apache.cxf.transport.jms.JMSConduit:void sendExchange(org.apache.cxf.message.Exchange,java.lang.Object)",
            "org.apache.cxf.ws.policy.AssertionInfoMap:void <init>(java.util.Collection)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:java.util.Collection findAndAssertPolicy(javax.xml.namespace.QName)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.SymmetricBindingHandler:void doEncryptBeforeSign()",
            "org.apache.cxf.ws.rm.AbstractRMInterceptor:void assertReliability(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.RMOutInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.RMOutInterceptor:void addAcknowledgements(org.apache.cxf.ws.rm.Destination,org.apache.cxf.ws.rm.RMProperties,org.apache.cxf.ws.rm.Identifier,org.apache.cxf.ws.addressing.v200408.AttributedURI)",
            "org.apache.cxf.ws.rm.RMManager:void clientCreated(org.apache.cxf.endpoint.Client)",
            "org.apache.cxf.ws.rm.RMManager:void recoverReliableEndpoint(org.apache.cxf.endpoint.Endpoint,org.apache.cxf.transport.Conduit)",
            "org.apache.cxf.ws.rm.RMEndpoint:void shutdown()",
            "org.apache.cxf.service.invoker.PooledFactory:void <init>(java.util.Collection)",
            "org.apache.cxf.service.model.BindingOperationInfo:void <init>(org.apache.cxf.service.model.BindingInfo,org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.tools.common.toolspec.parser.Option:boolean isSatisfied(org.apache.cxf.tools.common.toolspec.parser.ErrorVisitor)",
            "org.apache.cxf.tools.common.toolspec.parser.Argument:boolean isSatisfied(org.apache.cxf.tools.common.toolspec.parser.ErrorVisitor)",
            "org.apache.cxf.tools.common.model.JavaMethod:java.util.List getParameterList(boolean)",
            "org.apache.cxf.aegis.type.basic.ArrayType:java.util.Collection readCollection(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.ArrayType:java.lang.Object makeArray(java.lang.Class,java.util.Collection)"
        ]
    },
    "org.apache.cxf.aegis.type.basic.ArrayType:java.lang.Object makeArray(java.lang.Class,java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.basic.ArrayType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)"
        ]
    },
    "org.apache.cxf.jaxb.JAXBToStringBuilder:java.lang.String valueOf(java.lang.Object,org.apache.commons.lang.builder.ToStringStyle)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.JAXBToStringBuilder:java.lang.String valueOf(java.lang.Object)"
        ]
    },
    "org.apache.cxf.management.jmx.export.runtime.ModelMBeanInfoSupporter:javax.management.modelmbean.ModelMBeanInfo buildModelMBeanInfo(javax.management.Descriptor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.management.jmx.export.runtime.ModelMBeanAssembler:javax.management.modelmbean.ModelMBeanInfo getModelMbeanInfo(java.lang.Class)"
        ]
    },
    "org.apache.cxf.service.factory.DefaultServiceConfiguration:java.lang.String createName(java.lang.reflect.Method,int,int,boolean,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.DefaultServiceConfiguration:java.lang.String getDefaultLocalName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int,java.lang.String)"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLManagerImpl:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.resource.URIResolver:void <init>(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.resource.URIResolver:void <init>(java.lang.String)"
        ]
    },
    "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:java.net.URL composeUrl(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:org.apache.cxf.endpoint.Client createClient(java.lang.String,javax.xml.namespace.QName,java.lang.ClassLoader,javax.xml.namespace.QName,java.util.List)",
            "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:void addBindingFiles(java.util.List,org.apache.cxf.jaxb.JAXBUtils$SchemaCompiler)"
        ]
    },
    "org.apache.cxf.resource.ExtendedURIResolver:org.xml.sax.InputSource resolve(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.TransportURIResolver:org.xml.sax.InputSource resolve(java.lang.String,java.lang.String)",
            "org.apache.cxf.ws.policy.attachment.reference.RemoteReferenceResolver:org.apache.neethi.Policy resolveReference(java.lang.String)",
            "org.apache.cxf.ws.policy.attachment.external.Wsdl11XPointerDomainExpression:void evaluate(java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils$SchemaLSResourceResolver:org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.catalog.CatalogXmlSchemaURIResolver:org.xml.sax.InputSource resolveEntity(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.catalog.CatalogWSDLLocator:org.xml.sax.InputSource getBaseInputSource()",
            "org.apache.cxf.catalog.CatalogWSDLLocator:org.xml.sax.InputSource getImportInputSource(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.resource.URIResolver:void tryArchive(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.resource.URIResolver:void <init>(java.lang.String,java.lang.String,java.lang.Class)",
            "org.apache.cxf.resource.URIResolver:void resolve(java.lang.String,java.lang.String,java.lang.Class)"
        ]
    },
    "org.apache.cxf.jaxb.JAXBDataBinding:javax.xml.bind.JAXBContext createJAXBContext(java.util.Set)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.JAXBDataBinding:void <init>(java.lang.Class[])"
        ]
    },
    "org.apache.cxf.ws.security.wss4j.policyhandlers.AsymmetricBindingHandler:void createEncryptedKey(org.apache.cxf.ws.security.policy.model.TokenWrapper,org.apache.cxf.ws.security.policy.model.Token)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AsymmetricBindingHandler:void setupEncryptedKey(org.apache.cxf.ws.security.policy.model.TokenWrapper,org.apache.cxf.ws.security.policy.model.Token)"
        ]
    },
    "org.apache.cxf.ws.security.wss4j.policyhandlers.SymmetricBindingHandler:java.lang.String setupEncryptedKey(org.apache.cxf.ws.security.policy.model.TokenWrapper,org.apache.cxf.ws.security.policy.model.Token)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.wss4j.policyhandlers.SymmetricBindingHandler:void doEncryptBeforeSign()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.SymmetricBindingHandler:void doSignBeforeEncrypt()"
        ]
    },
    "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:org.apache.cxf.databinding.DataReader getDataReader(org.apache.cxf.message.Message,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:org.apache.cxf.databinding.DataReader getDataReader(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:org.apache.cxf.databinding.DataReader getNodeDataReader(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.soap.interceptor.RPCInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.soap.interceptor.SoapHeaderInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:org.apache.cxf.databinding.DataWriter getDataWriter(org.apache.cxf.message.Message,org.apache.cxf.service.Service,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:void writeParts(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.message.MessageContentsList,java.util.List)"
        ]
    },
    "org.apache.cxf.common.util.PackageUtils:java.lang.String getPackageNameByNameSpaceURI(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.PackageUtils:java.lang.String parsePackageName(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.ws.addressing.ContextUtils:java.lang.String getActionFromMessageAttributes(org.apache.cxf.service.model.MessageInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.ContextUtils:java.lang.String getActionFromServiceModel(org.apache.cxf.message.Message,java.lang.Exception)"
        ]
    },
    "org.apache.cxf.ws.addressing.MAPAggregator:java.lang.String getActionFromInputMessage(org.apache.cxf.service.model.OperationInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.MAPAggregator:java.lang.String getActionUri(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.ws.addressing.MAPAggregator:java.lang.String getActionFromOutputMessage(org.apache.cxf.service.model.OperationInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.MAPAggregator:java.lang.String getActionUri(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.jms.wsdl11.JmsTransportPlugin:javax.wsdl.extensions.ExtensibilityElement createExtension(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.wsdl.AbstractWSDLPlugin:java.lang.String getOption(java.util.Map,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.binding.soap.wsdl11.SoapAddressPlugin:javax.wsdl.extensions.ExtensibilityElement createExtension(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.binding.xml.wsdl11.HttpAddressPlugin:javax.wsdl.extensions.ExtensibilityElement createExtension(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.tools.util.URIParserUtil:java.lang.String getPackageName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.tools.util.URIParserUtil:java.lang.String parsePackageName(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.aegis.xml.AbstractMessageWriter:void writeXsiType(javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.basic.ObjectType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.BeanType:void writeObjectInternal(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,boolean)"
        ]
    },
    "org.apache.cxf.aegis.xml.AbstractMessageWriter:void writeXsiNil()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.databinding.XMLStreamDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.aegis.databinding.ElementDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,org.w3c.dom.Element)",
            "org.apache.cxf.aegis.AegisXMLStreamDataWriter:void write(java.lang.Object,javax.xml.namespace.QName,boolean,javax.xml.stream.XMLStreamWriter,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.basic.BooleanType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.BeanType:void writeObjectInternal(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,boolean)",
            "org.apache.cxf.aegis.type.basic.ArrayType:void writeValue(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type,java.lang.String,java.lang.String)",
            "org.apache.cxf.aegis.type.basic.StringType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.SoapArrayType:void writeValue(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type)"
        ]
    },
    "org.apache.cxf.aegis.xml.AbstractMessageWriter:void writeValueAsInt(java.lang.Integer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.basic.IntType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)"
        ]
    },
    "org.apache.cxf.aegis.xml.AbstractMessageWriter:void writeValueAsByte(java.lang.Byte)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.basic.ByteType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)"
        ]
    },
    "org.apache.cxf.aegis.xml.AbstractMessageWriter:void writeValueAsDouble(java.lang.Double)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.basic.DoubleType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)"
        ]
    },
    "org.apache.cxf.aegis.xml.AbstractMessageWriter:void writeValueAsCharacter(java.lang.Character)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.basic.CharacterType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)"
        ]
    },
    "org.apache.cxf.aegis.xml.AbstractMessageWriter:void writeValueAsLong(java.lang.Long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.basic.LongType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)"
        ]
    },
    "org.apache.cxf.aegis.xml.AbstractMessageWriter:void writeValueAsFloat(java.lang.Float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.basic.FloatType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)"
        ]
    },
    "org.apache.cxf.aegis.xml.AbstractMessageWriter:void writeValueAsBoolean(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.basic.BooleanType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)"
        ]
    },
    "org.apache.cxf.aegis.xml.AbstractMessageWriter:void writeValueAsShort(java.lang.Short)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.basic.ShortType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)"
        ]
    },
    "org.apache.cxf.aegis.type.basic.DateType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.databinding.XMLStreamDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.aegis.databinding.ElementDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,org.w3c.dom.Element)",
            "org.apache.cxf.aegis.AegisXMLStreamDataWriter:void write(java.lang.Object,javax.xml.namespace.QName,boolean,javax.xml.stream.XMLStreamWriter,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.basic.SqlDateType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.ObjectType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.BeanType:void writeObjectInternal(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,boolean)",
            "org.apache.cxf.aegis.type.basic.BeanType:void writeElement(javax.xml.namespace.QName,java.lang.Object,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.ArrayType:void writeValue(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type,java.lang.String,java.lang.String)",
            "org.apache.cxf.aegis.type.encoded.StructType:void writeElement(javax.xml.namespace.QName,java.lang.Object,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.SoapArrayType:void writeValue(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.collection.MapType:void writeEntry(org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.type.Type,java.util.Map$Entry)"
        ]
    },
    "org.apache.cxf.aegis.type.basic.CalendarType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.databinding.XMLStreamDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.aegis.databinding.ElementDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,org.w3c.dom.Element)",
            "org.apache.cxf.aegis.AegisXMLStreamDataWriter:void write(java.lang.Object,javax.xml.namespace.QName,boolean,javax.xml.stream.XMLStreamWriter,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.basic.ObjectType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.BeanType:void writeObjectInternal(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,boolean)",
            "org.apache.cxf.aegis.type.basic.BeanType:void writeElement(javax.xml.namespace.QName,java.lang.Object,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.ArrayType:void writeValue(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type,java.lang.String,java.lang.String)",
            "org.apache.cxf.aegis.type.encoded.StructType:void writeElement(javax.xml.namespace.QName,java.lang.Object,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.SoapArrayType:void writeValue(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.collection.MapType:void writeEntry(org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.type.Type,java.util.Map$Entry)"
        ]
    },
    "org.apache.cxf.aegis.type.basic.URIType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.databinding.XMLStreamDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.aegis.databinding.ElementDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,org.w3c.dom.Element)",
            "org.apache.cxf.aegis.AegisXMLStreamDataWriter:void write(java.lang.Object,javax.xml.namespace.QName,boolean,javax.xml.stream.XMLStreamWriter,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.basic.ObjectType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.BeanType:void writeObjectInternal(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,boolean)",
            "org.apache.cxf.aegis.type.basic.BeanType:void writeElement(javax.xml.namespace.QName,java.lang.Object,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.ArrayType:void writeValue(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type,java.lang.String,java.lang.String)",
            "org.apache.cxf.aegis.type.encoded.StructType:void writeElement(javax.xml.namespace.QName,java.lang.Object,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.SoapArrayType:void writeValue(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.collection.MapType:void writeEntry(org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.type.Type,java.util.Map$Entry)"
        ]
    },
    "org.apache.cxf.aegis.type.basic.TimestampType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.databinding.XMLStreamDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.aegis.databinding.ElementDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,org.w3c.dom.Element)",
            "org.apache.cxf.aegis.AegisXMLStreamDataWriter:void write(java.lang.Object,javax.xml.namespace.QName,boolean,javax.xml.stream.XMLStreamWriter,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.basic.ObjectType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.BeanType:void writeObjectInternal(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,boolean)",
            "org.apache.cxf.aegis.type.basic.BeanType:void writeElement(javax.xml.namespace.QName,java.lang.Object,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.ArrayType:void writeValue(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type,java.lang.String,java.lang.String)",
            "org.apache.cxf.aegis.type.encoded.StructType:void writeElement(javax.xml.namespace.QName,java.lang.Object,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.SoapArrayType:void writeValue(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.collection.MapType:void writeEntry(org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.type.Type,java.util.Map$Entry)"
        ]
    },
    "org.apache.cxf.aegis.type.basic.DateTimeType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.databinding.XMLStreamDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.aegis.databinding.ElementDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,org.w3c.dom.Element)",
            "org.apache.cxf.aegis.AegisXMLStreamDataWriter:void write(java.lang.Object,javax.xml.namespace.QName,boolean,javax.xml.stream.XMLStreamWriter,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.basic.ObjectType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.BeanType:void writeObjectInternal(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,boolean)",
            "org.apache.cxf.aegis.type.basic.BeanType:void writeElement(javax.xml.namespace.QName,java.lang.Object,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.ArrayType:void writeValue(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type,java.lang.String,java.lang.String)",
            "org.apache.cxf.aegis.type.encoded.StructType:void writeElement(javax.xml.namespace.QName,java.lang.Object,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.SoapArrayType:void writeValue(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.collection.MapType:void writeEntry(org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.type.Type,java.util.Map$Entry)"
        ]
    },
    "org.apache.cxf.aegis.type.basic.Base64Type:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.databinding.XMLStreamDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.aegis.databinding.ElementDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,org.w3c.dom.Element)",
            "org.apache.cxf.aegis.AegisXMLStreamDataWriter:void write(java.lang.Object,javax.xml.namespace.QName,boolean,javax.xml.stream.XMLStreamWriter,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.basic.ObjectType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.BeanType:void writeObjectInternal(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,boolean)",
            "org.apache.cxf.aegis.type.basic.BeanType:void writeElement(javax.xml.namespace.QName,java.lang.Object,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.ArrayType:void writeValue(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type,java.lang.String,java.lang.String)",
            "org.apache.cxf.aegis.type.mtom.AbstractXOPType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.StructType:void writeElement(javax.xml.namespace.QName,java.lang.Object,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.SoapArrayType:void writeValue(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.collection.MapType:void writeEntry(org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.type.Type,java.util.Map$Entry)"
        ]
    },
    "org.apache.cxf.aegis.type.basic.StringType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.databinding.XMLStreamDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.aegis.databinding.ElementDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,org.w3c.dom.Element)",
            "org.apache.cxf.aegis.AegisXMLStreamDataWriter:void write(java.lang.Object,javax.xml.namespace.QName,boolean,javax.xml.stream.XMLStreamWriter,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.basic.ObjectType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.BeanType:void writeObjectInternal(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,boolean)",
            "org.apache.cxf.aegis.type.basic.BeanType:void writeElement(javax.xml.namespace.QName,java.lang.Object,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.ArrayType:void writeValue(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type,java.lang.String,java.lang.String)",
            "org.apache.cxf.aegis.type.encoded.StructType:void writeElement(javax.xml.namespace.QName,java.lang.Object,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.SoapArrayType:void writeValue(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.collection.MapType:void writeEntry(org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.type.Type,java.util.Map$Entry)"
        ]
    },
    "org.apache.cxf.aegis.type.basic.TimeType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.databinding.XMLStreamDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.aegis.databinding.ElementDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,org.w3c.dom.Element)",
            "org.apache.cxf.aegis.AegisXMLStreamDataWriter:void write(java.lang.Object,javax.xml.namespace.QName,boolean,javax.xml.stream.XMLStreamWriter,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.basic.ObjectType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.BeanType:void writeObjectInternal(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,boolean)",
            "org.apache.cxf.aegis.type.basic.BeanType:void writeElement(javax.xml.namespace.QName,java.lang.Object,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.ArrayType:void writeValue(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type,java.lang.String,java.lang.String)",
            "org.apache.cxf.aegis.type.encoded.StructType:void writeElement(javax.xml.namespace.QName,java.lang.Object,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.SoapArrayType:void writeValue(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.collection.MapType:void writeEntry(org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.type.Type,java.util.Map$Entry)"
        ]
    },
    "org.apache.cxf.aegis.type.basic.TimezoneLessDateType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.databinding.XMLStreamDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.aegis.databinding.ElementDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,org.w3c.dom.Element)",
            "org.apache.cxf.aegis.AegisXMLStreamDataWriter:void write(java.lang.Object,javax.xml.namespace.QName,boolean,javax.xml.stream.XMLStreamWriter,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.basic.ObjectType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.BeanType:void writeObjectInternal(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,boolean)",
            "org.apache.cxf.aegis.type.basic.BeanType:void writeElement(javax.xml.namespace.QName,java.lang.Object,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.ArrayType:void writeValue(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type,java.lang.String,java.lang.String)",
            "org.apache.cxf.aegis.type.encoded.StructType:void writeElement(javax.xml.namespace.QName,java.lang.Object,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.SoapArrayType:void writeValue(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.collection.MapType:void writeEntry(org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.type.Type,java.util.Map$Entry)"
        ]
    },
    "org.apache.cxf.aegis.type.mtom.AbstractXOPType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.databinding.XMLStreamDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.aegis.databinding.ElementDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,org.w3c.dom.Element)",
            "org.apache.cxf.aegis.AegisXMLStreamDataWriter:void write(java.lang.Object,javax.xml.namespace.QName,boolean,javax.xml.stream.XMLStreamWriter,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.basic.ObjectType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.BeanType:void writeObjectInternal(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,boolean)",
            "org.apache.cxf.aegis.type.basic.BeanType:void writeElement(javax.xml.namespace.QName,java.lang.Object,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.ArrayType:void writeValue(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type,java.lang.String,java.lang.String)",
            "org.apache.cxf.aegis.type.basic.Base64Type:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.StructType:void writeElement(javax.xml.namespace.QName,java.lang.Object,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.SoapArrayType:void writeValue(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.collection.MapType:void writeEntry(org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.type.Type,java.util.Map$Entry)"
        ]
    },
    "org.apache.cxf.aegis.type.encoded.SoapEncodingUtil:void writeAttribute(org.apache.cxf.aegis.xml.MessageWriter,javax.xml.namespace.QName,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.encoded.ArrayTypeInfo:void writeAttribute(org.apache.cxf.aegis.xml.MessageWriter)",
            "org.apache.cxf.aegis.type.encoded.SoapEncodingUtil:void writeId(org.apache.cxf.aegis.xml.MessageWriter,java.lang.String)",
            "org.apache.cxf.aegis.type.encoded.SoapEncodingUtil:void writeRef(org.apache.cxf.aegis.xml.MessageWriter,java.lang.String)"
        ]
    },
    "org.apache.cxf.aegis.type.java5.EnumType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.databinding.XMLStreamDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.aegis.databinding.ElementDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,org.w3c.dom.Element)",
            "org.apache.cxf.aegis.AegisXMLStreamDataWriter:void write(java.lang.Object,javax.xml.namespace.QName,boolean,javax.xml.stream.XMLStreamWriter,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.basic.ObjectType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.BeanType:void writeObjectInternal(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,boolean)",
            "org.apache.cxf.aegis.type.basic.BeanType:void writeElement(javax.xml.namespace.QName,java.lang.Object,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.ArrayType:void writeValue(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type,java.lang.String,java.lang.String)",
            "org.apache.cxf.aegis.type.encoded.StructType:void writeElement(javax.xml.namespace.QName,java.lang.Object,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.SoapArrayType:void writeValue(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.collection.MapType:void writeEntry(org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.type.Type,java.util.Map$Entry)"
        ]
    },
    "org.apache.cxf.aegis.type.java5.XMLGregorianCalendarType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.databinding.XMLStreamDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.aegis.databinding.ElementDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,org.w3c.dom.Element)",
            "org.apache.cxf.aegis.AegisXMLStreamDataWriter:void write(java.lang.Object,javax.xml.namespace.QName,boolean,javax.xml.stream.XMLStreamWriter,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.basic.ObjectType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.BeanType:void writeObjectInternal(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,boolean)",
            "org.apache.cxf.aegis.type.basic.BeanType:void writeElement(javax.xml.namespace.QName,java.lang.Object,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.ArrayType:void writeValue(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type,java.lang.String,java.lang.String)",
            "org.apache.cxf.aegis.type.encoded.StructType:void writeElement(javax.xml.namespace.QName,java.lang.Object,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.SoapArrayType:void writeValue(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.collection.MapType:void writeEntry(org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.type.Type,java.util.Map$Entry)"
        ]
    },
    "org.apache.cxf.aegis.type.java5.DurationType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.databinding.XMLStreamDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.aegis.databinding.ElementDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,org.w3c.dom.Element)",
            "org.apache.cxf.aegis.AegisXMLStreamDataWriter:void write(java.lang.Object,javax.xml.namespace.QName,boolean,javax.xml.stream.XMLStreamWriter,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.basic.ObjectType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.BeanType:void writeObjectInternal(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,boolean)",
            "org.apache.cxf.aegis.type.basic.BeanType:void writeElement(javax.xml.namespace.QName,java.lang.Object,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.ArrayType:void writeValue(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type,java.lang.String,java.lang.String)",
            "org.apache.cxf.aegis.type.encoded.StructType:void writeElement(javax.xml.namespace.QName,java.lang.Object,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.SoapArrayType:void writeValue(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.collection.MapType:void writeEntry(org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.type.Type,java.util.Map$Entry)"
        ]
    },
    "org.apache.cxf.aegis.type.XMLTypeCreator:boolean isEnum(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.AbstractTypeCreator:org.apache.cxf.aegis.type.Type createTypeForClass(org.apache.cxf.aegis.type.AbstractTypeCreator$TypeClassInfo)",
            "org.apache.cxf.aegis.type.XMLTypeCreator:boolean isEnum(java.lang.Class)"
        ]
    },
    "org.apache.cxf.aegis.type.XMLTypeCreator:org.apache.cxf.aegis.type.Type createEnumType(org.apache.cxf.aegis.type.AbstractTypeCreator$TypeClassInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.AbstractTypeCreator:org.apache.cxf.aegis.type.Type createTypeForClass(org.apache.cxf.aegis.type.AbstractTypeCreator$TypeClassInfo)",
            "org.apache.cxf.aegis.type.XMLTypeCreator:org.apache.cxf.aegis.type.Type createEnumType(org.apache.cxf.aegis.type.AbstractTypeCreator$TypeClassInfo)"
        ]
    },
    "org.apache.cxf.aegis.type.XMLTypeCreator:org.apache.cxf.aegis.type.AbstractTypeCreator$TypeClassInfo createClassInfo(java.beans.PropertyDescriptor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.AbstractTypeCreator:org.apache.cxf.aegis.type.Type createType(java.beans.PropertyDescriptor)",
            "org.apache.cxf.aegis.type.XMLTypeCreator:org.apache.cxf.aegis.type.AbstractTypeCreator$TypeClassInfo createClassInfo(java.beans.PropertyDescriptor)"
        ]
    },
    "org.apache.cxf.aegis.type.AbstractTypeCreator:org.apache.cxf.aegis.type.Type createTypeForClass(org.apache.cxf.aegis.type.AbstractTypeCreator$TypeClassInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.databinding.AegisDatabinding:org.apache.cxf.aegis.type.Type getParameterType(org.apache.cxf.service.Service,org.apache.cxf.aegis.type.TypeMapping,org.apache.cxf.service.model.MessagePartInfo,int)",
            "org.apache.cxf.aegis.type.AbstractTypeCreator:org.apache.cxf.aegis.type.Type createType(java.lang.reflect.Method,int)",
            "org.apache.cxf.aegis.type.AbstractTypeCreator:org.apache.cxf.aegis.type.Type createType(java.beans.PropertyDescriptor)",
            "org.apache.cxf.aegis.type.AbstractTypeCreator:org.apache.cxf.aegis.type.Type createType(java.lang.reflect.Field)",
            "org.apache.cxf.aegis.type.AbstractTypeCreator:org.apache.cxf.aegis.type.Type createType(java.lang.Class)",
            "org.apache.cxf.aegis.type.java5.Java5TypeCreator:org.apache.cxf.aegis.type.Type getOrCreateParameterizedType(java.lang.Object,int)",
            "org.apache.cxf.aegis.type.XMLTypeCreator:org.apache.cxf.aegis.type.Type createTypeFromGeneric(java.lang.Object)"
        ]
    },
    "org.apache.cxf.aegis.AegisXMLStreamDataReader:java.lang.Object read(javax.xml.stream.XMLStreamReader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.AegisXMLStreamDataReader:java.lang.Object read(java.lang.Object)",
            "org.apache.cxf.aegis.AegisElementDataReader:java.lang.Object read(org.w3c.dom.Element)"
        ]
    },
    "org.apache.cxf.aegis.AegisXMLStreamDataReader:java.lang.Object read(java.lang.Object,org.apache.cxf.aegis.type.Type)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.aegis.AegisElementDataReader:java.lang.Object read(org.w3c.dom.Element,org.apache.cxf.aegis.type.Type)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.AegisElementDataReader:java.lang.Object read(java.lang.Object,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.databinding.ElementDataReader:java.lang.Object read(org.apache.cxf.service.model.MessagePartInfo,org.w3c.dom.Element)"
        ]
    },
    "org.apache.cxf.aegis.databinding.XMLStreamDataReader:java.lang.Object read(org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamReader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.databinding.XMLStreamDataReader:java.lang.Object read(org.apache.cxf.service.model.MessagePartInfo,java.lang.Object)"
        ]
    },
    "org.apache.cxf.aegis.databinding.XMLStreamDataReader:java.lang.Object read(javax.xml.stream.XMLStreamReader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.databinding.XMLStreamDataReader:java.lang.Object read(javax.xml.namespace.QName,javax.xml.stream.XMLStreamReader,java.lang.Class)",
            "org.apache.cxf.aegis.databinding.XMLStreamDataReader:java.lang.Object read(java.lang.Object)"
        ]
    },
    "org.apache.cxf.aegis.type.basic.ArrayType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.AegisXMLStreamDataReader:java.lang.Object read(javax.xml.stream.XMLStreamReader,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.basic.ObjectType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.BeanType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.ArrayType:java.util.Collection readCollection(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.SoapRefType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.collection.MapType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)"
        ]
    },
    "org.apache.cxf.aegis.type.collection.CollectionType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.AegisXMLStreamDataReader:java.lang.Object read(javax.xml.stream.XMLStreamReader,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.basic.ObjectType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.BeanType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.ArrayType:java.util.Collection readCollection(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.SoapRefType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.collection.MapType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)"
        ]
    },
    "org.apache.cxf.aegis.type.encoded.SoapArrayType:java.util.List readCollection(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.encoded.ArrayTypeInfo,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.encoded.SoapArrayType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)"
        ]
    },
    "org.apache.cxf.ws.policy.attachment.wsdl11.Wsdl11AttachmentPolicyProvider:org.apache.neethi.Policy getEffectivePolicy(org.apache.cxf.service.model.EndpointInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.PolicyEngineImpl:org.apache.neethi.Policy getAggregatedEndpointPolicy(org.apache.cxf.service.model.EndpointInfo)"
        ]
    },
    "org.apache.cxf.ws.policy.attachment.wsdl11.Wsdl11AttachmentPolicyProvider:org.apache.neethi.Policy getElementPolicy(org.apache.cxf.service.model.AbstractDescriptionElement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.attachment.wsdl11.Wsdl11AttachmentPolicyProvider:org.apache.neethi.Policy getEffectivePolicy(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.ws.policy.attachment.wsdl11.Wsdl11AttachmentPolicyProvider:org.apache.neethi.Policy getEffectivePolicy(org.apache.cxf.service.model.EndpointInfo)"
        ]
    },
    "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.JAXBEncoderDecoder:void marshallException(javax.xml.bind.Marshaller,java.lang.Exception,org.apache.cxf.service.model.MessagePartInfo,java.lang.Object)",
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamWriter,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElementEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.interceptor.WrappedOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.policy.model.InitiatorToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.RequiredParts:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.TransportToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.AlgorithmSuite:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.Wss11:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.EncryptionToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SymmetricBinding:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.X509Token:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SignatureToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.Trust10:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.HttpsToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.AsymmetricBinding:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.ContentEncryptedElements:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.KeyValueToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SignedEncryptedElements:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.Trust13:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.RequiredElements:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.UsernameToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SupportingToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.TransportBinding:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SignedEncryptedParts:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.Layout:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.IssuedToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SecureConversationToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.Wss10:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.ProtectionToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.RecipientToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.trust.STSClient:void addLifetime(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.trust.STSClient:void addAppliesTo(javax.xml.stream.XMLStreamWriter,java.lang.String)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.binding.soap.interceptor.Soap12FaultOutInterceptor$Soap12FaultOutInterceptorInternal:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor$SOAPHeaderWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor:void writeSoapEnvelopeStart(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor:boolean handleHeaderPart(boolean,org.apache.cxf.binding.soap.SoapMessage,java.lang.String)",
            "org.apache.cxf.binding.soap.interceptor.Soap11FaultOutInterceptor$Soap11FaultOutInterceptorInternal:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.aegis.util.jdom.StaxSerializer:void writeElement(org.jdom.Element,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.aegis.xml.stax.ElementWriter:void writeStartElement()",
            "org.apache.cxf.jaxws.spi.ProviderImpl:javax.xml.ws.wsaddressing.W3CEndpointReference createW3CEndpointReference(java.lang.String,javax.xml.namespace.QName,javax.xml.namespace.QName,java.util.List,java.lang.String,java.util.List)",
            "org.apache.cxf.xmlbeans.DataWriterImpl:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamWriter)"
        ]
    },
    "org.apache.cxf.staxutils.OverlayW3CDOMStreamWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.JAXBEncoderDecoder:void marshallException(javax.xml.bind.Marshaller,java.lang.Exception,org.apache.cxf.service.model.MessagePartInfo,java.lang.Object)",
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cxf.staxutils.W3CDOMStreamWriter:void writeEmptyElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamWriter,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElementEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.interceptor.WrappedOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.policy.model.InitiatorToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.RequiredParts:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.TransportToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.AlgorithmSuite:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.Wss11:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.EncryptionToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SymmetricBinding:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.X509Token:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SignatureToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.Trust10:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.HttpsToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.AsymmetricBinding:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.ContentEncryptedElements:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.KeyValueToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SignedEncryptedElements:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.Trust13:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.RequiredElements:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.UsernameToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SupportingToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.TransportBinding:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SignedEncryptedParts:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.Layout:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.IssuedToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SecureConversationToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.Wss10:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.ProtectionToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.RecipientToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor$STSInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor$STSInvoker:void doIssue(org.w3c.dom.Element,org.apache.cxf.message.Exchange,org.apache.cxf.staxutils.W3CDOMStreamWriter,java.lang.String,java.lang.String)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationTokenInterceptorProvider:byte[] writeProofToken(java.lang.String,java.lang.String,org.apache.cxf.staxutils.W3CDOMStreamWriter,byte[],int)",
            "org.apache.cxf.ws.security.trust.STSClient:org.apache.cxf.ws.security.tokenstore.SecurityToken requestSecurityToken(java.lang.String,java.lang.String,java.lang.String,org.apache.cxf.ws.security.tokenstore.SecurityToken)",
            "org.apache.cxf.ws.security.trust.STSClient:boolean validateSecurityToken(org.apache.cxf.ws.security.tokenstore.SecurityToken,java.lang.String)",
            "org.apache.cxf.ws.security.trust.STSClient:void cancelSecurityToken(org.apache.cxf.ws.security.tokenstore.SecurityToken)",
            "org.apache.cxf.ws.security.trust.STSClient:java.lang.String writeKeyType(org.apache.cxf.staxutils.W3CDOMStreamWriter,java.lang.String)",
            "org.apache.cxf.ws.security.trust.STSClient:void addLifetime(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.trust.STSClient:void addAppliesTo(javax.xml.stream.XMLStreamWriter,java.lang.String)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.binding.soap.interceptor.Soap12FaultOutInterceptor$Soap12FaultOutInterceptorInternal:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor:void writeSoapEnvelopeStart(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor:boolean handleHeaderPart(boolean,org.apache.cxf.binding.soap.SoapMessage,java.lang.String)",
            "org.apache.cxf.binding.soap.interceptor.Soap11FaultOutInterceptor$Soap11FaultOutInterceptorInternal:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.aegis.util.jdom.StaxSerializer:void writeElement(org.jdom.Element,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.aegis.xml.stax.ElementWriter:void writeStartElement()",
            "org.apache.cxf.jaxws.spi.ProviderImpl:javax.xml.ws.wsaddressing.W3CEndpointReference createW3CEndpointReference(java.lang.String,javax.xml.namespace.QName,javax.xml.namespace.QName,java.util.List,java.lang.String,java.util.List)",
            "org.apache.cxf.xmlbeans.DataWriterImpl:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamWriter)"
        ]
    },
    "org.apache.cxf.staxutils.W3CDOMStreamWriter:void writeEmptyElement(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeEmptyElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.ws.security.policy.model.SymmetricBinding:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.KeyValueToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.Layout:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.IssuedToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SecureConversationToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor$STSInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeEmptyElement(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamWriter,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.soap.interceptor.RPCOutInterceptor:java.lang.String addOperationNode(org.apache.cxf.helpers.NSStack,org.apache.cxf.message.Message,javax.xml.stream.XMLStreamWriter,boolean,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.binding.xml.interceptor.XMLFaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.xml.interceptor.XMLMessageOutInterceptor:void writeMessage(org.apache.cxf.message.Message,javax.xml.namespace.QName,boolean)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:void copy(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter,boolean)"
        ]
    },
    "org.apache.cxf.ws.security.policy.model.InitiatorToken:void serialize(javax.xml.stream.XMLStreamWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.policy.model.AsymmetricBinding:void serialize(javax.xml.stream.XMLStreamWriter)"
        ]
    },
    "org.apache.cxf.ws.security.policy.model.TransportToken:void serialize(javax.xml.stream.XMLStreamWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.policy.model.TransportBinding:void serialize(javax.xml.stream.XMLStreamWriter)"
        ]
    },
    "org.apache.cxf.ws.security.policy.model.AlgorithmSuite:void serialize(javax.xml.stream.XMLStreamWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.policy.model.SymmetricBinding:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.AsymmetricBinding:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.TransportBinding:void serialize(javax.xml.stream.XMLStreamWriter)"
        ]
    },
    "org.apache.cxf.ws.security.policy.model.Wss11:void serialize(javax.xml.stream.XMLStreamWriter)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.security.policy.model.EncryptionToken:void serialize(javax.xml.stream.XMLStreamWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.policy.model.SymmetricBinding:void serialize(javax.xml.stream.XMLStreamWriter)"
        ]
    },
    "org.apache.cxf.ws.security.policy.model.SymmetricBinding:void serialize(javax.xml.stream.XMLStreamWriter)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.security.policy.model.X509Token:void serialize(javax.xml.stream.XMLStreamWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.policy.model.InitiatorToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.TransportToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.EncryptionToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SignatureToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SupportingToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.ProtectionToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.RecipientToken:void serialize(javax.xml.stream.XMLStreamWriter)"
        ]
    },
    "org.apache.cxf.ws.security.policy.model.SignatureToken:void serialize(javax.xml.stream.XMLStreamWriter)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.security.policy.model.Trust10:void serialize(javax.xml.stream.XMLStreamWriter)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.security.policy.model.HttpsToken:void serialize(javax.xml.stream.XMLStreamWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.policy.model.InitiatorToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.TransportToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.EncryptionToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SignatureToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SupportingToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.ProtectionToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.RecipientToken:void serialize(javax.xml.stream.XMLStreamWriter)"
        ]
    },
    "org.apache.cxf.ws.security.policy.model.AsymmetricBinding:void serialize(javax.xml.stream.XMLStreamWriter)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.security.policy.model.KeyValueToken:void serialize(javax.xml.stream.XMLStreamWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.policy.model.InitiatorToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.TransportToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.EncryptionToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SignatureToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SupportingToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.ProtectionToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.RecipientToken:void serialize(javax.xml.stream.XMLStreamWriter)"
        ]
    },
    "org.apache.cxf.ws.security.policy.model.Trust13:void serialize(javax.xml.stream.XMLStreamWriter)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.security.policy.model.UsernameToken:void serialize(javax.xml.stream.XMLStreamWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.policy.model.InitiatorToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.TransportToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.EncryptionToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SignatureToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SupportingToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.ProtectionToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.RecipientToken:void serialize(javax.xml.stream.XMLStreamWriter)"
        ]
    },
    "org.apache.cxf.ws.security.policy.model.TransportBinding:void serialize(javax.xml.stream.XMLStreamWriter)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.security.policy.model.Layout:void serialize(javax.xml.stream.XMLStreamWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.policy.model.SymmetricBinding:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.AsymmetricBinding:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.TransportBinding:void serialize(javax.xml.stream.XMLStreamWriter)"
        ]
    },
    "org.apache.cxf.ws.security.policy.model.IssuedToken:void serialize(javax.xml.stream.XMLStreamWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.policy.model.InitiatorToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.TransportToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.EncryptionToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SignatureToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SupportingToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.ProtectionToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.RecipientToken:void serialize(javax.xml.stream.XMLStreamWriter)"
        ]
    },
    "org.apache.cxf.ws.security.policy.model.SecureConversationToken:void serialize(javax.xml.stream.XMLStreamWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.policy.model.InitiatorToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.TransportToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.EncryptionToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SignatureToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SupportingToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.ProtectionToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.RecipientToken:void serialize(javax.xml.stream.XMLStreamWriter)"
        ]
    },
    "org.apache.cxf.ws.security.policy.model.Wss10:void serialize(javax.xml.stream.XMLStreamWriter)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.security.policy.model.ProtectionToken:void serialize(javax.xml.stream.XMLStreamWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.policy.model.SymmetricBinding:void serialize(javax.xml.stream.XMLStreamWriter)"
        ]
    },
    "org.apache.cxf.ws.security.policy.model.RecipientToken:void serialize(javax.xml.stream.XMLStreamWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.policy.model.AsymmetricBinding:void serialize(javax.xml.stream.XMLStreamWriter)"
        ]
    },
    "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor$STSInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.ServiceInvokerInterceptor$1:void run()"
        ]
    },
    "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor$STSInvoker:void doIssue(org.w3c.dom.Element,org.apache.cxf.message.Exchange,org.apache.cxf.staxutils.W3CDOMStreamWriter,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor$STSInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object)"
        ]
    },
    "org.apache.cxf.ws.security.policy.interceptors.SecureConversationTokenInterceptorProvider:byte[] writeProofToken(java.lang.String,java.lang.String,org.apache.cxf.staxutils.W3CDOMStreamWriter,byte[],int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor$STSInvoker:void doIssue(org.w3c.dom.Element,org.apache.cxf.message.Exchange,org.apache.cxf.staxutils.W3CDOMStreamWriter,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.ws.security.trust.STSClient:java.lang.String writeKeyType(org.apache.cxf.staxutils.W3CDOMStreamWriter,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.trust.STSClient:org.apache.cxf.ws.security.tokenstore.SecurityToken requestSecurityToken(java.lang.String,java.lang.String,java.lang.String,org.apache.cxf.ws.security.tokenstore.SecurityToken)"
        ]
    },
    "org.apache.cxf.ws.security.trust.STSClient:void addLifetime(javax.xml.stream.XMLStreamWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.trust.STSClient:java.lang.String writeKeyType(org.apache.cxf.staxutils.W3CDOMStreamWriter,java.lang.String)"
        ]
    },
    "org.apache.cxf.ws.security.trust.STSClient:void addAppliesTo(javax.xml.stream.XMLStreamWriter,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.trust.STSClient:org.apache.cxf.ws.security.tokenstore.SecurityToken requestSecurityToken(java.lang.String,java.lang.String,java.lang.String,org.apache.cxf.ws.security.tokenstore.SecurityToken)"
        ]
    },
    "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.JAXBEncoderDecoder:void marshallException(javax.xml.bind.Marshaller,java.lang.Exception,org.apache.cxf.service.model.MessagePartInfo,java.lang.Object)",
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamWriter,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElementEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.interceptor.WrappedOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.policy.model.InitiatorToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.RequiredParts:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.TransportToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.AlgorithmSuite:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.Wss11:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.EncryptionToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SymmetricBinding:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.X509Token:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SignatureToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.Trust10:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.HttpsToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.AsymmetricBinding:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.ContentEncryptedElements:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.KeyValueToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SignedEncryptedElements:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.Trust13:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.RequiredElements:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.UsernameToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SupportingToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.TransportBinding:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SignedEncryptedParts:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.Layout:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.IssuedToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SecureConversationToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.Wss10:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.ProtectionToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.RecipientToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.trust.STSClient:void addLifetime(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.trust.STSClient:void addAppliesTo(javax.xml.stream.XMLStreamWriter,java.lang.String)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeStartElement(java.lang.String)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeStartElement(java.lang.String,java.lang.String)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.binding.soap.interceptor.Soap12FaultOutInterceptor$Soap12FaultOutInterceptorInternal:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor:void writeSoapEnvelopeStart(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor:boolean handleHeaderPart(boolean,org.apache.cxf.binding.soap.SoapMessage,java.lang.String)",
            "org.apache.cxf.binding.soap.interceptor.Soap11FaultOutInterceptor$Soap11FaultOutInterceptorInternal:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.aegis.util.jdom.StaxSerializer:void writeElement(org.jdom.Element,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.aegis.xml.stax.ElementWriter:void writeStartElement()",
            "org.apache.cxf.jaxws.spi.ProviderImpl:javax.xml.ws.wsaddressing.W3CEndpointReference createW3CEndpointReference(java.lang.String,javax.xml.namespace.QName,javax.xml.namespace.QName,java.util.List,java.lang.String,java.util.List)",
            "org.apache.cxf.xmlbeans.DataWriterImpl:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamWriter)"
        ]
    },
    "org.apache.cxf.xmlbeans.DataWriterImpl:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.xmlbeans.DataWriterImpl:void write(java.lang.Object,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.xmlbeans.DataWriterImpl:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,java.lang.Object)",
            "org.apache.cxf.xmlbeans.NodeDataWriterImpl:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,org.w3c.dom.Node)"
        ]
    },
    "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeAttributeEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.X509Token:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.ContentEncryptedElements:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.KeyValueToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SignedEncryptedElements:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.RequiredElements:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.UsernameToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.IssuedToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SecureConversationToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.binding.soap.interceptor.Soap12FaultOutInterceptor$Soap12FaultOutInterceptorInternal:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor$SOAPHeaderWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor$SOAPHeaderWriter:void writeSoapAttributes()",
            "org.apache.cxf.aegis.util.jdom.StaxSerializer:void writeElement(org.jdom.Element,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.aegis.xml.stax.AttributeWriter:void writeValue(java.lang.Object)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:void writeAttributeEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElementEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)"
        ]
    },
    "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeAttributeEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.X509Token:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.ContentEncryptedElements:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.KeyValueToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SignedEncryptedElements:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.RequiredElements:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.UsernameToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.IssuedToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SecureConversationToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.binding.soap.interceptor.Soap12FaultOutInterceptor$Soap12FaultOutInterceptorInternal:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.aegis.util.jdom.StaxSerializer:void writeElement(org.jdom.Element,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.aegis.xml.stax.AttributeWriter:void writeValue(java.lang.Object)"
        ]
    },
    "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:java.lang.String getPrefix(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:java.lang.String getUniquePrefix(javax.xml.stream.XMLStreamWriter,java.lang.String,boolean)",
            "org.apache.cxf.ws.security.policy.model.InitiatorToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.RequiredParts:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.TransportToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.AlgorithmSuite:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.Wss11:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.EncryptionToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SymmetricBinding:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.X509Token:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SignatureToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.Trust10:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.HttpsToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.AsymmetricBinding:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.ContentEncryptedElements:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.KeyValueToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SignedEncryptedElements:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.Trust13:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.RequiredElements:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.UsernameToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SupportingToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.TransportBinding:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SignedEncryptedParts:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.Layout:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.IssuedToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SecureConversationToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.Wss10:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.ProtectionToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.RecipientToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.binding.soap.interceptor.Soap11FaultOutInterceptor$Soap11FaultOutInterceptorInternal:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.aegis.util.jdom.StaxSerializer:void writeElement(org.jdom.Element,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.aegis.xml.stax.ElementWriter:java.lang.String getPrefixForNamespace(java.lang.String)",
            "org.apache.cxf.aegis.xml.stax.ElementWriter:java.lang.String getPrefixForNamespace(java.lang.String,java.lang.String)",
            "org.apache.cxf.xmlbeans.DataWriterImpl:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamWriter)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:java.lang.String getUniquePrefix(javax.xml.stream.XMLStreamWriter,java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.soap.interceptor.Soap12FaultOutInterceptor$Soap12FaultOutInterceptorInternal:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.AbstractSoapInterceptor:java.lang.String getFaultCodePrefix(javax.xml.stream.XMLStreamWriter,javax.xml.namespace.QName)",
            "org.apache.cxf.binding.soap.interceptor.Soap11FaultOutInterceptor$Soap11FaultOutInterceptorInternal:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)"
        ]
    },
    "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:java.lang.String getPrefix(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:java.lang.String getUniquePrefix(javax.xml.stream.XMLStreamWriter,java.lang.String,boolean)",
            "org.apache.cxf.ws.security.policy.model.InitiatorToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.RequiredParts:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.TransportToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.AlgorithmSuite:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.Wss11:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.EncryptionToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SymmetricBinding:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.X509Token:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SignatureToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.Trust10:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.HttpsToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.AsymmetricBinding:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.ContentEncryptedElements:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.KeyValueToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SignedEncryptedElements:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.Trust13:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.RequiredElements:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.UsernameToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SupportingToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.TransportBinding:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SignedEncryptedParts:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.Layout:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.IssuedToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SecureConversationToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.Wss10:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.ProtectionToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.RecipientToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.binding.soap.interceptor.Soap11FaultOutInterceptor$Soap11FaultOutInterceptorInternal:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.aegis.util.jdom.StaxSerializer:void writeElement(org.jdom.Element,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.aegis.xml.stax.ElementWriter:java.lang.String getPrefixForNamespace(java.lang.String)",
            "org.apache.cxf.aegis.xml.stax.ElementWriter:java.lang.String getPrefixForNamespace(java.lang.String,java.lang.String)",
            "org.apache.cxf.xmlbeans.DataWriterImpl:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamWriter)"
        ]
    },
    "org.apache.cxf.aegis.xml.stax.ElementWriter:java.lang.String getPrefixForNamespace(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.staxutils.CachingXmlEventWriter:java.lang.String getPrefix(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:java.lang.String getUniquePrefix(javax.xml.stream.XMLStreamWriter,java.lang.String,boolean)",
            "org.apache.cxf.ws.security.policy.model.InitiatorToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.RequiredParts:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.TransportToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.AlgorithmSuite:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.Wss11:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.EncryptionToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SymmetricBinding:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.X509Token:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SignatureToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.Trust10:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.HttpsToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.AsymmetricBinding:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.ContentEncryptedElements:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.KeyValueToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SignedEncryptedElements:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.Trust13:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.RequiredElements:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.UsernameToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SupportingToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.TransportBinding:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SignedEncryptedParts:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.Layout:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.IssuedToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SecureConversationToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.Wss10:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.ProtectionToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.RecipientToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.binding.soap.interceptor.Soap11FaultOutInterceptor$Soap11FaultOutInterceptorInternal:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.aegis.util.jdom.StaxSerializer:void writeElement(org.jdom.Element,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.aegis.xml.stax.ElementWriter:java.lang.String getPrefixForNamespace(java.lang.String)",
            "org.apache.cxf.aegis.xml.stax.ElementWriter:java.lang.String getPrefixForNamespace(java.lang.String,java.lang.String)",
            "org.apache.cxf.xmlbeans.DataWriterImpl:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamWriter)"
        ]
    },
    "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.util.Iterator getPrefixes(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl.JAXBExtensionHelper$MappingReaderDelegate$1:java.util.Iterator getPrefixes(java.lang.String)",
            "org.apache.cxf.aegis.util.jdom.StaxSerializer:boolean isDeclared(javax.xml.stream.XMLStreamWriter,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.aegis.xml.stax.AttributeWriter:void <init>(javax.xml.stream.XMLStreamWriter,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.xml.stax.ElementWriter:org.apache.cxf.aegis.xml.MessageWriter getAttributeWriter(java.lang.String)",
            "org.apache.cxf.aegis.xml.stax.ElementWriter:org.apache.cxf.aegis.xml.MessageWriter getAttributeWriter(java.lang.String,java.lang.String)",
            "org.apache.cxf.aegis.xml.stax.ElementWriter:org.apache.cxf.aegis.xml.MessageWriter getAttributeWriter(javax.xml.namespace.QName)"
        ]
    },
    "org.apache.cxf.aegis.xml.stax.ElementWriter:void <init>(javax.xml.stream.XMLStreamWriter,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.xml.stax.ElementWriter:void <init>(javax.xml.stream.XMLStreamWriter,java.lang.String,java.lang.String)",
            "org.apache.cxf.aegis.xml.stax.ElementWriter:org.apache.cxf.aegis.xml.MessageWriter getElementWriter(javax.xml.namespace.QName)"
        ]
    },
    "org.apache.cxf.aegis.xml.stax.ElementWriter:void <init>(java.io.OutputStream,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.aegis.type.encoded.SoapArrayType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.databinding.XMLStreamDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.aegis.databinding.ElementDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,org.w3c.dom.Element)",
            "org.apache.cxf.aegis.AegisXMLStreamDataWriter:void write(java.lang.Object,javax.xml.namespace.QName,boolean,javax.xml.stream.XMLStreamWriter,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.basic.ObjectType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.BeanType:void writeObjectInternal(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,boolean)",
            "org.apache.cxf.aegis.type.basic.BeanType:void writeElement(javax.xml.namespace.QName,java.lang.Object,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.ArrayType:void writeValue(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type,java.lang.String,java.lang.String)",
            "org.apache.cxf.aegis.type.encoded.StructType:void writeElement(javax.xml.namespace.QName,java.lang.Object,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.SoapArrayType:void writeValue(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.collection.MapType:void writeEntry(org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.type.Type,java.util.Map$Entry)"
        ]
    },
    "org.apache.cxf.common.util.WeakIdentityHashMap:java.util.Collection values()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.WSDLHelper:javax.wsdl.BindingOperation getBindingOperation(javax.wsdl.Definition,java.lang.String)",
            "org.apache.cxf.helpers.WSDLHelper:java.util.List getPortTypes(javax.wsdl.Definition)",
            "org.apache.cxf.helpers.WSDLHelper:java.util.List getInMessageParts(javax.wsdl.Operation)",
            "org.apache.cxf.helpers.WSDLHelper:java.util.List getOutMessageParts(javax.wsdl.Operation)",
            "org.apache.cxf.helpers.WSDLHelper:javax.wsdl.Binding getBinding(javax.wsdl.BindingOperation,javax.wsdl.Definition)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.util.Collection values()",
            "org.apache.cxf.common.util.CacheMap:java.util.Collection values()",
            "org.apache.cxf.common.util.TwoStageMap:java.util.Collection values()",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.util.Collection values()",
            "org.apache.cxf.management.jmx.export.runtime.ModelMBeanInfoSupporter:javax.management.modelmbean.ModelMBeanInfo buildModelMBeanInfo(javax.management.Descriptor)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:org.apache.cxf.message.MessageContentsList getParameters(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.transport.ConduitInitiatorManagerImpl:org.apache.cxf.transport.ConduitInitiator getConduitInitiatorForUri(java.lang.String)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updateDefinition(javax.wsdl.Definition,java.util.Map,java.util.Map,java.lang.String,org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updatePublishedEndpointUrl(java.lang.String,javax.wsdl.Definition,javax.xml.namespace.QName)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updateSchemaImports(javax.wsdl.extensions.schema.Schema,java.util.Map,java.lang.String)",
            "org.apache.cxf.transport.http.HTTPConduit:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.DestinationFactoryManagerImpl:org.apache.cxf.transport.DestinationFactory getDestinationFactoryForUri(java.lang.String)",
            "org.apache.cxf.transport.servlet.ServletTransportFactory:java.util.Collection getDestinations()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void postShutdown()",
            "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:org.apache.cxf.ws.security.tokenstore.SecurityToken getToken(java.lang.String)",
            "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:java.util.Collection getTokens(org.apache.cxf.ws.security.tokenstore.SecurityToken$State)",
            "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:void processTokenExpiry()",
            "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:void removeCancelledTokens()",
            "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:void removeExpiredTokens()",
            "org.apache.cxf.ws.rm.Source:java.util.Collection getAllSequences()",
            "org.apache.cxf.ws.rm.Source:java.util.Collection getAllUnacknowledgedSequences()",
            "org.apache.cxf.ws.rm.Destination:java.util.Collection getAllSequences()",
            "org.apache.cxf.ws.rm.RMManager:void shutdown()",
            "org.apache.cxf.workqueue.WorkQueueManagerImpl:void shutdown(boolean)",
            "org.apache.cxf.workqueue.WorkQueueManagerImpl:void run()",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.wsdl.Port getPort(org.apache.cxf.wsdl.WSDLManager,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.service.model.BindingOperationInfo:java.util.Collection getFaults()",
            "org.apache.cxf.service.model.AbstractMessageContainer:int getMessagePartIndex(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePartByIndex(int)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePart(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.AbstractMessageContainer:java.util.List getMessageParts()",
            "org.apache.cxf.service.model.InterfaceInfo:java.util.Collection getOperations()",
            "org.apache.cxf.service.model.BindingInfo:java.util.Collection getOperations()",
            "org.apache.cxf.service.model.BindingInfo:org.apache.cxf.service.model.BindingOperationInfo getOperation(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.OperationInfo:java.util.Collection getFaults()",
            "org.apache.cxf.binding.AbstractBindingFactory:org.apache.cxf.service.model.BindingInfo initializeBindingInfo(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding,org.apache.cxf.service.model.BindingInfo)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:void buildMessage(org.apache.cxf.service.model.MessageInfo,javax.wsdl.Message,org.apache.cxf.common.xmlschema.SchemaCollection,int,java.lang.String)",
            "org.apache.cxf.binding.soap.SoapVersionFactory:java.util.Iterator getVersions()",
            "org.apache.cxf.tools.common.model.JavaMethod:java.util.Collection getAnnotations()",
            "org.apache.cxf.tools.common.model.JavaParameter:java.util.Collection getAnnotations()",
            "org.apache.cxf.tools.util.SOAPBindingUtil:java.util.List getBindingOperationSoapFaults(javax.wsdl.BindingOperation)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:void addSOAPNamespace(javax.wsdl.Definition,boolean)",
            "org.apache.cxf.tools.util.ClassCollector:java.util.Collection getGeneratedFileInfo()",
            "org.apache.cxf.wsdl11.SchemaUtil:void parseImports(javax.wsdl.Definition,java.util.List)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildMockServices(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition,javax.wsdl.Service,javax.xml.namespace.QName,org.apache.cxf.service.model.DescriptionInfo)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void parseImports(javax.wsdl.Definition,java.util.List)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.BindingInfo buildBinding(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding)",
            "org.apache.cxf.bus.spring.Jsr250BeanPostProcessor:java.lang.Object postProcessAfterInitialization(java.lang.Object,java.lang.String)",
            "org.apache.cxf.aegis.type.encoded.MarshalRegistry$1:java.lang.Object next()",
            "org.apache.cxf.jaxws.ServiceImpl:void initializePorts()",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:java.util.Collection values()"
        ]
    },
    "org.apache.cxf.transport.servlet.ServletTransportFactory:java.util.Collection getDestinations()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.servlet.ServletController:java.util.List getServletDestinations()"
        ]
    },
    "org.apache.cxf.ws.rm.Source:java.util.Collection getAllSequences()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.Servant:void terminateSequence(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.RMEndpoint:void shutdown()"
        ]
    },
    "org.apache.cxf.ws.rm.Destination:java.util.Collection getAllSequences()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.RMOutInterceptor:void addAcknowledgements(org.apache.cxf.ws.rm.Destination,org.apache.cxf.ws.rm.RMProperties,org.apache.cxf.ws.rm.Identifier,org.apache.cxf.ws.addressing.v200408.AttributedURI)",
            "org.apache.cxf.ws.rm.RMEndpoint:void shutdown()"
        ]
    },
    "org.apache.cxf.service.model.BindingOperationInfo:java.util.Collection getFaults()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.FaultOutInterceptor:org.apache.cxf.service.model.FaultInfo getFaultForClass(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Class)",
            "org.apache.cxf.ws.addressing.ContextUtils:java.lang.String getActionFromServiceModel(org.apache.cxf.message.Message,java.lang.Exception)",
            "org.apache.cxf.ws.policy.EndpointPolicyImpl:void initializeVocabulary()",
            "org.apache.cxf.ws.policy.AbstractPolicyInterceptor:org.apache.cxf.service.model.BindingFaultInfo getBindingFaultInfo(org.apache.cxf.message.Message,java.lang.Exception,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:void createSoapBinding(org.apache.cxf.binding.soap.model.SoapBindingInfo)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBindingOperation(javax.wsdl.Definition,javax.wsdl.Binding,java.util.Collection)"
        ]
    },
    "org.apache.cxf.service.model.AbstractMessageContainer:java.util.List getMessageParts()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.JAXBSchemaInitializer:void end(org.apache.cxf.service.model.FaultInfo)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:org.apache.cxf.service.model.BindingOperationInfo findAnyOp(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:org.apache.cxf.message.MessageContentsList getParameters(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.interceptor.WrappedInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.BareInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.ClientFaultConverter:void processFaultDetail(org.apache.cxf.interceptor.Fault,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.WrappedOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.FaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePart(int)",
            "org.apache.cxf.service.model.ServiceModelUtil:java.util.List getOperationInputPartNames(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.BindingMessageInfo:void <init>(org.apache.cxf.service.model.MessageInfo,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.service.model.MessageInfo:java.util.Map getMessagePartsMap()",
            "org.apache.cxf.service.model.MessageInfo:java.util.List getOrderedParts(java.util.List)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void validateServiceModel()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean initializeClassInfo(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,java.util.List)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void setFaultClassInfo(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.OperationInfo createOperation(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.InterfaceInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeWrappedSchema(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createBareMessage(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.OperationInfo,boolean)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createWrappedMessageSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.AbstractMessageContainer,org.apache.cxf.service.model.AbstractMessageContainer,org.apache.ws.commons.schema.XmlSchema,javax.xml.namespace.QName)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createInputWrappedMessageParts(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,org.apache.cxf.service.model.MessageInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createOutputWrappedMessageParts(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,org.apache.cxf.service.model.MessageInfo)",
            "org.apache.cxf.service.factory.DefaultServiceConfiguration:java.lang.String getDefaultLocalName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int,java.lang.String)",
            "org.apache.cxf.service.ServiceModelVisitor:void visitOperation(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:void setupHeaders(org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.service.model.BindingMessageInfo,org.apache.cxf.service.model.BindingMessageInfo,org.apache.cxf.service.model.MessageInfo,org.apache.cxf.binding.soap.SoapBindingConfiguration)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:void addOutOfBandParts(org.apache.cxf.service.model.BindingOperationInfo,javax.wsdl.Message,org.apache.cxf.common.xmlschema.SchemaCollection,boolean,java.lang.String)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:void initializeMessage(org.apache.cxf.binding.soap.model.SoapBindingInfo,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.service.model.BindingMessageInfo)",
            "org.apache.cxf.binding.soap.interceptor.RPCInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor:boolean handleHeaderPart(boolean,org.apache.cxf.binding.soap.SoapMessage,java.lang.String)",
            "org.apache.cxf.binding.soap.HeaderUtil:java.util.Set getHeaderQNames(org.apache.cxf.service.model.BindingMessageInfo)",
            "org.apache.cxf.binding.xml.interceptor.XMLMessageOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.xml.XMLFormatValidator:boolean checkXMLFormat(org.apache.cxf.service.model.BindingInfo)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildService(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildMessage(javax.wsdl.Message,org.apache.cxf.service.model.AbstractMessageContainer,javax.wsdl.Definition)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void initializeMessage(org.apache.cxf.service.Service,org.apache.cxf.aegis.type.TypeMapping,org.apache.cxf.service.model.AbstractMessageContainer,int,java.util.Set)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void initializeMessageTypes(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.AbstractMessageContainer,int)",
            "org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean:void initializeWSDLOperationsForProvider()",
            "org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean:void initializeWrapping(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.jaxws.WrapperClassGenerator:java.util.Set generate()",
            "org.apache.cxf.jaxws.WrapperClassGenerator:void createWrapperClass(org.apache.cxf.service.model.MessagePartInfo,org.apache.cxf.service.model.MessageInfo,org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,boolean)",
            "org.apache.cxf.jaxws.interceptors.WebFaultOutInterceptor:org.apache.cxf.service.model.MessagePartInfo getFaultMessagePart(javax.xml.namespace.QName,org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.jaxws.interceptors.HolderOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.interceptors.WrapperClassOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.interceptors.WrapperClassOutInterceptor:org.apache.cxf.databinding.WrapperHelper createWrapperHelper(org.apache.cxf.databinding.WrapperCapableDatabinding,org.apache.cxf.service.model.MessageInfo,org.apache.cxf.service.model.MessageInfo,java.lang.Class)",
            "org.apache.cxf.jaxws.interceptors.HolderInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.interceptors.WrapperClassInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.interceptors.WrapperClassInInterceptor:org.apache.cxf.databinding.WrapperHelper createWrapperHelper(org.apache.cxf.databinding.WrapperCapableDatabinding,org.apache.cxf.service.model.MessageInfo,org.apache.cxf.service.model.MessageInfo,java.lang.Class)"
        ]
    },
    "org.apache.cxf.service.model.InterfaceInfo:java.util.Collection getOperations()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.BareInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.servlet.ServletController:void generateServiceList(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.service.model.ServiceInfo:void initMessagesMap()",
            "org.apache.cxf.service.model.BindingInfo:org.apache.cxf.service.model.BindingOperationInfo buildOperation(javax.xml.namespace.QName,java.lang.String,java.lang.String)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromClass()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean hasWrappedMethods(org.apache.cxf.service.model.InterfaceInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void validateServiceModel()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeWSDLOperations()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeWrappedSchema(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.service.ServiceModelVisitor:void walk()",
            "org.apache.cxf.binding.soap.SoapBindingFactory:org.apache.cxf.service.model.BindingInfo createBindingInfo(org.apache.cxf.service.model.ServiceInfo,java.lang.String,java.lang.Object)",
            "org.apache.cxf.binding.xml.XMLBindingFactory:org.apache.cxf.service.model.BindingInfo createBindingInfo(org.apache.cxf.service.model.ServiceInfo,java.lang.String,java.lang.Object)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:javax.wsdl.PortType buildPortType(org.apache.cxf.service.model.InterfaceInfo,javax.wsdl.Definition)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void initialize(org.apache.cxf.service.Service)",
            "org.apache.cxf.jaxws.JaxWsProxyFactoryBean:boolean needWrapperClassInterceptor(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.jaxws.WrapperClassGenerator:java.util.Set generate()"
        ]
    },
    "org.apache.cxf.service.model.BindingInfo:java.util.Collection getOperations()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.URIMappingInterceptor:org.apache.cxf.service.model.BindingOperationInfo findAnyOp(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.ws.policy.EndpointPolicyImpl:void initializeVocabulary()",
            "org.apache.cxf.ws.policy.EndpointPolicyImpl:void initializeInterceptors()",
            "org.apache.cxf.ws.security.trust.STSClient:org.apache.cxf.service.model.BindingOperationInfo findOperation(java.lang.String)",
            "org.apache.cxf.ws.rm.RMEndpoint:void setPolicies()",
            "org.apache.cxf.databinding.stax.StaxDataBindingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperation(org.apache.cxf.message.Exchange,java.lang.String)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperationForWrapperElement(org.apache.cxf.message.Exchange,javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createEndpoints()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeWSDLOperations()",
            "org.apache.cxf.binding.soap.SoapBindingFactory:void createSoapBinding(org.apache.cxf.binding.soap.model.SoapBindingInfo)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:org.apache.cxf.binding.Binding createBinding(org.apache.cxf.service.model.BindingInfo)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:org.apache.cxf.service.model.BindingInfo createBindingInfo(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding,java.lang.String)",
            "org.apache.cxf.binding.soap.interceptor.SoapActionInInterceptor:void getAndSetOperation(org.apache.cxf.binding.soap.SoapMessage,java.lang.String)",
            "org.apache.cxf.binding.soap.interceptor.RPCInInterceptor:org.apache.cxf.service.model.BindingOperationInfo getOperation(org.apache.cxf.message.Message,javax.xml.namespace.QName)",
            "org.apache.cxf.binding.soap.model.SoapBindingInfo:org.apache.cxf.service.model.OperationInfo getOperationByAction(java.lang.String)",
            "org.apache.cxf.binding.xml.interceptor.XMLMessageInInterceptor:org.apache.cxf.service.model.BindingOperationInfo getBindingOperationInfo(boolean,javax.xml.namespace.QName,org.apache.cxf.service.model.BindingInfo,javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.binding.xml.XMLFormatValidator:boolean checkXMLFormat(org.apache.cxf.service.model.BindingInfo)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBinding(java.util.Collection,java.util.Collection)",
            "org.apache.cxf.frontend.SimpleMethodDispatcher:org.apache.cxf.service.model.BindingOperationInfo getBindingOperation(java.lang.reflect.Method,org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory:org.apache.cxf.service.model.BindingInfo createBindingInfo()",
            "org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean:void initializeWSDLOperationsForProvider()"
        ]
    },
    "org.apache.cxf.service.model.OperationInfo:java.util.Collection getFaults()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.ClientFaultConverter:void processFaultDetail(org.apache.cxf.interceptor.Fault,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.addressing.MAPAggregator:java.lang.String getActionFromFaultMessage(org.apache.cxf.service.model.OperationInfo,java.lang.String)",
            "org.apache.cxf.service.model.BindingOperationInfo:void <init>(org.apache.cxf.service.model.BindingInfo,org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.UnwrappedOperationInfo:java.util.Collection getFaults()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromClass()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void validateServiceModel()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void setFaultClassInfo(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.ServiceModelVisitor:void visitOperation(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildPortTypeOperation(javax.wsdl.PortType,java.util.Collection,javax.wsdl.Definition)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void initializeOperation(org.apache.cxf.service.Service,org.apache.cxf.aegis.type.TypeMapping,org.apache.cxf.service.model.OperationInfo,java.util.Set)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void initializeOperationTypes(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean:org.apache.cxf.service.model.FaultInfo getFaultInfo(org.apache.cxf.service.model.OperationInfo,java.lang.Class)",
            "org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean:void buildWSAActions(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.jaxws.interceptors.WebFaultOutInterceptor:org.apache.cxf.service.model.MessagePartInfo getFaultMessagePart(javax.xml.namespace.QName,org.apache.cxf.service.model.OperationInfo)"
        ]
    },
    "org.apache.cxf.binding.soap.SoapVersionFactory:java.util.Iterator getVersions()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.tools.common.model.JavaMethod:java.util.Collection getAnnotations()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.tools.common.model.JavaMethod:java.lang.String toString()"
        ]
    },
    "org.apache.cxf.tools.common.model.JavaParameter:java.util.Collection getAnnotations()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.tools.common.model.JavaMethod:java.util.List getParameterList(boolean)"
        ]
    },
    "org.apache.cxf.tools.util.SOAPBindingUtil:void addSOAPNamespace(javax.wsdl.Definition,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.tools.util.ClassCollector:java.util.Collection getGeneratedFileInfo()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.tools.common.ClassUtils:void compile(org.apache.cxf.tools.common.ToolContext)"
        ]
    },
    "org.apache.cxf.bus.spring.Jsr250BeanPostProcessor:java.lang.Object postProcessAfterInitialization(java.lang.Object,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.aegis.type.encoded.MarshalRegistry$1:java.lang.Object next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.MapNamespaceContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.helpers.WSDLHelper:javax.wsdl.BindingOperation getBindingOperation(javax.wsdl.Definition,java.lang.String)",
            "org.apache.cxf.helpers.WSDLHelper:javax.wsdl.BindingOperation getBindingOperation(javax.wsdl.Binding,java.lang.String)",
            "org.apache.cxf.helpers.WSDLHelper:java.util.List getPortTypes(javax.wsdl.Definition)",
            "org.apache.cxf.helpers.WSDLHelper:java.util.List getInMessageParts(javax.wsdl.Operation)",
            "org.apache.cxf.helpers.WSDLHelper:java.util.List getOutMessageParts(javax.wsdl.Operation)",
            "org.apache.cxf.helpers.WSDLHelper:javax.wsdl.Binding getBinding(javax.wsdl.BindingOperation,javax.wsdl.Definition)",
            "org.apache.cxf.helpers.XMLUtils:org.w3c.dom.Element fetchElementByNameAttribute(org.w3c.dom.Element,java.lang.String,java.lang.String)",
            "org.apache.cxf.common.util.SortedArraySet:boolean addAll(java.util.Collection)",
            "org.apache.cxf.common.util.SortedArraySet:boolean containsAll(java.util.Collection)",
            "org.apache.cxf.common.util.SortedArraySet:boolean removeAll(java.util.Collection)",
            "org.apache.cxf.common.util.SortedArraySet:boolean retainAll(java.util.Collection)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.util.Set entrySet()",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.util.Set keySet()",
            "org.apache.cxf.common.util.ReflectionInvokationHandler$WrapperIterator:java.lang.Object next()",
            "org.apache.cxf.common.util.StringUtils:java.util.List getParts(java.lang.String,java.lang.String)",
            "org.apache.cxf.common.util.StringUtils:java.lang.String getFirstNotEmpty(java.lang.String,java.lang.String)",
            "org.apache.cxf.common.util.StringUtils:java.lang.String getFirstNotEmpty(java.util.List)",
            "org.apache.cxf.common.util.ReflectionUtil:java.util.List getPackagesFromJar(java.io.File)",
            "org.apache.cxf.common.util.CacheMap:void updateMainDataMap()",
            "org.apache.cxf.common.util.CacheMap:void putAll(java.util.Map)",
            "org.apache.cxf.common.util.AbstractTwoStageCache:boolean recycle(java.lang.Object)",
            "org.apache.cxf.common.util.CollectionUtils:java.util.Collection diff(java.util.Collection,java.util.Collection)",
            "org.apache.cxf.common.util.CollectionUtils:boolean isEmpty(java.util.Collection)",
            "org.apache.cxf.common.util.TwoStageMap:void putAll(java.util.Map)",
            "org.apache.cxf.common.injection.ResourceInjector:void invokePostConstruct()",
            "org.apache.cxf.common.injection.ResourceInjector:void invokePreDestroy()",
            "org.apache.cxf.common.annotation.AnnotationProcessor:void processMethods(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)",
            "org.apache.cxf.common.annotation.AnnotationProcessor:void processFields(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)",
            "org.apache.cxf.common.annotation.AnnotationProcessor:void processClass(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)",
            "org.apache.cxf.resource.DefaultResourceManager:java.lang.Object findResource(java.lang.String,java.lang.Class,boolean,java.util.List)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.util.Set entrySet()",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.util.Collection values()",
            "org.apache.cxf.configuration.spring.SpringBeanMap:void processBeans(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.configuration.spring.SpringBeanQNameMap:void processBeans(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void initWildcardDefinitionMap()",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureBean(java.lang.String,java.lang.Object,boolean)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureWithWildCard(java.lang.String,java.lang.Object)",
            "org.apache.cxf.configuration.jsse.spring.TLSParameterJaxBUtils:java.security.KeyStore createTrustStore(java.io.InputStream)",
            "org.apache.cxf.jaxb.JAXBUtils:java.lang.String makeConventionalIdentifier(java.util.List,org.apache.cxf.jaxb.JAXBUtils$IdentifierType)",
            "org.apache.cxf.jaxb.JAXBDataBinding:void initialize(org.apache.cxf.service.Service)",
            "org.apache.cxf.jaxb.JAXBDataBinding:org.apache.cxf.jaxb.JAXBDataBinding$CachedContextAndSchemas createJAXBContextAndSchemas(java.util.Set,java.lang.String)",
            "org.apache.cxf.jaxb.JAXBDataBinding:void scanPackages(java.util.Set)",
            "org.apache.cxf.jaxb.JAXBSchemaInitializer:javax.xml.namespace.QName getTypeName(org.apache.cxf.jaxb.JAXBBeanInfo)",
            "org.apache.cxf.jaxb.JAXBSchemaInitializer:void end(org.apache.cxf.service.model.FaultInfo)",
            "org.apache.cxf.jaxb.JAXBSchemaInitializer:void buildExceptionType(org.apache.cxf.service.model.MessagePartInfo,java.lang.Class)",
            "org.apache.cxf.jaxb.JAXBSchemaInitializer:void addElement(org.apache.ws.commons.schema.XmlSchemaSequence,org.apache.cxf.jaxb.JAXBBeanInfo,javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.jaxb.JAXBSchemaInitializer:boolean isExistSchemaElement(org.apache.ws.commons.schema.XmlSchema,javax.xml.namespace.QName)",
            "org.apache.cxf.jaxb.io.DataWriterImpl:javax.xml.bind.Marshaller createMarshaller(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.jaxb.io.DataReaderImpl:javax.xml.bind.Unmarshaller createUnmarshaller()",
            "org.apache.cxf.management.utils.ManagementConsole:void listAllManagedEndpoint()",
            "org.apache.cxf.management.utils.ManagementConsole:void invokeEndpoint(java.lang.String)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElementEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.message.MessageUtils:boolean isDOMPresent(org.apache.cxf.message.Message)",
            "org.apache.cxf.message.MessageImpl:void copyContent(org.apache.cxf.message.Message,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:org.apache.cxf.service.model.BindingOperationInfo findAnyOp(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.util.Map keepInOrder(java.util.Map,org.apache.cxf.service.model.OperationInfo,java.util.List)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:org.apache.cxf.message.MessageContentsList getParameters(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.util.Map getQueries(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.WrappedInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.BareInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.ClientFaultConverter:void processFaultDetail(org.apache.cxf.interceptor.Fault,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:org.apache.cxf.service.model.MessagePartInfo findMessagePart(org.apache.cxf.message.Exchange,java.util.Collection,javax.xml.namespace.QName,boolean,int,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.FaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.FaultOutInterceptor:org.apache.cxf.service.model.FaultInfo getFaultForClass(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Class)",
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:void writeParts(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.message.MessageContentsList,java.util.List)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void getPara(org.apache.cxf.staxutils.DepthXMLStreamReader,org.apache.cxf.databinding.DataReader,org.apache.cxf.message.MessageContentsList,java.util.Iterator,org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.ConduitInitiatorManagerImpl:org.apache.cxf.transport.ConduitInitiator getConduitInitiatorForUri(java.lang.String)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updateDoc(org.w3c.dom.Document,java.lang.String,java.util.Map,java.util.Map)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updateDefinition(javax.wsdl.Definition,java.util.Map,java.util.Map,java.lang.String,org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updatePublishedEndpointUrl(java.lang.String,javax.wsdl.Definition,javax.xml.namespace.QName)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void setSoapAddressLocationOn(javax.wsdl.Port,java.lang.String)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updateSchemaImports(javax.wsdl.extensions.schema.Schema,java.util.Map,java.lang.String)",
            "org.apache.cxf.transport.http.Cookie:void handleSetCookie(java.util.Map,java.util.List)",
            "org.apache.cxf.transport.http.AbstractHTTPTransportFactory:void registerWithBindingManager()",
            "org.apache.cxf.transport.http.AbstractHTTPTransportFactory:org.apache.cxf.service.model.EndpointInfo createEndpointInfo(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.BindingInfo,javax.wsdl.Port)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPClientPolicy getClient(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPClientPolicy)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPServerPolicy getServer(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPServerPolicy)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPClientPolicy getClient(org.apache.cxf.ws.policy.PolicyEngine,org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.transport.Conduit)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPServerPolicy getServer(org.apache.cxf.ws.policy.PolicyEngine,org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.transport.Destination)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:void assertClientPolicy(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPClientPolicy)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:void assertServerPolicy(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPServerPolicy)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPClientPolicy getClient(java.util.Collection)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPServerPolicy getServer(java.util.Collection)",
            "org.apache.cxf.transport.http.HTTPConduit:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:void transferProtocolHeadersToURLConnection(org.apache.cxf.message.Message,java.net.URLConnection)",
            "org.apache.cxf.transport.http.HTTPConduit:void logProtocolHeaders(java.util.logging.Level,org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:java.lang.String extractAuthorizationRealm(java.util.Map)",
            "org.apache.cxf.transport.http.HTTPConduit:java.lang.String extractLocation(java.util.Map)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void copyResponseHeaders(org.apache.cxf.message.Message,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponseInternal()",
            "org.apache.cxf.transport.http.gzip.GZIPOutInterceptor:org.apache.cxf.transport.http.gzip.GZIPOutInterceptor$UseGzip gzipPermitted(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.gzip.GZIPInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.AbstractMultiplexDestination:java.lang.String extractStringElementFromAny(javax.xml.namespace.QName,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.transport.DestinationFactoryManagerImpl:org.apache.cxf.transport.DestinationFactory getDestinationFactoryForUri(java.lang.String)",
            "org.apache.cxf.transport.servlet.ServletController:void updateDests(javax.servlet.http.HttpServletRequest)",
            "org.apache.cxf.transport.servlet.ServletController:void invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.servlet.ServletController:org.apache.cxf.transport.servlet.ServletDestination checkRestfulRequest(javax.servlet.http.HttpServletRequest)",
            "org.apache.cxf.transport.servlet.ServletController:void generateServiceList(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.servlet.ServletController:void generateUnformattedServiceList(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.servlet.ServletTransportFactory:void register()",
            "org.apache.cxf.transport.servlet.AbstractCXFServlet:void replaceDestinationFactory()",
            "org.apache.cxf.transport.https.CertificateHostnameVerifier$Certificates:java.lang.String[] getDNSSubjectAlts(java.security.cert.X509Certificate)",
            "org.apache.cxf.transport.https.SSLUtils:java.util.List compileRegexPatterns(java.util.List,boolean,java.util.logging.Logger)",
            "org.apache.cxf.transport.https.SSLUtils:boolean matchesOneOf(java.lang.String,java.util.List)",
            "org.apache.cxf.transport.https.CertificateHostnameVerifier$AbstractVerifier:void check(java.lang.String[],java.lang.String[],java.lang.String[],boolean,boolean)",
            "org.apache.cxf.transport.http_jetty.spring.JettySpringTypesFactory:java.util.Map toThreadingParameters(java.util.List)",
            "org.apache.cxf.transport.http_jetty.spring.JettySpringTypesFactory:java.util.Map toTLSServerParamenters(java.util.List)",
            "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineFactoryBeanDefinitionParser:java.util.List getRequiredElementsList(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,javax.xml.namespace.QName,org.springframework.beans.factory.support.BeanDefinitionBuilder)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void doService(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine:void addServant(java.net.URL,org.apache.cxf.transport.http_jetty.JettyHTTPHandler)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPTransportFactory:void finalizeConfig()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void setEnginesList(java.util.List)",
            "org.apache.cxf.transport.jms.JMSUtils:void addProtocolHeaders(javax.jms.Message,java.util.Map)",
            "org.apache.cxf.feature.AbstractFeature:java.lang.Object getActive(java.util.List,java.lang.Class)",
            "org.apache.cxf.endpoint.ClientLifeCycleManagerImpl:void clientCreated(org.apache.cxf.endpoint.Client)",
            "org.apache.cxf.endpoint.ClientLifeCycleManagerImpl:void clientDestroyed(org.apache.cxf.endpoint.Client)",
            "org.apache.cxf.endpoint.ServerLifeCycleManagerImpl:void startServer(org.apache.cxf.endpoint.Server)",
            "org.apache.cxf.endpoint.ServerLifeCycleManagerImpl:void stopServer(org.apache.cxf.endpoint.Server)",
            "org.apache.cxf.endpoint.EndpointResolverRegistryImpl:org.apache.cxf.ws.addressing.EndpointReferenceType resolve(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.endpoint.EndpointResolverRegistryImpl:org.apache.cxf.ws.addressing.EndpointReferenceType renew(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.endpoint.EndpointResolverRegistryImpl:org.apache.cxf.ws.addressing.EndpointReferenceType mint(javax.xml.namespace.QName)",
            "org.apache.cxf.endpoint.EndpointResolverRegistryImpl:org.apache.cxf.ws.addressing.EndpointReferenceType mint(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.endpoint.ServiceContractResolverRegistryImpl:java.net.URI getContractLocation(javax.xml.namespace.QName)",
            "org.apache.cxf.endpoint.ClientImpl:org.apache.cxf.service.model.EndpointInfo findEndpoint(org.apache.cxf.service.Service,javax.xml.namespace.QName)",
            "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:org.apache.cxf.endpoint.Client createClient(java.lang.String,javax.xml.namespace.QName,java.lang.ClassLoader,javax.xml.namespace.QName,java.util.List)",
            "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:void addBindingFiles(java.util.List,org.apache.cxf.jaxb.JAXBUtils$SchemaCompiler)",
            "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:boolean isValidPackage(org.apache.cxf.jaxb.JAXBUtils$JPackage)",
            "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:void outputDebug(org.apache.cxf.jaxb.JAXBUtils$JCodeModel)",
            "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:void addSchemas(java.lang.String,java.util.Collection,org.apache.cxf.jaxb.JAXBUtils$SchemaCompiler)",
            "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:boolean compileJavaSrc(java.lang.String,java.util.List,java.lang.String)",
            "org.apache.cxf.endpoint.dynamic.TypeClassInitializer:void begin(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.ws.addressing.ContextUtils:java.lang.String getActionFromServiceModel(org.apache.cxf.message.Message,java.lang.Exception)",
            "org.apache.cxf.ws.addressing.MAPAggregator:void assertAssertion(org.apache.cxf.ws.policy.AssertionInfoMap,javax.xml.namespace.QName)",
            "org.apache.cxf.ws.addressing.MAPAggregator:boolean hasUsingAddressing(java.util.List)",
            "org.apache.cxf.ws.addressing.MAPAggregator:java.lang.String getActionFromFaultMessage(org.apache.cxf.service.model.OperationInfo,java.lang.String)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void encodeReferenceParameters(org.apache.cxf.ws.addressing.AddressingProperties,org.w3c.dom.Element,javax.xml.bind.Marshaller)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void addMustUnderstandAttribute(org.w3c.dom.Element,javax.xml.namespace.QName,org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.addressing.AddressingPropertiesImpl)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:org.apache.cxf.ws.addressing.AddressingProperties unmarshalMAPs(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void decodeReferenceParameters(java.util.Set,org.apache.cxf.ws.addressing.AddressingPropertiesImpl,javax.xml.bind.Unmarshaller)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void discardMAPs(java.util.List,org.apache.cxf.ws.addressing.AddressingProperties)",
            "org.apache.cxf.ws.policy.builder.primitive.NestedPrimitiveAssertion:org.apache.neethi.PolicyComponent normalize()",
            "org.apache.cxf.ws.policy.builder.primitive.NestedPrimitiveAssertion:boolean isAsserted(org.apache.cxf.ws.policy.AssertionInfoMap)",
            "org.apache.cxf.ws.policy.builder.primitive.NestedPrimitiveAssertion:boolean isPolicyAsserted(org.apache.neethi.PolicyOperator,org.apache.cxf.ws.policy.AssertionInfoMap)",
            "org.apache.cxf.ws.policy.builder.primitive.PrimitiveAssertion:boolean isAsserted(org.apache.cxf.ws.policy.AssertionInfoMap)",
            "org.apache.cxf.ws.policy.util.PolicyComparator:boolean compare(java.util.List,java.util.List)",
            "org.apache.cxf.ws.policy.AssertionInfoMap:void <init>(java.util.Collection)",
            "org.apache.cxf.ws.policy.AssertionInfoMap:void putAssertionInfo(org.apache.cxf.ws.policy.PolicyAssertion)",
            "org.apache.cxf.ws.policy.AssertionInfoMap:boolean supportsAlternative(org.apache.cxf.ws.policy.PolicyAssertion,java.util.List)",
            "org.apache.cxf.ws.policy.AssertionInfoMap:boolean supportsAlternative(java.util.Collection,java.util.List)",
            "org.apache.cxf.ws.policy.AssertionInfoMap:void checkEffectivePolicy(org.apache.neethi.Policy)",
            "org.apache.cxf.ws.policy.AssertionInfoMap:void check()",
            "org.apache.cxf.ws.policy.AssertionInfoMap:void getAssertions(org.apache.neethi.PolicyOperator,java.util.Collection)",
            "org.apache.cxf.ws.policy.Intersector:boolean compatibleAlternatives(java.util.Collection,java.util.Collection)",
            "org.apache.cxf.ws.policy.Intersector:boolean compatiblePolicies(org.apache.neethi.Policy,org.apache.neethi.Policy)",
            "org.apache.cxf.ws.policy.Intersector:org.apache.neethi.Policy intersect(org.apache.neethi.Policy,org.apache.neethi.Policy)",
            "org.apache.cxf.ws.policy.Intersector:org.apache.cxf.ws.policy.PolicyAssertion findCompatibleAssertion(org.apache.cxf.ws.policy.PolicyAssertion,java.util.Collection)",
            "org.apache.cxf.ws.policy.EndpointPolicyImpl:java.util.Collection getSupportedAlternatives()",
            "org.apache.cxf.ws.policy.EndpointPolicyImpl:void initializeVocabulary()",
            "org.apache.cxf.ws.policy.EndpointPolicyImpl:java.util.Collection getSupportedAlternatives(org.apache.neethi.Policy)",
            "org.apache.cxf.ws.policy.EndpointPolicyImpl:void initializeInterceptors(org.apache.cxf.ws.policy.PolicyInterceptorProviderRegistry,java.util.Set,org.apache.cxf.ws.policy.PolicyAssertion,boolean)",
            "org.apache.cxf.ws.policy.EndpointPolicyImpl:void initializeInterceptors()",
            "org.apache.cxf.ws.policy.EndpointPolicyImpl:void checkExactlyOnes()",
            "org.apache.cxf.ws.policy.ServerPolicyOutFaultInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.policy.WSPolicyFeature:org.apache.neethi.Policy initializeEndpointPolicy(org.apache.cxf.endpoint.Endpoint,org.apache.cxf.Bus)",
            "org.apache.cxf.ws.policy.PolicyInInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.policy.PolicyOutInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.policy.PolicyInterceptorProviderRegistryImpl:void register(org.apache.cxf.ws.policy.PolicyInterceptorProvider)",
            "org.apache.cxf.ws.policy.PolicyInterceptorProviderRegistryImpl:java.util.List getInterceptors(java.util.Collection,boolean,boolean)",
            "org.apache.cxf.ws.policy.selector.MinimalAlternativeSelector:java.util.Collection selectAlternative(org.apache.neethi.Policy,org.apache.cxf.ws.policy.PolicyEngine,org.apache.cxf.ws.policy.Assertor)",
            "org.apache.cxf.ws.policy.selector.FirstAlternativeSelector:java.util.Collection selectAlternative(org.apache.neethi.Policy,org.apache.cxf.ws.policy.PolicyEngine,org.apache.cxf.ws.policy.Assertor)",
            "org.apache.cxf.ws.policy.selector.MaximalAlternativeSelector:java.util.Collection selectAlternative(org.apache.neethi.Policy,org.apache.cxf.ws.policy.PolicyEngine,org.apache.cxf.ws.policy.Assertor)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:org.apache.neethi.Policy getAggregatedServicePolicy(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:org.apache.neethi.Policy getAggregatedEndpointPolicy(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:org.apache.neethi.Policy getAggregatedOperationPolicy(org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:org.apache.neethi.Policy getAggregatedMessagePolicy(org.apache.cxf.service.model.BindingMessageInfo)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:org.apache.neethi.Policy getAggregatedFaultPolicy(org.apache.cxf.service.model.BindingFaultInfo)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:java.util.Collection getAssertions(org.apache.cxf.ws.policy.EffectivePolicy,boolean)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:void addAssertions(org.apache.neethi.PolicyComponent,boolean,java.util.Collection)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:java.util.Set getVocabulary(org.apache.neethi.PolicyComponent,boolean)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:boolean supportsAlternative(java.util.Collection,org.apache.cxf.ws.policy.Assertor)",
            "org.apache.cxf.ws.policy.PolicyUtils:boolean contains(java.util.Collection,org.apache.neethi.Assertion)",
            "org.apache.cxf.ws.policy.PolicyUtils:boolean contains(java.util.Collection,java.util.Collection)",
            "org.apache.cxf.ws.policy.PolicyUtils:void printPolicyComponent(org.apache.neethi.PolicyComponent,java.lang.StringBuffer,int)",
            "org.apache.cxf.ws.policy.mtom.MTOMPolicyInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.policy.EffectivePolicyImpl:void initialiseInterceptors(org.apache.cxf.ws.policy.PolicyEngineImpl,boolean)",
            "org.apache.cxf.ws.policy.EffectivePolicyImpl:java.util.Collection getSupportedAlternatives(org.apache.cxf.ws.policy.PolicyEngineImpl,org.apache.neethi.Policy)",
            "org.apache.cxf.ws.policy.EffectivePolicyImpl:void initialiseInterceptors(org.apache.cxf.ws.policy.PolicyInterceptorProviderRegistry,org.apache.cxf.ws.policy.PolicyEngineImpl,java.util.Set,org.apache.cxf.ws.policy.PolicyAssertion,boolean)",
            "org.apache.cxf.ws.policy.attachment.wsdl11.Wsdl11AttachmentPolicyProvider$ExtensibleInfo:java.lang.Object getExtensor(java.lang.Class)",
            "org.apache.cxf.ws.policy.attachment.wsdl11.Wsdl11AttachmentPolicyProvider$ExtensibleInfo:java.util.List getExtensors(java.lang.Class)",
            "org.apache.cxf.ws.policy.attachment.wsdl11.Wsdl11AttachmentPolicyProvider:org.apache.neethi.Policy getElementPolicy(org.apache.cxf.service.model.Extensible,boolean,org.apache.cxf.service.model.DescriptionInfo)",
            "org.apache.cxf.ws.policy.attachment.reference.LocalServiceModelReferenceResolver:org.apache.neethi.Policy resolveReference(java.lang.String)",
            "org.apache.cxf.ws.policy.attachment.reference.RemoteReferenceResolver:org.apache.neethi.Policy resolveReference(java.lang.String)",
            "org.apache.cxf.ws.policy.attachment.external.PolicyAttachment:boolean appliesTo(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.ws.policy.attachment.external.PolicyAttachment:boolean appliesTo(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.ws.policy.attachment.external.PolicyAttachment:boolean appliesTo(org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.ws.policy.attachment.external.PolicyAttachment:boolean appliesTo(org.apache.cxf.service.model.BindingMessageInfo)",
            "org.apache.cxf.ws.policy.attachment.external.PolicyAttachment:boolean appliesTo(org.apache.cxf.service.model.BindingFaultInfo)",
            "org.apache.cxf.ws.policy.attachment.external.ExternalAttachmentProvider:org.apache.neethi.Policy getEffectivePolicy(org.apache.cxf.service.model.BindingFaultInfo)",
            "org.apache.cxf.ws.policy.attachment.external.ExternalAttachmentProvider:org.apache.neethi.Policy getEffectivePolicy(org.apache.cxf.service.model.BindingMessageInfo)",
            "org.apache.cxf.ws.policy.attachment.external.ExternalAttachmentProvider:org.apache.neethi.Policy getEffectivePolicy(org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.ws.policy.attachment.external.ExternalAttachmentProvider:org.apache.neethi.Policy getEffectivePolicy(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.ws.policy.attachment.external.ExternalAttachmentProvider:org.apache.neethi.Policy getEffectivePolicy(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.ws.policy.attachment.external.ExternalAttachmentProvider:void readDocument()",
            "org.apache.cxf.ws.policy.AssertionBuilderRegistryImpl:void register(org.apache.cxf.ws.policy.AssertionBuilder)",
            "org.apache.cxf.ws.policy.ClientPolicyInFaultInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.policy.AbstractPolicyInterceptor:org.apache.cxf.service.model.BindingFaultInfo getBindingFaultInfo(org.apache.cxf.message.Message,java.lang.Exception,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.ws.security.policy.builders.X509TokenBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.builders.X509TokenBuilder:void processAlternative(java.util.List,org.apache.cxf.ws.security.policy.model.X509Token,org.apache.cxf.ws.security.policy.SPConstants)",
            "org.apache.cxf.ws.security.policy.builders.SupportingTokens12Builder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.builders.SupportingTokens12Builder:void processAlternative(java.util.List,org.apache.cxf.ws.security.policy.model.SupportingToken)",
            "org.apache.cxf.ws.security.policy.builders.InitiatorTokenBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.builders.InitiatorTokenBuilder:void processAlternative(java.util.List,org.apache.cxf.ws.security.policy.model.InitiatorToken)",
            "org.apache.cxf.ws.security.policy.builders.AsymmetricBindingBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.builders.AsymmetricBindingBuilder:void processAlternative(java.util.List,org.apache.cxf.ws.security.policy.model.AsymmetricBinding,org.apache.cxf.ws.security.policy.SPConstants)",
            "org.apache.cxf.ws.security.policy.builders.IssuedTokenBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.builders.IssuedTokenBuilder:void processAlternative(java.util.List,org.apache.cxf.ws.security.policy.model.IssuedToken)",
            "org.apache.cxf.ws.security.policy.builders.ProtectionTokenBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.builders.TransportTokenBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.builders.RecipientTokenBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.builders.RecipientTokenBuilder:void processAlternative(java.util.List,org.apache.cxf.ws.security.policy.model.RecipientToken)",
            "org.apache.cxf.ws.security.policy.builders.SupportingTokensBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.builders.SupportingTokensBuilder:void processAlternative(java.util.List,org.apache.cxf.ws.security.policy.model.SupportingToken)",
            "org.apache.cxf.ws.security.policy.builders.SymmetricBindingBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.builders.SymmetricBindingBuilder:void processAlternatives(java.util.List,org.apache.cxf.ws.security.policy.model.SymmetricBinding,org.apache.cxf.ws.security.policy.SPConstants)",
            "org.apache.cxf.ws.security.policy.model.RequiredParts:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.ContentEncryptedElements:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SignedEncryptedElements:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.RequiredElements:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SupportingToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SupportingToken:org.apache.neethi.Policy getPolicy()",
            "org.apache.cxf.ws.security.policy.model.SignedEncryptedParts:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.AbstractSecurityAssertion:boolean isAsserted(org.apache.cxf.ws.policy.AssertionInfoMap)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor$SecureConversationTokenFinderInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor$SecureConversationCancelInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.policy.interceptors.HttpsTokenInterceptorProvider$HttpsTokenInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.policy.interceptors.HttpsTokenInterceptorProvider$HttpsTokenInInterceptor:void assertHttps(java.util.Collection,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationOutInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor:org.apache.cxf.ws.security.policy.model.Binding getBinding(org.apache.cxf.ws.policy.AssertionInfoMap)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor:void recalcEffectivePolicy(org.apache.cxf.binding.soap.SoapMessage,java.lang.String,org.apache.neethi.Policy)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor:void unmapSecurityProps(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.policy.interceptors.IssuedTokenInterceptorProvider$IssuedTokenOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.policy.interceptors.IssuedTokenInterceptorProvider$IssuedTokenOutInterceptor:org.apache.cxf.ws.security.policy.model.Trust10 getTrust10(org.apache.cxf.ws.policy.AssertionInfoMap)",
            "org.apache.cxf.ws.security.policy.interceptors.IssuedTokenInterceptorProvider$IssuedTokenOutInterceptor:org.apache.cxf.ws.security.policy.model.Trust13 getTrust13(org.apache.cxf.ws.policy.AssertionInfoMap)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationTokenInterceptorProvider:org.apache.cxf.ws.security.policy.model.Trust10 getTrust10(org.apache.cxf.ws.policy.AssertionInfoMap)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationTokenInterceptorProvider:org.apache.cxf.ws.security.policy.model.Trust13 getTrust13(org.apache.cxf.ws.policy.AssertionInfoMap)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationTokenInterceptorProvider:org.apache.cxf.ws.policy.PolicyAssertion getAddressingPolicy(org.apache.cxf.ws.policy.AssertionInfoMap,boolean)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationTokenInterceptorProvider:void mapSecurityProps(org.apache.cxf.message.Message,java.util.Map)",
            "org.apache.cxf.ws.security.policy.interceptors.HttpsTokenInterceptorProvider$HttpsTokenOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.policy.interceptors.HttpsTokenInterceptorProvider$HttpsTokenOutInterceptor:void assertHttps(java.util.Collection,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.policy.interceptors.IssuedTokenInterceptorProvider$IssuedTokenInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.trust.STSClient:void setPolicy(org.apache.neethi.Policy)",
            "org.apache.cxf.ws.security.trust.STSClient:org.apache.cxf.service.model.BindingOperationInfo findOperation(java.lang.String)",
            "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:org.apache.cxf.ws.security.tokenstore.SecurityToken getToken(java.lang.String)",
            "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:java.util.Collection getTokens(org.apache.cxf.ws.security.tokenstore.SecurityToken$State)",
            "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:void processTokenExpiry()",
            "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:void removeCancelledTokens()",
            "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:void removeExpiredTokens()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.TransportBindingHandler:void addUsernameTokens(org.apache.cxf.ws.security.policy.model.SupportingToken)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.TransportBindingHandler:void handleBinding()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.TransportBindingHandler:byte[] doX509TokenSignature(org.apache.cxf.ws.security.policy.model.Token,org.apache.cxf.ws.security.policy.model.SignedEncryptedParts,org.apache.cxf.ws.security.policy.model.TokenWrapper)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.TransportBindingHandler:byte[] doIssuedTokenSignature(org.apache.cxf.ws.security.policy.model.Token,org.apache.cxf.ws.security.policy.model.SignedEncryptedParts,org.apache.cxf.ws.security.policy.model.TokenWrapper,org.apache.cxf.ws.security.tokenstore.SecurityToken)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AsymmetricBindingHandler:void doSignBeforeEncrypt()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AsymmetricBindingHandler:void doEncryptBeforeSign()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AsymmetricBindingHandler:void assertUnusedTokens(org.apache.cxf.ws.security.policy.model.TokenWrapper)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void policyNotAsserted(org.apache.cxf.ws.policy.PolicyAssertion,java.lang.Exception)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void policyNotAsserted(org.apache.cxf.ws.policy.PolicyAssertion,java.lang.String)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void policyAsserted(org.apache.cxf.ws.policy.PolicyAssertion)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void policyAsserted(javax.xml.namespace.QName)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:java.util.Collection findAndAssertPolicy(javax.xml.namespace.QName)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:org.apache.ws.security.message.WSSecTimestamp createTimestamp()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:org.apache.ws.security.message.WSSecTimestamp handleLayout(org.apache.ws.security.message.WSSecTimestamp)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void assertSupportingTokens(java.util.Collection)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:java.util.Map handleSupportingTokens(java.util.Collection,boolean)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:java.util.Map handleSupportingTokens(org.apache.cxf.ws.security.policy.model.SupportingToken,boolean,java.util.Map)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void addSignatureParts(java.util.Map,java.util.List)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:org.apache.ws.security.message.WSSecUsernameToken addUsernameToken(org.apache.cxf.ws.security.policy.model.UsernameToken)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:java.util.Vector getEncryptedParts()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:java.util.Vector getSignedParts()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:java.util.Vector getPartsAndElements(boolean,boolean,java.util.List,java.util.List,java.util.Map)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:org.apache.cxf.ws.security.policy.model.Wss10 getWss10()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void doEndorsedSignatures(java.util.Map,boolean,boolean)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void handleEncryptedSignedHeaders(java.util.Vector,java.util.Vector)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.SymmetricBindingHandler:void doEncryptBeforeSign()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.SymmetricBindingHandler:void doSignBeforeEncrypt()",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JOutInterceptor$PolicyBasedWSS4JOutInterceptorInternal:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:void handleWSS11(org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:boolean assertPolicy(org.apache.cxf.ws.policy.AssertionInfoMap,javax.xml.namespace.QName)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:void assertPolicy(org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.ws.policy.PolicyAssertion)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:void notAssertPolicy(org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.ws.policy.PolicyAssertion,java.lang.String)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:java.lang.String checkAsymetricBinding(org.apache.cxf.ws.policy.AssertionInfoMap,java.lang.String,org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:java.lang.String checkSymetricBinding(org.apache.cxf.ws.policy.AssertionInfoMap,java.lang.String,org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:void assertTokens(org.apache.cxf.ws.policy.AssertionInfoMap,javax.xml.namespace.QName,java.util.Collection,org.apache.cxf.binding.soap.SoapMessage,javax.xml.soap.SOAPMessage,java.lang.String)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:void doResults(org.apache.cxf.binding.soap.SoapMessage,java.lang.String,javax.xml.soap.SOAPMessage,java.util.Vector)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:boolean assertSymetricBinding(org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.binding.soap.SoapMessage,javax.xml.soap.SOAPMessage,org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor$Protections,boolean)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:boolean assertAsymetricBinding(org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.binding.soap.SoapMessage,javax.xml.soap.SOAPMessage,org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor$Protections,boolean)",
            "org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor:void doResults(org.apache.cxf.binding.soap.SoapMessage,java.lang.String,javax.xml.soap.SOAPMessage,java.util.Vector)",
            "org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor:org.apache.ws.security.WSSecurityEngine createSecurityEngine(java.util.Map)",
            "org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor$TokenStoreCallbackHandler:void handle(javax.security.auth.callback.Callback[])",
            "org.apache.cxf.ws.rm.AbstractRMInterceptor:void assertReliability(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.Servant:void terminateSequence(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.AbstractSequence:boolean isAcknowledged(java.math.BigInteger)",
            "org.apache.cxf.ws.rm.DestinationSequence:void scheduleDeferredAcknowledgement(long)",
            "org.apache.cxf.ws.rm.policy.PolicyUtils:org.apache.cxf.ws.rm.policy.RMAssertion getRMAssertion(org.apache.cxf.ws.rm.policy.RMAssertion,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.Source:java.util.Collection getAllUnacknowledgedSequences()",
            "org.apache.cxf.ws.rm.RMInInterceptor:void processAcknowledgments(org.apache.cxf.ws.rm.Source,org.apache.cxf.ws.rm.RMProperties)",
            "org.apache.cxf.ws.rm.RMOutInterceptor:void addAcknowledgements(org.apache.cxf.ws.rm.Destination,org.apache.cxf.ws.rm.RMProperties,org.apache.cxf.ws.rm.Identifier,org.apache.cxf.ws.addressing.v200408.AttributedURI)",
            "org.apache.cxf.ws.rm.Destination:void ackRequested(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.RMManager:void shutdown()",
            "org.apache.cxf.ws.rm.RMManager:void recoverReliableEndpoint(org.apache.cxf.endpoint.Endpoint,org.apache.cxf.transport.Conduit)",
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl:void resend(org.apache.cxf.transport.Conduit,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.soap.RMSoapInterceptor:void encode(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.rm.RMProperties)",
            "org.apache.cxf.ws.rm.soap.RMSoapInterceptor:org.apache.cxf.ws.rm.RMProperties unmarshalRMProperties(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.rm.soap.RMSoapInterceptor:void discardRMHeaders(java.util.List)",
            "org.apache.cxf.ws.rm.RMEndpoint:void setPolicies()",
            "org.apache.cxf.ws.rm.RMEndpoint:java.lang.Object getUsingAddressing(java.util.List)",
            "org.apache.cxf.ws.rm.RMEndpoint:void shutdown()",
            "org.apache.cxf.ws.rm.persistence.jdbc.RMTxStore:void removeMessages(org.apache.cxf.ws.rm.Identifier,java.util.Collection,boolean)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void <init>(java.util.SortedSet)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void add(java.util.Collection,boolean)",
            "org.apache.cxf.workqueue.WorkQueueManagerImpl:void shutdown(boolean)",
            "org.apache.cxf.workqueue.WorkQueueManagerImpl:void run()",
            "org.apache.cxf.databinding.AbstractDataBinding:void setNamespaceMap(java.util.Map)",
            "org.apache.cxf.databinding.AbstractDataBinding:void checkNamespaceMap(java.util.Map)",
            "org.apache.cxf.databinding.stax.StaxDataBindingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.databinding.stax.StaxDataBindingFeature:void removeInterceptor(java.util.List,java.lang.String)",
            "org.apache.cxf.wsdl.JAXBExtensionHelper$1:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils$SchemaLSResourceResolver:org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.namespace.QName getServiceName(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:java.lang.String getPortName(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:void setPortName(org.apache.cxf.ws.addressing.EndpointReferenceType,java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.namespace.QName getInterfaceName(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:void setMetadata(org.apache.cxf.ws.addressing.EndpointReferenceType,java.util.List)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.wsdl.Definition getWSDLDefinition(org.apache.cxf.wsdl.WSDLManager,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.validation.Schema createSchema(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.wsdl.Port getPort(org.apache.cxf.wsdl.WSDLManager,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:org.apache.cxf.transport.MultiplexDestination getMatchingMultiplexDestination(javax.xml.namespace.QName,java.lang.String,org.apache.cxf.Bus)",
            "org.apache.cxf.io.CachedOutputStream:void flush()",
            "org.apache.cxf.io.CachedOutputStream:void lockOutputStream()",
            "org.apache.cxf.io.CachedOutputStream:void close()",
            "org.apache.cxf.service.model.BindingOperationInfo:void <init>(org.apache.cxf.service.model.BindingInfo,org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:int getMessagePartIndex(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePartByIndex(int)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePart(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePart(int)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperation(org.apache.cxf.message.Exchange,java.lang.String)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperationForWrapperElement(org.apache.cxf.message.Exchange,javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.SchemaInfo getSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.ServiceModelUtil:java.util.List getOperationInputPartNames(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.EndpointInfo findBestEndpointInfo(javax.xml.namespace.QName,java.util.List)",
            "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.BindingInfo getBinding(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.EndpointInfo getEndpoint(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.ServiceInfo:void initMessagesMap()",
            "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.SchemaInfo getSchema(java.lang.String)",
            "org.apache.cxf.service.model.MessageInfo:java.util.Map getMessagePartsMap()",
            "org.apache.cxf.service.model.MessageInfo:java.util.List getOrderedParts(java.util.List)",
            "org.apache.cxf.service.model.BindingInfo:org.apache.cxf.service.model.BindingOperationInfo buildOperation(javax.xml.namespace.QName,java.lang.String,java.lang.String)",
            "org.apache.cxf.service.model.BindingInfo:org.apache.cxf.service.model.BindingOperationInfo getOperation(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.ServiceImpl:org.apache.cxf.service.model.EndpointInfo getEndpointInfo(javax.xml.namespace.QName)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void fillInSchemaCrossreferences()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createEndpoints()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeServiceConfigurations()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromWSDL(java.lang.String)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromClass()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean hasWrappedMethods(org.apache.cxf.service.model.InterfaceInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void validateServiceModel()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.InterfaceInfo getInterfaceInfo()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeWSDLOperations()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void setFaultClassInfo(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.OperationInfo createOperation(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.InterfaceInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeWrappedSchema(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void checkForElement(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createBareMessage(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.OperationInfo,boolean)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isExistImport(org.apache.ws.commons.schema.XmlSchema,java.lang.String)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.ws.commons.schema.XmlSchemaElement getExistingSchemaElement(org.apache.ws.commons.schema.XmlSchema,javax.xml.namespace.QName)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createWrappedMessageSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.AbstractMessageContainer,org.apache.cxf.service.model.AbstractMessageContainer,org.apache.ws.commons.schema.XmlSchema,javax.xml.namespace.QName)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.SchemaInfo getOrCreateSchema(org.apache.cxf.service.model.ServiceInfo,java.lang.String,boolean)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createInputWrappedMessageParts(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,org.apache.cxf.service.model.MessageInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createOutputWrappedMessageParts(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,org.apache.cxf.service.model.MessageInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getEndpointName(boolean)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getServiceName()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getServiceNamespace()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getInterfaceName()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isValidMethod(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isHolder(java.lang.Class,java.lang.reflect.Type)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.reflect.Type getHolderType(java.lang.Class,java.lang.reflect.Type)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isWrapped(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isOutParam(java.lang.reflect.Method,int)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isInParam(java.lang.reflect.Method,int)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getInputMessageName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName createOutputMessageName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean hasOutMessage(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getFaultName(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.Class,java.lang.Class)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getAction(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isHeader(java.lang.reflect.Method,int)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getOperationName(org.apache.cxf.service.model.InterfaceInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isAsync(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getInPartName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getInParameterName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getOutParameterName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getOutPartName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.Class getResponseWrapper(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getResponseWrapperClassName(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.Class getRequestWrapper(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getRequestWrapperClassName(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isWrapperPartQualified(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isWrapperPartNillable(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:long getWrapperPartMaxOccurs(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:long getWrapperPartMinOccurs(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getWsdlURL()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isWrapped()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getStyle()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isRPC(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.DefaultServiceConfiguration:java.lang.Boolean isOperation(java.lang.reflect.Method)",
            "org.apache.cxf.service.ServiceModelVisitor:void walk()",
            "org.apache.cxf.service.ServiceModelVisitor:void visitOperation(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.binding.AbstractBindingFactory:void registerWithBindingManager()",
            "org.apache.cxf.binding.AbstractBindingFactory:org.apache.cxf.service.model.BindingInfo initializeBindingInfo(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding,org.apache.cxf.service.model.BindingInfo)",
            "org.apache.cxf.binding.AbstractBindingFactory:void copyExtensors(org.apache.cxf.service.model.AbstractPropertiesHolder,javax.wsdl.extensions.ElementExtensible,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:org.apache.cxf.service.model.BindingInfo createBindingInfo(org.apache.cxf.service.model.ServiceInfo,java.lang.String,java.lang.Object)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:void createSoapBinding(org.apache.cxf.binding.soap.model.SoapBindingInfo)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:void setupHeaders(org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.service.model.BindingMessageInfo,org.apache.cxf.service.model.BindingMessageInfo,org.apache.cxf.service.model.MessageInfo,org.apache.cxf.binding.soap.SoapBindingConfiguration)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:org.apache.cxf.binding.Binding createBinding(org.apache.cxf.service.model.BindingInfo)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:void addOutOfBandParts(org.apache.cxf.service.model.BindingOperationInfo,javax.wsdl.Message,org.apache.cxf.common.xmlschema.SchemaCollection,boolean,java.lang.String)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:void buildMessage(org.apache.cxf.service.model.MessageInfo,javax.wsdl.Message,org.apache.cxf.common.xmlschema.SchemaCollection,int,java.lang.String)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:org.apache.cxf.service.model.BindingInfo createBindingInfo(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding,java.lang.String)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:void initializeMessage(org.apache.cxf.binding.soap.model.SoapBindingInfo,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.service.model.BindingMessageInfo)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:java.util.List handleMimePart(javax.wsdl.extensions.mime.MIMEPart,java.util.List,org.apache.cxf.service.model.MessageInfo,org.apache.cxf.service.model.BindingMessageInfo,java.util.List,java.util.List)",
            "org.apache.cxf.binding.soap.interceptor.ReadHeadersInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.Soap12FaultOutInterceptor$Soap12FaultOutInterceptorInternal:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.RPCOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.soap.interceptor.SoapActionInInterceptor:void getAndSetOperation(org.apache.cxf.binding.soap.SoapMessage,java.lang.String)",
            "org.apache.cxf.binding.soap.interceptor.SoapHeaderOutFilterInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.RPCInInterceptor:org.apache.cxf.service.model.BindingOperationInfo getOperation(org.apache.cxf.message.Message,javax.xml.namespace.QName)",
            "org.apache.cxf.binding.soap.interceptor.RPCInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor:void writeSoapEnvelopeStart(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor:boolean handleHeaderPart(boolean,org.apache.cxf.binding.soap.SoapMessage,java.lang.String)",
            "org.apache.cxf.binding.soap.interceptor.MustUnderstandInterceptor:void initServiceSideInfo(java.util.Set,org.apache.cxf.binding.soap.SoapMessage,java.util.Set)",
            "org.apache.cxf.binding.soap.interceptor.MustUnderstandInterceptor:void buildMustUnderstandHeaders(java.util.Set,org.apache.cxf.binding.soap.SoapMessage,java.util.Set,java.util.Set)",
            "org.apache.cxf.binding.soap.interceptor.MustUnderstandInterceptor:void checkUnderstand(java.util.Set,java.util.Set,java.util.Set)",
            "org.apache.cxf.binding.soap.interceptor.Soap11FaultOutInterceptor$Soap11FaultOutInterceptorInternal:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.EndpointSelectionInterceptor:org.apache.cxf.endpoint.Endpoint selectEndpoint(org.apache.cxf.message.Message,java.util.Set)",
            "org.apache.cxf.binding.soap.interceptor.MustUnderstandInterceptor$UltimateReceiverMustUnderstandInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.SoapHeaderInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.soap.HeaderUtil:java.util.Set getHeaderQNames(org.apache.cxf.service.model.BindingMessageInfo)",
            "org.apache.cxf.binding.soap.SoapTransportFactory:org.apache.cxf.service.model.EndpointInfo createEndpointInfo(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.BindingInfo,javax.wsdl.Port)",
            "org.apache.cxf.binding.soap.SoapTransportFactory:void registerWithBindingManager()",
            "org.apache.cxf.binding.soap.SoapMessage:boolean hasHeader(javax.xml.namespace.QName)",
            "org.apache.cxf.binding.soap.SoapMessage:org.apache.cxf.headers.Header getHeader(javax.xml.namespace.QName)",
            "org.apache.cxf.binding.soap.saaj.SAAJInInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.saaj.SAAJOutInterceptor$SAAJOutEndingInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.model.SoapBindingInfo:org.apache.cxf.service.model.OperationInfo getOperationByAction(java.lang.String)",
            "org.apache.cxf.binding.xml.interceptor.XMLMessageInInterceptor:org.apache.cxf.service.model.BindingOperationInfo getBindingOperationInfo(boolean,javax.xml.namespace.QName,org.apache.cxf.service.model.BindingInfo,javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.binding.xml.XMLFormatValidator:boolean checkXMLBindingFormat()",
            "org.apache.cxf.binding.xml.XMLFormatValidator:boolean checkXMLFormat(org.apache.cxf.service.model.BindingInfo)",
            "org.apache.cxf.binding.xml.XMLFormatValidator:boolean findXMLFormatRootNode(java.util.Iterator,org.apache.cxf.service.model.BindingOperationInfo,java.lang.String)",
            "org.apache.cxf.binding.xml.XMLBindingFactory:org.apache.cxf.service.model.BindingInfo createBindingInfo(org.apache.cxf.service.model.ServiceInfo,java.lang.String,java.lang.Object)",
            "org.apache.cxf.clustering.AbstractStaticFailoverStrategy:java.util.List getAlternateEndpoints(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.tools.common.Tag:java.lang.String formatAttribute(org.apache.cxf.tools.common.Tag)",
            "org.apache.cxf.tools.common.Tag:java.lang.String formatTag(org.apache.cxf.tools.common.Tag,int)",
            "org.apache.cxf.tools.common.Tag:boolean equals(java.lang.Object)",
            "org.apache.cxf.tools.common.ClassUtils:void compile(org.apache.cxf.tools.common.ToolContext)",
            "org.apache.cxf.tools.common.ToolContext:void addParameters(java.util.Map)",
            "org.apache.cxf.tools.common.VelocityGenerator:void doWrite(java.lang.String,java.io.Writer)",
            "org.apache.cxf.tools.common.toolspec.ToolSpec:boolean isValidInputStream(java.lang.String)",
            "org.apache.cxf.tools.common.toolspec.ToolSpec:java.util.List getInstreamIds()",
            "org.apache.cxf.tools.common.toolspec.ToolSpec:java.util.List getOutstreamIds()",
            "org.apache.cxf.tools.common.toolspec.ToolSpec:java.lang.String getStreamRefName(java.lang.String)",
            "org.apache.cxf.tools.common.toolspec.parser.CommandDocument:java.lang.String[] getParameters(java.lang.String)",
            "org.apache.cxf.tools.common.toolspec.parser.CommandDocument:java.lang.String[] getParameterNames()",
            "org.apache.cxf.tools.common.toolspec.parser.Form:void <init>(org.w3c.dom.Element)",
            "org.apache.cxf.tools.common.toolspec.parser.Option:boolean accept(org.apache.cxf.tools.common.toolspec.parser.TokenInputStream,org.w3c.dom.Element,org.apache.cxf.tools.common.toolspec.parser.ErrorVisitor)",
            "org.apache.cxf.tools.common.toolspec.parser.OptionGroup:void <init>(org.w3c.dom.Element)",
            "org.apache.cxf.tools.common.toolspec.parser.OptionGroup:boolean accept(org.apache.cxf.tools.common.toolspec.parser.TokenInputStream,org.w3c.dom.Element,org.apache.cxf.tools.common.toolspec.parser.ErrorVisitor)",
            "org.apache.cxf.tools.common.toolspec.parser.OptionGroup:boolean isSatisfied(org.apache.cxf.tools.common.toolspec.parser.ErrorVisitor)",
            "org.apache.cxf.tools.common.toolspec.parser.ErrorVisitor:java.lang.String toString()",
            "org.apache.cxf.tools.common.toolspec.parser.CommandLineParser:org.apache.cxf.tools.common.toolspec.parser.CommandDocument parseArguments(java.lang.String[])",
            "org.apache.cxf.tools.common.ProcessorTestBase:boolean assertXmlEquals(java.io.File,java.io.File,java.util.List)",
            "org.apache.cxf.tools.common.ProcessorTestBase:void assertAttributesEquals(javax.xml.namespace.QName,java.util.Map,java.util.Map,java.util.Collection)",
            "org.apache.cxf.tools.common.ProcessorTestBase:void assertTagEquals(org.apache.cxf.tools.common.Tag,org.apache.cxf.tools.common.Tag,java.util.List,java.util.List)",
            "org.apache.cxf.tools.common.ProcessorTestBase:org.apache.cxf.tools.common.Tag getFromSource(org.apache.cxf.tools.common.Tag,org.apache.cxf.tools.common.Tag)",
            "org.apache.cxf.tools.common.model.JAnnotation:java.util.Set getImports()",
            "org.apache.cxf.tools.common.model.JAnnotation:org.apache.cxf.tools.common.model.JAnnotationElement getElementByName(java.lang.String)",
            "org.apache.cxf.tools.common.model.JavaMethod:java.lang.String getSignature()",
            "org.apache.cxf.tools.common.model.JavaMethod:void addAnnotation(java.lang.String,org.apache.cxf.tools.common.model.JAnnotation)",
            "org.apache.cxf.tools.common.model.JavaMethod:java.util.List getParameterList(boolean)",
            "org.apache.cxf.tools.common.model.JavaInterface:void addAnnotation(org.apache.cxf.tools.common.model.JAnnotation)",
            "org.apache.cxf.tools.common.model.JavaInterface:void addImports(java.util.Collection)",
            "org.apache.cxf.tools.common.model.JavaInterface:java.lang.String toString()",
            "org.apache.cxf.tools.common.model.JavaField:void addAnnotation(org.apache.cxf.tools.common.model.JAnnotation)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:boolean isSOAPBinding(javax.wsdl.Binding)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:java.lang.String getBindingStyle(javax.wsdl.Binding)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapOperation getSoapOperation(java.util.List)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:java.lang.String getSOAPOperationStyle(javax.wsdl.BindingOperation)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapBody getBindingInputSOAPBody(javax.wsdl.BindingOperation)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapBody getBindingOutputSOAPBody(javax.wsdl.BindingOperation)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapBody getSoapBody(java.util.List)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:java.util.List getSoapHeaders(java.util.List)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapHeader getBindingInputSOAPHeader(javax.wsdl.BindingOperation)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapHeader getBindingOutputSOAPHeader(javax.wsdl.BindingOperation)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapBinding getSoapBinding(java.util.List)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:java.util.List getBindingOperationSoapFaults(javax.wsdl.BindingOperation)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:boolean isMixedStyle(javax.wsdl.Binding)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:java.lang.String getCanonicalBindingStyle(javax.wsdl.Binding)",
            "org.apache.cxf.buslifecycle.CXFBusLifeCycleManager:void initComplete()",
            "org.apache.cxf.buslifecycle.CXFBusLifeCycleManager:void preShutdown()",
            "org.apache.cxf.buslifecycle.CXFBusLifeCycleManager:void postShutdown()",
            "org.apache.cxf.wsdl11.SchemaUtil:void getSchemas(javax.wsdl.Definition,org.apache.cxf.common.xmlschema.SchemaCollection,java.util.List)",
            "org.apache.cxf.wsdl11.SchemaUtil:void extractSchema(javax.wsdl.Definition,org.apache.cxf.common.xmlschema.SchemaCollection,java.util.List)",
            "org.apache.cxf.wsdl11.SchemaUtil:void parseImports(javax.wsdl.Definition,java.util.List)",
            "org.apache.cxf.wsdl11.SchemaUtil:void getSchemaList(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.SchemaUtil:void addSchema(java.lang.String,javax.wsdl.extensions.schema.Schema)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void parseWSDL(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:java.util.Collection getImports(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void parseImports(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void registerWSDLExtensibilityPlugins(javax.wsdl.extensions.ExtensionRegistry)",
            "org.apache.cxf.wsdl11.WSDLServiceUtils:org.apache.cxf.binding.BindingFactory getBindingFactory(javax.wsdl.Binding,org.apache.cxf.Bus,java.lang.StringBuffer)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:javax.wsdl.Definition build(java.util.Map)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addExtensibilityElements(javax.wsdl.extensions.ElementExtensible,java.util.List)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addExtensibilityAttributes(javax.wsdl.extensions.AttributeExtensible,java.util.Map)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildTypes(java.util.Collection,java.util.Map,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBinding(java.util.Collection,java.util.Collection)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBindingOperation(javax.wsdl.Definition,javax.wsdl.Binding,java.util.Collection)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBindingFault(javax.wsdl.Definition,javax.wsdl.BindingOperation,java.util.Collection)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildService(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildPortTypeOperation(javax.wsdl.PortType,java.util.Collection,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildMessage(javax.wsdl.Message,org.apache.cxf.service.model.AbstractMessageContainer,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void registerInitialExtensions(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:org.apache.cxf.service.model.ServiceSchemaInfo getSchemasForDefinition(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void putSchemasForDefinition(javax.wsdl.Definition,org.apache.cxf.service.model.ServiceSchemaInfo)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void removeDefinition(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void copyExtensors(org.apache.cxf.service.model.AbstractPropertiesHolder,java.util.List)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildMockServices(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition,javax.wsdl.Service,javax.xml.namespace.QName,org.apache.cxf.service.model.DescriptionInfo)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void parseImports(javax.wsdl.Definition,java.util.List)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.EndpointInfo buildEndpoint(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.BindingInfo,javax.wsdl.Port)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.BindingInfo buildBinding(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildInterface(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.PortType)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildInterfaceOperation(org.apache.cxf.service.model.InterfaceInfo,javax.wsdl.Operation)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildMessage(org.apache.cxf.service.model.AbstractMessageContainer,javax.wsdl.Message)",
            "org.apache.cxf.wsdl11.WSDLServiceFactory:org.apache.cxf.service.Service create()",
            "org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor:void insertConstructorArg(org.springframework.beans.factory.config.ConstructorArgumentValues,java.lang.Object)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void activateViaNS(java.lang.String)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void activateAll()",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadFragment(java.io.InputStream)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void processExtension(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadAndRegister(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:java.lang.Object getExtension(java.lang.String,java.lang.Class)",
            "org.apache.cxf.bus.extension.Extension:java.lang.String toString()",
            "org.apache.cxf.bus.CXFBusImpl:void initializeFeatures()",
            "org.apache.cxf.attachment.LazyDataSource:void load()",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:boolean containsValue(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:javax.activation.DataHandler get(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:javax.activation.DataHandler remove(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:void putAll(java.util.Map)",
            "org.apache.cxf.attachment.AttachmentDeserializer:void cacheStreamedAttachments()",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$1$1$1:void <init>(org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$1$1)",
            "org.apache.cxf.attachment.AttachmentSerializer:void writeAttachments()",
            "org.apache.cxf.attachment.AttachmentUtil:java.util.Map getDHMap(java.util.Collection)",
            "org.apache.cxf.attachment.AttachmentUtil:boolean isTypeSupported(java.lang.String,java.util.List)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$3$1:javax.activation.DataHandler next()",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$2$1:java.lang.String next()",
            "org.apache.cxf.frontend.ClientFactoryBean:void applyFeatures()",
            "org.apache.cxf.frontend.SimpleMethodDispatcher:org.apache.cxf.service.model.BindingOperationInfo getBindingOperation(java.lang.reflect.Method,org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory:org.apache.cxf.service.model.BindingInfo createBindingInfo()",
            "org.apache.cxf.frontend.ServerFactoryBean:void initializeServiceFactory()",
            "org.apache.cxf.frontend.ServerFactoryBean:void applyFeatures()",
            "org.apache.cxf.aegis.DatabindingException:java.lang.String getActualMessage()",
            "org.apache.cxf.aegis.util.jdom.StaxSerializer:void writeDocument(org.jdom.Document,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.aegis.util.jdom.StaxSerializer:void writeElement(org.jdom.Element,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.aegis.util.jdom.StaxSerializer:boolean isDeclared(javax.xml.stream.XMLStreamWriter,java.lang.String,java.lang.String)",
            "org.apache.cxf.aegis.util.jdom.StaxBuilder:void buildTree(org.jdom.JDOMFactory,javax.xml.stream.XMLStreamReader,org.jdom.Document)",
            "org.apache.cxf.aegis.util.stax.JDOMStreamReader:void setupNamespaces(org.jdom.Element)",
            "org.apache.cxf.aegis.util.stax.JDOMNamespaceContext:java.lang.String rawGetPrefix(org.jdom.Element,java.lang.String)",
            "org.apache.cxf.aegis.util.stax.JDOMNamespaceContext:void rawGetPrefixes(org.jdom.Element,java.lang.String,java.util.List)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void initialize(org.apache.cxf.service.Service)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void initializeOperation(org.apache.cxf.service.Service,org.apache.cxf.aegis.type.TypeMapping,org.apache.cxf.service.model.OperationInfo,java.util.Set)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void initializeOperationTypes(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void initializeMessage(org.apache.cxf.service.Service,org.apache.cxf.aegis.type.TypeMapping,org.apache.cxf.service.model.AbstractMessageContainer,int,java.util.Set)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void initializeMessageTypes(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.AbstractMessageContainer,int)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void addDependencies(java.util.Set,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void createSchemas(org.apache.cxf.service.Service,java.util.Set)",
            "org.apache.cxf.aegis.AegisContext:void processRootTypes()",
            "org.apache.cxf.aegis.type.basic.XMLBeanTypeInfo:org.w3c.dom.Element getPropertyElement(java.lang.String)",
            "org.apache.cxf.aegis.type.basic.BeanType:void writeObjectInternal(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,boolean)",
            "org.apache.cxf.aegis.type.basic.BeanType:java.util.Set getDependencies()",
            "org.apache.cxf.aegis.type.basic.BeanType:void writeSchema(org.apache.ws.commons.schema.XmlSchema)",
            "org.apache.cxf.aegis.type.basic.BeanTypeInfo:boolean containsPropertyName(java.util.List,java.lang.String)",
            "org.apache.cxf.aegis.type.mtom.AttachmentUtil:org.apache.cxf.message.Attachment getAttachment(java.lang.String,java.util.Collection)",
            "org.apache.cxf.aegis.type.encoded.ArrayTypeInfo:void <init>(javax.xml.namespace.NamespaceContext,java.lang.String,java.lang.String)",
            "org.apache.cxf.aegis.type.encoded.ArrayTypeInfo:java.lang.String toString()",
            "org.apache.cxf.aegis.type.encoded.MarshalRegistry$1:java.lang.Object next()",
            "org.apache.cxf.aegis.type.encoded.SoapArrayType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.SoapArrayType:java.lang.Object makeArray(java.util.List,java.util.List,java.lang.Class)",
            "org.apache.cxf.aegis.type.encoded.TrailingBlocks:java.util.List writeBlocks(org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.SoapRefRegistry:void addInstance(java.lang.String,java.lang.Object)",
            "org.apache.cxf.aegis.type.XMLTypeCreator:org.w3c.dom.Element getBestMatch(org.w3c.dom.Element,java.lang.reflect.Method,java.util.List)",
            "org.apache.cxf.aegis.type.collection.MapType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.collection.CollectionType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.jaxws.JaxWsProxyFactoryBean:boolean needWrapperClassInterceptor(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.jaxws.JaxWsProxyFactoryBean:void buildHandlerChain(org.apache.cxf.jaxws.JaxWsClientProxy)",
            "org.apache.cxf.jaxws.handler.HandlerResolverImpl:java.util.List createHandlerChain(javax.xml.ws.handler.PortInfo)",
            "org.apache.cxf.jaxws.handler.HandlerChainInvoker:void <init>(java.util.List,boolean)",
            "org.apache.cxf.jaxws.handler.HandlerChainInvoker:boolean invokeHandleFault(java.util.List,javax.xml.ws.handler.MessageContext)",
            "org.apache.cxf.jaxws.handler.HandlerChainInvoker:boolean invokeHandleMessage(java.util.List,javax.xml.ws.handler.MessageContext)",
            "org.apache.cxf.jaxws.handler.HandlerChainBuilder:java.util.List buildHandlerChainFromConfiguration(java.util.List)",
            "org.apache.cxf.jaxws.handler.HandlerChainBuilder:java.util.List sortHandlers(java.util.List)",
            "org.apache.cxf.jaxws.handler.HandlerChainBuilder:void configureHandler(javax.xml.ws.handler.Handler,org.apache.cxf.jaxws.javaee.PortComponentHandlerType)",
            "org.apache.cxf.jaxws.handler.soap.SOAPMessageContextImpl:java.lang.Object[] getHeaders(javax.xml.namespace.QName,javax.xml.bind.JAXBContext,boolean)",
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerInterceptor:java.util.Set getUnderstoodHeaders()",
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerInterceptor:javax.xml.ws.handler.MessageContext createProtocolMessageContext(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerFaultInInterceptor:java.util.Set getUnderstoodHeaders()",
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerFaultOutInterceptor:java.util.Set getUnderstoodHeaders()",
            "org.apache.cxf.jaxws.support.JaxWsEndpointImpl:boolean hasUsingAddressing(java.util.List)",
            "org.apache.cxf.jaxws.support.JaxWsEndpointImpl:boolean addressingRequired(java.util.List)",
            "org.apache.cxf.jaxws.support.JaxWsEndpointImpl:javax.xml.ws.soap.AddressingFeature getAddressingFeature()",
            "org.apache.cxf.jaxws.support.JaxWsEndpointImpl:org.apache.cxf.ws.addressing.WSAddressingFeature getWSAddressingFeature()",
            "org.apache.cxf.jaxws.support.JaxWsEndpointImpl:javax.xml.ws.soap.MTOMFeature getMTOMFeature()",
            "org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean:void initializeWSDLOperationsForProvider()",
            "org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean:org.apache.cxf.service.model.FaultInfo getFaultInfo(org.apache.cxf.service.model.OperationInfo,java.lang.Class)",
            "org.apache.cxf.jaxws.support.JaxWsImplementorInfo:java.lang.String getWsdlLocation()",
            "org.apache.cxf.jaxws.support.JaxWsImplementorInfo:javax.xml.namespace.QName getInterfaceName()",
            "org.apache.cxf.jaxws.support.JaxWsImplementorInfo:java.lang.String getImplementorClassName()",
            "org.apache.cxf.jaxws.WrapperClassGenerator:java.util.Set generate()",
            "org.apache.cxf.jaxws.WrapperClassGenerator:void createWrapperClass(org.apache.cxf.service.model.MessagePartInfo,org.apache.cxf.service.model.MessageInfo,org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,boolean)",
            "org.apache.cxf.jaxws.WrapperClassGenerator:void addJAXBAnnotations(org.objectweb.asm.FieldVisitor,java.util.List)",
            "org.apache.cxf.jaxws.JaxWsClientProxy:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])",
            "org.apache.cxf.jaxws.ServiceImpl:void initializePorts()",
            "org.apache.cxf.jaxws.ServiceImpl:org.apache.cxf.jaxws.support.JaxWsClientEndpointImpl getJaxwsEndpoint(javax.xml.namespace.QName,org.apache.cxf.service.factory.AbstractServiceFactoryBean,javax.xml.ws.WebServiceFeature[])",
            "org.apache.cxf.jaxws.ServiceImpl:org.apache.cxf.service.factory.AbstractServiceFactoryBean createDispatchService(org.apache.cxf.databinding.DataBinding)",
            "org.apache.cxf.jaxws.ServiceImpl:java.lang.Object getPort(org.apache.cxf.ws.addressing.EndpointReferenceType,java.lang.Class,javax.xml.ws.WebServiceFeature[])",
            "org.apache.cxf.jaxws.ServiceImpl:javax.xml.ws.Dispatch createDispatch(javax.xml.namespace.QName,java.lang.Class,javax.xml.ws.Service$Mode,javax.xml.ws.WebServiceFeature[])",
            "org.apache.cxf.jaxws.ServiceImpl:javax.xml.ws.Dispatch createDispatch(javax.xml.namespace.QName,javax.xml.bind.JAXBContext,javax.xml.ws.Service$Mode,javax.xml.ws.WebServiceFeature[])",
            "org.apache.cxf.jaxws.spi.ProviderImpl:javax.xml.ws.wsaddressing.W3CEndpointReference createW3CEndpointReference(java.lang.String,javax.xml.namespace.QName,javax.xml.namespace.QName,java.util.List,java.lang.String,java.util.List)",
            "org.apache.cxf.jaxws.JaxWsServerFactoryBean:void buildHandlerChain()",
            "org.apache.cxf.jaxws.DispatchImpl:void addInvokeOperation(boolean)",
            "org.apache.cxf.jaxws.interceptors.MessageModeInInterceptor$MultiPartDataSource:void nextCurrent()",
            "org.apache.cxf.jaxws.interceptors.WebFaultOutInterceptor:org.apache.cxf.service.model.MessagePartInfo getFaultMessagePart(javax.xml.namespace.QName,org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.jaxws.interceptors.HolderOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.interceptors.SwAInInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.jaxws.interceptors.WrapperClassOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.interceptors.WrapperClassOutInterceptor:org.apache.cxf.databinding.WrapperHelper createWrapperHelper(org.apache.cxf.databinding.WrapperCapableDatabinding,org.apache.cxf.service.model.MessageInfo,org.apache.cxf.service.model.MessageInfo,java.lang.Class)",
            "org.apache.cxf.jaxws.interceptors.HolderInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.interceptors.WrapperClassInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.interceptors.WrapperClassInInterceptor:org.apache.cxf.databinding.WrapperHelper createWrapperHelper(org.apache.cxf.databinding.WrapperCapableDatabinding,org.apache.cxf.service.model.MessageInfo,org.apache.cxf.service.model.MessageInfo,java.lang.Class)",
            "org.apache.cxf.jaxws.interceptors.SwAOutInterceptor:void processAttachments(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.binding.soap.model.SoapBodyInfo)",
            "org.apache.cxf.jaxws.binding.http.HTTPBindingImpl:void validate()",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:void copyScoped(java.util.Map)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:void clear()",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:java.util.Set keySet()",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:java.util.Set entrySet()",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:void putAll(java.util.Map)",
            "org.apache.cxf.jaxws.AbstractJAXWSMethodInvoker:java.util.Map removeHandlerProperties(org.apache.cxf.jaxws.context.WrappedMessageContext)",
            "org.apache.cxf.jaxws.AbstractJAXWSMethodInvoker:void addHandlerProperties(org.apache.cxf.jaxws.context.WrappedMessageContext,java.util.Map)",
            "org.apache.cxf.jaxws.AbstractJAXWSMethodInvoker:void updateWebServiceContext(org.apache.cxf.message.Exchange,javax.xml.ws.handler.MessageContext)",
            "org.apache.cxf.xmlbeans.XmlBeansDataBinding:void initialize(org.apache.cxf.service.Service)"
        ]
    },
    "org.apache.cxf.jaxws.context.WrappedMessageContext:java.util.Collection values()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.WSDLHelper:javax.wsdl.BindingOperation getBindingOperation(javax.wsdl.Definition,java.lang.String)",
            "org.apache.cxf.helpers.WSDLHelper:java.util.List getPortTypes(javax.wsdl.Definition)",
            "org.apache.cxf.helpers.WSDLHelper:java.util.List getInMessageParts(javax.wsdl.Operation)",
            "org.apache.cxf.helpers.WSDLHelper:java.util.List getOutMessageParts(javax.wsdl.Operation)",
            "org.apache.cxf.helpers.WSDLHelper:javax.wsdl.Binding getBinding(javax.wsdl.BindingOperation,javax.wsdl.Definition)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.util.Collection values()",
            "org.apache.cxf.common.util.CacheMap:java.util.Collection values()",
            "org.apache.cxf.common.util.TwoStageMap:java.util.Collection values()",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.util.Collection values()",
            "org.apache.cxf.management.jmx.export.runtime.ModelMBeanInfoSupporter:javax.management.modelmbean.ModelMBeanInfo buildModelMBeanInfo(javax.management.Descriptor)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:org.apache.cxf.message.MessageContentsList getParameters(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.transport.ConduitInitiatorManagerImpl:org.apache.cxf.transport.ConduitInitiator getConduitInitiatorForUri(java.lang.String)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updateDefinition(javax.wsdl.Definition,java.util.Map,java.util.Map,java.lang.String,org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updatePublishedEndpointUrl(java.lang.String,javax.wsdl.Definition,javax.xml.namespace.QName)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updateSchemaImports(javax.wsdl.extensions.schema.Schema,java.util.Map,java.lang.String)",
            "org.apache.cxf.transport.http.HTTPConduit:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.DestinationFactoryManagerImpl:org.apache.cxf.transport.DestinationFactory getDestinationFactoryForUri(java.lang.String)",
            "org.apache.cxf.transport.servlet.ServletTransportFactory:java.util.Collection getDestinations()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void postShutdown()",
            "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:org.apache.cxf.ws.security.tokenstore.SecurityToken getToken(java.lang.String)",
            "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:java.util.Collection getTokens(org.apache.cxf.ws.security.tokenstore.SecurityToken$State)",
            "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:void processTokenExpiry()",
            "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:void removeCancelledTokens()",
            "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:void removeExpiredTokens()",
            "org.apache.cxf.ws.rm.Source:java.util.Collection getAllSequences()",
            "org.apache.cxf.ws.rm.Source:java.util.Collection getAllUnacknowledgedSequences()",
            "org.apache.cxf.ws.rm.Destination:java.util.Collection getAllSequences()",
            "org.apache.cxf.ws.rm.RMManager:void shutdown()",
            "org.apache.cxf.workqueue.WorkQueueManagerImpl:void shutdown(boolean)",
            "org.apache.cxf.workqueue.WorkQueueManagerImpl:void run()",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.wsdl.Port getPort(org.apache.cxf.wsdl.WSDLManager,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.service.model.BindingOperationInfo:java.util.Collection getFaults()",
            "org.apache.cxf.service.model.AbstractMessageContainer:int getMessagePartIndex(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePartByIndex(int)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePart(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.AbstractMessageContainer:java.util.List getMessageParts()",
            "org.apache.cxf.service.model.InterfaceInfo:java.util.Collection getOperations()",
            "org.apache.cxf.service.model.BindingInfo:java.util.Collection getOperations()",
            "org.apache.cxf.service.model.BindingInfo:org.apache.cxf.service.model.BindingOperationInfo getOperation(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.OperationInfo:java.util.Collection getFaults()",
            "org.apache.cxf.binding.AbstractBindingFactory:org.apache.cxf.service.model.BindingInfo initializeBindingInfo(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding,org.apache.cxf.service.model.BindingInfo)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:void buildMessage(org.apache.cxf.service.model.MessageInfo,javax.wsdl.Message,org.apache.cxf.common.xmlschema.SchemaCollection,int,java.lang.String)",
            "org.apache.cxf.binding.soap.SoapVersionFactory:java.util.Iterator getVersions()",
            "org.apache.cxf.tools.common.model.JavaMethod:java.util.Collection getAnnotations()",
            "org.apache.cxf.tools.common.model.JavaParameter:java.util.Collection getAnnotations()",
            "org.apache.cxf.tools.util.SOAPBindingUtil:java.util.List getBindingOperationSoapFaults(javax.wsdl.BindingOperation)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:void addSOAPNamespace(javax.wsdl.Definition,boolean)",
            "org.apache.cxf.tools.util.ClassCollector:java.util.Collection getGeneratedFileInfo()",
            "org.apache.cxf.wsdl11.SchemaUtil:void parseImports(javax.wsdl.Definition,java.util.List)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildMockServices(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition,javax.wsdl.Service,javax.xml.namespace.QName,org.apache.cxf.service.model.DescriptionInfo)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void parseImports(javax.wsdl.Definition,java.util.List)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.BindingInfo buildBinding(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding)",
            "org.apache.cxf.bus.spring.Jsr250BeanPostProcessor:java.lang.Object postProcessAfterInitialization(java.lang.Object,java.lang.String)",
            "org.apache.cxf.aegis.type.encoded.MarshalRegistry$1:java.lang.Object next()",
            "org.apache.cxf.jaxws.ServiceImpl:void initializePorts()",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:java.util.Collection values()"
        ]
    },
    "org.apache.cxf.tools.common.model.JAnnotationElement:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:java.util.List enumeratorValues(org.apache.ws.commons.schema.XmlSchemaSimpleType)",
            "org.apache.cxf.common.logging.Log4jLogger$HandlerWrapper:void append(org.apache.log4j.spi.LoggingEvent)",
            "org.apache.cxf.common.util.PackageUtils:java.lang.String combine(java.util.List,char)",
            "org.apache.cxf.configuration.spring.SpringBeanMap:void processBeans(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.message.MessageUtils:boolean isTrue(java.lang.Object)",
            "org.apache.cxf.endpoint.ClientImpl:boolean isThreadLocalRequestContext()",
            "org.apache.cxf.ws.addressing.ContextUtils:java.lang.String getAction(org.apache.cxf.service.model.Extensible)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationOutInterceptor:void renewToken(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.ws.security.tokenstore.SecurityToken,org.apache.cxf.ws.security.policy.model.SecureConversationToken)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.policy.interceptors.IssuedTokenInterceptorProvider$IssuedTokenOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationTokenInterceptorProvider:java.lang.String setupClient(org.apache.cxf.ws.security.trust.STSClient,org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.ws.security.policy.model.SecureConversationToken,boolean)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:java.lang.String checkAsymetricBinding(org.apache.cxf.ws.policy.AssertionInfoMap,java.lang.String,org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:java.lang.String checkSymetricBinding(org.apache.cxf.ws.policy.AssertionInfoMap,java.lang.String,org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.wsdl.AbstractWSDLPlugin:java.lang.String getOption(java.util.Map,java.lang.String)",
            "org.apache.cxf.tools.common.toolspec.parser.ErrorVisitor:java.lang.String toString()",
            "org.apache.cxf.tools.common.model.JAnnotationElement:int hashCode()",
            "org.apache.cxf.tools.common.model.JAnnotationElement:boolean equals(java.lang.Object)",
            "org.apache.cxf.tools.util.URIParserUtil:java.lang.String combine(java.util.List,char)",
            "org.apache.cxf.aegis.xml.jdom.JDOMWriter:void writeValue(java.lang.Object)",
            "org.apache.cxf.aegis.xml.jdom.JDOMWriter:void writeValue(java.lang.Object,java.lang.String,java.lang.String)",
            "org.apache.cxf.aegis.xml.jdom.AttributeWriter:void writeValue(java.lang.Object)",
            "org.apache.cxf.aegis.xml.stax.AttributeWriter:void writeValue(java.lang.Object)",
            "org.apache.cxf.aegis.xml.stax.ElementWriter:void writeValue(java.lang.Object)",
            "org.apache.cxf.aegis.type.basic.BigIntegerType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.BigDecimalType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.jaxws.EndpointImpl:void checkProperties()",
            "org.apache.cxf.xmlbeans.tools.XMLBeansToolingDataBinding:void initialize(org.apache.cxf.tools.common.ToolContext)"
        ]
    },
    "org.apache.cxf.configuration.spring.AbstractSpringBeanMap$SpringBeanMapWrapper:java.util.Set keySet()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.util.Set keySet()",
            "org.apache.cxf.common.util.CacheMap:void updateMainDataMap()",
            "org.apache.cxf.common.util.CacheMap:java.util.Set keySet()",
            "org.apache.cxf.common.util.TwoStageMap:java.util.Set keySet()",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.util.Set keySet()",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.util.Collection values()",
            "org.apache.cxf.message.MessageImpl:java.util.Set getContentFormats()",
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.util.Map keepInOrder(java.util.Map,org.apache.cxf.service.model.OperationInfo,java.util.List)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:org.apache.cxf.message.MessageContentsList getParameters(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.transport.http.HTTPConduit:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:void transferProtocolHeadersToURLConnection(org.apache.cxf.message.Message,java.net.URLConnection)",
            "org.apache.cxf.transport.http.HTTPConduit:void logProtocolHeaders(java.util.logging.Level,org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void copyResponseHeaders(org.apache.cxf.message.Message,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponseInternal()",
            "org.apache.cxf.transport.http.gzip.GZIPInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.servlet.ServletTransportFactory:java.util.Set getDestinationsPaths()",
            "org.apache.cxf.NSManager:java.util.Set getNamespaces()",
            "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:java.util.Collection getTokenIdentifiers()",
            "org.apache.cxf.wsdl.JAXBExtensionHelper$1:java.util.Iterator getPrefixes(java.lang.String)",
            "org.apache.cxf.tools.common.Tag:boolean equals(java.lang.Object)",
            "org.apache.cxf.tools.common.ToolContext:void addParameters(java.util.Map)",
            "org.apache.cxf.tools.common.VelocityGenerator:void doWrite(java.lang.String,java.io.Writer)",
            "org.apache.cxf.tools.common.model.JavaParameter:java.util.Collection getAnnotationTags()",
            "org.apache.cxf.wsdl11.SchemaUtil:void extractSchema(javax.wsdl.Definition,org.apache.cxf.common.xmlschema.SchemaCollection,java.util.List)",
            "org.apache.cxf.wsdl11.SchemaUtil:void addSchema(java.lang.String,javax.wsdl.extensions.schema.Schema)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void parseWSDL(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:java.util.Collection getImports(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addExtensibilityAttributes(javax.wsdl.extensions.AttributeExtensible,java.util.Map)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void activateAll()",
            "org.apache.cxf.attachment.AttachmentImpl:java.util.Iterator getHeaderNames()",
            "org.apache.cxf.aegis.util.jdom.StaxBuilder:void buildTree(org.jdom.JDOMFactory,javax.xml.stream.XMLStreamReader,org.jdom.Document)",
            "org.apache.cxf.jaxws.ServiceImpl:java.lang.Object getPort(org.apache.cxf.ws.addressing.EndpointReferenceType,java.lang.Class,javax.xml.ws.WebServiceFeature[])",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:void copyScoped(java.util.Map)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:void clear()",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:java.util.Set keySet()"
        ]
    },
    "org.apache.cxf.message.AbstractWrappedMessage:java.util.Set getContentFormats()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.message.MessageUtils:boolean isDOMPresent(org.apache.cxf.message.Message)",
            "org.apache.cxf.message.AbstractWrappedMessage:java.util.Set getContentFormats()",
            "org.apache.cxf.message.MessageImpl:void copyContent(org.apache.cxf.message.Message,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.FIStaxInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.AbstractDestination$1:void onMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.FIStaxInInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.wsdl.JAXBExtensionHelper$MappingReaderDelegate$1:java.util.Iterator getPrefixes(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl.JAXBExtensionHelper$MappingReaderDelegate$1:java.util.Iterator getPrefixes(java.lang.String)",
            "org.apache.cxf.aegis.util.jdom.StaxSerializer:boolean isDeclared(javax.xml.stream.XMLStreamWriter,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.bus.extension.DeferredMap:void undefer()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.ConduitInitiatorManagerImpl:org.apache.cxf.transport.ConduitInitiator getConduitInitiatorForUri(java.lang.String)",
            "org.apache.cxf.transport.DestinationFactoryManagerImpl:org.apache.cxf.transport.DestinationFactory getDestinationFactoryForUri(java.lang.String)"
        ]
    },
    "org.apache.cxf.helpers.MapNamespaceContext:java.lang.String getNamespaceURI(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:java.lang.String getUniquePrefix(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.interceptor.WrappedOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.wsdl.JAXBExtensionHelper$MappingReaderDelegate$1:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.aegis.util.NamespaceHelper:java.lang.String getUniquePrefix(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.aegis.util.NamespaceHelper:javax.xml.namespace.QName createQName(javax.xml.namespace.NamespaceContext,java.lang.String)",
            "org.apache.cxf.aegis.xml.stax.ElementWriter:void writeStartElement()",
            "org.apache.cxf.aegis.xml.stax.ElementWriter:java.lang.String getPrefixForNamespace(java.lang.String,java.lang.String)",
            "org.apache.cxf.aegis.xml.stax.ElementReader:void extractXsiType()",
            "org.apache.cxf.aegis.type.encoded.ArrayTypeInfo:void <init>(javax.xml.namespace.NamespaceContext,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.helpers.HttpHeaderHelper:java.util.List getHeader(java.util.Map,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.gzip.GZIPOutInterceptor:org.apache.cxf.transport.http.gzip.GZIPOutInterceptor$UseGzip gzipPermitted(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.gzip.GZIPInInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.helpers.HttpHeaderHelper:java.lang.String mapCharset(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void setupMessage(org.apache.cxf.message.Message,javax.servlet.ServletConfig,javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponseInternal()",
            "org.apache.cxf.transport.jms.JMSUtils:java.lang.String getEncoding(java.lang.String)",
            "org.apache.cxf.aegis.type.mtom.DataHandlerType:java.lang.Object wrapBytes(byte[],java.lang.String)"
        ]
    },
    "org.apache.cxf.helpers.XMLUtils:javax.xml.transform.TransformerFactory getTransformerFactory()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.XMLUtils:javax.xml.transform.Transformer newTransformer()"
        ]
    },
    "org.apache.cxf.helpers.XMLUtils:javax.xml.parsers.DocumentBuilderFactory getDocumentBuilderFactory()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.XMLUtils:javax.xml.parsers.DocumentBuilder getParser()"
        ]
    },
    "org.apache.cxf.helpers.XMLUtils:javax.xml.namespace.QName getNamespace(java.util.Map,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.logging.Log4jLogger:void setLevel(java.util.logging.Level)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.logging.Log4jLogger:void internalLogFormatted(java.lang.String,java.util.logging.LogRecord)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void internalLog(java.util.logging.LogRecord)"
        ]
    },
    "org.apache.cxf.common.logging.Log4jLogger$HandlerWrapper:org.apache.log4j.Priority getThreshold()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.logging.Log4jLogger$HandlerWrapper:boolean isAsSevereAsThreshold(org.apache.log4j.Priority)"
        ]
    },
    "org.apache.cxf.common.util.ClassReader:void readAttributes()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.ClassReader:void readCode()",
            "org.apache.cxf.common.util.ParamReader:void <init>(byte[])",
            "org.apache.cxf.common.util.ParamReader:void readCode()"
        ]
    },
    "org.apache.cxf.common.util.WeakIdentityHashMap:java.lang.Object get(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.MapNamespaceContext:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.helpers.HttpHeaderHelper:java.util.List getHeader(java.util.Map,java.lang.String)",
            "org.apache.cxf.helpers.HttpHeaderHelper:java.lang.String getHeaderKey(java.lang.String)",
            "org.apache.cxf.helpers.HttpHeaderHelper:java.lang.String mapCharset(java.lang.String)",
            "org.apache.cxf.helpers.XMLUtils:javax.xml.transform.TransformerFactory getTransformerFactory()",
            "org.apache.cxf.helpers.XMLUtils:javax.xml.parsers.DocumentBuilderFactory getDocumentBuilderFactory()",
            "org.apache.cxf.helpers.XMLUtils:javax.xml.namespace.QName getNamespace(java.util.Map,java.lang.String,java.lang.String)",
            "org.apache.cxf.common.xmlschema.FixedExtensionDeserializer:void deserialize(org.apache.ws.commons.schema.XmlSchemaObject,javax.xml.namespace.QName,org.w3c.dom.Node)",
            "org.apache.cxf.common.logging.Log4jLogger:void setLevel(java.util.logging.Level)",
            "org.apache.cxf.common.logging.Log4jLogger:void internalLogFormatted(java.lang.String,java.util.logging.LogRecord)",
            "org.apache.cxf.common.logging.Log4jLogger$HandlerWrapper:org.apache.log4j.Priority getThreshold()",
            "org.apache.cxf.common.util.ClassReader:void readAttributes()",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.common.util.ASMHelper:java.lang.String getClassCode(java.lang.Class)",
            "org.apache.cxf.common.util.ASMHelper:org.apache.cxf.common.util.ASMHelper$TypeHelperClassLoader getTypeHelperClassLoader(java.lang.Class)",
            "org.apache.cxf.common.util.ASMHelper$TypeHelperClassLoader:java.lang.Class lookupDefinedClass(java.lang.String)",
            "org.apache.cxf.common.util.CacheMap:void updateMainDataMap()",
            "org.apache.cxf.common.util.CacheMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.common.util.ParamReader:java.lang.String[] getParameterNames(java.lang.reflect.Member,java.lang.Class[])",
            "org.apache.cxf.common.util.ParamReader:org.apache.cxf.common.util.ParamReader$MethodInfo getMethodInfo()",
            "org.apache.cxf.common.util.TwoStageMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.resource.PropertiesResolver:java.lang.Object resolve(java.lang.String,java.lang.Class)",
            "org.apache.cxf.resource.URIResolver:void tryRemote(java.lang.String)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.util.List getBeanListForId(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void mapElementToJaxbProperty(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder,java.lang.String,java.lang.Class)",
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:java.lang.Object unmarshalFactoryString(java.lang.String,java.lang.Class)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void initWildcardDefinitionMap()",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureWithWildCard(java.lang.String,java.lang.Object)",
            "org.apache.cxf.jaxb.NamespaceMapper:java.lang.String getPreferredPrefix(java.lang.String,java.lang.String,boolean)",
            "org.apache.cxf.jaxb.JAXBUtils:java.lang.String builtInTypeToJavaType(java.lang.String)",
            "org.apache.cxf.jaxb.JAXBUtils:java.lang.Class holderClass(java.lang.String)",
            "org.apache.cxf.jaxb.JAXBDataBinding:org.apache.cxf.jaxb.JAXBDataBinding$CachedContextAndSchemas createJAXBContextAndSchemas(java.util.Set,java.lang.String)",
            "org.apache.cxf.jaxb.JAXBDataBinding:void scanPackages(java.util.Set)",
            "org.apache.cxf.jaxb.JAXBDataBinding$1:javax.xml.transform.Result createOutput(java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxb.WrapperHelperCompiler:boolean addCreateWrapperObject(java.lang.String,java.lang.Class)",
            "org.apache.cxf.jaxb.WrapperHelperCompiler:void createObjectWrapper(org.objectweb.asm.MethodVisitor,java.lang.Class)",
            "org.apache.cxf.management.counters.CounterRepository:org.apache.cxf.management.counters.Counter getCounter(javax.management.ObjectName)",
            "org.apache.cxf.staxutils.AbstractDOMStreamReader:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.staxutils.W3CDOMStreamWriter:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.message.MessageImpl:java.lang.Object getContent(java.lang.Class)",
            "org.apache.cxf.headers.HeaderManagerImpl:org.apache.cxf.headers.HeaderProcessor getHeaderProcessor(java.lang.String)",
            "org.apache.cxf.interceptor.StaxOutInterceptor:javax.xml.stream.XMLOutputFactory getXMLOutputFactory(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.util.Map keepInOrder(java.util.Map,org.apache.cxf.service.model.OperationInfo,java.util.List)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:org.apache.cxf.message.MessageContentsList getParameters(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.interceptor.ClientOutFaultObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxInInterceptor:javax.xml.stream.XMLInputFactory getXMLInputFactory(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.FIStaxOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.ConduitInitiatorManagerImpl:org.apache.cxf.transport.ConduitInitiator getConduitInitiator(java.lang.String)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void writeResponse(java.lang.String,java.lang.String,org.apache.cxf.service.model.EndpointInfo,java.io.OutputStream)",
            "org.apache.cxf.transport.http.DigestAuthSupplier:java.lang.String getPreemptiveAuthorization(org.apache.cxf.transport.http.HTTPConduit,java.net.URL,org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:void transferProtocolHeadersToURLConnection(org.apache.cxf.message.Message,java.net.URLConnection)",
            "org.apache.cxf.transport.http.HTTPConduit:void logProtocolHeaders(java.util.logging.Level,org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:java.lang.String extractAuthorizationRealm(java.util.Map)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void copyRequestHeaders(org.apache.cxf.message.Message,java.util.Map)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void copyResponseHeaders(org.apache.cxf.message.Message,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:java.lang.String getId(java.util.Map)",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponseInternal()",
            "org.apache.cxf.transport.http.gzip.GZIPOutInterceptor:void addHeader(org.apache.cxf.message.Message,java.lang.String,java.lang.String)",
            "org.apache.cxf.transport.AbstractMultiplexDestination:java.lang.String getId(java.util.Map)",
            "org.apache.cxf.transport.DestinationFactoryManagerImpl:org.apache.cxf.transport.DestinationFactory getDestinationFactory(java.lang.String)",
            "org.apache.cxf.transport.servlet.ServletContextResourceResolver:java.io.InputStream getAsStream(java.lang.String)",
            "org.apache.cxf.transport.servlet.ServletContextResourceResolver:java.lang.Object resolve(java.lang.String,java.lang.Class)",
            "org.apache.cxf.transport.servlet.ServletTransportFactory:org.apache.cxf.transport.servlet.ServletDestination getDestinationForPath(java.lang.String)",
            "org.apache.cxf.transport.servlet.AbstractCXFServlet:void init(javax.servlet.ServletConfig)",
            "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser$SpringJettyHTTPServerEngine:void finalizeConfig()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPTransportFactory:org.apache.cxf.transport.Destination getDestination(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPTransportFactory:org.apache.cxf.transport.http_jetty.JettyHTTPDestination createDestination(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine retrieveJettyHTTPServerEngine(int)",
            "org.apache.cxf.transport.jms.JMSUtils:void addContentTypeToProtocolHeader(org.apache.cxf.message.Message)",
            "org.apache.cxf.NSManager:java.lang.String getPrefixFromNS(java.lang.String)",
            "org.apache.cxf.extension.RegistryImpl:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.endpoint.ClientImpl:java.util.Map getRequestContext()",
            "org.apache.cxf.endpoint.ClientImpl:java.util.Map getResponseContext()",
            "org.apache.cxf.endpoint.ClientImpl:boolean isThreadLocalRequestContext()",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.ClientImpl:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.addressing.ContextUtils:java.lang.String getActionFromServiceModel(org.apache.cxf.message.Message,java.lang.Exception)",
            "org.apache.cxf.ws.addressing.ContextUtils:java.lang.String getAction(org.apache.cxf.service.model.Extensible)",
            "org.apache.cxf.ws.addressing.MAPAggregator:boolean validateIncomingMAPs(org.apache.cxf.ws.addressing.AddressingProperties,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void propogateAction(org.apache.cxf.ws.addressing.AttributedURIType,org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void restoreExchange(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.addressing.AddressingProperties)",
            "org.apache.cxf.ws.policy.PolicyRegistryImpl:org.apache.neethi.Policy lookup(java.lang.String)",
            "org.apache.cxf.ws.security.policy.interceptors.HttpsTokenInterceptorProvider$HttpsTokenInInterceptor:void assertHttps(java.util.Collection,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.policy.interceptors.HttpsTokenInterceptorProvider$HttpsTokenOutInterceptor:void assertHttps(java.util.Collection,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.trust.STSClient:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:org.apache.cxf.ws.security.tokenstore.SecurityToken getToken(java.lang.String)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:org.apache.ws.security.components.crypto.Crypto getCrypto(org.apache.cxf.ws.security.policy.model.TokenWrapper,java.lang.String,java.lang.String)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:java.util.Properties getProps(java.lang.Object,org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor:void <init>(java.util.Map)",
            "org.apache.cxf.ws.security.wss4j.AbstractWSS4JInterceptor:java.lang.Object getOption(java.lang.String)",
            "org.apache.cxf.ws.security.wss4j.AbstractWSS4JInterceptor:org.apache.ws.security.components.crypto.Crypto loadSignatureCrypto(org.apache.ws.security.handler.RequestData)",
            "org.apache.cxf.ws.security.wss4j.AbstractWSS4JInterceptor:org.apache.ws.security.components.crypto.Crypto loadDecryptionCrypto(org.apache.ws.security.handler.RequestData)",
            "org.apache.cxf.ws.security.wss4j.AbstractWSS4JInterceptor:org.apache.ws.security.components.crypto.Crypto loadEncryptionCrypto(org.apache.ws.security.handler.RequestData)",
            "org.apache.cxf.ws.rm.Source:org.apache.cxf.ws.rm.SourceSequence getSequence(org.apache.cxf.ws.rm.Identifier)",
            "org.apache.cxf.ws.rm.Source:org.apache.cxf.ws.rm.SourceSequence getAssociatedSequence(org.apache.cxf.ws.rm.Identifier)",
            "org.apache.cxf.ws.rm.RMOutInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.Destination:org.apache.cxf.ws.rm.DestinationSequence getSequence(org.apache.cxf.ws.rm.Identifier)",
            "org.apache.cxf.ws.rm.RMManager:org.apache.cxf.ws.rm.RMEndpoint getReliableEndpoint(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.RMManager:void shutdownReliableEndpoint(org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl:java.util.List getSequenceCandidates(java.lang.String)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void add(org.apache.cxf.interceptor.Interceptor,boolean)",
            "org.apache.cxf.workqueue.WorkQueueManagerImpl:org.apache.cxf.workqueue.AutomaticWorkQueue getNamedWorkQueue(java.lang.String)",
            "org.apache.cxf.databinding.AbstractDataBinding:void updateSchemaLocation(org.w3c.dom.Element)",
            "org.apache.cxf.databinding.source.mime.MimeSerializer:void serialize(org.apache.ws.commons.schema.XmlSchemaObject,java.lang.Class,org.w3c.dom.Node)",
            "org.apache.cxf.wsdl.AbstractWSDLPlugin:java.lang.String getOption(java.util.Map,java.lang.String)",
            "org.apache.cxf.wsdl.AbstractWSDLPlugin:java.lang.Object getOption(java.util.Map,java.lang.String,java.lang.Class)",
            "org.apache.cxf.wsdl.AbstractWSDLPlugin:java.lang.Object getOption(java.util.Map,java.lang.Class)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:int getIndentLevel(java.lang.Class)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:java.lang.String getWSDLLocation(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:java.lang.String getEndpointReferenceId(java.util.Map)",
            "org.apache.cxf.service.model.BindingOperationInfo:org.apache.cxf.service.model.BindingFaultInfo getFault(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.AbstractMessageContainer:void addMessagePart(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePart(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:java.lang.Object getExtensionAttribute(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperationForWrapperElement(org.apache.cxf.message.Exchange,javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.service.model.InterfaceInfo:org.apache.cxf.service.model.OperationInfo getOperation(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.MessageInfo getMessage(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.MessageInfo:java.util.List getOrderedParts(java.util.List)",
            "org.apache.cxf.service.model.BindingInfo:org.apache.cxf.service.model.BindingOperationInfo getOperation(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.OperationInfo:org.apache.cxf.service.model.FaultInfo getFault(javax.xml.namespace.QName)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void addImport(org.apache.ws.commons.schema.XmlSchema,java.lang.String)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isWrapped(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isRPC(java.lang.reflect.Method)",
            "org.apache.cxf.binding.BindingFactoryManagerImpl:org.apache.cxf.binding.BindingFactory getBindingFactory(java.lang.String)",
            "org.apache.cxf.binding.soap.interceptor.SoapActionInInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.SoapVersionFactory:org.apache.cxf.binding.soap.SoapVersion getSoapVersion(java.lang.String)",
            "org.apache.cxf.clustering.AbstractStaticFailoverStrategy:java.util.List getAlternateEndpoints(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.clustering.FailoverTargetSelector:void complete(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.clustering.FailoverTargetSelector:void overrideAddressProperty(java.util.Map)",
            "org.apache.cxf.tools.common.Tag:boolean equals(java.lang.Object)",
            "org.apache.cxf.tools.common.ToolContext:void addParameters(java.util.Map)",
            "org.apache.cxf.tools.common.ToolContext:java.lang.Object get(java.lang.String)",
            "org.apache.cxf.tools.common.ToolContext:java.lang.String mapNamespaceToPackageName(java.lang.String)",
            "org.apache.cxf.tools.common.ToolContext:java.lang.String getExcludePackageName(java.lang.String)",
            "org.apache.cxf.tools.common.VelocityGenerator:void doWrite(java.lang.String,java.io.Writer)",
            "org.apache.cxf.tools.common.ProcessorTestBase:boolean assertXmlEquals(java.io.File,java.io.File,java.util.List)",
            "org.apache.cxf.tools.common.ProcessorTestBase:void assertAttributesEquals(javax.xml.namespace.QName,java.util.Map,java.util.Map,java.util.Collection)",
            "org.apache.cxf.tools.common.model.JavaType:java.lang.String getDefaultTypeValue()",
            "org.apache.cxf.tools.common.model.JavaMethod:boolean isEquiv(java.lang.String,java.lang.String)",
            "org.apache.cxf.tools.common.model.JavaParameter:org.apache.cxf.tools.common.model.JAnnotation getAnnotation(java.lang.String)",
            "org.apache.cxf.tools.util.BuiltInTypesJavaMappingUtil:java.lang.String getJType(java.lang.String,java.lang.String)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:java.lang.String getBindingAnnotation(java.lang.String)",
            "org.apache.cxf.tools.util.PropertyUtil:java.lang.String getProperty(java.lang.String)",
            "org.apache.cxf.tools.util.ClassCollector:java.lang.String getTypesFullClassName(java.lang.String,java.lang.String)",
            "org.apache.cxf.wsdl11.SchemaUtil:void extractSchema(javax.wsdl.Definition,org.apache.cxf.common.xmlschema.SchemaCollection,java.util.List)",
            "org.apache.cxf.wsdl11.SchemaUtil:void addSchema(java.lang.String,javax.wsdl.extensions.schema.Schema)",
            "org.apache.cxf.wsdl11.SchemaUtil:boolean isSchemaParsed(java.lang.String,java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:java.util.Collection getImports(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addExtensibilityAttributes(javax.wsdl.extensions.AttributeExtensible,java.util.Map)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(java.net.URL)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(org.w3c.dom.Element)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:org.apache.cxf.service.model.ServiceSchemaInfo getSchemasForDefinition(javax.wsdl.Definition)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void activateViaNS(java.lang.String)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void processExtension(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadAndRegister(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:java.lang.Object getExtension(java.lang.String,java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void <init>(java.util.Map,java.util.Map)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:java.lang.String getBusId(java.util.Map)",
            "org.apache.cxf.bus.CXFBusImpl:java.lang.Object getExtension(java.lang.Class)",
            "org.apache.cxf.attachment.AttachmentImpl:java.lang.String getHeader(java.lang.String)",
            "org.apache.cxf.frontend.ClientFactoryBean:void applyExtraClass()",
            "org.apache.cxf.frontend.ClientFactoryBean:void applyProperties(org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.frontend.SimpleMethodDispatcher:org.apache.cxf.service.model.BindingOperationInfo getBindingOperation(java.lang.reflect.Method,org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.frontend.SimpleMethodDispatcher:java.lang.reflect.Method getMethod(org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.frontend.SimpleMethodDispatcher:java.lang.reflect.Method getPrimaryMethod(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory:org.apache.cxf.endpoint.Endpoint createEndpoint()",
            "org.apache.cxf.frontend.ServerFactoryBean:void applyExtraClass()",
            "org.apache.cxf.aegis.Context:java.lang.Object getProperty(java.lang.Class)",
            "org.apache.cxf.aegis.util.jdom.StaxBuilder:void buildTree(org.jdom.JDOMFactory,javax.xml.stream.XMLStreamReader,org.jdom.Document)",
            "org.apache.cxf.aegis.util.jdom.StaxBuilder:int resolveAttrType(java.lang.String)",
            "org.apache.cxf.aegis.util.stax.JDOMStreamWriter:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.aegis.util.stax.JDOMStreamReader:java.lang.String getDeclaredURI(java.lang.String)",
            "org.apache.cxf.aegis.databinding.XMLStreamDataWriter:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.aegis.databinding.ElementDataWriter:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:org.apache.cxf.aegis.type.Type getType(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.aegis.type.basic.XMLBeanTypeInfo:org.apache.cxf.aegis.type.basic.BeanTypePropertyInfo getPropertyInfo(javax.xml.namespace.QName)",
            "org.apache.cxf.aegis.type.basic.BeanType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.InterfaceInvocationHandler:java.lang.Object readProperty(java.lang.Object)",
            "org.apache.cxf.aegis.type.basic.BeanTypeInfo:org.apache.cxf.aegis.type.Type getType(javax.xml.namespace.QName)",
            "org.apache.cxf.aegis.type.basic.BeanTypeInfo:javax.xml.namespace.QName getMappedTypeName(javax.xml.namespace.QName)",
            "org.apache.cxf.aegis.type.basic.BeanTypeInfo:java.lang.String getPropertyNameFromMappedName(javax.xml.namespace.QName)",
            "org.apache.cxf.aegis.type.encoded.MarshalRegistry:java.lang.String getInstanceId(java.lang.Object)",
            "org.apache.cxf.aegis.type.XMLTypeCreator:org.w3c.dom.Document getDocument(java.lang.Class)",
            "org.apache.cxf.aegis.type.DefaultTypeMapping:org.apache.cxf.aegis.type.Type getType(java.lang.Class)",
            "org.apache.cxf.aegis.type.DefaultTypeMapping:org.apache.cxf.aegis.type.Type getType(javax.xml.namespace.QName)",
            "org.apache.cxf.aegis.type.DefaultTypeMapping:javax.xml.namespace.QName getTypeQName(java.lang.Class)",
            "org.apache.cxf.jaxws.handler.HandlerResolverImpl:java.util.List getHandlerChain(javax.xml.ws.handler.PortInfo)",
            "org.apache.cxf.jaxws.handler.InitParamResourceResolver:java.lang.Object resolve(java.lang.String,java.lang.Class)",
            "org.apache.cxf.jaxws.support.JaxWsServiceConfiguration:javax.jws.WebParam getWebParam(java.lang.reflect.Method,int)",
            "org.apache.cxf.jaxws.support.JaxWsServiceConfiguration:java.lang.Class getResponseWrapper(java.lang.reflect.Method)",
            "org.apache.cxf.jaxws.support.JaxWsServiceConfiguration:java.lang.Class getRequestWrapper(java.lang.reflect.Method)",
            "org.apache.cxf.jaxws.JaxWsClientProxy:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])",
            "org.apache.cxf.jaxws.ServiceImpl:java.lang.Object createPort(javax.xml.namespace.QName,org.apache.cxf.ws.addressing.EndpointReferenceType,java.lang.Class,javax.xml.ws.WebServiceFeature[])",
            "org.apache.cxf.jaxws.ServiceImpl:org.apache.cxf.jaxws.handler.PortInfoImpl getPortInfo(javax.xml.namespace.QName)",
            "org.apache.cxf.jaxws.EndpointImpl:void checkProperties()",
            "org.apache.cxf.jaxws.DispatchImpl:java.lang.Object invoke(java.lang.Object,boolean)",
            "org.apache.cxf.jaxws.DispatchImpl:java.util.concurrent.Future invokeAsync(java.lang.Object,javax.xml.ws.AsyncHandler)",
            "org.apache.cxf.jaxws.interceptors.SwAOutInterceptor:boolean callSWARefMethod(javax.xml.bind.JAXBContext)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:void <init>(java.util.Map,org.apache.cxf.message.Exchange,javax.xml.ws.handler.MessageContext$Scope)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:void copyScoped(java.util.Map)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:java.lang.String mapKey(java.lang.String)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:java.lang.String mapKeyReverse(java.lang.String)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:java.lang.Object put(java.lang.String,java.lang.Object,javax.xml.ws.handler.MessageContext$Scope)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:javax.xml.ws.handler.MessageContext$Scope getScope(java.lang.String)",
            "org.apache.cxf.jaxws.AbstractJAXWSMethodInvoker:void updateWebServiceContext(org.apache.cxf.message.Exchange,javax.xml.ws.handler.MessageContext)",
            "org.apache.cxf.xmlbeans.XmlBeansSchemaInitializer:org.apache.ws.commons.schema.XmlSchema getSchema(org.apache.xmlbeans.SchemaTypeSystem,java.lang.String)",
            "org.apache.cxf.xmlbeans.XmlBeansSchemaInitializer:void mapClass(org.apache.cxf.service.model.MessagePartInfo,java.lang.Class)",
            "org.apache.cxf.xmlbeans.tools.XMLBeansSchemaTypeUtils:java.lang.String getNaturalJavaClassName(org.apache.xmlbeans.SchemaType)"
        ]
    },
    "org.apache.cxf.common.util.ASMHelper:java.lang.String getClassCode(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.ASMHelper:java.lang.String getMethodSignature(java.lang.reflect.Method)",
            "org.apache.cxf.common.util.ASMHelper:java.lang.String getClassCode(java.lang.Class)",
            "org.apache.cxf.common.util.ASMHelper:java.lang.String getClassCode(java.lang.reflect.Type)",
            "org.apache.cxf.jaxb.WrapperHelperCompiler:boolean addCreateWrapperObject(java.lang.String,java.lang.Class)",
            "org.apache.cxf.jaxws.WrapperClassGenerator:void generatePackageInfo(java.lang.String,java.lang.String,java.lang.Class)",
            "org.apache.cxf.jaxws.WrapperClassGenerator:void generateMessagePart(org.objectweb.asm.ClassWriter,org.apache.cxf.service.model.MessagePartInfo,java.lang.reflect.Method,java.lang.String)",
            "org.apache.cxf.jaxws.WrapperClassGenerator:void addJAXBAnnotations(org.objectweb.asm.FieldVisitor,java.util.List)"
        ]
    },
    "org.apache.cxf.common.util.ASMHelper:org.apache.cxf.common.util.ASMHelper$TypeHelperClassLoader getTypeHelperClassLoader(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.ASMHelper:java.lang.Class loadClass(java.lang.String,java.lang.Class,byte[])",
            "org.apache.cxf.common.util.ASMHelper:java.lang.Class findClass(java.lang.String,java.lang.Class)"
        ]
    },
    "org.apache.cxf.common.util.ASMHelper$TypeHelperClassLoader:java.lang.Class lookupDefinedClass(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.ASMHelper:java.lang.Class findClass(java.lang.String,java.lang.Class)"
        ]
    },
    "org.apache.cxf.common.util.ParamReader:java.lang.String[] getParameterNames(java.lang.reflect.Member,java.lang.Class[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.ParamReader:java.lang.String[] getParameterNames(java.lang.reflect.Constructor)",
            "org.apache.cxf.common.util.ParamReader:java.lang.String[] getParameterNames(java.lang.reflect.Method)"
        ]
    },
    "org.apache.cxf.common.util.ParamReader:org.apache.cxf.common.util.ParamReader$MethodInfo getMethodInfo()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.ParamReader:void readLocalVariableTable()"
        ]
    },
    "org.apache.cxf.common.util.TwoStageMap:java.lang.Object get(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.MapNamespaceContext:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.helpers.HttpHeaderHelper:java.util.List getHeader(java.util.Map,java.lang.String)",
            "org.apache.cxf.helpers.HttpHeaderHelper:java.lang.String getHeaderKey(java.lang.String)",
            "org.apache.cxf.helpers.HttpHeaderHelper:java.lang.String mapCharset(java.lang.String)",
            "org.apache.cxf.helpers.XMLUtils:javax.xml.transform.TransformerFactory getTransformerFactory()",
            "org.apache.cxf.helpers.XMLUtils:javax.xml.parsers.DocumentBuilderFactory getDocumentBuilderFactory()",
            "org.apache.cxf.helpers.XMLUtils:javax.xml.namespace.QName getNamespace(java.util.Map,java.lang.String,java.lang.String)",
            "org.apache.cxf.common.xmlschema.FixedExtensionDeserializer:void deserialize(org.apache.ws.commons.schema.XmlSchemaObject,javax.xml.namespace.QName,org.w3c.dom.Node)",
            "org.apache.cxf.common.logging.Log4jLogger:void setLevel(java.util.logging.Level)",
            "org.apache.cxf.common.logging.Log4jLogger:void internalLogFormatted(java.lang.String,java.util.logging.LogRecord)",
            "org.apache.cxf.common.logging.Log4jLogger$HandlerWrapper:org.apache.log4j.Priority getThreshold()",
            "org.apache.cxf.common.util.ClassReader:void readAttributes()",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.common.util.ASMHelper:java.lang.String getClassCode(java.lang.Class)",
            "org.apache.cxf.common.util.ASMHelper:org.apache.cxf.common.util.ASMHelper$TypeHelperClassLoader getTypeHelperClassLoader(java.lang.Class)",
            "org.apache.cxf.common.util.ASMHelper$TypeHelperClassLoader:java.lang.Class lookupDefinedClass(java.lang.String)",
            "org.apache.cxf.common.util.CacheMap:void updateMainDataMap()",
            "org.apache.cxf.common.util.CacheMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.common.util.ParamReader:java.lang.String[] getParameterNames(java.lang.reflect.Member,java.lang.Class[])",
            "org.apache.cxf.common.util.ParamReader:org.apache.cxf.common.util.ParamReader$MethodInfo getMethodInfo()",
            "org.apache.cxf.common.util.TwoStageMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.resource.PropertiesResolver:java.lang.Object resolve(java.lang.String,java.lang.Class)",
            "org.apache.cxf.resource.URIResolver:void tryRemote(java.lang.String)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.util.List getBeanListForId(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void mapElementToJaxbProperty(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder,java.lang.String,java.lang.Class)",
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:java.lang.Object unmarshalFactoryString(java.lang.String,java.lang.Class)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void initWildcardDefinitionMap()",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureWithWildCard(java.lang.String,java.lang.Object)",
            "org.apache.cxf.jaxb.NamespaceMapper:java.lang.String getPreferredPrefix(java.lang.String,java.lang.String,boolean)",
            "org.apache.cxf.jaxb.JAXBUtils:java.lang.String builtInTypeToJavaType(java.lang.String)",
            "org.apache.cxf.jaxb.JAXBUtils:java.lang.Class holderClass(java.lang.String)",
            "org.apache.cxf.jaxb.JAXBDataBinding:org.apache.cxf.jaxb.JAXBDataBinding$CachedContextAndSchemas createJAXBContextAndSchemas(java.util.Set,java.lang.String)",
            "org.apache.cxf.jaxb.JAXBDataBinding:void scanPackages(java.util.Set)",
            "org.apache.cxf.jaxb.JAXBDataBinding$1:javax.xml.transform.Result createOutput(java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxb.WrapperHelperCompiler:boolean addCreateWrapperObject(java.lang.String,java.lang.Class)",
            "org.apache.cxf.jaxb.WrapperHelperCompiler:void createObjectWrapper(org.objectweb.asm.MethodVisitor,java.lang.Class)",
            "org.apache.cxf.management.counters.CounterRepository:org.apache.cxf.management.counters.Counter getCounter(javax.management.ObjectName)",
            "org.apache.cxf.staxutils.AbstractDOMStreamReader:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.staxutils.W3CDOMStreamWriter:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.message.MessageImpl:java.lang.Object getContent(java.lang.Class)",
            "org.apache.cxf.headers.HeaderManagerImpl:org.apache.cxf.headers.HeaderProcessor getHeaderProcessor(java.lang.String)",
            "org.apache.cxf.interceptor.StaxOutInterceptor:javax.xml.stream.XMLOutputFactory getXMLOutputFactory(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.util.Map keepInOrder(java.util.Map,org.apache.cxf.service.model.OperationInfo,java.util.List)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:org.apache.cxf.message.MessageContentsList getParameters(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.interceptor.ClientOutFaultObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxInInterceptor:javax.xml.stream.XMLInputFactory getXMLInputFactory(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.FIStaxOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.ConduitInitiatorManagerImpl:org.apache.cxf.transport.ConduitInitiator getConduitInitiator(java.lang.String)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void writeResponse(java.lang.String,java.lang.String,org.apache.cxf.service.model.EndpointInfo,java.io.OutputStream)",
            "org.apache.cxf.transport.http.DigestAuthSupplier:java.lang.String getPreemptiveAuthorization(org.apache.cxf.transport.http.HTTPConduit,java.net.URL,org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:void transferProtocolHeadersToURLConnection(org.apache.cxf.message.Message,java.net.URLConnection)",
            "org.apache.cxf.transport.http.HTTPConduit:void logProtocolHeaders(java.util.logging.Level,org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:java.lang.String extractAuthorizationRealm(java.util.Map)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void copyRequestHeaders(org.apache.cxf.message.Message,java.util.Map)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void copyResponseHeaders(org.apache.cxf.message.Message,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:java.lang.String getId(java.util.Map)",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponseInternal()",
            "org.apache.cxf.transport.http.gzip.GZIPOutInterceptor:void addHeader(org.apache.cxf.message.Message,java.lang.String,java.lang.String)",
            "org.apache.cxf.transport.AbstractMultiplexDestination:java.lang.String getId(java.util.Map)",
            "org.apache.cxf.transport.DestinationFactoryManagerImpl:org.apache.cxf.transport.DestinationFactory getDestinationFactory(java.lang.String)",
            "org.apache.cxf.transport.servlet.ServletContextResourceResolver:java.io.InputStream getAsStream(java.lang.String)",
            "org.apache.cxf.transport.servlet.ServletContextResourceResolver:java.lang.Object resolve(java.lang.String,java.lang.Class)",
            "org.apache.cxf.transport.servlet.ServletTransportFactory:org.apache.cxf.transport.servlet.ServletDestination getDestinationForPath(java.lang.String)",
            "org.apache.cxf.transport.servlet.AbstractCXFServlet:void init(javax.servlet.ServletConfig)",
            "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser$SpringJettyHTTPServerEngine:void finalizeConfig()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPTransportFactory:org.apache.cxf.transport.Destination getDestination(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPTransportFactory:org.apache.cxf.transport.http_jetty.JettyHTTPDestination createDestination(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine retrieveJettyHTTPServerEngine(int)",
            "org.apache.cxf.transport.jms.JMSUtils:void addContentTypeToProtocolHeader(org.apache.cxf.message.Message)",
            "org.apache.cxf.NSManager:java.lang.String getPrefixFromNS(java.lang.String)",
            "org.apache.cxf.extension.RegistryImpl:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.endpoint.ClientImpl:java.util.Map getRequestContext()",
            "org.apache.cxf.endpoint.ClientImpl:java.util.Map getResponseContext()",
            "org.apache.cxf.endpoint.ClientImpl:boolean isThreadLocalRequestContext()",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.ClientImpl:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.addressing.ContextUtils:java.lang.String getActionFromServiceModel(org.apache.cxf.message.Message,java.lang.Exception)",
            "org.apache.cxf.ws.addressing.ContextUtils:java.lang.String getAction(org.apache.cxf.service.model.Extensible)",
            "org.apache.cxf.ws.addressing.MAPAggregator:boolean validateIncomingMAPs(org.apache.cxf.ws.addressing.AddressingProperties,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void propogateAction(org.apache.cxf.ws.addressing.AttributedURIType,org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void restoreExchange(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.addressing.AddressingProperties)",
            "org.apache.cxf.ws.policy.PolicyRegistryImpl:org.apache.neethi.Policy lookup(java.lang.String)",
            "org.apache.cxf.ws.security.policy.interceptors.HttpsTokenInterceptorProvider$HttpsTokenInInterceptor:void assertHttps(java.util.Collection,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.policy.interceptors.HttpsTokenInterceptorProvider$HttpsTokenOutInterceptor:void assertHttps(java.util.Collection,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.trust.STSClient:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:org.apache.cxf.ws.security.tokenstore.SecurityToken getToken(java.lang.String)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:org.apache.ws.security.components.crypto.Crypto getCrypto(org.apache.cxf.ws.security.policy.model.TokenWrapper,java.lang.String,java.lang.String)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:java.util.Properties getProps(java.lang.Object,org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor:void <init>(java.util.Map)",
            "org.apache.cxf.ws.security.wss4j.AbstractWSS4JInterceptor:java.lang.Object getOption(java.lang.String)",
            "org.apache.cxf.ws.security.wss4j.AbstractWSS4JInterceptor:org.apache.ws.security.components.crypto.Crypto loadSignatureCrypto(org.apache.ws.security.handler.RequestData)",
            "org.apache.cxf.ws.security.wss4j.AbstractWSS4JInterceptor:org.apache.ws.security.components.crypto.Crypto loadDecryptionCrypto(org.apache.ws.security.handler.RequestData)",
            "org.apache.cxf.ws.security.wss4j.AbstractWSS4JInterceptor:org.apache.ws.security.components.crypto.Crypto loadEncryptionCrypto(org.apache.ws.security.handler.RequestData)",
            "org.apache.cxf.ws.rm.Source:org.apache.cxf.ws.rm.SourceSequence getSequence(org.apache.cxf.ws.rm.Identifier)",
            "org.apache.cxf.ws.rm.Source:org.apache.cxf.ws.rm.SourceSequence getAssociatedSequence(org.apache.cxf.ws.rm.Identifier)",
            "org.apache.cxf.ws.rm.RMOutInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.Destination:org.apache.cxf.ws.rm.DestinationSequence getSequence(org.apache.cxf.ws.rm.Identifier)",
            "org.apache.cxf.ws.rm.RMManager:org.apache.cxf.ws.rm.RMEndpoint getReliableEndpoint(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.RMManager:void shutdownReliableEndpoint(org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl:java.util.List getSequenceCandidates(java.lang.String)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void add(org.apache.cxf.interceptor.Interceptor,boolean)",
            "org.apache.cxf.workqueue.WorkQueueManagerImpl:org.apache.cxf.workqueue.AutomaticWorkQueue getNamedWorkQueue(java.lang.String)",
            "org.apache.cxf.databinding.AbstractDataBinding:void updateSchemaLocation(org.w3c.dom.Element)",
            "org.apache.cxf.databinding.source.mime.MimeSerializer:void serialize(org.apache.ws.commons.schema.XmlSchemaObject,java.lang.Class,org.w3c.dom.Node)",
            "org.apache.cxf.wsdl.AbstractWSDLPlugin:java.lang.String getOption(java.util.Map,java.lang.String)",
            "org.apache.cxf.wsdl.AbstractWSDLPlugin:java.lang.Object getOption(java.util.Map,java.lang.String,java.lang.Class)",
            "org.apache.cxf.wsdl.AbstractWSDLPlugin:java.lang.Object getOption(java.util.Map,java.lang.Class)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:int getIndentLevel(java.lang.Class)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:java.lang.String getWSDLLocation(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:java.lang.String getEndpointReferenceId(java.util.Map)",
            "org.apache.cxf.service.model.BindingOperationInfo:org.apache.cxf.service.model.BindingFaultInfo getFault(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.AbstractMessageContainer:void addMessagePart(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePart(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:java.lang.Object getExtensionAttribute(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperationForWrapperElement(org.apache.cxf.message.Exchange,javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.service.model.InterfaceInfo:org.apache.cxf.service.model.OperationInfo getOperation(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.MessageInfo getMessage(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.MessageInfo:java.util.List getOrderedParts(java.util.List)",
            "org.apache.cxf.service.model.BindingInfo:org.apache.cxf.service.model.BindingOperationInfo getOperation(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.OperationInfo:org.apache.cxf.service.model.FaultInfo getFault(javax.xml.namespace.QName)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void addImport(org.apache.ws.commons.schema.XmlSchema,java.lang.String)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isWrapped(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isRPC(java.lang.reflect.Method)",
            "org.apache.cxf.binding.BindingFactoryManagerImpl:org.apache.cxf.binding.BindingFactory getBindingFactory(java.lang.String)",
            "org.apache.cxf.binding.soap.interceptor.SoapActionInInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.SoapVersionFactory:org.apache.cxf.binding.soap.SoapVersion getSoapVersion(java.lang.String)",
            "org.apache.cxf.clustering.AbstractStaticFailoverStrategy:java.util.List getAlternateEndpoints(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.clustering.FailoverTargetSelector:void complete(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.clustering.FailoverTargetSelector:void overrideAddressProperty(java.util.Map)",
            "org.apache.cxf.tools.common.Tag:boolean equals(java.lang.Object)",
            "org.apache.cxf.tools.common.ToolContext:void addParameters(java.util.Map)",
            "org.apache.cxf.tools.common.ToolContext:java.lang.Object get(java.lang.String)",
            "org.apache.cxf.tools.common.ToolContext:java.lang.String mapNamespaceToPackageName(java.lang.String)",
            "org.apache.cxf.tools.common.ToolContext:java.lang.String getExcludePackageName(java.lang.String)",
            "org.apache.cxf.tools.common.VelocityGenerator:void doWrite(java.lang.String,java.io.Writer)",
            "org.apache.cxf.tools.common.ProcessorTestBase:boolean assertXmlEquals(java.io.File,java.io.File,java.util.List)",
            "org.apache.cxf.tools.common.ProcessorTestBase:void assertAttributesEquals(javax.xml.namespace.QName,java.util.Map,java.util.Map,java.util.Collection)",
            "org.apache.cxf.tools.common.model.JavaType:java.lang.String getDefaultTypeValue()",
            "org.apache.cxf.tools.common.model.JavaMethod:boolean isEquiv(java.lang.String,java.lang.String)",
            "org.apache.cxf.tools.common.model.JavaParameter:org.apache.cxf.tools.common.model.JAnnotation getAnnotation(java.lang.String)",
            "org.apache.cxf.tools.util.BuiltInTypesJavaMappingUtil:java.lang.String getJType(java.lang.String,java.lang.String)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:java.lang.String getBindingAnnotation(java.lang.String)",
            "org.apache.cxf.tools.util.PropertyUtil:java.lang.String getProperty(java.lang.String)",
            "org.apache.cxf.tools.util.ClassCollector:java.lang.String getTypesFullClassName(java.lang.String,java.lang.String)",
            "org.apache.cxf.wsdl11.SchemaUtil:void extractSchema(javax.wsdl.Definition,org.apache.cxf.common.xmlschema.SchemaCollection,java.util.List)",
            "org.apache.cxf.wsdl11.SchemaUtil:void addSchema(java.lang.String,javax.wsdl.extensions.schema.Schema)",
            "org.apache.cxf.wsdl11.SchemaUtil:boolean isSchemaParsed(java.lang.String,java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:java.util.Collection getImports(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addExtensibilityAttributes(javax.wsdl.extensions.AttributeExtensible,java.util.Map)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(java.net.URL)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(org.w3c.dom.Element)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:org.apache.cxf.service.model.ServiceSchemaInfo getSchemasForDefinition(javax.wsdl.Definition)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void activateViaNS(java.lang.String)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void processExtension(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadAndRegister(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:java.lang.Object getExtension(java.lang.String,java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void <init>(java.util.Map,java.util.Map)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:java.lang.String getBusId(java.util.Map)",
            "org.apache.cxf.bus.CXFBusImpl:java.lang.Object getExtension(java.lang.Class)",
            "org.apache.cxf.attachment.AttachmentImpl:java.lang.String getHeader(java.lang.String)",
            "org.apache.cxf.frontend.ClientFactoryBean:void applyExtraClass()",
            "org.apache.cxf.frontend.ClientFactoryBean:void applyProperties(org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.frontend.SimpleMethodDispatcher:org.apache.cxf.service.model.BindingOperationInfo getBindingOperation(java.lang.reflect.Method,org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.frontend.SimpleMethodDispatcher:java.lang.reflect.Method getMethod(org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.frontend.SimpleMethodDispatcher:java.lang.reflect.Method getPrimaryMethod(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory:org.apache.cxf.endpoint.Endpoint createEndpoint()",
            "org.apache.cxf.frontend.ServerFactoryBean:void applyExtraClass()",
            "org.apache.cxf.aegis.Context:java.lang.Object getProperty(java.lang.Class)",
            "org.apache.cxf.aegis.util.jdom.StaxBuilder:void buildTree(org.jdom.JDOMFactory,javax.xml.stream.XMLStreamReader,org.jdom.Document)",
            "org.apache.cxf.aegis.util.jdom.StaxBuilder:int resolveAttrType(java.lang.String)",
            "org.apache.cxf.aegis.util.stax.JDOMStreamWriter:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.aegis.util.stax.JDOMStreamReader:java.lang.String getDeclaredURI(java.lang.String)",
            "org.apache.cxf.aegis.databinding.XMLStreamDataWriter:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.aegis.databinding.ElementDataWriter:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:org.apache.cxf.aegis.type.Type getType(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.aegis.type.basic.XMLBeanTypeInfo:org.apache.cxf.aegis.type.basic.BeanTypePropertyInfo getPropertyInfo(javax.xml.namespace.QName)",
            "org.apache.cxf.aegis.type.basic.BeanType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.InterfaceInvocationHandler:java.lang.Object readProperty(java.lang.Object)",
            "org.apache.cxf.aegis.type.basic.BeanTypeInfo:org.apache.cxf.aegis.type.Type getType(javax.xml.namespace.QName)",
            "org.apache.cxf.aegis.type.basic.BeanTypeInfo:javax.xml.namespace.QName getMappedTypeName(javax.xml.namespace.QName)",
            "org.apache.cxf.aegis.type.basic.BeanTypeInfo:java.lang.String getPropertyNameFromMappedName(javax.xml.namespace.QName)",
            "org.apache.cxf.aegis.type.encoded.MarshalRegistry:java.lang.String getInstanceId(java.lang.Object)",
            "org.apache.cxf.aegis.type.XMLTypeCreator:org.w3c.dom.Document getDocument(java.lang.Class)",
            "org.apache.cxf.aegis.type.DefaultTypeMapping:org.apache.cxf.aegis.type.Type getType(java.lang.Class)",
            "org.apache.cxf.aegis.type.DefaultTypeMapping:org.apache.cxf.aegis.type.Type getType(javax.xml.namespace.QName)",
            "org.apache.cxf.aegis.type.DefaultTypeMapping:javax.xml.namespace.QName getTypeQName(java.lang.Class)",
            "org.apache.cxf.jaxws.handler.HandlerResolverImpl:java.util.List getHandlerChain(javax.xml.ws.handler.PortInfo)",
            "org.apache.cxf.jaxws.handler.InitParamResourceResolver:java.lang.Object resolve(java.lang.String,java.lang.Class)",
            "org.apache.cxf.jaxws.support.JaxWsServiceConfiguration:javax.jws.WebParam getWebParam(java.lang.reflect.Method,int)",
            "org.apache.cxf.jaxws.support.JaxWsServiceConfiguration:java.lang.Class getResponseWrapper(java.lang.reflect.Method)",
            "org.apache.cxf.jaxws.support.JaxWsServiceConfiguration:java.lang.Class getRequestWrapper(java.lang.reflect.Method)",
            "org.apache.cxf.jaxws.JaxWsClientProxy:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])",
            "org.apache.cxf.jaxws.ServiceImpl:java.lang.Object createPort(javax.xml.namespace.QName,org.apache.cxf.ws.addressing.EndpointReferenceType,java.lang.Class,javax.xml.ws.WebServiceFeature[])",
            "org.apache.cxf.jaxws.ServiceImpl:org.apache.cxf.jaxws.handler.PortInfoImpl getPortInfo(javax.xml.namespace.QName)",
            "org.apache.cxf.jaxws.EndpointImpl:void checkProperties()",
            "org.apache.cxf.jaxws.DispatchImpl:java.lang.Object invoke(java.lang.Object,boolean)",
            "org.apache.cxf.jaxws.DispatchImpl:java.util.concurrent.Future invokeAsync(java.lang.Object,javax.xml.ws.AsyncHandler)",
            "org.apache.cxf.jaxws.interceptors.SwAOutInterceptor:boolean callSWARefMethod(javax.xml.bind.JAXBContext)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:void <init>(java.util.Map,org.apache.cxf.message.Exchange,javax.xml.ws.handler.MessageContext$Scope)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:void copyScoped(java.util.Map)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:java.lang.String mapKey(java.lang.String)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:java.lang.String mapKeyReverse(java.lang.String)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:java.lang.Object put(java.lang.String,java.lang.Object,javax.xml.ws.handler.MessageContext$Scope)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:javax.xml.ws.handler.MessageContext$Scope getScope(java.lang.String)",
            "org.apache.cxf.jaxws.AbstractJAXWSMethodInvoker:void updateWebServiceContext(org.apache.cxf.message.Exchange,javax.xml.ws.handler.MessageContext)",
            "org.apache.cxf.xmlbeans.XmlBeansSchemaInitializer:org.apache.ws.commons.schema.XmlSchema getSchema(org.apache.xmlbeans.SchemaTypeSystem,java.lang.String)",
            "org.apache.cxf.xmlbeans.XmlBeansSchemaInitializer:void mapClass(org.apache.cxf.service.model.MessagePartInfo,java.lang.Class)",
            "org.apache.cxf.xmlbeans.tools.XMLBeansSchemaTypeUtils:java.lang.String getNaturalJavaClassName(org.apache.xmlbeans.SchemaType)"
        ]
    },
    "org.apache.cxf.resource.PropertiesResolver:java.lang.Object resolve(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.resource.DefaultResourceManager:java.lang.Object findResource(java.lang.String,java.lang.Class,boolean,java.util.List)"
        ]
    },
    "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.util.List getBeanListForId(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.SpringBeanMap:void processBeans(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.configuration.spring.SpringBeanQNameMap:void processBeans(org.springframework.context.ApplicationContext)"
        ]
    },
    "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void mapElementToJaxbProperty(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder,java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void mapElementToJaxbProperty(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder,javax.xml.namespace.QName,java.lang.String,java.lang.Class)"
        ]
    },
    "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:java.lang.Object unmarshalFactoryString(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser:org.apache.cxf.configuration.jsse.spring.TLSServerParametersConfig createTLSServerParametersConfig(java.lang.String)",
            "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser:java.lang.String createTLSServerParametersConfigRef(java.lang.String)",
            "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser:org.apache.cxf.transport.http_jetty.ThreadingParameters createThreadingParameters(java.lang.String)",
            "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser:java.lang.String createThreadingParametersRef(java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxb.NamespaceMapper:java.lang.String getPreferredPrefix(java.lang.String,java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxb.JAXBUtils:java.lang.String builtInTypeToJavaType(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxb.JAXBUtils:java.lang.Class holderClass(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxb.WrapperHelperCompiler:boolean addCreateWrapperObject(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.WrapperHelperCompiler:org.apache.cxf.databinding.WrapperHelper compile()"
        ]
    },
    "org.apache.cxf.jaxb.WrapperHelperCompiler:void createObjectWrapper(org.objectweb.asm.MethodVisitor,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.WrapperHelperCompiler:boolean addGetWrapperParts(java.lang.String,java.lang.Class,java.lang.reflect.Method[],java.lang.reflect.Field[],org.objectweb.asm.ClassWriter)"
        ]
    },
    "org.apache.cxf.management.counters.CounterRepository:org.apache.cxf.management.counters.Counter getCounter(javax.management.ObjectName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.management.counters.CounterRepository:void increaseCounter(javax.management.ObjectName,org.apache.cxf.management.counters.MessageHandlingTimeRecorder)"
        ]
    },
    "org.apache.cxf.staxutils.AbstractDOMStreamReader:java.lang.Object getProperty(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DepthXMLStreamReader:java.lang.Object getProperty(java.lang.String)"
        ]
    },
    "org.apache.cxf.staxutils.W3CDOMStreamWriter:java.lang.Object getProperty(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:java.lang.Object getProperty(java.lang.String)"
        ]
    },
    "org.apache.cxf.message.MessageImpl:java.lang.Object getContent(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.message.MessageContentsList:org.apache.cxf.message.MessageContentsList getContentsList(org.apache.cxf.message.Message)",
            "org.apache.cxf.message.AbstractWrappedMessage:java.lang.Object getContent(java.lang.Class)",
            "org.apache.cxf.message.MessageImpl:void copyContent(org.apache.cxf.message.Message,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.ServiceInvokerInterceptor:java.lang.Object getInvokee(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.ClientOutFaultObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.WrappedInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.LoggingOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.BareInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AttachmentOutInterceptor$AttachmentOutEndingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.ClientFaultConverter:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.ClientFaultConverter:void setStackTrace(org.apache.cxf.interceptor.Fault,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:org.apache.cxf.staxutils.DepthXMLStreamReader getXMLStreamReader(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.WrappedOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.FaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:void writeParts(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.message.MessageContentsList,java.util.List)",
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:javax.xml.stream.XMLStreamWriter getXMLStreamWriter(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.FIStaxOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.LoggingInInterceptor:void logging(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxOutInterceptor$StaxOutEndingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.PrettyLoggingOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.WrappedOutInterceptor$WrappedOutEndingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.TransportURIResolver$1:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.AbstractConduit:void close(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit$InterposedMessageObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:void close(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.gzip.GZIPOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.gzip.GZIPInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.AbstractDestination$1:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] processResult(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,java.util.Map)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Exception getException(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.ClientImpl:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.addressing.ContextUtils:void rebaseResponse(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.ws.addressing.AddressingProperties,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.addressing.ContextUtils:org.apache.cxf.ws.addressing.AttributedURIType getAction(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.addressing.MAPAggregator:java.lang.String getFaultNameFromMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.policy.PolicyVerificationInFaultInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.Servant:java.lang.Object getParameter(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.RetransmissionInterceptor:void handle(org.apache.cxf.message.Message,boolean)",
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl:void resend(org.apache.cxf.transport.Conduit,org.apache.cxf.message.Message)",
            "org.apache.cxf.phase.AbstractPhaseInterceptor:boolean isGET(org.apache.cxf.message.Message)",
            "org.apache.cxf.databinding.stax.StaxDataBindingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.soap.interceptor.RPCOutInterceptor:javax.xml.stream.XMLStreamWriter getXMLStreamWriter(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.xml.interceptor.XMLMessageInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.xml.interceptor.XMLFaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.xml.interceptor.XMLFaultOutInterceptor:void handleFault(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.xml.interceptor.XMLFaultInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.xml.interceptor.XMLMessageOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.xml.interceptor.XMLMessageOutInterceptor:void writeMessage(org.apache.cxf.message.Message,javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.clustering.FailoverTargetSelector:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.clustering.FailoverTargetSelector:void complete(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.attachment.AttachmentDeserializer:void initializeRootMessage()",
            "org.apache.cxf.attachment.AttachmentDeserializer:java.lang.String findBoundaryFromInputStream()",
            "org.apache.cxf.attachment.AttachmentSerializer:void writeProlog()",
            "org.apache.cxf.jaxws.handler.soap.SOAPMessageContextImpl:void setMessage(javax.xml.soap.SOAPMessage)",
            "org.apache.cxf.jaxws.handler.soap.SOAPMessageContextImpl:javax.xml.soap.SOAPMessage getMessage()",
            "org.apache.cxf.jaxws.handler.logical.LogicalHandlerFaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.handler.logical.LogicalHandlerFaultOutInterceptor$LogicalHandlerFaultOutEndingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.handler.logical.LogicalHandlerOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.handler.logical.LogicalHandlerOutInterceptor$LogicalHandlerOutEndingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.handler.logical.LogicalHandlerInInterceptor:void handleAbort(org.apache.cxf.message.Message,org.apache.cxf.staxutils.W3CDOMStreamWriter)",
            "org.apache.cxf.jaxws.handler.logical.LogicalMessageImpl:javax.xml.transform.Source getPayload()",
            "org.apache.cxf.jaxws.handler.logical.LogicalMessageImpl:javax.xml.transform.Source handleDispatchProviderCase(javax.xml.ws.Service$Mode)",
            "org.apache.cxf.jaxws.handler.logical.LogicalMessageImpl:void setPayload(javax.xml.transform.Source)",
            "org.apache.cxf.jaxws.interceptors.MessageModeInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.interceptors.MessageModeInInterceptor:void doDataSource(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.interceptors.MessageModeInInterceptor:void doFromSoapMessage(org.apache.cxf.message.Message,java.lang.Object)",
            "org.apache.cxf.jaxws.interceptors.WebFaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.interceptors.MessageModeOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.interceptors.MessageModeOutInterceptor:void doSoap(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.headers.HeaderManagerImpl:org.apache.cxf.headers.HeaderProcessor getHeaderProcessor(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.soap.interceptor.ReadHeadersInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor:void writeSoapEnvelopeStart(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.saaj.SAAJInInterceptor:void replaceHeaders(javax.xml.soap.SOAPMessage,org.apache.cxf.binding.soap.SoapMessage)"
        ]
    },
    "org.apache.cxf.interceptor.StaxOutInterceptor:javax.xml.stream.XMLOutputFactory getXMLOutputFactory(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.StaxOutInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.ClientOutFaultObserver:void onMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit$InterposedMessageObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream$1:void run()",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponseInternal()",
            "org.apache.cxf.transport.servlet.ServletDestination:void invoke(javax.servlet.ServletConfig,javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void serviceRequest(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.jms.continuations.JMSContinuation:void doResume()",
            "org.apache.cxf.transport.jms.JMSDestination:void onMessage(javax.jms.Message)",
            "org.apache.cxf.transport.jms.JMSConduit:void onMessage(javax.jms.Message)",
            "org.apache.cxf.endpoint.ClientImpl:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.soap.interceptor.CheckFaultInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.xml.interceptor.XMLMessageInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerInterceptor:void handleAbort(org.apache.cxf.binding.soap.SoapMessage,javax.xml.ws.handler.MessageContext)",
            "org.apache.cxf.jaxws.handler.logical.LogicalHandlerOutInterceptor$LogicalHandlerOutEndingInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.StaxInInterceptor:javax.xml.stream.XMLInputFactory getXMLInputFactory(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.StaxInInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.FIStaxOutInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.ConduitInitiatorManagerImpl:org.apache.cxf.transport.ConduitInitiator getConduitInitiator(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.AbstractConduitSelector:org.apache.cxf.transport.Conduit getSelectedConduit(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.soap.SoapTransportFactory:org.apache.cxf.transport.Conduit getConduit(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory:org.apache.cxf.service.model.EndpointInfo createEndpointInfo()"
        ]
    },
    "org.apache.cxf.transport.http.DigestAuthSupplier:java.lang.String getPreemptiveAuthorization(org.apache.cxf.transport.http.HTTPConduit,java.net.URL,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:void setHeadersByAuthorizationPolicy(org.apache.cxf.message.Message,java.net.URL,java.util.Map)"
        ]
    },
    "org.apache.cxf.transport.http.AbstractHTTPDestination:java.lang.String getId(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl.EndpointReferenceUtils:java.lang.String getEndpointReferenceId(java.util.Map)"
        ]
    },
    "org.apache.cxf.transport.http.gzip.GZIPOutInterceptor:void addHeader(org.apache.cxf.message.Message,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.gzip.GZIPOutInterceptor:org.apache.cxf.transport.http.gzip.GZIPOutInterceptor$UseGzip gzipPermitted(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.gzip.GZIPOutInterceptor:void access$100(org.apache.cxf.message.Message,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.transport.DestinationFactoryManagerImpl:org.apache.cxf.transport.DestinationFactory getDestinationFactory(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.servlet.AbstractCXFServlet:void replaceDestinationFactory()",
            "org.apache.cxf.endpoint.ServerImpl:void initDestination(org.apache.cxf.transport.DestinationFactory)",
            "org.apache.cxf.binding.soap.SoapTransportFactory:org.apache.cxf.transport.Destination getDestination(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.EndpointInfo buildEndpoint(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.BindingInfo,javax.wsdl.Port)",
            "org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory:org.apache.cxf.service.model.EndpointInfo createEndpointInfo()",
            "org.apache.cxf.jaxws.ServiceImpl:org.apache.cxf.service.model.EndpointInfo createEndpointInfo(org.apache.cxf.service.factory.AbstractServiceFactoryBean,javax.xml.namespace.QName,org.apache.cxf.jaxws.handler.PortInfoImpl)"
        ]
    },
    "org.apache.cxf.transport.servlet.ServletTransportFactory:org.apache.cxf.transport.servlet.ServletDestination getDestinationForPath(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.servlet.ServletController:void updateDests(javax.servlet.http.HttpServletRequest)",
            "org.apache.cxf.transport.servlet.ServletController:void invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.servlet.ServletController:org.apache.cxf.transport.servlet.ServletDestination checkRestfulRequest(javax.servlet.http.HttpServletRequest)",
            "org.apache.cxf.transport.servlet.ServletTransportFactory:org.apache.cxf.transport.Destination getDestination(org.apache.cxf.service.model.EndpointInfo)"
        ]
    },
    "org.apache.cxf.transport.servlet.AbstractCXFServlet:void init(javax.servlet.ServletConfig)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser$SpringJettyHTTPServerEngine:void finalizeConfig()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void setTLSServerParametersForPort(int,org.apache.cxf.configuration.jsse.TLSServerParameters)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine createJettyHTTPServerEngine(int,java.lang.String)"
        ]
    },
    "org.apache.cxf.transport.http_jetty.JettyHTTPTransportFactory:org.apache.cxf.transport.Destination getDestination(org.apache.cxf.service.model.EndpointInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:org.apache.cxf.transport.Destination getDestination(java.lang.String)",
            "org.apache.cxf.endpoint.ServerImpl:void initDestination(org.apache.cxf.transport.DestinationFactory)",
            "org.apache.cxf.binding.soap.SoapTransportFactory:org.apache.cxf.transport.Destination getDestination(org.apache.cxf.service.model.EndpointInfo)"
        ]
    },
    "org.apache.cxf.transport.http_jetty.JettyHTTPTransportFactory:org.apache.cxf.transport.http_jetty.JettyHTTPDestination createDestination(org.apache.cxf.service.model.EndpointInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.JettyHTTPTransportFactory:org.apache.cxf.transport.Destination getDestination(org.apache.cxf.service.model.EndpointInfo)"
        ]
    },
    "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine retrieveJettyHTTPServerEngine(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void retrieveEngine()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void setTLSServerParametersForPort(int,org.apache.cxf.configuration.jsse.TLSServerParameters)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine createJettyHTTPServerEngine(int,java.lang.String)"
        ]
    },
    "org.apache.cxf.transport.jms.JMSUtils:void addContentTypeToProtocolHeader(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.jms.JMSDestination$2:javax.jms.Message createMessage(javax.jms.Session)",
            "org.apache.cxf.transport.jms.JMSUtils:javax.jms.Message buildJMSMessageFromCXFMessage(org.apache.cxf.message.Message,java.lang.Object,java.lang.String,javax.jms.Session,javax.jms.Destination,java.lang.String)"
        ]
    },
    "org.apache.cxf.NSManager:java.lang.String getPrefixFromNS(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:java.lang.String getPrefix(java.lang.String)"
        ]
    },
    "org.apache.cxf.extension.RegistryImpl:java.lang.Object get(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.Intersector:boolean compatibleAssertions(org.apache.cxf.ws.policy.PolicyAssertion,org.apache.cxf.ws.policy.PolicyAssertion)",
            "org.apache.cxf.ws.policy.Intersector:org.apache.cxf.ws.policy.PolicyAssertion intersect(org.apache.cxf.ws.policy.PolicyAssertion,org.apache.cxf.ws.policy.PolicyAssertion)",
            "org.apache.cxf.ws.policy.EndpointPolicyImpl:void initializeInterceptors(org.apache.cxf.ws.policy.PolicyInterceptorProviderRegistry,java.util.Set,org.apache.cxf.ws.policy.PolicyAssertion,boolean)",
            "org.apache.cxf.ws.policy.PolicyInterceptorProviderRegistryImpl:java.util.List getInterceptors(java.util.Collection,boolean,boolean)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:boolean supportsAlternative(java.util.Collection,org.apache.cxf.ws.policy.Assertor)",
            "org.apache.cxf.ws.policy.EffectivePolicyImpl:void initialiseInterceptors(org.apache.cxf.ws.policy.PolicyInterceptorProviderRegistry,org.apache.cxf.ws.policy.PolicyEngineImpl,java.util.Set,org.apache.cxf.ws.policy.PolicyAssertion,boolean)",
            "org.apache.cxf.ws.policy.attachment.external.DomainExpressionBuilderRegistry:org.apache.cxf.ws.policy.attachment.external.DomainExpression build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.policy.AssertionBuilderRegistryImpl:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)"
        ]
    },
    "org.apache.cxf.ws.addressing.MAPAggregator:boolean validateIncomingMAPs(org.apache.cxf.ws.addressing.AddressingProperties,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.MAPAggregator:boolean mediate(org.apache.cxf.message.Message,boolean)"
        ]
    },
    "org.apache.cxf.ws.addressing.soap.MAPCodec:void propogateAction(org.apache.cxf.ws.addressing.AttributedURIType,org.apache.cxf.binding.soap.SoapMessage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void encode(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.addressing.AddressingPropertiesImpl)"
        ]
    },
    "org.apache.cxf.ws.addressing.soap.MAPCodec:void restoreExchange(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.addressing.AddressingProperties)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void mediate(org.apache.cxf.binding.soap.SoapMessage)"
        ]
    },
    "org.apache.cxf.ws.policy.PolicyRegistryImpl:org.apache.neethi.Policy lookup(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.WSPolicyFeature:org.apache.neethi.Policy resolveLocal(org.apache.neethi.PolicyReference,org.w3c.dom.Element,org.apache.cxf.Bus)",
            "org.apache.cxf.ws.policy.WSPolicyFeature:org.apache.neethi.Policy resolveExternal(org.apache.neethi.PolicyReference,java.lang.String,org.apache.cxf.Bus)",
            "org.apache.cxf.ws.policy.attachment.wsdl11.Wsdl11AttachmentPolicyProvider:org.apache.neethi.Policy resolveLocal(org.apache.neethi.PolicyReference,org.apache.cxf.service.model.DescriptionInfo)",
            "org.apache.cxf.ws.policy.attachment.external.ExternalAttachmentProvider:org.apache.neethi.Policy resolveLocal(org.apache.neethi.PolicyReference,org.w3c.dom.Document)",
            "org.apache.cxf.ws.policy.attachment.AbstractPolicyProvider:org.apache.neethi.Policy resolveExternal(org.apache.neethi.PolicyReference,java.lang.String)"
        ]
    },
    "org.apache.cxf.ws.security.trust.STSClient:java.lang.Object getProperty(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.trust.STSClient:java.security.cert.X509Certificate getCert(org.apache.ws.security.components.crypto.Crypto)",
            "org.apache.cxf.ws.security.trust.STSClient:javax.security.auth.callback.CallbackHandler createHandler()",
            "org.apache.cxf.ws.security.trust.STSClient:org.apache.ws.security.components.crypto.Crypto createCrypto(boolean)"
        ]
    },
    "org.apache.cxf.ws.security.wss4j.AbstractWSS4JInterceptor:java.lang.Object getOption(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor:java.lang.String getAction(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.binding.soap.SoapVersion)",
            "org.apache.cxf.ws.security.wss4j.AbstractWSS4JInterceptor:java.lang.Object getProperty(java.lang.Object,java.lang.String)"
        ]
    },
    "org.apache.cxf.ws.security.wss4j.AbstractWSS4JInterceptor:org.apache.ws.security.components.crypto.Crypto loadSignatureCrypto(org.apache.ws.security.handler.RequestData)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.security.wss4j.AbstractWSS4JInterceptor:org.apache.ws.security.components.crypto.Crypto loadDecryptionCrypto(org.apache.ws.security.handler.RequestData)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.security.wss4j.AbstractWSS4JInterceptor:org.apache.ws.security.components.crypto.Crypto loadEncryptionCrypto(org.apache.ws.security.handler.RequestData)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.rm.Source:org.apache.cxf.ws.rm.SourceSequence getSequence(org.apache.cxf.ws.rm.Identifier)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.RMInInterceptor:void processAcknowledgments(org.apache.cxf.ws.rm.Source,org.apache.cxf.ws.rm.RMProperties)",
            "org.apache.cxf.ws.rm.RetransmissionCallback:void onClose(org.apache.cxf.io.CachedOutputStream)"
        ]
    },
    "org.apache.cxf.ws.rm.Source:org.apache.cxf.ws.rm.SourceSequence getAssociatedSequence(org.apache.cxf.ws.rm.Identifier)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.Source:org.apache.cxf.ws.rm.SourceSequence getCurrent(org.apache.cxf.ws.rm.Identifier)",
            "org.apache.cxf.ws.rm.Source:org.apache.cxf.ws.rm.SourceSequence awaitCurrent(org.apache.cxf.ws.rm.Identifier)"
        ]
    },
    "org.apache.cxf.ws.rm.Destination:org.apache.cxf.ws.rm.DestinationSequence getSequence(org.apache.cxf.ws.rm.Identifier)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.Servant:void terminateSequence(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.SourceSequence:void checkLastMessage(org.apache.cxf.ws.rm.Identifier,java.math.BigInteger)",
            "org.apache.cxf.ws.rm.Destination:void acknowledge(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.Destination:void ackRequested(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.RMManager:org.apache.cxf.ws.rm.SourceSequence getSequence(org.apache.cxf.ws.rm.Identifier,org.apache.cxf.message.Message,org.apache.cxf.ws.addressing.AddressingProperties)"
        ]
    },
    "org.apache.cxf.ws.rm.RMManager:org.apache.cxf.ws.rm.RMEndpoint getReliableEndpoint(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.RMInInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.RMManager:org.apache.cxf.ws.rm.Destination getDestination(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.RMManager:org.apache.cxf.ws.rm.Source getSource(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl:void serverResend(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.soap.RMSoapInterceptor:void updateServiceModelInfo(org.apache.cxf.binding.soap.SoapMessage)"
        ]
    },
    "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl:java.util.List getSequenceCandidates(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl:org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl$ResendCandidate cacheUnacknowledged(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl:java.util.List getSequenceCandidates(org.apache.cxf.ws.rm.SourceSequence)"
        ]
    },
    "org.apache.cxf.phase.PhaseInterceptorChain:void add(org.apache.cxf.interceptor.Interceptor,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:void add(java.util.Collection,boolean)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void add(org.apache.cxf.interceptor.Interceptor)"
        ]
    },
    "org.apache.cxf.workqueue.WorkQueueManagerImpl:org.apache.cxf.workqueue.AutomaticWorkQueue getNamedWorkQueue(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponse()",
            "org.apache.cxf.ws.addressing.ContextUtils:java.util.concurrent.Executor getExecutor(org.apache.cxf.message.Message)",
            "org.apache.cxf.workqueue.WorkQueueManagerImpl:org.apache.cxf.workqueue.AutomaticWorkQueue getAutomaticWorkQueue()"
        ]
    },
    "org.apache.cxf.databinding.AbstractDataBinding:void updateSchemaLocation(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.AbstractDataBinding:org.apache.ws.commons.schema.XmlSchema addSchemaDocument(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.common.xmlschema.SchemaCollection,org.w3c.dom.Document,java.lang.String)"
        ]
    },
    "org.apache.cxf.databinding.source.mime.MimeSerializer:void serialize(org.apache.ws.commons.schema.XmlSchemaObject,java.lang.Class,org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.wsdl.AbstractWSDLPlugin:java.lang.Object getOption(java.util.Map,java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.wsdl.AbstractWSDLPlugin:java.lang.Object getOption(java.util.Map,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.xml.wsdl11.XmlIoPlugin:javax.wsdl.extensions.ExtensibilityElement createExtension(java.util.Map)"
        ]
    },
    "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:int getIndentLevel(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void <init>(javax.xml.stream.XMLStreamWriter,java.lang.Class)"
        ]
    },
    "org.apache.cxf.wsdl.EndpointReferenceUtils:java.lang.String getWSDLLocation(org.apache.cxf.ws.addressing.EndpointReferenceType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl.EndpointReferenceUtils:java.lang.String findNamespaceHack(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.wsdl.Definition getWSDLDefinition(org.apache.cxf.wsdl.WSDLManager,org.apache.cxf.ws.addressing.EndpointReferenceType)"
        ]
    },
    "org.apache.cxf.wsdl.EndpointReferenceUtils:java.lang.String getEndpointReferenceId(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.service.model.BindingOperationInfo:org.apache.cxf.service.model.BindingFaultInfo getFault(javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.AbstractBindingFactory:org.apache.cxf.service.model.BindingInfo initializeBindingInfo(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding,org.apache.cxf.service.model.BindingInfo)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.BindingInfo buildBinding(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding)"
        ]
    },
    "org.apache.cxf.service.model.AbstractPropertiesHolder:java.lang.Object getProperty(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.JAXBDataBinding:void initialize(org.apache.cxf.service.Service)",
            "org.apache.cxf.jaxb.JAXBContextInitializer:void begin(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.jaxb.JAXBDataBase:java.lang.'annotation'.Annotation[] getJAXBAnnotation(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.jaxb.JAXBEncoderDecoder:java.lang.Object unmarshall(javax.xml.bind.Unmarshaller,java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,boolean)",
            "org.apache.cxf.jaxb.JAXBEncoderDecoder:java.util.List createList(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.jaxb.JAXBEncoderDecoder:boolean isList(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.jaxb.JAXBSchemaInitializer:void begin(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.jaxb.JAXBSchemaInitializer:void checkForExistence(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.jaxb.JAXBSchemaInitializer:void end(org.apache.cxf.service.model.FaultInfo)",
            "org.apache.cxf.jaxb.io.DataWriterImpl:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,java.lang.Object)",
            "org.apache.cxf.jaxb.io.DataReaderImpl:java.lang.Object read(org.apache.cxf.service.model.MessagePartInfo,java.lang.Object)",
            "org.apache.cxf.message.MessageImpl:java.lang.Object getContextualProperty(java.lang.String)",
            "org.apache.cxf.interceptor.FaultOutInterceptor:org.apache.cxf.service.model.FaultInfo getFaultForClass(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Class)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void writeResponse(java.lang.String,java.lang.String,org.apache.cxf.service.model.EndpointInfo,java.io.OutputStream)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:org.apache.cxf.ws.policy.EffectivePolicy getEffectiveClientRequestPolicy(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.transport.Conduit)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:org.apache.cxf.ws.policy.EffectivePolicy getEffectiveServerResponsePolicy(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.transport.Destination)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:org.apache.cxf.ws.policy.EffectivePolicy getEffectiveServerFaultPolicy(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.service.model.BindingFaultInfo,org.apache.cxf.transport.Destination)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:org.apache.cxf.ws.policy.EndpointPolicy getEndpointPolicy(org.apache.cxf.service.model.EndpointInfo,boolean,org.apache.cxf.ws.policy.Assertor)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:org.apache.cxf.ws.policy.EffectivePolicy getEffectiveServerRequestPolicy(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:org.apache.cxf.ws.policy.EffectivePolicy getEffectiveClientResponsePolicy(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:org.apache.cxf.ws.policy.EffectivePolicy getEffectiveClientFaultPolicy(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.service.model.BindingFaultInfo)",
            "org.apache.cxf.ws.policy.attachment.wsdl11.Wsdl11AttachmentPolicyProvider:org.apache.cxf.service.model.Extensible getMessageTypeInfo(javax.xml.namespace.QName,org.apache.cxf.service.model.DescriptionInfo)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor$STSInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor$STSInvoker:void doIssue(org.w3c.dom.Element,org.apache.cxf.message.Exchange,org.apache.cxf.staxutils.W3CDOMStreamWriter,java.lang.String,java.lang.String)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor$STSInvoker:org.apache.cxf.ws.security.tokenstore.SecurityToken findCancelToken(org.apache.cxf.message.Exchange,org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.trust.STSClient:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor:javax.security.auth.callback.CallbackHandler getCallback(org.apache.ws.security.handler.RequestData,int)",
            "org.apache.cxf.service.model.UnwrappedOperationInfo:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:java.lang.Object getProperty(java.lang.String,java.lang.Class)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromClass()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeWSDLOperation(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean initializeParameter(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int,java.lang.Class,java.lang.reflect.Type)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeWrappedSchema(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createBareMessage(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.OperationInfo,boolean)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createWrappedMessageSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.AbstractMessageContainer,org.apache.cxf.service.model.AbstractMessageContainer,org.apache.ws.commons.schema.XmlSchema,javax.xml.namespace.QName)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.'annotation'.Annotation[] getMethodParameterAnnotations(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.'annotation'.Annotation[] getMethodAnnotations(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createMessageParts(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createInputWrappedMessageParts(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,org.apache.cxf.service.model.MessageInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createOutputWrappedMessageParts(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,org.apache.cxf.service.model.MessageInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeParameter(org.apache.cxf.service.model.MessagePartInfo,java.lang.Class,java.lang.reflect.Type)",
            "org.apache.cxf.service.factory.DefaultServiceConfiguration:java.lang.Boolean isWrapperPartNillable(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.factory.DefaultServiceConfiguration:java.lang.Long getWrapperPartMaxOccurs(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.factory.DefaultServiceConfiguration:java.lang.Long getWrapperPartMinOccurs(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:org.apache.cxf.binding.Binding createBinding(org.apache.cxf.service.model.BindingInfo)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:void addMessageFromBinding(javax.wsdl.extensions.ExtensibilityElement,org.apache.cxf.service.model.BindingOperationInfo,boolean)",
            "org.apache.cxf.binding.soap.HeaderUtil:java.util.Set getHeaderParts(org.apache.cxf.service.model.BindingMessageInfo)",
            "org.apache.cxf.binding.soap.SoapBindingConfiguration:boolean isHeader(org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.binding.soap.SoapBindingConfiguration:java.lang.String getSoapAction(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.jaxws.JaxWsProxyFactoryBean:boolean needWrapperClassInterceptor(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean:void initializeWSDLOperation(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean:org.apache.cxf.service.model.FaultInfo getFaultInfo(org.apache.cxf.service.model.OperationInfo,java.lang.Class)",
            "org.apache.cxf.jaxws.support.JaxWsServiceConfiguration:java.lang.Boolean isWrapperPartQualified(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.jaxws.WrapperClassGenerator:java.lang.'annotation'.Annotation[] getMethodParameterAnnotations(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.jaxws.WrapperClassGenerator:java.util.Set generate()",
            "org.apache.cxf.jaxws.WrapperClassGenerator:void generateMessagePart(org.objectweb.asm.ClassWriter,org.apache.cxf.service.model.MessagePartInfo,java.lang.reflect.Method,java.lang.String)",
            "org.apache.cxf.jaxws.interceptors.WrapperClassOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.interceptors.WrapperClassInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.interceptors.WrapperClassInInterceptor:org.apache.cxf.databinding.WrapperHelper createWrapperHelper(org.apache.cxf.databinding.WrapperCapableDatabinding,org.apache.cxf.service.model.MessageInfo,org.apache.cxf.service.model.MessageInfo,java.lang.Class)",
            "org.apache.cxf.jaxws.interceptors.SwAOutInterceptor:void processAttachments(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.binding.soap.model.SoapBodyInfo)",
            "org.apache.cxf.jaxws.binding.soap.SOAPBindingImpl:boolean isMTOMEnabled()",
            "org.apache.cxf.xmlbeans.DataWriterImpl:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.xmlbeans.DataReaderImpl:java.lang.Object read(org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamReader)"
        ]
    },
    "org.apache.cxf.service.model.AbstractPropertiesHolder:java.lang.Object getExtensionAttribute(javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.ContextUtils:java.lang.String getAction(org.apache.cxf.service.model.Extensible)"
        ]
    },
    "org.apache.cxf.service.model.InterfaceInfo:org.apache.cxf.service.model.OperationInfo getOperation(javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.Proxy:void acknowledge(org.apache.cxf.ws.rm.DestinationSequence)",
            "org.apache.cxf.ws.rm.Proxy:void terminate(org.apache.cxf.ws.rm.SourceSequence)",
            "org.apache.cxf.ws.rm.Proxy:void createSequenceResponse(org.apache.cxf.ws.rm.CreateSequenceResponseType)",
            "org.apache.cxf.ws.rm.Proxy:org.apache.cxf.ws.rm.CreateSequenceResponseType createSequence(org.apache.cxf.ws.addressing.v200408.EndpointReferenceType,org.apache.cxf.ws.addressing.RelatesToType,boolean)",
            "org.apache.cxf.ws.rm.Proxy:void lastMessage(org.apache.cxf.ws.rm.SourceSequence)",
            "org.apache.cxf.ws.rm.Proxy:void ackRequested(org.apache.cxf.ws.rm.SourceSequence)",
            "org.apache.cxf.service.factory.DefaultServiceConfiguration:javax.xml.namespace.QName getOperationName(org.apache.cxf.service.model.InterfaceInfo,java.lang.reflect.Method)",
            "org.apache.cxf.binding.xml.XMLFormatValidator:boolean checkXMLFormat(org.apache.cxf.service.model.BindingInfo)",
            "org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean:void initializeWSDLOperationsForProvider()"
        ]
    },
    "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.MessageInfo getMessage(javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.soap.SoapBindingFactory:void addMessageFromBinding(javax.wsdl.extensions.ExtensibilityElement,org.apache.cxf.service.model.BindingOperationInfo,boolean)"
        ]
    },
    "org.apache.cxf.service.model.BindingInfo:org.apache.cxf.service.model.BindingOperationInfo getOperation(javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(javax.xml.namespace.QName,java.lang.Object[])",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invokeWrapped(javax.xml.namespace.QName,java.lang.Object[])",
            "org.apache.cxf.endpoint.ClientImpl:void invoke(org.apache.cxf.endpoint.ClientCallback,javax.xml.namespace.QName,java.lang.Object[])",
            "org.apache.cxf.endpoint.ClientImpl:void invokeWrapped(org.apache.cxf.endpoint.ClientCallback,javax.xml.namespace.QName,java.lang.Object[])",
            "org.apache.cxf.ws.rm.soap.RMSoapInterceptor:void updateServiceModelInfo(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperation(org.apache.cxf.message.Exchange,javax.xml.namespace.QName)",
            "org.apache.cxf.binding.AbstractBindingFactory:org.apache.cxf.service.model.BindingInfo initializeBindingInfo(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding,org.apache.cxf.service.model.BindingInfo)",
            "org.apache.cxf.binding.soap.model.SoapBindingInfo:java.lang.String getStyle(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.binding.soap.model.SoapBindingInfo:java.lang.String getSoapAction(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean:void initializeWSDLOperationsForProvider()"
        ]
    },
    "org.apache.cxf.service.model.OperationInfo:org.apache.cxf.service.model.FaultInfo getFault(javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.model.UnwrappedOperationInfo:org.apache.cxf.service.model.FaultInfo getFault(javax.xml.namespace.QName)"
        ]
    },
    "org.apache.cxf.binding.BindingFactoryManagerImpl:org.apache.cxf.binding.BindingFactory getBindingFactory(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.EndpointImpl:void createBinding(org.apache.cxf.service.model.BindingInfo)",
            "org.apache.cxf.ws.security.trust.STSUtils:org.apache.cxf.endpoint.Endpoint createSTSEndpoint(org.apache.cxf.Bus,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.neethi.Policy,javax.xml.namespace.QName)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createEndpoints()",
            "org.apache.cxf.wsdl11.WSDLServiceUtils:org.apache.cxf.binding.BindingFactory getBindingFactory(javax.wsdl.Binding,org.apache.cxf.Bus,java.lang.StringBuffer)",
            "org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory:org.apache.cxf.endpoint.Endpoint createEndpoint()",
            "org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory:org.apache.cxf.service.model.BindingInfo createBindingInfo()",
            "org.apache.cxf.jaxws.ServiceImpl:org.apache.cxf.service.model.EndpointInfo createEndpointInfo(org.apache.cxf.service.factory.AbstractServiceFactoryBean,javax.xml.namespace.QName,org.apache.cxf.jaxws.handler.PortInfoImpl)"
        ]
    },
    "org.apache.cxf.binding.soap.SoapVersionFactory:org.apache.cxf.binding.soap.SoapVersion getSoapVersion(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.soap.interceptor.ReadHeadersInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)"
        ]
    },
    "org.apache.cxf.clustering.FailoverTargetSelector:void overrideAddressProperty(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.clustering.FailoverTargetSelector:void complete(org.apache.cxf.message.Exchange)"
        ]
    },
    "org.apache.cxf.tools.common.ToolContext:java.lang.Object get(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.tools.common.ClassUtils:void compile(org.apache.cxf.tools.common.ToolContext)",
            "org.apache.cxf.tools.common.ToolContext:java.lang.Object get(java.lang.String,java.lang.Object)",
            "org.apache.cxf.tools.common.ToolContext:java.lang.Object get(java.lang.String,java.lang.Class)",
            "org.apache.cxf.tools.common.ToolContext:java.lang.Object get(java.lang.Class)",
            "org.apache.cxf.tools.common.ToolContext:boolean optionSet(java.lang.String)",
            "org.apache.cxf.tools.common.ToolContext:boolean isVerbose()",
            "org.apache.cxf.tools.common.ToolContext:boolean validateWSDL()",
            "org.apache.cxf.tools.common.ToolContext:javax.xml.namespace.QName getQName(java.lang.String,java.lang.String)",
            "org.apache.cxf.tools.common.toolspec.AbstractToolContainer:java.lang.String getCatalogURL()",
            "org.apache.cxf.xmlbeans.tools.XMLBeansToolingDataBinding:void initialize(org.apache.cxf.tools.common.ToolContext)",
            "org.apache.cxf.xmlbeans.tools.XMLBeansToolingDataBinding:void generate(org.apache.cxf.tools.common.ToolContext)"
        ]
    },
    "org.apache.cxf.tools.common.ToolContext:java.lang.String mapNamespaceToPackageName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.tools.common.ToolContext:java.lang.String mapPackageName(java.lang.String)"
        ]
    },
    "org.apache.cxf.tools.common.ToolContext:java.lang.String getExcludePackageName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.tools.common.model.JavaMethod:boolean isEquiv(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.tools.common.model.JavaMethod:void addParameter(org.apache.cxf.tools.common.model.JavaParameter)"
        ]
    },
    "org.apache.cxf.tools.common.model.JavaParameter:org.apache.cxf.tools.common.model.JAnnotation getAnnotation(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.tools.util.BuiltInTypesJavaMappingUtil:java.lang.String getJType(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.tools.util.SOAPBindingUtil:java.lang.String getBindingAnnotation(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.tools.util.PropertyUtil:java.lang.String getProperty(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.tools.util.ClassCollector:java.lang.String getTypesFullClassName(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.wsdl11.SchemaUtil:boolean isSchemaParsed(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.SchemaUtil:void addSchema(java.lang.String,javax.wsdl.extensions.schema.Schema)"
        ]
    },
    "org.apache.cxf.bus.extension.ExtensionManagerBus:java.lang.String getBusId(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void <init>(java.util.Map,java.util.Map)"
        ]
    },
    "org.apache.cxf.bus.CXFBusImpl:java.lang.Object getExtension(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.management.interceptor.AbstractMessageResponseTimeInterceptor:void increaseCounter(org.apache.cxf.message.Exchange,org.apache.cxf.management.counters.MessageHandlingTimeRecorder)",
            "org.apache.cxf.management.jmx.InstrumentationManagerImpl:void register()",
            "org.apache.cxf.management.counters.CounterRepository:org.apache.cxf.management.counters.Counter createCounter(javax.management.ObjectName,org.apache.cxf.management.counters.MessageHandlingTimeRecorder)",
            "org.apache.cxf.interceptor.OutFaultChainInitiatorObserver:java.util.SortedSet getPhases()",
            "org.apache.cxf.interceptor.ClientOutFaultObserver:java.util.SortedSet getPhases()",
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:org.apache.cxf.interceptor.InterceptorChain getOutInterceptorChain(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:org.apache.cxf.phase.PhaseInterceptorChain getChain(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.interceptor.OneWayProcessorInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.InFaultChainInitiatorObserver:java.util.SortedSet getPhases()",
            "org.apache.cxf.transport.TransportURIResolver:org.xml.sax.InputSource resolve(java.lang.String,java.lang.String)",
            "org.apache.cxf.transport.MultipleEndpointObserver:org.apache.cxf.phase.PhaseInterceptorChain createChain()",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void writeResponse(java.lang.String,java.lang.String,org.apache.cxf.service.model.EndpointInfo,java.io.OutputStream)",
            "org.apache.cxf.transport.http.AbstractHTTPTransportFactory:void registerWithBindingManager()",
            "org.apache.cxf.transport.http.AbstractHTTPTransportFactory:void configure(java.lang.Object,java.lang.String,java.lang.String)",
            "org.apache.cxf.transport.http.HTTPConduit:void initializeConfig()",
            "org.apache.cxf.transport.http.HTTPConduit:org.apache.cxf.transport.Destination getDestination(java.lang.String)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void initConfig()",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponse()",
            "org.apache.cxf.transport.ChainInitiationObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.servlet.ServletController:void invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.servlet.CXFNonSpringServlet:void loadBusNoConfig(javax.servlet.ServletConfig)",
            "org.apache.cxf.transport.servlet.ServletTransportFactory:void register()",
            "org.apache.cxf.transport.servlet.CXFServlet:void updateContext(javax.servlet.ServletConfig,org.springframework.context.ApplicationContext)",
            "org.apache.cxf.transport.servlet.AbstractCXFServlet:void registerTransport(org.apache.cxf.transport.DestinationFactory,java.lang.String)",
            "org.apache.cxf.transport.servlet.AbstractCXFServlet:void replaceDestinationFactory()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void doService(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine:void retrieveEngineFactory()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPTransportFactory:void finalizeConfig()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPTransportFactory:org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory getJettyHTTPServerEngineFactory()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void registerWithBus()",
            "org.apache.cxf.transport.jms.JMSOldConfigHolder:org.apache.cxf.transport.jms.JMSConfiguration createJMSConfigurationFromEndpointInfo(org.apache.cxf.Bus,org.apache.cxf.service.model.EndpointInfo,boolean)",
            "org.apache.cxf.transport.jms.JMSConduit:void addBusListener(org.apache.cxf.Bus)",
            "org.apache.cxf.endpoint.AbstractConduitSelector:org.apache.cxf.transport.Conduit getSelectedConduit(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.EndpointImpl:void createBinding(org.apache.cxf.service.model.BindingInfo)",
            "org.apache.cxf.endpoint.ManagedEndpoint:void start()",
            "org.apache.cxf.endpoint.ManagedEndpoint:void stopServer(org.apache.cxf.endpoint.Server)",
            "org.apache.cxf.endpoint.ClientImpl:void destroy()",
            "org.apache.cxf.endpoint.ClientImpl:void notifyLifecycleManager()",
            "org.apache.cxf.endpoint.ClientImpl:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ClientImpl:org.apache.cxf.phase.PhaseInterceptorChain setupInterceptorChain(org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.endpoint.ServerRegistryImpl:void register()",
            "org.apache.cxf.endpoint.ServerImpl:void initDestination(org.apache.cxf.transport.DestinationFactory)",
            "org.apache.cxf.endpoint.ServerImpl:void start()",
            "org.apache.cxf.ws.addressing.ContextUtils:java.util.concurrent.Executor getExecutor(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.addressing.policy.AddressingAssertionBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.addressing.policy.AddressingAssertionBuilder:org.apache.cxf.ws.policy.PolicyAssertion buildCompatible(org.apache.cxf.ws.policy.PolicyAssertion,org.apache.cxf.ws.policy.PolicyAssertion)",
            "org.apache.cxf.ws.policy.EndpointPolicyImpl:void initializeInterceptors()",
            "org.apache.cxf.ws.policy.ServerPolicyOutFaultInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.policy.WSPolicyFeature:void initialize(org.apache.cxf.Bus)",
            "org.apache.cxf.ws.policy.WSPolicyFeature:void initialize(org.apache.cxf.endpoint.Client,org.apache.cxf.Bus)",
            "org.apache.cxf.ws.policy.WSPolicyFeature:void initialize(org.apache.cxf.endpoint.Server,org.apache.cxf.Bus)",
            "org.apache.cxf.ws.policy.WSPolicyFeature:org.apache.neethi.Policy initializeEndpointPolicy(org.apache.cxf.endpoint.Endpoint,org.apache.cxf.Bus)",
            "org.apache.cxf.ws.policy.WSPolicyFeature:org.apache.neethi.Policy resolveLocal(org.apache.neethi.PolicyReference,org.w3c.dom.Element,org.apache.cxf.Bus)",
            "org.apache.cxf.ws.policy.WSPolicyFeature:org.apache.neethi.Policy resolveExternal(org.apache.neethi.PolicyReference,java.lang.String,org.apache.cxf.Bus)",
            "org.apache.cxf.ws.policy.PolicyInInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.policy.PolicyOutInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.policy.WSPolicyFeature$1:org.apache.neethi.Policy resolveReference(java.lang.String)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:void addBusInterceptors()",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:boolean supportsAlternative(java.util.Collection,org.apache.cxf.ws.policy.Assertor)",
            "org.apache.cxf.ws.policy.PolicyVerificationInInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.policy.EffectivePolicyImpl:void initialiseInterceptors(org.apache.cxf.ws.policy.PolicyEngineImpl,boolean)",
            "org.apache.cxf.ws.policy.PolicyVerificationInFaultInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.policy.attachment.external.ExternalAttachmentProvider:java.util.Collection readDomainExpressions(org.w3c.dom.Element)",
            "org.apache.cxf.ws.policy.attachment.AbstractPolicyProvider:void init()",
            "org.apache.cxf.ws.policy.ClientPolicyInFaultInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.policy.WSSecurityPolicyLoader:void registerBuilders()",
            "org.apache.cxf.ws.security.policy.WSSecurityPolicyLoader:void registerProviders()",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor:void recalcEffectivePolicy(org.apache.cxf.binding.soap.SoapMessage,java.lang.String,org.apache.neethi.Policy)",
            "org.apache.cxf.ws.security.trust.STSClient:void setPolicy(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.trust.STSClient:void createClient()",
            "org.apache.cxf.ws.security.trust.STSClient:org.apache.cxf.service.model.BindingOperationInfo findOperation(java.lang.String)",
            "org.apache.cxf.ws.security.trust.STSClient:org.apache.ws.security.components.crypto.Crypto createCrypto(boolean)",
            "org.apache.cxf.ws.security.trust.STSUtils:org.apache.cxf.endpoint.Endpoint createSTSEndpoint(org.apache.cxf.Bus,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.neethi.Policy,javax.xml.namespace.QName)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:org.apache.ws.security.components.crypto.Crypto getCrypto(org.apache.cxf.ws.security.policy.model.TokenWrapper,java.lang.String,java.lang.String)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:java.util.Properties getProps(java.lang.Object,org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.rm.AbstractRMInterceptor:org.apache.cxf.ws.rm.RMManager getManager()",
            "org.apache.cxf.ws.rm.feature.RMFeature:void initializeProvider(org.apache.cxf.interceptor.InterceptorProvider,org.apache.cxf.Bus)",
            "org.apache.cxf.ws.rm.RMManager:void registerListeners()",
            "org.apache.cxf.ws.rm.RMEndpoint:void setPolicies()",
            "org.apache.cxf.workqueue.WorkQueueManagerImpl:void register()",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void register()",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:java.lang.String findNamespaceHack(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:org.apache.cxf.ws.addressing.EndpointReferenceType resolve(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:org.apache.cxf.ws.addressing.EndpointReferenceType renew(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:org.apache.cxf.ws.addressing.EndpointReferenceType mint(javax.xml.namespace.QName,org.apache.cxf.Bus)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:org.apache.cxf.ws.addressing.EndpointReferenceType mint(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:org.apache.cxf.transport.MultiplexDestination getMatchingMultiplexDestination(javax.xml.namespace.QName,java.lang.String,org.apache.cxf.Bus)",
            "org.apache.cxf.service.invoker.PerRequestFactory:java.lang.Object create(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createEndpoints()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void validateServiceModel()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getWsdlURL()",
            "org.apache.cxf.binding.AbstractBindingFactory:void registerWithBindingManager()",
            "org.apache.cxf.binding.soap.SoapBindingFactory:void createSoapBinding(org.apache.cxf.binding.soap.model.SoapBindingInfo)",
            "org.apache.cxf.binding.soap.interceptor.ReadHeadersInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor:void writeSoapEnvelopeStart(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.SoapTransportFactory:org.apache.cxf.transport.Destination getDestination(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.binding.soap.SoapTransportFactory:org.apache.cxf.transport.Conduit getConduit(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.binding.soap.SoapTransportFactory:void registerWithBindingManager()",
            "org.apache.cxf.binding.soap.saaj.SAAJInInterceptor:void replaceHeaders(javax.xml.soap.SOAPMessage,org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.tools.common.toolspec.AbstractToolContainer:org.apache.cxf.Bus getBus()",
            "org.apache.cxf.catalog.OASISCatalogManager:org.apache.cxf.catalog.OASISCatalogManager getCatalogManager(org.apache.cxf.Bus)",
            "org.apache.cxf.wsdl11.ResourceManagerWSDLLocator:org.xml.sax.InputSource getInputSource()",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void parseWSDL(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLServiceUtils:org.apache.cxf.binding.BindingFactory getBindingFactory(javax.wsdl.Binding,org.apache.cxf.Bus,java.lang.StringBuffer)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:javax.wsdl.Definition newDefinition(javax.xml.namespace.QName,java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void getSchemas(javax.wsdl.Definition,org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.EndpointInfo buildEndpoint(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.BindingInfo,javax.wsdl.Port)",
            "org.apache.cxf.wsdl11.WSDLServiceFactory:void <init>(org.apache.cxf.Bus,java.net.URL)",
            "org.apache.cxf.wsdl11.WSDLServiceFactory:void <init>(org.apache.cxf.Bus,java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLServiceFactory:void <init>(org.apache.cxf.Bus,java.lang.String,javax.xml.namespace.QName)",
            "org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor:void updateBusReferencesInContext(org.apache.cxf.Bus,org.springframework.context.ApplicationContext)",
            "org.apache.cxf.bus.spring.SpringBusFactory:void registerApplicationContextLifeCycleListener(org.apache.cxf.Bus,org.apache.cxf.bus.spring.BusApplicationContext)",
            "org.apache.cxf.bus.resource.ResourceManagerImpl:void register()",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void <init>(java.util.Map,java.util.Map)",
            "org.apache.cxf.bus.CXFBusFactory:void initializeBus(org.apache.cxf.Bus)",
            "org.apache.cxf.bus.CXFBusImpl:void shutdown(boolean)",
            "org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory:org.apache.cxf.endpoint.Endpoint createEndpoint()",
            "org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory:void modifyTransportIdPerAddress(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory:org.apache.cxf.service.model.EndpointInfo createEndpointInfo()",
            "org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory:org.apache.cxf.service.model.BindingInfo createBindingInfo()",
            "org.apache.cxf.frontend.ServerFactoryBean:void initializeServiceFactory()",
            "org.apache.cxf.aegis.databinding.XMLStreamDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.aegis.databinding.XMLStreamDataReader:java.lang.Object read(org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.jaxws.JaxWsProxyFactoryBean:void buildHandlerChain(org.apache.cxf.jaxws.JaxWsClientProxy)",
            "org.apache.cxf.jaxws.handler.HandlerResolverImpl:void configHandler(javax.xml.ws.handler.Handler)",
            "org.apache.cxf.jaxws.handler.HandlerChainBuilder:void initializeViaInjection(javax.xml.ws.handler.Handler,java.util.Map)",
            "org.apache.cxf.jaxws.support.JaxWsEndpointImpl:void buildWsdlExtensibilities(org.apache.cxf.service.model.BindingInfo)",
            "org.apache.cxf.jaxws.ServiceImpl:void <init>(org.apache.cxf.Bus,java.net.URL,javax.xml.namespace.QName,java.lang.Class)",
            "org.apache.cxf.jaxws.ServiceImpl:void initializePorts()",
            "org.apache.cxf.jaxws.ServiceImpl:org.apache.cxf.service.model.EndpointInfo createEndpointInfo(org.apache.cxf.service.factory.AbstractServiceFactoryBean,javax.xml.namespace.QName,org.apache.cxf.jaxws.handler.PortInfoImpl)",
            "org.apache.cxf.jaxws.ServiceImpl:void configureObject(java.lang.String,java.lang.Object)",
            "org.apache.cxf.jaxws.EndpointImpl:void configureObject(java.lang.Object)",
            "org.apache.cxf.jaxws.spi.ProviderImpl:javax.xml.ws.wsaddressing.W3CEndpointReference createW3CEndpointReference(java.lang.String,javax.xml.namespace.QName,javax.xml.namespace.QName,java.util.List,java.lang.String,java.util.List)",
            "org.apache.cxf.jaxws.JaxWsServerFactoryBean:void injectResources(java.lang.Object)",
            "org.apache.cxf.jaxws.context.WebServiceContextResourceResolver:void register()"
        ]
    },
    "org.apache.cxf.attachment.AttachmentImpl:java.lang.String getHeader(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.interceptors.MessageModeInInterceptor$MultiPartDataSource:void nextCurrent()"
        ]
    },
    "org.apache.cxf.frontend.ClientFactoryBean:void applyExtraClass()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.frontend.ClientFactoryBean:org.apache.cxf.endpoint.Client create()"
        ]
    },
    "org.apache.cxf.frontend.ClientFactoryBean:void applyProperties(org.apache.cxf.endpoint.Endpoint)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.frontend.ClientFactoryBean:org.apache.cxf.endpoint.Client create()"
        ]
    },
    "org.apache.cxf.frontend.SimpleMethodDispatcher:java.lang.reflect.Method getMethod(org.apache.cxf.service.model.BindingOperationInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.lang.reflect.Method getMethod(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.service.invoker.AbstractInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object)"
        ]
    },
    "org.apache.cxf.frontend.SimpleMethodDispatcher:java.lang.reflect.Method getPrimaryMethod(org.apache.cxf.service.model.OperationInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.databinding.AegisDatabinding:java.lang.reflect.Method getMethod(org.apache.cxf.service.Service,org.apache.cxf.service.model.OperationInfo)"
        ]
    },
    "org.apache.cxf.frontend.ServerFactoryBean:void applyExtraClass()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.frontend.ServerFactoryBean:org.apache.cxf.endpoint.Server create()"
        ]
    },
    "org.apache.cxf.aegis.Context:java.lang.Object getProperty(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.encoded.MarshalRegistry:org.apache.cxf.aegis.type.encoded.MarshalRegistry get(org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.SoapRefRegistry:org.apache.cxf.aegis.type.encoded.SoapRefRegistry get(org.apache.cxf.aegis.Context)"
        ]
    },
    "org.apache.cxf.aegis.util.jdom.StaxBuilder:int resolveAttrType(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.util.jdom.StaxBuilder:void buildTree(org.jdom.JDOMFactory,javax.xml.stream.XMLStreamReader,org.jdom.Document)"
        ]
    },
    "org.apache.cxf.aegis.util.stax.JDOMStreamWriter:java.lang.Object getProperty(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:java.lang.Object getProperty(java.lang.String)"
        ]
    },
    "org.apache.cxf.aegis.util.stax.JDOMStreamReader:java.lang.String getDeclaredURI(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.util.stax.JDOMStreamReader:boolean shouldDeclare(org.jdom.Namespace)"
        ]
    },
    "org.apache.cxf.aegis.databinding.XMLStreamDataWriter:java.lang.Object getProperty(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.aegis.databinding.ElementDataWriter:java.lang.Object getProperty(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.aegis.databinding.AegisDatabinding:org.apache.cxf.aegis.type.Type getType(org.apache.cxf.service.model.MessagePartInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.databinding.ElementDataReader:java.lang.Object read(org.apache.cxf.service.model.MessagePartInfo,org.w3c.dom.Element)",
            "org.apache.cxf.aegis.databinding.XMLStreamDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.aegis.databinding.ElementDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,org.w3c.dom.Element)",
            "org.apache.cxf.aegis.databinding.XMLStreamDataReader:java.lang.Object read(org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamReader)"
        ]
    },
    "org.apache.cxf.aegis.type.basic.XMLBeanTypeInfo:org.apache.cxf.aegis.type.basic.BeanTypePropertyInfo getPropertyInfo(javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.basic.XMLBeanTypeInfo:boolean isNillable(javax.xml.namespace.QName)",
            "org.apache.cxf.aegis.type.basic.XMLBeanTypeInfo:int getMinOccurs(javax.xml.namespace.QName)",
            "org.apache.cxf.aegis.type.basic.XMLBeanTypeInfo:int getMaxOccurs(javax.xml.namespace.QName)",
            "org.apache.cxf.aegis.type.basic.XMLBeanTypeInfo:org.apache.cxf.aegis.type.basic.BeanTypePropertyInfo ensurePropertyInfo(javax.xml.namespace.QName)"
        ]
    },
    "org.apache.cxf.aegis.type.basic.InterfaceInvocationHandler:java.lang.Object readProperty(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.basic.InterfaceInvocationHandler:java.lang.Object doGetter(java.lang.reflect.Method,java.lang.Object[])"
        ]
    },
    "org.apache.cxf.aegis.type.basic.BeanTypeInfo:org.apache.cxf.aegis.type.Type getType(javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.basic.BeanType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.BeanType:org.apache.cxf.aegis.type.Type getElementType(javax.xml.namespace.QName,org.apache.cxf.aegis.type.basic.BeanTypeInfo,org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.BeanType:org.apache.cxf.aegis.type.Type getType(org.apache.cxf.aegis.type.basic.BeanTypeInfo,javax.xml.namespace.QName)",
            "org.apache.cxf.aegis.type.basic.BeanType:java.util.Set getDependencies()",
            "org.apache.cxf.aegis.type.basic.BeanType:org.apache.cxf.aegis.type.basic.BeanTypeInfo getBeanTypeInfoWithProperty(javax.xml.namespace.QName)",
            "org.apache.cxf.aegis.type.basic.BeanTypeInfo:boolean isNillable(javax.xml.namespace.QName)",
            "org.apache.cxf.aegis.type.encoded.StructType:javax.xml.namespace.QName qualifyName(javax.xml.namespace.QName)"
        ]
    },
    "org.apache.cxf.aegis.type.basic.BeanTypeInfo:javax.xml.namespace.QName getMappedTypeName(javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.basic.BeanTypeInfo:org.apache.cxf.aegis.type.Type getType(javax.xml.namespace.QName)"
        ]
    },
    "org.apache.cxf.aegis.type.basic.BeanTypeInfo:java.lang.String getPropertyNameFromMappedName(javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.basic.BeanTypeInfo:java.beans.PropertyDescriptor getPropertyDescriptorFromMappedName(javax.xml.namespace.QName)"
        ]
    },
    "org.apache.cxf.aegis.type.encoded.MarshalRegistry:java.lang.String getInstanceId(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.encoded.SoapRefType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.StructType:void writeElement(javax.xml.namespace.QName,java.lang.Object,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.SoapArrayType:void writeValue(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.encoded.TrailingBlocks:java.util.List writeBlocks(org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)"
        ]
    },
    "org.apache.cxf.aegis.type.DefaultTypeMapping:org.apache.cxf.aegis.type.Type getType(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.AegisContext:org.apache.cxf.aegis.type.Type getRootType(java.lang.Class)",
            "org.apache.cxf.aegis.AegisContext:void processRootTypes()",
            "org.apache.cxf.aegis.type.AbstractTypeCreator:org.apache.cxf.aegis.type.Type createTypeForClass(org.apache.cxf.aegis.type.AbstractTypeCreator$TypeClassInfo)",
            "org.apache.cxf.aegis.type.basic.ObjectType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.ObjectType:org.apache.cxf.aegis.type.Type determineType(org.apache.cxf.aegis.Context,java.lang.Class)",
            "org.apache.cxf.aegis.type.basic.BeanType:org.apache.cxf.aegis.type.Type getSuperType()",
            "org.apache.cxf.aegis.type.basic.ArrayType:org.apache.cxf.aegis.type.Type getComponentType()",
            "org.apache.cxf.aegis.type.xml.SourceType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.SoapArrayType:org.apache.cxf.aegis.type.Type getComponentType()",
            "org.apache.cxf.aegis.type.TypeUtil:org.apache.cxf.aegis.type.Type getWriteTypeStandalone(org.apache.cxf.aegis.AegisContext,java.lang.Object,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.DefaultTypeMapping:org.apache.cxf.aegis.type.Type getType(java.lang.Class)"
        ]
    },
    "org.apache.cxf.aegis.type.DefaultTypeMapping:org.apache.cxf.aegis.type.Type getType(javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.databinding.AegisDatabinding:org.apache.cxf.aegis.type.Type getParameterType(org.apache.cxf.service.Service,org.apache.cxf.aegis.type.TypeMapping,org.apache.cxf.service.model.MessagePartInfo,int)",
            "org.apache.cxf.aegis.AegisContext:org.apache.cxf.aegis.type.Type getRootType(javax.xml.namespace.QName)",
            "org.apache.cxf.aegis.type.AbstractTypeCreator:org.apache.cxf.aegis.type.Type createTypeForClass(org.apache.cxf.aegis.type.AbstractTypeCreator$TypeClassInfo)",
            "org.apache.cxf.aegis.type.basic.ObjectType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.ArrayType:org.apache.cxf.aegis.type.Type getComponentType()",
            "org.apache.cxf.aegis.type.basic.BeanTypeInfo:org.apache.cxf.aegis.type.Type getType(javax.xml.namespace.QName)",
            "org.apache.cxf.aegis.type.encoded.ArrayTypeInfo:void <init>(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.type.TypeMapping)",
            "org.apache.cxf.aegis.type.encoded.SoapArrayType:java.util.List readCollection(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.encoded.ArrayTypeInfo,int)",
            "org.apache.cxf.aegis.type.encoded.SoapArrayType:org.apache.cxf.aegis.type.Type getComponentType()",
            "org.apache.cxf.aegis.type.TypeUtil:org.apache.cxf.aegis.type.Type getReadType(javax.xml.stream.XMLStreamReader,org.apache.cxf.aegis.AegisContext,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.TypeUtil:org.apache.cxf.aegis.type.Type getReadTypeStandalone(javax.xml.stream.XMLStreamReader,org.apache.cxf.aegis.AegisContext,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.DefaultTypeMapping:org.apache.cxf.aegis.type.Type getType(javax.xml.namespace.QName)"
        ]
    },
    "org.apache.cxf.aegis.type.DefaultTypeMapping:javax.xml.namespace.QName getTypeQName(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.AbstractTypeCreator:org.apache.cxf.aegis.type.Type createUserType(org.apache.cxf.aegis.type.AbstractTypeCreator$TypeClassInfo)",
            "org.apache.cxf.aegis.type.basic.XMLBeanTypeInfo:void mapProperty(java.beans.PropertyDescriptor)",
            "org.apache.cxf.aegis.type.DefaultTypeMapping:javax.xml.namespace.QName getTypeQName(java.lang.Class)"
        ]
    },
    "org.apache.cxf.jaxws.handler.InitParamResourceResolver:java.lang.Object resolve(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.resource.DefaultResourceManager:java.lang.Object findResource(java.lang.String,java.lang.Class,boolean,java.util.List)"
        ]
    },
    "org.apache.cxf.jaxws.support.JaxWsServiceConfiguration:javax.jws.WebParam getWebParam(java.lang.reflect.Method,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.support.JaxWsServiceConfiguration:javax.xml.namespace.QName getPartName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int,org.apache.cxf.service.model.MessageInfo,java.lang.String,boolean)",
            "org.apache.cxf.jaxws.support.JaxWsServiceConfiguration:javax.xml.namespace.QName getParameterName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int,int,java.lang.String,boolean)",
            "org.apache.cxf.jaxws.support.JaxWsServiceConfiguration:java.lang.String getResponseWrapperPartName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.jaxws.support.JaxWsServiceConfiguration:java.lang.Boolean isInParam(java.lang.reflect.Method,int)",
            "org.apache.cxf.jaxws.support.JaxWsServiceConfiguration:java.lang.Boolean isOutParam(java.lang.reflect.Method,int)",
            "org.apache.cxf.jaxws.support.JaxWsServiceConfiguration:java.lang.Boolean isHeader(java.lang.reflect.Method,int)"
        ]
    },
    "org.apache.cxf.jaxws.support.JaxWsServiceConfiguration:java.lang.Class getResponseWrapper(java.lang.reflect.Method)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.Class getResponseWrapper(java.lang.reflect.Method)"
        ]
    },
    "org.apache.cxf.jaxws.support.JaxWsServiceConfiguration:java.lang.Class getRequestWrapper(java.lang.reflect.Method)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.Class getRequestWrapper(java.lang.reflect.Method)"
        ]
    },
    "org.apache.cxf.jaxws.ServiceImpl:org.apache.cxf.jaxws.handler.PortInfoImpl getPortInfo(javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.ServiceImpl:org.apache.cxf.jaxws.support.JaxWsClientEndpointImpl getJaxwsEndpoint(javax.xml.namespace.QName,org.apache.cxf.service.factory.AbstractServiceFactoryBean,javax.xml.ws.WebServiceFeature[])"
        ]
    },
    "org.apache.cxf.jaxws.context.WrappedMessageContext:java.lang.String mapKey(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.context.WrappedMessageContext:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:java.lang.Object put(java.lang.String,java.lang.Object,javax.xml.ws.handler.MessageContext$Scope)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:java.lang.Object remove(java.lang.Object)"
        ]
    },
    "org.apache.cxf.jaxws.context.WrappedMessageContext:java.lang.String mapKeyReverse(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.context.WrappedMessageContext:java.util.Set keySet()",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:java.util.Set entrySet()"
        ]
    },
    "org.apache.cxf.jaxws.context.WrappedMessageContext:java.lang.Object get(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.MapNamespaceContext:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.helpers.HttpHeaderHelper:java.util.List getHeader(java.util.Map,java.lang.String)",
            "org.apache.cxf.helpers.HttpHeaderHelper:java.lang.String getHeaderKey(java.lang.String)",
            "org.apache.cxf.helpers.HttpHeaderHelper:java.lang.String mapCharset(java.lang.String)",
            "org.apache.cxf.helpers.XMLUtils:javax.xml.transform.TransformerFactory getTransformerFactory()",
            "org.apache.cxf.helpers.XMLUtils:javax.xml.parsers.DocumentBuilderFactory getDocumentBuilderFactory()",
            "org.apache.cxf.helpers.XMLUtils:javax.xml.namespace.QName getNamespace(java.util.Map,java.lang.String,java.lang.String)",
            "org.apache.cxf.common.xmlschema.FixedExtensionDeserializer:void deserialize(org.apache.ws.commons.schema.XmlSchemaObject,javax.xml.namespace.QName,org.w3c.dom.Node)",
            "org.apache.cxf.common.logging.Log4jLogger:void setLevel(java.util.logging.Level)",
            "org.apache.cxf.common.logging.Log4jLogger:void internalLogFormatted(java.lang.String,java.util.logging.LogRecord)",
            "org.apache.cxf.common.logging.Log4jLogger$HandlerWrapper:org.apache.log4j.Priority getThreshold()",
            "org.apache.cxf.common.util.ClassReader:void readAttributes()",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.common.util.ASMHelper:java.lang.String getClassCode(java.lang.Class)",
            "org.apache.cxf.common.util.ASMHelper:org.apache.cxf.common.util.ASMHelper$TypeHelperClassLoader getTypeHelperClassLoader(java.lang.Class)",
            "org.apache.cxf.common.util.ASMHelper$TypeHelperClassLoader:java.lang.Class lookupDefinedClass(java.lang.String)",
            "org.apache.cxf.common.util.CacheMap:void updateMainDataMap()",
            "org.apache.cxf.common.util.CacheMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.common.util.ParamReader:java.lang.String[] getParameterNames(java.lang.reflect.Member,java.lang.Class[])",
            "org.apache.cxf.common.util.ParamReader:org.apache.cxf.common.util.ParamReader$MethodInfo getMethodInfo()",
            "org.apache.cxf.common.util.TwoStageMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.resource.PropertiesResolver:java.lang.Object resolve(java.lang.String,java.lang.Class)",
            "org.apache.cxf.resource.URIResolver:void tryRemote(java.lang.String)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.util.List getBeanListForId(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void mapElementToJaxbProperty(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder,java.lang.String,java.lang.Class)",
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:java.lang.Object unmarshalFactoryString(java.lang.String,java.lang.Class)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void initWildcardDefinitionMap()",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureWithWildCard(java.lang.String,java.lang.Object)",
            "org.apache.cxf.jaxb.NamespaceMapper:java.lang.String getPreferredPrefix(java.lang.String,java.lang.String,boolean)",
            "org.apache.cxf.jaxb.JAXBUtils:java.lang.String builtInTypeToJavaType(java.lang.String)",
            "org.apache.cxf.jaxb.JAXBUtils:java.lang.Class holderClass(java.lang.String)",
            "org.apache.cxf.jaxb.JAXBDataBinding:org.apache.cxf.jaxb.JAXBDataBinding$CachedContextAndSchemas createJAXBContextAndSchemas(java.util.Set,java.lang.String)",
            "org.apache.cxf.jaxb.JAXBDataBinding:void scanPackages(java.util.Set)",
            "org.apache.cxf.jaxb.JAXBDataBinding$1:javax.xml.transform.Result createOutput(java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxb.WrapperHelperCompiler:boolean addCreateWrapperObject(java.lang.String,java.lang.Class)",
            "org.apache.cxf.jaxb.WrapperHelperCompiler:void createObjectWrapper(org.objectweb.asm.MethodVisitor,java.lang.Class)",
            "org.apache.cxf.management.counters.CounterRepository:org.apache.cxf.management.counters.Counter getCounter(javax.management.ObjectName)",
            "org.apache.cxf.staxutils.AbstractDOMStreamReader:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.staxutils.W3CDOMStreamWriter:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.message.MessageImpl:java.lang.Object getContent(java.lang.Class)",
            "org.apache.cxf.headers.HeaderManagerImpl:org.apache.cxf.headers.HeaderProcessor getHeaderProcessor(java.lang.String)",
            "org.apache.cxf.interceptor.StaxOutInterceptor:javax.xml.stream.XMLOutputFactory getXMLOutputFactory(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.util.Map keepInOrder(java.util.Map,org.apache.cxf.service.model.OperationInfo,java.util.List)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:org.apache.cxf.message.MessageContentsList getParameters(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.interceptor.ClientOutFaultObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxInInterceptor:javax.xml.stream.XMLInputFactory getXMLInputFactory(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.FIStaxOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.ConduitInitiatorManagerImpl:org.apache.cxf.transport.ConduitInitiator getConduitInitiator(java.lang.String)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void writeResponse(java.lang.String,java.lang.String,org.apache.cxf.service.model.EndpointInfo,java.io.OutputStream)",
            "org.apache.cxf.transport.http.DigestAuthSupplier:java.lang.String getPreemptiveAuthorization(org.apache.cxf.transport.http.HTTPConduit,java.net.URL,org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:void transferProtocolHeadersToURLConnection(org.apache.cxf.message.Message,java.net.URLConnection)",
            "org.apache.cxf.transport.http.HTTPConduit:void logProtocolHeaders(java.util.logging.Level,org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:java.lang.String extractAuthorizationRealm(java.util.Map)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void copyRequestHeaders(org.apache.cxf.message.Message,java.util.Map)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void copyResponseHeaders(org.apache.cxf.message.Message,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:java.lang.String getId(java.util.Map)",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponseInternal()",
            "org.apache.cxf.transport.http.gzip.GZIPOutInterceptor:void addHeader(org.apache.cxf.message.Message,java.lang.String,java.lang.String)",
            "org.apache.cxf.transport.AbstractMultiplexDestination:java.lang.String getId(java.util.Map)",
            "org.apache.cxf.transport.DestinationFactoryManagerImpl:org.apache.cxf.transport.DestinationFactory getDestinationFactory(java.lang.String)",
            "org.apache.cxf.transport.servlet.ServletContextResourceResolver:java.io.InputStream getAsStream(java.lang.String)",
            "org.apache.cxf.transport.servlet.ServletContextResourceResolver:java.lang.Object resolve(java.lang.String,java.lang.Class)",
            "org.apache.cxf.transport.servlet.ServletTransportFactory:org.apache.cxf.transport.servlet.ServletDestination getDestinationForPath(java.lang.String)",
            "org.apache.cxf.transport.servlet.AbstractCXFServlet:void init(javax.servlet.ServletConfig)",
            "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser$SpringJettyHTTPServerEngine:void finalizeConfig()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPTransportFactory:org.apache.cxf.transport.Destination getDestination(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPTransportFactory:org.apache.cxf.transport.http_jetty.JettyHTTPDestination createDestination(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine retrieveJettyHTTPServerEngine(int)",
            "org.apache.cxf.transport.jms.JMSUtils:void addContentTypeToProtocolHeader(org.apache.cxf.message.Message)",
            "org.apache.cxf.NSManager:java.lang.String getPrefixFromNS(java.lang.String)",
            "org.apache.cxf.extension.RegistryImpl:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.endpoint.ClientImpl:java.util.Map getRequestContext()",
            "org.apache.cxf.endpoint.ClientImpl:java.util.Map getResponseContext()",
            "org.apache.cxf.endpoint.ClientImpl:boolean isThreadLocalRequestContext()",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.ClientImpl:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.addressing.ContextUtils:java.lang.String getActionFromServiceModel(org.apache.cxf.message.Message,java.lang.Exception)",
            "org.apache.cxf.ws.addressing.ContextUtils:java.lang.String getAction(org.apache.cxf.service.model.Extensible)",
            "org.apache.cxf.ws.addressing.MAPAggregator:boolean validateIncomingMAPs(org.apache.cxf.ws.addressing.AddressingProperties,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void propogateAction(org.apache.cxf.ws.addressing.AttributedURIType,org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void restoreExchange(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.addressing.AddressingProperties)",
            "org.apache.cxf.ws.policy.PolicyRegistryImpl:org.apache.neethi.Policy lookup(java.lang.String)",
            "org.apache.cxf.ws.security.policy.interceptors.HttpsTokenInterceptorProvider$HttpsTokenInInterceptor:void assertHttps(java.util.Collection,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.policy.interceptors.HttpsTokenInterceptorProvider$HttpsTokenOutInterceptor:void assertHttps(java.util.Collection,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.trust.STSClient:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:org.apache.cxf.ws.security.tokenstore.SecurityToken getToken(java.lang.String)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:org.apache.ws.security.components.crypto.Crypto getCrypto(org.apache.cxf.ws.security.policy.model.TokenWrapper,java.lang.String,java.lang.String)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:java.util.Properties getProps(java.lang.Object,org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor:void <init>(java.util.Map)",
            "org.apache.cxf.ws.security.wss4j.AbstractWSS4JInterceptor:java.lang.Object getOption(java.lang.String)",
            "org.apache.cxf.ws.security.wss4j.AbstractWSS4JInterceptor:org.apache.ws.security.components.crypto.Crypto loadSignatureCrypto(org.apache.ws.security.handler.RequestData)",
            "org.apache.cxf.ws.security.wss4j.AbstractWSS4JInterceptor:org.apache.ws.security.components.crypto.Crypto loadDecryptionCrypto(org.apache.ws.security.handler.RequestData)",
            "org.apache.cxf.ws.security.wss4j.AbstractWSS4JInterceptor:org.apache.ws.security.components.crypto.Crypto loadEncryptionCrypto(org.apache.ws.security.handler.RequestData)",
            "org.apache.cxf.ws.rm.Source:org.apache.cxf.ws.rm.SourceSequence getSequence(org.apache.cxf.ws.rm.Identifier)",
            "org.apache.cxf.ws.rm.Source:org.apache.cxf.ws.rm.SourceSequence getAssociatedSequence(org.apache.cxf.ws.rm.Identifier)",
            "org.apache.cxf.ws.rm.RMOutInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.Destination:org.apache.cxf.ws.rm.DestinationSequence getSequence(org.apache.cxf.ws.rm.Identifier)",
            "org.apache.cxf.ws.rm.RMManager:org.apache.cxf.ws.rm.RMEndpoint getReliableEndpoint(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.RMManager:void shutdownReliableEndpoint(org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl:java.util.List getSequenceCandidates(java.lang.String)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void add(org.apache.cxf.interceptor.Interceptor,boolean)",
            "org.apache.cxf.workqueue.WorkQueueManagerImpl:org.apache.cxf.workqueue.AutomaticWorkQueue getNamedWorkQueue(java.lang.String)",
            "org.apache.cxf.databinding.AbstractDataBinding:void updateSchemaLocation(org.w3c.dom.Element)",
            "org.apache.cxf.databinding.source.mime.MimeSerializer:void serialize(org.apache.ws.commons.schema.XmlSchemaObject,java.lang.Class,org.w3c.dom.Node)",
            "org.apache.cxf.wsdl.AbstractWSDLPlugin:java.lang.String getOption(java.util.Map,java.lang.String)",
            "org.apache.cxf.wsdl.AbstractWSDLPlugin:java.lang.Object getOption(java.util.Map,java.lang.String,java.lang.Class)",
            "org.apache.cxf.wsdl.AbstractWSDLPlugin:java.lang.Object getOption(java.util.Map,java.lang.Class)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:int getIndentLevel(java.lang.Class)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:java.lang.String getWSDLLocation(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:java.lang.String getEndpointReferenceId(java.util.Map)",
            "org.apache.cxf.service.model.BindingOperationInfo:org.apache.cxf.service.model.BindingFaultInfo getFault(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.AbstractMessageContainer:void addMessagePart(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePart(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:java.lang.Object getExtensionAttribute(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperationForWrapperElement(org.apache.cxf.message.Exchange,javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.service.model.InterfaceInfo:org.apache.cxf.service.model.OperationInfo getOperation(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.MessageInfo getMessage(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.MessageInfo:java.util.List getOrderedParts(java.util.List)",
            "org.apache.cxf.service.model.BindingInfo:org.apache.cxf.service.model.BindingOperationInfo getOperation(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.OperationInfo:org.apache.cxf.service.model.FaultInfo getFault(javax.xml.namespace.QName)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void addImport(org.apache.ws.commons.schema.XmlSchema,java.lang.String)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isWrapped(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isRPC(java.lang.reflect.Method)",
            "org.apache.cxf.binding.BindingFactoryManagerImpl:org.apache.cxf.binding.BindingFactory getBindingFactory(java.lang.String)",
            "org.apache.cxf.binding.soap.interceptor.SoapActionInInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.SoapVersionFactory:org.apache.cxf.binding.soap.SoapVersion getSoapVersion(java.lang.String)",
            "org.apache.cxf.clustering.AbstractStaticFailoverStrategy:java.util.List getAlternateEndpoints(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.clustering.FailoverTargetSelector:void complete(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.clustering.FailoverTargetSelector:void overrideAddressProperty(java.util.Map)",
            "org.apache.cxf.tools.common.Tag:boolean equals(java.lang.Object)",
            "org.apache.cxf.tools.common.ToolContext:void addParameters(java.util.Map)",
            "org.apache.cxf.tools.common.ToolContext:java.lang.Object get(java.lang.String)",
            "org.apache.cxf.tools.common.ToolContext:java.lang.String mapNamespaceToPackageName(java.lang.String)",
            "org.apache.cxf.tools.common.ToolContext:java.lang.String getExcludePackageName(java.lang.String)",
            "org.apache.cxf.tools.common.VelocityGenerator:void doWrite(java.lang.String,java.io.Writer)",
            "org.apache.cxf.tools.common.ProcessorTestBase:boolean assertXmlEquals(java.io.File,java.io.File,java.util.List)",
            "org.apache.cxf.tools.common.ProcessorTestBase:void assertAttributesEquals(javax.xml.namespace.QName,java.util.Map,java.util.Map,java.util.Collection)",
            "org.apache.cxf.tools.common.model.JavaType:java.lang.String getDefaultTypeValue()",
            "org.apache.cxf.tools.common.model.JavaMethod:boolean isEquiv(java.lang.String,java.lang.String)",
            "org.apache.cxf.tools.common.model.JavaParameter:org.apache.cxf.tools.common.model.JAnnotation getAnnotation(java.lang.String)",
            "org.apache.cxf.tools.util.BuiltInTypesJavaMappingUtil:java.lang.String getJType(java.lang.String,java.lang.String)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:java.lang.String getBindingAnnotation(java.lang.String)",
            "org.apache.cxf.tools.util.PropertyUtil:java.lang.String getProperty(java.lang.String)",
            "org.apache.cxf.tools.util.ClassCollector:java.lang.String getTypesFullClassName(java.lang.String,java.lang.String)",
            "org.apache.cxf.wsdl11.SchemaUtil:void extractSchema(javax.wsdl.Definition,org.apache.cxf.common.xmlschema.SchemaCollection,java.util.List)",
            "org.apache.cxf.wsdl11.SchemaUtil:void addSchema(java.lang.String,javax.wsdl.extensions.schema.Schema)",
            "org.apache.cxf.wsdl11.SchemaUtil:boolean isSchemaParsed(java.lang.String,java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:java.util.Collection getImports(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addExtensibilityAttributes(javax.wsdl.extensions.AttributeExtensible,java.util.Map)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(java.net.URL)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(org.w3c.dom.Element)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:org.apache.cxf.service.model.ServiceSchemaInfo getSchemasForDefinition(javax.wsdl.Definition)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void activateViaNS(java.lang.String)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void processExtension(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadAndRegister(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:java.lang.Object getExtension(java.lang.String,java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void <init>(java.util.Map,java.util.Map)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:java.lang.String getBusId(java.util.Map)",
            "org.apache.cxf.bus.CXFBusImpl:java.lang.Object getExtension(java.lang.Class)",
            "org.apache.cxf.attachment.AttachmentImpl:java.lang.String getHeader(java.lang.String)",
            "org.apache.cxf.frontend.ClientFactoryBean:void applyExtraClass()",
            "org.apache.cxf.frontend.ClientFactoryBean:void applyProperties(org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.frontend.SimpleMethodDispatcher:org.apache.cxf.service.model.BindingOperationInfo getBindingOperation(java.lang.reflect.Method,org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.frontend.SimpleMethodDispatcher:java.lang.reflect.Method getMethod(org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.frontend.SimpleMethodDispatcher:java.lang.reflect.Method getPrimaryMethod(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory:org.apache.cxf.endpoint.Endpoint createEndpoint()",
            "org.apache.cxf.frontend.ServerFactoryBean:void applyExtraClass()",
            "org.apache.cxf.aegis.Context:java.lang.Object getProperty(java.lang.Class)",
            "org.apache.cxf.aegis.util.jdom.StaxBuilder:void buildTree(org.jdom.JDOMFactory,javax.xml.stream.XMLStreamReader,org.jdom.Document)",
            "org.apache.cxf.aegis.util.jdom.StaxBuilder:int resolveAttrType(java.lang.String)",
            "org.apache.cxf.aegis.util.stax.JDOMStreamWriter:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.aegis.util.stax.JDOMStreamReader:java.lang.String getDeclaredURI(java.lang.String)",
            "org.apache.cxf.aegis.databinding.XMLStreamDataWriter:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.aegis.databinding.ElementDataWriter:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:org.apache.cxf.aegis.type.Type getType(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.aegis.type.basic.XMLBeanTypeInfo:org.apache.cxf.aegis.type.basic.BeanTypePropertyInfo getPropertyInfo(javax.xml.namespace.QName)",
            "org.apache.cxf.aegis.type.basic.BeanType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.InterfaceInvocationHandler:java.lang.Object readProperty(java.lang.Object)",
            "org.apache.cxf.aegis.type.basic.BeanTypeInfo:org.apache.cxf.aegis.type.Type getType(javax.xml.namespace.QName)",
            "org.apache.cxf.aegis.type.basic.BeanTypeInfo:javax.xml.namespace.QName getMappedTypeName(javax.xml.namespace.QName)",
            "org.apache.cxf.aegis.type.basic.BeanTypeInfo:java.lang.String getPropertyNameFromMappedName(javax.xml.namespace.QName)",
            "org.apache.cxf.aegis.type.encoded.MarshalRegistry:java.lang.String getInstanceId(java.lang.Object)",
            "org.apache.cxf.aegis.type.XMLTypeCreator:org.w3c.dom.Document getDocument(java.lang.Class)",
            "org.apache.cxf.aegis.type.DefaultTypeMapping:org.apache.cxf.aegis.type.Type getType(java.lang.Class)",
            "org.apache.cxf.aegis.type.DefaultTypeMapping:org.apache.cxf.aegis.type.Type getType(javax.xml.namespace.QName)",
            "org.apache.cxf.aegis.type.DefaultTypeMapping:javax.xml.namespace.QName getTypeQName(java.lang.Class)",
            "org.apache.cxf.jaxws.handler.HandlerResolverImpl:java.util.List getHandlerChain(javax.xml.ws.handler.PortInfo)",
            "org.apache.cxf.jaxws.handler.InitParamResourceResolver:java.lang.Object resolve(java.lang.String,java.lang.Class)",
            "org.apache.cxf.jaxws.handler.soap.SOAPMessageContextImpl:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.jaxws.handler.logical.LogicalMessageContextImpl:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.jaxws.support.JaxWsServiceConfiguration:javax.jws.WebParam getWebParam(java.lang.reflect.Method,int)",
            "org.apache.cxf.jaxws.support.JaxWsServiceConfiguration:java.lang.Class getResponseWrapper(java.lang.reflect.Method)",
            "org.apache.cxf.jaxws.support.JaxWsServiceConfiguration:java.lang.Class getRequestWrapper(java.lang.reflect.Method)",
            "org.apache.cxf.jaxws.JaxWsClientProxy:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])",
            "org.apache.cxf.jaxws.ServiceImpl:java.lang.Object createPort(javax.xml.namespace.QName,org.apache.cxf.ws.addressing.EndpointReferenceType,java.lang.Class,javax.xml.ws.WebServiceFeature[])",
            "org.apache.cxf.jaxws.ServiceImpl:org.apache.cxf.jaxws.handler.PortInfoImpl getPortInfo(javax.xml.namespace.QName)",
            "org.apache.cxf.jaxws.EndpointImpl:void checkProperties()",
            "org.apache.cxf.jaxws.DispatchImpl:java.lang.Object invoke(java.lang.Object,boolean)",
            "org.apache.cxf.jaxws.DispatchImpl:java.util.concurrent.Future invokeAsync(java.lang.Object,javax.xml.ws.AsyncHandler)",
            "org.apache.cxf.jaxws.interceptors.SwAOutInterceptor:boolean callSWARefMethod(javax.xml.bind.JAXBContext)",
            "org.apache.cxf.jaxws.context.WebServiceContextImpl:java.security.Principal getUserPrincipal()",
            "org.apache.cxf.jaxws.context.WebServiceContextImpl:boolean isUserInRole(java.lang.String)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:void <init>(java.util.Map,org.apache.cxf.message.Exchange,javax.xml.ws.handler.MessageContext$Scope)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:void copyScoped(java.util.Map)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:java.lang.String mapKey(java.lang.String)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:java.lang.String mapKeyReverse(java.lang.String)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:java.lang.Object put(java.lang.String,java.lang.Object,javax.xml.ws.handler.MessageContext$Scope)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:javax.xml.ws.handler.MessageContext$Scope getScope(java.lang.String)",
            "org.apache.cxf.jaxws.AbstractJAXWSMethodInvoker:java.util.Map removeHandlerProperties(org.apache.cxf.jaxws.context.WrappedMessageContext)",
            "org.apache.cxf.jaxws.AbstractJAXWSMethodInvoker:void updateWebServiceContext(org.apache.cxf.message.Exchange,javax.xml.ws.handler.MessageContext)",
            "org.apache.cxf.xmlbeans.XmlBeansSchemaInitializer:org.apache.ws.commons.schema.XmlSchema getSchema(org.apache.xmlbeans.SchemaTypeSystem,java.lang.String)",
            "org.apache.cxf.xmlbeans.XmlBeansSchemaInitializer:void mapClass(org.apache.cxf.service.model.MessagePartInfo,java.lang.Class)",
            "org.apache.cxf.xmlbeans.tools.XMLBeansSchemaTypeUtils:java.lang.String getNaturalJavaClassName(org.apache.xmlbeans.SchemaType)"
        ]
    },
    "org.apache.cxf.jaxws.context.WrappedMessageContext:java.lang.Object put(java.lang.String,java.lang.Object,javax.xml.ws.handler.MessageContext$Scope)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.context.WrappedMessageContext:java.lang.Object put(java.lang.String,java.lang.Object)",
            "org.apache.cxf.jaxws.AbstractJAXWSMethodInvoker:void addHandlerProperties(org.apache.cxf.jaxws.context.WrappedMessageContext,java.util.Map)"
        ]
    },
    "org.apache.cxf.xmlbeans.XmlBeansSchemaInitializer:void mapClass(org.apache.cxf.service.model.MessagePartInfo,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.xmlbeans.XmlBeansSchemaInitializer:void begin(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.xmlbeans.XmlBeansSchemaInitializer:void checkForExistence(org.apache.cxf.service.model.MessagePartInfo)"
        ]
    },
    "org.apache.cxf.xmlbeans.tools.XMLBeansSchemaTypeUtils:java.lang.String getNaturalJavaClassName(org.apache.xmlbeans.SchemaType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.xmlbeans.tools.XMLBeansToolingDataBinding:java.lang.String getWrappedElementType(javax.xml.namespace.QName,javax.xml.namespace.QName)"
        ]
    },
    "org.apache.cxf.common.util.WeakIdentityHashMap:int size()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.WeakIdentityHashMap:int size()",
            "org.apache.cxf.common.util.CacheMap:int size()",
            "org.apache.cxf.common.util.TwoStageMap:int size()",
            "org.apache.cxf.common.util.TwoStageMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:int size()",
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.util.Map keepInOrder(java.util.Map,org.apache.cxf.service.model.OperationInfo,java.util.List)",
            "org.apache.cxf.transport.http.HTTPConduit:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.RMManager:void shutdown()",
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl:boolean isEmpty()",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.wsdl.Port getPort(org.apache.cxf.wsdl.WSDLManager,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.service.model.AbstractMessageContainer:void addMessagePart(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo addOutOfBandMessagePart(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.AbstractMessageContainer:int size()",
            "org.apache.cxf.service.model.OperationInfo:boolean hasFaults()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createMessageParts(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.binding.soap.interceptor.SoapPreProtocolOutInterceptor:void setSoapAction(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.tools.common.ToolContext:boolean isExcludeNamespaceEnabled()",
            "org.apache.cxf.wsdl11.SchemaUtil:void addSchema(java.lang.String,javax.wsdl.extensions.schema.Schema)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildMockServices(javax.wsdl.Definition)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:int size()"
        ]
    },
    "org.apache.cxf.common.util.TwoStageMap:int size()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.WeakIdentityHashMap:int size()",
            "org.apache.cxf.common.util.CacheMap:int size()",
            "org.apache.cxf.common.util.TwoStageMap:int size()",
            "org.apache.cxf.common.util.TwoStageMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:int size()",
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.util.Map keepInOrder(java.util.Map,org.apache.cxf.service.model.OperationInfo,java.util.List)",
            "org.apache.cxf.transport.http.HTTPConduit:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.RMManager:void shutdown()",
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl:boolean isEmpty()",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.wsdl.Port getPort(org.apache.cxf.wsdl.WSDLManager,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.service.model.AbstractMessageContainer:void addMessagePart(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo addOutOfBandMessagePart(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.AbstractMessageContainer:int size()",
            "org.apache.cxf.service.model.OperationInfo:boolean hasFaults()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createMessageParts(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.binding.soap.interceptor.SoapPreProtocolOutInterceptor:void setSoapAction(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.tools.common.ToolContext:boolean isExcludeNamespaceEnabled()",
            "org.apache.cxf.wsdl11.SchemaUtil:void addSchema(java.lang.String,javax.wsdl.extensions.schema.Schema)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildMockServices(javax.wsdl.Definition)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:int size()"
        ]
    },
    "org.apache.cxf.common.util.TwoStageMap:java.lang.Object put(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.MapNamespaceContext:void addNamespace(java.lang.String,java.lang.String)",
            "org.apache.cxf.helpers.HttpHeaderHelper:java.lang.String mapCharset(java.lang.String)",
            "org.apache.cxf.helpers.HttpHeaderHelper:void <clinit>()",
            "org.apache.cxf.helpers.XMLUtils:javax.xml.transform.TransformerFactory getTransformerFactory()",
            "org.apache.cxf.helpers.XMLUtils:javax.xml.parsers.DocumentBuilderFactory getDocumentBuilderFactory()",
            "org.apache.cxf.common.xmlschema.FixedExtensionDeserializer:void deserialize(org.apache.ws.commons.schema.XmlSchemaObject,javax.xml.namespace.QName,org.w3c.dom.Node)",
            "org.apache.cxf.common.logging.Log4jLogger:void <clinit>()",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.common.util.ASMHelper:org.apache.cxf.common.util.ASMHelper$TypeHelperClassLoader getTypeHelperClassLoader(java.lang.Class)",
            "org.apache.cxf.common.util.ASMHelper:void <clinit>()",
            "org.apache.cxf.common.util.ASMHelper$TypeHelperClassLoader:java.lang.Class defineClass(java.lang.String,byte[])",
            "org.apache.cxf.common.util.CacheMap:void updateMainDataMap()",
            "org.apache.cxf.common.util.CacheMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.common.util.CacheMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.common.util.ParamReader:void readCode()",
            "org.apache.cxf.common.util.TwoStageMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.common.util.TwoStageMap:void putAll(java.util.Map)",
            "org.apache.cxf.resource.URIResolver:void tryRemote(java.lang.String)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.util.List getBeanListForId(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void mapElementToJaxbProperty(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder,java.lang.String,java.lang.Class)",
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:java.lang.Object unmarshalFactoryString(java.lang.String,java.lang.Class)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void initWildcardDefinitionMap()",
            "org.apache.cxf.jaxb.JAXBUtils:void <clinit>()",
            "org.apache.cxf.jaxb.JAXBDataBinding:void initialize(org.apache.cxf.service.Service)",
            "org.apache.cxf.jaxb.JAXBDataBinding:org.apache.cxf.jaxb.JAXBDataBinding$CachedContextAndSchemas createJAXBContextAndSchemas(java.util.Set,java.lang.String)",
            "org.apache.cxf.jaxb.JAXBDataBinding:void addToObjectFactoryCache(java.lang.Package,java.lang.Class)",
            "org.apache.cxf.jaxb.JAXBDataBinding$1:void <init>(org.apache.cxf.jaxb.JAXBDataBinding,java.util.List)",
            "org.apache.cxf.management.jmx.export.runtime.ModelMBeanInfoSupporter:void addModelMBeanMethod(java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String,java.lang.String,javax.management.Descriptor)",
            "org.apache.cxf.management.jmx.export.runtime.ModelMBeanInfoSupporter:void addModelMBeanNotification(java.lang.String[],java.lang.String,java.lang.String,javax.management.Descriptor)",
            "org.apache.cxf.management.jmx.export.runtime.ModelMBeanInfoSupporter:void addModelMBeanAttribute(java.lang.String,java.lang.String,boolean,boolean,boolean,java.lang.String,javax.management.Descriptor)",
            "org.apache.cxf.management.jmx.export.runtime.ModelMBeanInfoSupporter:void addModelMBeanConstructor(java.lang.reflect.Constructor,java.lang.String,javax.management.Descriptor)",
            "org.apache.cxf.management.counters.CounterRepository:void increaseCounter(javax.management.ObjectName,org.apache.cxf.management.counters.MessageHandlingTimeRecorder)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startPrefixMapping(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:void addNs(java.lang.String,java.lang.String)",
            "org.apache.cxf.message.MessageImpl:void setContent(java.lang.Class,java.lang.Object)",
            "org.apache.cxf.headers.HeaderManagerImpl:void registerHeaderProcessor(org.apache.cxf.headers.HeaderProcessor)",
            "org.apache.cxf.interceptor.StaxOutInterceptor:javax.xml.stream.XMLOutputFactory getXMLOutputFactory(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxInInterceptor:javax.xml.stream.XMLInputFactory getXMLInputFactory(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.FIStaxOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.ConduitInitiatorManagerImpl:void registerConduitInitiator(java.lang.String,org.apache.cxf.transport.ConduitInitiator)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void writeResponse(java.lang.String,java.lang.String,org.apache.cxf.service.model.EndpointInfo,java.io.OutputStream)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updateDefinition(javax.wsdl.Definition,java.util.Map,java.util.Map,java.lang.String,org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updateSchemaImports(javax.wsdl.extensions.schema.Schema,java.util.Map,java.lang.String)",
            "org.apache.cxf.transport.http.Cookie:void handleSetCookie(java.util.Map,java.util.List)",
            "org.apache.cxf.transport.http.DigestAuthSupplier:java.lang.String getAuthorizationForRealm(org.apache.cxf.transport.http.HTTPConduit,java.net.URL,org.apache.cxf.message.Message,java.lang.String,java.lang.String)",
            "org.apache.cxf.transport.http.HTTPConduit:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:void setHeadersByAuthorizationPolicy(org.apache.cxf.message.Message,java.net.URL,java.util.Map)",
            "org.apache.cxf.transport.http.HTTPConduit:void setHeadersByClientPolicy(org.apache.cxf.message.Message,java.util.Map)",
            "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection authorizationRetransmit(java.net.HttpURLConnection,org.apache.cxf.message.Message,org.apache.cxf.io.CacheAndWriteOutputStream)",
            "org.apache.cxf.transport.http.HTTPConduit:void setBasicAuthHeader(java.lang.String,java.lang.String,java.util.Map)",
            "org.apache.cxf.transport.http.HTTPConduit:void setProxyBasicAuthHeader(java.lang.String,java.lang.String,java.util.Map)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void copyRequestHeaders(org.apache.cxf.message.Message,java.util.Map)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void setPolicies(java.util.Map)",
            "org.apache.cxf.transport.http.gzip.GZIPOutInterceptor:void addHeader(org.apache.cxf.message.Message,java.lang.String,java.lang.String)",
            "org.apache.cxf.transport.DestinationFactoryManagerImpl:void registerDestinationFactory(java.lang.String,org.apache.cxf.transport.DestinationFactory)",
            "org.apache.cxf.transport.servlet.ServletContextResourceResolver:java.lang.Object resolve(java.lang.String,java.lang.Class)",
            "org.apache.cxf.transport.servlet.ServletTransportFactory:org.apache.cxf.transport.Destination getDestination(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.servlet.AbstractCXFServlet:void init(javax.servlet.ServletConfig)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPTransportFactory:org.apache.cxf.transport.http_jetty.JettyHTTPDestination createDestination(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void setEnginesList(java.util.List)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void setTLSServerParametersForPort(int,org.apache.cxf.configuration.jsse.TLSServerParameters)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine createJettyHTTPServerEngine(int,java.lang.String)",
            "org.apache.cxf.transport.jms.JMSUtils:void addContentTypeToProtocolHeader(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.jms.JMSConduit:void sendExchange(org.apache.cxf.message.Exchange,java.lang.Object)",
            "org.apache.cxf.NSManager:void resolveConstants(java.lang.Class)",
            "org.apache.cxf.extension.RegistryImpl:void register(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.endpoint.ClientImpl:java.util.Map getRequestContext()",
            "org.apache.cxf.endpoint.ClientImpl:java.util.Map getResponseContext()",
            "org.apache.cxf.endpoint.ClientImpl:void setThreadLocalRequestContext(boolean)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map)",
            "org.apache.cxf.endpoint.ClientImpl$EchoContext:java.lang.Object put(java.lang.String,java.lang.Object)",
            "org.apache.cxf.ws.addressing.ContextUtils:java.lang.String getActionFromMessageAttributes(org.apache.cxf.service.model.MessageInfo)",
            "org.apache.cxf.ws.addressing.MAPAggregator:boolean validateIncomingMAPs(org.apache.cxf.ws.addressing.AddressingProperties,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void cacheExchange(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.addressing.AddressingProperties)",
            "org.apache.cxf.ws.policy.PolicyRegistryImpl:void register(java.lang.String,org.apache.neethi.Policy)",
            "org.apache.cxf.ws.security.policy.model.ContentEncryptedElements:void addDeclaredNamespaces(java.lang.String,java.lang.String)",
            "org.apache.cxf.ws.security.policy.model.SignedEncryptedElements:void addDeclaredNamespaces(java.lang.String,java.lang.String)",
            "org.apache.cxf.ws.security.policy.model.RequiredElements:void addDeclaredNamespaces(java.lang.String,java.lang.String)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationOutInterceptor:void renewToken(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.ws.security.tokenstore.SecurityToken,org.apache.cxf.ws.security.policy.model.SecureConversationToken)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationTokenInterceptorProvider:void mapSecurityProps(org.apache.cxf.message.Message,java.util.Map)",
            "org.apache.cxf.ws.security.trust.STSClient:org.apache.cxf.ws.security.tokenstore.SecurityToken requestSecurityToken(java.lang.String,java.lang.String,java.lang.String,org.apache.cxf.ws.security.tokenstore.SecurityToken)",
            "org.apache.cxf.ws.security.trust.STSClient:boolean validateSecurityToken(org.apache.cxf.ws.security.tokenstore.SecurityToken,java.lang.String)",
            "org.apache.cxf.ws.security.trust.STSClient:void cancelSecurityToken(org.apache.cxf.ws.security.tokenstore.SecurityToken)",
            "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:void add(org.apache.cxf.ws.security.tokenstore.SecurityToken)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:java.util.Map handleSupportingTokens(org.apache.cxf.ws.security.policy.model.SupportingToken,boolean,java.util.Map)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:org.apache.ws.security.components.crypto.Crypto getCrypto(org.apache.cxf.ws.security.policy.model.TokenWrapper,java.lang.String,java.lang.String)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:java.util.Properties getProps(java.lang.Object,org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.wss4j.AbstractWSS4JInterceptor:void setProperty(java.lang.String,java.lang.String)",
            "org.apache.cxf.ws.security.wss4j.AbstractWSS4JInterceptor:org.apache.ws.security.components.crypto.Crypto loadSignatureCrypto(org.apache.ws.security.handler.RequestData)",
            "org.apache.cxf.ws.security.wss4j.AbstractWSS4JInterceptor:org.apache.ws.security.components.crypto.Crypto loadDecryptionCrypto(org.apache.ws.security.handler.RequestData)",
            "org.apache.cxf.ws.security.wss4j.AbstractWSS4JInterceptor:org.apache.ws.security.components.crypto.Crypto loadEncryptionCrypto(org.apache.ws.security.handler.RequestData)",
            "org.apache.cxf.ws.rm.Source:void addSequence(org.apache.cxf.ws.rm.SourceSequence,boolean)",
            "org.apache.cxf.ws.rm.Source:void setCurrent(org.apache.cxf.ws.rm.Identifier,org.apache.cxf.ws.rm.SourceSequence)",
            "org.apache.cxf.ws.rm.Destination:void addSequence(org.apache.cxf.ws.rm.DestinationSequence,boolean)",
            "org.apache.cxf.ws.rm.RMManager:org.apache.cxf.ws.rm.RMEndpoint getReliableEndpoint(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.RMManager:void recoverReliableEndpoint(org.apache.cxf.endpoint.Endpoint,org.apache.cxf.transport.Conduit)",
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl:org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl$ResendCandidate cacheUnacknowledged(org.apache.cxf.message.Message)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void <init>(java.util.SortedSet)",
            "org.apache.cxf.workqueue.WorkQueueManagerImpl:void addNamedWorkQueue(java.lang.String,org.apache.cxf.workqueue.AutomaticWorkQueue)",
            "org.apache.cxf.databinding.AbstractDataBinding:void <init>()",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void <clinit>()",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.bind.JAXBElement getServiceNameType(javax.xml.namespace.QName,java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:void setInterfaceName(org.apache.cxf.ws.addressing.EndpointReferenceType,javax.xml.namespace.QName)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:void setWSDLLocation(org.apache.cxf.ws.addressing.EndpointReferenceType,java.lang.String[])",
            "org.apache.cxf.service.model.BindingOperationInfo:void <init>(org.apache.cxf.service.model.BindingInfo,org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:void addMessagePart(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:void setProperty(java.lang.String,java.lang.Object)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:void addExtensionAttribute(javax.xml.namespace.QName,java.lang.Object)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperationForWrapperElement(org.apache.cxf.message.Exchange,javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.service.model.InterfaceInfo:void addOperation(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.ServiceInfo:void initMessagesMap()",
            "org.apache.cxf.service.model.BindingInfo:void addOperation(org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.service.model.OperationInfo:void addFault(org.apache.cxf.service.model.FaultInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createEndpoints()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isWrapped(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isRPC(java.lang.reflect.Method)",
            "org.apache.cxf.binding.BindingFactoryManagerImpl:void registerBindingFactory(java.lang.String,org.apache.cxf.binding.BindingFactory)",
            "org.apache.cxf.binding.soap.interceptor.SoapPreProtocolOutInterceptor:void setSoapAction(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.SoapVersionFactory:void register(org.apache.cxf.binding.soap.SoapVersion)",
            "org.apache.cxf.clustering.FailoverTargetSelector:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.clustering.FailoverTargetSelector:void overrideAddressProperty(java.util.Map)",
            "org.apache.cxf.tools.common.ToolContext:void put(java.lang.String,java.lang.Object)",
            "org.apache.cxf.tools.common.ToolContext:void addNamespacePackageMap(java.lang.String,java.lang.String)",
            "org.apache.cxf.tools.common.ToolContext:void addExcludeNamespacePackageMap(java.lang.String,java.lang.String)",
            "org.apache.cxf.tools.common.VelocityGenerator:void setCommonAttributes()",
            "org.apache.cxf.tools.common.VelocityGenerator:void setAttributes(java.lang.String,java.lang.Object)",
            "org.apache.cxf.tools.common.model.JavaModel:void addInterface(java.lang.String,org.apache.cxf.tools.common.model.JavaInterface)",
            "org.apache.cxf.tools.common.model.JavaModel:void addExceptionClass(java.lang.String,org.apache.cxf.tools.common.model.JavaExceptionClass)",
            "org.apache.cxf.tools.common.model.JavaModel:void addServiceClass(java.lang.String,org.apache.cxf.tools.common.model.JavaServiceClass)",
            "org.apache.cxf.tools.common.model.JavaType:void <clinit>()",
            "org.apache.cxf.tools.common.model.JavaMethod:void addAnnotation(java.lang.String,org.apache.cxf.tools.common.model.JAnnotation)",
            "org.apache.cxf.tools.common.model.JavaMethod:void <clinit>()",
            "org.apache.cxf.tools.common.model.JavaParameter:void addAnnotation(java.lang.String,org.apache.cxf.tools.common.model.JAnnotation)",
            "org.apache.cxf.tools.util.ToolsStaxUtils:java.util.List getTags(java.io.File)",
            "org.apache.cxf.tools.util.ToolsStaxUtils:org.apache.cxf.tools.common.Tag getTagTree(java.io.InputStream,java.util.List)",
            "org.apache.cxf.tools.util.BuiltInTypesJavaMappingUtil:void <clinit>()",
            "org.apache.cxf.tools.util.SOAPBindingUtil:void <clinit>()",
            "org.apache.cxf.tools.util.PropertyUtil:void load(java.io.InputStream,java.lang.String)",
            "org.apache.cxf.tools.util.ClassCollector:void addSeiClassName(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.tools.util.ClassCollector:void addTypesClassName(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.tools.util.ClassCollector:void addServerClassName(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.tools.util.ClassCollector:void addImplClassName(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.tools.util.ClassCollector:void addClientClassName(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.tools.util.ClassCollector:void addServiceClassName(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.tools.util.ClassCollector:void addExceptionClassName(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.catalog.CatalogXmlSchemaURIResolver:org.xml.sax.InputSource resolveEntity(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.wsdl11.SchemaUtil:void addSchema(java.lang.String,javax.wsdl.extensions.schema.Schema)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void parseWSDL(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void registerWSDLExtensibilityPlugins(javax.wsdl.extensions.ExtensionRegistry)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildTypes(java.util.Collection,java.util.Map,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addNamespace(java.lang.String,java.lang.String,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(java.net.URL)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(org.w3c.dom.Element)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void addDefinition(java.lang.Object,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition loadDefinition(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void putSchemasForDefinition(javax.wsdl.Definition,org.apache.cxf.service.model.ServiceSchemaInfo)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void processExtension(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadAndRegister(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void <init>(java.util.Map,java.util.Map)",
            "org.apache.cxf.bus.CXFBusImpl:void setExtension(java.lang.Object,java.lang.Class)",
            "org.apache.cxf.attachment.AttachmentImpl:void setHeader(java.lang.String,java.lang.String)",
            "org.apache.cxf.attachment.AttachmentUtil:java.util.Map getDHMap(java.util.Collection)",
            "org.apache.cxf.frontend.ClientProxyFactoryBean:java.lang.Object create()",
            "org.apache.cxf.frontend.SimpleMethodDispatcher:void bind(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method[])",
            "org.apache.cxf.frontend.SimpleMethodDispatcher:org.apache.cxf.service.model.BindingOperationInfo getBindingOperation(java.lang.reflect.Method,org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory:org.apache.cxf.endpoint.Endpoint createEndpoint()",
            "org.apache.cxf.aegis.Context:void setProperty(java.lang.Object)",
            "org.apache.cxf.aegis.util.jdom.StaxBuilder:void <clinit>()",
            "org.apache.cxf.aegis.util.stax.JDOMStreamReader:void declare(org.jdom.Namespace)",
            "org.apache.cxf.aegis.databinding.XMLStreamDataWriter:void setProperty(java.lang.String,java.lang.Object)",
            "org.apache.cxf.aegis.databinding.ElementDataWriter:void setProperty(java.lang.String,java.lang.Object)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void initializeMessage(org.apache.cxf.service.Service,org.apache.cxf.aegis.type.TypeMapping,org.apache.cxf.service.model.AbstractMessageContainer,int,java.util.Set)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:org.apache.cxf.aegis.type.Type getParameterType(org.apache.cxf.service.Service,org.apache.cxf.aegis.type.TypeMapping,org.apache.cxf.service.model.MessagePartInfo,int)",
            "org.apache.cxf.aegis.type.basic.XMLBeanTypeInfo:org.apache.cxf.aegis.type.basic.BeanTypePropertyInfo ensurePropertyInfo(javax.xml.namespace.QName)",
            "org.apache.cxf.aegis.type.basic.InterfaceInvocationHandler:void writeProperty(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.aegis.type.basic.BeanTypeInfo:void mapType(javax.xml.namespace.QName,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.basic.BeanTypeInfo:void mapAttribute(java.lang.String,javax.xml.namespace.QName)",
            "org.apache.cxf.aegis.type.basic.BeanTypeInfo:void mapElement(java.lang.String,javax.xml.namespace.QName)",
            "org.apache.cxf.aegis.type.basic.BeanTypeInfo:void mapTypeName(javax.xml.namespace.QName,javax.xml.namespace.QName)",
            "org.apache.cxf.aegis.type.encoded.MarshalRegistry:java.lang.String getInstanceId(java.lang.Object)",
            "org.apache.cxf.aegis.type.XMLTypeCreator:org.w3c.dom.Document getDocument(java.lang.Class)",
            "org.apache.cxf.aegis.type.DefaultTypeMapping:void register(org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.collection.MapType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.jaxws.handler.HandlerResolverImpl:java.util.List getHandlerChain(javax.xml.ws.handler.PortInfo)",
            "org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean:void initSchemaLocations()",
            "org.apache.cxf.jaxws.support.JaxWsServiceConfiguration:javax.jws.WebParam getWebParam(java.lang.reflect.Method,int)",
            "org.apache.cxf.jaxws.support.JaxWsServiceConfiguration:java.lang.Class getResponseWrapper(java.lang.reflect.Method)",
            "org.apache.cxf.jaxws.support.JaxWsServiceConfiguration:java.lang.Class getRequestWrapper(java.lang.reflect.Method)",
            "org.apache.cxf.jaxws.JaxWsClientProxy:void setupEndpointAddressContext(org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.jaxws.JaxWsClientProxy:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])",
            "org.apache.cxf.jaxws.ServiceImpl:void addPort(javax.xml.namespace.QName,java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxws.DispatchImpl:java.lang.Object invoke(java.lang.Object,boolean)",
            "org.apache.cxf.jaxws.interceptors.SwAOutInterceptor:boolean callSWARefMethod(javax.xml.bind.JAXBContext)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:void <init>(java.util.Map,org.apache.cxf.message.Exchange,javax.xml.ws.handler.MessageContext$Scope)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:void copyScoped(java.util.Map)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:java.lang.Object createAttachments(org.apache.cxf.message.Message,java.lang.String)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:java.lang.Object put(java.lang.String,java.lang.Object,javax.xml.ws.handler.MessageContext$Scope)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:void setScope(java.lang.String,javax.xml.ws.handler.MessageContext$Scope)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:void <clinit>()",
            "org.apache.cxf.xmlbeans.XmlBeansSchemaInitializer:org.apache.ws.commons.schema.XmlSchema getSchema(org.apache.xmlbeans.SchemaTypeSystem,java.lang.String)",
            "org.apache.cxf.xmlbeans.XmlBeansSchemaInitializer:void <clinit>()",
            "org.apache.cxf.xmlbeans.tools.XMLBeansSchemaTypeUtils:void <clinit>()",
            "org.apache.cxf.xmlbeans.tools.XMLBeansToolingDataBinding:void <clinit>()"
        ]
    },
    "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:int size()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap$SpringBeanMapWrapper:int size()"
        ]
    },
    "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl:boolean isEmpty()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo addOutOfBandMessagePart(javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.soap.SoapBindingFactory:void buildMessage(org.apache.cxf.service.model.MessageInfo,javax.wsdl.Message,org.apache.cxf.common.xmlschema.SchemaCollection,int,java.lang.String)"
        ]
    },
    "org.apache.cxf.service.model.AbstractMessageContainer:int size()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void checkForWrapped(org.apache.cxf.service.model.OperationInfo,boolean)",
            "org.apache.cxf.jaxws.support.JaxWsServiceConfiguration:javax.xml.namespace.QName getInParameterName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)",
            "org.apache.cxf.jaxws.support.JaxWsServiceConfiguration:javax.xml.namespace.QName getOutParameterName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)",
            "org.apache.cxf.jaxws.interceptors.HolderOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.interceptors.HolderInInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.service.model.OperationInfo:boolean hasFaults()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromClass()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void validateServiceModel()"
        ]
    },
    "org.apache.cxf.tools.common.ToolContext:boolean isExcludeNamespaceEnabled()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxws.context.WrappedMessageContext:int size()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.WeakIdentityHashMap:int size()",
            "org.apache.cxf.common.util.CacheMap:int size()",
            "org.apache.cxf.common.util.TwoStageMap:int size()",
            "org.apache.cxf.common.util.TwoStageMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:int size()",
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.util.Map keepInOrder(java.util.Map,org.apache.cxf.service.model.OperationInfo,java.util.List)",
            "org.apache.cxf.transport.http.HTTPConduit:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.RMManager:void shutdown()",
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl:boolean isEmpty()",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.wsdl.Port getPort(org.apache.cxf.wsdl.WSDLManager,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.service.model.AbstractMessageContainer:void addMessagePart(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo addOutOfBandMessagePart(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.AbstractMessageContainer:int size()",
            "org.apache.cxf.service.model.OperationInfo:boolean hasFaults()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createMessageParts(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.binding.soap.interceptor.SoapPreProtocolOutInterceptor:void setSoapAction(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.tools.common.ToolContext:boolean isExcludeNamespaceEnabled()",
            "org.apache.cxf.wsdl11.SchemaUtil:void addSchema(java.lang.String,javax.wsdl.extensions.schema.Schema)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildMockServices(javax.wsdl.Definition)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:int size()"
        ]
    },
    "org.apache.cxf.configuration.spring.AbstractSpringBeanMap$SpringBeanMapWrapper:void putAll(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.MapNamespaceContext:void addNamespaces(java.util.Map)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:void putAll(java.util.Map)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void <init>(org.apache.cxf.Bus,java.util.Map,java.util.Map)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] processResult(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,java.util.Map)",
            "org.apache.cxf.endpoint.ClientImpl$EchoContext:void putAll(java.util.Map)",
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.RelatesToType convert(org.apache.cxf.ws.addressing.v200408.Relationship)",
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.RelatesToType convert(org.apache.cxf.ws.addressing.v200403.Relationship)",
            "org.apache.cxf.ws.addressing.VersionTransformer:void putAll(java.util.Map,java.util.Map)",
            "org.apache.cxf.ws.security.trust.STSClient:void setProperties(java.util.Map)",
            "org.apache.cxf.ws.security.trust.STSClient:org.apache.cxf.ws.security.tokenstore.SecurityToken requestSecurityToken(java.lang.String,java.lang.String,java.lang.String,org.apache.cxf.ws.security.tokenstore.SecurityToken)",
            "org.apache.cxf.ws.security.trust.STSClient:boolean validateSecurityToken(org.apache.cxf.ws.security.tokenstore.SecurityToken,java.lang.String)",
            "org.apache.cxf.ws.security.trust.STSClient:void cancelSecurityToken(org.apache.cxf.ws.security.tokenstore.SecurityToken)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void doEndorse()",
            "org.apache.cxf.tools.common.ToolContext:void loadDefaultNS2Pck(java.io.InputStream)",
            "org.apache.cxf.tools.common.ToolContext:void loadDefaultExcludes(java.io.InputStream)",
            "org.apache.cxf.wsdl11.SchemaUtil:void extractSchema(javax.wsdl.Definition,org.apache.cxf.common.xmlschema.SchemaCollection,java.util.List)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void getSchemas(javax.wsdl.Definition,org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.jaxws.JaxWsProxyFactoryBean:org.apache.cxf.frontend.ClientProxy clientClientProxy(org.apache.cxf.endpoint.Client)",
            "org.apache.cxf.jaxws.EndpointImpl:org.apache.cxf.endpoint.ServerImpl getServer(java.lang.String)"
        ]
    },
    "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineFactoryBeanDefinitionParser$SpringJettyHTTPServerEngineFactory:void <init>(org.apache.cxf.Bus,java.util.Map,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.addressing.soap.VersionTransformer:java.lang.Object decodeAsNative(java.lang.String,java.lang.Class,org.w3c.dom.Element,javax.xml.bind.Unmarshaller)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.soap.MAPCodec:java.lang.Object decodeAsNative(java.lang.String,java.lang.Class,org.w3c.dom.Element,javax.xml.bind.Unmarshaller)"
        ]
    },
    "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.v200408.AttributedURI convert(org.apache.cxf.ws.addressing.AttributedURIType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.v200408.EndpointReferenceType convert(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.ws.addressing.soap.VersionTransformer:void encodeAsExposed(java.lang.String,java.lang.Object,java.lang.String,java.lang.Class,org.w3c.dom.Element,javax.xml.bind.Marshaller)",
            "org.apache.cxf.ws.rm.Servant:org.apache.cxf.ws.rm.CreateSequenceResponseType createSequence(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.RMOutInterceptor:void handle(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.v200403.AttributedURI convertTo200403(org.apache.cxf.ws.addressing.AttributedURIType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.v200403.EndpointReferenceType convertTo200403(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.ws.addressing.soap.VersionTransformer:void encodeAsExposed(java.lang.String,java.lang.Object,java.lang.String,java.lang.Class,org.w3c.dom.Element,javax.xml.bind.Marshaller)"
        ]
    },
    "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.AttributedURIType convert(org.apache.cxf.ws.addressing.v200408.AttributedURI)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.EndpointReferenceType convert(org.apache.cxf.ws.addressing.v200408.EndpointReferenceType)",
            "org.apache.cxf.ws.addressing.soap.VersionTransformer:java.lang.Object decodeAsNative(java.lang.String,java.lang.Class,org.w3c.dom.Element,javax.xml.bind.Unmarshaller)"
        ]
    },
    "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.AttributedURIType convert(org.apache.cxf.ws.addressing.v200403.AttributedURI)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.EndpointReferenceType convert(org.apache.cxf.ws.addressing.v200403.EndpointReferenceType)",
            "org.apache.cxf.ws.addressing.soap.VersionTransformer:java.lang.Object decodeAsNative(java.lang.String,java.lang.Class,org.w3c.dom.Element,javax.xml.bind.Unmarshaller)"
        ]
    },
    "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.EndpointReferenceType convert(org.apache.cxf.ws.addressing.v200408.EndpointReferenceType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.soap.VersionTransformer:java.lang.Object decodeAsNative(java.lang.String,java.lang.Class,org.w3c.dom.Element,javax.xml.bind.Unmarshaller)",
            "org.apache.cxf.ws.rm.Servant:org.apache.cxf.ws.rm.CreateSequenceResponseType createSequence(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.EndpointReferenceType convert(org.apache.cxf.ws.addressing.v200403.EndpointReferenceType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.soap.VersionTransformer:java.lang.Object decodeAsNative(java.lang.String,java.lang.Class,org.w3c.dom.Element,javax.xml.bind.Unmarshaller)"
        ]
    },
    "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.v200408.Relationship convert(org.apache.cxf.ws.addressing.RelatesToType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.soap.VersionTransformer:void encodeAsExposed(java.lang.String,java.lang.Object,java.lang.String,java.lang.Class,org.w3c.dom.Element,javax.xml.bind.Marshaller)"
        ]
    },
    "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.v200403.Relationship convertTo200403(org.apache.cxf.ws.addressing.RelatesToType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.soap.VersionTransformer:void encodeAsExposed(java.lang.String,java.lang.Object,java.lang.String,java.lang.Class,org.w3c.dom.Element,javax.xml.bind.Marshaller)"
        ]
    },
    "org.apache.cxf.frontend.ClientProxyFactoryBean:java.lang.Object create()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.JaxWsProxyFactoryBean:java.lang.Object create()"
        ]
    },
    "org.apache.cxf.jaxws.EndpointImpl:void doPublish(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.EndpointImpl:void publish(java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxws.EndpointImpl:org.apache.cxf.endpoint.ServerImpl getServer()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxws.EndpointImpl:org.apache.cxf.endpoint.Endpoint getEndpoint()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.EndpointImpl:javax.xml.ws.Binding getBinding()",
            "org.apache.cxf.jaxws.EndpointImpl:org.apache.cxf.endpoint.ServerImpl getServer(java.lang.String)"
        ]
    },
    "org.apache.cxf.service.invoker.PerRequestFactory:java.lang.Object create(org.apache.cxf.message.Exchange)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.invoker.SessionFactory:java.lang.Object create(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.service.invoker.SingletonFactory:void createBean(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.service.invoker.PooledFactory:java.lang.Object createObject(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.service.invoker.FactoryInvoker:java.lang.Object getServiceObject(org.apache.cxf.message.Exchange)"
        ]
    },
    "org.apache.cxf.jaxws.handler.HandlerResolverImpl:void configHandler(javax.xml.ws.handler.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.handler.HandlerResolverImpl:java.util.List createHandlerChain(javax.xml.ws.handler.PortInfo)"
        ]
    },
    "org.apache.cxf.jaxws.handler.HandlerChainBuilder:void initializeViaInjection(javax.xml.ws.handler.Handler,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.handler.HandlerChainBuilder:void configureHandler(javax.xml.ws.handler.Handler,org.apache.cxf.jaxws.javaee.PortComponentHandlerType)"
        ]
    },
    "org.apache.cxf.jaxws.JaxWsServerFactoryBean:void injectResources(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.JaxWsServerFactoryBean:void init()",
            "org.apache.cxf.jaxws.JaxWsServerFactoryBean:void buildHandlerChain()"
        ]
    },
    "org.apache.cxf.bus.spring.Jsr250BeanPostProcessor:void postProcessBeforeDestruction(java.lang.Object,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.injection.ResourceInjector:void inject(java.lang.Object,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.injection.ResourceInjector:void inject(java.lang.Object)",
            "org.apache.cxf.jaxws.JaxWsProxyFactoryBean:void buildHandlerChain(org.apache.cxf.jaxws.JaxWsClientProxy)",
            "org.apache.cxf.jaxws.JaxWsServerFactoryBean:void injectResources(java.lang.Object)"
        ]
    },
    "org.apache.cxf.common.annotation.AnnotationProcessor:void accept(org.apache.cxf.common.'annotation'.AnnotationVisitor)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.wsdl11.ResourceManagerWSDLLocator:org.xml.sax.InputSource getInputSource()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.AbstractWrapperWSDLLocator:org.xml.sax.InputSource getBaseInputSource()"
        ]
    },
    "org.apache.cxf.common.injection.ResourceInjector:java.lang.Object resolveResource(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.injection.ResourceInjector:void injectResourceClassLevel(java.lang.Class,javax.'annotation'.Resource)",
            "org.apache.cxf.common.injection.ResourceInjector:void visitField(java.lang.reflect.Field,java.lang.'annotation'.Annotation)",
            "org.apache.cxf.common.injection.ResourceInjector:void visitMethod(java.lang.reflect.Method,java.lang.'annotation'.Annotation)"
        ]
    },
    "org.apache.cxf.configuration.spring.AbstractSpringBeanMap$SpringBeanMapWrapper:java.lang.Object remove(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:void reap()",
            "org.apache.cxf.common.util.CacheMap:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.common.util.TwoStageMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.common.util.TwoStageMap:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.message.MessageImpl:void removeContent(java.lang.Class)",
            "org.apache.cxf.transport.ConduitInitiatorManagerImpl:void deregisterConduitInitiator(java.lang.String)",
            "org.apache.cxf.transport.http.Cookie:void handleSetCookie(java.util.Map,java.util.List)",
            "org.apache.cxf.transport.http.HTTPConduit:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection redirectRetransmit(java.net.HttpURLConnection,org.apache.cxf.message.Message,org.apache.cxf.io.CacheAndWriteOutputStream)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:java.io.OutputStream flushHeaders(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.gzip.GZIPInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.DestinationFactoryManagerImpl:void deregisterDestinationFactory(java.lang.String)",
            "org.apache.cxf.transport.servlet.ServletTransportFactory:void removeDestination(java.lang.String)",
            "org.apache.cxf.transport.servlet.AbstractCXFServlet:void destroy()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPTransportFactory:void removeDestination(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void destroyForPort(int)",
            "org.apache.cxf.transport.jms.JMSConduit:void sendExchange(org.apache.cxf.message.Exchange,java.lang.Object)",
            "org.apache.cxf.transport.jms.JMSConduit:void onMessage(javax.jms.Message)",
            "org.apache.cxf.extension.RegistryImpl:void unregister(java.lang.Object)",
            "org.apache.cxf.endpoint.ClientImpl$EchoContext:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void handleFault(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void restoreExchange(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.addressing.AddressingProperties)",
            "org.apache.cxf.ws.policy.PolicyRegistryImpl:void remove(java.lang.String)",
            "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:void remove(org.apache.cxf.ws.security.tokenstore.SecurityToken)",
            "org.apache.cxf.ws.rm.Source:void removeSequence(org.apache.cxf.ws.rm.SourceSequence)",
            "org.apache.cxf.ws.rm.Destination:void removeSequence(org.apache.cxf.ws.rm.DestinationSequence)",
            "org.apache.cxf.ws.rm.RMManager:void shutdownReliableEndpoint(org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl:void purgeAcknowledged(org.apache.cxf.ws.rm.SourceSequence)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils$SchemaLSResourceResolver:org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.service.model.AbstractMessageContainer:void removeMessagePart(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:void setProperty(java.lang.String,java.lang.Object)",
            "org.apache.cxf.service.model.InterfaceInfo:void removeOperation(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.BindingInfo:void removeOperation(org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.service.model.OperationInfo:void removeFault(javax.xml.namespace.QName)",
            "org.apache.cxf.binding.BindingFactoryManagerImpl:void unregisterBindingFactory(java.lang.String)",
            "org.apache.cxf.clustering.FailoverTargetSelector:void complete(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.tools.common.ToolContext:void remove(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void removeDefinition(javax.wsdl.Definition)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void activateViaNS(java.lang.String)",
            "org.apache.cxf.aegis.type.DefaultTypeMapping:void removeType(org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.jaxws.JaxWsClientProxy:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.jaxws.AbstractJAXWSMethodInvoker:void updateWebServiceContext(org.apache.cxf.message.Exchange,javax.xml.ws.handler.MessageContext)"
        ]
    },
    "org.apache.cxf.configuration.jsse.spring.TLSParameterJaxBUtils:javax.net.ssl.TrustManager[] getTrustManagers(org.apache.cxf.configuration.security.TrustManagersType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.jsse.spring.TLSClientParametersConfig:org.apache.cxf.configuration.jsse.TLSClientParameters createTLSClientParametersFromType(org.apache.cxf.configuration.security.TLSClientParametersType)",
            "org.apache.cxf.configuration.jsse.spring.TLSServerParametersConfig:void <init>(org.apache.cxf.configuration.security.TLSServerParametersType)"
        ]
    },
    "org.apache.cxf.jaxb.JAXBDataBinding:org.apache.cxf.databinding.WrapperHelper createWrapperHelper(java.lang.Class,java.util.List,java.util.List,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.interceptors.WrapperClassOutInterceptor:org.apache.cxf.databinding.WrapperHelper createWrapperHelper(org.apache.cxf.databinding.WrapperCapableDatabinding,org.apache.cxf.service.model.MessageInfo,org.apache.cxf.service.model.MessageInfo,java.lang.Class)",
            "org.apache.cxf.jaxws.interceptors.WrapperClassInInterceptor:org.apache.cxf.databinding.WrapperHelper createWrapperHelper(org.apache.cxf.databinding.WrapperCapableDatabinding,org.apache.cxf.service.model.MessageInfo,org.apache.cxf.service.model.MessageInfo,java.lang.Class)"
        ]
    },
    "org.apache.cxf.jaxb.JAXBDataBinding:java.lang.reflect.Field getElField(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.JAXBDataBinding:org.apache.cxf.databinding.WrapperHelper createWrapperHelper(java.lang.Class,java.util.List,java.util.List,java.util.List)"
        ]
    },
    "org.apache.cxf.ws.policy.builder.jaxb.JaxbAssertionBuilder:void <init>(javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.xmlbeans.XmlBeansDataBinding:org.apache.cxf.databinding.WrapperHelper createWrapperHelper(java.lang.Class,java.util.List,java.util.List,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.interceptors.WrapperClassOutInterceptor:org.apache.cxf.databinding.WrapperHelper createWrapperHelper(org.apache.cxf.databinding.WrapperCapableDatabinding,org.apache.cxf.service.model.MessageInfo,org.apache.cxf.service.model.MessageInfo,java.lang.Class)",
            "org.apache.cxf.jaxws.interceptors.WrapperClassInInterceptor:org.apache.cxf.databinding.WrapperHelper createWrapperHelper(org.apache.cxf.databinding.WrapperCapableDatabinding,org.apache.cxf.service.model.MessageInfo,org.apache.cxf.service.model.MessageInfo,java.lang.Class)"
        ]
    },
    "org.apache.cxf.jaxb.io.DataWriterImpl:void write(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxb.io.DataReaderImpl:java.lang.Object read(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.stax.StaxDataBindingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.soap.interceptor.ReadHeadersInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.saaj.SAAJInInterceptor:void replaceHeaders(javax.xml.soap.SOAPMessage,org.apache.cxf.binding.soap.SoapMessage)"
        ]
    },
    "org.apache.cxf.management.utils.ManagementConsole:void main(java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.staxutils.StaxSource:void parse(org.xml.sax.InputSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:void copy(javax.xml.transform.Source,javax.xml.stream.XMLStreamWriter)"
        ]
    },
    "org.apache.cxf.staxutils.StaxSource:void parse(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.staxutils.CachingXmlEventWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeAttributeEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:void writeNode(org.w3c.dom.Node,javax.xml.stream.XMLStreamWriter,boolean)",
            "org.apache.cxf.aegis.type.xml.DocumentType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.xml.SourceType:void write(javax.xml.transform.Source,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.jaxws.spi.ProviderImpl:javax.xml.ws.wsaddressing.W3CEndpointReference createW3CEndpointReference(java.lang.String,javax.xml.namespace.QName,javax.xml.namespace.QName,java.util.List,java.lang.String,java.util.List)"
        ]
    },
    "org.apache.cxf.aegis.type.TypeUtil:org.apache.cxf.aegis.type.Type getReadType(javax.xml.stream.XMLStreamReader,org.apache.cxf.aegis.AegisContext,org.apache.cxf.aegis.type.Type)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.basic.BeanType:org.apache.cxf.aegis.type.Type getElementType(javax.xml.namespace.QName,org.apache.cxf.aegis.type.basic.BeanTypeInfo,org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.ArrayType:java.util.Collection readCollection(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.SoapArrayType:java.util.List readCollection(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.encoded.ArrayTypeInfo,int)",
            "org.apache.cxf.aegis.type.TypeUtil:org.apache.cxf.aegis.type.Type getReadTypeStandalone(javax.xml.stream.XMLStreamReader,org.apache.cxf.aegis.AegisContext,org.apache.cxf.aegis.type.Type)"
        ]
    },
    "org.apache.cxf.aegis.type.TypeUtil:org.apache.cxf.aegis.type.Type getReadTypeStandalone(javax.xml.stream.XMLStreamReader,org.apache.cxf.aegis.AegisContext,org.apache.cxf.aegis.type.Type)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.AegisXMLStreamDataReader:java.lang.Object read(javax.xml.stream.XMLStreamReader,org.apache.cxf.aegis.type.Type)"
        ]
    },
    "org.apache.cxf.aegis.xml.stax.ElementReader:void <init>(org.apache.cxf.staxutils.DepthXMLStreamReader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.xml.stax.ElementReader:void <init>(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.aegis.xml.stax.ElementReader:org.apache.cxf.aegis.xml.MessageReader getNextElementReader()"
        ]
    },
    "org.apache.cxf.aegis.xml.stax.ElementReader:void <init>(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.binding.xml.interceptor.XMLMessageOutInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.binding.xml.interceptor.XMLMessageOutInterceptor:void writeMessage(org.apache.cxf.message.Message,javax.xml.namespace.QName,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.xml.interceptor.XMLMessageOutInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit:void <init>(org.apache.cxf.Bus,org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.ws.addressing.EndpointReferenceType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.AbstractHTTPTransportFactory:org.apache.cxf.transport.Conduit getConduit(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.transport.http.HTTPConduit:void <init>(org.apache.cxf.Bus,org.apache.cxf.service.model.EndpointInfo)"
        ]
    },
    "org.apache.cxf.transport.http.AbstractHTTPDestination:void <init>(org.apache.cxf.Bus,org.apache.cxf.transport.ConduitInitiator,org.apache.cxf.service.model.EndpointInfo,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.servlet.ServletDestination:void <init>(org.apache.cxf.Bus,org.apache.cxf.transport.ConduitInitiator,org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.transport.servlet.ServletTransportFactory,java.lang.String)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void <init>(org.apache.cxf.Bus,org.apache.cxf.transport.http_jetty.JettyHTTPTransportFactory,org.apache.cxf.service.model.EndpointInfo)"
        ]
    },
    "org.apache.cxf.ws.policy.AbstractPolicyInterceptor:void getTransportAssertions(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.PolicyVerificationInInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.policy.PolicyVerificationOutInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.policy.PolicyVerificationInFaultInterceptor:void handle(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit:void access$000(org.apache.cxf.transport.http.HTTPConduit,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleHeadersTrustCaching()"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection processRetransmit(java.net.HttpURLConnection,org.apache.cxf.message.Message,org.apache.cxf.io.CacheAndWriteOutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection access$300(org.apache.cxf.transport.http.HTTPConduit,java.net.HttpURLConnection,org.apache.cxf.message.Message,org.apache.cxf.io.CacheAndWriteOutputStream)"
        ]
    },
    "org.apache.cxf.transport.http.AbstractHTTPDestination$WrappedOutputStream:void onFirstWrite()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.io.AbstractWrappedOutputStream:void write(byte[],int,int)",
            "org.apache.cxf.io.AbstractWrappedOutputStream:void write(int)"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit:void setUpDecoupledDestination()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:org.apache.cxf.transport.Destination getBackChannel()"
        ]
    },
    "org.apache.cxf.endpoint.ServerImpl:void <init>(org.apache.cxf.Bus,org.apache.cxf.endpoint.Endpoint,org.apache.cxf.transport.DestinationFactory,org.apache.cxf.transport.MessageObserver)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.endpoint.ServerImpl:void <init>(org.apache.cxf.Bus,org.apache.cxf.endpoint.Endpoint,org.apache.cxf.transport.DestinationFactory,org.apache.cxf.binding.BindingFactory)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.frontend.ServerFactoryBean:org.apache.cxf.endpoint.Server create()"
        ]
    },
    "org.apache.cxf.transport.https.CertificateHostnameVerifier$AbstractVerifier:boolean verify(java.lang.String,javax.net.ssl.SSLSession)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.https.CertificateHostnameVerifier$AbstractVerifier:void check(java.lang.String,java.security.cert.X509Certificate)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.https.CertificateHostnameVerifier$AbstractVerifier:void check(java.lang.String[],javax.net.ssl.SSLSocket)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.https.CertificateHostnameVerifier$AbstractVerifier:void check(java.lang.String,javax.net.ssl.SSLSocket)"
        ]
    },
    "org.apache.cxf.transport.https.HttpsURLConnectionFactory:void decorateWithTLS(java.net.HttpURLConnection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.https.HttpsURLConnectionFactory:java.net.HttpURLConnection createConnection(java.net.Proxy,java.net.URL)"
        ]
    },
    "org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector:javax.net.ssl.SSLServerSocketFactory createFactory()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.https.CertificateHostnameVerifier$AbstractVerifier:void check(java.lang.String,java.lang.String[],java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.AbstractObservable:void setMessageObserver(org.apache.cxf.transport.MessageObserver)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.TransportURIResolver:org.xml.sax.InputSource resolve(java.lang.String,java.lang.String)",
            "org.apache.cxf.transport.http.HTTPConduit:org.apache.cxf.transport.Destination getDestination(java.lang.String)",
            "org.apache.cxf.transport.http.HTTPConduit:void releaseDecoupledDestination()",
            "org.apache.cxf.transport.AbstractDestination:org.apache.cxf.transport.Conduit getBackChannel(org.apache.cxf.message.Message,org.apache.cxf.message.Message,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.endpoint.PreexistingConduitSelector:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.AbstractConduitSelector:org.apache.cxf.transport.Conduit getSelectedConduit(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ServerImpl:void start()",
            "org.apache.cxf.endpoint.ServerImpl:void stop()",
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl:void serverResend(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.AbstractBindingFactory:void addListener(org.apache.cxf.transport.Destination,org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:void addListener(org.apache.cxf.transport.Destination,org.apache.cxf.endpoint.Endpoint)"
        ]
    },
    "org.apache.cxf.transport.jms.JMSConduit$1:javax.jms.Message createMessage(javax.jms.Session)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.endpoint.ClientImpl:void <init>(org.apache.cxf.Bus,org.apache.cxf.endpoint.Endpoint,org.apache.cxf.endpoint.ConduitSelector)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:void <init>(org.apache.cxf.Bus,org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.endpoint.ClientImpl:void <init>(org.apache.cxf.Bus,org.apache.cxf.endpoint.Endpoint,org.apache.cxf.transport.Conduit)",
            "org.apache.cxf.ws.rm.Proxy$RMClient:void <init>(org.apache.cxf.ws.rm.Proxy,org.apache.cxf.Bus,org.apache.cxf.endpoint.Endpoint,org.apache.cxf.endpoint.ConduitSelector)",
            "org.apache.cxf.frontend.ClientFactoryBean:void createClient(org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.jaxws.ServiceImpl:javax.xml.ws.Dispatch createDispatch(javax.xml.namespace.QName,java.lang.Class,javax.xml.ws.Service$Mode,javax.xml.ws.WebServiceFeature[])",
            "org.apache.cxf.jaxws.ServiceImpl:javax.xml.ws.Dispatch createDispatch(javax.xml.namespace.QName,javax.xml.bind.JAXBContext,javax.xml.ws.Service$Mode,javax.xml.ws.WebServiceFeature[])"
        ]
    },
    "org.apache.cxf.endpoint.ManagedEndpoint:void start()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.AbstractMultiplexDestination:org.apache.cxf.ws.addressing.EndpointReferenceType getAddressWithId(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.AbstractHTTPDestination:org.apache.cxf.ws.addressing.EndpointReferenceType getAddressWithId(java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:org.apache.cxf.ws.addressing.EndpointReferenceType getEndpointReferenceWithId(javax.xml.namespace.QName,java.lang.String,java.lang.String,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.jaxws.spi.ProviderImpl:javax.xml.ws.spi.ServiceDelegate createServiceDelegate(java.net.URL,javax.xml.namespace.QName,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.spi.ProviderImpl:java.lang.Object getPort(javax.xml.ws.EndpointReference,java.lang.Class,javax.xml.ws.WebServiceFeature[])"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:void <init>(java.net.URL)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.endpoint.ClientImpl:void <init>(java.net.URL,javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.endpoint.ClientImpl:void <init>(org.apache.cxf.Bus,java.net.URL,javax.xml.namespace.QName,javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:org.apache.cxf.endpoint.Client createClient(java.lang.String,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:org.apache.cxf.endpoint.Client createClient(java.lang.String,javax.xml.namespace.QName,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:org.apache.cxf.endpoint.Client createClient(java.lang.String,java.lang.ClassLoader)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:org.apache.cxf.endpoint.Client createClient(java.lang.String,javax.xml.namespace.QName,javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:org.apache.cxf.endpoint.Client createClient(java.lang.String)",
            "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:org.apache.cxf.endpoint.Client createClient(java.lang.String,javax.xml.namespace.QName)"
        ]
    },
    "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:org.apache.cxf.endpoint.Client createClient(java.net.URL,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:org.apache.cxf.endpoint.Client createClient(java.net.URL,javax.xml.namespace.QName,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:org.apache.cxf.endpoint.Client createClient(java.net.URL,java.lang.ClassLoader)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:org.apache.cxf.endpoint.Client createClient(java.net.URL,javax.xml.namespace.QName,javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:org.apache.cxf.endpoint.Client createClient(java.net.URL)",
            "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:org.apache.cxf.endpoint.Client createClient(java.net.URL,javax.xml.namespace.QName)"
        ]
    },
    "org.apache.cxf.ws.addressing.MAPAggregator:org.apache.cxf.ws.addressing.AddressingPropertiesImpl assembleGeneric(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.MAPAggregator:void aggregate(org.apache.cxf.message.Message,boolean)"
        ]
    },
    "org.apache.cxf.ws.addressing.MAPAggregator:boolean usingAddressing(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.MAPAggregator:boolean mediate(org.apache.cxf.message.Message,boolean)"
        ]
    },
    "org.apache.cxf.ws.addressing.soap.MAPCodec:void mediate(org.apache.cxf.binding.soap.SoapMessage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)"
        ]
    },
    "org.apache.cxf.ws.policy.util.PolicyComparator:boolean compare(org.apache.neethi.PolicyComponent,org.apache.neethi.PolicyComponent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.util.PolicyComparator:boolean compare(java.util.List,java.util.List)"
        ]
    },
    "org.apache.cxf.ws.addressing.policy.AddressingAssertionBuilder:org.apache.cxf.ws.policy.PolicyAssertion buildCompatible(org.apache.cxf.ws.policy.PolicyAssertion,org.apache.cxf.ws.policy.PolicyAssertion)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.Intersector:boolean compatibleAssertions(org.apache.cxf.ws.policy.PolicyAssertion,org.apache.cxf.ws.policy.PolicyAssertion)",
            "org.apache.cxf.ws.policy.Intersector:org.apache.cxf.ws.policy.PolicyAssertion intersect(org.apache.cxf.ws.policy.PolicyAssertion,org.apache.cxf.ws.policy.PolicyAssertion)"
        ]
    },
    "org.apache.cxf.ws.policy.Intersector:boolean compatibleAssertions(org.apache.cxf.ws.policy.PolicyAssertion,org.apache.cxf.ws.policy.PolicyAssertion)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.policy.Intersector:org.apache.cxf.ws.policy.PolicyAssertion intersect(org.apache.cxf.ws.policy.PolicyAssertion,org.apache.cxf.ws.policy.PolicyAssertion)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.Intersector:org.apache.cxf.ws.policy.PolicyAssertion findCompatibleAssertion(org.apache.cxf.ws.policy.PolicyAssertion,java.util.Collection)"
        ]
    },
    "org.apache.cxf.ws.policy.mtom.MTOMAssertionBuilder:org.apache.cxf.ws.policy.PolicyAssertion buildCompatible(org.apache.cxf.ws.policy.PolicyAssertion,org.apache.cxf.ws.policy.PolicyAssertion)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.Intersector:boolean compatibleAssertions(org.apache.cxf.ws.policy.PolicyAssertion,org.apache.cxf.ws.policy.PolicyAssertion)",
            "org.apache.cxf.ws.policy.Intersector:org.apache.cxf.ws.policy.PolicyAssertion intersect(org.apache.cxf.ws.policy.PolicyAssertion,org.apache.cxf.ws.policy.PolicyAssertion)"
        ]
    },
    "org.apache.cxf.ws.policy.EndpointPolicyImpl:void finalizeConfig()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.EndpointPolicyImpl:org.apache.cxf.ws.policy.EndpointPolicy updatePolicy(org.apache.neethi.Policy)",
            "org.apache.cxf.ws.policy.EndpointPolicyImpl:void initialize()"
        ]
    },
    "org.apache.cxf.ws.policy.PolicyEngineImpl:org.apache.cxf.ws.policy.EndpointPolicyImpl createEndpointPolicyInfo(org.apache.cxf.service.model.EndpointInfo,boolean,org.apache.cxf.ws.policy.Assertor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.PolicyEngineImpl:org.apache.cxf.ws.policy.EndpointPolicy getEndpointPolicy(org.apache.cxf.service.model.EndpointInfo,boolean,org.apache.cxf.ws.policy.Assertor)"
        ]
    },
    "org.apache.cxf.ws.security.policy.WSSecurityPolicyLoader:void register()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.policy.PolicyEngineImpl:org.apache.cxf.ws.policy.EffectivePolicy getEffectiveClientFaultPolicy(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.service.model.BindingFaultInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.EndpointPolicyImpl:void initializeVocabulary()",
            "org.apache.cxf.ws.policy.PolicyVerificationInFaultInterceptor:void handle(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.ws.policy.PolicyEngineImpl:org.apache.cxf.ws.policy.EffectivePolicy getEffectiveClientRequestPolicy(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.transport.Conduit)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.EndpointPolicyImpl:void initializeVocabulary()",
            "org.apache.cxf.ws.policy.PolicyOutInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.trust.STSClient:org.apache.cxf.service.model.BindingOperationInfo findOperation(java.lang.String)"
        ]
    },
    "org.apache.cxf.ws.policy.PolicyEngineImpl:org.apache.cxf.ws.policy.EffectivePolicy getEffectiveServerResponsePolicy(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.transport.Destination)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.EndpointPolicyImpl:void initializeVocabulary()",
            "org.apache.cxf.ws.policy.PolicyOutInterceptor:void handle(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.ws.policy.PolicyEngineImpl:org.apache.cxf.ws.policy.EffectivePolicy getEffectiveServerRequestPolicy(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.service.model.BindingOperationInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.EndpointPolicyImpl:void initializeVocabulary()",
            "org.apache.cxf.ws.policy.EndpointPolicyImpl:void initializeInterceptors()",
            "org.apache.cxf.ws.policy.PolicyVerificationInInterceptor:void handle(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.ws.policy.PolicyEngineImpl:org.apache.cxf.ws.policy.EffectivePolicy getEffectiveClientResponsePolicy(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.service.model.BindingOperationInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.EndpointPolicyImpl:void initializeVocabulary()",
            "org.apache.cxf.ws.policy.PolicyInInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.policy.PolicyVerificationInInterceptor:void handle(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.ws.policy.PolicyEngineImpl:org.apache.cxf.ws.policy.EffectivePolicy getEffectiveServerFaultPolicy(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.service.model.BindingFaultInfo,org.apache.cxf.transport.Destination)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.EndpointPolicyImpl:void initializeVocabulary()",
            "org.apache.cxf.ws.policy.ServerPolicyOutFaultInterceptor:void handle(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.ws.policy.PolicyBuilderImpl:org.apache.neethi.PolicyOperator processOperationElement(org.w3c.dom.Element,org.apache.neethi.PolicyOperator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.PolicyBuilderImpl:org.apache.neethi.Policy getPolicyOperator(org.w3c.dom.Element)",
            "org.apache.cxf.ws.policy.PolicyBuilderImpl:org.apache.neethi.ExactlyOne getExactlyOneOperator(org.w3c.dom.Element)",
            "org.apache.cxf.ws.policy.PolicyBuilderImpl:org.apache.neethi.All getAllOperator(org.w3c.dom.Element)"
        ]
    },
    "org.apache.cxf.ws.security.policy.builders.TransportBindingBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.AssertionBuilderRegistryImpl:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)"
        ]
    },
    "org.apache.cxf.interceptor.ServiceInvokerInterceptor$1:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.ServiceInvokerInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl$3:void run()",
            "org.apache.cxf.workqueue.SynchronousExecutor:void execute(java.lang.Runnable)",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl$2:void run()",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void execute(java.lang.Runnable,long)",
            "org.apache.cxf.jaxws.ServiceImpl$1:void execute(java.lang.Runnable)"
        ]
    },
    "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl:org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl$ResendCandidate createResendCandidate(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl:org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl$ResendCandidate cacheUnacknowledged(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl:void addUnacknowledged(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.ws.rm.soap.RMSoapInterceptor:void mediate(org.apache.cxf.binding.soap.SoapMessage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.soap.RMSoapInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)"
        ]
    },
    "org.apache.cxf.phase.PhaseChainCache:org.apache.cxf.phase.PhaseInterceptorChain get(java.util.SortedSet,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.phase.PhaseChainCache:org.apache.cxf.phase.PhaseInterceptorChain get(java.util.SortedSet,java.util.List,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.phase.PhaseChainCache:org.apache.cxf.phase.PhaseInterceptorChain get(java.util.SortedSet,java.util.List,java.util.List,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:org.apache.cxf.phase.PhaseInterceptorChain getChain(org.apache.cxf.message.Exchange)"
        ]
    },
    "org.apache.cxf.phase.PhaseChainCache:org.apache.cxf.phase.PhaseInterceptorChain get(java.util.SortedSet,java.util.List,java.util.List,java.util.List,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:org.apache.cxf.phase.PhaseInterceptorChain getChain(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.transport.ChainInitiationObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ClientImpl:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ClientImpl:org.apache.cxf.phase.PhaseInterceptorChain setupInterceptorChain(org.apache.cxf.endpoint.Endpoint)"
        ]
    },
    "org.apache.cxf.phase.PhaseChainCache:org.apache.cxf.phase.PhaseInterceptorChain get(java.util.SortedSet,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.interceptor.OutFaultChainInitiatorObserver:void initializeInterceptors(org.apache.cxf.message.Exchange,org.apache.cxf.phase.PhaseInterceptorChain)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver:void onMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.InFaultChainInitiatorObserver:void initializeInterceptors(org.apache.cxf.message.Exchange,org.apache.cxf.phase.PhaseInterceptorChain)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver:void onMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.databinding.stax.StaxDataBindingFeature:void initialize(org.apache.cxf.endpoint.Client,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.frontend.ClientFactoryBean:void applyFeatures()",
            "org.apache.cxf.jaxws.ServiceImpl:javax.xml.ws.Dispatch createDispatch(javax.xml.namespace.QName,java.lang.Class,javax.xml.ws.Service$Mode,javax.xml.ws.WebServiceFeature[])",
            "org.apache.cxf.jaxws.ServiceImpl:javax.xml.ws.Dispatch createDispatch(javax.xml.namespace.QName,javax.xml.bind.JAXBContext,javax.xml.ws.Service$Mode,javax.xml.ws.WebServiceFeature[])"
        ]
    },
    "org.apache.cxf.databinding.stax.StaxDataBindingFeature:void initialize(org.apache.cxf.endpoint.Server,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.frontend.ServerFactoryBean:void applyFeatures()"
        ]
    },
    "org.apache.cxf.ws.addressing.soap.VersionTransformer:void encodeAsExposed(java.lang.String,java.lang.Object,java.lang.String,java.lang.Class,org.w3c.dom.Element,javax.xml.bind.Marshaller)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void encodeAsExposed(org.apache.cxf.ws.addressing.AddressingPropertiesImpl,org.apache.cxf.binding.soap.SoapMessage,java.lang.Object,javax.xml.namespace.QName,java.lang.Class,org.w3c.dom.Element,javax.xml.bind.Marshaller)"
        ]
    },
    "org.apache.cxf.ws.rm.RMUtils:org.apache.cxf.ws.addressing.v200408.EndpointReferenceType createAnonymousReference2004()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.RMManager:org.apache.cxf.ws.rm.SourceSequence getSequence(org.apache.cxf.ws.rm.Identifier,org.apache.cxf.message.Message,org.apache.cxf.ws.addressing.AddressingProperties)"
        ]
    },
    "org.apache.cxf.ws.rm.RMUtils:org.apache.cxf.ws.addressing.v200408.EndpointReferenceType createNoneReference2004()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.Servant:org.apache.cxf.ws.rm.CreateSequenceResponseType createSequence(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.PrettyLoggingOutInterceptor$LoggingCallback:void onClose(org.apache.cxf.io.CachedOutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.io.CachedOutputStream:void lockOutputStream()",
            "org.apache.cxf.io.CachedOutputStream:void close()"
        ]
    },
    "org.apache.cxf.attachment.AttachmentDataSource:java.io.InputStream getInputStream()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.attachment.JAXBAttachmentUnmarshaller:byte[] getAttachmentAsByteArray(java.lang.String)",
            "org.apache.cxf.databinding.source.XMLStreamDataWriter:void write(java.lang.Object,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.attachment.LazyDataSource:java.io.InputStream getInputStream()",
            "org.apache.cxf.attachment.AttachmentDeserializer:void cacheStreamedAttachments()",
            "org.apache.cxf.aegis.type.mtom.DataSourceType:byte[] getBytes(java.lang.Object)",
            "org.apache.cxf.jaxws.interceptors.MessageModeInInterceptor$MultiPartDataSource:void nextCurrent()",
            "org.apache.cxf.jaxws.interceptors.MessageModeOutInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void flush()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.servlet.ServletController:void invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl:void resend(org.apache.cxf.transport.Conduit,org.apache.cxf.message.Message)",
            "org.apache.cxf.io.CachedOutputStream:void flush()",
            "org.apache.cxf.io.CachedOutputStream:void lockOutputStream()",
            "org.apache.cxf.io.CachedOutputStream:void close()",
            "org.apache.cxf.io.AbstractWrappedOutputStream:void flush()",
            "org.apache.cxf.io.WriteOnCloseOutputStream:void doClose()",
            "org.apache.cxf.io.CacheAndWriteOutputStream:void closeFlowthroughStream()",
            "org.apache.cxf.io.CacheAndWriteOutputStream:void postClose()",
            "org.apache.cxf.attachment.AttachmentSerializer:void writeAttachments()"
        ]
    },
    "org.apache.cxf.service.model.BindingOperationInfo:void updateUnwrappedOperation()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeWSDLOperations()"
        ]
    },
    "org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean:void initializeParameter(org.apache.cxf.service.model.MessagePartInfo,java.lang.Class,java.lang.reflect.Type)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean initializeParameter(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int,java.lang.Class,java.lang.reflect.Type)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createMessageParts(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)"
        ]
    },
    "org.apache.cxf.frontend.AbstractServiceFactory:org.apache.cxf.service.model.ServiceInfo createService()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxws.ServiceImpl:java.lang.Object getPort(java.lang.Class,javax.xml.ws.WebServiceFeature[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.ServiceImpl:java.lang.Object getPort(java.lang.Class)"
        ]
    },
    "org.apache.cxf.jaxws.ServiceImpl:java.lang.Object createPort(javax.xml.namespace.QName,org.apache.cxf.ws.addressing.EndpointReferenceType,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean:org.apache.cxf.service.Service create()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory:org.apache.cxf.endpoint.Endpoint createEndpoint()",
            "org.apache.cxf.jaxws.ServiceImpl:org.apache.cxf.service.factory.AbstractServiceFactoryBean createDispatchService(org.apache.cxf.databinding.DataBinding)",
            "org.apache.cxf.jaxws.ServiceImpl:java.lang.Object createPort(javax.xml.namespace.QName,org.apache.cxf.ws.addressing.EndpointReferenceType,java.lang.Class,javax.xml.ws.WebServiceFeature[])"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeWSDLOperation(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeWSDLOperations()"
        ]
    },
    "org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean:void initializeWSDLOperation(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeWSDLOperations()"
        ]
    },
    "org.apache.cxf.frontend.ClientFactoryBean:void <init>(org.apache.cxf.service.factory.ReflectionServiceFactoryBean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.frontend.ClientFactoryBean:void <init>()",
            "org.apache.cxf.jaxws.JaxWsClientFactoryBean:void <init>()"
        ]
    },
    "org.apache.cxf.frontend.AbstractServiceFactory:void <init>(org.apache.cxf.service.factory.ReflectionServiceFactoryBean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.simple.SimpleServiceBuilder:void <init>()"
        ]
    },
    "org.apache.cxf.frontend.ServerFactoryBean:void <init>(org.apache.cxf.service.factory.ReflectionServiceFactoryBean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.frontend.spring.ServerFactoryBeanDefinitionParser$SpringServerFactoryBean:void <init>(org.apache.cxf.service.factory.ReflectionServiceFactoryBean)",
            "org.apache.cxf.frontend.ServerFactoryBean:void <init>()",
            "org.apache.cxf.jaxws.JaxWsServerFactoryBean:void <init>(org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean)"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getServiceQName()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromWSDL(java.lang.String)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromClass()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getWsdlURL()",
            "org.apache.cxf.frontend.ClientProxyFactoryBean:javax.xml.namespace.QName getServiceName()",
            "org.apache.cxf.jaxws.JaxWsProxyFactoryBean:void buildHandlerChain(org.apache.cxf.jaxws.JaxWsClientProxy)",
            "org.apache.cxf.jaxws.EndpointImpl:org.apache.cxf.endpoint.ServerImpl getServer(java.lang.String)",
            "org.apache.cxf.jaxws.JaxWsServerFactoryBean:void buildHandlerChain()"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeFaults(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createMessageParts(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)"
        ]
    },
    "org.apache.cxf.service.factory.DefaultServiceConfiguration:javax.xml.namespace.QName getOperationName(org.apache.cxf.service.model.InterfaceInfo,java.lang.reflect.Method)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getOperationName(org.apache.cxf.service.model.InterfaceInfo,java.lang.reflect.Method)"
        ]
    },
    "org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean:org.apache.cxf.endpoint.Endpoint createEndpoint(org.apache.cxf.service.model.EndpointInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createEndpoints()",
            "org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory:org.apache.cxf.endpoint.Endpoint createEndpoint()"
        ]
    },
    "org.apache.cxf.frontend.ClientProxyFactoryBean:java.lang.String getWsdlLocation()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.frontend.ServerFactoryBean:java.lang.String getWsdlLocation()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.endpoint.EndpointImpl:void <init>(org.apache.cxf.Bus,org.apache.cxf.service.Service,org.apache.cxf.service.model.EndpointInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.SimpleEndpointImplFactory:org.apache.cxf.endpoint.EndpointImpl newEndpointImpl(org.apache.cxf.Bus,org.apache.cxf.service.Service,org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.endpoint.EndpointImpl:void <init>(org.apache.cxf.Bus,org.apache.cxf.service.Service,javax.xml.namespace.QName)",
            "org.apache.cxf.endpoint.ClientImpl:void <init>(org.apache.cxf.Bus,java.net.URL,javax.xml.namespace.QName,javax.xml.namespace.QName,org.apache.cxf.endpoint.EndpointImplFactory)",
            "org.apache.cxf.ws.security.trust.STSClient:void createClient()",
            "org.apache.cxf.ws.security.trust.STSUtils:org.apache.cxf.endpoint.Endpoint createSTSEndpoint(org.apache.cxf.Bus,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.neethi.Policy,javax.xml.namespace.QName)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.endpoint.Endpoint createEndpoint(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.jaxws.support.JaxWsEndpointImpl:void <init>(org.apache.cxf.Bus,org.apache.cxf.service.Service,org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.jaxws.support.JaxWsImplementorInfo,java.util.List,java.util.List,boolean)"
        ]
    },
    "org.apache.cxf.binding.soap.interceptor.SoapActionInInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.binding.soap.interceptor.MustUnderstandInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.binding.soap.HeaderUtil:java.util.Set getHeaderQNameInOperationParam(org.apache.cxf.binding.soap.SoapMessage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.soap.interceptor.MustUnderstandInterceptor:void initServiceSideInfo(java.util.Set,org.apache.cxf.binding.soap.SoapMessage,java.util.Set)"
        ]
    },
    "org.apache.cxf.jaxws.handler.soap.SOAPHandlerInterceptor:javax.xml.namespace.QName getOpQName(org.apache.cxf.message.Exchange,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.handler.AbstractJAXWSHandlerInterceptor:void setupBindingOperationInfo(org.apache.cxf.message.Exchange,java.lang.Object)"
        ]
    },
    "org.apache.cxf.ws.policy.builder.jaxb.JaxbAssertionBuilder:org.apache.cxf.ws.policy.PolicyAssertion buildCompatible(org.apache.cxf.ws.policy.PolicyAssertion,org.apache.cxf.ws.policy.PolicyAssertion)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.Intersector:boolean compatibleAssertions(org.apache.cxf.ws.policy.PolicyAssertion,org.apache.cxf.ws.policy.PolicyAssertion)",
            "org.apache.cxf.ws.policy.Intersector:org.apache.cxf.ws.policy.PolicyAssertion intersect(org.apache.cxf.ws.policy.PolicyAssertion,org.apache.cxf.ws.policy.PolicyAssertion)"
        ]
    },
    "org.apache.cxf.ws.policy.util.PolicyComparator:boolean compare(org.apache.neethi.Assertion,org.apache.neethi.Assertion)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.util.PolicyComparator:boolean compare(org.apache.neethi.PolicyComponent,org.apache.neethi.PolicyComponent)"
        ]
    },
    "org.apache.cxf.service.model.BindingOperationInfo:boolean equals(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.builder.jaxb.JaxbAssertion:boolean equal(org.apache.neethi.PolicyComponent)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:boolean equals(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:boolean containsValue(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:javax.activation.DataHandler get(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:javax.activation.DataHandler remove(java.lang.Object)",
            "org.apache.cxf.aegis.type.java5.AnnotationReader:java.lang.Object getAnnotationValue(java.lang.String,java.lang.reflect.AnnotatedElement,java.lang.Object,java.lang.Class[])",
            "org.apache.cxf.aegis.type.java5.AnnotationReader:java.lang.Object getAnnotationValue(java.lang.String,java.lang.reflect.Method,int,java.lang.Object,java.lang.Class[])"
        ]
    },
    "org.apache.cxf.service.model.FaultInfo:boolean equals(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.builder.jaxb.JaxbAssertion:boolean equal(org.apache.neethi.PolicyComponent)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:boolean equals(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:boolean containsValue(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:javax.activation.DataHandler get(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:javax.activation.DataHandler remove(java.lang.Object)",
            "org.apache.cxf.aegis.type.java5.AnnotationReader:java.lang.Object getAnnotationValue(java.lang.String,java.lang.reflect.AnnotatedElement,java.lang.Object,java.lang.Class[])",
            "org.apache.cxf.aegis.type.java5.AnnotationReader:java.lang.Object getAnnotationValue(java.lang.String,java.lang.reflect.Method,int,java.lang.Object,java.lang.Class[])"
        ]
    },
    "org.apache.cxf.service.model.MessagePartInfo:boolean equals(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.builder.jaxb.JaxbAssertion:boolean equal(org.apache.neethi.PolicyComponent)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:boolean equals(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:boolean containsValue(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:javax.activation.DataHandler get(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:javax.activation.DataHandler remove(java.lang.Object)",
            "org.apache.cxf.aegis.type.java5.AnnotationReader:java.lang.Object getAnnotationValue(java.lang.String,java.lang.reflect.AnnotatedElement,java.lang.Object,java.lang.Class[])",
            "org.apache.cxf.aegis.type.java5.AnnotationReader:java.lang.Object getAnnotationValue(java.lang.String,java.lang.reflect.Method,int,java.lang.Object,java.lang.Class[])"
        ]
    },
    "org.apache.cxf.service.model.AbstractMessageContainer:boolean equals(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.builder.jaxb.JaxbAssertion:boolean equal(org.apache.neethi.PolicyComponent)",
            "org.apache.cxf.service.model.FaultInfo:boolean equals(java.lang.Object)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:boolean equals(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:boolean containsValue(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:javax.activation.DataHandler get(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:javax.activation.DataHandler remove(java.lang.Object)",
            "org.apache.cxf.aegis.type.java5.AnnotationReader:java.lang.Object getAnnotationValue(java.lang.String,java.lang.reflect.AnnotatedElement,java.lang.Object,java.lang.Class[])",
            "org.apache.cxf.aegis.type.java5.AnnotationReader:java.lang.Object getAnnotationValue(java.lang.String,java.lang.reflect.Method,int,java.lang.Object,java.lang.Class[])"
        ]
    },
    "org.apache.cxf.service.model.OperationInfo:boolean equals(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.builder.jaxb.JaxbAssertion:boolean equal(org.apache.neethi.PolicyComponent)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:boolean equals(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:boolean containsValue(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:javax.activation.DataHandler get(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:javax.activation.DataHandler remove(java.lang.Object)",
            "org.apache.cxf.frontend.SimpleMethodDispatcher:org.apache.cxf.service.model.BindingOperationInfo getBindingOperation(java.lang.reflect.Method,org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.frontend.SimpleMethodDispatcher:org.apache.cxf.service.model.BindingOperationInfo getRealOperation(org.apache.cxf.service.model.OperationInfo,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.aegis.type.java5.AnnotationReader:java.lang.Object getAnnotationValue(java.lang.String,java.lang.reflect.AnnotatedElement,java.lang.Object,java.lang.Class[])",
            "org.apache.cxf.aegis.type.java5.AnnotationReader:java.lang.Object getAnnotationValue(java.lang.String,java.lang.reflect.Method,int,java.lang.Object,java.lang.Class[])"
        ]
    },
    "org.apache.cxf.aegis.type.java5.AnnotationReader:boolean isNillable(java.lang.reflect.AnnotatedElement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.java5.AnnotatedTypeInfo:boolean isNillable(javax.xml.namespace.QName)"
        ]
    },
    "org.apache.cxf.aegis.type.java5.AnnotationReader:java.lang.Class getType(java.lang.reflect.AnnotatedElement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.java5.AnnotatedTypeInfo:boolean registerType(java.beans.PropertyDescriptor)",
            "org.apache.cxf.aegis.type.java5.Java5TypeCreator:org.apache.cxf.aegis.type.AbstractTypeCreator$TypeClassInfo createClassInfo(java.beans.PropertyDescriptor)"
        ]
    },
    "org.apache.cxf.aegis.type.java5.AnnotationReader:java.lang.Class getReturnType(java.lang.reflect.AnnotatedElement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.java5.Java5TypeCreator:org.apache.cxf.aegis.type.AbstractTypeCreator$TypeClassInfo createClassInfo(java.lang.reflect.Method,int)"
        ]
    },
    "org.apache.cxf.aegis.type.java5.AnnotationReader:java.lang.String getName(java.lang.reflect.AnnotatedElement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.java5.AnnotatedTypeInfo:javax.xml.namespace.QName createQName(java.beans.PropertyDescriptor)",
            "org.apache.cxf.aegis.type.java5.Java5TypeCreator:javax.xml.namespace.QName createQName(java.lang.Class)"
        ]
    },
    "org.apache.cxf.aegis.type.java5.AnnotationReader:java.lang.String getReturnName(java.lang.reflect.AnnotatedElement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.java5.Java5TypeCreator:org.apache.cxf.aegis.type.AbstractTypeCreator$TypeClassInfo createClassInfo(java.lang.reflect.Method,int)"
        ]
    },
    "org.apache.cxf.aegis.type.java5.AnnotationReader:java.lang.String getNamespace(java.lang.reflect.AnnotatedElement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.java5.AnnotatedTypeInfo:void mapProperty(java.beans.PropertyDescriptor)",
            "org.apache.cxf.aegis.type.java5.AnnotatedTypeInfo:javax.xml.namespace.QName createQName(java.beans.PropertyDescriptor)",
            "org.apache.cxf.aegis.type.java5.Java5TypeCreator:javax.xml.namespace.QName createQName(java.lang.Class)",
            "org.apache.cxf.aegis.type.java5.Java5TypeCreator:javax.xml.namespace.QName createQName(java.lang.Class,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.aegis.type.java5.AnnotationReader:java.lang.String getReturnNamespace(java.lang.reflect.AnnotatedElement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.java5.Java5TypeCreator:org.apache.cxf.aegis.type.AbstractTypeCreator$TypeClassInfo createClassInfo(java.lang.reflect.Method,int)"
        ]
    },
    "org.apache.cxf.aegis.type.java5.AnnotationReader:int getMinOccurs(java.lang.reflect.AnnotatedElement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.java5.AnnotatedTypeInfo:int getMinOccurs(javax.xml.namespace.QName)"
        ]
    },
    "org.apache.cxf.aegis.type.java5.AnnotationReader:boolean isExtensibleElements(java.lang.reflect.AnnotatedElement,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.java5.Java5TypeCreator:org.apache.cxf.aegis.type.Type createDefaultType(org.apache.cxf.aegis.type.AbstractTypeCreator$TypeClassInfo)"
        ]
    },
    "org.apache.cxf.aegis.type.java5.AnnotationReader:boolean isExtensibleAttributes(java.lang.reflect.AnnotatedElement,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.java5.Java5TypeCreator:org.apache.cxf.aegis.type.Type createDefaultType(org.apache.cxf.aegis.type.AbstractTypeCreator$TypeClassInfo)"
        ]
    },
    "org.apache.cxf.aegis.type.java5.AnnotationReader:java.lang.Class getParamType(java.lang.reflect.Method,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.java5.Java5TypeCreator:org.apache.cxf.aegis.type.AbstractTypeCreator$TypeClassInfo createClassInfo(java.lang.reflect.Method,int)"
        ]
    },
    "org.apache.cxf.aegis.type.java5.AnnotationReader:java.lang.String getParamName(java.lang.reflect.Method,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.java5.Java5TypeCreator:org.apache.cxf.aegis.type.AbstractTypeCreator$TypeClassInfo createClassInfo(java.lang.reflect.Method,int)"
        ]
    },
    "org.apache.cxf.aegis.type.java5.AnnotationReader:java.lang.String getParamNamespace(java.lang.reflect.Method,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.java5.Java5TypeCreator:org.apache.cxf.aegis.type.AbstractTypeCreator$TypeClassInfo createClassInfo(java.lang.reflect.Method,int)"
        ]
    },
    "org.apache.cxf.tools.common.AbstractCXFToolContainer:boolean hasInfoOption()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.tools.common.AbstractCXFToolContainer:void execute(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.tools.common.AbstractCXFToolContainer:void outputInfo()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.tools.common.AbstractCXFToolContainer:void execute(boolean)"
        ]
    },
    "org.apache.cxf.tools.common.AbstractCXFToolContainer:void checkParams(org.apache.cxf.tools.common.toolspec.parser.ErrorVisitor)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxb.JAXBEncoderDecoder:void marshalWithBridge(javax.xml.namespace.QName,java.lang.Class,java.lang.'annotation'.Annotation[],java.util.Set,java.lang.Object,java.lang.Object,javax.xml.bind.attachment.AttachmentMarshaller)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.io.DataWriterImpl:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,java.lang.Object)"
        ]
    },
    "org.apache.cxf.jaxb.JAXBEncoderDecoder:java.lang.Object unmarshalWithBridge(javax.xml.namespace.QName,java.lang.Class,java.lang.'annotation'.Annotation[],java.util.Set,java.lang.Object,javax.xml.bind.attachment.AttachmentUnmarshaller)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.io.DataReaderImpl:java.lang.Object read(org.apache.cxf.service.model.MessagePartInfo,java.lang.Object)"
        ]
    },
    "org.apache.cxf.jaxb.JAXBEncoderDecoder:java.lang.Exception unmarshallException(javax.xml.bind.Unmarshaller,java.lang.Object,org.apache.cxf.service.model.MessagePartInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.JAXBEncoderDecoder:java.lang.Object unmarshall(javax.xml.bind.Unmarshaller,java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,boolean)"
        ]
    },
    "org.apache.cxf.jaxb.JAXBEncoderDecoder:java.lang.Object unmarshall(javax.xml.bind.Unmarshaller,java.lang.Object,javax.xml.namespace.QName,java.lang.Class,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.JAXBEncoderDecoder:java.lang.Object unmarshall(javax.xml.bind.Unmarshaller,java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,boolean)",
            "org.apache.cxf.jaxb.io.DataReaderImpl:java.lang.Object read(javax.xml.namespace.QName,java.lang.Object,java.lang.Class)"
        ]
    },
    "org.apache.cxf.jaxb.JAXBEncoderDecoder:java.util.List unmarshallArray(javax.xml.bind.Unmarshaller,java.lang.Object,javax.xml.namespace.QName,java.lang.Class,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.JAXBEncoderDecoder:java.lang.Exception unmarshallException(javax.xml.bind.Unmarshaller,java.lang.Object,org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.jaxb.JAXBEncoderDecoder:java.lang.Object unmarshall(javax.xml.bind.Unmarshaller,java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,boolean)"
        ]
    },
    "org.apache.cxf.interceptor.Fault:void <init>(java.lang.Throwable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.attachment.JAXBAttachmentMarshaller:java.lang.String addMtomAttachment(byte[],int,int,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxb.attachment.JAXBAttachmentMarshaller:java.lang.String addMtomAttachment(javax.activation.DataHandler,java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxb.attachment.JAXBAttachmentUnmarshaller:javax.activation.DataSource getAttachmentDataSource(java.lang.String)",
            "org.apache.cxf.interceptor.StaxOutInterceptor:javax.xml.stream.XMLOutputFactory getXMLOutputFactory(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.ServiceInvokerInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.ClientFaultConverter:void processFaultDetail(org.apache.cxf.interceptor.Fault,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxInInterceptor:javax.xml.stream.XMLInputFactory getXMLInputFactory(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AttachmentInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:void writeParts(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.message.MessageContentsList,java.util.List)",
            "org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.LoggingInInterceptor:void logging(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.AbstractConduitSelector:org.apache.cxf.transport.Conduit getSelectedConduit(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.addressing.ContextUtils:void rebaseResponse(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.ws.addressing.AddressingProperties,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.policy.AbstractPolicyInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor$SecureConversationCancelInterceptor:void doCancel(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.ws.security.policy.model.SecureConversationToken)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationOutInterceptor:void renewToken(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.ws.security.tokenstore.SecurityToken,org.apache.cxf.ws.security.policy.model.SecureConversationToken)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationOutInterceptor:org.apache.cxf.ws.security.tokenstore.SecurityToken issueToken(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.ws.security.policy.model.SecureConversationToken)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor$STSInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor:void recalcEffectivePolicy(org.apache.cxf.binding.soap.SoapMessage,java.lang.String,org.apache.neethi.Policy)",
            "org.apache.cxf.ws.security.policy.interceptors.IssuedTokenInterceptorProvider$IssuedTokenOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.trust.STSClient:javax.security.auth.callback.CallbackHandler createHandler()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.TransportBindingHandler:void handleBinding()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:java.util.Map handleSupportingTokens(org.apache.cxf.ws.security.policy.model.SupportingToken,boolean,java.util.Map)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.SymmetricBindingHandler:void doEncryptBeforeSign()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.SymmetricBindingHandler:void doSignBeforeEncrypt()",
            "org.apache.cxf.ws.rm.AbstractRMInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.databinding.AbstractWrapperHelper:java.lang.Object createWrapperObject(java.util.List)",
            "org.apache.cxf.databinding.AbstractWrapperHelper:java.util.List getWrapperParts(java.lang.Object)",
            "org.apache.cxf.service.invoker.AbstractInvoker:org.apache.cxf.interceptor.Fault createFault(java.lang.Throwable,java.lang.reflect.Method,java.util.List,boolean)",
            "org.apache.cxf.binding.soap.interceptor.RPCOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.soap.saaj.SAAJOutInterceptor$SAAJOutEndingInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.aegis.databinding.ElementDataReader:java.lang.Object read(org.w3c.dom.Element)",
            "org.apache.cxf.aegis.databinding.ElementDataReader:java.lang.Object read(org.apache.cxf.service.model.MessagePartInfo,org.w3c.dom.Element)",
            "org.apache.cxf.aegis.databinding.ElementDataReader:java.lang.Object read(javax.xml.namespace.QName,org.w3c.dom.Element,java.lang.Class)",
            "org.apache.cxf.aegis.databinding.XMLStreamDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.aegis.databinding.XMLStreamDataReader:java.lang.Object read(org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.aegis.databinding.XMLStreamDataReader:java.lang.Object read(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerInterceptor:javax.xml.ws.handler.MessageContext createProtocolMessageContext(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.jaxws.handler.logical.LogicalHandlerFaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.handler.logical.LogicalHandlerFaultOutInterceptor$LogicalHandlerFaultOutEndingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.handler.logical.LogicalHandlerOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.handler.logical.LogicalHandlerOutInterceptor$LogicalHandlerOutEndingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.handler.logical.LogicalMessageImpl:javax.xml.transform.Source getPayload()",
            "org.apache.cxf.jaxws.handler.logical.LogicalMessageImpl:javax.xml.transform.Source handleDispatchProviderCase(javax.xml.ws.Service$Mode)",
            "org.apache.cxf.jaxws.handler.logical.LogicalMessageImpl:void setPayload(javax.xml.transform.Source)",
            "org.apache.cxf.jaxws.handler.logical.LogicalMessageImpl:void write(javax.xml.transform.Source,org.w3c.dom.Node)",
            "org.apache.cxf.jaxws.support.JaxWsServiceConfiguration:java.lang.Boolean isWrapped(java.lang.reflect.Method)",
            "org.apache.cxf.jaxws.interceptors.MessageModeInInterceptor:void doFromSoapMessage(org.apache.cxf.message.Message,java.lang.Object)",
            "org.apache.cxf.jaxws.interceptors.MessageModeOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.interceptors.SwAInInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.jaxws.interceptors.WrapperClassOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.interceptors.WrapperClassInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.interceptors.SwAOutInterceptor:void processAttachments(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.binding.soap.model.SoapBodyInfo)",
            "org.apache.cxf.jaxws.interceptors.SwAOutInterceptor:javax.activation.DataSource createDataSource(javax.xml.transform.Source,java.lang.String)",
            "org.apache.cxf.jaxws.interceptors.SwAOutInterceptor:java.awt.image.BufferedImage convertToBufferedImage(java.awt.Image)",
            "org.apache.cxf.jaxws.interceptors.MessageModeOutInterceptor$MessageModeOutInterceptorInternal:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)"
        ]
    },
    "org.apache.cxf.interceptor.Fault:void <init>(java.lang.Throwable,javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.https.SSLUtils:javax.net.ssl.KeyManager[] loadKeyStore(javax.net.ssl.KeyManagerFactory,java.security.KeyStore,java.io.ByteArrayInputStream,java.lang.String,java.lang.String,java.util.logging.Logger)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.https.SSLUtils:javax.net.ssl.KeyManager[] getKeyStoreManagers(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.logging.Logger)"
        ]
    },
    "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine:void removeServant(java.net.URL)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void deactivate()"
        ]
    },
    "org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor:javax.security.auth.callback.CallbackHandler getCallback(org.apache.ws.security.handler.RequestData,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)"
        ]
    },
    "org.apache.cxf.service.invoker.AbstractInvoker:org.apache.cxf.interceptor.Fault createFault(java.lang.Throwable,java.lang.reflect.Method,java.util.List,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.invoker.AbstractInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object,java.lang.reflect.Method,java.util.List)",
            "org.apache.cxf.jaxws.AbstractJAXWSMethodInvoker:org.apache.cxf.interceptor.Fault createFault(java.lang.Throwable,java.lang.reflect.Method,java.util.List,boolean)"
        ]
    },
    "org.apache.cxf.tools.common.AbstractCXFToolContainer:void printUsageException(java.lang.String,org.apache.cxf.tools.common.toolspec.parser.BadUsageException)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.tools.util.URLFactory:java.net.URLStreamHandler findHandler(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.tools.util.URLFactory:java.net.URL createURL(java.net.URL,java.lang.String)"
        ]
    },
    "org.apache.cxf.aegis.type.basic.BeanType:void writeProperty(javax.xml.namespace.QName,java.lang.Object,java.lang.Object,java.lang.Class,org.apache.cxf.aegis.type.basic.BeanTypeInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.basic.BeanType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.StructType:void writeProperty(javax.xml.namespace.QName,java.lang.Object,java.lang.Object,java.lang.Class,org.apache.cxf.aegis.type.basic.BeanTypeInfo)"
        ]
    },
    "org.apache.cxf.jaxws.handler.HandlerChainInvoker:void setFaultMessage(javax.xml.ws.handler.MessageContext,java.lang.Exception)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.handler.HandlerChainInvoker:boolean invokeHandleMessage(java.util.List,javax.xml.ws.handler.MessageContext)"
        ]
    },
    "org.apache.cxf.jaxws.support.ServiceDelegateAccessor:org.apache.cxf.jaxws.ServiceImpl get(javax.xml.ws.Service)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxws.JaxWsClientProxy:javax.xml.soap.SOAPFault createSoapFault(javax.xml.ws.soap.SOAPBinding,java.lang.Exception)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.JaxWsClientProxy:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])",
            "org.apache.cxf.jaxws.DispatchImpl:void checkError()",
            "org.apache.cxf.jaxws.DispatchImpl:java.lang.RuntimeException mapException(java.lang.Exception)"
        ]
    },
    "org.apache.cxf.xmlbeans.tools.XMLBeansToolingDataBinding:org.apache.xmlbeans.SchemaTypeSystem loadTypeSystem(java.lang.String,java.lang.String[],java.util.Set,java.io.File,java.io.File,org.xml.sax.EntityResolver)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.xmlbeans.tools.XMLBeansToolingDataBinding:void initialize(org.apache.cxf.tools.common.ToolContext)"
        ]
    },
    "org.apache.cxf.tools.common.model.JavaInterface:void addMethod(org.apache.cxf.tools.common.model.JavaMethod)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.tools.common.model.JavaClass:org.apache.cxf.tools.common.model.JavaMethod appendGetter(org.apache.cxf.tools.common.model.JavaField)",
            "org.apache.cxf.tools.common.model.JavaClass:org.apache.cxf.tools.common.model.JavaMethod appendSetter(org.apache.cxf.tools.common.model.JavaField)"
        ]
    },
    "org.apache.cxf.tools.common.model.JavaInterface:int removeMethod(org.apache.cxf.tools.common.model.JavaMethod)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.tools.common.model.JavaInterface:void replaceMethod(org.apache.cxf.tools.common.model.JavaMethod)"
        ]
    },
    "org.apache.cxf.tools.common.model.JavaMethod:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:java.util.List enumeratorValues(org.apache.ws.commons.schema.XmlSchemaSimpleType)",
            "org.apache.cxf.common.logging.Log4jLogger$HandlerWrapper:void append(org.apache.log4j.spi.LoggingEvent)",
            "org.apache.cxf.common.util.PackageUtils:java.lang.String combine(java.util.List,char)",
            "org.apache.cxf.configuration.spring.SpringBeanMap:void processBeans(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.message.MessageUtils:boolean isTrue(java.lang.Object)",
            "org.apache.cxf.endpoint.ClientImpl:boolean isThreadLocalRequestContext()",
            "org.apache.cxf.ws.addressing.ContextUtils:java.lang.String getAction(org.apache.cxf.service.model.Extensible)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationOutInterceptor:void renewToken(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.ws.security.tokenstore.SecurityToken,org.apache.cxf.ws.security.policy.model.SecureConversationToken)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.policy.interceptors.IssuedTokenInterceptorProvider$IssuedTokenOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationTokenInterceptorProvider:java.lang.String setupClient(org.apache.cxf.ws.security.trust.STSClient,org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.ws.security.policy.model.SecureConversationToken,boolean)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:java.lang.String checkAsymetricBinding(org.apache.cxf.ws.policy.AssertionInfoMap,java.lang.String,org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:java.lang.String checkSymetricBinding(org.apache.cxf.ws.policy.AssertionInfoMap,java.lang.String,org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.wsdl.AbstractWSDLPlugin:java.lang.String getOption(java.util.Map,java.lang.String)",
            "org.apache.cxf.tools.common.toolspec.parser.ErrorVisitor:java.lang.String toString()",
            "org.apache.cxf.tools.util.URIParserUtil:java.lang.String combine(java.util.List,char)",
            "org.apache.cxf.aegis.xml.jdom.JDOMWriter:void writeValue(java.lang.Object)",
            "org.apache.cxf.aegis.xml.jdom.JDOMWriter:void writeValue(java.lang.Object,java.lang.String,java.lang.String)",
            "org.apache.cxf.aegis.xml.jdom.AttributeWriter:void writeValue(java.lang.Object)",
            "org.apache.cxf.aegis.xml.stax.AttributeWriter:void writeValue(java.lang.Object)",
            "org.apache.cxf.aegis.xml.stax.ElementWriter:void writeValue(java.lang.Object)",
            "org.apache.cxf.aegis.type.basic.BigIntegerType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.BigDecimalType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.jaxws.EndpointImpl:void checkProperties()",
            "org.apache.cxf.xmlbeans.tools.XMLBeansToolingDataBinding:void initialize(org.apache.cxf.tools.common.ToolContext)"
        ]
    },
    "org.apache.cxf.bus.extension.ExtensionManagerBus:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.CXFBusFactory:org.apache.cxf.Bus createBus(java.util.Map,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.CXFBusFactory:org.apache.cxf.Bus createBus(java.util.Map)"
        ]
    },
    "org.apache.cxf.transport.servlet.AbstractCXFServlet:void destroy()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.servlet.CXFServlet:void destroy()"
        ]
    },
    "org.apache.cxf.bus.ManagedBus:void shutdown(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.wsdl11.SchemaUtil:void getSchemas(javax.wsdl.Definition,org.apache.cxf.service.model.ServiceInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void getSchemas(javax.wsdl.Definition,org.apache.cxf.service.model.ServiceInfo)"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:java.lang.Object build(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition,javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor:void updateBusReferencesInContext(org.apache.cxf.Bus,org.springframework.context.ApplicationContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser$SpringJettyHTTPServerEngine:void setApplicationContext(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineFactoryBeanDefinitionParser$SpringJettyHTTPServerEngineFactory:void setApplicationContext(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.frontend.spring.ServerFactoryBeanDefinitionParser$SpringServerFactoryBean:void setApplicationContext(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.frontend.spring.ClientProxyFactoryBeanDefinitionParser$SpringClientProxyFactoryBean:void setApplicationContext(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.jaxws.spring.EndpointDefinitionParser$SpringEndpointImpl:void setApplicationContext(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.jaxws.spring.NamespaceHandler$SpringServerFactoryBean:void setApplicationContext(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.jaxws.spring.JaxWsProxyFactoryBeanDefinitionParser$JAXWSSpringClientProxyFactoryBean:void setApplicationContext(org.springframework.context.ApplicationContext)"
        ]
    },
    "org.apache.cxf.bus.extension.ExtensionManagerImpl:void <init>(java.lang.String[],java.lang.ClassLoader,java.util.Map,org.apache.cxf.resource.ResourceManager)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void <init>(java.lang.ClassLoader,java.util.Map,org.apache.cxf.resource.ResourceManager)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void <init>(java.lang.String,java.lang.ClassLoader,java.util.Map,org.apache.cxf.resource.ResourceManager)"
        ]
    },
    "org.apache.cxf.aegis.type.mtom.DataSourceType:java.lang.String getContentType(java.lang.Object,org.apache.cxf.aegis.Context)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.mtom.AbstractXOPType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)"
        ]
    },
    "org.apache.cxf.jaxws.interceptors.MessageModeOutInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.databinding.source.XMLStreamDataWriter:void write(java.lang.Object,javax.xml.stream.XMLStreamWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.source.XMLStreamDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.databinding.source.XMLStreamDataWriter:void write(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cxf.aegis.type.mtom.DataSourceType:byte[] getBytes(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.mtom.AbstractXOPType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)"
        ]
    },
    "org.apache.cxf.attachment.AttachmentUtil:java.lang.String getAttchmentPartHeader(org.apache.cxf.message.Attachment)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.util.WeakIdentityHashMap:java.lang.Object remove(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:void reap()",
            "org.apache.cxf.common.util.CacheMap:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.common.util.TwoStageMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.common.util.TwoStageMap:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.message.MessageImpl:void removeContent(java.lang.Class)",
            "org.apache.cxf.transport.ConduitInitiatorManagerImpl:void deregisterConduitInitiator(java.lang.String)",
            "org.apache.cxf.transport.http.Cookie:void handleSetCookie(java.util.Map,java.util.List)",
            "org.apache.cxf.transport.http.HTTPConduit:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection redirectRetransmit(java.net.HttpURLConnection,org.apache.cxf.message.Message,org.apache.cxf.io.CacheAndWriteOutputStream)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:java.io.OutputStream flushHeaders(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.gzip.GZIPInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.DestinationFactoryManagerImpl:void deregisterDestinationFactory(java.lang.String)",
            "org.apache.cxf.transport.servlet.ServletTransportFactory:void removeDestination(java.lang.String)",
            "org.apache.cxf.transport.servlet.AbstractCXFServlet:void destroy()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPTransportFactory:void removeDestination(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void destroyForPort(int)",
            "org.apache.cxf.transport.jms.JMSConduit:void sendExchange(org.apache.cxf.message.Exchange,java.lang.Object)",
            "org.apache.cxf.transport.jms.JMSConduit:void onMessage(javax.jms.Message)",
            "org.apache.cxf.extension.RegistryImpl:void unregister(java.lang.Object)",
            "org.apache.cxf.endpoint.ClientImpl$EchoContext:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void handleFault(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void restoreExchange(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.addressing.AddressingProperties)",
            "org.apache.cxf.ws.policy.PolicyRegistryImpl:void remove(java.lang.String)",
            "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:void remove(org.apache.cxf.ws.security.tokenstore.SecurityToken)",
            "org.apache.cxf.ws.rm.Source:void removeSequence(org.apache.cxf.ws.rm.SourceSequence)",
            "org.apache.cxf.ws.rm.Destination:void removeSequence(org.apache.cxf.ws.rm.DestinationSequence)",
            "org.apache.cxf.ws.rm.RMManager:void shutdownReliableEndpoint(org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl:void purgeAcknowledged(org.apache.cxf.ws.rm.SourceSequence)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils$SchemaLSResourceResolver:org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.service.model.AbstractMessageContainer:void removeMessagePart(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:void setProperty(java.lang.String,java.lang.Object)",
            "org.apache.cxf.service.model.InterfaceInfo:void removeOperation(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.BindingInfo:void removeOperation(org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.service.model.OperationInfo:void removeFault(javax.xml.namespace.QName)",
            "org.apache.cxf.binding.BindingFactoryManagerImpl:void unregisterBindingFactory(java.lang.String)",
            "org.apache.cxf.clustering.FailoverTargetSelector:void complete(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.tools.common.ToolContext:void remove(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void removeDefinition(javax.wsdl.Definition)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void activateViaNS(java.lang.String)",
            "org.apache.cxf.aegis.type.DefaultTypeMapping:void removeType(org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.jaxws.JaxWsClientProxy:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.jaxws.AbstractJAXWSMethodInvoker:void updateWebServiceContext(org.apache.cxf.message.Exchange,javax.xml.ws.handler.MessageContext)"
        ]
    },
    "org.apache.cxf.common.util.WeakIdentityHashMap:void reap()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.WeakIdentityHashMap:void clear()",
            "org.apache.cxf.common.util.WeakIdentityHashMap:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:boolean containsValue(java.lang.Object)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.util.Set entrySet()",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.util.Set keySet()",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:int hashCode()",
            "org.apache.cxf.common.util.WeakIdentityHashMap:boolean isEmpty()",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:int size()",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.util.Collection values()"
        ]
    },
    "org.apache.cxf.common.util.CacheMap:java.lang.Object remove(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:void reap()",
            "org.apache.cxf.common.util.CacheMap:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.common.util.TwoStageMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.common.util.TwoStageMap:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.message.MessageImpl:void removeContent(java.lang.Class)",
            "org.apache.cxf.transport.ConduitInitiatorManagerImpl:void deregisterConduitInitiator(java.lang.String)",
            "org.apache.cxf.transport.http.Cookie:void handleSetCookie(java.util.Map,java.util.List)",
            "org.apache.cxf.transport.http.HTTPConduit:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection redirectRetransmit(java.net.HttpURLConnection,org.apache.cxf.message.Message,org.apache.cxf.io.CacheAndWriteOutputStream)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:java.io.OutputStream flushHeaders(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.gzip.GZIPInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.DestinationFactoryManagerImpl:void deregisterDestinationFactory(java.lang.String)",
            "org.apache.cxf.transport.servlet.ServletTransportFactory:void removeDestination(java.lang.String)",
            "org.apache.cxf.transport.servlet.AbstractCXFServlet:void destroy()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPTransportFactory:void removeDestination(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void destroyForPort(int)",
            "org.apache.cxf.transport.jms.JMSConduit:void sendExchange(org.apache.cxf.message.Exchange,java.lang.Object)",
            "org.apache.cxf.transport.jms.JMSConduit:void onMessage(javax.jms.Message)",
            "org.apache.cxf.extension.RegistryImpl:void unregister(java.lang.Object)",
            "org.apache.cxf.endpoint.ClientImpl$EchoContext:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void handleFault(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void restoreExchange(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.addressing.AddressingProperties)",
            "org.apache.cxf.ws.policy.PolicyRegistryImpl:void remove(java.lang.String)",
            "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:void remove(org.apache.cxf.ws.security.tokenstore.SecurityToken)",
            "org.apache.cxf.ws.rm.Source:void removeSequence(org.apache.cxf.ws.rm.SourceSequence)",
            "org.apache.cxf.ws.rm.Destination:void removeSequence(org.apache.cxf.ws.rm.DestinationSequence)",
            "org.apache.cxf.ws.rm.RMManager:void shutdownReliableEndpoint(org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl:void purgeAcknowledged(org.apache.cxf.ws.rm.SourceSequence)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils$SchemaLSResourceResolver:org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.service.model.AbstractMessageContainer:void removeMessagePart(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:void setProperty(java.lang.String,java.lang.Object)",
            "org.apache.cxf.service.model.InterfaceInfo:void removeOperation(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.BindingInfo:void removeOperation(org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.service.model.OperationInfo:void removeFault(javax.xml.namespace.QName)",
            "org.apache.cxf.binding.BindingFactoryManagerImpl:void unregisterBindingFactory(java.lang.String)",
            "org.apache.cxf.clustering.FailoverTargetSelector:void complete(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.tools.common.ToolContext:void remove(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void removeDefinition(javax.wsdl.Definition)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void activateViaNS(java.lang.String)",
            "org.apache.cxf.aegis.type.DefaultTypeMapping:void removeType(org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.jaxws.JaxWsClientProxy:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.jaxws.AbstractJAXWSMethodInvoker:void updateWebServiceContext(org.apache.cxf.message.Exchange,javax.xml.ws.handler.MessageContext)"
        ]
    },
    "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object put(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap$Entry:java.lang.Object setValue(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap$SpringBeanMapWrapper:java.lang.Object put(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cxf.message.MessageImpl:void removeContent(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.message.AbstractWrappedMessage:void removeContent(java.lang.Class)",
            "org.apache.cxf.interceptor.StaxOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxOutInterceptor$StaxOutEndingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponseInternal()",
            "org.apache.cxf.jaxws.handler.HandlerChainInvoker:void setFaultMessage(javax.xml.ws.handler.MessageContext,java.lang.Exception)",
            "org.apache.cxf.jaxws.handler.logical.LogicalHandlerFaultOutInterceptor$LogicalHandlerFaultOutEndingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.handler.logical.LogicalHandlerOutInterceptor$LogicalHandlerOutEndingInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.ConduitInitiatorManagerImpl:void deregisterConduitInitiator(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.DestinationFactoryManagerImpl:void deregisterDestinationFactory(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.servlet.ServletTransportFactory:void removeDestination(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.servlet.ServletDestination:void shutdown()"
        ]
    },
    "org.apache.cxf.transport.http_jetty.JettyHTTPTransportFactory:void removeDestination(org.apache.cxf.service.model.EndpointInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void shutdown()"
        ]
    },
    "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void destroyForPort(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine:void shutdown()"
        ]
    },
    "org.apache.cxf.extension.RegistryImpl:void unregister(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.endpoint.ClientImpl$EchoContext:java.lang.Object remove(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:void reap()",
            "org.apache.cxf.common.util.CacheMap:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.common.util.TwoStageMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.common.util.TwoStageMap:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.jaxb.JAXBDataBinding:org.apache.cxf.jaxb.JAXBDataBinding$CachedContextAndSchemas createJAXBContextAndSchemas(java.util.Set,java.lang.String)",
            "org.apache.cxf.message.MessageImpl:void removeContent(java.lang.Class)",
            "org.apache.cxf.transport.ConduitInitiatorManagerImpl:void deregisterConduitInitiator(java.lang.String)",
            "org.apache.cxf.transport.http.Cookie:void handleSetCookie(java.util.Map,java.util.List)",
            "org.apache.cxf.transport.http.HTTPConduit:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection redirectRetransmit(java.net.HttpURLConnection,org.apache.cxf.message.Message,org.apache.cxf.io.CacheAndWriteOutputStream)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:java.io.OutputStream flushHeaders(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.gzip.GZIPInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.DestinationFactoryManagerImpl:void deregisterDestinationFactory(java.lang.String)",
            "org.apache.cxf.transport.servlet.ServletTransportFactory:void removeDestination(java.lang.String)",
            "org.apache.cxf.transport.servlet.AbstractCXFServlet:void destroy()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPTransportFactory:void removeDestination(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void destroyForPort(int)",
            "org.apache.cxf.transport.jms.JMSConduit:void sendExchange(org.apache.cxf.message.Exchange,java.lang.Object)",
            "org.apache.cxf.transport.jms.JMSConduit:void onMessage(javax.jms.Message)",
            "org.apache.cxf.extension.RegistryImpl:void unregister(java.lang.Object)",
            "org.apache.cxf.endpoint.ClientImpl$EchoContext:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void handleFault(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void restoreExchange(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.addressing.AddressingProperties)",
            "org.apache.cxf.ws.policy.PolicyRegistryImpl:void remove(java.lang.String)",
            "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:void remove(org.apache.cxf.ws.security.tokenstore.SecurityToken)",
            "org.apache.cxf.ws.rm.Source:void removeSequence(org.apache.cxf.ws.rm.SourceSequence)",
            "org.apache.cxf.ws.rm.Destination:void removeSequence(org.apache.cxf.ws.rm.DestinationSequence)",
            "org.apache.cxf.ws.rm.RMManager:void shutdownReliableEndpoint(org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl:void purgeAcknowledged(org.apache.cxf.ws.rm.SourceSequence)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils$SchemaLSResourceResolver:org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.service.model.AbstractMessageContainer:void removeMessagePart(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:void setProperty(java.lang.String,java.lang.Object)",
            "org.apache.cxf.service.model.InterfaceInfo:void removeOperation(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.BindingInfo:void removeOperation(org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.service.model.OperationInfo:void removeFault(javax.xml.namespace.QName)",
            "org.apache.cxf.binding.BindingFactoryManagerImpl:void unregisterBindingFactory(java.lang.String)",
            "org.apache.cxf.clustering.FailoverTargetSelector:void complete(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.tools.common.ToolContext:void remove(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void removeDefinition(javax.wsdl.Definition)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void activateViaNS(java.lang.String)",
            "org.apache.cxf.aegis.type.DefaultTypeMapping:void removeType(org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.jaxws.JaxWsClientProxy:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.jaxws.AbstractJAXWSMethodInvoker:void updateWebServiceContext(org.apache.cxf.message.Exchange,javax.xml.ws.handler.MessageContext)"
        ]
    },
    "org.apache.cxf.ws.addressing.soap.MAPCodec:void handleFault(org.apache.cxf.binding.soap.SoapMessage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void handleFault(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.ws.policy.PolicyRegistryImpl:void remove(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:void remove(org.apache.cxf.ws.security.tokenstore.SecurityToken)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor$SecureConversationCancelInterceptor:void doCancel(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.ws.security.policy.model.SecureConversationToken)",
            "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:void update(org.apache.cxf.ws.security.tokenstore.SecurityToken)",
            "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:void processTokenExpiry()",
            "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:void removeCancelledTokens()",
            "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:void removeExpiredTokens()"
        ]
    },
    "org.apache.cxf.ws.rm.Source:void removeSequence(org.apache.cxf.ws.rm.SourceSequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.Servant:void terminateSequence(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.SourceSequence:void setAcknowledged(org.apache.cxf.ws.rm.SequenceAcknowledgement)"
        ]
    },
    "org.apache.cxf.ws.rm.Destination:void removeSequence(org.apache.cxf.ws.rm.DestinationSequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.Servant:void terminateSequence(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.DestinationSequence$SequenceTermination:void run()"
        ]
    },
    "org.apache.cxf.service.model.AbstractPropertiesHolder:void setProperty(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.JAXBContextInitializer:void begin(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.jaxb.JAXBSchemaInitializer:void begin(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.jaxb.JAXBSchemaInitializer:void buildExceptionType(org.apache.cxf.service.model.MessagePartInfo,java.lang.Class)",
            "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:org.apache.cxf.service.model.MessageInfo setMessage(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo,boolean,org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.MessageInfo)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void writeResponse(java.lang.String,java.lang.String,org.apache.cxf.service.model.EndpointInfo,java.io.OutputStream)",
            "org.apache.cxf.transport.ChainInitiationObserver:void setExchangeProperties(org.apache.cxf.message.Exchange,org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ClientImpl:void setExchangeProperties(org.apache.cxf.message.Exchange,org.apache.cxf.endpoint.Endpoint,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:org.apache.cxf.ws.policy.EffectivePolicy getEffectiveClientRequestPolicy(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.transport.Conduit)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:void setEffectiveClientRequestPolicy(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.ws.policy.EffectivePolicy)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:org.apache.cxf.ws.policy.EffectivePolicy getEffectiveServerResponsePolicy(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.transport.Destination)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:void setEffectiveServerResponsePolicy(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.ws.policy.EffectivePolicy)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:org.apache.cxf.ws.policy.EffectivePolicy getEffectiveServerFaultPolicy(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.service.model.BindingFaultInfo,org.apache.cxf.transport.Destination)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:void setEffectiveServerFaultPolicy(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.service.model.BindingFaultInfo,org.apache.cxf.ws.policy.EffectivePolicy)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:void setClientEndpointPolicy(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.ws.policy.EndpointPolicy)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:void setServerEndpointPolicy(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.ws.policy.EndpointPolicy)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:org.apache.cxf.ws.policy.EffectivePolicy getEffectiveServerRequestPolicy(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:void setEffectiveServerRequestPolicy(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.ws.policy.EffectivePolicy)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:org.apache.cxf.ws.policy.EffectivePolicy getEffectiveClientResponsePolicy(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:void setEffectiveClientResponsePolicy(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.ws.policy.EffectivePolicy)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:org.apache.cxf.ws.policy.EffectivePolicy getEffectiveClientFaultPolicy(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.service.model.BindingFaultInfo)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:void setEffectiveClientFaultPolicy(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.service.model.BindingFaultInfo,org.apache.cxf.ws.policy.EffectivePolicy)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:org.apache.cxf.ws.policy.EndpointPolicyImpl createEndpointPolicyInfo(org.apache.cxf.service.model.EndpointInfo,boolean,org.apache.cxf.ws.policy.Assertor)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor:void recalcEffectivePolicy(org.apache.cxf.binding.soap.SoapMessage,java.lang.String,org.apache.neethi.Policy)",
            "org.apache.cxf.ws.security.policy.interceptors.IssuedTokenInterceptorProvider:org.apache.cxf.ws.security.tokenstore.TokenStore getTokenStore(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationTokenInterceptorProvider:org.apache.cxf.ws.security.tokenstore.TokenStore getTokenStore(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:java.util.Map getCryptoCache()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:org.apache.cxf.ws.security.tokenstore.TokenStore getTokenStore()",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:java.util.Map getPropertiesCache(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.rm.RMEndpoint:void createService()",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.validation.Schema createSchema(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.service.model.UnwrappedOperationInfo:void setProperty(java.lang.String,java.lang.Object)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperationForWrapperElement(org.apache.cxf.message.Exchange,javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromWSDL(java.lang.String)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromClass()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeWSDLOperation(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean initializeClassInfo(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,java.util.List)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean initializeParameter(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int,java.lang.Class,java.lang.reflect.Type)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void setFaultClassInfo(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.OperationInfo createOperation(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.InterfaceInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createMessageParts(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createInputWrappedMessageParts(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,org.apache.cxf.service.model.MessageInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createOutputWrappedMessageParts(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,org.apache.cxf.service.model.MessageInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeParameter(org.apache.cxf.service.model.MessagePartInfo,java.lang.Class,java.lang.reflect.Type)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.FaultInfo addFault(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.Class)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createFaultForException(java.lang.Class,org.apache.cxf.service.model.FaultInfo)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:org.apache.cxf.service.model.BindingInfo createBindingInfo(org.apache.cxf.service.model.ServiceInfo,java.lang.String,java.lang.Object)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:void createSoapBinding(org.apache.cxf.binding.soap.model.SoapBindingInfo)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:void buildMessage(org.apache.cxf.service.model.MessageInfo,javax.wsdl.Message,org.apache.cxf.common.xmlschema.SchemaCollection,int,java.lang.String)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:java.util.List handleMimePart(javax.wsdl.extensions.mime.MIMEPart,java.util.List,org.apache.cxf.service.model.MessageInfo,org.apache.cxf.service.model.BindingMessageInfo,java.util.List,java.util.List)",
            "org.apache.cxf.binding.soap.interceptor.RPCOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.soap.interceptor.RPCInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.soap.interceptor.RPCInInterceptor:void setMessage(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.binding.soap.HeaderUtil:java.util.Set getHeaderParts(org.apache.cxf.service.model.BindingMessageInfo)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildMockServices(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.ServiceInfo buildMockService(javax.wsdl.Definition,javax.wsdl.PortType)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition,javax.wsdl.Service,javax.xml.namespace.QName,org.apache.cxf.service.model.DescriptionInfo)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildInterface(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.PortType)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildInterfaceOperation(org.apache.cxf.service.model.InterfaceInfo,javax.wsdl.Operation)",
            "org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory:org.apache.cxf.service.model.EndpointInfo createEndpointInfo()",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void initializeMessage(org.apache.cxf.service.Service,org.apache.cxf.aegis.type.TypeMapping,org.apache.cxf.service.model.AbstractMessageContainer,int,java.util.Set)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:org.apache.cxf.aegis.type.Type getParameterType(org.apache.cxf.service.Service,org.apache.cxf.aegis.type.TypeMapping,org.apache.cxf.service.model.MessagePartInfo,int)",
            "org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean:void initializeWSDLOperation(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean:void initializeWSDLOperationsForProvider()",
            "org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean:void initializeWrapping(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.jaxws.ServiceImpl:org.apache.cxf.service.factory.AbstractServiceFactoryBean createDispatchService(org.apache.cxf.databinding.DataBinding)",
            "org.apache.cxf.jaxws.EndpointImpl:void doPublish(java.lang.String)",
            "org.apache.cxf.jaxws.JaxWsServerFactoryBean:org.apache.cxf.service.model.BindingInfo createBindingInfo()",
            "org.apache.cxf.jaxws.interceptors.WrapperClassOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.interceptors.WrapperClassInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.binding.soap.SOAPBindingImpl:void setMTOMEnabled(boolean)",
            "org.apache.cxf.xmlbeans.XmlBeansSchemaInitializer:void mapClass(org.apache.cxf.service.model.MessagePartInfo,java.lang.Class)"
        ]
    },
    "org.apache.cxf.service.model.InterfaceInfo:void removeOperation(org.apache.cxf.service.model.OperationInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeWSDLOperations()"
        ]
    },
    "org.apache.cxf.service.model.BindingInfo:void removeOperation(org.apache.cxf.service.model.BindingOperationInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeWSDLOperations()"
        ]
    },
    "org.apache.cxf.service.model.OperationInfo:void removeFault(javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.binding.BindingFactoryManagerImpl:void unregisterBindingFactory(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.tools.common.ToolContext:void remove(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxws.context.WrappedMessageContext:java.lang.Object remove(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:void reap()",
            "org.apache.cxf.common.util.CacheMap:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.common.util.TwoStageMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.common.util.TwoStageMap:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.message.MessageImpl:void removeContent(java.lang.Class)",
            "org.apache.cxf.transport.ConduitInitiatorManagerImpl:void deregisterConduitInitiator(java.lang.String)",
            "org.apache.cxf.transport.http.Cookie:void handleSetCookie(java.util.Map,java.util.List)",
            "org.apache.cxf.transport.http.HTTPConduit:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection redirectRetransmit(java.net.HttpURLConnection,org.apache.cxf.message.Message,org.apache.cxf.io.CacheAndWriteOutputStream)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:java.io.OutputStream flushHeaders(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.gzip.GZIPInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.DestinationFactoryManagerImpl:void deregisterDestinationFactory(java.lang.String)",
            "org.apache.cxf.transport.servlet.ServletTransportFactory:void removeDestination(java.lang.String)",
            "org.apache.cxf.transport.servlet.AbstractCXFServlet:void destroy()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPTransportFactory:void removeDestination(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void destroyForPort(int)",
            "org.apache.cxf.transport.jms.JMSConduit:void sendExchange(org.apache.cxf.message.Exchange,java.lang.Object)",
            "org.apache.cxf.transport.jms.JMSConduit:void onMessage(javax.jms.Message)",
            "org.apache.cxf.extension.RegistryImpl:void unregister(java.lang.Object)",
            "org.apache.cxf.endpoint.ClientImpl$EchoContext:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void handleFault(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void restoreExchange(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.addressing.AddressingProperties)",
            "org.apache.cxf.ws.policy.PolicyRegistryImpl:void remove(java.lang.String)",
            "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:void remove(org.apache.cxf.ws.security.tokenstore.SecurityToken)",
            "org.apache.cxf.ws.rm.Source:void removeSequence(org.apache.cxf.ws.rm.SourceSequence)",
            "org.apache.cxf.ws.rm.Destination:void removeSequence(org.apache.cxf.ws.rm.DestinationSequence)",
            "org.apache.cxf.ws.rm.RMManager:void shutdownReliableEndpoint(org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl:void purgeAcknowledged(org.apache.cxf.ws.rm.SourceSequence)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils$SchemaLSResourceResolver:org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.service.model.AbstractMessageContainer:void removeMessagePart(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:void setProperty(java.lang.String,java.lang.Object)",
            "org.apache.cxf.service.model.InterfaceInfo:void removeOperation(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.BindingInfo:void removeOperation(org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.service.model.OperationInfo:void removeFault(javax.xml.namespace.QName)",
            "org.apache.cxf.binding.BindingFactoryManagerImpl:void unregisterBindingFactory(java.lang.String)",
            "org.apache.cxf.clustering.FailoverTargetSelector:void complete(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.tools.common.ToolContext:void remove(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void removeDefinition(javax.wsdl.Definition)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void activateViaNS(java.lang.String)",
            "org.apache.cxf.aegis.type.DefaultTypeMapping:void removeType(org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.jaxws.JaxWsClientProxy:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:void clear()",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.jaxws.AbstractJAXWSMethodInvoker:java.util.Map removeHandlerProperties(org.apache.cxf.jaxws.context.WrappedMessageContext)",
            "org.apache.cxf.jaxws.AbstractJAXWSMethodInvoker:void updateWebServiceContext(org.apache.cxf.message.Exchange,javax.xml.ws.handler.MessageContext)"
        ]
    },
    "org.apache.cxf.configuration.spring.AbstractSpringBeanMap$SpringBeanMapWrapper:boolean containsKey(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.HttpHeaderHelper:java.lang.String getHeaderKey(java.lang.String)",
            "org.apache.cxf.common.xmlschema.FixedExtensionDeserializer:void deserialize(org.apache.ws.commons.schema.XmlSchemaObject,javax.xml.namespace.QName,org.w3c.dom.Node)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.common.util.CacheMap:void updateMainDataMap()",
            "org.apache.cxf.common.util.CacheMap:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.common.util.TwoStageMap:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.common.util.TwoStageMap:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.jaxb.JAXBDataBinding$1:javax.xml.transform.Result createOutput(java.lang.String,java.lang.String)",
            "org.apache.cxf.management.jmx.export.runtime.ModelMBeanInfoSupporter:boolean checkAttribute(java.lang.String)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:boolean isRecognizedQuery(java.lang.String,java.lang.String,org.apache.cxf.service.model.EndpointInfo,boolean)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void writeResponse(java.lang.String,java.lang.String,org.apache.cxf.service.model.EndpointInfo,java.io.OutputStream)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updateDoc(org.w3c.dom.Document,java.lang.String,java.util.Map,java.util.Map)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updateSchemaImports(javax.wsdl.extensions.schema.Schema,java.util.Map,java.lang.String)",
            "org.apache.cxf.transport.http.HTTPConduit:void transferProtocolHeadersToURLConnection(org.apache.cxf.message.Message,java.net.URLConnection)",
            "org.apache.cxf.transport.http.HTTPConduit:void setHeadersByClientPolicy(org.apache.cxf.message.Message,java.util.Map)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void copyRequestHeaders(org.apache.cxf.message.Message,java.util.Map)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void copyResponseHeaders(org.apache.cxf.message.Message,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:java.io.OutputStream flushHeaders(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.servlet.ServletContextResourceResolver:java.io.InputStream getAsStream(java.lang.String)",
            "org.apache.cxf.transport.servlet.ServletContextResourceResolver:java.lang.Object resolve(java.lang.String,java.lang.Class)",
            "org.apache.cxf.endpoint.ClientImpl:java.util.Map getRequestContext()",
            "org.apache.cxf.endpoint.ClientImpl:java.util.Map getResponseContext()",
            "org.apache.cxf.endpoint.ClientImpl:boolean isThreadLocalRequestContext()",
            "org.apache.cxf.wsdl.AbstractWSDLPlugin:boolean optionSet(java.util.Map,java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils$SchemaLSResourceResolver:org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.service.model.AbstractMessageContainer:void addMessagePart(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:boolean hasProperty(java.lang.String)",
            "org.apache.cxf.service.model.InterfaceInfo:org.apache.cxf.service.model.OperationInfo addOperation(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.BindingInfo:void addOperation(org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.service.model.OperationInfo:org.apache.cxf.service.model.FaultInfo addFault(javax.xml.namespace.QName,javax.xml.namespace.QName)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createWrappedMessageSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.AbstractMessageContainer,org.apache.cxf.service.model.AbstractMessageContainer,org.apache.ws.commons.schema.XmlSchema,javax.xml.namespace.QName)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.SchemaInfo getOrCreateSchema(org.apache.cxf.service.model.ServiceInfo,java.lang.String,boolean)",
            "org.apache.cxf.binding.soap.interceptor.SoapPreProtocolOutInterceptor:void setSoapAction(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.clustering.FailoverTargetSelector:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.tools.common.Tag:boolean equals(java.lang.Object)",
            "org.apache.cxf.tools.common.ToolContext:boolean containsKey(java.lang.String)",
            "org.apache.cxf.tools.common.ToolContext:boolean hasNamespace(java.lang.String)",
            "org.apache.cxf.tools.common.ToolContext:boolean hasExcludeNamespace(java.lang.String)",
            "org.apache.cxf.tools.common.ProcessorTestBase:boolean assertXmlEquals(java.io.File,java.io.File,java.util.List)",
            "org.apache.cxf.tools.common.model.JavaType:java.lang.String getDefaultTypeValue()",
            "org.apache.cxf.tools.util.ClassCollector:boolean containSeiClass(java.lang.String,java.lang.String)",
            "org.apache.cxf.tools.util.ClassCollector:boolean containTypesClass(java.lang.String,java.lang.String)",
            "org.apache.cxf.tools.util.ClassCollector:boolean containExceptionClass(java.lang.String,java.lang.String)",
            "org.apache.cxf.wsdl11.SchemaUtil:void addSchema(java.lang.String,javax.wsdl.extensions.schema.Schema)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(java.net.URL)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(org.w3c.dom.Element)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadAndRegister(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.aegis.type.DefaultTypeMapping:boolean isRegistered(java.lang.Class)",
            "org.apache.cxf.aegis.type.DefaultTypeMapping:boolean isRegistered(javax.xml.namespace.QName)",
            "org.apache.cxf.aegis.type.DefaultTypeMapping:void removeType(org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.jaxws.ServiceImpl:java.lang.Object getPort(javax.xml.namespace.QName,java.lang.Class,javax.xml.ws.WebServiceFeature[])",
            "org.apache.cxf.jaxws.EndpointImpl:void checkProperties()",
            "org.apache.cxf.jaxws.interceptors.SwAOutInterceptor:boolean callSWARefMethod(javax.xml.bind.JAXBContext)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:boolean isRequestor()",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:javax.xml.ws.handler.MessageContext$Scope getScope(java.lang.String)",
            "org.apache.cxf.jaxws.AbstractJAXWSMethodInvoker:void updateWebServiceContext(org.apache.cxf.message.Exchange,javax.xml.ws.handler.MessageContext)",
            "org.apache.cxf.xmlbeans.XmlBeansSchemaInitializer:org.apache.ws.commons.schema.XmlSchema getSchema(org.apache.xmlbeans.SchemaTypeSystem,java.lang.String)"
        ]
    },
    "org.apache.cxf.management.jmx.export.runtime.ModelMBeanAssembler:javax.management.modelmbean.ModelMBeanInfo getModelMbeanInfo(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.management.jmx.InstrumentationManagerImpl:void register(java.lang.Object,javax.management.ObjectName,boolean)"
        ]
    },
    "org.apache.cxf.transport.http.WSDLQueryHandler:boolean isRecognizedQuery(java.lang.String,java.lang.String,org.apache.cxf.service.model.EndpointInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.servlet.ServletController:void invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void doService(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit:void setHeadersByPolicy(org.apache.cxf.message.Message,java.net.URL,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:void prepare(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.http.AbstractHTTPDestination:void setHeaders(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void setupMessage(org.apache.cxf.message.Message,javax.servlet.ServletConfig,javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.cxf.frontend.ClientProxy:java.util.Map getRequestContext()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxws.JaxWsClientProxy:java.util.Map getRequestContext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.JaxWsProxyFactoryBean:org.apache.cxf.frontend.ClientProxy clientClientProxy(org.apache.cxf.endpoint.Client)",
            "org.apache.cxf.jaxws.JaxWsClientProxy:void setupEndpointAddressContext(org.apache.cxf.endpoint.Endpoint)"
        ]
    },
    "org.apache.cxf.jaxws.DispatchImpl:java.util.Map getRequestContext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.DispatchImpl:java.lang.Object invoke(java.lang.Object,boolean)",
            "org.apache.cxf.jaxws.DispatchImpl:java.util.concurrent.Future invokeAsync(java.lang.Object,javax.xml.ws.AsyncHandler)"
        ]
    },
    "org.apache.cxf.jaxws.DispatchImpl:void setupEndpointAddressContext(org.apache.cxf.endpoint.Endpoint)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.DispatchImpl:void <init>(org.apache.cxf.endpoint.Client,javax.xml.ws.Service$Mode,javax.xml.bind.JAXBContext,java.lang.Class)"
        ]
    },
    "org.apache.cxf.frontend.ClientProxy:java.util.Map getResponseContext()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxws.JaxWsClientProxy:java.util.Map getResponseContext()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxws.DispatchImpl:java.util.Map getResponseContext()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo addMessagePart(javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.RMEndpoint:void buildCreateSequenceOperationInfo(org.apache.cxf.service.model.InterfaceInfo)",
            "org.apache.cxf.ws.rm.RMEndpoint:void buildTerminateSequenceOperationInfo(org.apache.cxf.service.model.InterfaceInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo addMessagePart(java.lang.String)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createMessageParts(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.FaultInfo addFault(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.Class)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createFaultForException(java.lang.Class,org.apache.cxf.service.model.FaultInfo)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:boolean isWrappableSequence(org.apache.ws.commons.schema.XmlSchemaComplexType,java.lang.String,org.apache.cxf.service.model.MessageInfo,boolean)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildMessage(org.apache.cxf.service.model.AbstractMessageContainer,javax.wsdl.Message)",
            "org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean:void initializeWSDLOperationsForProvider()"
        ]
    },
    "org.apache.cxf.ws.security.trust.STSUtils:org.apache.cxf.service.model.OperationInfo addIssueOperation(org.apache.cxf.service.model.InterfaceInfo,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.trust.STSUtils:org.apache.cxf.endpoint.Endpoint createSTSEndpoint(org.apache.cxf.Bus,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.neethi.Policy,javax.xml.namespace.QName)"
        ]
    },
    "org.apache.cxf.ws.security.trust.STSUtils:org.apache.cxf.service.model.OperationInfo addCancelOperation(org.apache.cxf.service.model.InterfaceInfo,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.trust.STSUtils:org.apache.cxf.endpoint.Endpoint createSTSEndpoint(org.apache.cxf.Bus,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.neethi.Policy,javax.xml.namespace.QName)"
        ]
    },
    "org.apache.cxf.ws.rm.RMEndpoint:void buildCreateSequenceOperationInfo(org.apache.cxf.service.model.InterfaceInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.RMEndpoint:void buildOperationInfo(org.apache.cxf.service.model.InterfaceInfo)"
        ]
    },
    "org.apache.cxf.ws.rm.RMEndpoint:void buildTerminateSequenceOperationInfo(org.apache.cxf.service.model.InterfaceInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.RMEndpoint:void buildOperationInfo(org.apache.cxf.service.model.InterfaceInfo)"
        ]
    },
    "org.apache.cxf.ws.rm.RMEndpoint:void buildSequenceAckOperationInfo(org.apache.cxf.service.model.InterfaceInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.RMEndpoint:void buildOperationInfo(org.apache.cxf.service.model.InterfaceInfo)"
        ]
    },
    "org.apache.cxf.ws.rm.RMEndpoint:void buildLastMessageOperationInfo(org.apache.cxf.service.model.InterfaceInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.RMEndpoint:void buildOperationInfo(org.apache.cxf.service.model.InterfaceInfo)"
        ]
    },
    "org.apache.cxf.ws.rm.RMEndpoint:void buildAckRequestedOperationInfo(org.apache.cxf.service.model.InterfaceInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.RMEndpoint:void buildOperationInfo(org.apache.cxf.service.model.InterfaceInfo)"
        ]
    },
    "org.apache.cxf.service.model.UnwrappedOperationInfo:org.apache.cxf.service.model.FaultInfo addFault(javax.xml.namespace.QName,javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.model.UnwrappedOperationInfo:org.apache.cxf.service.model.FaultInfo addFault(javax.xml.namespace.QName,javax.xml.namespace.QName)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.FaultInfo addFault(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.Class)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildInterfaceOperation(org.apache.cxf.service.model.InterfaceInfo,javax.wsdl.Operation)"
        ]
    },
    "org.apache.cxf.binding.soap.interceptor.SoapPreProtocolOutInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.soap.interceptor.SoapPreProtocolOutInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:void prepareConduitSelector(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:void invoke(org.apache.cxf.endpoint.ClientCallback,org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[])",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)"
        ]
    },
    "org.apache.cxf.tools.common.ToolContext:java.lang.String mapPackageName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.tools.common.ToolContext:java.lang.String getCustomizedNS(java.lang.String)"
        ]
    },
    "org.apache.cxf.tools.common.model.JavaType:void writeDefaultValue(java.io.Writer,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.wsdl11.WSDLServiceFactory:void <init>(org.apache.cxf.Bus,java.net.URL)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:void <init>(org.apache.cxf.Bus,java.net.URL,javax.xml.namespace.QName,javax.xml.namespace.QName,org.apache.cxf.endpoint.EndpointImplFactory)",
            "org.apache.cxf.wsdl11.WSDLServiceFactory:void <init>(org.apache.cxf.Bus,java.net.URL,javax.xml.namespace.QName)"
        ]
    },
    "org.apache.cxf.wsdl.EndpointReferenceUtils:java.lang.String findNamespaceHack(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.namespace.QName getServiceName(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.namespace.QName getInterfaceName(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLServiceFactory:void <init>(org.apache.cxf.Bus,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.wsdl11.WSDLServiceFactory:void <init>(org.apache.cxf.Bus,java.lang.String,javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.trust.STSClient:void createClient()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromWSDL(java.lang.String)",
            "org.apache.cxf.jaxws.ServiceImpl:void initializePorts()",
            "org.apache.cxf.jaxws.ServiceImpl:org.apache.cxf.service.factory.AbstractServiceFactoryBean createDispatchService(org.apache.cxf.databinding.DataBinding)"
        ]
    },
    "org.apache.cxf.jaxws.ServiceImpl:java.lang.Object getPort(javax.xml.namespace.QName,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxws.interceptors.SwAOutInterceptor:boolean hasSwaRef(org.apache.cxf.jaxb.JAXBDataBinding)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.interceptors.SwAOutInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)"
        ]
    },
    "org.apache.cxf.jaxws.handler.soap.SOAPMessageContextImpl:java.lang.Object get(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.MapNamespaceContext:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.helpers.HttpHeaderHelper:java.util.List getHeader(java.util.Map,java.lang.String)",
            "org.apache.cxf.helpers.HttpHeaderHelper:java.lang.String getHeaderKey(java.lang.String)",
            "org.apache.cxf.helpers.HttpHeaderHelper:java.lang.String mapCharset(java.lang.String)",
            "org.apache.cxf.helpers.XMLUtils:javax.xml.transform.TransformerFactory getTransformerFactory()",
            "org.apache.cxf.helpers.XMLUtils:javax.xml.parsers.DocumentBuilderFactory getDocumentBuilderFactory()",
            "org.apache.cxf.helpers.XMLUtils:javax.xml.namespace.QName getNamespace(java.util.Map,java.lang.String,java.lang.String)",
            "org.apache.cxf.common.xmlschema.FixedExtensionDeserializer:void deserialize(org.apache.ws.commons.schema.XmlSchemaObject,javax.xml.namespace.QName,org.w3c.dom.Node)",
            "org.apache.cxf.common.logging.Log4jLogger:void setLevel(java.util.logging.Level)",
            "org.apache.cxf.common.logging.Log4jLogger:void internalLogFormatted(java.lang.String,java.util.logging.LogRecord)",
            "org.apache.cxf.common.logging.Log4jLogger$HandlerWrapper:org.apache.log4j.Priority getThreshold()",
            "org.apache.cxf.common.util.ClassReader:void readAttributes()",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.common.util.ASMHelper:java.lang.String getClassCode(java.lang.Class)",
            "org.apache.cxf.common.util.ASMHelper:org.apache.cxf.common.util.ASMHelper$TypeHelperClassLoader getTypeHelperClassLoader(java.lang.Class)",
            "org.apache.cxf.common.util.ASMHelper$TypeHelperClassLoader:java.lang.Class lookupDefinedClass(java.lang.String)",
            "org.apache.cxf.common.util.CacheMap:void updateMainDataMap()",
            "org.apache.cxf.common.util.CacheMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.common.util.ParamReader:java.lang.String[] getParameterNames(java.lang.reflect.Member,java.lang.Class[])",
            "org.apache.cxf.common.util.ParamReader:org.apache.cxf.common.util.ParamReader$MethodInfo getMethodInfo()",
            "org.apache.cxf.common.util.TwoStageMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.resource.PropertiesResolver:java.lang.Object resolve(java.lang.String,java.lang.Class)",
            "org.apache.cxf.resource.URIResolver:void tryRemote(java.lang.String)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.util.List getBeanListForId(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void mapElementToJaxbProperty(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder,java.lang.String,java.lang.Class)",
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:java.lang.Object unmarshalFactoryString(java.lang.String,java.lang.Class)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void initWildcardDefinitionMap()",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureWithWildCard(java.lang.String,java.lang.Object)",
            "org.apache.cxf.jaxb.NamespaceMapper:java.lang.String getPreferredPrefix(java.lang.String,java.lang.String,boolean)",
            "org.apache.cxf.jaxb.JAXBUtils:java.lang.String builtInTypeToJavaType(java.lang.String)",
            "org.apache.cxf.jaxb.JAXBUtils:java.lang.Class holderClass(java.lang.String)",
            "org.apache.cxf.jaxb.JAXBDataBinding:org.apache.cxf.jaxb.JAXBDataBinding$CachedContextAndSchemas createJAXBContextAndSchemas(java.util.Set,java.lang.String)",
            "org.apache.cxf.jaxb.JAXBDataBinding:void scanPackages(java.util.Set)",
            "org.apache.cxf.jaxb.JAXBDataBinding$1:javax.xml.transform.Result createOutput(java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxb.WrapperHelperCompiler:boolean addCreateWrapperObject(java.lang.String,java.lang.Class)",
            "org.apache.cxf.jaxb.WrapperHelperCompiler:void createObjectWrapper(org.objectweb.asm.MethodVisitor,java.lang.Class)",
            "org.apache.cxf.management.counters.CounterRepository:org.apache.cxf.management.counters.Counter getCounter(javax.management.ObjectName)",
            "org.apache.cxf.staxutils.AbstractDOMStreamReader:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.staxutils.W3CDOMStreamWriter:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.message.MessageImpl:java.lang.Object getContent(java.lang.Class)",
            "org.apache.cxf.headers.HeaderManagerImpl:org.apache.cxf.headers.HeaderProcessor getHeaderProcessor(java.lang.String)",
            "org.apache.cxf.interceptor.StaxOutInterceptor:javax.xml.stream.XMLOutputFactory getXMLOutputFactory(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.util.Map keepInOrder(java.util.Map,org.apache.cxf.service.model.OperationInfo,java.util.List)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:org.apache.cxf.message.MessageContentsList getParameters(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.interceptor.ClientOutFaultObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxInInterceptor:javax.xml.stream.XMLInputFactory getXMLInputFactory(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.FIStaxOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.ConduitInitiatorManagerImpl:org.apache.cxf.transport.ConduitInitiator getConduitInitiator(java.lang.String)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void writeResponse(java.lang.String,java.lang.String,org.apache.cxf.service.model.EndpointInfo,java.io.OutputStream)",
            "org.apache.cxf.transport.http.DigestAuthSupplier:java.lang.String getPreemptiveAuthorization(org.apache.cxf.transport.http.HTTPConduit,java.net.URL,org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:void transferProtocolHeadersToURLConnection(org.apache.cxf.message.Message,java.net.URLConnection)",
            "org.apache.cxf.transport.http.HTTPConduit:void logProtocolHeaders(java.util.logging.Level,org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:java.lang.String extractAuthorizationRealm(java.util.Map)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void copyRequestHeaders(org.apache.cxf.message.Message,java.util.Map)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void copyResponseHeaders(org.apache.cxf.message.Message,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:java.lang.String getId(java.util.Map)",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponseInternal()",
            "org.apache.cxf.transport.http.gzip.GZIPOutInterceptor:void addHeader(org.apache.cxf.message.Message,java.lang.String,java.lang.String)",
            "org.apache.cxf.transport.AbstractMultiplexDestination:java.lang.String getId(java.util.Map)",
            "org.apache.cxf.transport.DestinationFactoryManagerImpl:org.apache.cxf.transport.DestinationFactory getDestinationFactory(java.lang.String)",
            "org.apache.cxf.transport.servlet.ServletContextResourceResolver:java.io.InputStream getAsStream(java.lang.String)",
            "org.apache.cxf.transport.servlet.ServletContextResourceResolver:java.lang.Object resolve(java.lang.String,java.lang.Class)",
            "org.apache.cxf.transport.servlet.ServletTransportFactory:org.apache.cxf.transport.servlet.ServletDestination getDestinationForPath(java.lang.String)",
            "org.apache.cxf.transport.servlet.AbstractCXFServlet:void init(javax.servlet.ServletConfig)",
            "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser$SpringJettyHTTPServerEngine:void finalizeConfig()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPTransportFactory:org.apache.cxf.transport.Destination getDestination(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPTransportFactory:org.apache.cxf.transport.http_jetty.JettyHTTPDestination createDestination(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine retrieveJettyHTTPServerEngine(int)",
            "org.apache.cxf.transport.jms.JMSUtils:void addContentTypeToProtocolHeader(org.apache.cxf.message.Message)",
            "org.apache.cxf.NSManager:java.lang.String getPrefixFromNS(java.lang.String)",
            "org.apache.cxf.extension.RegistryImpl:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.endpoint.ClientImpl:java.util.Map getRequestContext()",
            "org.apache.cxf.endpoint.ClientImpl:java.util.Map getResponseContext()",
            "org.apache.cxf.endpoint.ClientImpl:boolean isThreadLocalRequestContext()",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.ClientImpl:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.addressing.ContextUtils:java.lang.String getActionFromServiceModel(org.apache.cxf.message.Message,java.lang.Exception)",
            "org.apache.cxf.ws.addressing.ContextUtils:java.lang.String getAction(org.apache.cxf.service.model.Extensible)",
            "org.apache.cxf.ws.addressing.MAPAggregator:boolean validateIncomingMAPs(org.apache.cxf.ws.addressing.AddressingProperties,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void propogateAction(org.apache.cxf.ws.addressing.AttributedURIType,org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void restoreExchange(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.addressing.AddressingProperties)",
            "org.apache.cxf.ws.policy.PolicyRegistryImpl:org.apache.neethi.Policy lookup(java.lang.String)",
            "org.apache.cxf.ws.security.policy.interceptors.HttpsTokenInterceptorProvider$HttpsTokenInInterceptor:void assertHttps(java.util.Collection,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.policy.interceptors.HttpsTokenInterceptorProvider$HttpsTokenOutInterceptor:void assertHttps(java.util.Collection,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.trust.STSClient:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:org.apache.cxf.ws.security.tokenstore.SecurityToken getToken(java.lang.String)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:org.apache.ws.security.components.crypto.Crypto getCrypto(org.apache.cxf.ws.security.policy.model.TokenWrapper,java.lang.String,java.lang.String)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:java.util.Properties getProps(java.lang.Object,org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor:void <init>(java.util.Map)",
            "org.apache.cxf.ws.security.wss4j.AbstractWSS4JInterceptor:java.lang.Object getOption(java.lang.String)",
            "org.apache.cxf.ws.security.wss4j.AbstractWSS4JInterceptor:org.apache.ws.security.components.crypto.Crypto loadSignatureCrypto(org.apache.ws.security.handler.RequestData)",
            "org.apache.cxf.ws.security.wss4j.AbstractWSS4JInterceptor:org.apache.ws.security.components.crypto.Crypto loadDecryptionCrypto(org.apache.ws.security.handler.RequestData)",
            "org.apache.cxf.ws.security.wss4j.AbstractWSS4JInterceptor:org.apache.ws.security.components.crypto.Crypto loadEncryptionCrypto(org.apache.ws.security.handler.RequestData)",
            "org.apache.cxf.ws.rm.Source:org.apache.cxf.ws.rm.SourceSequence getSequence(org.apache.cxf.ws.rm.Identifier)",
            "org.apache.cxf.ws.rm.Source:org.apache.cxf.ws.rm.SourceSequence getAssociatedSequence(org.apache.cxf.ws.rm.Identifier)",
            "org.apache.cxf.ws.rm.RMOutInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.Destination:org.apache.cxf.ws.rm.DestinationSequence getSequence(org.apache.cxf.ws.rm.Identifier)",
            "org.apache.cxf.ws.rm.RMManager:org.apache.cxf.ws.rm.RMEndpoint getReliableEndpoint(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.RMManager:void shutdownReliableEndpoint(org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl:java.util.List getSequenceCandidates(java.lang.String)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void add(org.apache.cxf.interceptor.Interceptor,boolean)",
            "org.apache.cxf.workqueue.WorkQueueManagerImpl:org.apache.cxf.workqueue.AutomaticWorkQueue getNamedWorkQueue(java.lang.String)",
            "org.apache.cxf.databinding.AbstractDataBinding:void updateSchemaLocation(org.w3c.dom.Element)",
            "org.apache.cxf.databinding.source.mime.MimeSerializer:void serialize(org.apache.ws.commons.schema.XmlSchemaObject,java.lang.Class,org.w3c.dom.Node)",
            "org.apache.cxf.wsdl.AbstractWSDLPlugin:java.lang.String getOption(java.util.Map,java.lang.String)",
            "org.apache.cxf.wsdl.AbstractWSDLPlugin:java.lang.Object getOption(java.util.Map,java.lang.String,java.lang.Class)",
            "org.apache.cxf.wsdl.AbstractWSDLPlugin:java.lang.Object getOption(java.util.Map,java.lang.Class)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:int getIndentLevel(java.lang.Class)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:java.lang.String getWSDLLocation(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:java.lang.String getEndpointReferenceId(java.util.Map)",
            "org.apache.cxf.service.model.BindingOperationInfo:org.apache.cxf.service.model.BindingFaultInfo getFault(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.AbstractMessageContainer:void addMessagePart(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePart(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:java.lang.Object getExtensionAttribute(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperationForWrapperElement(org.apache.cxf.message.Exchange,javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.service.model.InterfaceInfo:org.apache.cxf.service.model.OperationInfo getOperation(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.MessageInfo getMessage(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.MessageInfo:java.util.List getOrderedParts(java.util.List)",
            "org.apache.cxf.service.model.BindingInfo:org.apache.cxf.service.model.BindingOperationInfo getOperation(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.OperationInfo:org.apache.cxf.service.model.FaultInfo getFault(javax.xml.namespace.QName)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void addImport(org.apache.ws.commons.schema.XmlSchema,java.lang.String)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isWrapped(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isRPC(java.lang.reflect.Method)",
            "org.apache.cxf.binding.BindingFactoryManagerImpl:org.apache.cxf.binding.BindingFactory getBindingFactory(java.lang.String)",
            "org.apache.cxf.binding.soap.interceptor.SoapActionInInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.SoapVersionFactory:org.apache.cxf.binding.soap.SoapVersion getSoapVersion(java.lang.String)",
            "org.apache.cxf.clustering.AbstractStaticFailoverStrategy:java.util.List getAlternateEndpoints(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.clustering.FailoverTargetSelector:void complete(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.clustering.FailoverTargetSelector:void overrideAddressProperty(java.util.Map)",
            "org.apache.cxf.tools.common.Tag:boolean equals(java.lang.Object)",
            "org.apache.cxf.tools.common.ToolContext:void addParameters(java.util.Map)",
            "org.apache.cxf.tools.common.ToolContext:java.lang.Object get(java.lang.String)",
            "org.apache.cxf.tools.common.ToolContext:java.lang.String mapNamespaceToPackageName(java.lang.String)",
            "org.apache.cxf.tools.common.ToolContext:java.lang.String getExcludePackageName(java.lang.String)",
            "org.apache.cxf.tools.common.VelocityGenerator:void doWrite(java.lang.String,java.io.Writer)",
            "org.apache.cxf.tools.common.ProcessorTestBase:boolean assertXmlEquals(java.io.File,java.io.File,java.util.List)",
            "org.apache.cxf.tools.common.ProcessorTestBase:void assertAttributesEquals(javax.xml.namespace.QName,java.util.Map,java.util.Map,java.util.Collection)",
            "org.apache.cxf.tools.common.model.JavaType:java.lang.String getDefaultTypeValue()",
            "org.apache.cxf.tools.common.model.JavaMethod:boolean isEquiv(java.lang.String,java.lang.String)",
            "org.apache.cxf.tools.common.model.JavaParameter:org.apache.cxf.tools.common.model.JAnnotation getAnnotation(java.lang.String)",
            "org.apache.cxf.tools.util.BuiltInTypesJavaMappingUtil:java.lang.String getJType(java.lang.String,java.lang.String)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:java.lang.String getBindingAnnotation(java.lang.String)",
            "org.apache.cxf.tools.util.PropertyUtil:java.lang.String getProperty(java.lang.String)",
            "org.apache.cxf.tools.util.ClassCollector:java.lang.String getTypesFullClassName(java.lang.String,java.lang.String)",
            "org.apache.cxf.wsdl11.SchemaUtil:void extractSchema(javax.wsdl.Definition,org.apache.cxf.common.xmlschema.SchemaCollection,java.util.List)",
            "org.apache.cxf.wsdl11.SchemaUtil:void addSchema(java.lang.String,javax.wsdl.extensions.schema.Schema)",
            "org.apache.cxf.wsdl11.SchemaUtil:boolean isSchemaParsed(java.lang.String,java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:java.util.Collection getImports(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addExtensibilityAttributes(javax.wsdl.extensions.AttributeExtensible,java.util.Map)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(java.net.URL)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(org.w3c.dom.Element)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:org.apache.cxf.service.model.ServiceSchemaInfo getSchemasForDefinition(javax.wsdl.Definition)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void activateViaNS(java.lang.String)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void processExtension(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadAndRegister(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:java.lang.Object getExtension(java.lang.String,java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void <init>(java.util.Map,java.util.Map)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:java.lang.String getBusId(java.util.Map)",
            "org.apache.cxf.bus.CXFBusImpl:java.lang.Object getExtension(java.lang.Class)",
            "org.apache.cxf.attachment.AttachmentImpl:java.lang.String getHeader(java.lang.String)",
            "org.apache.cxf.frontend.ClientFactoryBean:void applyExtraClass()",
            "org.apache.cxf.frontend.ClientFactoryBean:void applyProperties(org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.frontend.SimpleMethodDispatcher:org.apache.cxf.service.model.BindingOperationInfo getBindingOperation(java.lang.reflect.Method,org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.frontend.SimpleMethodDispatcher:java.lang.reflect.Method getMethod(org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.frontend.SimpleMethodDispatcher:java.lang.reflect.Method getPrimaryMethod(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory:org.apache.cxf.endpoint.Endpoint createEndpoint()",
            "org.apache.cxf.frontend.ServerFactoryBean:void applyExtraClass()",
            "org.apache.cxf.aegis.Context:java.lang.Object getProperty(java.lang.Class)",
            "org.apache.cxf.aegis.util.jdom.StaxBuilder:void buildTree(org.jdom.JDOMFactory,javax.xml.stream.XMLStreamReader,org.jdom.Document)",
            "org.apache.cxf.aegis.util.jdom.StaxBuilder:int resolveAttrType(java.lang.String)",
            "org.apache.cxf.aegis.util.stax.JDOMStreamWriter:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.aegis.util.stax.JDOMStreamReader:java.lang.String getDeclaredURI(java.lang.String)",
            "org.apache.cxf.aegis.databinding.XMLStreamDataWriter:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.aegis.databinding.ElementDataWriter:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:org.apache.cxf.aegis.type.Type getType(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.aegis.type.basic.XMLBeanTypeInfo:org.apache.cxf.aegis.type.basic.BeanTypePropertyInfo getPropertyInfo(javax.xml.namespace.QName)",
            "org.apache.cxf.aegis.type.basic.BeanType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.InterfaceInvocationHandler:java.lang.Object readProperty(java.lang.Object)",
            "org.apache.cxf.aegis.type.basic.BeanTypeInfo:org.apache.cxf.aegis.type.Type getType(javax.xml.namespace.QName)",
            "org.apache.cxf.aegis.type.basic.BeanTypeInfo:javax.xml.namespace.QName getMappedTypeName(javax.xml.namespace.QName)",
            "org.apache.cxf.aegis.type.basic.BeanTypeInfo:java.lang.String getPropertyNameFromMappedName(javax.xml.namespace.QName)",
            "org.apache.cxf.aegis.type.encoded.MarshalRegistry:java.lang.String getInstanceId(java.lang.Object)",
            "org.apache.cxf.aegis.type.XMLTypeCreator:org.w3c.dom.Document getDocument(java.lang.Class)",
            "org.apache.cxf.aegis.type.DefaultTypeMapping:org.apache.cxf.aegis.type.Type getType(java.lang.Class)",
            "org.apache.cxf.aegis.type.DefaultTypeMapping:org.apache.cxf.aegis.type.Type getType(javax.xml.namespace.QName)",
            "org.apache.cxf.aegis.type.DefaultTypeMapping:javax.xml.namespace.QName getTypeQName(java.lang.Class)",
            "org.apache.cxf.jaxws.handler.HandlerResolverImpl:java.util.List getHandlerChain(javax.xml.ws.handler.PortInfo)",
            "org.apache.cxf.jaxws.handler.InitParamResourceResolver:java.lang.Object resolve(java.lang.String,java.lang.Class)",
            "org.apache.cxf.jaxws.handler.soap.SOAPMessageContextImpl:javax.xml.soap.SOAPMessage getMessage()",
            "org.apache.cxf.jaxws.support.JaxWsServiceConfiguration:javax.jws.WebParam getWebParam(java.lang.reflect.Method,int)",
            "org.apache.cxf.jaxws.support.JaxWsServiceConfiguration:java.lang.Class getResponseWrapper(java.lang.reflect.Method)",
            "org.apache.cxf.jaxws.support.JaxWsServiceConfiguration:java.lang.Class getRequestWrapper(java.lang.reflect.Method)",
            "org.apache.cxf.jaxws.JaxWsClientProxy:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])",
            "org.apache.cxf.jaxws.ServiceImpl:java.lang.Object createPort(javax.xml.namespace.QName,org.apache.cxf.ws.addressing.EndpointReferenceType,java.lang.Class,javax.xml.ws.WebServiceFeature[])",
            "org.apache.cxf.jaxws.ServiceImpl:org.apache.cxf.jaxws.handler.PortInfoImpl getPortInfo(javax.xml.namespace.QName)",
            "org.apache.cxf.jaxws.EndpointImpl:void checkProperties()",
            "org.apache.cxf.jaxws.DispatchImpl:java.lang.Object invoke(java.lang.Object,boolean)",
            "org.apache.cxf.jaxws.DispatchImpl:java.util.concurrent.Future invokeAsync(java.lang.Object,javax.xml.ws.AsyncHandler)",
            "org.apache.cxf.jaxws.interceptors.SwAOutInterceptor:boolean callSWARefMethod(javax.xml.bind.JAXBContext)",
            "org.apache.cxf.jaxws.context.WebServiceContextImpl:java.security.Principal getUserPrincipal()",
            "org.apache.cxf.jaxws.context.WebServiceContextImpl:boolean isUserInRole(java.lang.String)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:void <init>(java.util.Map,org.apache.cxf.message.Exchange,javax.xml.ws.handler.MessageContext$Scope)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:void copyScoped(java.util.Map)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:java.lang.String mapKey(java.lang.String)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:java.lang.String mapKeyReverse(java.lang.String)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:java.lang.Object put(java.lang.String,java.lang.Object,javax.xml.ws.handler.MessageContext$Scope)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:javax.xml.ws.handler.MessageContext$Scope getScope(java.lang.String)",
            "org.apache.cxf.jaxws.AbstractJAXWSMethodInvoker:java.util.Map removeHandlerProperties(org.apache.cxf.jaxws.context.WrappedMessageContext)",
            "org.apache.cxf.jaxws.AbstractJAXWSMethodInvoker:void updateWebServiceContext(org.apache.cxf.message.Exchange,javax.xml.ws.handler.MessageContext)",
            "org.apache.cxf.xmlbeans.XmlBeansSchemaInitializer:org.apache.ws.commons.schema.XmlSchema getSchema(org.apache.xmlbeans.SchemaTypeSystem,java.lang.String)",
            "org.apache.cxf.xmlbeans.XmlBeansSchemaInitializer:void mapClass(org.apache.cxf.service.model.MessagePartInfo,java.lang.Class)",
            "org.apache.cxf.xmlbeans.tools.XMLBeansSchemaTypeUtils:java.lang.String getNaturalJavaClassName(org.apache.xmlbeans.SchemaType)"
        ]
    },
    "org.apache.cxf.jaxws.handler.logical.LogicalMessageContextImpl:java.lang.Object get(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.MapNamespaceContext:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.helpers.HttpHeaderHelper:java.util.List getHeader(java.util.Map,java.lang.String)",
            "org.apache.cxf.helpers.HttpHeaderHelper:java.lang.String getHeaderKey(java.lang.String)",
            "org.apache.cxf.helpers.HttpHeaderHelper:java.lang.String mapCharset(java.lang.String)",
            "org.apache.cxf.helpers.XMLUtils:javax.xml.transform.TransformerFactory getTransformerFactory()",
            "org.apache.cxf.helpers.XMLUtils:javax.xml.parsers.DocumentBuilderFactory getDocumentBuilderFactory()",
            "org.apache.cxf.helpers.XMLUtils:javax.xml.namespace.QName getNamespace(java.util.Map,java.lang.String,java.lang.String)",
            "org.apache.cxf.common.xmlschema.FixedExtensionDeserializer:void deserialize(org.apache.ws.commons.schema.XmlSchemaObject,javax.xml.namespace.QName,org.w3c.dom.Node)",
            "org.apache.cxf.common.logging.Log4jLogger:void setLevel(java.util.logging.Level)",
            "org.apache.cxf.common.logging.Log4jLogger:void internalLogFormatted(java.lang.String,java.util.logging.LogRecord)",
            "org.apache.cxf.common.logging.Log4jLogger$HandlerWrapper:org.apache.log4j.Priority getThreshold()",
            "org.apache.cxf.common.util.ClassReader:void readAttributes()",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.common.util.ASMHelper:java.lang.String getClassCode(java.lang.Class)",
            "org.apache.cxf.common.util.ASMHelper:org.apache.cxf.common.util.ASMHelper$TypeHelperClassLoader getTypeHelperClassLoader(java.lang.Class)",
            "org.apache.cxf.common.util.ASMHelper$TypeHelperClassLoader:java.lang.Class lookupDefinedClass(java.lang.String)",
            "org.apache.cxf.common.util.CacheMap:void updateMainDataMap()",
            "org.apache.cxf.common.util.CacheMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.common.util.ParamReader:java.lang.String[] getParameterNames(java.lang.reflect.Member,java.lang.Class[])",
            "org.apache.cxf.common.util.ParamReader:org.apache.cxf.common.util.ParamReader$MethodInfo getMethodInfo()",
            "org.apache.cxf.common.util.TwoStageMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.resource.PropertiesResolver:java.lang.Object resolve(java.lang.String,java.lang.Class)",
            "org.apache.cxf.resource.URIResolver:void tryRemote(java.lang.String)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.util.List getBeanListForId(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void mapElementToJaxbProperty(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder,java.lang.String,java.lang.Class)",
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:java.lang.Object unmarshalFactoryString(java.lang.String,java.lang.Class)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void initWildcardDefinitionMap()",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureWithWildCard(java.lang.String,java.lang.Object)",
            "org.apache.cxf.jaxb.NamespaceMapper:java.lang.String getPreferredPrefix(java.lang.String,java.lang.String,boolean)",
            "org.apache.cxf.jaxb.JAXBUtils:java.lang.String builtInTypeToJavaType(java.lang.String)",
            "org.apache.cxf.jaxb.JAXBUtils:java.lang.Class holderClass(java.lang.String)",
            "org.apache.cxf.jaxb.JAXBDataBinding:org.apache.cxf.jaxb.JAXBDataBinding$CachedContextAndSchemas createJAXBContextAndSchemas(java.util.Set,java.lang.String)",
            "org.apache.cxf.jaxb.JAXBDataBinding:void scanPackages(java.util.Set)",
            "org.apache.cxf.jaxb.JAXBDataBinding$1:javax.xml.transform.Result createOutput(java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxb.WrapperHelperCompiler:boolean addCreateWrapperObject(java.lang.String,java.lang.Class)",
            "org.apache.cxf.jaxb.WrapperHelperCompiler:void createObjectWrapper(org.objectweb.asm.MethodVisitor,java.lang.Class)",
            "org.apache.cxf.management.counters.CounterRepository:org.apache.cxf.management.counters.Counter getCounter(javax.management.ObjectName)",
            "org.apache.cxf.staxutils.AbstractDOMStreamReader:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.staxutils.W3CDOMStreamWriter:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.message.MessageImpl:java.lang.Object getContent(java.lang.Class)",
            "org.apache.cxf.headers.HeaderManagerImpl:org.apache.cxf.headers.HeaderProcessor getHeaderProcessor(java.lang.String)",
            "org.apache.cxf.interceptor.StaxOutInterceptor:javax.xml.stream.XMLOutputFactory getXMLOutputFactory(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.util.Map keepInOrder(java.util.Map,org.apache.cxf.service.model.OperationInfo,java.util.List)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:org.apache.cxf.message.MessageContentsList getParameters(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.interceptor.ClientOutFaultObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxInInterceptor:javax.xml.stream.XMLInputFactory getXMLInputFactory(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.FIStaxOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.ConduitInitiatorManagerImpl:org.apache.cxf.transport.ConduitInitiator getConduitInitiator(java.lang.String)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void writeResponse(java.lang.String,java.lang.String,org.apache.cxf.service.model.EndpointInfo,java.io.OutputStream)",
            "org.apache.cxf.transport.http.DigestAuthSupplier:java.lang.String getPreemptiveAuthorization(org.apache.cxf.transport.http.HTTPConduit,java.net.URL,org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:void transferProtocolHeadersToURLConnection(org.apache.cxf.message.Message,java.net.URLConnection)",
            "org.apache.cxf.transport.http.HTTPConduit:void logProtocolHeaders(java.util.logging.Level,org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:java.lang.String extractAuthorizationRealm(java.util.Map)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void copyRequestHeaders(org.apache.cxf.message.Message,java.util.Map)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void copyResponseHeaders(org.apache.cxf.message.Message,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:java.lang.String getId(java.util.Map)",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponseInternal()",
            "org.apache.cxf.transport.http.gzip.GZIPOutInterceptor:void addHeader(org.apache.cxf.message.Message,java.lang.String,java.lang.String)",
            "org.apache.cxf.transport.AbstractMultiplexDestination:java.lang.String getId(java.util.Map)",
            "org.apache.cxf.transport.DestinationFactoryManagerImpl:org.apache.cxf.transport.DestinationFactory getDestinationFactory(java.lang.String)",
            "org.apache.cxf.transport.servlet.ServletContextResourceResolver:java.io.InputStream getAsStream(java.lang.String)",
            "org.apache.cxf.transport.servlet.ServletContextResourceResolver:java.lang.Object resolve(java.lang.String,java.lang.Class)",
            "org.apache.cxf.transport.servlet.ServletTransportFactory:org.apache.cxf.transport.servlet.ServletDestination getDestinationForPath(java.lang.String)",
            "org.apache.cxf.transport.servlet.AbstractCXFServlet:void init(javax.servlet.ServletConfig)",
            "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser$SpringJettyHTTPServerEngine:void finalizeConfig()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPTransportFactory:org.apache.cxf.transport.Destination getDestination(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPTransportFactory:org.apache.cxf.transport.http_jetty.JettyHTTPDestination createDestination(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine retrieveJettyHTTPServerEngine(int)",
            "org.apache.cxf.transport.jms.JMSUtils:void addContentTypeToProtocolHeader(org.apache.cxf.message.Message)",
            "org.apache.cxf.NSManager:java.lang.String getPrefixFromNS(java.lang.String)",
            "org.apache.cxf.extension.RegistryImpl:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.endpoint.ClientImpl:java.util.Map getRequestContext()",
            "org.apache.cxf.endpoint.ClientImpl:java.util.Map getResponseContext()",
            "org.apache.cxf.endpoint.ClientImpl:boolean isThreadLocalRequestContext()",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.ClientImpl:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.addressing.ContextUtils:java.lang.String getActionFromServiceModel(org.apache.cxf.message.Message,java.lang.Exception)",
            "org.apache.cxf.ws.addressing.ContextUtils:java.lang.String getAction(org.apache.cxf.service.model.Extensible)",
            "org.apache.cxf.ws.addressing.MAPAggregator:boolean validateIncomingMAPs(org.apache.cxf.ws.addressing.AddressingProperties,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void propogateAction(org.apache.cxf.ws.addressing.AttributedURIType,org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void restoreExchange(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.addressing.AddressingProperties)",
            "org.apache.cxf.ws.policy.PolicyRegistryImpl:org.apache.neethi.Policy lookup(java.lang.String)",
            "org.apache.cxf.ws.security.policy.interceptors.HttpsTokenInterceptorProvider$HttpsTokenInInterceptor:void assertHttps(java.util.Collection,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.policy.interceptors.HttpsTokenInterceptorProvider$HttpsTokenOutInterceptor:void assertHttps(java.util.Collection,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.trust.STSClient:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:org.apache.cxf.ws.security.tokenstore.SecurityToken getToken(java.lang.String)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:org.apache.ws.security.components.crypto.Crypto getCrypto(org.apache.cxf.ws.security.policy.model.TokenWrapper,java.lang.String,java.lang.String)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:java.util.Properties getProps(java.lang.Object,org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor:void <init>(java.util.Map)",
            "org.apache.cxf.ws.security.wss4j.AbstractWSS4JInterceptor:java.lang.Object getOption(java.lang.String)",
            "org.apache.cxf.ws.security.wss4j.AbstractWSS4JInterceptor:org.apache.ws.security.components.crypto.Crypto loadSignatureCrypto(org.apache.ws.security.handler.RequestData)",
            "org.apache.cxf.ws.security.wss4j.AbstractWSS4JInterceptor:org.apache.ws.security.components.crypto.Crypto loadDecryptionCrypto(org.apache.ws.security.handler.RequestData)",
            "org.apache.cxf.ws.security.wss4j.AbstractWSS4JInterceptor:org.apache.ws.security.components.crypto.Crypto loadEncryptionCrypto(org.apache.ws.security.handler.RequestData)",
            "org.apache.cxf.ws.rm.Source:org.apache.cxf.ws.rm.SourceSequence getSequence(org.apache.cxf.ws.rm.Identifier)",
            "org.apache.cxf.ws.rm.Source:org.apache.cxf.ws.rm.SourceSequence getAssociatedSequence(org.apache.cxf.ws.rm.Identifier)",
            "org.apache.cxf.ws.rm.RMOutInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.Destination:org.apache.cxf.ws.rm.DestinationSequence getSequence(org.apache.cxf.ws.rm.Identifier)",
            "org.apache.cxf.ws.rm.RMManager:org.apache.cxf.ws.rm.RMEndpoint getReliableEndpoint(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.RMManager:void shutdownReliableEndpoint(org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl:java.util.List getSequenceCandidates(java.lang.String)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void add(org.apache.cxf.interceptor.Interceptor,boolean)",
            "org.apache.cxf.workqueue.WorkQueueManagerImpl:org.apache.cxf.workqueue.AutomaticWorkQueue getNamedWorkQueue(java.lang.String)",
            "org.apache.cxf.databinding.AbstractDataBinding:void updateSchemaLocation(org.w3c.dom.Element)",
            "org.apache.cxf.databinding.source.mime.MimeSerializer:void serialize(org.apache.ws.commons.schema.XmlSchemaObject,java.lang.Class,org.w3c.dom.Node)",
            "org.apache.cxf.wsdl.AbstractWSDLPlugin:java.lang.String getOption(java.util.Map,java.lang.String)",
            "org.apache.cxf.wsdl.AbstractWSDLPlugin:java.lang.Object getOption(java.util.Map,java.lang.String,java.lang.Class)",
            "org.apache.cxf.wsdl.AbstractWSDLPlugin:java.lang.Object getOption(java.util.Map,java.lang.Class)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:int getIndentLevel(java.lang.Class)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:java.lang.String getWSDLLocation(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:java.lang.String getEndpointReferenceId(java.util.Map)",
            "org.apache.cxf.service.model.BindingOperationInfo:org.apache.cxf.service.model.BindingFaultInfo getFault(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.AbstractMessageContainer:void addMessagePart(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePart(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:java.lang.Object getExtensionAttribute(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperationForWrapperElement(org.apache.cxf.message.Exchange,javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.service.model.InterfaceInfo:org.apache.cxf.service.model.OperationInfo getOperation(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.MessageInfo getMessage(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.MessageInfo:java.util.List getOrderedParts(java.util.List)",
            "org.apache.cxf.service.model.BindingInfo:org.apache.cxf.service.model.BindingOperationInfo getOperation(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.OperationInfo:org.apache.cxf.service.model.FaultInfo getFault(javax.xml.namespace.QName)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void addImport(org.apache.ws.commons.schema.XmlSchema,java.lang.String)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isWrapped(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isRPC(java.lang.reflect.Method)",
            "org.apache.cxf.binding.BindingFactoryManagerImpl:org.apache.cxf.binding.BindingFactory getBindingFactory(java.lang.String)",
            "org.apache.cxf.binding.soap.interceptor.SoapActionInInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.SoapVersionFactory:org.apache.cxf.binding.soap.SoapVersion getSoapVersion(java.lang.String)",
            "org.apache.cxf.clustering.AbstractStaticFailoverStrategy:java.util.List getAlternateEndpoints(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.clustering.FailoverTargetSelector:void complete(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.clustering.FailoverTargetSelector:void overrideAddressProperty(java.util.Map)",
            "org.apache.cxf.tools.common.Tag:boolean equals(java.lang.Object)",
            "org.apache.cxf.tools.common.ToolContext:void addParameters(java.util.Map)",
            "org.apache.cxf.tools.common.ToolContext:java.lang.Object get(java.lang.String)",
            "org.apache.cxf.tools.common.ToolContext:java.lang.String mapNamespaceToPackageName(java.lang.String)",
            "org.apache.cxf.tools.common.ToolContext:java.lang.String getExcludePackageName(java.lang.String)",
            "org.apache.cxf.tools.common.VelocityGenerator:void doWrite(java.lang.String,java.io.Writer)",
            "org.apache.cxf.tools.common.ProcessorTestBase:boolean assertXmlEquals(java.io.File,java.io.File,java.util.List)",
            "org.apache.cxf.tools.common.ProcessorTestBase:void assertAttributesEquals(javax.xml.namespace.QName,java.util.Map,java.util.Map,java.util.Collection)",
            "org.apache.cxf.tools.common.model.JavaType:java.lang.String getDefaultTypeValue()",
            "org.apache.cxf.tools.common.model.JavaMethod:boolean isEquiv(java.lang.String,java.lang.String)",
            "org.apache.cxf.tools.common.model.JavaParameter:org.apache.cxf.tools.common.model.JAnnotation getAnnotation(java.lang.String)",
            "org.apache.cxf.tools.util.BuiltInTypesJavaMappingUtil:java.lang.String getJType(java.lang.String,java.lang.String)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:java.lang.String getBindingAnnotation(java.lang.String)",
            "org.apache.cxf.tools.util.PropertyUtil:java.lang.String getProperty(java.lang.String)",
            "org.apache.cxf.tools.util.ClassCollector:java.lang.String getTypesFullClassName(java.lang.String,java.lang.String)",
            "org.apache.cxf.wsdl11.SchemaUtil:void extractSchema(javax.wsdl.Definition,org.apache.cxf.common.xmlschema.SchemaCollection,java.util.List)",
            "org.apache.cxf.wsdl11.SchemaUtil:void addSchema(java.lang.String,javax.wsdl.extensions.schema.Schema)",
            "org.apache.cxf.wsdl11.SchemaUtil:boolean isSchemaParsed(java.lang.String,java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:java.util.Collection getImports(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addExtensibilityAttributes(javax.wsdl.extensions.AttributeExtensible,java.util.Map)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(java.net.URL)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(org.w3c.dom.Element)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:org.apache.cxf.service.model.ServiceSchemaInfo getSchemasForDefinition(javax.wsdl.Definition)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void activateViaNS(java.lang.String)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void processExtension(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadAndRegister(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:java.lang.Object getExtension(java.lang.String,java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void <init>(java.util.Map,java.util.Map)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:java.lang.String getBusId(java.util.Map)",
            "org.apache.cxf.bus.CXFBusImpl:java.lang.Object getExtension(java.lang.Class)",
            "org.apache.cxf.attachment.AttachmentImpl:java.lang.String getHeader(java.lang.String)",
            "org.apache.cxf.frontend.ClientFactoryBean:void applyExtraClass()",
            "org.apache.cxf.frontend.ClientFactoryBean:void applyProperties(org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.frontend.SimpleMethodDispatcher:org.apache.cxf.service.model.BindingOperationInfo getBindingOperation(java.lang.reflect.Method,org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.frontend.SimpleMethodDispatcher:java.lang.reflect.Method getMethod(org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.frontend.SimpleMethodDispatcher:java.lang.reflect.Method getPrimaryMethod(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory:org.apache.cxf.endpoint.Endpoint createEndpoint()",
            "org.apache.cxf.frontend.ServerFactoryBean:void applyExtraClass()",
            "org.apache.cxf.aegis.Context:java.lang.Object getProperty(java.lang.Class)",
            "org.apache.cxf.aegis.util.jdom.StaxBuilder:void buildTree(org.jdom.JDOMFactory,javax.xml.stream.XMLStreamReader,org.jdom.Document)",
            "org.apache.cxf.aegis.util.jdom.StaxBuilder:int resolveAttrType(java.lang.String)",
            "org.apache.cxf.aegis.util.stax.JDOMStreamWriter:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.aegis.util.stax.JDOMStreamReader:java.lang.String getDeclaredURI(java.lang.String)",
            "org.apache.cxf.aegis.databinding.XMLStreamDataWriter:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.aegis.databinding.ElementDataWriter:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:org.apache.cxf.aegis.type.Type getType(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.aegis.type.basic.XMLBeanTypeInfo:org.apache.cxf.aegis.type.basic.BeanTypePropertyInfo getPropertyInfo(javax.xml.namespace.QName)",
            "org.apache.cxf.aegis.type.basic.BeanType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.InterfaceInvocationHandler:java.lang.Object readProperty(java.lang.Object)",
            "org.apache.cxf.aegis.type.basic.BeanTypeInfo:org.apache.cxf.aegis.type.Type getType(javax.xml.namespace.QName)",
            "org.apache.cxf.aegis.type.basic.BeanTypeInfo:javax.xml.namespace.QName getMappedTypeName(javax.xml.namespace.QName)",
            "org.apache.cxf.aegis.type.basic.BeanTypeInfo:java.lang.String getPropertyNameFromMappedName(javax.xml.namespace.QName)",
            "org.apache.cxf.aegis.type.encoded.MarshalRegistry:java.lang.String getInstanceId(java.lang.Object)",
            "org.apache.cxf.aegis.type.XMLTypeCreator:org.w3c.dom.Document getDocument(java.lang.Class)",
            "org.apache.cxf.aegis.type.DefaultTypeMapping:org.apache.cxf.aegis.type.Type getType(java.lang.Class)",
            "org.apache.cxf.aegis.type.DefaultTypeMapping:org.apache.cxf.aegis.type.Type getType(javax.xml.namespace.QName)",
            "org.apache.cxf.aegis.type.DefaultTypeMapping:javax.xml.namespace.QName getTypeQName(java.lang.Class)",
            "org.apache.cxf.jaxws.handler.HandlerResolverImpl:java.util.List getHandlerChain(javax.xml.ws.handler.PortInfo)",
            "org.apache.cxf.jaxws.handler.InitParamResourceResolver:java.lang.Object resolve(java.lang.String,java.lang.Class)",
            "org.apache.cxf.jaxws.support.JaxWsServiceConfiguration:javax.jws.WebParam getWebParam(java.lang.reflect.Method,int)",
            "org.apache.cxf.jaxws.support.JaxWsServiceConfiguration:java.lang.Class getResponseWrapper(java.lang.reflect.Method)",
            "org.apache.cxf.jaxws.support.JaxWsServiceConfiguration:java.lang.Class getRequestWrapper(java.lang.reflect.Method)",
            "org.apache.cxf.jaxws.JaxWsClientProxy:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])",
            "org.apache.cxf.jaxws.ServiceImpl:java.lang.Object createPort(javax.xml.namespace.QName,org.apache.cxf.ws.addressing.EndpointReferenceType,java.lang.Class,javax.xml.ws.WebServiceFeature[])",
            "org.apache.cxf.jaxws.ServiceImpl:org.apache.cxf.jaxws.handler.PortInfoImpl getPortInfo(javax.xml.namespace.QName)",
            "org.apache.cxf.jaxws.EndpointImpl:void checkProperties()",
            "org.apache.cxf.jaxws.DispatchImpl:java.lang.Object invoke(java.lang.Object,boolean)",
            "org.apache.cxf.jaxws.DispatchImpl:java.util.concurrent.Future invokeAsync(java.lang.Object,javax.xml.ws.AsyncHandler)",
            "org.apache.cxf.jaxws.interceptors.SwAOutInterceptor:boolean callSWARefMethod(javax.xml.bind.JAXBContext)",
            "org.apache.cxf.jaxws.context.WebServiceContextImpl:java.security.Principal getUserPrincipal()",
            "org.apache.cxf.jaxws.context.WebServiceContextImpl:boolean isUserInRole(java.lang.String)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:void <init>(java.util.Map,org.apache.cxf.message.Exchange,javax.xml.ws.handler.MessageContext$Scope)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:void copyScoped(java.util.Map)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:java.lang.String mapKey(java.lang.String)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:java.lang.String mapKeyReverse(java.lang.String)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:java.lang.Object put(java.lang.String,java.lang.Object,javax.xml.ws.handler.MessageContext$Scope)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:javax.xml.ws.handler.MessageContext$Scope getScope(java.lang.String)",
            "org.apache.cxf.jaxws.AbstractJAXWSMethodInvoker:java.util.Map removeHandlerProperties(org.apache.cxf.jaxws.context.WrappedMessageContext)",
            "org.apache.cxf.jaxws.AbstractJAXWSMethodInvoker:void updateWebServiceContext(org.apache.cxf.message.Exchange,javax.xml.ws.handler.MessageContext)",
            "org.apache.cxf.xmlbeans.XmlBeansSchemaInitializer:org.apache.ws.commons.schema.XmlSchema getSchema(org.apache.xmlbeans.SchemaTypeSystem,java.lang.String)",
            "org.apache.cxf.xmlbeans.XmlBeansSchemaInitializer:void mapClass(org.apache.cxf.service.model.MessagePartInfo,java.lang.Class)",
            "org.apache.cxf.xmlbeans.tools.XMLBeansSchemaTypeUtils:java.lang.String getNaturalJavaClassName(org.apache.xmlbeans.SchemaType)"
        ]
    },
    "org.apache.cxf.jaxws.context.WrappedMessageContext:boolean isResponse()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.handler.logical.LogicalMessageContextImpl:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:void <init>(java.util.Map,org.apache.cxf.message.Exchange,javax.xml.ws.handler.MessageContext$Scope)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:java.lang.String mapKeyReverse(java.lang.String)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:org.apache.cxf.message.Message createResponseMessage()",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:java.lang.Object put(java.lang.String,java.lang.Object,javax.xml.ws.handler.MessageContext$Scope)"
        ]
    },
    "org.apache.cxf.jaxws.context.WrappedMessageContext:org.apache.cxf.message.Message createResponseMessage()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.context.WrappedMessageContext:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:java.lang.Object put(java.lang.String,java.lang.Object,javax.xml.ws.handler.MessageContext$Scope)"
        ]
    },
    "org.apache.cxf.jaxws.context.WrappedMessageContext:void setScope(java.lang.String,javax.xml.ws.handler.MessageContext$Scope)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.attachment.AttachmentDeserializer:void initializeAttachments()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.AttachmentInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.interceptors.MessageModeOutInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.ws.addressing.MAPAggregator:org.apache.cxf.ws.addressing.AddressingPropertiesImpl getMAPs(org.apache.cxf.message.Message,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.MAPAggregator:boolean usingAddressing(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.addressing.MAPAggregator:boolean mediate(org.apache.cxf.message.Message,boolean)",
            "org.apache.cxf.ws.addressing.MAPAggregator:org.apache.cxf.ws.addressing.AddressingPropertiesImpl assembleGeneric(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.addressing.MAPAggregator:void addRoleSpecific(org.apache.cxf.ws.addressing.AddressingPropertiesImpl,org.apache.cxf.message.Message,boolean,boolean)"
        ]
    },
    "org.apache.cxf.common.util.WeakIdentityHashMap:boolean isEmpty()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.xmlschema.FixedExtensionDeserializer:void deserialize(org.apache.ws.commons.schema.XmlSchemaObject,javax.xml.namespace.QName,org.w3c.dom.Node)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:boolean isEmpty()",
            "org.apache.cxf.common.util.CacheMap:boolean isEmpty()",
            "org.apache.cxf.common.util.TwoStageMap:boolean isEmpty()",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:boolean isEmpty()",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureWithWildCard(java.lang.String,java.lang.Object)",
            "org.apache.cxf.binding.soap.SoapMessage:boolean hasAdditionalEnvNs()",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void parseWSDL(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void copyExtensionAttributes(org.apache.cxf.service.model.AbstractPropertiesHolder,javax.wsdl.extensions.AttributeExtensible)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void activateAll()",
            "org.apache.cxf.aegis.type.encoded.MarshalRegistry$1:boolean hasNext()",
            "org.apache.cxf.jaxws.handler.soap.SOAPMessageContextImpl:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.jaxws.handler.logical.LogicalMessageContextImpl:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:boolean isEmpty()",
            "org.apache.cxf.jaxws.AbstractJAXWSMethodInvoker:void updateWebServiceContext(org.apache.cxf.message.Exchange,javax.xml.ws.handler.MessageContext)"
        ]
    },
    "org.apache.cxf.common.util.CacheMap:boolean isEmpty()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.xmlschema.FixedExtensionDeserializer:void deserialize(org.apache.ws.commons.schema.XmlSchemaObject,javax.xml.namespace.QName,org.w3c.dom.Node)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:boolean isEmpty()",
            "org.apache.cxf.common.util.CacheMap:boolean isEmpty()",
            "org.apache.cxf.common.util.TwoStageMap:boolean isEmpty()",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:boolean isEmpty()",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureWithWildCard(java.lang.String,java.lang.Object)",
            "org.apache.cxf.binding.soap.SoapMessage:boolean hasAdditionalEnvNs()",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void parseWSDL(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void copyExtensionAttributes(org.apache.cxf.service.model.AbstractPropertiesHolder,javax.wsdl.extensions.AttributeExtensible)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void activateAll()",
            "org.apache.cxf.aegis.type.encoded.MarshalRegistry$1:boolean hasNext()",
            "org.apache.cxf.jaxws.handler.soap.SOAPMessageContextImpl:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.jaxws.handler.logical.LogicalMessageContextImpl:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:boolean isEmpty()",
            "org.apache.cxf.jaxws.AbstractJAXWSMethodInvoker:void updateWebServiceContext(org.apache.cxf.message.Exchange,javax.xml.ws.handler.MessageContext)"
        ]
    },
    "org.apache.cxf.common.util.TwoStageMap:boolean isEmpty()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.xmlschema.FixedExtensionDeserializer:void deserialize(org.apache.ws.commons.schema.XmlSchemaObject,javax.xml.namespace.QName,org.w3c.dom.Node)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:boolean isEmpty()",
            "org.apache.cxf.common.util.CacheMap:boolean isEmpty()",
            "org.apache.cxf.common.util.TwoStageMap:boolean isEmpty()",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:boolean isEmpty()",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureWithWildCard(java.lang.String,java.lang.Object)",
            "org.apache.cxf.binding.soap.SoapMessage:boolean hasAdditionalEnvNs()",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void parseWSDL(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void copyExtensionAttributes(org.apache.cxf.service.model.AbstractPropertiesHolder,javax.wsdl.extensions.AttributeExtensible)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void activateAll()",
            "org.apache.cxf.aegis.type.encoded.MarshalRegistry$1:boolean hasNext()",
            "org.apache.cxf.jaxws.handler.soap.SOAPMessageContextImpl:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.jaxws.handler.logical.LogicalMessageContextImpl:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:boolean isEmpty()",
            "org.apache.cxf.jaxws.AbstractJAXWSMethodInvoker:void updateWebServiceContext(org.apache.cxf.message.Exchange,javax.xml.ws.handler.MessageContext)"
        ]
    },
    "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:boolean isEmpty()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap$SpringBeanMapWrapper:boolean isEmpty()"
        ]
    },
    "org.apache.cxf.binding.soap.SoapMessage:boolean hasAdditionalEnvNs()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void addMustUnderstandAttribute(org.w3c.dom.Element,javax.xml.namespace.QName,org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.addressing.AddressingPropertiesImpl)",
            "org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor:void writeSoapEnvelopeStart(org.apache.cxf.binding.soap.SoapMessage)"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLServiceBuilder:void copyExtensionAttributes(org.apache.cxf.service.model.AbstractPropertiesHolder,javax.wsdl.extensions.AttributeExtensible)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildMockServices(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.ServiceInfo buildMockService(javax.wsdl.Definition,javax.wsdl.PortType)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition,javax.wsdl.Service,javax.xml.namespace.QName,org.apache.cxf.service.model.DescriptionInfo)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.EndpointInfo buildEndpoint(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.BindingInfo,javax.wsdl.Port)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.BindingInfo buildBinding(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildInterface(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.PortType)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildInterfaceOperation(org.apache.cxf.service.model.InterfaceInfo,javax.wsdl.Operation)"
        ]
    },
    "org.apache.cxf.aegis.type.encoded.MarshalRegistry$1:boolean hasNext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.MapNamespaceContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.helpers.WSDLHelper:javax.wsdl.BindingOperation getBindingOperation(javax.wsdl.Definition,java.lang.String)",
            "org.apache.cxf.helpers.WSDLHelper:javax.wsdl.BindingOperation getBindingOperation(javax.wsdl.Binding,java.lang.String)",
            "org.apache.cxf.helpers.WSDLHelper:java.util.List getPortTypes(javax.wsdl.Definition)",
            "org.apache.cxf.helpers.WSDLHelper:java.util.List getInMessageParts(javax.wsdl.Operation)",
            "org.apache.cxf.helpers.WSDLHelper:java.util.List getOutMessageParts(javax.wsdl.Operation)",
            "org.apache.cxf.helpers.WSDLHelper:javax.wsdl.Binding getBinding(javax.wsdl.BindingOperation,javax.wsdl.Definition)",
            "org.apache.cxf.helpers.XMLUtils:org.w3c.dom.Element fetchElementByNameAttribute(org.w3c.dom.Element,java.lang.String,java.lang.String)",
            "org.apache.cxf.common.util.SortedArraySet:boolean addAll(java.util.Collection)",
            "org.apache.cxf.common.util.SortedArraySet:boolean containsAll(java.util.Collection)",
            "org.apache.cxf.common.util.SortedArraySet:boolean removeAll(java.util.Collection)",
            "org.apache.cxf.common.util.SortedArraySet:boolean retainAll(java.util.Collection)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.util.Set entrySet()",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.util.Set keySet()",
            "org.apache.cxf.common.util.ReflectionInvokationHandler$WrapperIterator:boolean hasNext()",
            "org.apache.cxf.common.util.StringUtils:java.util.List getParts(java.lang.String,java.lang.String)",
            "org.apache.cxf.common.util.StringUtils:java.lang.String getFirstNotEmpty(java.lang.String,java.lang.String)",
            "org.apache.cxf.common.util.StringUtils:java.lang.String getFirstNotEmpty(java.util.List)",
            "org.apache.cxf.common.util.ReflectionUtil:java.util.List getPackagesFromJar(java.io.File)",
            "org.apache.cxf.common.util.CacheMap:void updateMainDataMap()",
            "org.apache.cxf.common.util.CacheMap:void putAll(java.util.Map)",
            "org.apache.cxf.common.util.AbstractTwoStageCache:boolean recycle(java.lang.Object)",
            "org.apache.cxf.common.util.CollectionUtils:java.util.Collection diff(java.util.Collection,java.util.Collection)",
            "org.apache.cxf.common.util.CollectionUtils:boolean isEmpty(java.util.Collection)",
            "org.apache.cxf.common.util.TwoStageMap:void putAll(java.util.Map)",
            "org.apache.cxf.common.injection.ResourceInjector:void invokePostConstruct()",
            "org.apache.cxf.common.injection.ResourceInjector:void invokePreDestroy()",
            "org.apache.cxf.common.annotation.AnnotationProcessor:void processMethods(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)",
            "org.apache.cxf.common.annotation.AnnotationProcessor:void processFields(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)",
            "org.apache.cxf.common.annotation.AnnotationProcessor:void processClass(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)",
            "org.apache.cxf.resource.DefaultResourceManager:java.lang.Object findResource(java.lang.String,java.lang.Class,boolean,java.util.List)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.util.Set entrySet()",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.util.Collection values()",
            "org.apache.cxf.configuration.spring.SpringBeanMap:void processBeans(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.configuration.spring.SpringBeanQNameMap:void processBeans(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void initWildcardDefinitionMap()",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureBean(java.lang.String,java.lang.Object,boolean)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureWithWildCard(java.lang.String,java.lang.Object)",
            "org.apache.cxf.configuration.jsse.spring.TLSParameterJaxBUtils:java.security.KeyStore createTrustStore(java.io.InputStream)",
            "org.apache.cxf.jaxb.JAXBUtils:java.lang.String makeConventionalIdentifier(java.util.List,org.apache.cxf.jaxb.JAXBUtils$IdentifierType)",
            "org.apache.cxf.jaxb.JAXBDataBinding:void initialize(org.apache.cxf.service.Service)",
            "org.apache.cxf.jaxb.JAXBDataBinding:org.apache.cxf.jaxb.JAXBDataBinding$CachedContextAndSchemas createJAXBContextAndSchemas(java.util.Set,java.lang.String)",
            "org.apache.cxf.jaxb.JAXBDataBinding:void scanPackages(java.util.Set)",
            "org.apache.cxf.jaxb.JAXBSchemaInitializer:javax.xml.namespace.QName getTypeName(org.apache.cxf.jaxb.JAXBBeanInfo)",
            "org.apache.cxf.jaxb.JAXBSchemaInitializer:void end(org.apache.cxf.service.model.FaultInfo)",
            "org.apache.cxf.jaxb.JAXBSchemaInitializer:void buildExceptionType(org.apache.cxf.service.model.MessagePartInfo,java.lang.Class)",
            "org.apache.cxf.jaxb.JAXBSchemaInitializer:void addElement(org.apache.ws.commons.schema.XmlSchemaSequence,org.apache.cxf.jaxb.JAXBBeanInfo,javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.jaxb.JAXBSchemaInitializer:boolean isExistSchemaElement(org.apache.ws.commons.schema.XmlSchema,javax.xml.namespace.QName)",
            "org.apache.cxf.jaxb.io.DataWriterImpl:javax.xml.bind.Marshaller createMarshaller(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.jaxb.io.DataReaderImpl:javax.xml.bind.Unmarshaller createUnmarshaller()",
            "org.apache.cxf.management.utils.ManagementConsole:void listAllManagedEndpoint()",
            "org.apache.cxf.management.utils.ManagementConsole:void invokeEndpoint(java.lang.String)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElementEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.message.MessageUtils:boolean isDOMPresent(org.apache.cxf.message.Message)",
            "org.apache.cxf.message.MessageImpl:void copyContent(org.apache.cxf.message.Message,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:org.apache.cxf.service.model.BindingOperationInfo findAnyOp(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.util.Map keepInOrder(java.util.Map,org.apache.cxf.service.model.OperationInfo,java.util.List)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:org.apache.cxf.message.MessageContentsList getParameters(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.util.Map getQueries(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.BareInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.ClientFaultConverter:void processFaultDetail(org.apache.cxf.interceptor.Fault,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:org.apache.cxf.service.model.MessagePartInfo findMessagePart(org.apache.cxf.message.Exchange,java.util.Collection,javax.xml.namespace.QName,boolean,int,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.FaultOutInterceptor:org.apache.cxf.service.model.FaultInfo getFaultForClass(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Class)",
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:void writeParts(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.message.MessageContentsList,java.util.List)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void getPara(org.apache.cxf.staxutils.DepthXMLStreamReader,org.apache.cxf.databinding.DataReader,org.apache.cxf.message.MessageContentsList,java.util.Iterator,org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.ConduitInitiatorManagerImpl:org.apache.cxf.transport.ConduitInitiator getConduitInitiatorForUri(java.lang.String)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updateDoc(org.w3c.dom.Document,java.lang.String,java.util.Map,java.util.Map)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updateDefinition(javax.wsdl.Definition,java.util.Map,java.util.Map,java.lang.String,org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updatePublishedEndpointUrl(java.lang.String,javax.wsdl.Definition,javax.xml.namespace.QName)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void setSoapAddressLocationOn(javax.wsdl.Port,java.lang.String)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updateSchemaImports(javax.wsdl.extensions.schema.Schema,java.util.Map,java.lang.String)",
            "org.apache.cxf.transport.http.Cookie:void handleSetCookie(java.util.Map,java.util.List)",
            "org.apache.cxf.transport.http.AbstractHTTPTransportFactory:void registerWithBindingManager()",
            "org.apache.cxf.transport.http.AbstractHTTPTransportFactory:org.apache.cxf.service.model.EndpointInfo createEndpointInfo(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.BindingInfo,javax.wsdl.Port)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPClientPolicy getClient(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPClientPolicy)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPServerPolicy getServer(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPServerPolicy)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPClientPolicy getClient(org.apache.cxf.ws.policy.PolicyEngine,org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.transport.Conduit)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPServerPolicy getServer(org.apache.cxf.ws.policy.PolicyEngine,org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.transport.Destination)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:void assertClientPolicy(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPClientPolicy)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:void assertServerPolicy(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPServerPolicy)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPClientPolicy getClient(java.util.Collection)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPServerPolicy getServer(java.util.Collection)",
            "org.apache.cxf.transport.http.HTTPConduit:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:void transferProtocolHeadersToURLConnection(org.apache.cxf.message.Message,java.net.URLConnection)",
            "org.apache.cxf.transport.http.HTTPConduit:void logProtocolHeaders(java.util.logging.Level,org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:java.lang.String extractAuthorizationRealm(java.util.Map)",
            "org.apache.cxf.transport.http.HTTPConduit:java.lang.String extractLocation(java.util.Map)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void copyResponseHeaders(org.apache.cxf.message.Message,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponseInternal()",
            "org.apache.cxf.transport.http.gzip.GZIPOutInterceptor:org.apache.cxf.transport.http.gzip.GZIPOutInterceptor$UseGzip gzipPermitted(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.gzip.GZIPInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.AbstractMultiplexDestination:java.lang.String extractStringElementFromAny(javax.xml.namespace.QName,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.transport.DestinationFactoryManagerImpl:org.apache.cxf.transport.DestinationFactory getDestinationFactoryForUri(java.lang.String)",
            "org.apache.cxf.transport.servlet.ServletController:void updateDests(javax.servlet.http.HttpServletRequest)",
            "org.apache.cxf.transport.servlet.ServletController:void invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.servlet.ServletController:org.apache.cxf.transport.servlet.ServletDestination checkRestfulRequest(javax.servlet.http.HttpServletRequest)",
            "org.apache.cxf.transport.servlet.ServletController:void generateServiceList(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.servlet.ServletController:void generateUnformattedServiceList(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.servlet.ServletTransportFactory:void register()",
            "org.apache.cxf.transport.servlet.AbstractCXFServlet:void replaceDestinationFactory()",
            "org.apache.cxf.transport.https.CertificateHostnameVerifier$Certificates:java.lang.String[] getDNSSubjectAlts(java.security.cert.X509Certificate)",
            "org.apache.cxf.transport.https.SSLUtils:java.util.List compileRegexPatterns(java.util.List,boolean,java.util.logging.Logger)",
            "org.apache.cxf.transport.https.SSLUtils:boolean matchesOneOf(java.lang.String,java.util.List)",
            "org.apache.cxf.transport.https.CertificateHostnameVerifier$AbstractVerifier:void check(java.lang.String[],java.lang.String[],java.lang.String[],boolean,boolean)",
            "org.apache.cxf.transport.http_jetty.spring.JettySpringTypesFactory:java.util.Map toThreadingParameters(java.util.List)",
            "org.apache.cxf.transport.http_jetty.spring.JettySpringTypesFactory:java.util.Map toTLSServerParamenters(java.util.List)",
            "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineFactoryBeanDefinitionParser:java.util.List getRequiredElementsList(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,javax.xml.namespace.QName,org.springframework.beans.factory.support.BeanDefinitionBuilder)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void doService(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine:void addServant(java.net.URL,org.apache.cxf.transport.http_jetty.JettyHTTPHandler)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPTransportFactory:void finalizeConfig()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void setEnginesList(java.util.List)",
            "org.apache.cxf.transport.jms.JMSUtils:void addProtocolHeaders(javax.jms.Message,java.util.Map)",
            "org.apache.cxf.feature.AbstractFeature:java.lang.Object getActive(java.util.List,java.lang.Class)",
            "org.apache.cxf.endpoint.ClientLifeCycleManagerImpl:void clientCreated(org.apache.cxf.endpoint.Client)",
            "org.apache.cxf.endpoint.ClientLifeCycleManagerImpl:void clientDestroyed(org.apache.cxf.endpoint.Client)",
            "org.apache.cxf.endpoint.ServerLifeCycleManagerImpl:void startServer(org.apache.cxf.endpoint.Server)",
            "org.apache.cxf.endpoint.ServerLifeCycleManagerImpl:void stopServer(org.apache.cxf.endpoint.Server)",
            "org.apache.cxf.endpoint.EndpointResolverRegistryImpl:org.apache.cxf.ws.addressing.EndpointReferenceType resolve(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.endpoint.EndpointResolverRegistryImpl:org.apache.cxf.ws.addressing.EndpointReferenceType renew(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.endpoint.EndpointResolverRegistryImpl:org.apache.cxf.ws.addressing.EndpointReferenceType mint(javax.xml.namespace.QName)",
            "org.apache.cxf.endpoint.EndpointResolverRegistryImpl:org.apache.cxf.ws.addressing.EndpointReferenceType mint(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.endpoint.ServiceContractResolverRegistryImpl:java.net.URI getContractLocation(javax.xml.namespace.QName)",
            "org.apache.cxf.endpoint.ClientImpl:org.apache.cxf.service.model.EndpointInfo findEndpoint(org.apache.cxf.service.Service,javax.xml.namespace.QName)",
            "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:org.apache.cxf.endpoint.Client createClient(java.lang.String,javax.xml.namespace.QName,java.lang.ClassLoader,javax.xml.namespace.QName,java.util.List)",
            "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:void addBindingFiles(java.util.List,org.apache.cxf.jaxb.JAXBUtils$SchemaCompiler)",
            "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:boolean isValidPackage(org.apache.cxf.jaxb.JAXBUtils$JPackage)",
            "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:void outputDebug(org.apache.cxf.jaxb.JAXBUtils$JCodeModel)",
            "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:void addSchemas(java.lang.String,java.util.Collection,org.apache.cxf.jaxb.JAXBUtils$SchemaCompiler)",
            "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:boolean compileJavaSrc(java.lang.String,java.util.List,java.lang.String)",
            "org.apache.cxf.endpoint.dynamic.TypeClassInitializer:void begin(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.ws.addressing.ContextUtils:java.lang.String getActionFromServiceModel(org.apache.cxf.message.Message,java.lang.Exception)",
            "org.apache.cxf.ws.addressing.MAPAggregator:void assertAssertion(org.apache.cxf.ws.policy.AssertionInfoMap,javax.xml.namespace.QName)",
            "org.apache.cxf.ws.addressing.MAPAggregator:boolean hasUsingAddressing(java.util.List)",
            "org.apache.cxf.ws.addressing.MAPAggregator:java.lang.String getActionFromFaultMessage(org.apache.cxf.service.model.OperationInfo,java.lang.String)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void encodeReferenceParameters(org.apache.cxf.ws.addressing.AddressingProperties,org.w3c.dom.Element,javax.xml.bind.Marshaller)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void addMustUnderstandAttribute(org.w3c.dom.Element,javax.xml.namespace.QName,org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.addressing.AddressingPropertiesImpl)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:org.apache.cxf.ws.addressing.AddressingProperties unmarshalMAPs(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void decodeReferenceParameters(java.util.Set,org.apache.cxf.ws.addressing.AddressingPropertiesImpl,javax.xml.bind.Unmarshaller)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void discardMAPs(java.util.List,org.apache.cxf.ws.addressing.AddressingProperties)",
            "org.apache.cxf.ws.policy.builder.primitive.NestedPrimitiveAssertion:org.apache.neethi.PolicyComponent normalize()",
            "org.apache.cxf.ws.policy.builder.primitive.NestedPrimitiveAssertion:boolean isAsserted(org.apache.cxf.ws.policy.AssertionInfoMap)",
            "org.apache.cxf.ws.policy.builder.primitive.NestedPrimitiveAssertion:boolean isPolicyAsserted(org.apache.neethi.PolicyOperator,org.apache.cxf.ws.policy.AssertionInfoMap)",
            "org.apache.cxf.ws.policy.builder.primitive.PrimitiveAssertion:boolean isAsserted(org.apache.cxf.ws.policy.AssertionInfoMap)",
            "org.apache.cxf.ws.policy.util.PolicyComparator:boolean compare(java.util.List,java.util.List)",
            "org.apache.cxf.ws.policy.AssertionInfoMap:void <init>(java.util.Collection)",
            "org.apache.cxf.ws.policy.AssertionInfoMap:void putAssertionInfo(org.apache.cxf.ws.policy.PolicyAssertion)",
            "org.apache.cxf.ws.policy.AssertionInfoMap:boolean supportsAlternative(org.apache.cxf.ws.policy.PolicyAssertion,java.util.List)",
            "org.apache.cxf.ws.policy.AssertionInfoMap:boolean supportsAlternative(java.util.Collection,java.util.List)",
            "org.apache.cxf.ws.policy.AssertionInfoMap:void checkEffectivePolicy(org.apache.neethi.Policy)",
            "org.apache.cxf.ws.policy.AssertionInfoMap:void check()",
            "org.apache.cxf.ws.policy.AssertionInfoMap:void getAssertions(org.apache.neethi.PolicyOperator,java.util.Collection)",
            "org.apache.cxf.ws.policy.Intersector:boolean compatibleAlternatives(java.util.Collection,java.util.Collection)",
            "org.apache.cxf.ws.policy.Intersector:boolean compatiblePolicies(org.apache.neethi.Policy,org.apache.neethi.Policy)",
            "org.apache.cxf.ws.policy.Intersector:org.apache.neethi.Policy intersect(org.apache.neethi.Policy,org.apache.neethi.Policy)",
            "org.apache.cxf.ws.policy.Intersector:org.apache.cxf.ws.policy.PolicyAssertion findCompatibleAssertion(org.apache.cxf.ws.policy.PolicyAssertion,java.util.Collection)",
            "org.apache.cxf.ws.policy.EndpointPolicyImpl:java.util.Collection getSupportedAlternatives()",
            "org.apache.cxf.ws.policy.EndpointPolicyImpl:void initializeVocabulary()",
            "org.apache.cxf.ws.policy.EndpointPolicyImpl:java.util.Collection getSupportedAlternatives(org.apache.neethi.Policy)",
            "org.apache.cxf.ws.policy.EndpointPolicyImpl:void initializeInterceptors(org.apache.cxf.ws.policy.PolicyInterceptorProviderRegistry,java.util.Set,org.apache.cxf.ws.policy.PolicyAssertion,boolean)",
            "org.apache.cxf.ws.policy.EndpointPolicyImpl:void initializeInterceptors()",
            "org.apache.cxf.ws.policy.EndpointPolicyImpl:void checkExactlyOnes()",
            "org.apache.cxf.ws.policy.ServerPolicyOutFaultInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.policy.WSPolicyFeature:org.apache.neethi.Policy initializeEndpointPolicy(org.apache.cxf.endpoint.Endpoint,org.apache.cxf.Bus)",
            "org.apache.cxf.ws.policy.PolicyInInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.policy.PolicyOutInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.policy.PolicyInterceptorProviderRegistryImpl:void register(org.apache.cxf.ws.policy.PolicyInterceptorProvider)",
            "org.apache.cxf.ws.policy.PolicyInterceptorProviderRegistryImpl:java.util.List getInterceptors(java.util.Collection,boolean,boolean)",
            "org.apache.cxf.ws.policy.selector.MinimalAlternativeSelector:java.util.Collection selectAlternative(org.apache.neethi.Policy,org.apache.cxf.ws.policy.PolicyEngine,org.apache.cxf.ws.policy.Assertor)",
            "org.apache.cxf.ws.policy.selector.FirstAlternativeSelector:java.util.Collection selectAlternative(org.apache.neethi.Policy,org.apache.cxf.ws.policy.PolicyEngine,org.apache.cxf.ws.policy.Assertor)",
            "org.apache.cxf.ws.policy.selector.MaximalAlternativeSelector:java.util.Collection selectAlternative(org.apache.neethi.Policy,org.apache.cxf.ws.policy.PolicyEngine,org.apache.cxf.ws.policy.Assertor)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:org.apache.neethi.Policy getAggregatedServicePolicy(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:org.apache.neethi.Policy getAggregatedEndpointPolicy(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:org.apache.neethi.Policy getAggregatedOperationPolicy(org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:org.apache.neethi.Policy getAggregatedMessagePolicy(org.apache.cxf.service.model.BindingMessageInfo)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:org.apache.neethi.Policy getAggregatedFaultPolicy(org.apache.cxf.service.model.BindingFaultInfo)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:java.util.Collection getAssertions(org.apache.cxf.ws.policy.EffectivePolicy,boolean)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:void addAssertions(org.apache.neethi.PolicyComponent,boolean,java.util.Collection)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:java.util.Set getVocabulary(org.apache.neethi.PolicyComponent,boolean)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:boolean supportsAlternative(java.util.Collection,org.apache.cxf.ws.policy.Assertor)",
            "org.apache.cxf.ws.policy.PolicyUtils:boolean contains(java.util.Collection,org.apache.neethi.Assertion)",
            "org.apache.cxf.ws.policy.PolicyUtils:boolean contains(java.util.Collection,java.util.Collection)",
            "org.apache.cxf.ws.policy.PolicyUtils:void printPolicyComponent(org.apache.neethi.PolicyComponent,java.lang.StringBuffer,int)",
            "org.apache.cxf.ws.policy.mtom.MTOMPolicyInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.policy.EffectivePolicyImpl:void initialiseInterceptors(org.apache.cxf.ws.policy.PolicyEngineImpl,boolean)",
            "org.apache.cxf.ws.policy.EffectivePolicyImpl:java.util.Collection getSupportedAlternatives(org.apache.cxf.ws.policy.PolicyEngineImpl,org.apache.neethi.Policy)",
            "org.apache.cxf.ws.policy.EffectivePolicyImpl:void initialiseInterceptors(org.apache.cxf.ws.policy.PolicyInterceptorProviderRegistry,org.apache.cxf.ws.policy.PolicyEngineImpl,java.util.Set,org.apache.cxf.ws.policy.PolicyAssertion,boolean)",
            "org.apache.cxf.ws.policy.attachment.wsdl11.Wsdl11AttachmentPolicyProvider$ExtensibleInfo:java.lang.Object getExtensor(java.lang.Class)",
            "org.apache.cxf.ws.policy.attachment.wsdl11.Wsdl11AttachmentPolicyProvider$ExtensibleInfo:java.util.List getExtensors(java.lang.Class)",
            "org.apache.cxf.ws.policy.attachment.wsdl11.Wsdl11AttachmentPolicyProvider:org.apache.neethi.Policy getElementPolicy(org.apache.cxf.service.model.Extensible,boolean,org.apache.cxf.service.model.DescriptionInfo)",
            "org.apache.cxf.ws.policy.attachment.reference.LocalServiceModelReferenceResolver:org.apache.neethi.Policy resolveReference(java.lang.String)",
            "org.apache.cxf.ws.policy.attachment.reference.RemoteReferenceResolver:org.apache.neethi.Policy resolveReference(java.lang.String)",
            "org.apache.cxf.ws.policy.attachment.external.PolicyAttachment:boolean appliesTo(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.ws.policy.attachment.external.PolicyAttachment:boolean appliesTo(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.ws.policy.attachment.external.PolicyAttachment:boolean appliesTo(org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.ws.policy.attachment.external.PolicyAttachment:boolean appliesTo(org.apache.cxf.service.model.BindingMessageInfo)",
            "org.apache.cxf.ws.policy.attachment.external.PolicyAttachment:boolean appliesTo(org.apache.cxf.service.model.BindingFaultInfo)",
            "org.apache.cxf.ws.policy.attachment.external.ExternalAttachmentProvider:org.apache.neethi.Policy getEffectivePolicy(org.apache.cxf.service.model.BindingFaultInfo)",
            "org.apache.cxf.ws.policy.attachment.external.ExternalAttachmentProvider:org.apache.neethi.Policy getEffectivePolicy(org.apache.cxf.service.model.BindingMessageInfo)",
            "org.apache.cxf.ws.policy.attachment.external.ExternalAttachmentProvider:org.apache.neethi.Policy getEffectivePolicy(org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.ws.policy.attachment.external.ExternalAttachmentProvider:org.apache.neethi.Policy getEffectivePolicy(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.ws.policy.attachment.external.ExternalAttachmentProvider:org.apache.neethi.Policy getEffectivePolicy(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.ws.policy.attachment.external.ExternalAttachmentProvider:void readDocument()",
            "org.apache.cxf.ws.policy.AssertionBuilderRegistryImpl:void register(org.apache.cxf.ws.policy.AssertionBuilder)",
            "org.apache.cxf.ws.policy.ClientPolicyInFaultInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.policy.AbstractPolicyInterceptor:org.apache.cxf.service.model.BindingFaultInfo getBindingFaultInfo(org.apache.cxf.message.Message,java.lang.Exception,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.ws.security.policy.builders.X509TokenBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.builders.X509TokenBuilder:void processAlternative(java.util.List,org.apache.cxf.ws.security.policy.model.X509Token,org.apache.cxf.ws.security.policy.SPConstants)",
            "org.apache.cxf.ws.security.policy.builders.SupportingTokens12Builder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.builders.SupportingTokens12Builder:void processAlternative(java.util.List,org.apache.cxf.ws.security.policy.model.SupportingToken)",
            "org.apache.cxf.ws.security.policy.builders.InitiatorTokenBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.builders.InitiatorTokenBuilder:void processAlternative(java.util.List,org.apache.cxf.ws.security.policy.model.InitiatorToken)",
            "org.apache.cxf.ws.security.policy.builders.AsymmetricBindingBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.builders.AsymmetricBindingBuilder:void processAlternative(java.util.List,org.apache.cxf.ws.security.policy.model.AsymmetricBinding,org.apache.cxf.ws.security.policy.SPConstants)",
            "org.apache.cxf.ws.security.policy.builders.IssuedTokenBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.builders.IssuedTokenBuilder:void processAlternative(java.util.List,org.apache.cxf.ws.security.policy.model.IssuedToken)",
            "org.apache.cxf.ws.security.policy.builders.ProtectionTokenBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.builders.TransportTokenBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.builders.RecipientTokenBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.builders.RecipientTokenBuilder:void processAlternative(java.util.List,org.apache.cxf.ws.security.policy.model.RecipientToken)",
            "org.apache.cxf.ws.security.policy.builders.SupportingTokensBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.builders.SupportingTokensBuilder:void processAlternative(java.util.List,org.apache.cxf.ws.security.policy.model.SupportingToken)",
            "org.apache.cxf.ws.security.policy.builders.SymmetricBindingBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.builders.SymmetricBindingBuilder:void processAlternatives(java.util.List,org.apache.cxf.ws.security.policy.model.SymmetricBinding,org.apache.cxf.ws.security.policy.SPConstants)",
            "org.apache.cxf.ws.security.policy.model.RequiredParts:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.ContentEncryptedElements:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SignedEncryptedElements:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.RequiredElements:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SupportingToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SupportingToken:org.apache.neethi.Policy getPolicy()",
            "org.apache.cxf.ws.security.policy.model.SignedEncryptedParts:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.AbstractSecurityAssertion:boolean isAsserted(org.apache.cxf.ws.policy.AssertionInfoMap)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor$SecureConversationTokenFinderInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.policy.interceptors.HttpsTokenInterceptorProvider$HttpsTokenInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.policy.interceptors.HttpsTokenInterceptorProvider$HttpsTokenInInterceptor:void assertHttps(java.util.Collection,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationOutInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor:void recalcEffectivePolicy(org.apache.cxf.binding.soap.SoapMessage,java.lang.String,org.apache.neethi.Policy)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor:void unmapSecurityProps(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.policy.interceptors.IssuedTokenInterceptorProvider$IssuedTokenOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationTokenInterceptorProvider:void mapSecurityProps(org.apache.cxf.message.Message,java.util.Map)",
            "org.apache.cxf.ws.security.policy.interceptors.HttpsTokenInterceptorProvider$HttpsTokenOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.policy.interceptors.HttpsTokenInterceptorProvider$HttpsTokenOutInterceptor:void assertHttps(java.util.Collection,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.policy.interceptors.IssuedTokenInterceptorProvider$IssuedTokenInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.trust.STSClient:void setPolicy(org.apache.neethi.Policy)",
            "org.apache.cxf.ws.security.trust.STSClient:org.apache.cxf.service.model.BindingOperationInfo findOperation(java.lang.String)",
            "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:org.apache.cxf.ws.security.tokenstore.SecurityToken getToken(java.lang.String)",
            "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:java.util.Collection getTokens(org.apache.cxf.ws.security.tokenstore.SecurityToken$State)",
            "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:void processTokenExpiry()",
            "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:void removeCancelledTokens()",
            "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:void removeExpiredTokens()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.TransportBindingHandler:void addUsernameTokens(org.apache.cxf.ws.security.policy.model.SupportingToken)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.TransportBindingHandler:void handleBinding()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.TransportBindingHandler:byte[] doX509TokenSignature(org.apache.cxf.ws.security.policy.model.Token,org.apache.cxf.ws.security.policy.model.SignedEncryptedParts,org.apache.cxf.ws.security.policy.model.TokenWrapper)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.TransportBindingHandler:byte[] doIssuedTokenSignature(org.apache.cxf.ws.security.policy.model.Token,org.apache.cxf.ws.security.policy.model.SignedEncryptedParts,org.apache.cxf.ws.security.policy.model.TokenWrapper,org.apache.cxf.ws.security.tokenstore.SecurityToken)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AsymmetricBindingHandler:void doSignBeforeEncrypt()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AsymmetricBindingHandler:void doEncryptBeforeSign()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AsymmetricBindingHandler:void assertUnusedTokens(org.apache.cxf.ws.security.policy.model.TokenWrapper)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void policyNotAsserted(org.apache.cxf.ws.policy.PolicyAssertion,java.lang.Exception)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void policyNotAsserted(org.apache.cxf.ws.policy.PolicyAssertion,java.lang.String)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void policyAsserted(org.apache.cxf.ws.policy.PolicyAssertion)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void policyAsserted(javax.xml.namespace.QName)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:java.util.Collection findAndAssertPolicy(javax.xml.namespace.QName)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:org.apache.ws.security.message.WSSecTimestamp createTimestamp()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:org.apache.ws.security.message.WSSecTimestamp handleLayout(org.apache.ws.security.message.WSSecTimestamp)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void assertSupportingTokens(java.util.Collection)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:java.util.Map handleSupportingTokens(java.util.Collection,boolean)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:java.util.Map handleSupportingTokens(org.apache.cxf.ws.security.policy.model.SupportingToken,boolean,java.util.Map)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void addSignatureParts(java.util.Map,java.util.List)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:org.apache.ws.security.message.WSSecUsernameToken addUsernameToken(org.apache.cxf.ws.security.policy.model.UsernameToken)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:java.util.Vector getEncryptedParts()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:java.util.Vector getSignedParts()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:java.util.Vector getPartsAndElements(boolean,boolean,java.util.List,java.util.List,java.util.Map)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:org.apache.cxf.ws.security.policy.model.Wss10 getWss10()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void doEndorsedSignatures(java.util.Map,boolean,boolean)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void handleEncryptedSignedHeaders(java.util.Vector,java.util.Vector)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.SymmetricBindingHandler:void doEncryptBeforeSign()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.SymmetricBindingHandler:void doSignBeforeEncrypt()",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JOutInterceptor$PolicyBasedWSS4JOutInterceptorInternal:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:void handleWSS11(org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:boolean assertPolicy(org.apache.cxf.ws.policy.AssertionInfoMap,javax.xml.namespace.QName)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:void assertPolicy(org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.ws.policy.PolicyAssertion)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:void notAssertPolicy(org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.ws.policy.PolicyAssertion,java.lang.String)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:java.lang.String checkAsymetricBinding(org.apache.cxf.ws.policy.AssertionInfoMap,java.lang.String,org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:java.lang.String checkSymetricBinding(org.apache.cxf.ws.policy.AssertionInfoMap,java.lang.String,org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:void assertTokens(org.apache.cxf.ws.policy.AssertionInfoMap,javax.xml.namespace.QName,java.util.Collection,org.apache.cxf.binding.soap.SoapMessage,javax.xml.soap.SOAPMessage,java.lang.String)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:void doResults(org.apache.cxf.binding.soap.SoapMessage,java.lang.String,javax.xml.soap.SOAPMessage,java.util.Vector)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:boolean assertSymetricBinding(org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.binding.soap.SoapMessage,javax.xml.soap.SOAPMessage,org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor$Protections,boolean)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:boolean assertAsymetricBinding(org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.binding.soap.SoapMessage,javax.xml.soap.SOAPMessage,org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor$Protections,boolean)",
            "org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor:void doResults(org.apache.cxf.binding.soap.SoapMessage,java.lang.String,javax.xml.soap.SOAPMessage,java.util.Vector)",
            "org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor:org.apache.ws.security.WSSecurityEngine createSecurityEngine(java.util.Map)",
            "org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor$TokenStoreCallbackHandler:void handle(javax.security.auth.callback.Callback[])",
            "org.apache.cxf.ws.rm.AbstractRMInterceptor:void assertReliability(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.Servant:void terminateSequence(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.AbstractSequence:boolean isAcknowledged(java.math.BigInteger)",
            "org.apache.cxf.ws.rm.DestinationSequence:void scheduleDeferredAcknowledgement(long)",
            "org.apache.cxf.ws.rm.policy.PolicyUtils:org.apache.cxf.ws.rm.policy.RMAssertion getRMAssertion(org.apache.cxf.ws.rm.policy.RMAssertion,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.Source:java.util.Collection getAllUnacknowledgedSequences()",
            "org.apache.cxf.ws.rm.RMInInterceptor:void processAcknowledgments(org.apache.cxf.ws.rm.Source,org.apache.cxf.ws.rm.RMProperties)",
            "org.apache.cxf.ws.rm.RMOutInterceptor:void addAcknowledgements(org.apache.cxf.ws.rm.Destination,org.apache.cxf.ws.rm.RMProperties,org.apache.cxf.ws.rm.Identifier,org.apache.cxf.ws.addressing.v200408.AttributedURI)",
            "org.apache.cxf.ws.rm.Destination:void ackRequested(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.RMManager:void shutdown()",
            "org.apache.cxf.ws.rm.RMManager:void recoverReliableEndpoint(org.apache.cxf.endpoint.Endpoint,org.apache.cxf.transport.Conduit)",
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl:void resend(org.apache.cxf.transport.Conduit,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.soap.RMSoapInterceptor:void encode(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.rm.RMProperties)",
            "org.apache.cxf.ws.rm.soap.RMSoapInterceptor:org.apache.cxf.ws.rm.RMProperties unmarshalRMProperties(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.rm.soap.RMSoapInterceptor:void discardRMHeaders(java.util.List)",
            "org.apache.cxf.ws.rm.RMEndpoint:void setPolicies()",
            "org.apache.cxf.ws.rm.RMEndpoint:java.lang.Object getUsingAddressing(java.util.List)",
            "org.apache.cxf.ws.rm.RMEndpoint:void shutdown()",
            "org.apache.cxf.ws.rm.persistence.jdbc.RMTxStore:void removeMessages(org.apache.cxf.ws.rm.Identifier,java.util.Collection,boolean)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void <init>(java.util.SortedSet)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void add(java.util.Collection,boolean)",
            "org.apache.cxf.workqueue.WorkQueueManagerImpl:void shutdown(boolean)",
            "org.apache.cxf.workqueue.WorkQueueManagerImpl:void run()",
            "org.apache.cxf.databinding.AbstractDataBinding:void setNamespaceMap(java.util.Map)",
            "org.apache.cxf.databinding.AbstractDataBinding:void checkNamespaceMap(java.util.Map)",
            "org.apache.cxf.databinding.stax.StaxDataBindingFeature:void removeInterceptor(java.util.List,java.lang.String)",
            "org.apache.cxf.wsdl.JAXBExtensionHelper$1:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils$SchemaLSResourceResolver:org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.namespace.QName getServiceName(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:java.lang.String getPortName(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:void setPortName(org.apache.cxf.ws.addressing.EndpointReferenceType,java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.namespace.QName getInterfaceName(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:void setMetadata(org.apache.cxf.ws.addressing.EndpointReferenceType,java.util.List)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.wsdl.Definition getWSDLDefinition(org.apache.cxf.wsdl.WSDLManager,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.validation.Schema createSchema(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.wsdl.Port getPort(org.apache.cxf.wsdl.WSDLManager,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:org.apache.cxf.transport.MultiplexDestination getMatchingMultiplexDestination(javax.xml.namespace.QName,java.lang.String,org.apache.cxf.Bus)",
            "org.apache.cxf.io.CachedOutputStream:void flush()",
            "org.apache.cxf.io.CachedOutputStream:void lockOutputStream()",
            "org.apache.cxf.io.CachedOutputStream:void close()",
            "org.apache.cxf.service.model.BindingOperationInfo:void <init>(org.apache.cxf.service.model.BindingInfo,org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:int getMessagePartIndex(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePartByIndex(int)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePart(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePart(int)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperation(org.apache.cxf.message.Exchange,java.lang.String)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperationForWrapperElement(org.apache.cxf.message.Exchange,javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.SchemaInfo getSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.ServiceModelUtil:java.util.List getOperationInputPartNames(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.EndpointInfo findBestEndpointInfo(javax.xml.namespace.QName,java.util.List)",
            "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.BindingInfo getBinding(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.EndpointInfo getEndpoint(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.ServiceInfo:void initMessagesMap()",
            "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.SchemaInfo getSchema(java.lang.String)",
            "org.apache.cxf.service.model.MessageInfo:java.util.Map getMessagePartsMap()",
            "org.apache.cxf.service.model.MessageInfo:java.util.List getOrderedParts(java.util.List)",
            "org.apache.cxf.service.model.BindingInfo:org.apache.cxf.service.model.BindingOperationInfo buildOperation(javax.xml.namespace.QName,java.lang.String,java.lang.String)",
            "org.apache.cxf.service.model.BindingInfo:org.apache.cxf.service.model.BindingOperationInfo getOperation(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.ServiceImpl:org.apache.cxf.service.model.EndpointInfo getEndpointInfo(javax.xml.namespace.QName)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void fillInSchemaCrossreferences()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createEndpoints()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeServiceConfigurations()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromWSDL(java.lang.String)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromClass()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean hasWrappedMethods(org.apache.cxf.service.model.InterfaceInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void validateServiceModel()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.InterfaceInfo getInterfaceInfo()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeWSDLOperations()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void setFaultClassInfo(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.OperationInfo createOperation(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.InterfaceInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeWrappedSchema(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void checkForElement(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createBareMessage(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.OperationInfo,boolean)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isExistImport(org.apache.ws.commons.schema.XmlSchema,java.lang.String)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.ws.commons.schema.XmlSchemaElement getExistingSchemaElement(org.apache.ws.commons.schema.XmlSchema,javax.xml.namespace.QName)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createWrappedMessageSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.AbstractMessageContainer,org.apache.cxf.service.model.AbstractMessageContainer,org.apache.ws.commons.schema.XmlSchema,javax.xml.namespace.QName)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.SchemaInfo getOrCreateSchema(org.apache.cxf.service.model.ServiceInfo,java.lang.String,boolean)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createInputWrappedMessageParts(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,org.apache.cxf.service.model.MessageInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createOutputWrappedMessageParts(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,org.apache.cxf.service.model.MessageInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getEndpointName(boolean)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getServiceName()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getServiceNamespace()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getInterfaceName()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isValidMethod(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isHolder(java.lang.Class,java.lang.reflect.Type)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.reflect.Type getHolderType(java.lang.Class,java.lang.reflect.Type)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isWrapped(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isOutParam(java.lang.reflect.Method,int)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isInParam(java.lang.reflect.Method,int)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getInputMessageName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName createOutputMessageName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean hasOutMessage(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getFaultName(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.Class,java.lang.Class)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getAction(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isHeader(java.lang.reflect.Method,int)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getOperationName(org.apache.cxf.service.model.InterfaceInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isAsync(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getInPartName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getInParameterName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getOutParameterName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getOutPartName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.Class getResponseWrapper(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getResponseWrapperClassName(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.Class getRequestWrapper(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getRequestWrapperClassName(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isWrapperPartQualified(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isWrapperPartNillable(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:long getWrapperPartMaxOccurs(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:long getWrapperPartMinOccurs(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getWsdlURL()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isWrapped()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getStyle()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isRPC(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.DefaultServiceConfiguration:java.lang.Boolean isOperation(java.lang.reflect.Method)",
            "org.apache.cxf.service.ServiceModelVisitor:void walk()",
            "org.apache.cxf.service.ServiceModelVisitor:void visitOperation(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.binding.AbstractBindingFactory:void registerWithBindingManager()",
            "org.apache.cxf.binding.AbstractBindingFactory:org.apache.cxf.service.model.BindingInfo initializeBindingInfo(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding,org.apache.cxf.service.model.BindingInfo)",
            "org.apache.cxf.binding.AbstractBindingFactory:void copyExtensors(org.apache.cxf.service.model.AbstractPropertiesHolder,javax.wsdl.extensions.ElementExtensible,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:org.apache.cxf.service.model.BindingInfo createBindingInfo(org.apache.cxf.service.model.ServiceInfo,java.lang.String,java.lang.Object)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:void createSoapBinding(org.apache.cxf.binding.soap.model.SoapBindingInfo)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:void setupHeaders(org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.service.model.BindingMessageInfo,org.apache.cxf.service.model.BindingMessageInfo,org.apache.cxf.service.model.MessageInfo,org.apache.cxf.binding.soap.SoapBindingConfiguration)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:org.apache.cxf.binding.Binding createBinding(org.apache.cxf.service.model.BindingInfo)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:void addOutOfBandParts(org.apache.cxf.service.model.BindingOperationInfo,javax.wsdl.Message,org.apache.cxf.common.xmlschema.SchemaCollection,boolean,java.lang.String)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:void buildMessage(org.apache.cxf.service.model.MessageInfo,javax.wsdl.Message,org.apache.cxf.common.xmlschema.SchemaCollection,int,java.lang.String)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:org.apache.cxf.service.model.BindingInfo createBindingInfo(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding,java.lang.String)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:void initializeMessage(org.apache.cxf.binding.soap.model.SoapBindingInfo,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.service.model.BindingMessageInfo)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:java.util.List handleMimePart(javax.wsdl.extensions.mime.MIMEPart,java.util.List,org.apache.cxf.service.model.MessageInfo,org.apache.cxf.service.model.BindingMessageInfo,java.util.List,java.util.List)",
            "org.apache.cxf.binding.soap.interceptor.ReadHeadersInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.Soap12FaultOutInterceptor$Soap12FaultOutInterceptorInternal:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.RPCOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.soap.interceptor.SoapActionInInterceptor:void getAndSetOperation(org.apache.cxf.binding.soap.SoapMessage,java.lang.String)",
            "org.apache.cxf.binding.soap.interceptor.SoapHeaderOutFilterInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.RPCInInterceptor:org.apache.cxf.service.model.BindingOperationInfo getOperation(org.apache.cxf.message.Message,javax.xml.namespace.QName)",
            "org.apache.cxf.binding.soap.interceptor.RPCInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor:void writeSoapEnvelopeStart(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor:boolean handleHeaderPart(boolean,org.apache.cxf.binding.soap.SoapMessage,java.lang.String)",
            "org.apache.cxf.binding.soap.interceptor.MustUnderstandInterceptor:void initServiceSideInfo(java.util.Set,org.apache.cxf.binding.soap.SoapMessage,java.util.Set)",
            "org.apache.cxf.binding.soap.interceptor.MustUnderstandInterceptor:void buildMustUnderstandHeaders(java.util.Set,org.apache.cxf.binding.soap.SoapMessage,java.util.Set,java.util.Set)",
            "org.apache.cxf.binding.soap.interceptor.MustUnderstandInterceptor:void checkUnderstand(java.util.Set,java.util.Set,java.util.Set)",
            "org.apache.cxf.binding.soap.interceptor.Soap11FaultOutInterceptor$Soap11FaultOutInterceptorInternal:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.EndpointSelectionInterceptor:org.apache.cxf.endpoint.Endpoint selectEndpoint(org.apache.cxf.message.Message,java.util.Set)",
            "org.apache.cxf.binding.soap.interceptor.MustUnderstandInterceptor$UltimateReceiverMustUnderstandInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.SoapHeaderInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.soap.HeaderUtil:java.util.Set getHeaderQNames(org.apache.cxf.service.model.BindingMessageInfo)",
            "org.apache.cxf.binding.soap.SoapTransportFactory:org.apache.cxf.service.model.EndpointInfo createEndpointInfo(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.BindingInfo,javax.wsdl.Port)",
            "org.apache.cxf.binding.soap.SoapTransportFactory:void registerWithBindingManager()",
            "org.apache.cxf.binding.soap.SoapMessage:boolean hasHeader(javax.xml.namespace.QName)",
            "org.apache.cxf.binding.soap.SoapMessage:org.apache.cxf.headers.Header getHeader(javax.xml.namespace.QName)",
            "org.apache.cxf.binding.soap.saaj.SAAJInInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.saaj.SAAJOutInterceptor$SAAJOutEndingInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.model.SoapBindingInfo:org.apache.cxf.service.model.OperationInfo getOperationByAction(java.lang.String)",
            "org.apache.cxf.binding.xml.interceptor.XMLMessageInInterceptor:org.apache.cxf.service.model.BindingOperationInfo getBindingOperationInfo(boolean,javax.xml.namespace.QName,org.apache.cxf.service.model.BindingInfo,javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.binding.xml.XMLFormatValidator:boolean checkXMLBindingFormat()",
            "org.apache.cxf.binding.xml.XMLFormatValidator:boolean checkXMLFormat(org.apache.cxf.service.model.BindingInfo)",
            "org.apache.cxf.binding.xml.XMLFormatValidator:boolean findXMLFormatRootNode(java.util.Iterator,org.apache.cxf.service.model.BindingOperationInfo,java.lang.String)",
            "org.apache.cxf.binding.xml.XMLBindingFactory:org.apache.cxf.service.model.BindingInfo createBindingInfo(org.apache.cxf.service.model.ServiceInfo,java.lang.String,java.lang.Object)",
            "org.apache.cxf.clustering.AbstractStaticFailoverStrategy:java.util.List getAlternateEndpoints(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.tools.common.Tag:java.lang.String formatAttribute(org.apache.cxf.tools.common.Tag)",
            "org.apache.cxf.tools.common.Tag:java.lang.String formatTag(org.apache.cxf.tools.common.Tag,int)",
            "org.apache.cxf.tools.common.Tag:boolean equals(java.lang.Object)",
            "org.apache.cxf.tools.common.ClassUtils:void compile(org.apache.cxf.tools.common.ToolContext)",
            "org.apache.cxf.tools.common.ToolContext:void addParameters(java.util.Map)",
            "org.apache.cxf.tools.common.VelocityGenerator:void doWrite(java.lang.String,java.io.Writer)",
            "org.apache.cxf.tools.common.toolspec.ToolSpec:boolean isValidInputStream(java.lang.String)",
            "org.apache.cxf.tools.common.toolspec.ToolSpec:java.util.List getInstreamIds()",
            "org.apache.cxf.tools.common.toolspec.ToolSpec:java.util.List getOutstreamIds()",
            "org.apache.cxf.tools.common.toolspec.ToolSpec:java.lang.String getStreamRefName(java.lang.String)",
            "org.apache.cxf.tools.common.toolspec.parser.CommandDocument:java.lang.String[] getParameters(java.lang.String)",
            "org.apache.cxf.tools.common.toolspec.parser.CommandDocument:java.lang.String[] getParameterNames()",
            "org.apache.cxf.tools.common.toolspec.parser.Form:void <init>(org.w3c.dom.Element)",
            "org.apache.cxf.tools.common.toolspec.parser.Option:boolean accept(org.apache.cxf.tools.common.toolspec.parser.TokenInputStream,org.w3c.dom.Element,org.apache.cxf.tools.common.toolspec.parser.ErrorVisitor)",
            "org.apache.cxf.tools.common.toolspec.parser.OptionGroup:void <init>(org.w3c.dom.Element)",
            "org.apache.cxf.tools.common.toolspec.parser.OptionGroup:boolean accept(org.apache.cxf.tools.common.toolspec.parser.TokenInputStream,org.w3c.dom.Element,org.apache.cxf.tools.common.toolspec.parser.ErrorVisitor)",
            "org.apache.cxf.tools.common.toolspec.parser.OptionGroup:boolean isSatisfied(org.apache.cxf.tools.common.toolspec.parser.ErrorVisitor)",
            "org.apache.cxf.tools.common.toolspec.parser.ErrorVisitor:java.lang.String toString()",
            "org.apache.cxf.tools.common.toolspec.parser.CommandLineParser:org.apache.cxf.tools.common.toolspec.parser.CommandDocument parseArguments(java.lang.String[])",
            "org.apache.cxf.tools.common.ProcessorTestBase:boolean assertXmlEquals(java.io.File,java.io.File,java.util.List)",
            "org.apache.cxf.tools.common.ProcessorTestBase:void assertAttributesEquals(javax.xml.namespace.QName,java.util.Map,java.util.Map,java.util.Collection)",
            "org.apache.cxf.tools.common.ProcessorTestBase:void assertTagEquals(org.apache.cxf.tools.common.Tag,org.apache.cxf.tools.common.Tag,java.util.List,java.util.List)",
            "org.apache.cxf.tools.common.ProcessorTestBase:org.apache.cxf.tools.common.Tag getFromSource(org.apache.cxf.tools.common.Tag,org.apache.cxf.tools.common.Tag)",
            "org.apache.cxf.tools.common.model.JAnnotation:java.util.Set getImports()",
            "org.apache.cxf.tools.common.model.JAnnotation:org.apache.cxf.tools.common.model.JAnnotationElement getElementByName(java.lang.String)",
            "org.apache.cxf.tools.common.model.JavaMethod:java.lang.String getSignature()",
            "org.apache.cxf.tools.common.model.JavaMethod:void addAnnotation(java.lang.String,org.apache.cxf.tools.common.model.JAnnotation)",
            "org.apache.cxf.tools.common.model.JavaMethod:java.util.List getParameterList(boolean)",
            "org.apache.cxf.tools.common.model.JavaInterface:void addAnnotation(org.apache.cxf.tools.common.model.JAnnotation)",
            "org.apache.cxf.tools.common.model.JavaInterface:void addImports(java.util.Collection)",
            "org.apache.cxf.tools.common.model.JavaInterface:java.lang.String toString()",
            "org.apache.cxf.tools.common.model.JavaField:void addAnnotation(org.apache.cxf.tools.common.model.JAnnotation)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:boolean isSOAPBinding(javax.wsdl.Binding)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:java.lang.String getBindingStyle(javax.wsdl.Binding)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapOperation getSoapOperation(java.util.List)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:java.lang.String getSOAPOperationStyle(javax.wsdl.BindingOperation)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapBody getBindingInputSOAPBody(javax.wsdl.BindingOperation)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapBody getBindingOutputSOAPBody(javax.wsdl.BindingOperation)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapBody getSoapBody(java.util.List)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:java.util.List getSoapHeaders(java.util.List)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapHeader getBindingInputSOAPHeader(javax.wsdl.BindingOperation)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapHeader getBindingOutputSOAPHeader(javax.wsdl.BindingOperation)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapBinding getSoapBinding(java.util.List)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:java.util.List getBindingOperationSoapFaults(javax.wsdl.BindingOperation)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:boolean isMixedStyle(javax.wsdl.Binding)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:java.lang.String getCanonicalBindingStyle(javax.wsdl.Binding)",
            "org.apache.cxf.buslifecycle.CXFBusLifeCycleManager:void initComplete()",
            "org.apache.cxf.buslifecycle.CXFBusLifeCycleManager:void preShutdown()",
            "org.apache.cxf.buslifecycle.CXFBusLifeCycleManager:void postShutdown()",
            "org.apache.cxf.wsdl11.SchemaUtil:void getSchemas(javax.wsdl.Definition,org.apache.cxf.common.xmlschema.SchemaCollection,java.util.List)",
            "org.apache.cxf.wsdl11.SchemaUtil:void extractSchema(javax.wsdl.Definition,org.apache.cxf.common.xmlschema.SchemaCollection,java.util.List)",
            "org.apache.cxf.wsdl11.SchemaUtil:void parseImports(javax.wsdl.Definition,java.util.List)",
            "org.apache.cxf.wsdl11.SchemaUtil:void getSchemaList(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.SchemaUtil:void addSchema(java.lang.String,javax.wsdl.extensions.schema.Schema)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void parseWSDL(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:java.util.Collection getImports(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void parseImports(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void registerWSDLExtensibilityPlugins(javax.wsdl.extensions.ExtensionRegistry)",
            "org.apache.cxf.wsdl11.WSDLServiceUtils:org.apache.cxf.binding.BindingFactory getBindingFactory(javax.wsdl.Binding,org.apache.cxf.Bus,java.lang.StringBuffer)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:javax.wsdl.Definition build(java.util.Map)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addExtensibilityElements(javax.wsdl.extensions.ElementExtensible,java.util.List)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addExtensibilityAttributes(javax.wsdl.extensions.AttributeExtensible,java.util.Map)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildTypes(java.util.Collection,java.util.Map,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBinding(java.util.Collection,java.util.Collection)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBindingOperation(javax.wsdl.Definition,javax.wsdl.Binding,java.util.Collection)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBindingFault(javax.wsdl.Definition,javax.wsdl.BindingOperation,java.util.Collection)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildService(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildPortTypeOperation(javax.wsdl.PortType,java.util.Collection,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildMessage(javax.wsdl.Message,org.apache.cxf.service.model.AbstractMessageContainer,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void registerInitialExtensions(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:org.apache.cxf.service.model.ServiceSchemaInfo getSchemasForDefinition(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void putSchemasForDefinition(javax.wsdl.Definition,org.apache.cxf.service.model.ServiceSchemaInfo)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void removeDefinition(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void copyExtensors(org.apache.cxf.service.model.AbstractPropertiesHolder,java.util.List)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildMockServices(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition,javax.wsdl.Service,javax.xml.namespace.QName,org.apache.cxf.service.model.DescriptionInfo)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void parseImports(javax.wsdl.Definition,java.util.List)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.EndpointInfo buildEndpoint(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.BindingInfo,javax.wsdl.Port)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.BindingInfo buildBinding(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildInterface(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.PortType)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildInterfaceOperation(org.apache.cxf.service.model.InterfaceInfo,javax.wsdl.Operation)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildMessage(org.apache.cxf.service.model.AbstractMessageContainer,javax.wsdl.Message)",
            "org.apache.cxf.wsdl11.WSDLServiceFactory:org.apache.cxf.service.Service create()",
            "org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor:void insertConstructorArg(org.springframework.beans.factory.config.ConstructorArgumentValues,java.lang.Object)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void activateViaNS(java.lang.String)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadFragment(java.io.InputStream)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void processExtension(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadAndRegister(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:java.lang.Object getExtension(java.lang.String,java.lang.Class)",
            "org.apache.cxf.bus.extension.Extension:java.lang.String toString()",
            "org.apache.cxf.bus.CXFBusImpl:void initializeFeatures()",
            "org.apache.cxf.attachment.LazyDataSource:void load()",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:boolean containsValue(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:javax.activation.DataHandler get(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:javax.activation.DataHandler remove(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:void putAll(java.util.Map)",
            "org.apache.cxf.attachment.AttachmentDeserializer:void cacheStreamedAttachments()",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$1$1:boolean hasNext()",
            "org.apache.cxf.attachment.AttachmentSerializer:void writeAttachments()",
            "org.apache.cxf.attachment.AttachmentUtil:java.util.Map getDHMap(java.util.Collection)",
            "org.apache.cxf.attachment.AttachmentUtil:boolean isTypeSupported(java.lang.String,java.util.List)",
            "org.apache.cxf.attachment.LazyAttachmentCollection:boolean isEmpty()",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$3$1:boolean hasNext()",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$2$1:boolean hasNext()",
            "org.apache.cxf.frontend.ClientFactoryBean:void applyFeatures()",
            "org.apache.cxf.frontend.SimpleMethodDispatcher:org.apache.cxf.service.model.BindingOperationInfo getBindingOperation(java.lang.reflect.Method,org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory:org.apache.cxf.service.model.BindingInfo createBindingInfo()",
            "org.apache.cxf.frontend.ServerFactoryBean:void initializeServiceFactory()",
            "org.apache.cxf.frontend.ServerFactoryBean:void applyFeatures()",
            "org.apache.cxf.aegis.DatabindingException:java.lang.String getActualMessage()",
            "org.apache.cxf.aegis.util.jdom.StaxSerializer:void writeDocument(org.jdom.Document,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.aegis.util.jdom.StaxSerializer:void writeElement(org.jdom.Element,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.aegis.util.jdom.StaxSerializer:boolean isDeclared(javax.xml.stream.XMLStreamWriter,java.lang.String,java.lang.String)",
            "org.apache.cxf.aegis.util.jdom.StaxBuilder:void buildTree(org.jdom.JDOMFactory,javax.xml.stream.XMLStreamReader,org.jdom.Document)",
            "org.apache.cxf.aegis.util.stax.JDOMStreamReader:void setupNamespaces(org.jdom.Element)",
            "org.apache.cxf.aegis.util.stax.JDOMNamespaceContext:java.lang.String rawGetPrefix(org.jdom.Element,java.lang.String)",
            "org.apache.cxf.aegis.util.stax.JDOMNamespaceContext:void rawGetPrefixes(org.jdom.Element,java.lang.String,java.util.List)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void initialize(org.apache.cxf.service.Service)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void initializeOperation(org.apache.cxf.service.Service,org.apache.cxf.aegis.type.TypeMapping,org.apache.cxf.service.model.OperationInfo,java.util.Set)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void initializeOperationTypes(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void initializeMessage(org.apache.cxf.service.Service,org.apache.cxf.aegis.type.TypeMapping,org.apache.cxf.service.model.AbstractMessageContainer,int,java.util.Set)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void initializeMessageTypes(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.AbstractMessageContainer,int)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void addDependencies(java.util.Set,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void createSchemas(org.apache.cxf.service.Service,java.util.Set)",
            "org.apache.cxf.aegis.AegisContext:void processRootTypes()",
            "org.apache.cxf.aegis.type.basic.XMLBeanTypeInfo:org.w3c.dom.Element getPropertyElement(java.lang.String)",
            "org.apache.cxf.aegis.type.basic.BeanType:void writeObjectInternal(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,boolean)",
            "org.apache.cxf.aegis.type.basic.BeanType:java.util.Set getDependencies()",
            "org.apache.cxf.aegis.type.basic.BeanType:void writeSchema(org.apache.ws.commons.schema.XmlSchema)",
            "org.apache.cxf.aegis.type.basic.BeanTypeInfo:boolean containsPropertyName(java.util.List,java.lang.String)",
            "org.apache.cxf.aegis.type.mtom.AttachmentUtil:org.apache.cxf.message.Attachment getAttachment(java.lang.String,java.util.Collection)",
            "org.apache.cxf.aegis.type.encoded.ArrayTypeInfo:void <init>(javax.xml.namespace.NamespaceContext,java.lang.String,java.lang.String)",
            "org.apache.cxf.aegis.type.encoded.ArrayTypeInfo:java.lang.String toString()",
            "org.apache.cxf.aegis.type.encoded.SoapArrayType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.SoapArrayType:java.lang.Object makeArray(java.util.List,java.util.List,java.lang.Class)",
            "org.apache.cxf.aegis.type.encoded.TrailingBlocks:java.util.List writeBlocks(org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.SoapRefRegistry:void addInstance(java.lang.String,java.lang.Object)",
            "org.apache.cxf.aegis.type.XMLTypeCreator:org.w3c.dom.Element getBestMatch(org.w3c.dom.Element,java.lang.reflect.Method,java.util.List)",
            "org.apache.cxf.aegis.type.collection.MapType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.collection.CollectionType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.jaxws.JaxWsProxyFactoryBean:boolean needWrapperClassInterceptor(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.jaxws.JaxWsProxyFactoryBean:void buildHandlerChain(org.apache.cxf.jaxws.JaxWsClientProxy)",
            "org.apache.cxf.jaxws.handler.HandlerResolverImpl:java.util.List createHandlerChain(javax.xml.ws.handler.PortInfo)",
            "org.apache.cxf.jaxws.handler.HandlerChainInvoker:void <init>(java.util.List,boolean)",
            "org.apache.cxf.jaxws.handler.HandlerChainInvoker:boolean invokeHandleFault(java.util.List,javax.xml.ws.handler.MessageContext)",
            "org.apache.cxf.jaxws.handler.HandlerChainInvoker:boolean invokeHandleMessage(java.util.List,javax.xml.ws.handler.MessageContext)",
            "org.apache.cxf.jaxws.handler.HandlerChainBuilder:java.util.List buildHandlerChainFromConfiguration(java.util.List)",
            "org.apache.cxf.jaxws.handler.HandlerChainBuilder:java.util.List sortHandlers(java.util.List)",
            "org.apache.cxf.jaxws.handler.HandlerChainBuilder:void configureHandler(javax.xml.ws.handler.Handler,org.apache.cxf.jaxws.javaee.PortComponentHandlerType)",
            "org.apache.cxf.jaxws.handler.soap.SOAPMessageContextImpl:java.lang.Object[] getHeaders(javax.xml.namespace.QName,javax.xml.bind.JAXBContext,boolean)",
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerInterceptor:java.util.Set getUnderstoodHeaders()",
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerInterceptor:javax.xml.ws.handler.MessageContext createProtocolMessageContext(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerFaultInInterceptor:java.util.Set getUnderstoodHeaders()",
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerFaultOutInterceptor:java.util.Set getUnderstoodHeaders()",
            "org.apache.cxf.jaxws.support.JaxWsEndpointImpl:boolean hasUsingAddressing(java.util.List)",
            "org.apache.cxf.jaxws.support.JaxWsEndpointImpl:boolean addressingRequired(java.util.List)",
            "org.apache.cxf.jaxws.support.JaxWsEndpointImpl:javax.xml.ws.soap.AddressingFeature getAddressingFeature()",
            "org.apache.cxf.jaxws.support.JaxWsEndpointImpl:org.apache.cxf.ws.addressing.WSAddressingFeature getWSAddressingFeature()",
            "org.apache.cxf.jaxws.support.JaxWsEndpointImpl:javax.xml.ws.soap.MTOMFeature getMTOMFeature()",
            "org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean:void initializeWSDLOperationsForProvider()",
            "org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean:org.apache.cxf.service.model.FaultInfo getFaultInfo(org.apache.cxf.service.model.OperationInfo,java.lang.Class)",
            "org.apache.cxf.jaxws.support.JaxWsImplementorInfo:java.lang.String getWsdlLocation()",
            "org.apache.cxf.jaxws.support.JaxWsImplementorInfo:javax.xml.namespace.QName getInterfaceName()",
            "org.apache.cxf.jaxws.support.JaxWsImplementorInfo:java.lang.String getImplementorClassName()",
            "org.apache.cxf.jaxws.WrapperClassGenerator:java.util.Set generate()",
            "org.apache.cxf.jaxws.WrapperClassGenerator:void createWrapperClass(org.apache.cxf.service.model.MessagePartInfo,org.apache.cxf.service.model.MessageInfo,org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,boolean)",
            "org.apache.cxf.jaxws.WrapperClassGenerator:void addJAXBAnnotations(org.objectweb.asm.FieldVisitor,java.util.List)",
            "org.apache.cxf.jaxws.JaxWsClientProxy:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])",
            "org.apache.cxf.jaxws.ServiceImpl:void initializePorts()",
            "org.apache.cxf.jaxws.ServiceImpl:org.apache.cxf.service.factory.AbstractServiceFactoryBean createDispatchService(org.apache.cxf.databinding.DataBinding)",
            "org.apache.cxf.jaxws.ServiceImpl:java.lang.Object getPort(org.apache.cxf.ws.addressing.EndpointReferenceType,java.lang.Class,javax.xml.ws.WebServiceFeature[])",
            "org.apache.cxf.jaxws.ServiceImpl:javax.xml.ws.Dispatch createDispatch(javax.xml.namespace.QName,java.lang.Class,javax.xml.ws.Service$Mode,javax.xml.ws.WebServiceFeature[])",
            "org.apache.cxf.jaxws.ServiceImpl:javax.xml.ws.Dispatch createDispatch(javax.xml.namespace.QName,javax.xml.bind.JAXBContext,javax.xml.ws.Service$Mode,javax.xml.ws.WebServiceFeature[])",
            "org.apache.cxf.jaxws.spi.ProviderImpl:javax.xml.ws.wsaddressing.W3CEndpointReference createW3CEndpointReference(java.lang.String,javax.xml.namespace.QName,javax.xml.namespace.QName,java.util.List,java.lang.String,java.util.List)",
            "org.apache.cxf.jaxws.JaxWsServerFactoryBean:void buildHandlerChain()",
            "org.apache.cxf.jaxws.DispatchImpl:void addInvokeOperation(boolean)",
            "org.apache.cxf.jaxws.interceptors.MessageModeInInterceptor$MultiPartDataSource:void nextCurrent()",
            "org.apache.cxf.jaxws.interceptors.WebFaultOutInterceptor:org.apache.cxf.service.model.MessagePartInfo getFaultMessagePart(javax.xml.namespace.QName,org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.jaxws.interceptors.HolderOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.interceptors.SwAInInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.jaxws.interceptors.WrapperClassOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.interceptors.WrapperClassOutInterceptor:org.apache.cxf.databinding.WrapperHelper createWrapperHelper(org.apache.cxf.databinding.WrapperCapableDatabinding,org.apache.cxf.service.model.MessageInfo,org.apache.cxf.service.model.MessageInfo,java.lang.Class)",
            "org.apache.cxf.jaxws.interceptors.HolderInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.interceptors.WrapperClassInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.interceptors.WrapperClassInInterceptor:org.apache.cxf.databinding.WrapperHelper createWrapperHelper(org.apache.cxf.databinding.WrapperCapableDatabinding,org.apache.cxf.service.model.MessageInfo,org.apache.cxf.service.model.MessageInfo,java.lang.Class)",
            "org.apache.cxf.jaxws.interceptors.SwAOutInterceptor:void processAttachments(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.binding.soap.model.SoapBodyInfo)",
            "org.apache.cxf.jaxws.binding.http.HTTPBindingImpl:void validate()",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:void copyScoped(java.util.Map)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:void clear()",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:java.util.Set keySet()",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:java.util.Set entrySet()",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:void putAll(java.util.Map)",
            "org.apache.cxf.jaxws.AbstractJAXWSMethodInvoker:java.util.Map removeHandlerProperties(org.apache.cxf.jaxws.context.WrappedMessageContext)",
            "org.apache.cxf.jaxws.AbstractJAXWSMethodInvoker:void addHandlerProperties(org.apache.cxf.jaxws.context.WrappedMessageContext,java.util.Map)",
            "org.apache.cxf.jaxws.AbstractJAXWSMethodInvoker:void updateWebServiceContext(org.apache.cxf.message.Exchange,javax.xml.ws.handler.MessageContext)",
            "org.apache.cxf.xmlbeans.XmlBeansDataBinding:void initialize(org.apache.cxf.service.Service)"
        ]
    },
    "org.apache.cxf.jaxws.context.WrappedMessageContext:boolean isEmpty()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.xmlschema.FixedExtensionDeserializer:void deserialize(org.apache.ws.commons.schema.XmlSchemaObject,javax.xml.namespace.QName,org.w3c.dom.Node)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:boolean isEmpty()",
            "org.apache.cxf.common.util.CacheMap:boolean isEmpty()",
            "org.apache.cxf.common.util.TwoStageMap:boolean isEmpty()",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:boolean isEmpty()",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureWithWildCard(java.lang.String,java.lang.Object)",
            "org.apache.cxf.binding.soap.SoapMessage:boolean hasAdditionalEnvNs()",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void parseWSDL(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void copyExtensionAttributes(org.apache.cxf.service.model.AbstractPropertiesHolder,javax.wsdl.extensions.AttributeExtensible)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void activateAll()",
            "org.apache.cxf.aegis.type.encoded.MarshalRegistry$1:boolean hasNext()",
            "org.apache.cxf.jaxws.handler.soap.SOAPMessageContextImpl:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.jaxws.handler.logical.LogicalMessageContextImpl:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:boolean isEmpty()",
            "org.apache.cxf.jaxws.AbstractJAXWSMethodInvoker:void updateWebServiceContext(org.apache.cxf.message.Exchange,javax.xml.ws.handler.MessageContext)"
        ]
    },
    "org.apache.cxf.jaxws.JaxWsServerFactoryBean:org.apache.cxf.endpoint.Server create()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.EndpointImpl:org.apache.cxf.endpoint.ServerImpl getServer(java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxws.handler.soap.SOAPHandlerFaultOutInterceptor:void handleMessageInternal(org.apache.cxf.binding.soap.SoapMessage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerFaultOutInterceptor:void access$000(org.apache.cxf.jaxws.handler.soap.SOAPHandlerFaultOutInterceptor,org.apache.cxf.binding.soap.SoapMessage)"
        ]
    },
    "org.apache.cxf.aegis.util.jdom.StaxBuilder:org.jdom.Document build(javax.xml.stream.XMLStreamReader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.xml.JDOMElementType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.xml.JDOMDocumentType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)"
        ]
    },
    "org.apache.cxf.aegis.util.jdom.StaxBuilder:org.jdom.Document build(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.aegis.util.jdom.StaxBuilder:org.jdom.Document build(java.io.Reader)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.aegis.util.stax.JDOMStreamReader:void <init>(org.jdom.Document)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.aegis.xml.jdom.JDOMReader:javax.xml.stream.XMLStreamReader getXMLStreamReader()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.basic.BeanType:org.apache.cxf.aegis.type.Type getElementType(javax.xml.namespace.QName,org.apache.cxf.aegis.type.basic.BeanTypeInfo,org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.ArrayType:java.util.Collection readCollection(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.Base64Type:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.mtom.AbstractXOPType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.ArrayTypeInfo:void <init>(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.type.TypeMapping)",
            "org.apache.cxf.aegis.type.encoded.SoapArrayType:java.util.List readCollection(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.encoded.ArrayTypeInfo,int)"
        ]
    },
    "org.apache.cxf.staxutils.AbstractDOMStreamReader:int next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.AbstractDOMStreamReader:int nextTag()",
            "org.apache.cxf.staxutils.DepthXMLStreamReader:java.lang.String getElementText()",
            "org.apache.cxf.staxutils.DepthXMLStreamReader:int next()",
            "org.apache.cxf.staxutils.StaxUtils:void nextEvent(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.staxutils.StaxUtils:boolean toNextTag(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.staxutils.StaxUtils:boolean skipToStartOfElement(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.staxutils.StaxUtils:void copy(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:org.w3c.dom.Element startElement(org.w3c.dom.Node,javax.xml.stream.XMLStreamReader,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void readDocElements(org.w3c.dom.Node,javax.xml.stream.XMLStreamReader,boolean)",
            "org.apache.cxf.staxutils.StaxSource:void parse()",
            "org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor:void doResults(org.apache.cxf.binding.soap.SoapMessage,java.lang.String,javax.xml.soap.SOAPMessage,java.util.Vector)",
            "org.apache.cxf.binding.soap.interceptor.ReadHeadersInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.CheckFaultInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.tools.util.ToolsStaxUtils:java.util.List getTags(java.io.File)",
            "org.apache.cxf.tools.util.ToolsStaxUtils:org.apache.cxf.tools.common.Tag getTagTree(java.io.InputStream,java.util.List)",
            "org.apache.cxf.aegis.util.jdom.StaxBuilder:void buildTree(org.jdom.JDOMFactory,javax.xml.stream.XMLStreamReader,org.jdom.Document)",
            "org.apache.cxf.aegis.type.basic.Base64Type:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.xmlbeans.DataReaderImpl:java.lang.Object read(org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamReader)"
        ]
    },
    "org.apache.cxf.aegis.xml.jdom.JDOMWriter:org.apache.cxf.aegis.xml.MessageWriter getElementWriter(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.xml.jdom.JDOMWriter:org.apache.cxf.aegis.xml.MessageWriter getElementWriter(java.lang.String)",
            "org.apache.cxf.aegis.xml.jdom.JDOMWriter:org.apache.cxf.aegis.xml.MessageWriter getElementWriter(javax.xml.namespace.QName)",
            "org.apache.cxf.aegis.type.basic.ArrayType:void writeValue(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type,java.lang.String,java.lang.String)",
            "org.apache.cxf.aegis.type.encoded.SoapArrayType:void writeValue(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type)"
        ]
    },
    "org.apache.cxf.aegis.xml.jdom.JDOMWriter:java.lang.String getPrefixForNamespace(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.aegis.xml.jdom.JDOMWriter:java.lang.String getPrefixForNamespace(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.xml.AbstractMessageWriter:void writeXsiType(javax.xml.namespace.QName)",
            "org.apache.cxf.aegis.type.encoded.SoapArrayType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)"
        ]
    },
    "org.apache.cxf.aegis.xml.jdom.JDOMWriter:org.apache.cxf.aegis.xml.MessageWriter getAttributeWriter(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.xml.jdom.JDOMWriter:org.apache.cxf.aegis.xml.MessageWriter getAttributeWriter(javax.xml.namespace.QName)",
            "org.apache.cxf.aegis.xml.AbstractMessageWriter:void writeXsiType(javax.xml.namespace.QName)",
            "org.apache.cxf.aegis.xml.AbstractMessageWriter:void writeXsiNil()"
        ]
    },
    "org.apache.cxf.aegis.databinding.AegisDatabinding:void ensureInitialized()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.databinding.AegisDatabinding:org.apache.cxf.databinding.DataReader createReader(java.lang.Class)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:org.apache.cxf.databinding.DataWriter createWriter(java.lang.Class)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:org.apache.cxf.aegis.AegisContext getAegisContext()"
        ]
    },
    "org.apache.cxf.aegis.type.basic.BeanTypeInfo:void initializeSync()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.basic.BeanTypeInfo:void initialize()"
        ]
    },
    "org.apache.cxf.aegis.type.basic.BeanTypeInfo:java.beans.PropertyDescriptor[] getInterfacePropertyDescriptors(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.basic.BeanTypeInfo:void initializeProperties()"
        ]
    },
    "org.apache.cxf.aegis.databinding.AegisDatabinding:org.apache.cxf.aegis.type.Type getParameterType(org.apache.cxf.service.Service,org.apache.cxf.aegis.type.TypeMapping,org.apache.cxf.service.model.MessagePartInfo,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void initializeMessage(org.apache.cxf.service.Service,org.apache.cxf.aegis.type.TypeMapping,org.apache.cxf.service.model.AbstractMessageContainer,int,java.util.Set)"
        ]
    },
    "org.apache.cxf.aegis.type.AbstractTypeCreator:org.apache.cxf.aegis.type.Type createType(java.lang.reflect.Method,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.databinding.AegisDatabinding:javax.xml.namespace.QName getSuggestedName(org.apache.cxf.service.Service,org.apache.cxf.aegis.type.TypeMapping,org.apache.cxf.service.model.OperationInfo,int)"
        ]
    },
    "org.apache.cxf.aegis.type.AbstractTypeCreator:javax.xml.namespace.QName getElementName(java.lang.reflect.Method,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.databinding.AegisDatabinding:javax.xml.namespace.QName getSuggestedName(org.apache.cxf.service.Service,org.apache.cxf.aegis.type.TypeMapping,org.apache.cxf.service.model.OperationInfo,int)"
        ]
    },
    "org.apache.cxf.aegis.type.java5.Java5TypeCreator:org.apache.cxf.aegis.type.AbstractTypeCreator$TypeClassInfo createClassInfo(java.lang.reflect.Method,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.databinding.AegisDatabinding:org.apache.cxf.aegis.type.Type getParameterType(org.apache.cxf.service.Service,org.apache.cxf.aegis.type.TypeMapping,org.apache.cxf.service.model.MessagePartInfo,int)",
            "org.apache.cxf.aegis.type.AbstractTypeCreator:org.apache.cxf.aegis.type.Type createType(java.lang.reflect.Method,int)",
            "org.apache.cxf.aegis.type.AbstractTypeCreator:javax.xml.namespace.QName getElementName(java.lang.reflect.Method,int)",
            "org.apache.cxf.aegis.type.java5.Java5TypeCreator:org.apache.cxf.aegis.type.AbstractTypeCreator$TypeClassInfo createClassInfo(java.lang.reflect.Method,int)",
            "org.apache.cxf.aegis.type.XMLTypeCreator:org.apache.cxf.aegis.type.AbstractTypeCreator$TypeClassInfo createClassInfo(java.lang.reflect.Method,int)"
        ]
    },
    "org.apache.cxf.aegis.databinding.XMLStreamDataWriter:void write(java.lang.Object,javax.xml.stream.XMLStreamWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.databinding.XMLStreamDataWriter:void write(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cxf.aegis.databinding.XMLStreamDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.FaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:void writeParts(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.message.MessageContentsList,java.util.List)",
            "org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor:void writeSoapEnvelopeStart(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor:boolean handleHeaderPart(boolean,org.apache.cxf.binding.soap.SoapMessage,java.lang.String)",
            "org.apache.cxf.jaxws.interceptors.WebFaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.aegis.databinding.ElementDataWriter:void write(java.lang.Object,org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.databinding.ElementDataWriter:void write(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cxf.aegis.databinding.ElementDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.FaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:void writeParts(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.message.MessageContentsList,java.util.List)",
            "org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor:void writeSoapEnvelopeStart(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor:boolean handleHeaderPart(boolean,org.apache.cxf.binding.soap.SoapMessage,java.lang.String)",
            "org.apache.cxf.jaxws.interceptors.WebFaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.aegis.AegisXMLStreamDataWriter:void write(java.lang.Object,javax.xml.namespace.QName,boolean,java.lang.Object,org.apache.cxf.aegis.type.Type)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.aegis.AegisElementDataWriter:void write(java.lang.Object,javax.xml.namespace.QName,boolean,org.w3c.dom.Element,org.apache.cxf.aegis.type.Type)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.AegisElementDataWriter:void write(java.lang.Object,javax.xml.namespace.QName,boolean,java.lang.Object,org.apache.cxf.aegis.type.Type)"
        ]
    },
    "org.apache.cxf.aegis.type.basic.ArrayType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.databinding.XMLStreamDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.aegis.databinding.ElementDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,org.w3c.dom.Element)",
            "org.apache.cxf.aegis.AegisXMLStreamDataWriter:void write(java.lang.Object,javax.xml.namespace.QName,boolean,javax.xml.stream.XMLStreamWriter,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.basic.ObjectType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.BeanType:void writeObjectInternal(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,boolean)",
            "org.apache.cxf.aegis.type.basic.BeanType:void writeElement(javax.xml.namespace.QName,java.lang.Object,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.ArrayType:void writeValue(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type,java.lang.String,java.lang.String)",
            "org.apache.cxf.aegis.type.encoded.StructType:void writeElement(javax.xml.namespace.QName,java.lang.Object,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.SoapArrayType:void writeValue(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.collection.MapType:void writeEntry(org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.type.Type,java.util.Map$Entry)"
        ]
    },
    "org.apache.cxf.jaxws.handler.AbstractProtocolHandlerInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxws.handler.soap.SOAPHandlerInterceptor:void handleFault(org.apache.cxf.binding.soap.SoapMessage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerInterceptor:void handleFault(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxws.handler.soap.SOAPHandlerFaultInInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerFaultInInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxws.handler.soap.SOAPHandlerFaultInInterceptor:void handleAbort(org.apache.cxf.binding.soap.SoapMessage,javax.xml.ws.handler.MessageContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerFaultInInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)"
        ]
    },
    "org.apache.cxf.jaxws.handler.soap.SOAPHandlerFaultOutInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerFaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxws.handler.logical.LogicalHandlerFaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxws.handler.logical.LogicalHandlerOutInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxws.handler.logical.LogicalHandlerFaultInInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxws.handler.AbstractJAXWSHandlerInterceptor:void onCompletion(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.handler.AbstractProtocolHandlerInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerInterceptor:boolean handleMessageInternal(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerInterceptor:void handleAbort(org.apache.cxf.binding.soap.SoapMessage,javax.xml.ws.handler.MessageContext)",
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerFaultInInterceptor:void handleAbort(org.apache.cxf.binding.soap.SoapMessage,javax.xml.ws.handler.MessageContext)",
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerFaultOutInterceptor:void handleMessageInternal(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.jaxws.handler.logical.LogicalHandlerFaultOutInterceptor$LogicalHandlerFaultOutEndingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.handler.logical.LogicalHandlerInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.handler.logical.LogicalHandlerFaultInInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxws.handler.AbstractJAXWSHandlerInterceptor:boolean isMEPComlete(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerInterceptor:boolean handleMessageInternal(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.jaxws.handler.logical.LogicalHandlerInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.handler.logical.LogicalHandlerFaultInInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxws.handler.HandlerChainInvoker:boolean invokeLogicalHandlersHandleFault(boolean,javax.xml.ws.handler.LogicalMessageContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.handler.logical.LogicalHandlerFaultOutInterceptor$LogicalHandlerFaultOutEndingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.handler.logical.LogicalHandlerFaultInInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxws.handler.HandlerChainInvoker:boolean invokeProtocolHandlersHandleFault(boolean,javax.xml.ws.handler.MessageContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerFaultInInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerFaultOutInterceptor:void handleMessageInternal(org.apache.cxf.binding.soap.SoapMessage)"
        ]
    },
    "org.apache.cxf.jaxws.handler.HandlerChainInvoker:boolean invokeLogicalHandlers(boolean,javax.xml.ws.handler.LogicalMessageContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.handler.logical.LogicalHandlerOutInterceptor$LogicalHandlerOutEndingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.handler.logical.LogicalHandlerInInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxws.handler.HandlerChainInvoker:boolean invokeProtocolHandlers(boolean,javax.xml.ws.handler.MessageContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.handler.AbstractProtocolHandlerInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerInterceptor:boolean handleMessageInternal(org.apache.cxf.binding.soap.SoapMessage)"
        ]
    },
    "org.apache.cxf.jaxws.handler.AnnotationHandlerChainBuilder:java.util.List buildHandlerChainFromClass(java.lang.Class,javax.xml.namespace.QName,javax.xml.namespace.QName,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.JaxWsProxyFactoryBean:void buildHandlerChain(org.apache.cxf.jaxws.JaxWsClientProxy)",
            "org.apache.cxf.jaxws.handler.HandlerResolverImpl:java.util.List getHandlersFromAnnotation(java.lang.Class,javax.xml.ws.handler.PortInfo)",
            "org.apache.cxf.jaxws.JaxWsServerFactoryBean:void buildHandlerChain()"
        ]
    },
    "org.apache.cxf.jaxws.handler.AnnotationHandlerChainBuilder:void processHandlerElement(org.w3c.dom.Element,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.handler.AnnotationHandlerChainBuilder:void processHandlerChainElement(org.w3c.dom.Element,java.util.List,javax.xml.namespace.QName,javax.xml.namespace.QName,java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxws.support.JaxWsEndpointImpl:void <init>(org.apache.cxf.Bus,org.apache.cxf.service.Service,org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.jaxws.support.JaxWsImplementorInfo,java.util.List,java.util.List,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.support.JaxWsEndpointImpl:void <init>(org.apache.cxf.Bus,org.apache.cxf.service.Service,org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.jaxws.support.JaxWsEndpointImpl:void <init>(org.apache.cxf.Bus,org.apache.cxf.service.Service,org.apache.cxf.service.model.EndpointInfo,java.util.List)",
            "org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean:org.apache.cxf.endpoint.Endpoint createEndpoint(org.apache.cxf.service.model.EndpointInfo)"
        ]
    },
    "org.apache.cxf.jaxws.support.JaxWsImplementorInfo:void <init>(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean:void setServiceClass(java.lang.Class)",
            "org.apache.cxf.jaxws.EndpointImpl:org.apache.cxf.endpoint.ServerImpl getServer(java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean:java.util.Set getExtraClass()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromWSDL(java.lang.String)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromClass()"
        ]
    },
    "org.apache.cxf.jaxws.spi.ProviderImpl:java.lang.Object getPort(javax.xml.ws.EndpointReference,java.lang.Class,javax.xml.ws.WebServiceFeature[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxws.DispatchImpl:void <init>(org.apache.cxf.endpoint.Client,javax.xml.ws.Service$Mode,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.ServiceImpl:javax.xml.ws.Dispatch createDispatch(javax.xml.namespace.QName,java.lang.Class,javax.xml.ws.Service$Mode,javax.xml.ws.WebServiceFeature[])"
        ]
    },
    "org.apache.cxf.jaxws.interceptors.MessageModeInInterceptor$MultiPartDataSource$1:int read()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.IOUtils:java.lang.String readStringFromStream(java.io.InputStream)",
            "org.apache.cxf.attachment.DelegatingInputStream:int read()",
            "org.apache.cxf.attachment.QuotedPrintableDecoderStream:int read()",
            "org.apache.cxf.jaxws.interceptors.MessageModeInInterceptor$MultiPartDataSource$1:int read()"
        ]
    },
    "org.apache.cxf.jaxws.interceptors.SwAOutInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxws.context.WrappedMessageContext:void <init>(org.apache.cxf.message.Message,javax.xml.ws.handler.MessageContext$Scope)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.handler.AbstractProtocolHandlerInterceptor:javax.xml.ws.handler.MessageContext createProtocolMessageContext(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.handler.soap.SOAPMessageContextImpl:void <init>(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.handler.logical.LogicalMessageContextImpl:void <init>(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.JAXWSMethodInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object,java.lang.reflect.Method,java.util.List)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:void <init>(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.service.invoker.AbstractInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.ServiceInvokerInterceptor$1:void run()"
        ]
    },
    "org.apache.cxf.transport.jms.continuations.JMSContinuation:boolean suspend(long)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxb.JAXBToStringBuilder:java.lang.String valueOf(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.service.factory.DefaultServiceConfiguration:java.lang.String getDefaultLocalName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.DefaultServiceConfiguration:javax.xml.namespace.QName getInParameterName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)",
            "org.apache.cxf.service.factory.DefaultServiceConfiguration:javax.xml.namespace.QName getOutParameterName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)"
        ]
    },
    "org.apache.cxf.resource.URIResolver:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.servlet.CXFServlet:void loadAdditionalConfig(org.springframework.context.ApplicationContext,javax.servlet.ServletConfig)",
            "org.apache.cxf.frontend.ServerFactoryBean:void initializeServiceFactory()"
        ]
    },
    "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:org.apache.cxf.databinding.DataReader getDataReader(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.WrappedInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.BareInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.databinding.stax.StaxDataBindingInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:org.apache.cxf.databinding.DataReader getNodeDataReader(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.soap.interceptor.SoapHeaderInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.common.util.PackageUtils:java.lang.String parsePackageName(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.tools.util.URIParserUtil:java.lang.String parsePackageName(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.tools.common.ToolContext:java.lang.String mapPackageName(java.lang.String)"
        ]
    },
    "org.apache.cxf.aegis.type.basic.BooleanType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.databinding.XMLStreamDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.aegis.databinding.ElementDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,org.w3c.dom.Element)",
            "org.apache.cxf.aegis.AegisXMLStreamDataWriter:void write(java.lang.Object,javax.xml.namespace.QName,boolean,javax.xml.stream.XMLStreamWriter,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.basic.ObjectType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.BeanType:void writeObjectInternal(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,boolean)",
            "org.apache.cxf.aegis.type.basic.BeanType:void writeElement(javax.xml.namespace.QName,java.lang.Object,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.ArrayType:void writeValue(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type,java.lang.String,java.lang.String)",
            "org.apache.cxf.aegis.type.encoded.StructType:void writeElement(javax.xml.namespace.QName,java.lang.Object,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.SoapArrayType:void writeValue(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.collection.MapType:void writeEntry(org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.type.Type,java.util.Map$Entry)"
        ]
    },
    "org.apache.cxf.aegis.type.basic.IntType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.databinding.XMLStreamDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.aegis.databinding.ElementDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,org.w3c.dom.Element)",
            "org.apache.cxf.aegis.AegisXMLStreamDataWriter:void write(java.lang.Object,javax.xml.namespace.QName,boolean,javax.xml.stream.XMLStreamWriter,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.basic.ObjectType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.BeanType:void writeObjectInternal(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,boolean)",
            "org.apache.cxf.aegis.type.basic.BeanType:void writeElement(javax.xml.namespace.QName,java.lang.Object,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.CharacterAsStringType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.ArrayType:void writeValue(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type,java.lang.String,java.lang.String)",
            "org.apache.cxf.aegis.type.encoded.StructType:void writeElement(javax.xml.namespace.QName,java.lang.Object,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.SoapArrayType:void writeValue(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.collection.MapType:void writeEntry(org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.type.Type,java.util.Map$Entry)"
        ]
    },
    "org.apache.cxf.aegis.type.basic.ByteType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.databinding.XMLStreamDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.aegis.databinding.ElementDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,org.w3c.dom.Element)",
            "org.apache.cxf.aegis.AegisXMLStreamDataWriter:void write(java.lang.Object,javax.xml.namespace.QName,boolean,javax.xml.stream.XMLStreamWriter,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.basic.ObjectType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.BeanType:void writeObjectInternal(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,boolean)",
            "org.apache.cxf.aegis.type.basic.BeanType:void writeElement(javax.xml.namespace.QName,java.lang.Object,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.ArrayType:void writeValue(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type,java.lang.String,java.lang.String)",
            "org.apache.cxf.aegis.type.encoded.StructType:void writeElement(javax.xml.namespace.QName,java.lang.Object,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.SoapArrayType:void writeValue(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.collection.MapType:void writeEntry(org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.type.Type,java.util.Map$Entry)"
        ]
    },
    "org.apache.cxf.aegis.type.basic.DoubleType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.databinding.XMLStreamDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.aegis.databinding.ElementDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,org.w3c.dom.Element)",
            "org.apache.cxf.aegis.AegisXMLStreamDataWriter:void write(java.lang.Object,javax.xml.namespace.QName,boolean,javax.xml.stream.XMLStreamWriter,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.basic.ObjectType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.BeanType:void writeObjectInternal(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,boolean)",
            "org.apache.cxf.aegis.type.basic.BeanType:void writeElement(javax.xml.namespace.QName,java.lang.Object,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.ArrayType:void writeValue(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type,java.lang.String,java.lang.String)",
            "org.apache.cxf.aegis.type.encoded.StructType:void writeElement(javax.xml.namespace.QName,java.lang.Object,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.SoapArrayType:void writeValue(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.collection.MapType:void writeEntry(org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.type.Type,java.util.Map$Entry)"
        ]
    },
    "org.apache.cxf.aegis.type.basic.CharacterType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.databinding.XMLStreamDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.aegis.databinding.ElementDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,org.w3c.dom.Element)",
            "org.apache.cxf.aegis.AegisXMLStreamDataWriter:void write(java.lang.Object,javax.xml.namespace.QName,boolean,javax.xml.stream.XMLStreamWriter,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.basic.ObjectType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.BeanType:void writeObjectInternal(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,boolean)",
            "org.apache.cxf.aegis.type.basic.BeanType:void writeElement(javax.xml.namespace.QName,java.lang.Object,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.ArrayType:void writeValue(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type,java.lang.String,java.lang.String)",
            "org.apache.cxf.aegis.type.encoded.StructType:void writeElement(javax.xml.namespace.QName,java.lang.Object,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.SoapArrayType:void writeValue(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.collection.MapType:void writeEntry(org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.type.Type,java.util.Map$Entry)"
        ]
    },
    "org.apache.cxf.aegis.type.basic.LongType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.databinding.XMLStreamDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.aegis.databinding.ElementDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,org.w3c.dom.Element)",
            "org.apache.cxf.aegis.AegisXMLStreamDataWriter:void write(java.lang.Object,javax.xml.namespace.QName,boolean,javax.xml.stream.XMLStreamWriter,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.basic.ObjectType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.BeanType:void writeObjectInternal(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,boolean)",
            "org.apache.cxf.aegis.type.basic.BeanType:void writeElement(javax.xml.namespace.QName,java.lang.Object,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.ArrayType:void writeValue(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type,java.lang.String,java.lang.String)",
            "org.apache.cxf.aegis.type.encoded.StructType:void writeElement(javax.xml.namespace.QName,java.lang.Object,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.SoapArrayType:void writeValue(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.collection.MapType:void writeEntry(org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.type.Type,java.util.Map$Entry)"
        ]
    },
    "org.apache.cxf.aegis.type.basic.FloatType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.databinding.XMLStreamDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.aegis.databinding.ElementDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,org.w3c.dom.Element)",
            "org.apache.cxf.aegis.AegisXMLStreamDataWriter:void write(java.lang.Object,javax.xml.namespace.QName,boolean,javax.xml.stream.XMLStreamWriter,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.basic.ObjectType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.BeanType:void writeObjectInternal(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,boolean)",
            "org.apache.cxf.aegis.type.basic.BeanType:void writeElement(javax.xml.namespace.QName,java.lang.Object,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.ArrayType:void writeValue(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type,java.lang.String,java.lang.String)",
            "org.apache.cxf.aegis.type.encoded.StructType:void writeElement(javax.xml.namespace.QName,java.lang.Object,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.SoapArrayType:void writeValue(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.collection.MapType:void writeEntry(org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.type.Type,java.util.Map$Entry)"
        ]
    },
    "org.apache.cxf.aegis.type.basic.ShortType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.databinding.XMLStreamDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.aegis.databinding.ElementDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,org.w3c.dom.Element)",
            "org.apache.cxf.aegis.AegisXMLStreamDataWriter:void write(java.lang.Object,javax.xml.namespace.QName,boolean,javax.xml.stream.XMLStreamWriter,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.basic.ObjectType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.BeanType:void writeObjectInternal(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,boolean)",
            "org.apache.cxf.aegis.type.basic.BeanType:void writeElement(javax.xml.namespace.QName,java.lang.Object,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.ArrayType:void writeValue(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type,java.lang.String,java.lang.String)",
            "org.apache.cxf.aegis.type.encoded.StructType:void writeElement(javax.xml.namespace.QName,java.lang.Object,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.SoapArrayType:void writeValue(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.collection.MapType:void writeEntry(org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.type.Type,java.util.Map$Entry)"
        ]
    },
    "org.apache.cxf.aegis.type.basic.SqlDateType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.databinding.XMLStreamDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.aegis.databinding.ElementDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,org.w3c.dom.Element)",
            "org.apache.cxf.aegis.AegisXMLStreamDataWriter:void write(java.lang.Object,javax.xml.namespace.QName,boolean,javax.xml.stream.XMLStreamWriter,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.basic.ObjectType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.BeanType:void writeObjectInternal(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,boolean)",
            "org.apache.cxf.aegis.type.basic.BeanType:void writeElement(javax.xml.namespace.QName,java.lang.Object,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.ArrayType:void writeValue(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type,java.lang.String,java.lang.String)",
            "org.apache.cxf.aegis.type.encoded.StructType:void writeElement(javax.xml.namespace.QName,java.lang.Object,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.SoapArrayType:void writeValue(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.collection.MapType:void writeEntry(org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.type.Type,java.util.Map$Entry)"
        ]
    },
    "org.apache.cxf.aegis.type.encoded.SoapEncodingUtil:void writeId(org.apache.cxf.aegis.xml.MessageWriter,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.encoded.TrailingBlocks:java.util.List writeBlocks(org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)"
        ]
    },
    "org.apache.cxf.aegis.type.encoded.SoapEncodingUtil:void writeRef(org.apache.cxf.aegis.xml.MessageWriter,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.encoded.SoapRefType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.StructType:void writeElement(javax.xml.namespace.QName,java.lang.Object,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.SoapArrayType:void writeValue(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type)"
        ]
    },
    "org.apache.cxf.aegis.type.AbstractTypeCreator:org.apache.cxf.aegis.type.Type createType(java.beans.PropertyDescriptor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.basic.BeanTypeInfo:org.apache.cxf.aegis.type.Type getType(javax.xml.namespace.QName)"
        ]
    },
    "org.apache.cxf.aegis.type.AbstractTypeCreator:org.apache.cxf.aegis.type.Type createType(java.lang.reflect.Field)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.aegis.type.AbstractTypeCreator:org.apache.cxf.aegis.type.Type createType(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.AegisContext:void processRootTypes()",
            "org.apache.cxf.aegis.type.AbstractTypeCreator:org.apache.cxf.aegis.type.Type createHolderType(org.apache.cxf.aegis.type.AbstractTypeCreator$TypeClassInfo)",
            "org.apache.cxf.aegis.type.basic.ObjectType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.BeanType:org.apache.cxf.aegis.type.Type getSuperType()",
            "org.apache.cxf.aegis.type.basic.ArrayType:org.apache.cxf.aegis.type.Type getComponentType()",
            "org.apache.cxf.aegis.type.encoded.SoapArrayType:org.apache.cxf.aegis.type.Type getComponentType()",
            "org.apache.cxf.aegis.type.encoded.TrailingBlocks:java.util.List writeBlocks(org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.java5.Java5TypeCreator:org.apache.cxf.aegis.type.Type getOrCreateParameterizedType(java.lang.Object,int)",
            "org.apache.cxf.aegis.type.XMLTypeCreator:org.apache.cxf.aegis.type.Type createTypeFromGeneric(java.lang.Object)"
        ]
    },
    "org.apache.cxf.aegis.type.java5.Java5TypeCreator:org.apache.cxf.aegis.type.Type getOrCreateParameterizedType(java.lang.Object,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.java5.Java5TypeCreator:org.apache.cxf.aegis.type.Type getOrCreateGenericType(org.apache.cxf.aegis.type.AbstractTypeCreator$TypeClassInfo)",
            "org.apache.cxf.aegis.type.java5.Java5TypeCreator:org.apache.cxf.aegis.type.Type getOrCreateMapKeyType(org.apache.cxf.aegis.type.AbstractTypeCreator$TypeClassInfo)",
            "org.apache.cxf.aegis.type.java5.Java5TypeCreator:org.apache.cxf.aegis.type.Type getOrCreateMapValueType(org.apache.cxf.aegis.type.AbstractTypeCreator$TypeClassInfo)"
        ]
    },
    "org.apache.cxf.aegis.type.XMLTypeCreator:org.apache.cxf.aegis.type.Type createTypeFromGeneric(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.XMLTypeCreator:org.apache.cxf.aegis.type.Type getOrCreateGenericType(org.apache.cxf.aegis.type.AbstractTypeCreator$TypeClassInfo)",
            "org.apache.cxf.aegis.type.XMLTypeCreator:org.apache.cxf.aegis.type.Type getOrCreateMapKeyType(org.apache.cxf.aegis.type.AbstractTypeCreator$TypeClassInfo)",
            "org.apache.cxf.aegis.type.XMLTypeCreator:org.apache.cxf.aegis.type.Type getOrCreateMapValueType(org.apache.cxf.aegis.type.AbstractTypeCreator$TypeClassInfo)"
        ]
    },
    "org.apache.cxf.aegis.AegisXMLStreamDataReader:java.lang.Object read(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.aegis.AegisElementDataReader:java.lang.Object read(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.AegisElementDataReader:java.lang.Object read(java.lang.Object)",
            "org.apache.cxf.aegis.databinding.ElementDataReader:java.lang.Object read(org.w3c.dom.Element)",
            "org.apache.cxf.aegis.databinding.ElementDataReader:java.lang.Object read(javax.xml.namespace.QName,org.w3c.dom.Element,java.lang.Class)"
        ]
    },
    "org.apache.cxf.aegis.AegisElementDataReader:java.lang.Object read(java.lang.Object,org.apache.cxf.aegis.type.Type)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.aegis.databinding.ElementDataReader:java.lang.Object read(org.apache.cxf.service.model.MessagePartInfo,org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.databinding.ElementDataReader:java.lang.Object read(org.apache.cxf.service.model.MessagePartInfo,java.lang.Object)"
        ]
    },
    "org.apache.cxf.aegis.databinding.XMLStreamDataReader:java.lang.Object read(org.apache.cxf.service.model.MessagePartInfo,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.WrappedInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.BareInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.ClientFaultConverter:void processFaultDetail(org.apache.cxf.interceptor.Fault,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void getPara(org.apache.cxf.staxutils.DepthXMLStreamReader,org.apache.cxf.databinding.DataReader,org.apache.cxf.message.MessageContentsList,java.util.Iterator,org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.soap.interceptor.RPCInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.soap.interceptor.SoapHeaderInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.aegis.databinding.XMLStreamDataReader:java.lang.Object read(javax.xml.namespace.QName,javax.xml.stream.XMLStreamReader,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.databinding.XMLStreamDataReader:java.lang.Object read(javax.xml.namespace.QName,java.lang.Object,java.lang.Class)"
        ]
    },
    "org.apache.cxf.aegis.databinding.XMLStreamDataReader:java.lang.Object read(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.stax.StaxDataBindingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.soap.interceptor.ReadHeadersInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.saaj.SAAJInInterceptor:void replaceHeaders(javax.xml.soap.SOAPMessage,org.apache.cxf.binding.soap.SoapMessage)"
        ]
    },
    "org.apache.cxf.ws.policy.attachment.wsdl11.Wsdl11AttachmentPolicyProvider:org.apache.neethi.Policy getEffectivePolicy(org.apache.cxf.service.model.ServiceInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.PolicyEngineImpl:org.apache.neethi.Policy getAggregatedServicePolicy(org.apache.cxf.service.model.ServiceInfo)"
        ]
    },
    "org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor$SOAPHeaderWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.JAXBEncoderDecoder:void marshallException(javax.xml.bind.Marshaller,java.lang.Exception,org.apache.cxf.service.model.MessagePartInfo,java.lang.Object)",
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamWriter,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElementEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.interceptor.WrappedOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.policy.model.InitiatorToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.RequiredParts:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.TransportToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.AlgorithmSuite:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.Wss11:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.EncryptionToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SymmetricBinding:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.X509Token:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SignatureToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.Trust10:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.HttpsToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.AsymmetricBinding:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.ContentEncryptedElements:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.KeyValueToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SignedEncryptedElements:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.Trust13:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.RequiredElements:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.UsernameToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SupportingToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.TransportBinding:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SignedEncryptedParts:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.Layout:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.IssuedToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SecureConversationToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.Wss10:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.ProtectionToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.RecipientToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.trust.STSClient:void addLifetime(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.trust.STSClient:void addAppliesTo(javax.xml.stream.XMLStreamWriter,java.lang.String)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.binding.soap.interceptor.Soap12FaultOutInterceptor$Soap12FaultOutInterceptorInternal:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor:void writeSoapEnvelopeStart(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor:boolean handleHeaderPart(boolean,org.apache.cxf.binding.soap.SoapMessage,java.lang.String)",
            "org.apache.cxf.binding.soap.interceptor.Soap11FaultOutInterceptor$Soap11FaultOutInterceptorInternal:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.aegis.util.jdom.StaxSerializer:void writeElement(org.jdom.Element,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.aegis.xml.stax.ElementWriter:void writeStartElement()",
            "org.apache.cxf.jaxws.spi.ProviderImpl:javax.xml.ws.wsaddressing.W3CEndpointReference createW3CEndpointReference(java.lang.String,javax.xml.namespace.QName,javax.xml.namespace.QName,java.util.List,java.lang.String,java.util.List)",
            "org.apache.cxf.xmlbeans.DataWriterImpl:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamWriter)"
        ]
    },
    "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeEmptyElement(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeEmptyElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.ws.security.policy.model.SymmetricBinding:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.KeyValueToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.Layout:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.IssuedToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SecureConversationToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeEmptyElement(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeEmptyElement(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeEmptyElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.ws.security.policy.model.SymmetricBinding:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.KeyValueToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.Layout:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.IssuedToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SecureConversationToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeEmptyElement(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.binding.soap.interceptor.RPCOutInterceptor:java.lang.String addOperationNode(org.apache.cxf.helpers.NSStack,org.apache.cxf.message.Message,javax.xml.stream.XMLStreamWriter,boolean,org.apache.cxf.service.model.BindingOperationInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.soap.interceptor.RPCOutInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.binding.xml.interceptor.XMLFaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:void copy(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:void copy(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.xmlbeans.DataWriterImpl:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamWriter)"
        ]
    },
    "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeStartElement(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeStartElement(java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamWriter,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElementEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.binding.soap.interceptor.Soap11FaultOutInterceptor$Soap11FaultOutInterceptorInternal:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.aegis.xml.stax.ElementWriter:void writeStartElement()",
            "org.apache.cxf.xmlbeans.DataWriterImpl:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamWriter)"
        ]
    },
    "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeStartElement(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeStartElement(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElementEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.xmlbeans.DataWriterImpl:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamWriter)"
        ]
    },
    "org.apache.cxf.xmlbeans.DataWriterImpl:void write(java.lang.Object,javax.xml.stream.XMLStreamWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.xmlbeans.DataWriterImpl:void write(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cxf.xmlbeans.DataWriterImpl:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.FaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:void writeParts(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.message.MessageContentsList,java.util.List)",
            "org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor:void writeSoapEnvelopeStart(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor:boolean handleHeaderPart(boolean,org.apache.cxf.binding.soap.SoapMessage,java.lang.String)",
            "org.apache.cxf.jaxws.interceptors.WebFaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.xmlbeans.NodeDataWriterImpl:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.xmlbeans.NodeDataWriterImpl:void write(java.lang.Object,org.w3c.dom.Node)",
            "org.apache.cxf.xmlbeans.NodeDataWriterImpl:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,java.lang.Object)"
        ]
    },
    "org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor$SOAPHeaderWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeAttributeEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.X509Token:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.ContentEncryptedElements:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.KeyValueToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SignedEncryptedElements:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.RequiredElements:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.UsernameToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.IssuedToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SecureConversationToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.binding.soap.interceptor.Soap12FaultOutInterceptor$Soap12FaultOutInterceptorInternal:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.aegis.util.jdom.StaxSerializer:void writeElement(org.jdom.Element,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.aegis.xml.stax.AttributeWriter:void writeValue(java.lang.Object)"
        ]
    },
    "org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor$SOAPHeaderWriter:void writeSoapAttributes()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor$SOAPHeaderWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor$SOAPHeaderWriter:void writeStartElement(java.lang.String,java.lang.String)",
            "org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor$SOAPHeaderWriter:void writeStartElement(java.lang.String)"
        ]
    },
    "org.apache.cxf.binding.soap.interceptor.AbstractSoapInterceptor:java.lang.String getFaultCodePrefix(javax.xml.stream.XMLStreamWriter,javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.soap.interceptor.Soap12FaultOutInterceptor$Soap12FaultOutInterceptorInternal:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.Soap11FaultOutInterceptor$Soap11FaultOutInterceptorInternal:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)"
        ]
    },
    "org.apache.cxf.aegis.xml.stax.ElementWriter:org.apache.cxf.aegis.xml.MessageWriter getAttributeWriter(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.aegis.xml.stax.ElementWriter:org.apache.cxf.aegis.xml.MessageWriter getAttributeWriter(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.xml.AbstractMessageWriter:void writeXsiType(javax.xml.namespace.QName)",
            "org.apache.cxf.aegis.xml.AbstractMessageWriter:void writeXsiNil()"
        ]
    },
    "org.apache.cxf.aegis.xml.stax.ElementWriter:org.apache.cxf.aegis.xml.MessageWriter getAttributeWriter(javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.basic.ObjectType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.BeanType:void writeObjectInternal(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,boolean)",
            "org.apache.cxf.aegis.type.mtom.AbstractXOPType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.SoapEncodingUtil:void writeAttribute(org.apache.cxf.aegis.xml.MessageWriter,javax.xml.namespace.QName,java.lang.String)"
        ]
    },
    "org.apache.cxf.aegis.xml.stax.ElementWriter:void <init>(javax.xml.stream.XMLStreamWriter,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.xml.stax.ElementWriter:void <init>(javax.xml.stream.XMLStreamWriter,javax.xml.namespace.QName)",
            "org.apache.cxf.aegis.xml.stax.ElementWriter:org.apache.cxf.aegis.xml.MessageWriter getElementWriter(java.lang.String)",
            "org.apache.cxf.aegis.xml.stax.ElementWriter:org.apache.cxf.aegis.xml.MessageWriter getElementWriter(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.aegis.xml.stax.ElementWriter:org.apache.cxf.aegis.xml.MessageWriter getElementWriter(javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.databinding.XMLStreamDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.aegis.databinding.ElementDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,org.w3c.dom.Element)",
            "org.apache.cxf.aegis.AegisXMLStreamDataWriter:void write(java.lang.Object,javax.xml.namespace.QName,boolean,javax.xml.stream.XMLStreamWriter,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.basic.BeanType:org.apache.cxf.aegis.xml.MessageWriter getWriter(org.apache.cxf.aegis.xml.MessageWriter,javax.xml.namespace.QName,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.mtom.AbstractXOPType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.StructType:void writeElement(javax.xml.namespace.QName,java.lang.Object,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.TrailingBlocks:java.util.List writeBlocks(org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.collection.MapType:void writeEntry(org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.type.Type,java.util.Map$Entry)"
        ]
    },
    "org.apache.cxf.transport.servlet.ServletController:java.util.List getServletDestinations()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.servlet.ServletController:void generateServiceList(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.servlet.ServletController:void generateUnformattedServiceList(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.cxf.service.model.BindingMessageInfo:void <init>(org.apache.cxf.service.model.MessageInfo,org.apache.cxf.service.model.BindingOperationInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.model.BindingOperationInfo:void <init>(org.apache.cxf.service.model.BindingInfo,org.apache.cxf.service.model.OperationInfo)"
        ]
    },
    "org.apache.cxf.databinding.stax.StaxDataBindingInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.service.model.UnwrappedOperationInfo:java.util.Collection getFaults()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.ClientFaultConverter:void processFaultDetail(org.apache.cxf.interceptor.Fault,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.addressing.MAPAggregator:java.lang.String getActionFromFaultMessage(org.apache.cxf.service.model.OperationInfo,java.lang.String)",
            "org.apache.cxf.service.model.BindingOperationInfo:void <init>(org.apache.cxf.service.model.BindingInfo,org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.UnwrappedOperationInfo:java.util.Collection getFaults()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromClass()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void validateServiceModel()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void setFaultClassInfo(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.ServiceModelVisitor:void visitOperation(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildPortTypeOperation(javax.wsdl.PortType,java.util.Collection,javax.wsdl.Definition)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void initializeOperation(org.apache.cxf.service.Service,org.apache.cxf.aegis.type.TypeMapping,org.apache.cxf.service.model.OperationInfo,java.util.Set)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void initializeOperationTypes(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean:org.apache.cxf.service.model.FaultInfo getFaultInfo(org.apache.cxf.service.model.OperationInfo,java.lang.Class)",
            "org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean:void buildWSAActions(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.jaxws.interceptors.WebFaultOutInterceptor:org.apache.cxf.service.model.MessagePartInfo getFaultMessagePart(javax.xml.namespace.QName,org.apache.cxf.service.model.OperationInfo)"
        ]
    },
    "org.apache.cxf.common.util.ReflectionInvokationHandler$WrapperIterator:java.lang.Object next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.MapNamespaceContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.helpers.WSDLHelper:javax.wsdl.BindingOperation getBindingOperation(javax.wsdl.Definition,java.lang.String)",
            "org.apache.cxf.helpers.WSDLHelper:javax.wsdl.BindingOperation getBindingOperation(javax.wsdl.Binding,java.lang.String)",
            "org.apache.cxf.helpers.WSDLHelper:java.util.List getPortTypes(javax.wsdl.Definition)",
            "org.apache.cxf.helpers.WSDLHelper:java.util.List getInMessageParts(javax.wsdl.Operation)",
            "org.apache.cxf.helpers.WSDLHelper:java.util.List getOutMessageParts(javax.wsdl.Operation)",
            "org.apache.cxf.helpers.WSDLHelper:javax.wsdl.Binding getBinding(javax.wsdl.BindingOperation,javax.wsdl.Definition)",
            "org.apache.cxf.helpers.XMLUtils:org.w3c.dom.Element fetchElementByNameAttribute(org.w3c.dom.Element,java.lang.String,java.lang.String)",
            "org.apache.cxf.common.util.SortedArraySet:boolean addAll(java.util.Collection)",
            "org.apache.cxf.common.util.SortedArraySet:boolean containsAll(java.util.Collection)",
            "org.apache.cxf.common.util.SortedArraySet:boolean removeAll(java.util.Collection)",
            "org.apache.cxf.common.util.SortedArraySet:boolean retainAll(java.util.Collection)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.util.Set entrySet()",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.util.Set keySet()",
            "org.apache.cxf.common.util.ReflectionInvokationHandler$WrapperIterator:java.lang.Object next()",
            "org.apache.cxf.common.util.StringUtils:java.util.List getParts(java.lang.String,java.lang.String)",
            "org.apache.cxf.common.util.StringUtils:java.lang.String getFirstNotEmpty(java.lang.String,java.lang.String)",
            "org.apache.cxf.common.util.StringUtils:java.lang.String getFirstNotEmpty(java.util.List)",
            "org.apache.cxf.common.util.ReflectionUtil:java.util.List getPackagesFromJar(java.io.File)",
            "org.apache.cxf.common.util.CacheMap:void updateMainDataMap()",
            "org.apache.cxf.common.util.CacheMap:void putAll(java.util.Map)",
            "org.apache.cxf.common.util.AbstractTwoStageCache:boolean recycle(java.lang.Object)",
            "org.apache.cxf.common.util.CollectionUtils:java.util.Collection diff(java.util.Collection,java.util.Collection)",
            "org.apache.cxf.common.util.CollectionUtils:boolean isEmpty(java.util.Collection)",
            "org.apache.cxf.common.util.TwoStageMap:void putAll(java.util.Map)",
            "org.apache.cxf.common.injection.ResourceInjector:void invokePostConstruct()",
            "org.apache.cxf.common.injection.ResourceInjector:void invokePreDestroy()",
            "org.apache.cxf.common.annotation.AnnotationProcessor:void processMethods(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)",
            "org.apache.cxf.common.annotation.AnnotationProcessor:void processFields(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)",
            "org.apache.cxf.common.annotation.AnnotationProcessor:void processClass(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)",
            "org.apache.cxf.resource.DefaultResourceManager:java.lang.Object findResource(java.lang.String,java.lang.Class,boolean,java.util.List)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.util.Set entrySet()",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.util.Collection values()",
            "org.apache.cxf.configuration.spring.SpringBeanMap:void processBeans(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.configuration.spring.SpringBeanQNameMap:void processBeans(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void initWildcardDefinitionMap()",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureBean(java.lang.String,java.lang.Object,boolean)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureWithWildCard(java.lang.String,java.lang.Object)",
            "org.apache.cxf.configuration.jsse.spring.TLSParameterJaxBUtils:java.security.KeyStore createTrustStore(java.io.InputStream)",
            "org.apache.cxf.jaxb.JAXBUtils:java.lang.String makeConventionalIdentifier(java.util.List,org.apache.cxf.jaxb.JAXBUtils$IdentifierType)",
            "org.apache.cxf.jaxb.JAXBDataBinding:void initialize(org.apache.cxf.service.Service)",
            "org.apache.cxf.jaxb.JAXBDataBinding:org.apache.cxf.jaxb.JAXBDataBinding$CachedContextAndSchemas createJAXBContextAndSchemas(java.util.Set,java.lang.String)",
            "org.apache.cxf.jaxb.JAXBDataBinding:void scanPackages(java.util.Set)",
            "org.apache.cxf.jaxb.JAXBSchemaInitializer:javax.xml.namespace.QName getTypeName(org.apache.cxf.jaxb.JAXBBeanInfo)",
            "org.apache.cxf.jaxb.JAXBSchemaInitializer:void end(org.apache.cxf.service.model.FaultInfo)",
            "org.apache.cxf.jaxb.JAXBSchemaInitializer:void buildExceptionType(org.apache.cxf.service.model.MessagePartInfo,java.lang.Class)",
            "org.apache.cxf.jaxb.JAXBSchemaInitializer:void addElement(org.apache.ws.commons.schema.XmlSchemaSequence,org.apache.cxf.jaxb.JAXBBeanInfo,javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.jaxb.JAXBSchemaInitializer:boolean isExistSchemaElement(org.apache.ws.commons.schema.XmlSchema,javax.xml.namespace.QName)",
            "org.apache.cxf.jaxb.io.DataWriterImpl:javax.xml.bind.Marshaller createMarshaller(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.jaxb.io.DataReaderImpl:javax.xml.bind.Unmarshaller createUnmarshaller()",
            "org.apache.cxf.management.utils.ManagementConsole:void listAllManagedEndpoint()",
            "org.apache.cxf.management.utils.ManagementConsole:void invokeEndpoint(java.lang.String)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElementEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.message.MessageUtils:boolean isDOMPresent(org.apache.cxf.message.Message)",
            "org.apache.cxf.message.MessageImpl:void copyContent(org.apache.cxf.message.Message,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:org.apache.cxf.service.model.BindingOperationInfo findAnyOp(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.util.Map keepInOrder(java.util.Map,org.apache.cxf.service.model.OperationInfo,java.util.List)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:org.apache.cxf.message.MessageContentsList getParameters(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.util.Map getQueries(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.WrappedInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.BareInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.ClientFaultConverter:void processFaultDetail(org.apache.cxf.interceptor.Fault,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:org.apache.cxf.service.model.MessagePartInfo findMessagePart(org.apache.cxf.message.Exchange,java.util.Collection,javax.xml.namespace.QName,boolean,int,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.FaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.FaultOutInterceptor:org.apache.cxf.service.model.FaultInfo getFaultForClass(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Class)",
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:void writeParts(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.message.MessageContentsList,java.util.List)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void getPara(org.apache.cxf.staxutils.DepthXMLStreamReader,org.apache.cxf.databinding.DataReader,org.apache.cxf.message.MessageContentsList,java.util.Iterator,org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.ConduitInitiatorManagerImpl:org.apache.cxf.transport.ConduitInitiator getConduitInitiatorForUri(java.lang.String)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updateDoc(org.w3c.dom.Document,java.lang.String,java.util.Map,java.util.Map)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updateDefinition(javax.wsdl.Definition,java.util.Map,java.util.Map,java.lang.String,org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updatePublishedEndpointUrl(java.lang.String,javax.wsdl.Definition,javax.xml.namespace.QName)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void setSoapAddressLocationOn(javax.wsdl.Port,java.lang.String)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updateSchemaImports(javax.wsdl.extensions.schema.Schema,java.util.Map,java.lang.String)",
            "org.apache.cxf.transport.http.Cookie:void handleSetCookie(java.util.Map,java.util.List)",
            "org.apache.cxf.transport.http.AbstractHTTPTransportFactory:void registerWithBindingManager()",
            "org.apache.cxf.transport.http.AbstractHTTPTransportFactory:org.apache.cxf.service.model.EndpointInfo createEndpointInfo(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.BindingInfo,javax.wsdl.Port)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPClientPolicy getClient(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPClientPolicy)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPServerPolicy getServer(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPServerPolicy)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPClientPolicy getClient(org.apache.cxf.ws.policy.PolicyEngine,org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.transport.Conduit)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPServerPolicy getServer(org.apache.cxf.ws.policy.PolicyEngine,org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.transport.Destination)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:void assertClientPolicy(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPClientPolicy)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:void assertServerPolicy(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPServerPolicy)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPClientPolicy getClient(java.util.Collection)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPServerPolicy getServer(java.util.Collection)",
            "org.apache.cxf.transport.http.HTTPConduit:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:void transferProtocolHeadersToURLConnection(org.apache.cxf.message.Message,java.net.URLConnection)",
            "org.apache.cxf.transport.http.HTTPConduit:void logProtocolHeaders(java.util.logging.Level,org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:java.lang.String extractAuthorizationRealm(java.util.Map)",
            "org.apache.cxf.transport.http.HTTPConduit:java.lang.String extractLocation(java.util.Map)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void copyResponseHeaders(org.apache.cxf.message.Message,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponseInternal()",
            "org.apache.cxf.transport.http.gzip.GZIPOutInterceptor:org.apache.cxf.transport.http.gzip.GZIPOutInterceptor$UseGzip gzipPermitted(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.gzip.GZIPInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.AbstractMultiplexDestination:java.lang.String extractStringElementFromAny(javax.xml.namespace.QName,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.transport.DestinationFactoryManagerImpl:org.apache.cxf.transport.DestinationFactory getDestinationFactoryForUri(java.lang.String)",
            "org.apache.cxf.transport.servlet.ServletController:void updateDests(javax.servlet.http.HttpServletRequest)",
            "org.apache.cxf.transport.servlet.ServletController:void invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.servlet.ServletController:org.apache.cxf.transport.servlet.ServletDestination checkRestfulRequest(javax.servlet.http.HttpServletRequest)",
            "org.apache.cxf.transport.servlet.ServletController:void generateServiceList(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.servlet.ServletController:void generateUnformattedServiceList(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.servlet.ServletTransportFactory:void register()",
            "org.apache.cxf.transport.servlet.AbstractCXFServlet:void replaceDestinationFactory()",
            "org.apache.cxf.transport.https.CertificateHostnameVerifier$Certificates:java.lang.String[] getDNSSubjectAlts(java.security.cert.X509Certificate)",
            "org.apache.cxf.transport.https.SSLUtils:java.util.List compileRegexPatterns(java.util.List,boolean,java.util.logging.Logger)",
            "org.apache.cxf.transport.https.SSLUtils:boolean matchesOneOf(java.lang.String,java.util.List)",
            "org.apache.cxf.transport.https.CertificateHostnameVerifier$AbstractVerifier:void check(java.lang.String[],java.lang.String[],java.lang.String[],boolean,boolean)",
            "org.apache.cxf.transport.http_jetty.spring.JettySpringTypesFactory:java.util.Map toThreadingParameters(java.util.List)",
            "org.apache.cxf.transport.http_jetty.spring.JettySpringTypesFactory:java.util.Map toTLSServerParamenters(java.util.List)",
            "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineFactoryBeanDefinitionParser:java.util.List getRequiredElementsList(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,javax.xml.namespace.QName,org.springframework.beans.factory.support.BeanDefinitionBuilder)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void doService(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine:void addServant(java.net.URL,org.apache.cxf.transport.http_jetty.JettyHTTPHandler)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPTransportFactory:void finalizeConfig()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void setEnginesList(java.util.List)",
            "org.apache.cxf.transport.jms.JMSUtils:void addProtocolHeaders(javax.jms.Message,java.util.Map)",
            "org.apache.cxf.feature.AbstractFeature:java.lang.Object getActive(java.util.List,java.lang.Class)",
            "org.apache.cxf.endpoint.ClientLifeCycleManagerImpl:void clientCreated(org.apache.cxf.endpoint.Client)",
            "org.apache.cxf.endpoint.ClientLifeCycleManagerImpl:void clientDestroyed(org.apache.cxf.endpoint.Client)",
            "org.apache.cxf.endpoint.ServerLifeCycleManagerImpl:void startServer(org.apache.cxf.endpoint.Server)",
            "org.apache.cxf.endpoint.ServerLifeCycleManagerImpl:void stopServer(org.apache.cxf.endpoint.Server)",
            "org.apache.cxf.endpoint.EndpointResolverRegistryImpl:org.apache.cxf.ws.addressing.EndpointReferenceType resolve(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.endpoint.EndpointResolverRegistryImpl:org.apache.cxf.ws.addressing.EndpointReferenceType renew(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.endpoint.EndpointResolverRegistryImpl:org.apache.cxf.ws.addressing.EndpointReferenceType mint(javax.xml.namespace.QName)",
            "org.apache.cxf.endpoint.EndpointResolverRegistryImpl:org.apache.cxf.ws.addressing.EndpointReferenceType mint(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.endpoint.ServiceContractResolverRegistryImpl:java.net.URI getContractLocation(javax.xml.namespace.QName)",
            "org.apache.cxf.endpoint.ClientImpl:org.apache.cxf.service.model.EndpointInfo findEndpoint(org.apache.cxf.service.Service,javax.xml.namespace.QName)",
            "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:org.apache.cxf.endpoint.Client createClient(java.lang.String,javax.xml.namespace.QName,java.lang.ClassLoader,javax.xml.namespace.QName,java.util.List)",
            "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:void addBindingFiles(java.util.List,org.apache.cxf.jaxb.JAXBUtils$SchemaCompiler)",
            "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:boolean isValidPackage(org.apache.cxf.jaxb.JAXBUtils$JPackage)",
            "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:void outputDebug(org.apache.cxf.jaxb.JAXBUtils$JCodeModel)",
            "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:void addSchemas(java.lang.String,java.util.Collection,org.apache.cxf.jaxb.JAXBUtils$SchemaCompiler)",
            "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:boolean compileJavaSrc(java.lang.String,java.util.List,java.lang.String)",
            "org.apache.cxf.endpoint.dynamic.TypeClassInitializer:void begin(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.ws.addressing.ContextUtils:java.lang.String getActionFromServiceModel(org.apache.cxf.message.Message,java.lang.Exception)",
            "org.apache.cxf.ws.addressing.MAPAggregator:void assertAssertion(org.apache.cxf.ws.policy.AssertionInfoMap,javax.xml.namespace.QName)",
            "org.apache.cxf.ws.addressing.MAPAggregator:boolean hasUsingAddressing(java.util.List)",
            "org.apache.cxf.ws.addressing.MAPAggregator:java.lang.String getActionFromFaultMessage(org.apache.cxf.service.model.OperationInfo,java.lang.String)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void encodeReferenceParameters(org.apache.cxf.ws.addressing.AddressingProperties,org.w3c.dom.Element,javax.xml.bind.Marshaller)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void addMustUnderstandAttribute(org.w3c.dom.Element,javax.xml.namespace.QName,org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.addressing.AddressingPropertiesImpl)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:org.apache.cxf.ws.addressing.AddressingProperties unmarshalMAPs(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void decodeReferenceParameters(java.util.Set,org.apache.cxf.ws.addressing.AddressingPropertiesImpl,javax.xml.bind.Unmarshaller)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void discardMAPs(java.util.List,org.apache.cxf.ws.addressing.AddressingProperties)",
            "org.apache.cxf.ws.policy.builder.primitive.NestedPrimitiveAssertion:org.apache.neethi.PolicyComponent normalize()",
            "org.apache.cxf.ws.policy.builder.primitive.NestedPrimitiveAssertion:boolean isAsserted(org.apache.cxf.ws.policy.AssertionInfoMap)",
            "org.apache.cxf.ws.policy.builder.primitive.NestedPrimitiveAssertion:boolean isPolicyAsserted(org.apache.neethi.PolicyOperator,org.apache.cxf.ws.policy.AssertionInfoMap)",
            "org.apache.cxf.ws.policy.builder.primitive.PrimitiveAssertion:boolean isAsserted(org.apache.cxf.ws.policy.AssertionInfoMap)",
            "org.apache.cxf.ws.policy.util.PolicyComparator:boolean compare(java.util.List,java.util.List)",
            "org.apache.cxf.ws.policy.AssertionInfoMap:void <init>(java.util.Collection)",
            "org.apache.cxf.ws.policy.AssertionInfoMap:void putAssertionInfo(org.apache.cxf.ws.policy.PolicyAssertion)",
            "org.apache.cxf.ws.policy.AssertionInfoMap:boolean supportsAlternative(org.apache.cxf.ws.policy.PolicyAssertion,java.util.List)",
            "org.apache.cxf.ws.policy.AssertionInfoMap:boolean supportsAlternative(java.util.Collection,java.util.List)",
            "org.apache.cxf.ws.policy.AssertionInfoMap:void checkEffectivePolicy(org.apache.neethi.Policy)",
            "org.apache.cxf.ws.policy.AssertionInfoMap:void check()",
            "org.apache.cxf.ws.policy.AssertionInfoMap:void getAssertions(org.apache.neethi.PolicyOperator,java.util.Collection)",
            "org.apache.cxf.ws.policy.Intersector:boolean compatibleAlternatives(java.util.Collection,java.util.Collection)",
            "org.apache.cxf.ws.policy.Intersector:boolean compatiblePolicies(org.apache.neethi.Policy,org.apache.neethi.Policy)",
            "org.apache.cxf.ws.policy.Intersector:org.apache.neethi.Policy intersect(org.apache.neethi.Policy,org.apache.neethi.Policy)",
            "org.apache.cxf.ws.policy.Intersector:org.apache.cxf.ws.policy.PolicyAssertion findCompatibleAssertion(org.apache.cxf.ws.policy.PolicyAssertion,java.util.Collection)",
            "org.apache.cxf.ws.policy.EndpointPolicyImpl:java.util.Collection getSupportedAlternatives()",
            "org.apache.cxf.ws.policy.EndpointPolicyImpl:void initializeVocabulary()",
            "org.apache.cxf.ws.policy.EndpointPolicyImpl:java.util.Collection getSupportedAlternatives(org.apache.neethi.Policy)",
            "org.apache.cxf.ws.policy.EndpointPolicyImpl:void initializeInterceptors(org.apache.cxf.ws.policy.PolicyInterceptorProviderRegistry,java.util.Set,org.apache.cxf.ws.policy.PolicyAssertion,boolean)",
            "org.apache.cxf.ws.policy.EndpointPolicyImpl:void initializeInterceptors()",
            "org.apache.cxf.ws.policy.EndpointPolicyImpl:void checkExactlyOnes()",
            "org.apache.cxf.ws.policy.ServerPolicyOutFaultInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.policy.WSPolicyFeature:org.apache.neethi.Policy initializeEndpointPolicy(org.apache.cxf.endpoint.Endpoint,org.apache.cxf.Bus)",
            "org.apache.cxf.ws.policy.PolicyInInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.policy.PolicyOutInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.policy.PolicyInterceptorProviderRegistryImpl:void register(org.apache.cxf.ws.policy.PolicyInterceptorProvider)",
            "org.apache.cxf.ws.policy.PolicyInterceptorProviderRegistryImpl:java.util.List getInterceptors(java.util.Collection,boolean,boolean)",
            "org.apache.cxf.ws.policy.selector.MinimalAlternativeSelector:java.util.Collection selectAlternative(org.apache.neethi.Policy,org.apache.cxf.ws.policy.PolicyEngine,org.apache.cxf.ws.policy.Assertor)",
            "org.apache.cxf.ws.policy.selector.FirstAlternativeSelector:java.util.Collection selectAlternative(org.apache.neethi.Policy,org.apache.cxf.ws.policy.PolicyEngine,org.apache.cxf.ws.policy.Assertor)",
            "org.apache.cxf.ws.policy.selector.MaximalAlternativeSelector:java.util.Collection selectAlternative(org.apache.neethi.Policy,org.apache.cxf.ws.policy.PolicyEngine,org.apache.cxf.ws.policy.Assertor)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:org.apache.neethi.Policy getAggregatedServicePolicy(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:org.apache.neethi.Policy getAggregatedEndpointPolicy(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:org.apache.neethi.Policy getAggregatedOperationPolicy(org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:org.apache.neethi.Policy getAggregatedMessagePolicy(org.apache.cxf.service.model.BindingMessageInfo)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:org.apache.neethi.Policy getAggregatedFaultPolicy(org.apache.cxf.service.model.BindingFaultInfo)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:java.util.Collection getAssertions(org.apache.cxf.ws.policy.EffectivePolicy,boolean)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:void addAssertions(org.apache.neethi.PolicyComponent,boolean,java.util.Collection)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:java.util.Set getVocabulary(org.apache.neethi.PolicyComponent,boolean)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:boolean supportsAlternative(java.util.Collection,org.apache.cxf.ws.policy.Assertor)",
            "org.apache.cxf.ws.policy.PolicyUtils:boolean contains(java.util.Collection,org.apache.neethi.Assertion)",
            "org.apache.cxf.ws.policy.PolicyUtils:boolean contains(java.util.Collection,java.util.Collection)",
            "org.apache.cxf.ws.policy.PolicyUtils:void printPolicyComponent(org.apache.neethi.PolicyComponent,java.lang.StringBuffer,int)",
            "org.apache.cxf.ws.policy.mtom.MTOMPolicyInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.policy.EffectivePolicyImpl:void initialiseInterceptors(org.apache.cxf.ws.policy.PolicyEngineImpl,boolean)",
            "org.apache.cxf.ws.policy.EffectivePolicyImpl:java.util.Collection getSupportedAlternatives(org.apache.cxf.ws.policy.PolicyEngineImpl,org.apache.neethi.Policy)",
            "org.apache.cxf.ws.policy.EffectivePolicyImpl:void initialiseInterceptors(org.apache.cxf.ws.policy.PolicyInterceptorProviderRegistry,org.apache.cxf.ws.policy.PolicyEngineImpl,java.util.Set,org.apache.cxf.ws.policy.PolicyAssertion,boolean)",
            "org.apache.cxf.ws.policy.attachment.wsdl11.Wsdl11AttachmentPolicyProvider$ExtensibleInfo:java.lang.Object getExtensor(java.lang.Class)",
            "org.apache.cxf.ws.policy.attachment.wsdl11.Wsdl11AttachmentPolicyProvider$ExtensibleInfo:java.util.List getExtensors(java.lang.Class)",
            "org.apache.cxf.ws.policy.attachment.wsdl11.Wsdl11AttachmentPolicyProvider:org.apache.neethi.Policy getElementPolicy(org.apache.cxf.service.model.Extensible,boolean,org.apache.cxf.service.model.DescriptionInfo)",
            "org.apache.cxf.ws.policy.attachment.reference.LocalServiceModelReferenceResolver:org.apache.neethi.Policy resolveReference(java.lang.String)",
            "org.apache.cxf.ws.policy.attachment.reference.RemoteReferenceResolver:org.apache.neethi.Policy resolveReference(java.lang.String)",
            "org.apache.cxf.ws.policy.attachment.external.PolicyAttachment:boolean appliesTo(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.ws.policy.attachment.external.PolicyAttachment:boolean appliesTo(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.ws.policy.attachment.external.PolicyAttachment:boolean appliesTo(org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.ws.policy.attachment.external.PolicyAttachment:boolean appliesTo(org.apache.cxf.service.model.BindingMessageInfo)",
            "org.apache.cxf.ws.policy.attachment.external.PolicyAttachment:boolean appliesTo(org.apache.cxf.service.model.BindingFaultInfo)",
            "org.apache.cxf.ws.policy.attachment.external.ExternalAttachmentProvider:org.apache.neethi.Policy getEffectivePolicy(org.apache.cxf.service.model.BindingFaultInfo)",
            "org.apache.cxf.ws.policy.attachment.external.ExternalAttachmentProvider:org.apache.neethi.Policy getEffectivePolicy(org.apache.cxf.service.model.BindingMessageInfo)",
            "org.apache.cxf.ws.policy.attachment.external.ExternalAttachmentProvider:org.apache.neethi.Policy getEffectivePolicy(org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.ws.policy.attachment.external.ExternalAttachmentProvider:org.apache.neethi.Policy getEffectivePolicy(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.ws.policy.attachment.external.ExternalAttachmentProvider:org.apache.neethi.Policy getEffectivePolicy(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.ws.policy.attachment.external.ExternalAttachmentProvider:void readDocument()",
            "org.apache.cxf.ws.policy.AssertionBuilderRegistryImpl:void register(org.apache.cxf.ws.policy.AssertionBuilder)",
            "org.apache.cxf.ws.policy.ClientPolicyInFaultInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.policy.AbstractPolicyInterceptor:org.apache.cxf.service.model.BindingFaultInfo getBindingFaultInfo(org.apache.cxf.message.Message,java.lang.Exception,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.ws.security.policy.builders.X509TokenBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.builders.X509TokenBuilder:void processAlternative(java.util.List,org.apache.cxf.ws.security.policy.model.X509Token,org.apache.cxf.ws.security.policy.SPConstants)",
            "org.apache.cxf.ws.security.policy.builders.SupportingTokens12Builder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.builders.SupportingTokens12Builder:void processAlternative(java.util.List,org.apache.cxf.ws.security.policy.model.SupportingToken)",
            "org.apache.cxf.ws.security.policy.builders.InitiatorTokenBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.builders.InitiatorTokenBuilder:void processAlternative(java.util.List,org.apache.cxf.ws.security.policy.model.InitiatorToken)",
            "org.apache.cxf.ws.security.policy.builders.AsymmetricBindingBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.builders.AsymmetricBindingBuilder:void processAlternative(java.util.List,org.apache.cxf.ws.security.policy.model.AsymmetricBinding,org.apache.cxf.ws.security.policy.SPConstants)",
            "org.apache.cxf.ws.security.policy.builders.IssuedTokenBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.builders.IssuedTokenBuilder:void processAlternative(java.util.List,org.apache.cxf.ws.security.policy.model.IssuedToken)",
            "org.apache.cxf.ws.security.policy.builders.ProtectionTokenBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.builders.TransportTokenBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.builders.RecipientTokenBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.builders.RecipientTokenBuilder:void processAlternative(java.util.List,org.apache.cxf.ws.security.policy.model.RecipientToken)",
            "org.apache.cxf.ws.security.policy.builders.SupportingTokensBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.builders.SupportingTokensBuilder:void processAlternative(java.util.List,org.apache.cxf.ws.security.policy.model.SupportingToken)",
            "org.apache.cxf.ws.security.policy.builders.SymmetricBindingBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.builders.SymmetricBindingBuilder:void processAlternatives(java.util.List,org.apache.cxf.ws.security.policy.model.SymmetricBinding,org.apache.cxf.ws.security.policy.SPConstants)",
            "org.apache.cxf.ws.security.policy.model.RequiredParts:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.ContentEncryptedElements:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SignedEncryptedElements:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.RequiredElements:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SupportingToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SupportingToken:org.apache.neethi.Policy getPolicy()",
            "org.apache.cxf.ws.security.policy.model.SignedEncryptedParts:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.AbstractSecurityAssertion:boolean isAsserted(org.apache.cxf.ws.policy.AssertionInfoMap)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor$SecureConversationTokenFinderInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor$SecureConversationCancelInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.policy.interceptors.HttpsTokenInterceptorProvider$HttpsTokenInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.policy.interceptors.HttpsTokenInterceptorProvider$HttpsTokenInInterceptor:void assertHttps(java.util.Collection,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationOutInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor:org.apache.cxf.ws.security.policy.model.Binding getBinding(org.apache.cxf.ws.policy.AssertionInfoMap)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor:void recalcEffectivePolicy(org.apache.cxf.binding.soap.SoapMessage,java.lang.String,org.apache.neethi.Policy)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor:void unmapSecurityProps(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.policy.interceptors.IssuedTokenInterceptorProvider$IssuedTokenOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.policy.interceptors.IssuedTokenInterceptorProvider$IssuedTokenOutInterceptor:org.apache.cxf.ws.security.policy.model.Trust10 getTrust10(org.apache.cxf.ws.policy.AssertionInfoMap)",
            "org.apache.cxf.ws.security.policy.interceptors.IssuedTokenInterceptorProvider$IssuedTokenOutInterceptor:org.apache.cxf.ws.security.policy.model.Trust13 getTrust13(org.apache.cxf.ws.policy.AssertionInfoMap)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationTokenInterceptorProvider:org.apache.cxf.ws.security.policy.model.Trust10 getTrust10(org.apache.cxf.ws.policy.AssertionInfoMap)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationTokenInterceptorProvider:org.apache.cxf.ws.security.policy.model.Trust13 getTrust13(org.apache.cxf.ws.policy.AssertionInfoMap)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationTokenInterceptorProvider:org.apache.cxf.ws.policy.PolicyAssertion getAddressingPolicy(org.apache.cxf.ws.policy.AssertionInfoMap,boolean)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationTokenInterceptorProvider:void mapSecurityProps(org.apache.cxf.message.Message,java.util.Map)",
            "org.apache.cxf.ws.security.policy.interceptors.HttpsTokenInterceptorProvider$HttpsTokenOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.policy.interceptors.HttpsTokenInterceptorProvider$HttpsTokenOutInterceptor:void assertHttps(java.util.Collection,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.policy.interceptors.IssuedTokenInterceptorProvider$IssuedTokenInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.trust.STSClient:void setPolicy(org.apache.neethi.Policy)",
            "org.apache.cxf.ws.security.trust.STSClient:org.apache.cxf.service.model.BindingOperationInfo findOperation(java.lang.String)",
            "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:org.apache.cxf.ws.security.tokenstore.SecurityToken getToken(java.lang.String)",
            "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:java.util.Collection getTokens(org.apache.cxf.ws.security.tokenstore.SecurityToken$State)",
            "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:void processTokenExpiry()",
            "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:void removeCancelledTokens()",
            "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:void removeExpiredTokens()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.TransportBindingHandler:void addUsernameTokens(org.apache.cxf.ws.security.policy.model.SupportingToken)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.TransportBindingHandler:void handleBinding()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.TransportBindingHandler:byte[] doX509TokenSignature(org.apache.cxf.ws.security.policy.model.Token,org.apache.cxf.ws.security.policy.model.SignedEncryptedParts,org.apache.cxf.ws.security.policy.model.TokenWrapper)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.TransportBindingHandler:byte[] doIssuedTokenSignature(org.apache.cxf.ws.security.policy.model.Token,org.apache.cxf.ws.security.policy.model.SignedEncryptedParts,org.apache.cxf.ws.security.policy.model.TokenWrapper,org.apache.cxf.ws.security.tokenstore.SecurityToken)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AsymmetricBindingHandler:void doSignBeforeEncrypt()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AsymmetricBindingHandler:void doEncryptBeforeSign()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AsymmetricBindingHandler:void assertUnusedTokens(org.apache.cxf.ws.security.policy.model.TokenWrapper)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void policyNotAsserted(org.apache.cxf.ws.policy.PolicyAssertion,java.lang.Exception)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void policyNotAsserted(org.apache.cxf.ws.policy.PolicyAssertion,java.lang.String)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void policyAsserted(org.apache.cxf.ws.policy.PolicyAssertion)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void policyAsserted(javax.xml.namespace.QName)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:java.util.Collection findAndAssertPolicy(javax.xml.namespace.QName)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:org.apache.ws.security.message.WSSecTimestamp createTimestamp()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:org.apache.ws.security.message.WSSecTimestamp handleLayout(org.apache.ws.security.message.WSSecTimestamp)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void assertSupportingTokens(java.util.Collection)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:java.util.Map handleSupportingTokens(java.util.Collection,boolean)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:java.util.Map handleSupportingTokens(org.apache.cxf.ws.security.policy.model.SupportingToken,boolean,java.util.Map)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void addSignatureParts(java.util.Map,java.util.List)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:org.apache.ws.security.message.WSSecUsernameToken addUsernameToken(org.apache.cxf.ws.security.policy.model.UsernameToken)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:java.util.Vector getEncryptedParts()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:java.util.Vector getSignedParts()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:java.util.Vector getPartsAndElements(boolean,boolean,java.util.List,java.util.List,java.util.Map)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:org.apache.cxf.ws.security.policy.model.Wss10 getWss10()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void doEndorsedSignatures(java.util.Map,boolean,boolean)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void handleEncryptedSignedHeaders(java.util.Vector,java.util.Vector)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.SymmetricBindingHandler:void doEncryptBeforeSign()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.SymmetricBindingHandler:void doSignBeforeEncrypt()",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JOutInterceptor$PolicyBasedWSS4JOutInterceptorInternal:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:void handleWSS11(org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:boolean assertPolicy(org.apache.cxf.ws.policy.AssertionInfoMap,javax.xml.namespace.QName)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:void assertPolicy(org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.ws.policy.PolicyAssertion)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:void notAssertPolicy(org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.ws.policy.PolicyAssertion,java.lang.String)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:java.lang.String checkAsymetricBinding(org.apache.cxf.ws.policy.AssertionInfoMap,java.lang.String,org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:java.lang.String checkSymetricBinding(org.apache.cxf.ws.policy.AssertionInfoMap,java.lang.String,org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:void assertTokens(org.apache.cxf.ws.policy.AssertionInfoMap,javax.xml.namespace.QName,java.util.Collection,org.apache.cxf.binding.soap.SoapMessage,javax.xml.soap.SOAPMessage,java.lang.String)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:void doResults(org.apache.cxf.binding.soap.SoapMessage,java.lang.String,javax.xml.soap.SOAPMessage,java.util.Vector)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:boolean assertSymetricBinding(org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.binding.soap.SoapMessage,javax.xml.soap.SOAPMessage,org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor$Protections,boolean)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:boolean assertAsymetricBinding(org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.binding.soap.SoapMessage,javax.xml.soap.SOAPMessage,org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor$Protections,boolean)",
            "org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor:void doResults(org.apache.cxf.binding.soap.SoapMessage,java.lang.String,javax.xml.soap.SOAPMessage,java.util.Vector)",
            "org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor:org.apache.ws.security.WSSecurityEngine createSecurityEngine(java.util.Map)",
            "org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor$TokenStoreCallbackHandler:void handle(javax.security.auth.callback.Callback[])",
            "org.apache.cxf.ws.rm.AbstractRMInterceptor:void assertReliability(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.Servant:void terminateSequence(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.AbstractSequence:boolean isAcknowledged(java.math.BigInteger)",
            "org.apache.cxf.ws.rm.DestinationSequence:void scheduleDeferredAcknowledgement(long)",
            "org.apache.cxf.ws.rm.policy.PolicyUtils:org.apache.cxf.ws.rm.policy.RMAssertion getRMAssertion(org.apache.cxf.ws.rm.policy.RMAssertion,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.Source:java.util.Collection getAllUnacknowledgedSequences()",
            "org.apache.cxf.ws.rm.RMInInterceptor:void processAcknowledgments(org.apache.cxf.ws.rm.Source,org.apache.cxf.ws.rm.RMProperties)",
            "org.apache.cxf.ws.rm.RMOutInterceptor:void addAcknowledgements(org.apache.cxf.ws.rm.Destination,org.apache.cxf.ws.rm.RMProperties,org.apache.cxf.ws.rm.Identifier,org.apache.cxf.ws.addressing.v200408.AttributedURI)",
            "org.apache.cxf.ws.rm.Destination:void ackRequested(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.RMManager:void shutdown()",
            "org.apache.cxf.ws.rm.RMManager:void recoverReliableEndpoint(org.apache.cxf.endpoint.Endpoint,org.apache.cxf.transport.Conduit)",
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl:void resend(org.apache.cxf.transport.Conduit,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.soap.RMSoapInterceptor:void encode(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.rm.RMProperties)",
            "org.apache.cxf.ws.rm.soap.RMSoapInterceptor:org.apache.cxf.ws.rm.RMProperties unmarshalRMProperties(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.rm.soap.RMSoapInterceptor:void discardRMHeaders(java.util.List)",
            "org.apache.cxf.ws.rm.RMEndpoint:void setPolicies()",
            "org.apache.cxf.ws.rm.RMEndpoint:java.lang.Object getUsingAddressing(java.util.List)",
            "org.apache.cxf.ws.rm.RMEndpoint:void shutdown()",
            "org.apache.cxf.ws.rm.persistence.jdbc.RMTxStore:void removeMessages(org.apache.cxf.ws.rm.Identifier,java.util.Collection,boolean)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void <init>(java.util.SortedSet)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void add(java.util.Collection,boolean)",
            "org.apache.cxf.workqueue.WorkQueueManagerImpl:void shutdown(boolean)",
            "org.apache.cxf.workqueue.WorkQueueManagerImpl:void run()",
            "org.apache.cxf.databinding.AbstractDataBinding:void setNamespaceMap(java.util.Map)",
            "org.apache.cxf.databinding.AbstractDataBinding:void checkNamespaceMap(java.util.Map)",
            "org.apache.cxf.databinding.stax.StaxDataBindingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.databinding.stax.StaxDataBindingFeature:void removeInterceptor(java.util.List,java.lang.String)",
            "org.apache.cxf.wsdl.JAXBExtensionHelper$1:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils$SchemaLSResourceResolver:org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.namespace.QName getServiceName(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:java.lang.String getPortName(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:void setPortName(org.apache.cxf.ws.addressing.EndpointReferenceType,java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.namespace.QName getInterfaceName(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:void setMetadata(org.apache.cxf.ws.addressing.EndpointReferenceType,java.util.List)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.wsdl.Definition getWSDLDefinition(org.apache.cxf.wsdl.WSDLManager,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.validation.Schema createSchema(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.wsdl.Port getPort(org.apache.cxf.wsdl.WSDLManager,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:org.apache.cxf.transport.MultiplexDestination getMatchingMultiplexDestination(javax.xml.namespace.QName,java.lang.String,org.apache.cxf.Bus)",
            "org.apache.cxf.io.CachedOutputStream:void flush()",
            "org.apache.cxf.io.CachedOutputStream:void lockOutputStream()",
            "org.apache.cxf.io.CachedOutputStream:void close()",
            "org.apache.cxf.service.model.BindingOperationInfo:void <init>(org.apache.cxf.service.model.BindingInfo,org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:int getMessagePartIndex(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePartByIndex(int)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePart(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePart(int)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperation(org.apache.cxf.message.Exchange,java.lang.String)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperationForWrapperElement(org.apache.cxf.message.Exchange,javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.SchemaInfo getSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.ServiceModelUtil:java.util.List getOperationInputPartNames(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.EndpointInfo findBestEndpointInfo(javax.xml.namespace.QName,java.util.List)",
            "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.BindingInfo getBinding(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.EndpointInfo getEndpoint(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.ServiceInfo:void initMessagesMap()",
            "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.SchemaInfo getSchema(java.lang.String)",
            "org.apache.cxf.service.model.MessageInfo:java.util.Map getMessagePartsMap()",
            "org.apache.cxf.service.model.MessageInfo:java.util.List getOrderedParts(java.util.List)",
            "org.apache.cxf.service.model.BindingInfo:org.apache.cxf.service.model.BindingOperationInfo buildOperation(javax.xml.namespace.QName,java.lang.String,java.lang.String)",
            "org.apache.cxf.service.model.BindingInfo:org.apache.cxf.service.model.BindingOperationInfo getOperation(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.ServiceImpl:org.apache.cxf.service.model.EndpointInfo getEndpointInfo(javax.xml.namespace.QName)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void fillInSchemaCrossreferences()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createEndpoints()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeServiceConfigurations()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromWSDL(java.lang.String)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromClass()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean hasWrappedMethods(org.apache.cxf.service.model.InterfaceInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void validateServiceModel()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.InterfaceInfo getInterfaceInfo()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeWSDLOperations()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void setFaultClassInfo(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.OperationInfo createOperation(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.InterfaceInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeWrappedSchema(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void checkForElement(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createBareMessage(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.OperationInfo,boolean)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isExistImport(org.apache.ws.commons.schema.XmlSchema,java.lang.String)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.ws.commons.schema.XmlSchemaElement getExistingSchemaElement(org.apache.ws.commons.schema.XmlSchema,javax.xml.namespace.QName)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createWrappedMessageSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.AbstractMessageContainer,org.apache.cxf.service.model.AbstractMessageContainer,org.apache.ws.commons.schema.XmlSchema,javax.xml.namespace.QName)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.SchemaInfo getOrCreateSchema(org.apache.cxf.service.model.ServiceInfo,java.lang.String,boolean)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createInputWrappedMessageParts(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,org.apache.cxf.service.model.MessageInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createOutputWrappedMessageParts(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,org.apache.cxf.service.model.MessageInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getEndpointName(boolean)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getServiceName()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getServiceNamespace()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getInterfaceName()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isValidMethod(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isHolder(java.lang.Class,java.lang.reflect.Type)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.reflect.Type getHolderType(java.lang.Class,java.lang.reflect.Type)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isWrapped(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isOutParam(java.lang.reflect.Method,int)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isInParam(java.lang.reflect.Method,int)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getInputMessageName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName createOutputMessageName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean hasOutMessage(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getFaultName(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.Class,java.lang.Class)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getAction(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isHeader(java.lang.reflect.Method,int)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getOperationName(org.apache.cxf.service.model.InterfaceInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isAsync(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getInPartName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getInParameterName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getOutParameterName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getOutPartName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.Class getResponseWrapper(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getResponseWrapperClassName(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.Class getRequestWrapper(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getRequestWrapperClassName(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isWrapperPartQualified(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isWrapperPartNillable(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:long getWrapperPartMaxOccurs(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:long getWrapperPartMinOccurs(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getWsdlURL()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isWrapped()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getStyle()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isRPC(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.DefaultServiceConfiguration:java.lang.Boolean isOperation(java.lang.reflect.Method)",
            "org.apache.cxf.service.ServiceModelVisitor:void walk()",
            "org.apache.cxf.service.ServiceModelVisitor:void visitOperation(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.binding.AbstractBindingFactory:void registerWithBindingManager()",
            "org.apache.cxf.binding.AbstractBindingFactory:org.apache.cxf.service.model.BindingInfo initializeBindingInfo(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding,org.apache.cxf.service.model.BindingInfo)",
            "org.apache.cxf.binding.AbstractBindingFactory:void copyExtensors(org.apache.cxf.service.model.AbstractPropertiesHolder,javax.wsdl.extensions.ElementExtensible,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:org.apache.cxf.service.model.BindingInfo createBindingInfo(org.apache.cxf.service.model.ServiceInfo,java.lang.String,java.lang.Object)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:void createSoapBinding(org.apache.cxf.binding.soap.model.SoapBindingInfo)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:void setupHeaders(org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.service.model.BindingMessageInfo,org.apache.cxf.service.model.BindingMessageInfo,org.apache.cxf.service.model.MessageInfo,org.apache.cxf.binding.soap.SoapBindingConfiguration)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:org.apache.cxf.binding.Binding createBinding(org.apache.cxf.service.model.BindingInfo)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:void addOutOfBandParts(org.apache.cxf.service.model.BindingOperationInfo,javax.wsdl.Message,org.apache.cxf.common.xmlschema.SchemaCollection,boolean,java.lang.String)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:void buildMessage(org.apache.cxf.service.model.MessageInfo,javax.wsdl.Message,org.apache.cxf.common.xmlschema.SchemaCollection,int,java.lang.String)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:org.apache.cxf.service.model.BindingInfo createBindingInfo(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding,java.lang.String)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:void initializeMessage(org.apache.cxf.binding.soap.model.SoapBindingInfo,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.service.model.BindingMessageInfo)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:java.util.List handleMimePart(javax.wsdl.extensions.mime.MIMEPart,java.util.List,org.apache.cxf.service.model.MessageInfo,org.apache.cxf.service.model.BindingMessageInfo,java.util.List,java.util.List)",
            "org.apache.cxf.binding.soap.interceptor.ReadHeadersInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.Soap12FaultOutInterceptor$Soap12FaultOutInterceptorInternal:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.RPCOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.soap.interceptor.SoapActionInInterceptor:void getAndSetOperation(org.apache.cxf.binding.soap.SoapMessage,java.lang.String)",
            "org.apache.cxf.binding.soap.interceptor.SoapHeaderOutFilterInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.RPCInInterceptor:org.apache.cxf.service.model.BindingOperationInfo getOperation(org.apache.cxf.message.Message,javax.xml.namespace.QName)",
            "org.apache.cxf.binding.soap.interceptor.RPCInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor:void writeSoapEnvelopeStart(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor:boolean handleHeaderPart(boolean,org.apache.cxf.binding.soap.SoapMessage,java.lang.String)",
            "org.apache.cxf.binding.soap.interceptor.MustUnderstandInterceptor:void initServiceSideInfo(java.util.Set,org.apache.cxf.binding.soap.SoapMessage,java.util.Set)",
            "org.apache.cxf.binding.soap.interceptor.MustUnderstandInterceptor:void buildMustUnderstandHeaders(java.util.Set,org.apache.cxf.binding.soap.SoapMessage,java.util.Set,java.util.Set)",
            "org.apache.cxf.binding.soap.interceptor.MustUnderstandInterceptor:void checkUnderstand(java.util.Set,java.util.Set,java.util.Set)",
            "org.apache.cxf.binding.soap.interceptor.Soap11FaultOutInterceptor$Soap11FaultOutInterceptorInternal:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.EndpointSelectionInterceptor:org.apache.cxf.endpoint.Endpoint selectEndpoint(org.apache.cxf.message.Message,java.util.Set)",
            "org.apache.cxf.binding.soap.interceptor.MustUnderstandInterceptor$UltimateReceiverMustUnderstandInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.SoapHeaderInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.soap.HeaderUtil:java.util.Set getHeaderQNames(org.apache.cxf.service.model.BindingMessageInfo)",
            "org.apache.cxf.binding.soap.SoapTransportFactory:org.apache.cxf.service.model.EndpointInfo createEndpointInfo(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.BindingInfo,javax.wsdl.Port)",
            "org.apache.cxf.binding.soap.SoapTransportFactory:void registerWithBindingManager()",
            "org.apache.cxf.binding.soap.SoapMessage:boolean hasHeader(javax.xml.namespace.QName)",
            "org.apache.cxf.binding.soap.SoapMessage:org.apache.cxf.headers.Header getHeader(javax.xml.namespace.QName)",
            "org.apache.cxf.binding.soap.saaj.SAAJInInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.saaj.SAAJOutInterceptor$SAAJOutEndingInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.model.SoapBindingInfo:org.apache.cxf.service.model.OperationInfo getOperationByAction(java.lang.String)",
            "org.apache.cxf.binding.xml.interceptor.XMLMessageInInterceptor:org.apache.cxf.service.model.BindingOperationInfo getBindingOperationInfo(boolean,javax.xml.namespace.QName,org.apache.cxf.service.model.BindingInfo,javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.binding.xml.XMLFormatValidator:boolean checkXMLBindingFormat()",
            "org.apache.cxf.binding.xml.XMLFormatValidator:boolean checkXMLFormat(org.apache.cxf.service.model.BindingInfo)",
            "org.apache.cxf.binding.xml.XMLFormatValidator:boolean findXMLFormatRootNode(java.util.Iterator,org.apache.cxf.service.model.BindingOperationInfo,java.lang.String)",
            "org.apache.cxf.binding.xml.XMLBindingFactory:org.apache.cxf.service.model.BindingInfo createBindingInfo(org.apache.cxf.service.model.ServiceInfo,java.lang.String,java.lang.Object)",
            "org.apache.cxf.clustering.AbstractStaticFailoverStrategy:java.util.List getAlternateEndpoints(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.tools.common.Tag:java.lang.String formatAttribute(org.apache.cxf.tools.common.Tag)",
            "org.apache.cxf.tools.common.Tag:java.lang.String formatTag(org.apache.cxf.tools.common.Tag,int)",
            "org.apache.cxf.tools.common.Tag:boolean equals(java.lang.Object)",
            "org.apache.cxf.tools.common.ClassUtils:void compile(org.apache.cxf.tools.common.ToolContext)",
            "org.apache.cxf.tools.common.ToolContext:void addParameters(java.util.Map)",
            "org.apache.cxf.tools.common.VelocityGenerator:void doWrite(java.lang.String,java.io.Writer)",
            "org.apache.cxf.tools.common.toolspec.ToolSpec:boolean isValidInputStream(java.lang.String)",
            "org.apache.cxf.tools.common.toolspec.ToolSpec:java.util.List getInstreamIds()",
            "org.apache.cxf.tools.common.toolspec.ToolSpec:java.util.List getOutstreamIds()",
            "org.apache.cxf.tools.common.toolspec.ToolSpec:java.lang.String getStreamRefName(java.lang.String)",
            "org.apache.cxf.tools.common.toolspec.parser.CommandDocument:java.lang.String[] getParameters(java.lang.String)",
            "org.apache.cxf.tools.common.toolspec.parser.CommandDocument:java.lang.String[] getParameterNames()",
            "org.apache.cxf.tools.common.toolspec.parser.Form:void <init>(org.w3c.dom.Element)",
            "org.apache.cxf.tools.common.toolspec.parser.Option:boolean accept(org.apache.cxf.tools.common.toolspec.parser.TokenInputStream,org.w3c.dom.Element,org.apache.cxf.tools.common.toolspec.parser.ErrorVisitor)",
            "org.apache.cxf.tools.common.toolspec.parser.OptionGroup:void <init>(org.w3c.dom.Element)",
            "org.apache.cxf.tools.common.toolspec.parser.OptionGroup:boolean accept(org.apache.cxf.tools.common.toolspec.parser.TokenInputStream,org.w3c.dom.Element,org.apache.cxf.tools.common.toolspec.parser.ErrorVisitor)",
            "org.apache.cxf.tools.common.toolspec.parser.OptionGroup:boolean isSatisfied(org.apache.cxf.tools.common.toolspec.parser.ErrorVisitor)",
            "org.apache.cxf.tools.common.toolspec.parser.ErrorVisitor:java.lang.String toString()",
            "org.apache.cxf.tools.common.toolspec.parser.CommandLineParser:org.apache.cxf.tools.common.toolspec.parser.CommandDocument parseArguments(java.lang.String[])",
            "org.apache.cxf.tools.common.ProcessorTestBase:boolean assertXmlEquals(java.io.File,java.io.File,java.util.List)",
            "org.apache.cxf.tools.common.ProcessorTestBase:void assertAttributesEquals(javax.xml.namespace.QName,java.util.Map,java.util.Map,java.util.Collection)",
            "org.apache.cxf.tools.common.ProcessorTestBase:void assertTagEquals(org.apache.cxf.tools.common.Tag,org.apache.cxf.tools.common.Tag,java.util.List,java.util.List)",
            "org.apache.cxf.tools.common.ProcessorTestBase:org.apache.cxf.tools.common.Tag getFromSource(org.apache.cxf.tools.common.Tag,org.apache.cxf.tools.common.Tag)",
            "org.apache.cxf.tools.common.model.JAnnotation:java.util.Set getImports()",
            "org.apache.cxf.tools.common.model.JAnnotation:org.apache.cxf.tools.common.model.JAnnotationElement getElementByName(java.lang.String)",
            "org.apache.cxf.tools.common.model.JavaMethod:java.lang.String getSignature()",
            "org.apache.cxf.tools.common.model.JavaMethod:void addAnnotation(java.lang.String,org.apache.cxf.tools.common.model.JAnnotation)",
            "org.apache.cxf.tools.common.model.JavaMethod:java.util.List getParameterList(boolean)",
            "org.apache.cxf.tools.common.model.JavaInterface:void addAnnotation(org.apache.cxf.tools.common.model.JAnnotation)",
            "org.apache.cxf.tools.common.model.JavaInterface:void addImports(java.util.Collection)",
            "org.apache.cxf.tools.common.model.JavaInterface:java.lang.String toString()",
            "org.apache.cxf.tools.common.model.JavaField:void addAnnotation(org.apache.cxf.tools.common.model.JAnnotation)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:boolean isSOAPBinding(javax.wsdl.Binding)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:java.lang.String getBindingStyle(javax.wsdl.Binding)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapOperation getSoapOperation(java.util.List)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:java.lang.String getSOAPOperationStyle(javax.wsdl.BindingOperation)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapBody getBindingInputSOAPBody(javax.wsdl.BindingOperation)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapBody getBindingOutputSOAPBody(javax.wsdl.BindingOperation)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapBody getSoapBody(java.util.List)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:java.util.List getSoapHeaders(java.util.List)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapHeader getBindingInputSOAPHeader(javax.wsdl.BindingOperation)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapHeader getBindingOutputSOAPHeader(javax.wsdl.BindingOperation)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapBinding getSoapBinding(java.util.List)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:java.util.List getBindingOperationSoapFaults(javax.wsdl.BindingOperation)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:boolean isMixedStyle(javax.wsdl.Binding)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:java.lang.String getCanonicalBindingStyle(javax.wsdl.Binding)",
            "org.apache.cxf.buslifecycle.CXFBusLifeCycleManager:void initComplete()",
            "org.apache.cxf.buslifecycle.CXFBusLifeCycleManager:void preShutdown()",
            "org.apache.cxf.buslifecycle.CXFBusLifeCycleManager:void postShutdown()",
            "org.apache.cxf.wsdl11.SchemaUtil:void getSchemas(javax.wsdl.Definition,org.apache.cxf.common.xmlschema.SchemaCollection,java.util.List)",
            "org.apache.cxf.wsdl11.SchemaUtil:void extractSchema(javax.wsdl.Definition,org.apache.cxf.common.xmlschema.SchemaCollection,java.util.List)",
            "org.apache.cxf.wsdl11.SchemaUtil:void parseImports(javax.wsdl.Definition,java.util.List)",
            "org.apache.cxf.wsdl11.SchemaUtil:void getSchemaList(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.SchemaUtil:void addSchema(java.lang.String,javax.wsdl.extensions.schema.Schema)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void parseWSDL(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:java.util.Collection getImports(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void parseImports(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void registerWSDLExtensibilityPlugins(javax.wsdl.extensions.ExtensionRegistry)",
            "org.apache.cxf.wsdl11.WSDLServiceUtils:org.apache.cxf.binding.BindingFactory getBindingFactory(javax.wsdl.Binding,org.apache.cxf.Bus,java.lang.StringBuffer)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:javax.wsdl.Definition build(java.util.Map)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addExtensibilityElements(javax.wsdl.extensions.ElementExtensible,java.util.List)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addExtensibilityAttributes(javax.wsdl.extensions.AttributeExtensible,java.util.Map)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildTypes(java.util.Collection,java.util.Map,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBinding(java.util.Collection,java.util.Collection)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBindingOperation(javax.wsdl.Definition,javax.wsdl.Binding,java.util.Collection)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBindingFault(javax.wsdl.Definition,javax.wsdl.BindingOperation,java.util.Collection)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildService(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildPortTypeOperation(javax.wsdl.PortType,java.util.Collection,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildMessage(javax.wsdl.Message,org.apache.cxf.service.model.AbstractMessageContainer,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void registerInitialExtensions(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:org.apache.cxf.service.model.ServiceSchemaInfo getSchemasForDefinition(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void putSchemasForDefinition(javax.wsdl.Definition,org.apache.cxf.service.model.ServiceSchemaInfo)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void removeDefinition(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void copyExtensors(org.apache.cxf.service.model.AbstractPropertiesHolder,java.util.List)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildMockServices(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition,javax.wsdl.Service,javax.xml.namespace.QName,org.apache.cxf.service.model.DescriptionInfo)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void parseImports(javax.wsdl.Definition,java.util.List)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.EndpointInfo buildEndpoint(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.BindingInfo,javax.wsdl.Port)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.BindingInfo buildBinding(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildInterface(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.PortType)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildInterfaceOperation(org.apache.cxf.service.model.InterfaceInfo,javax.wsdl.Operation)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildMessage(org.apache.cxf.service.model.AbstractMessageContainer,javax.wsdl.Message)",
            "org.apache.cxf.wsdl11.WSDLServiceFactory:org.apache.cxf.service.Service create()",
            "org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor:void insertConstructorArg(org.springframework.beans.factory.config.ConstructorArgumentValues,java.lang.Object)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void activateViaNS(java.lang.String)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void activateAll()",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadFragment(java.io.InputStream)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void processExtension(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadAndRegister(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:java.lang.Object getExtension(java.lang.String,java.lang.Class)",
            "org.apache.cxf.bus.extension.Extension:java.lang.String toString()",
            "org.apache.cxf.bus.CXFBusImpl:void initializeFeatures()",
            "org.apache.cxf.attachment.LazyDataSource:void load()",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:boolean containsValue(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:javax.activation.DataHandler get(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:javax.activation.DataHandler remove(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:void putAll(java.util.Map)",
            "org.apache.cxf.attachment.AttachmentDeserializer:void cacheStreamedAttachments()",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$1$1$1:void <init>(org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$1$1)",
            "org.apache.cxf.attachment.AttachmentSerializer:void writeAttachments()",
            "org.apache.cxf.attachment.AttachmentUtil:java.util.Map getDHMap(java.util.Collection)",
            "org.apache.cxf.attachment.AttachmentUtil:boolean isTypeSupported(java.lang.String,java.util.List)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$3$1:javax.activation.DataHandler next()",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$2$1:java.lang.String next()",
            "org.apache.cxf.frontend.ClientFactoryBean:void applyFeatures()",
            "org.apache.cxf.frontend.SimpleMethodDispatcher:org.apache.cxf.service.model.BindingOperationInfo getBindingOperation(java.lang.reflect.Method,org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory:org.apache.cxf.service.model.BindingInfo createBindingInfo()",
            "org.apache.cxf.frontend.ServerFactoryBean:void initializeServiceFactory()",
            "org.apache.cxf.frontend.ServerFactoryBean:void applyFeatures()",
            "org.apache.cxf.aegis.DatabindingException:java.lang.String getActualMessage()",
            "org.apache.cxf.aegis.util.jdom.StaxSerializer:void writeDocument(org.jdom.Document,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.aegis.util.jdom.StaxSerializer:void writeElement(org.jdom.Element,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.aegis.util.jdom.StaxSerializer:boolean isDeclared(javax.xml.stream.XMLStreamWriter,java.lang.String,java.lang.String)",
            "org.apache.cxf.aegis.util.jdom.StaxBuilder:void buildTree(org.jdom.JDOMFactory,javax.xml.stream.XMLStreamReader,org.jdom.Document)",
            "org.apache.cxf.aegis.util.stax.JDOMStreamReader:void setupNamespaces(org.jdom.Element)",
            "org.apache.cxf.aegis.util.stax.JDOMNamespaceContext:java.lang.String rawGetPrefix(org.jdom.Element,java.lang.String)",
            "org.apache.cxf.aegis.util.stax.JDOMNamespaceContext:void rawGetPrefixes(org.jdom.Element,java.lang.String,java.util.List)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void initialize(org.apache.cxf.service.Service)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void initializeOperation(org.apache.cxf.service.Service,org.apache.cxf.aegis.type.TypeMapping,org.apache.cxf.service.model.OperationInfo,java.util.Set)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void initializeOperationTypes(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void initializeMessage(org.apache.cxf.service.Service,org.apache.cxf.aegis.type.TypeMapping,org.apache.cxf.service.model.AbstractMessageContainer,int,java.util.Set)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void initializeMessageTypes(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.AbstractMessageContainer,int)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void addDependencies(java.util.Set,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void createSchemas(org.apache.cxf.service.Service,java.util.Set)",
            "org.apache.cxf.aegis.AegisContext:void processRootTypes()",
            "org.apache.cxf.aegis.type.basic.XMLBeanTypeInfo:org.w3c.dom.Element getPropertyElement(java.lang.String)",
            "org.apache.cxf.aegis.type.basic.BeanType:void writeObjectInternal(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,boolean)",
            "org.apache.cxf.aegis.type.basic.BeanType:java.util.Set getDependencies()",
            "org.apache.cxf.aegis.type.basic.BeanType:void writeSchema(org.apache.ws.commons.schema.XmlSchema)",
            "org.apache.cxf.aegis.type.basic.BeanTypeInfo:boolean containsPropertyName(java.util.List,java.lang.String)",
            "org.apache.cxf.aegis.type.mtom.AttachmentUtil:org.apache.cxf.message.Attachment getAttachment(java.lang.String,java.util.Collection)",
            "org.apache.cxf.aegis.type.encoded.ArrayTypeInfo:void <init>(javax.xml.namespace.NamespaceContext,java.lang.String,java.lang.String)",
            "org.apache.cxf.aegis.type.encoded.ArrayTypeInfo:java.lang.String toString()",
            "org.apache.cxf.aegis.type.encoded.MarshalRegistry$1:java.lang.Object next()",
            "org.apache.cxf.aegis.type.encoded.SoapArrayType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.SoapArrayType:java.lang.Object makeArray(java.util.List,java.util.List,java.lang.Class)",
            "org.apache.cxf.aegis.type.encoded.TrailingBlocks:java.util.List writeBlocks(org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.SoapRefRegistry:void addInstance(java.lang.String,java.lang.Object)",
            "org.apache.cxf.aegis.type.XMLTypeCreator:org.w3c.dom.Element getBestMatch(org.w3c.dom.Element,java.lang.reflect.Method,java.util.List)",
            "org.apache.cxf.aegis.type.collection.MapType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.collection.CollectionType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.jaxws.JaxWsProxyFactoryBean:boolean needWrapperClassInterceptor(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.jaxws.JaxWsProxyFactoryBean:void buildHandlerChain(org.apache.cxf.jaxws.JaxWsClientProxy)",
            "org.apache.cxf.jaxws.handler.HandlerResolverImpl:java.util.List createHandlerChain(javax.xml.ws.handler.PortInfo)",
            "org.apache.cxf.jaxws.handler.HandlerChainInvoker:void <init>(java.util.List,boolean)",
            "org.apache.cxf.jaxws.handler.HandlerChainInvoker:boolean invokeHandleFault(java.util.List,javax.xml.ws.handler.MessageContext)",
            "org.apache.cxf.jaxws.handler.HandlerChainInvoker:boolean invokeHandleMessage(java.util.List,javax.xml.ws.handler.MessageContext)",
            "org.apache.cxf.jaxws.handler.HandlerChainBuilder:java.util.List buildHandlerChainFromConfiguration(java.util.List)",
            "org.apache.cxf.jaxws.handler.HandlerChainBuilder:java.util.List sortHandlers(java.util.List)",
            "org.apache.cxf.jaxws.handler.HandlerChainBuilder:void configureHandler(javax.xml.ws.handler.Handler,org.apache.cxf.jaxws.javaee.PortComponentHandlerType)",
            "org.apache.cxf.jaxws.handler.soap.SOAPMessageContextImpl:java.lang.Object[] getHeaders(javax.xml.namespace.QName,javax.xml.bind.JAXBContext,boolean)",
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerInterceptor:java.util.Set getUnderstoodHeaders()",
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerInterceptor:javax.xml.ws.handler.MessageContext createProtocolMessageContext(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerFaultInInterceptor:java.util.Set getUnderstoodHeaders()",
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerFaultOutInterceptor:java.util.Set getUnderstoodHeaders()",
            "org.apache.cxf.jaxws.support.JaxWsEndpointImpl:boolean hasUsingAddressing(java.util.List)",
            "org.apache.cxf.jaxws.support.JaxWsEndpointImpl:boolean addressingRequired(java.util.List)",
            "org.apache.cxf.jaxws.support.JaxWsEndpointImpl:javax.xml.ws.soap.AddressingFeature getAddressingFeature()",
            "org.apache.cxf.jaxws.support.JaxWsEndpointImpl:org.apache.cxf.ws.addressing.WSAddressingFeature getWSAddressingFeature()",
            "org.apache.cxf.jaxws.support.JaxWsEndpointImpl:javax.xml.ws.soap.MTOMFeature getMTOMFeature()",
            "org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean:void initializeWSDLOperationsForProvider()",
            "org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean:org.apache.cxf.service.model.FaultInfo getFaultInfo(org.apache.cxf.service.model.OperationInfo,java.lang.Class)",
            "org.apache.cxf.jaxws.support.JaxWsImplementorInfo:java.lang.String getWsdlLocation()",
            "org.apache.cxf.jaxws.support.JaxWsImplementorInfo:javax.xml.namespace.QName getInterfaceName()",
            "org.apache.cxf.jaxws.support.JaxWsImplementorInfo:java.lang.String getImplementorClassName()",
            "org.apache.cxf.jaxws.WrapperClassGenerator:java.util.Set generate()",
            "org.apache.cxf.jaxws.WrapperClassGenerator:void createWrapperClass(org.apache.cxf.service.model.MessagePartInfo,org.apache.cxf.service.model.MessageInfo,org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,boolean)",
            "org.apache.cxf.jaxws.WrapperClassGenerator:void addJAXBAnnotations(org.objectweb.asm.FieldVisitor,java.util.List)",
            "org.apache.cxf.jaxws.JaxWsClientProxy:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])",
            "org.apache.cxf.jaxws.ServiceImpl:void initializePorts()",
            "org.apache.cxf.jaxws.ServiceImpl:org.apache.cxf.jaxws.support.JaxWsClientEndpointImpl getJaxwsEndpoint(javax.xml.namespace.QName,org.apache.cxf.service.factory.AbstractServiceFactoryBean,javax.xml.ws.WebServiceFeature[])",
            "org.apache.cxf.jaxws.ServiceImpl:org.apache.cxf.service.factory.AbstractServiceFactoryBean createDispatchService(org.apache.cxf.databinding.DataBinding)",
            "org.apache.cxf.jaxws.ServiceImpl:java.lang.Object getPort(org.apache.cxf.ws.addressing.EndpointReferenceType,java.lang.Class,javax.xml.ws.WebServiceFeature[])",
            "org.apache.cxf.jaxws.ServiceImpl:javax.xml.ws.Dispatch createDispatch(javax.xml.namespace.QName,java.lang.Class,javax.xml.ws.Service$Mode,javax.xml.ws.WebServiceFeature[])",
            "org.apache.cxf.jaxws.ServiceImpl:javax.xml.ws.Dispatch createDispatch(javax.xml.namespace.QName,javax.xml.bind.JAXBContext,javax.xml.ws.Service$Mode,javax.xml.ws.WebServiceFeature[])",
            "org.apache.cxf.jaxws.spi.ProviderImpl:javax.xml.ws.wsaddressing.W3CEndpointReference createW3CEndpointReference(java.lang.String,javax.xml.namespace.QName,javax.xml.namespace.QName,java.util.List,java.lang.String,java.util.List)",
            "org.apache.cxf.jaxws.JaxWsServerFactoryBean:void buildHandlerChain()",
            "org.apache.cxf.jaxws.DispatchImpl:void addInvokeOperation(boolean)",
            "org.apache.cxf.jaxws.interceptors.MessageModeInInterceptor$MultiPartDataSource:void nextCurrent()",
            "org.apache.cxf.jaxws.interceptors.WebFaultOutInterceptor:org.apache.cxf.service.model.MessagePartInfo getFaultMessagePart(javax.xml.namespace.QName,org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.jaxws.interceptors.HolderOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.interceptors.SwAInInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.jaxws.interceptors.WrapperClassOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.interceptors.WrapperClassOutInterceptor:org.apache.cxf.databinding.WrapperHelper createWrapperHelper(org.apache.cxf.databinding.WrapperCapableDatabinding,org.apache.cxf.service.model.MessageInfo,org.apache.cxf.service.model.MessageInfo,java.lang.Class)",
            "org.apache.cxf.jaxws.interceptors.HolderInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.interceptors.WrapperClassInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.interceptors.WrapperClassInInterceptor:org.apache.cxf.databinding.WrapperHelper createWrapperHelper(org.apache.cxf.databinding.WrapperCapableDatabinding,org.apache.cxf.service.model.MessageInfo,org.apache.cxf.service.model.MessageInfo,java.lang.Class)",
            "org.apache.cxf.jaxws.interceptors.SwAOutInterceptor:void processAttachments(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.binding.soap.model.SoapBodyInfo)",
            "org.apache.cxf.jaxws.binding.http.HTTPBindingImpl:void validate()",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:void copyScoped(java.util.Map)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:void clear()",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:java.util.Set keySet()",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:java.util.Set entrySet()",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:void putAll(java.util.Map)",
            "org.apache.cxf.jaxws.AbstractJAXWSMethodInvoker:java.util.Map removeHandlerProperties(org.apache.cxf.jaxws.context.WrappedMessageContext)",
            "org.apache.cxf.jaxws.AbstractJAXWSMethodInvoker:void addHandlerProperties(org.apache.cxf.jaxws.context.WrappedMessageContext,java.util.Map)",
            "org.apache.cxf.jaxws.AbstractJAXWSMethodInvoker:void updateWebServiceContext(org.apache.cxf.message.Exchange,javax.xml.ws.handler.MessageContext)",
            "org.apache.cxf.xmlbeans.XmlBeansDataBinding:void initialize(org.apache.cxf.service.Service)"
        ]
    },
    "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$1$1$1:void <init>(org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$1$1)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$1$1:java.util.Map$Entry next()"
        ]
    },
    "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$3$1:javax.activation.DataHandler next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$3$1:java.lang.Object next()"
        ]
    },
    "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$2$1:java.lang.String next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$2$1:java.lang.Object next()"
        ]
    },
    "org.apache.cxf.tools.common.model.JAnnotationElement:int hashCode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.basic.InterfaceInvocationHandler:java.lang.String proxyToString(java.lang.Object)"
        ]
    },
    "org.apache.cxf.tools.common.model.JAnnotationElement:boolean equals(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.builder.jaxb.JaxbAssertion:boolean equal(org.apache.neethi.PolicyComponent)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:boolean equals(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:boolean containsValue(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:javax.activation.DataHandler get(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:javax.activation.DataHandler remove(java.lang.Object)",
            "org.apache.cxf.aegis.type.java5.AnnotationReader:java.lang.Object getAnnotationValue(java.lang.String,java.lang.reflect.AnnotatedElement,java.lang.Object,java.lang.Class[])",
            "org.apache.cxf.aegis.type.java5.AnnotationReader:java.lang.Object getAnnotationValue(java.lang.String,java.lang.reflect.Method,int,java.lang.Object,java.lang.Class[])"
        ]
    },
    "org.apache.cxf.transport.http.AbstractHTTPDestination:void setupMessage(org.apache.cxf.message.Message,javax.servlet.ServletConfig,javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void setupMessage(org.apache.cxf.message.Message,javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.servlet.ServletDestination:void invoke(javax.servlet.ServletConfig,javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.cxf.transport.jms.JMSUtils:java.lang.String getEncoding(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.jms.JMSUtils:void populateIncomingContext(javax.jms.Message,org.apache.cxf.message.Message,java.lang.String)"
        ]
    },
    "org.apache.cxf.aegis.type.mtom.DataHandlerType:java.lang.Object wrapBytes(byte[],java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.mtom.AbstractXOPType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)"
        ]
    },
    "org.apache.cxf.helpers.XMLUtils:javax.xml.transform.Transformer newTransformer()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.XMLUtils:void writeTo(javax.xml.transform.Source,java.io.OutputStream,int,java.lang.String,java.lang.String)",
            "org.apache.cxf.helpers.XMLUtils:java.lang.String toString(javax.xml.transform.Source,java.util.Properties)",
            "org.apache.cxf.helpers.XMLUtils:void generateXMLFile(org.w3c.dom.Element,java.io.Writer)",
            "org.apache.cxf.jaxws.handler.logical.LogicalMessageImpl:javax.xml.transform.Source handleDispatchProviderCase(javax.xml.ws.Service$Mode)"
        ]
    },
    "org.apache.cxf.helpers.XMLUtils:javax.xml.parsers.DocumentBuilder getParser()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.XMLUtils:org.w3c.dom.Document parse(org.xml.sax.InputSource)",
            "org.apache.cxf.helpers.XMLUtils:org.w3c.dom.Document parse(java.io.File)",
            "org.apache.cxf.helpers.XMLUtils:org.w3c.dom.Document parse(java.io.InputStream)",
            "org.apache.cxf.helpers.XMLUtils:org.w3c.dom.Document parse(byte[])",
            "org.apache.cxf.helpers.XMLUtils:org.w3c.dom.Document newDocument()",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void writeResponse(java.lang.String,java.lang.String,org.apache.cxf.service.model.EndpointInfo,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.common.logging.AbstractDelegatingLogger:void internalLog(java.util.logging.LogRecord)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void doLog(java.util.logging.LogRecord)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void doLog(java.util.logging.LogRecord,java.lang.String)"
        ]
    },
    "org.apache.cxf.common.logging.Log4jLogger$HandlerWrapper:boolean isAsSevereAsThreshold(org.apache.log4j.Priority)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.util.ClassReader:void readCode()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.util.ParamReader:void <init>(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.ParamReader:void <init>(java.lang.Class)"
        ]
    },
    "org.apache.cxf.common.util.ParamReader:void readCode()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.util.ASMHelper:java.lang.String getMethodSignature(java.lang.reflect.Method)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.WrapperHelperCompiler:boolean addCreateWrapperObject(java.lang.String,java.lang.Class)",
            "org.apache.cxf.jaxb.WrapperHelperCompiler:void doCollection(org.objectweb.asm.MethodVisitor,int)",
            "org.apache.cxf.jaxb.WrapperHelperCompiler:boolean addGetWrapperParts(java.lang.String,java.lang.Class,java.lang.reflect.Method[],java.lang.reflect.Field[],org.objectweb.asm.ClassWriter)"
        ]
    },
    "org.apache.cxf.common.util.ASMHelper:java.lang.String getClassCode(java.lang.reflect.Type)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.ASMHelper:java.lang.String getClassCode(java.lang.reflect.Type)",
            "org.apache.cxf.jaxws.WrapperClassGenerator:void generateMessagePart(org.objectweb.asm.ClassWriter,org.apache.cxf.service.model.MessagePartInfo,java.lang.reflect.Method,java.lang.String)"
        ]
    },
    "org.apache.cxf.common.util.ASMHelper:java.lang.Class loadClass(java.lang.String,java.lang.Class,byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.JAXBUtils:java.lang.Class createNamespaceWrapperInternal(org.apache.cxf.common.util.ASMHelper,org.objectweb.asm.ClassWriter)",
            "org.apache.cxf.jaxb.WrapperHelperCompiler:org.apache.cxf.databinding.WrapperHelper compile()",
            "org.apache.cxf.jaxws.WrapperClassGenerator:void createWrapperClass(org.apache.cxf.service.model.MessagePartInfo,org.apache.cxf.service.model.MessageInfo,org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,boolean)",
            "org.apache.cxf.jaxws.WrapperClassGenerator:void generatePackageInfo(java.lang.String,java.lang.String,java.lang.Class)"
        ]
    },
    "org.apache.cxf.common.util.ASMHelper:java.lang.Class findClass(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.JAXBUtils:java.lang.Object createNamespaceWrapper(java.util.Map)",
            "org.apache.cxf.jaxb.WrapperHelperCompiler:org.apache.cxf.databinding.WrapperHelper compile()",
            "org.apache.cxf.jaxws.WrapperClassGenerator:void createWrapperClass(org.apache.cxf.service.model.MessagePartInfo,org.apache.cxf.service.model.MessageInfo,org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,boolean)"
        ]
    },
    "org.apache.cxf.common.util.ParamReader:java.lang.String[] getParameterNames(java.lang.reflect.Constructor)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.util.ParamReader:java.lang.String[] getParameterNames(java.lang.reflect.Method)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.ParamReader:java.lang.String[] getParameterNamesFromDebugInfo(java.lang.reflect.Method)"
        ]
    },
    "org.apache.cxf.common.util.ParamReader:void readLocalVariableTable()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void mapElementToJaxbProperty(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder,javax.xml.namespace.QName,java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void mapElementToJaxbProperty(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder,javax.xml.namespace.QName,java.lang.String)",
            "org.apache.cxf.transport.http.spring.HttpConduitBeanDefinitionParser:void doParse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder)",
            "org.apache.cxf.transport.jms.spring.JMSDestinationBeanDefinitionParser:void doParse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder)",
            "org.apache.cxf.transport.jms.spring.JMSConduitBeanDefinitionParser:void doParse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder)",
            "org.apache.cxf.ws.rm.spring.RMFeatureBeanDefinitionParser:void parseChildElements(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder)",
            "org.apache.cxf.ws.rm.spring.RMManagerBeanDefinitionParser:void doParse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder)"
        ]
    },
    "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser:org.apache.cxf.configuration.jsse.spring.TLSServerParametersConfig createTLSServerParametersConfig(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser:java.lang.String createTLSServerParametersConfigRef(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser:org.apache.cxf.transport.http_jetty.ThreadingParameters createThreadingParameters(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser:java.lang.String createThreadingParametersRef(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxb.WrapperHelperCompiler:org.apache.cxf.databinding.WrapperHelper compile()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.WrapperHelperCompiler:org.apache.cxf.databinding.WrapperHelper compileWrapperHelper(java.lang.Class,java.lang.reflect.Method[],java.lang.reflect.Method[],java.lang.reflect.Method[],java.lang.reflect.Field[],java.lang.Object)"
        ]
    },
    "org.apache.cxf.jaxb.WrapperHelperCompiler:boolean addGetWrapperParts(java.lang.String,java.lang.Class,java.lang.reflect.Method[],java.lang.reflect.Field[],org.objectweb.asm.ClassWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.WrapperHelperCompiler:org.apache.cxf.databinding.WrapperHelper compile()"
        ]
    },
    "org.apache.cxf.management.counters.CounterRepository:void increaseCounter(javax.management.ObjectName,org.apache.cxf.management.counters.MessageHandlingTimeRecorder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.management.interceptor.AbstractMessageResponseTimeInterceptor:void increaseCounter(org.apache.cxf.message.Exchange,org.apache.cxf.management.counters.MessageHandlingTimeRecorder)"
        ]
    },
    "org.apache.cxf.staxutils.DepthXMLStreamReader:java.lang.Object getProperty(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DepthXMLStreamReader:java.lang.Object getProperty(java.lang.String)"
        ]
    },
    "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:java.lang.Object getProperty(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:java.lang.Object getProperty(java.lang.String)"
        ]
    },
    "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:java.lang.Object getProperty(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:java.lang.Object getProperty(java.lang.String)"
        ]
    },
    "org.apache.cxf.message.MessageContentsList:org.apache.cxf.message.MessageContentsList getContentsList(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.BareOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.soap.interceptor.RPCOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor:boolean handleHeaderPart(boolean,org.apache.cxf.binding.soap.SoapMessage,java.lang.String)",
            "org.apache.cxf.binding.soap.interceptor.SoapHeaderInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.interceptors.HolderOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.interceptors.SwAInInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.jaxws.interceptors.WrapperClassOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.interceptors.HolderInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.interceptors.WrapperClassInInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.message.AbstractWrappedMessage:java.lang.Object getContent(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.message.MessageContentsList:org.apache.cxf.message.MessageContentsList getContentsList(org.apache.cxf.message.Message)",
            "org.apache.cxf.message.AbstractWrappedMessage:java.lang.Object getContent(java.lang.Class)",
            "org.apache.cxf.message.MessageImpl:void copyContent(org.apache.cxf.message.Message,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.ServiceInvokerInterceptor:java.lang.Object getInvokee(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.ClientOutFaultObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.WrappedInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.LoggingOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.BareInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AttachmentOutInterceptor$AttachmentOutEndingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.ClientFaultConverter:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.ClientFaultConverter:void setStackTrace(org.apache.cxf.interceptor.Fault,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:org.apache.cxf.staxutils.DepthXMLStreamReader getXMLStreamReader(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.WrappedOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.FaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:void writeParts(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.message.MessageContentsList,java.util.List)",
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:javax.xml.stream.XMLStreamWriter getXMLStreamWriter(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.FIStaxOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.LoggingInInterceptor:void logging(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxOutInterceptor$StaxOutEndingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.PrettyLoggingOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.WrappedOutInterceptor$WrappedOutEndingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.TransportURIResolver$1:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.AbstractConduit:void close(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit$InterposedMessageObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:void close(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.gzip.GZIPOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.gzip.GZIPInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.AbstractDestination$1:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] processResult(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,java.util.Map)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Exception getException(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.ClientImpl:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.addressing.ContextUtils:void rebaseResponse(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.ws.addressing.AddressingProperties,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.addressing.ContextUtils:org.apache.cxf.ws.addressing.AttributedURIType getAction(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.addressing.MAPAggregator:java.lang.String getFaultNameFromMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.policy.PolicyVerificationInFaultInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JOutInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.wss4j.WSS4JOutInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JOutInterceptor$PolicyBasedWSS4JOutInterceptorInternal:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor:javax.xml.soap.SOAPMessage getSOAPMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.wss4j.WSS4JOutInterceptor$WSS4JOutInterceptorInternal:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.rm.Servant:java.lang.Object getParameter(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.RetransmissionInterceptor:void handle(org.apache.cxf.message.Message,boolean)",
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl:void resend(org.apache.cxf.transport.Conduit,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.soap.RMSoapInterceptor:void encode(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.phase.AbstractPhaseInterceptor:boolean isGET(org.apache.cxf.message.Message)",
            "org.apache.cxf.databinding.stax.StaxDataBindingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.soap.interceptor.ReadHeadersInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.Soap12FaultOutInterceptor$Soap12FaultOutInterceptorInternal:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.RPCOutInterceptor:javax.xml.stream.XMLStreamWriter getXMLStreamWriter(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.soap.interceptor.Soap12FaultInInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.CheckFaultInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor:void writeSoapEnvelopeStart(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor:boolean handleHeaderPart(boolean,org.apache.cxf.binding.soap.SoapMessage,java.lang.String)",
            "org.apache.cxf.binding.soap.interceptor.Soap11FaultInInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.Soap11FaultOutInterceptor$Soap11FaultOutInterceptorInternal:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor$SoapOutEndingInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.saaj.SAAJOutInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.saaj.SAAJInInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.saaj.SAAJOutInterceptor$SAAJOutEndingInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.xml.interceptor.XMLMessageInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.xml.interceptor.XMLFaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.xml.interceptor.XMLFaultOutInterceptor:void handleFault(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.xml.interceptor.XMLFaultInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.xml.interceptor.XMLMessageOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.xml.interceptor.XMLMessageOutInterceptor:void writeMessage(org.apache.cxf.message.Message,javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.clustering.FailoverTargetSelector:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.clustering.FailoverTargetSelector:void complete(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.attachment.AttachmentDeserializer:void initializeRootMessage()",
            "org.apache.cxf.attachment.AttachmentDeserializer:java.lang.String findBoundaryFromInputStream()",
            "org.apache.cxf.attachment.AttachmentSerializer:void writeProlog()",
            "org.apache.cxf.jaxws.handler.soap.SOAPMessageContextImpl:void setMessage(javax.xml.soap.SOAPMessage)",
            "org.apache.cxf.jaxws.handler.soap.SOAPMessageContextImpl:javax.xml.soap.SOAPMessage getMessage()",
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerFaultInInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerFaultOutInterceptor:void handleMessageInternal(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.jaxws.handler.logical.LogicalHandlerFaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.handler.logical.LogicalHandlerFaultOutInterceptor$LogicalHandlerFaultOutEndingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.handler.logical.LogicalHandlerOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.handler.logical.LogicalHandlerOutInterceptor$LogicalHandlerOutEndingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.handler.logical.LogicalHandlerInInterceptor:void handleAbort(org.apache.cxf.message.Message,org.apache.cxf.staxutils.W3CDOMStreamWriter)",
            "org.apache.cxf.jaxws.handler.logical.LogicalMessageImpl:javax.xml.transform.Source getPayload()",
            "org.apache.cxf.jaxws.handler.logical.LogicalMessageImpl:javax.xml.transform.Source handleDispatchProviderCase(javax.xml.ws.Service$Mode)",
            "org.apache.cxf.jaxws.handler.logical.LogicalMessageImpl:void setPayload(javax.xml.transform.Source)",
            "org.apache.cxf.jaxws.interceptors.MessageModeInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.interceptors.MessageModeInInterceptor:void doDataSource(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.interceptors.MessageModeInInterceptor:void doFromSoapMessage(org.apache.cxf.message.Message,java.lang.Object)",
            "org.apache.cxf.jaxws.interceptors.WebFaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.interceptors.MessageModeOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.interceptors.MessageModeOutInterceptor:void doSoap(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.interceptors.SwAOutInterceptor:void processAttachments(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.binding.soap.model.SoapBodyInfo)",
            "org.apache.cxf.jaxws.interceptors.MessageModeOutInterceptor$MessageModeOutInterceptorInternal:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)"
        ]
    },
    "org.apache.cxf.interceptor.StaxOutInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.ServiceInvokerInterceptor:java.lang.Object getInvokee(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.ServiceInvokerInterceptor:java.lang.Object access$000(org.apache.cxf.interceptor.ServiceInvokerInterceptor,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.LoggingOutInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.ClientFaultConverter:void setStackTrace(org.apache.cxf.interceptor.Fault,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.ClientFaultConverter:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:org.apache.cxf.staxutils.DepthXMLStreamReader getXMLStreamReader(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.WrappedInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.BareInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.databinding.stax.StaxDataBindingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.soap.interceptor.RPCInInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:javax.xml.stream.XMLStreamWriter getXMLStreamWriter(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.interceptor.StaxOutInterceptor$StaxOutEndingInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.PrettyLoggingOutInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.WrappedOutInterceptor$WrappedOutEndingInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:java.lang.Exception getException(org.apache.cxf.message.Exchange)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] processResult(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,java.util.Map)"
        ]
    },
    "org.apache.cxf.ws.addressing.MAPAggregator:java.lang.String getFaultNameFromMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.MAPAggregator:java.lang.String getActionUri(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.ws.rm.Servant:java.lang.Object getParameter(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.Servant:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object)",
            "org.apache.cxf.ws.rm.Servant:org.apache.cxf.ws.rm.CreateSequenceResponseType createSequence(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.Servant:void terminateSequence(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.ws.rm.RetransmissionInterceptor:void handle(org.apache.cxf.message.Message,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.RetransmissionInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.RetransmissionInterceptor:void handleFault(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.phase.AbstractPhaseInterceptor:boolean isGET(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.URIMappingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.WrappedInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.FIStaxInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.BareInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AttachmentInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.databinding.stax.StaxDataBindingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.soap.interceptor.ReadHeadersInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.RPCInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.xml.interceptor.XMLMessageInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.interceptors.WrapperClassInInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.binding.soap.interceptor.RPCOutInterceptor:javax.xml.stream.XMLStreamWriter getXMLStreamWriter(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.soap.interceptor.RPCOutInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.binding.xml.interceptor.XMLFaultOutInterceptor:void handleFault(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:void unwind(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.binding.xml.interceptor.XMLFaultInInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.attachment.AttachmentDeserializer:java.lang.String findBoundaryFromInputStream()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.AttachmentDeserializer:void initializeRootMessage()"
        ]
    },
    "org.apache.cxf.attachment.AttachmentSerializer:void writeProlog()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.AttachmentOutInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxws.handler.soap.SOAPMessageContextImpl:void setMessage(javax.xml.soap.SOAPMessage)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxws.handler.logical.LogicalMessageImpl:void setPayload(javax.xml.transform.Source)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.handler.logical.LogicalMessageImpl:void setPayload(java.lang.Object,javax.xml.bind.JAXBContext)"
        ]
    },
    "org.apache.cxf.jaxws.interceptors.MessageModeOutInterceptor:void doSoap(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.interceptors.MessageModeOutInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.endpoint.AbstractConduitSelector:org.apache.cxf.transport.Conduit getSelectedConduit(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.UpfrontConduitSelector:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.UpfrontConduitSelector:org.apache.cxf.transport.Conduit selectConduit(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.DeferredConduitSelector:org.apache.cxf.transport.Conduit selectConduit(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.AbstractConduitSelector:void complete(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.clustering.FailoverTargetSelector:org.apache.cxf.transport.Conduit selectConduit(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.binding.soap.SoapTransportFactory:org.apache.cxf.transport.Conduit getConduit(org.apache.cxf.service.model.EndpointInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.TransportURIResolver:org.xml.sax.InputSource resolve(java.lang.String,java.lang.String)",
            "org.apache.cxf.endpoint.AbstractConduitSelector:org.apache.cxf.transport.Conduit getSelectedConduit(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.soap.SoapTransportFactory:org.apache.cxf.transport.Conduit getConduit(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.binding.soap.SoapTransportFactory:org.apache.cxf.transport.Conduit getConduit(org.apache.cxf.service.model.EndpointInfo)"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit:void setHeadersByAuthorizationPolicy(org.apache.cxf.message.Message,java.net.URL,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:void setHeadersByPolicy(org.apache.cxf.message.Message,java.net.URL,java.util.Map)",
            "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection redirectRetransmit(java.net.HttpURLConnection,org.apache.cxf.message.Message,org.apache.cxf.io.CacheAndWriteOutputStream)"
        ]
    },
    "org.apache.cxf.transport.http.gzip.GZIPOutInterceptor:void access$100(org.apache.cxf.message.Message,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.gzip.GZIPOutInterceptor$GZipThresholdOutputStream:void thresholdReached()"
        ]
    },
    "org.apache.cxf.binding.soap.SoapTransportFactory:org.apache.cxf.transport.Destination getDestination(org.apache.cxf.service.model.EndpointInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:org.apache.cxf.transport.Destination getDestination(java.lang.String)",
            "org.apache.cxf.endpoint.ServerImpl:void initDestination(org.apache.cxf.transport.DestinationFactory)",
            "org.apache.cxf.binding.soap.SoapTransportFactory:org.apache.cxf.transport.Destination getDestination(org.apache.cxf.service.model.EndpointInfo)"
        ]
    },
    "org.apache.cxf.transport.servlet.ServletTransportFactory:org.apache.cxf.transport.Destination getDestination(org.apache.cxf.service.model.EndpointInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:org.apache.cxf.transport.Destination getDestination(java.lang.String)",
            "org.apache.cxf.endpoint.ServerImpl:void initDestination(org.apache.cxf.transport.DestinationFactory)",
            "org.apache.cxf.binding.soap.SoapTransportFactory:org.apache.cxf.transport.Destination getDestination(org.apache.cxf.service.model.EndpointInfo)"
        ]
    },
    "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void setTLSServerParametersForPort(int,org.apache.cxf.configuration.jsse.TLSServerParameters)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine createJettyHTTPServerEngine(int,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void retrieveEngine()"
        ]
    },
    "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void retrieveEngine()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void finalizeConfig()"
        ]
    },
    "org.apache.cxf.ws.policy.attachment.external.DomainExpressionBuilderRegistry:org.apache.cxf.ws.policy.attachment.external.DomainExpression build(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.attachment.external.ExternalAttachmentProvider:java.util.Collection readDomainExpressions(org.w3c.dom.Element)"
        ]
    },
    "org.apache.cxf.ws.policy.WSPolicyFeature:org.apache.neethi.Policy resolveLocal(org.apache.neethi.PolicyReference,org.w3c.dom.Element,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.WSPolicyFeature:org.apache.neethi.Policy resolveReference(org.apache.neethi.PolicyReference,org.w3c.dom.Element,org.apache.cxf.ws.policy.PolicyBuilder,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.ws.policy.attachment.external.ExternalAttachmentProvider:org.apache.neethi.Policy resolveLocal(org.apache.neethi.PolicyReference,org.w3c.dom.Document)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.attachment.external.ExternalAttachmentProvider:org.apache.neethi.Policy resolveReference(org.apache.neethi.PolicyReference,org.w3c.dom.Document)"
        ]
    },
    "org.apache.cxf.ws.security.trust.STSClient:java.security.cert.X509Certificate getCert(org.apache.ws.security.components.crypto.Crypto)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.trust.STSClient:org.apache.cxf.ws.security.tokenstore.SecurityToken requestSecurityToken(java.lang.String,java.lang.String,java.lang.String,org.apache.cxf.ws.security.tokenstore.SecurityToken)"
        ]
    },
    "org.apache.cxf.ws.security.trust.STSClient:javax.security.auth.callback.CallbackHandler createHandler()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.trust.STSClient:org.apache.cxf.ws.security.tokenstore.SecurityToken createSecurityToken(org.w3c.dom.Element,byte[])",
            "org.apache.cxf.ws.security.trust.STSClient:org.w3c.dom.Element decrypt(org.w3c.dom.Element)"
        ]
    },
    "org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor:java.lang.String getAction(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.binding.soap.SoapVersion)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)"
        ]
    },
    "org.apache.cxf.ws.security.wss4j.AbstractWSS4JInterceptor:java.lang.Object getProperty(java.lang.Object,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.wss4j.AbstractWSS4JInterceptor:org.apache.ws.security.components.crypto.Crypto loadSignatureCrypto(org.apache.ws.security.handler.RequestData)",
            "org.apache.cxf.ws.security.wss4j.AbstractWSS4JInterceptor:org.apache.ws.security.components.crypto.Crypto loadDecryptionCrypto(org.apache.ws.security.handler.RequestData)",
            "org.apache.cxf.ws.security.wss4j.AbstractWSS4JInterceptor:org.apache.ws.security.components.crypto.Crypto loadEncryptionCrypto(org.apache.ws.security.handler.RequestData)"
        ]
    },
    "org.apache.cxf.ws.rm.Source:org.apache.cxf.ws.rm.SourceSequence getCurrent(org.apache.cxf.ws.rm.Identifier)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.Source:org.apache.cxf.ws.rm.SourceSequence getCurrent()",
            "org.apache.cxf.ws.rm.RMManager:org.apache.cxf.ws.rm.SourceSequence getSequence(org.apache.cxf.ws.rm.Identifier,org.apache.cxf.message.Message,org.apache.cxf.ws.addressing.AddressingProperties)"
        ]
    },
    "org.apache.cxf.ws.rm.Source:org.apache.cxf.ws.rm.SourceSequence awaitCurrent(org.apache.cxf.ws.rm.Identifier)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.RMManager:org.apache.cxf.ws.rm.SourceSequence getSequence(org.apache.cxf.ws.rm.Identifier,org.apache.cxf.message.Message,org.apache.cxf.ws.addressing.AddressingProperties)"
        ]
    },
    "org.apache.cxf.ws.rm.SourceSequence:void checkLastMessage(org.apache.cxf.ws.rm.Identifier,java.math.BigInteger)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.SourceSequence:java.math.BigInteger nextMessageNumber(org.apache.cxf.ws.rm.Identifier,java.math.BigInteger,boolean)"
        ]
    },
    "org.apache.cxf.ws.rm.RMManager:org.apache.cxf.ws.rm.Destination getDestination(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.RMInInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.RMOutInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.RMManager:org.apache.cxf.ws.rm.SourceSequence getSequence(org.apache.cxf.ws.rm.Identifier,org.apache.cxf.message.Message,org.apache.cxf.ws.addressing.AddressingProperties)"
        ]
    },
    "org.apache.cxf.ws.rm.RMManager:org.apache.cxf.ws.rm.Source getSource(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.RetransmissionCallback:void onClose(org.apache.cxf.io.CachedOutputStream)",
            "org.apache.cxf.ws.rm.RMOutInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.RMManager:org.apache.cxf.ws.rm.SourceSequence getSequence(org.apache.cxf.ws.rm.Identifier,org.apache.cxf.message.Message,org.apache.cxf.ws.addressing.AddressingProperties)"
        ]
    },
    "org.apache.cxf.ws.rm.soap.RMSoapInterceptor:void updateServiceModelInfo(org.apache.cxf.binding.soap.SoapMessage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.soap.RMSoapInterceptor:void mediate(org.apache.cxf.binding.soap.SoapMessage)"
        ]
    },
    "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl:java.util.List getSequenceCandidates(org.apache.cxf.ws.rm.SourceSequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl:int countUnacknowledged(org.apache.cxf.ws.rm.SourceSequence)",
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl:void purgeAcknowledged(org.apache.cxf.ws.rm.SourceSequence)",
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl:void stop(org.apache.cxf.ws.rm.SourceSequence)"
        ]
    },
    "org.apache.cxf.phase.PhaseInterceptorChain:void add(org.apache.cxf.interceptor.Interceptor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.StaxOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AttachmentOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.WrappedOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.MessageSenderInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.gzip.GZIPInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.policy.ServerPolicyOutFaultInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.policy.PolicyInInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.policy.PolicyOutInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.policy.ClientPolicyInFaultInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor:void recalcEffectivePolicy(org.apache.cxf.binding.soap.SoapMessage,java.lang.String,org.apache.neethi.Policy)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JOutInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.wss4j.WSS4JOutInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.rm.RMOutInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.soap.RMSoapInterceptor:void updateServiceModelInfo(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.Soap11FaultOutInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.Soap12FaultOutInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.MustUnderstandInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.saaj.SAAJOutInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerFaultOutInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.jaxws.handler.logical.LogicalHandlerFaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.handler.logical.LogicalHandlerOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.interceptors.MessageModeOutInterceptor:void doSoap(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.interceptors.SwAOutInterceptor:java.util.Collection setupAttachmentOutput(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.jaxws.interceptors.MessageModeOutInterceptor$MessageModeOutInterceptorInternal:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)"
        ]
    },
    "org.apache.cxf.ws.addressing.ContextUtils:java.util.concurrent.Executor getExecutor(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.ContextUtils:void rebaseResponse(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.ws.addressing.AddressingProperties,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.workqueue.WorkQueueManagerImpl:org.apache.cxf.workqueue.AutomaticWorkQueue getAutomaticWorkQueue()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.OneWayProcessorInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponse()",
            "org.apache.cxf.ws.addressing.ContextUtils:java.util.concurrent.Executor getExecutor(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.binding.xml.wsdl11.XmlIoPlugin:javax.wsdl.extensions.ExtensibilityElement createExtension(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void <init>(javax.xml.stream.XMLStreamWriter,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl.JAXBExtensionHelper:void marshall(java.lang.Class,javax.xml.namespace.QName,javax.wsdl.extensions.ExtensibilityElement,java.io.PrintWriter,javax.wsdl.Definition,javax.wsdl.extensions.ExtensionRegistry)"
        ]
    },
    "org.apache.cxf.jaxb.JAXBDataBase:java.lang.'annotation'.Annotation[] getJAXBAnnotation(org.apache.cxf.service.model.MessagePartInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.io.DataWriterImpl:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,java.lang.Object)",
            "org.apache.cxf.jaxb.io.DataReaderImpl:java.lang.Object read(org.apache.cxf.service.model.MessagePartInfo,java.lang.Object)"
        ]
    },
    "org.apache.cxf.jaxb.JAXBEncoderDecoder:java.lang.Object unmarshall(javax.xml.bind.Unmarshaller,java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.io.DataReaderImpl:java.lang.Object read(org.apache.cxf.service.model.MessagePartInfo,java.lang.Object)"
        ]
    },
    "org.apache.cxf.jaxb.JAXBEncoderDecoder:java.util.List createList(org.apache.cxf.service.model.MessagePartInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.JAXBEncoderDecoder:java.lang.Object unmarshall(javax.xml.bind.Unmarshaller,java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,boolean)"
        ]
    },
    "org.apache.cxf.jaxb.JAXBEncoderDecoder:boolean isList(org.apache.cxf.service.model.MessagePartInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.JAXBEncoderDecoder:java.lang.Object unmarshall(javax.xml.bind.Unmarshaller,java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,boolean)"
        ]
    },
    "org.apache.cxf.message.MessageImpl:java.lang.Object getContextualProperty(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.message.AbstractWrappedMessage:java.lang.Object getContextualProperty(java.lang.String)",
            "org.apache.cxf.interceptor.StaxOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxOutInterceptor:javax.xml.stream.XMLOutputFactory getXMLOutputFactory(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AttachmentOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:void setSchemaInMessage(org.apache.cxf.service.Service,org.apache.cxf.message.Message,org.apache.cxf.databinding.DataReader)",
            "org.apache.cxf.interceptor.StaxInInterceptor:javax.xml.stream.XMLInputFactory getXMLInputFactory(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:void writeParts(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.message.MessageContentsList,java.util.List)",
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:boolean isBufferingEnabled(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:boolean shouldValidate(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:org.apache.cxf.databinding.DataWriter getDataWriter(org.apache.cxf.message.Message,org.apache.cxf.service.Service,java.lang.Class)",
            "org.apache.cxf.interceptor.FIStaxOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.DigestAuthSupplier:org.apache.cxf.configuration.security.AuthorizationPolicy getPolicy(org.apache.cxf.transport.http.HTTPConduit,org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.jms.JMSConduit:void sendExchange(org.apache.cxf.message.Exchange,java.lang.Object)",
            "org.apache.cxf.ws.policy.PolicyInInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.policy.PolicyOutInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor$SecureConversationCancelInterceptor:void doCancel(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.ws.security.policy.model.SecureConversationToken)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor$STSInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor:void unmapSecurityProps(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.policy.interceptors.IssuedTokenInterceptorProvider:org.apache.cxf.ws.security.tokenstore.TokenStore getTokenStore(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.policy.interceptors.IssuedTokenInterceptorProvider:org.apache.cxf.ws.security.trust.STSClient getClient(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.policy.interceptors.IssuedTokenInterceptorProvider$IssuedTokenOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationTokenInterceptorProvider:org.apache.cxf.ws.security.tokenstore.TokenStore getTokenStore(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationTokenInterceptorProvider:void mapSecurityProps(org.apache.cxf.message.Message,java.util.Map)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationTokenInterceptorProvider:org.apache.cxf.ws.security.trust.STSClient getClient(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.wss4j.AbstractWSS4JInterceptor:java.lang.String getPassword(java.lang.Object)",
            "org.apache.cxf.ws.security.wss4j.AbstractWSS4JInterceptor:java.lang.Object getProperty(java.lang.Object,java.lang.String)",
            "org.apache.cxf.attachment.AttachmentDeserializer:void setStreamedAttachmentProperties(org.apache.cxf.io.CachedOutputStream)",
            "org.apache.cxf.jaxws.handler.logical.LogicalMessageImpl:void setPayload(javax.xml.transform.Source)",
            "org.apache.cxf.jaxws.interceptors.WrapperClassOutInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.ws.policy.PolicyEngineImpl:org.apache.cxf.ws.policy.EndpointPolicy getEndpointPolicy(org.apache.cxf.service.model.EndpointInfo,boolean,org.apache.cxf.ws.policy.Assertor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.PolicyEngineImpl:org.apache.cxf.ws.policy.EndpointPolicy getClientEndpointPolicy(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.transport.Conduit)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:org.apache.cxf.ws.policy.EndpointPolicy getServerEndpointPolicy(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.transport.Destination)"
        ]
    },
    "org.apache.cxf.ws.policy.attachment.wsdl11.Wsdl11AttachmentPolicyProvider:org.apache.cxf.service.model.Extensible getMessageTypeInfo(javax.xml.namespace.QName,org.apache.cxf.service.model.DescriptionInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.attachment.wsdl11.Wsdl11AttachmentPolicyProvider:org.apache.neethi.Policy getEffectivePolicy(org.apache.cxf.service.model.BindingMessageInfo)",
            "org.apache.cxf.ws.policy.attachment.wsdl11.Wsdl11AttachmentPolicyProvider:org.apache.neethi.Policy getEffectivePolicy(org.apache.cxf.service.model.BindingFaultInfo)"
        ]
    },
    "org.apache.cxf.service.model.UnwrappedOperationInfo:java.lang.Object getProperty(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.JAXBDataBase:java.lang.'annotation'.Annotation[] getJAXBAnnotation(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.jaxb.JAXBSchemaInitializer:void begin(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.message.MessageImpl:java.lang.Object getContextualProperty(java.lang.String)",
            "org.apache.cxf.service.model.UnwrappedOperationInfo:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:java.lang.Object getProperty(java.lang.String,java.lang.Class)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromClass()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeWSDLOperation(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean initializeParameter(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int,java.lang.Class,java.lang.reflect.Type)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createBareMessage(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.OperationInfo,boolean)",
            "org.apache.cxf.binding.soap.SoapBindingConfiguration:java.lang.String getSoapAction(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.jaxws.JaxWsProxyFactoryBean:boolean needWrapperClassInterceptor(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean:void initializeWSDLOperation(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.jaxws.WrapperClassGenerator:java.util.Set generate()"
        ]
    },
    "org.apache.cxf.service.model.AbstractPropertiesHolder:java.lang.Object getProperty(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.JAXBDataBinding:void initialize(org.apache.cxf.service.Service)",
            "org.apache.cxf.interceptor.ClientFaultConverter:void processFaultDetail(org.apache.cxf.interceptor.Fault,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:org.apache.cxf.service.model.MessageInfo setMessage(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo,boolean,org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.MessageInfo)",
            "org.apache.cxf.transport.ChainInitiationObserver:void setExchangeProperties(org.apache.cxf.message.Exchange,org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ClientImpl:void setExchangeProperties(org.apache.cxf.message.Exchange,org.apache.cxf.endpoint.Endpoint,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.ws.policy.AbstractPolicyInterceptor:org.apache.cxf.service.model.BindingFaultInfo getBindingFaultInfo(org.apache.cxf.message.Message,java.lang.Exception,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.validation.Schema createSchema(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.validation.Schema getSchema(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.service.model.UnwrappedOperationInfo:java.lang.Object getProperty(java.lang.String,java.lang.Class)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperationForWrapperElement(org.apache.cxf.message.Exchange,javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.binding.soap.interceptor.RPCInInterceptor:void setMessage(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:javax.wsdl.Definition build(java.util.Map)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:javax.wsdl.PortType buildPortType(org.apache.cxf.service.model.InterfaceInfo,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildPortTypeOperation(javax.wsdl.PortType,java.util.Collection,javax.wsdl.Definition)",
            "org.apache.cxf.jaxws.interceptors.WrapperClassOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.interceptors.WrapperClassInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.binding.soap.JaxWsSoapBindingConfiguration:java.lang.String getStyle(org.apache.cxf.service.model.OperationInfo)"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.'annotation'.Annotation[] getMethodParameterAnnotations(org.apache.cxf.service.model.MessagePartInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createWrappedMessageSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.AbstractMessageContainer,org.apache.cxf.service.model.AbstractMessageContainer,org.apache.ws.commons.schema.XmlSchema,javax.xml.namespace.QName)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.util.Map getJaxbAnnoMap(org.apache.cxf.service.model.MessagePartInfo)"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.'annotation'.Annotation[] getMethodAnnotations(org.apache.cxf.service.model.MessagePartInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createWrappedMessageSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.AbstractMessageContainer,org.apache.cxf.service.model.AbstractMessageContainer,org.apache.ws.commons.schema.XmlSchema,javax.xml.namespace.QName)"
        ]
    },
    "org.apache.cxf.service.factory.DefaultServiceConfiguration:java.lang.Boolean isWrapperPartNillable(org.apache.cxf.service.model.MessagePartInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isWrapperPartNillable(org.apache.cxf.service.model.MessagePartInfo)"
        ]
    },
    "org.apache.cxf.service.factory.DefaultServiceConfiguration:java.lang.Long getWrapperPartMaxOccurs(org.apache.cxf.service.model.MessagePartInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:long getWrapperPartMaxOccurs(org.apache.cxf.service.model.MessagePartInfo)"
        ]
    },
    "org.apache.cxf.service.factory.DefaultServiceConfiguration:java.lang.Long getWrapperPartMinOccurs(org.apache.cxf.service.model.MessagePartInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:long getWrapperPartMinOccurs(org.apache.cxf.service.model.MessagePartInfo)"
        ]
    },
    "org.apache.cxf.binding.soap.SoapBindingConfiguration:boolean isHeader(org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.service.model.MessagePartInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.soap.SoapBindingFactory:void setupHeaders(org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.service.model.BindingMessageInfo,org.apache.cxf.service.model.BindingMessageInfo,org.apache.cxf.service.model.MessageInfo,org.apache.cxf.binding.soap.SoapBindingConfiguration)"
        ]
    },
    "org.apache.cxf.binding.soap.SoapBindingConfiguration:java.lang.String getSoapAction(org.apache.cxf.service.model.OperationInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.soap.SoapBindingFactory:org.apache.cxf.service.model.BindingInfo createBindingInfo(org.apache.cxf.service.model.ServiceInfo,java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.cxf.jaxws.support.JaxWsServiceConfiguration:java.lang.Boolean isWrapperPartQualified(org.apache.cxf.service.model.MessagePartInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isWrapperPartQualified(org.apache.cxf.service.model.MessagePartInfo)"
        ]
    },
    "org.apache.cxf.jaxws.WrapperClassGenerator:java.lang.'annotation'.Annotation[] getMethodParameterAnnotations(org.apache.cxf.service.model.MessagePartInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.WrapperClassGenerator:java.util.List getJaxbAnnos(org.apache.cxf.service.model.MessagePartInfo)"
        ]
    },
    "org.apache.cxf.jaxws.binding.soap.SOAPBindingImpl:boolean isMTOMEnabled()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.xmlbeans.DataReaderImpl:java.lang.Object read(org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamReader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.xmlbeans.DataReaderImpl:java.lang.Object read(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.xmlbeans.DataReaderImpl:java.lang.Object read(org.apache.cxf.service.model.MessagePartInfo,java.lang.Object)"
        ]
    },
    "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperation(org.apache.cxf.message.Exchange,javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.soap.interceptor.RPCInInterceptor:org.apache.cxf.service.model.BindingOperationInfo getOperation(org.apache.cxf.message.Message,javax.xml.namespace.QName)",
            "org.apache.cxf.jaxws.handler.AbstractJAXWSHandlerInterceptor:void setupBindingOperationInfo(org.apache.cxf.message.Exchange,java.lang.Object)"
        ]
    },
    "org.apache.cxf.binding.soap.model.SoapBindingInfo:java.lang.String getStyle(org.apache.cxf.service.model.OperationInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.soap.SoapBindingFactory:org.apache.cxf.binding.Binding createBinding(org.apache.cxf.service.model.BindingInfo)"
        ]
    },
    "org.apache.cxf.binding.soap.model.SoapBindingInfo:java.lang.String getSoapAction(org.apache.cxf.service.model.OperationInfo)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.service.model.UnwrappedOperationInfo:org.apache.cxf.service.model.FaultInfo getFault(javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.model.UnwrappedOperationInfo:org.apache.cxf.service.model.FaultInfo getFault(javax.xml.namespace.QName)"
        ]
    },
    "org.apache.cxf.tools.common.ToolContext:java.lang.Object get(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.tools.common.ToolContext:java.lang.Object get(java.lang.String,java.lang.Class,java.lang.Object)",
            "org.apache.cxf.tools.common.ToolContext:boolean getBooleanValue(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.tools.common.ToolContext:java.lang.Object get(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.tools.common.ToolContext:java.lang.Object get(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.tools.common.ClassUtils:void compile(org.apache.cxf.tools.common.ToolContext)",
            "org.apache.cxf.xmlbeans.tools.XMLBeansToolingDataBinding:void generate(org.apache.cxf.tools.common.ToolContext)"
        ]
    },
    "org.apache.cxf.tools.common.ToolContext:boolean optionSet(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.tools.common.ToolContext:void addParameters(java.util.Map)",
            "org.apache.cxf.tools.common.ToolContext:java.lang.Object get(java.lang.String,java.lang.Object)",
            "org.apache.cxf.tools.common.ToolContext:javax.xml.namespace.QName getQName(java.lang.String,java.lang.String)",
            "org.apache.cxf.xmlbeans.tools.XMLBeansToolingDataBinding:void generate(org.apache.cxf.tools.common.ToolContext)"
        ]
    },
    "org.apache.cxf.tools.common.ToolContext:boolean isVerbose()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.tools.common.AbstractCXFToolContainer:boolean isVerboseOn()",
            "org.apache.cxf.tools.common.ClassUtils:void compile(org.apache.cxf.tools.common.ToolContext)"
        ]
    },
    "org.apache.cxf.tools.common.ToolContext:boolean validateWSDL()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.tools.common.ToolContext:javax.xml.namespace.QName getQName(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.tools.common.ToolContext:javax.xml.namespace.QName getQName(java.lang.String)"
        ]
    },
    "org.apache.cxf.tools.common.toolspec.AbstractToolContainer:java.lang.String getCatalogURL()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.xmlbeans.tools.XMLBeansToolingDataBinding:void generate(org.apache.cxf.tools.common.ToolContext)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.tools.common.model.JavaMethod:void addParameter(org.apache.cxf.tools.common.model.JavaParameter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.tools.common.model.JavaClass:org.apache.cxf.tools.common.model.JavaMethod appendSetter(org.apache.cxf.tools.common.model.JavaField)"
        ]
    },
    "org.apache.cxf.management.interceptor.AbstractMessageResponseTimeInterceptor:void increaseCounter(org.apache.cxf.message.Exchange,org.apache.cxf.management.counters.MessageHandlingTimeRecorder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.management.interceptor.AbstractMessageResponseTimeInterceptor:void endHandlingMessage(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.management.interceptor.AbstractMessageResponseTimeInterceptor:void setOneWayMessage(org.apache.cxf.message.Exchange)"
        ]
    },
    "org.apache.cxf.management.jmx.InstrumentationManagerImpl:void register()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.management.counters.CounterRepository:org.apache.cxf.management.counters.Counter createCounter(javax.management.ObjectName,org.apache.cxf.management.counters.MessageHandlingTimeRecorder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.management.counters.CounterRepository:void increaseCounter(javax.management.ObjectName,org.apache.cxf.management.counters.MessageHandlingTimeRecorder)"
        ]
    },
    "org.apache.cxf.interceptor.OutFaultChainInitiatorObserver:java.util.SortedSet getPhases()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver:void onMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.ClientOutFaultObserver:java.util.SortedSet getPhases()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver:void onMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.OutgoingChainInterceptor:org.apache.cxf.phase.PhaseInterceptorChain getChain(org.apache.cxf.message.Exchange)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.InFaultChainInitiatorObserver:java.util.SortedSet getPhases()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver:void onMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.http.AbstractHTTPTransportFactory:void configure(java.lang.Object,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.AbstractHTTPTransportFactory:org.apache.cxf.transport.Conduit getConduit(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.transport.http.AbstractHTTPTransportFactory:void configure(java.lang.Object)"
        ]
    },
    "org.apache.cxf.transport.servlet.CXFNonSpringServlet:void loadBusNoConfig(javax.servlet.ServletConfig)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.servlet.CXFNonSpringServlet:void loadBus(javax.servlet.ServletConfig)"
        ]
    },
    "org.apache.cxf.transport.servlet.CXFServlet:void updateContext(javax.servlet.ServletConfig,org.springframework.context.ApplicationContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.servlet.CXFServlet:void loadSpringBus(javax.servlet.ServletConfig)",
            "org.apache.cxf.transport.servlet.CXFServlet:void onApplicationEvent(org.springframework.context.ApplicationEvent)"
        ]
    },
    "org.apache.cxf.transport.servlet.AbstractCXFServlet:void registerTransport(org.apache.cxf.transport.DestinationFactory,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.servlet.AbstractCXFServlet:void replaceDestinationFactory()"
        ]
    },
    "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine:void retrieveEngineFactory()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser$SpringJettyHTTPServerEngine:void finalizeConfig()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine:void finalizeConfig()"
        ]
    },
    "org.apache.cxf.transport.http_jetty.JettyHTTPTransportFactory:org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory getJettyHTTPServerEngineFactory()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void <init>(org.apache.cxf.Bus,org.apache.cxf.transport.http_jetty.JettyHTTPTransportFactory,org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPTransportFactory:void finalizeConfig()"
        ]
    },
    "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void registerWithBus()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineFactoryBeanDefinitionParser$SpringJettyHTTPServerEngineFactory:void setApplicationContext(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void finalizeConfig()"
        ]
    },
    "org.apache.cxf.transport.jms.JMSOldConfigHolder:org.apache.cxf.transport.jms.JMSConfiguration createJMSConfigurationFromEndpointInfo(org.apache.cxf.Bus,org.apache.cxf.service.model.EndpointInfo,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.jms.JMSTransportFactory:org.apache.cxf.transport.Conduit getConduit(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.transport.jms.JMSTransportFactory:org.apache.cxf.transport.Destination getDestination(org.apache.cxf.service.model.EndpointInfo)"
        ]
    },
    "org.apache.cxf.transport.jms.JMSConduit:void addBusListener(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.jms.JMSConduit:void sendExchange(org.apache.cxf.message.Exchange,java.lang.Object)"
        ]
    },
    "org.apache.cxf.endpoint.ManagedEndpoint:void stopServer(org.apache.cxf.endpoint.Server)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ServerLifeCycleManagerImpl:void stopServer(org.apache.cxf.endpoint.Server)"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:org.apache.cxf.phase.PhaseInterceptorChain setupInterceptorChain(org.apache.cxf.endpoint.Endpoint)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:void invoke(org.apache.cxf.endpoint.ClientCallback,org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[])",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)"
        ]
    },
    "org.apache.cxf.endpoint.ServerRegistryImpl:void register()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.addressing.policy.AddressingAssertionBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.AssertionBuilderRegistryImpl:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)"
        ]
    },
    "org.apache.cxf.ws.policy.WSPolicyFeature:void initialize(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.WSPolicyFeature:org.apache.neethi.Policy initializeEndpointPolicy(org.apache.cxf.endpoint.Endpoint,org.apache.cxf.Bus)",
            "org.apache.cxf.bus.CXFBusImpl:void initializeFeatures()"
        ]
    },
    "org.apache.cxf.ws.policy.WSPolicyFeature$1:org.apache.neethi.Policy resolveReference(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.WSPolicyFeature:org.apache.neethi.Policy resolveLocal(org.apache.neethi.PolicyReference,org.w3c.dom.Element,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.ws.policy.PolicyEngineImpl:void addBusInterceptors()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.PolicyEngineImpl:void setEnabled(boolean)"
        ]
    },
    "org.apache.cxf.ws.policy.attachment.external.ExternalAttachmentProvider:java.util.Collection readDomainExpressions(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.attachment.external.ExternalAttachmentProvider:void readDocument()"
        ]
    },
    "org.apache.cxf.ws.policy.attachment.AbstractPolicyProvider:void init()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.rm.AbstractRMInterceptor:org.apache.cxf.ws.rm.RMManager getManager()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.AbstractRMInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.RMInInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.RMOutInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.soap.RMSoapInterceptor:org.apache.cxf.ws.rm.RMManager getManager(org.apache.cxf.binding.soap.SoapMessage)"
        ]
    },
    "org.apache.cxf.ws.rm.feature.RMFeature:void initializeProvider(org.apache.cxf.interceptor.InterceptorProvider,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.feature.AbstractFeature:void initialize(org.apache.cxf.endpoint.Server,org.apache.cxf.Bus)",
            "org.apache.cxf.feature.AbstractFeature:void initialize(org.apache.cxf.endpoint.Client,org.apache.cxf.Bus)",
            "org.apache.cxf.feature.AbstractFeature:void initialize(org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.ws.rm.RMManager:void registerListeners()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.workqueue.WorkQueueManagerImpl:void register()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void register()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.workqueue.WorkQueueManagerImpl:org.apache.cxf.workqueue.AutomaticWorkQueue createAutomaticWorkQueue()"
        ]
    },
    "org.apache.cxf.tools.common.toolspec.AbstractToolContainer:org.apache.cxf.Bus getBus()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.catalog.OASISCatalogManager:org.apache.cxf.catalog.OASISCatalogManager getCatalogManager(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.WSDLQueryHandler:void writeResponse(java.lang.String,java.lang.String,org.apache.cxf.service.model.EndpointInfo,java.io.OutputStream)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updateDefinition(javax.wsdl.Definition,java.util.Map,java.util.Map,java.lang.String,org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updateSchemaImports(javax.wsdl.extensions.schema.Schema,java.util.Map,java.lang.String)",
            "org.apache.cxf.catalog.CatalogXmlSchemaURIResolver:void <init>(org.apache.cxf.Bus)",
            "org.apache.cxf.catalog.CatalogWSDLLocator:void <init>(java.lang.String,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.wsdl11.ServiceWSDLBuilder:javax.wsdl.Definition newDefinition(javax.xml.namespace.QName,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:javax.wsdl.Definition build(java.util.Map)"
        ]
    },
    "org.apache.cxf.bus.spring.SpringBusFactory:void registerApplicationContextLifeCycleListener(org.apache.cxf.Bus,org.apache.cxf.bus.spring.BusApplicationContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus finishCreatingBus(org.apache.cxf.bus.spring.BusApplicationContext)"
        ]
    },
    "org.apache.cxf.bus.resource.ResourceManagerImpl:void register()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxws.support.JaxWsEndpointImpl:void buildWsdlExtensibilities(org.apache.cxf.service.model.BindingInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.support.JaxWsEndpointImpl:void <init>(org.apache.cxf.Bus,org.apache.cxf.service.Service,org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.jaxws.support.JaxWsImplementorInfo,java.util.List,java.util.List,boolean)"
        ]
    },
    "org.apache.cxf.jaxws.ServiceImpl:void configureObject(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.ServiceImpl:java.lang.Object createPort(javax.xml.namespace.QName,org.apache.cxf.ws.addressing.EndpointReferenceType,java.lang.Class,javax.xml.ws.WebServiceFeature[])",
            "org.apache.cxf.jaxws.ServiceImpl:void configureObject(java.lang.Object)",
            "org.apache.cxf.jaxws.ServiceImpl:javax.xml.ws.Dispatch createDispatch(javax.xml.namespace.QName,java.lang.Class,javax.xml.ws.Service$Mode,javax.xml.ws.WebServiceFeature[])",
            "org.apache.cxf.jaxws.ServiceImpl:javax.xml.ws.Dispatch createDispatch(javax.xml.namespace.QName,javax.xml.bind.JAXBContext,javax.xml.ws.Service$Mode,javax.xml.ws.WebServiceFeature[])"
        ]
    },
    "org.apache.cxf.jaxws.EndpointImpl:void configureObject(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.EndpointImpl:org.apache.cxf.endpoint.ServerImpl getServer(java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxws.context.WebServiceContextResourceResolver:void register()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.interceptor.URIMappingInterceptor:java.lang.reflect.Method getMethod(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.URIMappingInterceptor:org.apache.cxf.message.MessageContentsList getParameters(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo)"
        ]
    },
    "org.apache.cxf.aegis.databinding.AegisDatabinding:java.lang.reflect.Method getMethod(org.apache.cxf.service.Service,org.apache.cxf.service.model.OperationInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.databinding.AegisDatabinding:javax.xml.namespace.QName getSuggestedName(org.apache.cxf.service.Service,org.apache.cxf.aegis.type.TypeMapping,org.apache.cxf.service.model.OperationInfo,int)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:org.apache.cxf.aegis.type.Type getParameterType(org.apache.cxf.service.Service,org.apache.cxf.aegis.type.TypeMapping,org.apache.cxf.service.model.MessagePartInfo,int)"
        ]
    },
    "org.apache.cxf.aegis.type.encoded.MarshalRegistry:org.apache.cxf.aegis.type.encoded.MarshalRegistry get(org.apache.cxf.aegis.Context)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.encoded.SoapRefType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.StructType:void writeElement(javax.xml.namespace.QName,java.lang.Object,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.SoapArrayType:void writeValue(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.encoded.TrailingBlocks:java.util.List writeBlocks(org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)"
        ]
    },
    "org.apache.cxf.aegis.type.encoded.SoapRefRegistry:org.apache.cxf.aegis.type.encoded.SoapRefRegistry get(org.apache.cxf.aegis.Context)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.encoded.SoapRefType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.TrailingBlocks:java.util.List readBlocks(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)"
        ]
    },
    "org.apache.cxf.aegis.util.stax.JDOMStreamReader:boolean shouldDeclare(org.jdom.Namespace)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.util.stax.JDOMStreamReader:void setupNamespaces(org.jdom.Element)"
        ]
    },
    "org.apache.cxf.aegis.type.basic.XMLBeanTypeInfo:boolean isNillable(javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.basic.BeanType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.BeanType:void writeObjectInternal(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,boolean)",
            "org.apache.cxf.aegis.type.basic.BeanType:void writeTypeReference(javax.xml.namespace.QName,org.apache.ws.commons.schema.XmlSchemaElement,org.apache.cxf.aegis.type.Type,org.apache.ws.commons.schema.XmlSchema)"
        ]
    },
    "org.apache.cxf.aegis.type.basic.XMLBeanTypeInfo:int getMinOccurs(javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.basic.BeanType:void writeTypeReference(javax.xml.namespace.QName,org.apache.ws.commons.schema.XmlSchemaElement,org.apache.cxf.aegis.type.Type,org.apache.ws.commons.schema.XmlSchema)"
        ]
    },
    "org.apache.cxf.aegis.type.basic.XMLBeanTypeInfo:int getMaxOccurs(javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.aegis.type.basic.XMLBeanTypeInfo:org.apache.cxf.aegis.type.basic.BeanTypePropertyInfo ensurePropertyInfo(javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.basic.XMLBeanTypeInfo:void mapProperty(java.beans.PropertyDescriptor)"
        ]
    },
    "org.apache.cxf.aegis.type.basic.InterfaceInvocationHandler:java.lang.Object doGetter(java.lang.reflect.Method,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.basic.InterfaceInvocationHandler:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])"
        ]
    },
    "org.apache.cxf.aegis.type.basic.BeanType:org.apache.cxf.aegis.type.Type getElementType(javax.xml.namespace.QName,org.apache.cxf.aegis.type.basic.BeanTypeInfo,org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.basic.BeanType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.StructType:org.apache.cxf.aegis.type.Type getElementType(javax.xml.namespace.QName,org.apache.cxf.aegis.type.basic.BeanTypeInfo,org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)"
        ]
    },
    "org.apache.cxf.aegis.type.basic.BeanType:org.apache.cxf.aegis.type.Type getType(org.apache.cxf.aegis.type.basic.BeanTypeInfo,javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.basic.BeanType:void writeObjectInternal(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,boolean)",
            "org.apache.cxf.aegis.type.basic.BeanType:void writeSchema(org.apache.ws.commons.schema.XmlSchema)"
        ]
    },
    "org.apache.cxf.aegis.type.basic.BeanType:org.apache.cxf.aegis.type.basic.BeanTypeInfo getBeanTypeInfoWithProperty(javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.basic.BeanType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.StructType:org.apache.cxf.aegis.type.basic.BeanTypeInfo getBeanTypeInfoWithProperty(javax.xml.namespace.QName)"
        ]
    },
    "org.apache.cxf.aegis.type.basic.BeanTypeInfo:boolean isNillable(javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.basic.XMLBeanTypeInfo:boolean isNillable(javax.xml.namespace.QName)",
            "org.apache.cxf.aegis.type.basic.BeanType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.BeanType:void writeObjectInternal(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,boolean)",
            "org.apache.cxf.aegis.type.basic.BeanType:void writeTypeReference(javax.xml.namespace.QName,org.apache.ws.commons.schema.XmlSchemaElement,org.apache.cxf.aegis.type.Type,org.apache.ws.commons.schema.XmlSchema)",
            "org.apache.cxf.aegis.type.java5.AnnotatedTypeInfo:boolean isNillable(javax.xml.namespace.QName)"
        ]
    },
    "org.apache.cxf.aegis.type.encoded.StructType:javax.xml.namespace.QName qualifyName(javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.encoded.StructType:org.apache.cxf.aegis.type.basic.BeanTypeInfo getBeanTypeInfoWithProperty(javax.xml.namespace.QName)",
            "org.apache.cxf.aegis.type.encoded.StructType:org.apache.cxf.aegis.type.Type getElementType(javax.xml.namespace.QName,org.apache.cxf.aegis.type.basic.BeanTypeInfo,org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.StructType:void writeProperty(javax.xml.namespace.QName,java.lang.Object,java.lang.Object,java.lang.Class,org.apache.cxf.aegis.type.basic.BeanTypeInfo)"
        ]
    },
    "org.apache.cxf.aegis.type.basic.BeanTypeInfo:java.beans.PropertyDescriptor getPropertyDescriptorFromMappedName(javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.basic.BeanType:void writeProperty(javax.xml.namespace.QName,java.lang.Object,java.lang.Object,java.lang.Class,org.apache.cxf.aegis.type.basic.BeanTypeInfo)",
            "org.apache.cxf.aegis.type.basic.BeanType:void writeObjectInternal(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,boolean)",
            "org.apache.cxf.aegis.type.basic.BeanType:java.lang.Object readProperty(java.lang.Object,javax.xml.namespace.QName)",
            "org.apache.cxf.aegis.type.basic.BeanType:java.util.Set getDependencies()",
            "org.apache.cxf.aegis.type.basic.BeanType:void writeSchema(org.apache.ws.commons.schema.XmlSchema)",
            "org.apache.cxf.aegis.type.basic.BeanTypeInfo:org.apache.cxf.aegis.type.Type getType(javax.xml.namespace.QName)",
            "org.apache.cxf.aegis.type.java5.AnnotatedTypeInfo:boolean isNillable(javax.xml.namespace.QName)",
            "org.apache.cxf.aegis.type.java5.AnnotatedTypeInfo:int getMinOccurs(javax.xml.namespace.QName)"
        ]
    },
    "org.apache.cxf.aegis.type.encoded.SoapRefType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.databinding.XMLStreamDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.aegis.databinding.ElementDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,org.w3c.dom.Element)",
            "org.apache.cxf.aegis.AegisXMLStreamDataWriter:void write(java.lang.Object,javax.xml.namespace.QName,boolean,javax.xml.stream.XMLStreamWriter,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.basic.ObjectType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.BeanType:void writeObjectInternal(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,boolean)",
            "org.apache.cxf.aegis.type.basic.BeanType:void writeElement(javax.xml.namespace.QName,java.lang.Object,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.ArrayType:void writeValue(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type,java.lang.String,java.lang.String)",
            "org.apache.cxf.aegis.type.encoded.StructType:void writeElement(javax.xml.namespace.QName,java.lang.Object,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.SoapArrayType:void writeValue(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.collection.MapType:void writeEntry(org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.type.Type,java.util.Map$Entry)"
        ]
    },
    "org.apache.cxf.aegis.AegisContext:org.apache.cxf.aegis.type.Type getRootType(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.TypeUtil:org.apache.cxf.aegis.type.Type getWriteType(org.apache.cxf.aegis.AegisContext,java.lang.Object,org.apache.cxf.aegis.type.Type)"
        ]
    },
    "org.apache.cxf.aegis.type.basic.ObjectType:org.apache.cxf.aegis.type.Type determineType(org.apache.cxf.aegis.Context,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.basic.ObjectType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.ObjectType:org.apache.cxf.aegis.type.Type determineType(org.apache.cxf.aegis.Context,java.lang.Class)",
            "org.apache.cxf.aegis.type.encoded.TrailingBlocks:java.util.List writeBlocks(org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)"
        ]
    },
    "org.apache.cxf.aegis.type.basic.BeanType:org.apache.cxf.aegis.type.Type getSuperType()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.basic.BeanType:void writeObjectInternal(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,boolean)",
            "org.apache.cxf.aegis.type.basic.BeanType:java.util.Set getDependencies()",
            "org.apache.cxf.aegis.type.basic.BeanType:org.apache.cxf.aegis.type.basic.BeanTypeInfo getBeanTypeInfoWithProperty(javax.xml.namespace.QName)",
            "org.apache.cxf.aegis.type.basic.BeanType:void writeSchema(org.apache.ws.commons.schema.XmlSchema)",
            "org.apache.cxf.aegis.type.encoded.StructType:org.apache.cxf.aegis.type.basic.BeanType superBeanType(org.apache.cxf.aegis.type.Type)"
        ]
    },
    "org.apache.cxf.aegis.type.basic.ArrayType:org.apache.cxf.aegis.type.Type getComponentType()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.AbstractTypeCreator:org.apache.cxf.aegis.type.Type createArrayType(org.apache.cxf.aegis.type.AbstractTypeCreator$TypeClassInfo)",
            "org.apache.cxf.aegis.type.basic.ArrayType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.ArrayType:java.util.Collection readCollection(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.ArrayType:java.lang.Object makeArray(java.lang.Class,java.util.Collection)",
            "org.apache.cxf.aegis.type.basic.ArrayType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.ArrayType:void writeSchema(org.apache.ws.commons.schema.XmlSchema)",
            "org.apache.cxf.aegis.type.basic.ArrayType:java.util.Set getDependencies()"
        ]
    },
    "org.apache.cxf.aegis.type.xml.SourceType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.AegisXMLStreamDataReader:java.lang.Object read(javax.xml.stream.XMLStreamReader,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.basic.ObjectType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.BeanType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.ArrayType:java.util.Collection readCollection(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.SoapRefType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.collection.MapType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)"
        ]
    },
    "org.apache.cxf.aegis.type.encoded.SoapArrayType:org.apache.cxf.aegis.type.Type getComponentType()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.encoded.SoapArrayType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.SoapArrayType:java.util.Set getDependencies()",
            "org.apache.cxf.aegis.type.encoded.SoapArrayType:javax.xml.namespace.QName getRootType()"
        ]
    },
    "org.apache.cxf.aegis.type.TypeUtil:org.apache.cxf.aegis.type.Type getWriteTypeStandalone(org.apache.cxf.aegis.AegisContext,java.lang.Object,org.apache.cxf.aegis.type.Type)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.aegis.AegisContext:org.apache.cxf.aegis.type.Type getRootType(javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.TypeUtil:org.apache.cxf.aegis.type.Type getReadType(javax.xml.stream.XMLStreamReader,org.apache.cxf.aegis.AegisContext,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.TypeUtil:org.apache.cxf.aegis.type.Type getReadTypeStandalone(javax.xml.stream.XMLStreamReader,org.apache.cxf.aegis.AegisContext,org.apache.cxf.aegis.type.Type)"
        ]
    },
    "org.apache.cxf.aegis.type.AbstractTypeCreator:org.apache.cxf.aegis.type.Type createUserType(org.apache.cxf.aegis.type.AbstractTypeCreator$TypeClassInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.AbstractTypeCreator:org.apache.cxf.aegis.type.Type createTypeForClass(org.apache.cxf.aegis.type.AbstractTypeCreator$TypeClassInfo)"
        ]
    },
    "org.apache.cxf.jaxws.support.JaxWsServiceConfiguration:javax.xml.namespace.QName getPartName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int,org.apache.cxf.service.model.MessageInfo,java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.support.JaxWsServiceConfiguration:javax.xml.namespace.QName getInPartName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)",
            "org.apache.cxf.jaxws.support.JaxWsServiceConfiguration:javax.xml.namespace.QName getOutPartName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)"
        ]
    },
    "org.apache.cxf.jaxws.support.JaxWsServiceConfiguration:javax.xml.namespace.QName getParameterName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int,int,java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.support.JaxWsServiceConfiguration:javax.xml.namespace.QName getInParameterName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)",
            "org.apache.cxf.jaxws.support.JaxWsServiceConfiguration:javax.xml.namespace.QName getOutParameterName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)"
        ]
    },
    "org.apache.cxf.jaxws.support.JaxWsServiceConfiguration:java.lang.String getResponseWrapperPartName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createOutputWrappedMessageParts(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,org.apache.cxf.service.model.MessageInfo)"
        ]
    },
    "org.apache.cxf.jaxws.support.JaxWsServiceConfiguration:java.lang.Boolean isInParam(java.lang.reflect.Method,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isInParam(java.lang.reflect.Method,int)",
            "org.apache.cxf.jaxws.support.JaxWsServiceConfiguration:int getPartIndex(java.lang.reflect.Method,int,boolean)"
        ]
    },
    "org.apache.cxf.jaxws.support.JaxWsServiceConfiguration:java.lang.Boolean isOutParam(java.lang.reflect.Method,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isOutParam(java.lang.reflect.Method,int)",
            "org.apache.cxf.jaxws.support.JaxWsServiceConfiguration:int getPartIndex(java.lang.reflect.Method,int,boolean)"
        ]
    },
    "org.apache.cxf.jaxws.support.JaxWsServiceConfiguration:java.lang.Boolean isHeader(java.lang.reflect.Method,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isHeader(java.lang.reflect.Method,int)"
        ]
    },
    "org.apache.cxf.jaxws.context.WebServiceContextImpl:java.security.Principal getUserPrincipal()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxws.context.WebServiceContextImpl:boolean isUserInRole(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxws.context.WrappedMessageContext:java.lang.Object put(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.context.WrappedMessageContext:void putAll(java.util.Map)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:java.lang.Object put(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cxf.xmlbeans.XmlBeansSchemaInitializer:void begin(org.apache.cxf.service.model.MessagePartInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.ServiceModelVisitor:void visitOperation(org.apache.cxf.service.model.OperationInfo)"
        ]
    },
    "org.apache.cxf.xmlbeans.XmlBeansSchemaInitializer:void checkForExistence(org.apache.cxf.service.model.MessagePartInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.xmlbeans.XmlBeansSchemaInitializer:void begin(org.apache.cxf.service.model.MessagePartInfo)"
        ]
    },
    "org.apache.cxf.xmlbeans.tools.XMLBeansToolingDataBinding:java.lang.String getWrappedElementType(javax.xml.namespace.QName,javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.helpers.MapNamespaceContext:void addNamespace(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.helpers.HttpHeaderHelper:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.HttpHeaderHelper:java.util.List getHeader(java.util.Map,java.lang.String)",
            "org.apache.cxf.helpers.HttpHeaderHelper:java.lang.String getHeaderKey(java.lang.String)",
            "org.apache.cxf.helpers.HttpHeaderHelper:java.lang.String mapCharset(java.lang.String)",
            "org.apache.cxf.helpers.HttpHeaderHelper:void <clinit>()",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void copyRequestHeaders(org.apache.cxf.message.Message,java.util.Map)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void setupMessage(org.apache.cxf.message.Message,javax.servlet.ServletConfig,javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponseInternal()",
            "org.apache.cxf.transport.http.gzip.GZIPOutInterceptor:org.apache.cxf.transport.http.gzip.GZIPOutInterceptor$UseGzip gzipPermitted(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.gzip.GZIPInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.jms.JMSUtils:java.lang.String getEncoding(java.lang.String)",
            "org.apache.cxf.attachment.AttachmentUtil:java.lang.String getAttchmentPartHeader(org.apache.cxf.message.Attachment)",
            "org.apache.cxf.aegis.type.mtom.DataHandlerType:java.lang.Object wrapBytes(byte[],java.lang.String)"
        ]
    },
    "org.apache.cxf.common.logging.Log4jLogger:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.logging.Log4jLogger:void setLevel(java.util.logging.Level)",
            "org.apache.cxf.common.logging.Log4jLogger:void internalLogFormatted(java.lang.String,java.util.logging.LogRecord)",
            "org.apache.cxf.common.logging.Log4jLogger:java.util.logging.Level fromL4J(org.apache.log4j.Level)",
            "org.apache.cxf.common.logging.Log4jLogger:void access$100(java.util.logging.LogRecord,java.lang.String)",
            "org.apache.cxf.common.logging.Log4jLogger:java.util.Map access$200()",
            "org.apache.cxf.common.logging.Log4jLogger:void <clinit>()",
            "org.apache.cxf.common.logging.Log4jLogger$HandlerWrapper:void append(org.apache.log4j.spi.LoggingEvent)",
            "org.apache.cxf.common.logging.Log4jLogger$HandlerWrapper:org.apache.log4j.Priority getThreshold()"
        ]
    },
    "org.apache.cxf.common.util.WeakIdentityHashMap:java.lang.Object put(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.MapNamespaceContext:void addNamespace(java.lang.String,java.lang.String)",
            "org.apache.cxf.helpers.HttpHeaderHelper:java.lang.String mapCharset(java.lang.String)",
            "org.apache.cxf.helpers.HttpHeaderHelper:void <clinit>()",
            "org.apache.cxf.helpers.XMLUtils:javax.xml.transform.TransformerFactory getTransformerFactory()",
            "org.apache.cxf.helpers.XMLUtils:javax.xml.parsers.DocumentBuilderFactory getDocumentBuilderFactory()",
            "org.apache.cxf.common.xmlschema.FixedExtensionDeserializer:void deserialize(org.apache.ws.commons.schema.XmlSchemaObject,javax.xml.namespace.QName,org.w3c.dom.Node)",
            "org.apache.cxf.common.logging.Log4jLogger:void <clinit>()",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.common.util.ASMHelper:org.apache.cxf.common.util.ASMHelper$TypeHelperClassLoader getTypeHelperClassLoader(java.lang.Class)",
            "org.apache.cxf.common.util.ASMHelper:void <clinit>()",
            "org.apache.cxf.common.util.ASMHelper$TypeHelperClassLoader:java.lang.Class defineClass(java.lang.String,byte[])",
            "org.apache.cxf.common.util.CacheMap:void updateMainDataMap()",
            "org.apache.cxf.common.util.CacheMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.common.util.CacheMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.common.util.ParamReader:void readCode()",
            "org.apache.cxf.common.util.TwoStageMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.resource.URIResolver:void tryRemote(java.lang.String)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.util.List getBeanListForId(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void mapElementToJaxbProperty(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder,java.lang.String,java.lang.Class)",
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:java.lang.Object unmarshalFactoryString(java.lang.String,java.lang.Class)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void initWildcardDefinitionMap()",
            "org.apache.cxf.jaxb.JAXBUtils:void <clinit>()",
            "org.apache.cxf.jaxb.JAXBDataBinding:void initialize(org.apache.cxf.service.Service)",
            "org.apache.cxf.jaxb.JAXBDataBinding:org.apache.cxf.jaxb.JAXBDataBinding$CachedContextAndSchemas createJAXBContextAndSchemas(java.util.Set,java.lang.String)",
            "org.apache.cxf.jaxb.JAXBDataBinding:void addToObjectFactoryCache(java.lang.Package,java.lang.Class)",
            "org.apache.cxf.jaxb.JAXBDataBinding$1:void <init>(org.apache.cxf.jaxb.JAXBDataBinding,java.util.List)",
            "org.apache.cxf.management.jmx.export.runtime.ModelMBeanInfoSupporter:void addModelMBeanMethod(java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String,java.lang.String,javax.management.Descriptor)",
            "org.apache.cxf.management.jmx.export.runtime.ModelMBeanInfoSupporter:void addModelMBeanNotification(java.lang.String[],java.lang.String,java.lang.String,javax.management.Descriptor)",
            "org.apache.cxf.management.jmx.export.runtime.ModelMBeanInfoSupporter:void addModelMBeanAttribute(java.lang.String,java.lang.String,boolean,boolean,boolean,java.lang.String,javax.management.Descriptor)",
            "org.apache.cxf.management.jmx.export.runtime.ModelMBeanInfoSupporter:void addModelMBeanConstructor(java.lang.reflect.Constructor,java.lang.String,javax.management.Descriptor)",
            "org.apache.cxf.management.counters.CounterRepository:void increaseCounter(javax.management.ObjectName,org.apache.cxf.management.counters.MessageHandlingTimeRecorder)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startPrefixMapping(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:void addNs(java.lang.String,java.lang.String)",
            "org.apache.cxf.message.MessageImpl:void setContent(java.lang.Class,java.lang.Object)",
            "org.apache.cxf.headers.HeaderManagerImpl:void registerHeaderProcessor(org.apache.cxf.headers.HeaderProcessor)",
            "org.apache.cxf.interceptor.StaxOutInterceptor:javax.xml.stream.XMLOutputFactory getXMLOutputFactory(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxInInterceptor:javax.xml.stream.XMLInputFactory getXMLInputFactory(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.FIStaxOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.ConduitInitiatorManagerImpl:void registerConduitInitiator(java.lang.String,org.apache.cxf.transport.ConduitInitiator)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void writeResponse(java.lang.String,java.lang.String,org.apache.cxf.service.model.EndpointInfo,java.io.OutputStream)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updateDefinition(javax.wsdl.Definition,java.util.Map,java.util.Map,java.lang.String,org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updateSchemaImports(javax.wsdl.extensions.schema.Schema,java.util.Map,java.lang.String)",
            "org.apache.cxf.transport.http.Cookie:void handleSetCookie(java.util.Map,java.util.List)",
            "org.apache.cxf.transport.http.DigestAuthSupplier:java.lang.String getAuthorizationForRealm(org.apache.cxf.transport.http.HTTPConduit,java.net.URL,org.apache.cxf.message.Message,java.lang.String,java.lang.String)",
            "org.apache.cxf.transport.http.HTTPConduit:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:void setHeadersByAuthorizationPolicy(org.apache.cxf.message.Message,java.net.URL,java.util.Map)",
            "org.apache.cxf.transport.http.HTTPConduit:void setHeadersByClientPolicy(org.apache.cxf.message.Message,java.util.Map)",
            "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection authorizationRetransmit(java.net.HttpURLConnection,org.apache.cxf.message.Message,org.apache.cxf.io.CacheAndWriteOutputStream)",
            "org.apache.cxf.transport.http.HTTPConduit:void setBasicAuthHeader(java.lang.String,java.lang.String,java.util.Map)",
            "org.apache.cxf.transport.http.HTTPConduit:void setProxyBasicAuthHeader(java.lang.String,java.lang.String,java.util.Map)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void copyRequestHeaders(org.apache.cxf.message.Message,java.util.Map)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void setPolicies(java.util.Map)",
            "org.apache.cxf.transport.http.gzip.GZIPOutInterceptor:void addHeader(org.apache.cxf.message.Message,java.lang.String,java.lang.String)",
            "org.apache.cxf.transport.DestinationFactoryManagerImpl:void registerDestinationFactory(java.lang.String,org.apache.cxf.transport.DestinationFactory)",
            "org.apache.cxf.transport.servlet.ServletContextResourceResolver:java.lang.Object resolve(java.lang.String,java.lang.Class)",
            "org.apache.cxf.transport.servlet.ServletTransportFactory:org.apache.cxf.transport.Destination getDestination(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.servlet.AbstractCXFServlet:void init(javax.servlet.ServletConfig)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPTransportFactory:org.apache.cxf.transport.http_jetty.JettyHTTPDestination createDestination(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void setEnginesList(java.util.List)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void setTLSServerParametersForPort(int,org.apache.cxf.configuration.jsse.TLSServerParameters)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine createJettyHTTPServerEngine(int,java.lang.String)",
            "org.apache.cxf.transport.jms.JMSUtils:void addContentTypeToProtocolHeader(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.jms.JMSConduit:void sendExchange(org.apache.cxf.message.Exchange,java.lang.Object)",
            "org.apache.cxf.NSManager:void resolveConstants(java.lang.Class)",
            "org.apache.cxf.extension.RegistryImpl:void register(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.endpoint.ClientImpl:java.util.Map getRequestContext()",
            "org.apache.cxf.endpoint.ClientImpl:java.util.Map getResponseContext()",
            "org.apache.cxf.endpoint.ClientImpl:void setThreadLocalRequestContext(boolean)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map)",
            "org.apache.cxf.endpoint.ClientImpl$EchoContext:java.lang.Object put(java.lang.String,java.lang.Object)",
            "org.apache.cxf.ws.addressing.ContextUtils:java.lang.String getActionFromMessageAttributes(org.apache.cxf.service.model.MessageInfo)",
            "org.apache.cxf.ws.addressing.MAPAggregator:boolean validateIncomingMAPs(org.apache.cxf.ws.addressing.AddressingProperties,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void cacheExchange(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.addressing.AddressingProperties)",
            "org.apache.cxf.ws.policy.PolicyRegistryImpl:void register(java.lang.String,org.apache.neethi.Policy)",
            "org.apache.cxf.ws.security.policy.model.ContentEncryptedElements:void addDeclaredNamespaces(java.lang.String,java.lang.String)",
            "org.apache.cxf.ws.security.policy.model.SignedEncryptedElements:void addDeclaredNamespaces(java.lang.String,java.lang.String)",
            "org.apache.cxf.ws.security.policy.model.RequiredElements:void addDeclaredNamespaces(java.lang.String,java.lang.String)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationOutInterceptor:void renewToken(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.ws.security.tokenstore.SecurityToken,org.apache.cxf.ws.security.policy.model.SecureConversationToken)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationTokenInterceptorProvider:void mapSecurityProps(org.apache.cxf.message.Message,java.util.Map)",
            "org.apache.cxf.ws.security.trust.STSClient:org.apache.cxf.ws.security.tokenstore.SecurityToken requestSecurityToken(java.lang.String,java.lang.String,java.lang.String,org.apache.cxf.ws.security.tokenstore.SecurityToken)",
            "org.apache.cxf.ws.security.trust.STSClient:boolean validateSecurityToken(org.apache.cxf.ws.security.tokenstore.SecurityToken,java.lang.String)",
            "org.apache.cxf.ws.security.trust.STSClient:void cancelSecurityToken(org.apache.cxf.ws.security.tokenstore.SecurityToken)",
            "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:void add(org.apache.cxf.ws.security.tokenstore.SecurityToken)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:java.util.Map handleSupportingTokens(org.apache.cxf.ws.security.policy.model.SupportingToken,boolean,java.util.Map)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:org.apache.ws.security.components.crypto.Crypto getCrypto(org.apache.cxf.ws.security.policy.model.TokenWrapper,java.lang.String,java.lang.String)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:java.util.Properties getProps(java.lang.Object,org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.wss4j.AbstractWSS4JInterceptor:void setProperty(java.lang.String,java.lang.String)",
            "org.apache.cxf.ws.security.wss4j.AbstractWSS4JInterceptor:org.apache.ws.security.components.crypto.Crypto loadSignatureCrypto(org.apache.ws.security.handler.RequestData)",
            "org.apache.cxf.ws.security.wss4j.AbstractWSS4JInterceptor:org.apache.ws.security.components.crypto.Crypto loadDecryptionCrypto(org.apache.ws.security.handler.RequestData)",
            "org.apache.cxf.ws.security.wss4j.AbstractWSS4JInterceptor:org.apache.ws.security.components.crypto.Crypto loadEncryptionCrypto(org.apache.ws.security.handler.RequestData)",
            "org.apache.cxf.ws.rm.Source:void addSequence(org.apache.cxf.ws.rm.SourceSequence,boolean)",
            "org.apache.cxf.ws.rm.Source:void setCurrent(org.apache.cxf.ws.rm.Identifier,org.apache.cxf.ws.rm.SourceSequence)",
            "org.apache.cxf.ws.rm.Destination:void addSequence(org.apache.cxf.ws.rm.DestinationSequence,boolean)",
            "org.apache.cxf.ws.rm.RMManager:org.apache.cxf.ws.rm.RMEndpoint getReliableEndpoint(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.RMManager:void recoverReliableEndpoint(org.apache.cxf.endpoint.Endpoint,org.apache.cxf.transport.Conduit)",
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl:org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl$ResendCandidate cacheUnacknowledged(org.apache.cxf.message.Message)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void <init>(java.util.SortedSet)",
            "org.apache.cxf.workqueue.WorkQueueManagerImpl:void addNamedWorkQueue(java.lang.String,org.apache.cxf.workqueue.AutomaticWorkQueue)",
            "org.apache.cxf.databinding.AbstractDataBinding:void <init>()",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void <clinit>()",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.bind.JAXBElement getServiceNameType(javax.xml.namespace.QName,java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:void setInterfaceName(org.apache.cxf.ws.addressing.EndpointReferenceType,javax.xml.namespace.QName)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:void setWSDLLocation(org.apache.cxf.ws.addressing.EndpointReferenceType,java.lang.String[])",
            "org.apache.cxf.service.model.BindingOperationInfo:void <init>(org.apache.cxf.service.model.BindingInfo,org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:void addMessagePart(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:void setProperty(java.lang.String,java.lang.Object)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:void addExtensionAttribute(javax.xml.namespace.QName,java.lang.Object)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperationForWrapperElement(org.apache.cxf.message.Exchange,javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.service.model.InterfaceInfo:void addOperation(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.ServiceInfo:void initMessagesMap()",
            "org.apache.cxf.service.model.BindingInfo:void addOperation(org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.service.model.OperationInfo:void addFault(org.apache.cxf.service.model.FaultInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createEndpoints()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isWrapped(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isRPC(java.lang.reflect.Method)",
            "org.apache.cxf.binding.BindingFactoryManagerImpl:void registerBindingFactory(java.lang.String,org.apache.cxf.binding.BindingFactory)",
            "org.apache.cxf.binding.soap.interceptor.SoapPreProtocolOutInterceptor:void setSoapAction(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.SoapVersionFactory:void register(org.apache.cxf.binding.soap.SoapVersion)",
            "org.apache.cxf.clustering.FailoverTargetSelector:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.clustering.FailoverTargetSelector:void overrideAddressProperty(java.util.Map)",
            "org.apache.cxf.tools.common.ToolContext:void put(java.lang.String,java.lang.Object)",
            "org.apache.cxf.tools.common.ToolContext:void addNamespacePackageMap(java.lang.String,java.lang.String)",
            "org.apache.cxf.tools.common.ToolContext:void addExcludeNamespacePackageMap(java.lang.String,java.lang.String)",
            "org.apache.cxf.tools.common.VelocityGenerator:void setCommonAttributes()",
            "org.apache.cxf.tools.common.VelocityGenerator:void setAttributes(java.lang.String,java.lang.Object)",
            "org.apache.cxf.tools.common.model.JavaModel:void addInterface(java.lang.String,org.apache.cxf.tools.common.model.JavaInterface)",
            "org.apache.cxf.tools.common.model.JavaModel:void addExceptionClass(java.lang.String,org.apache.cxf.tools.common.model.JavaExceptionClass)",
            "org.apache.cxf.tools.common.model.JavaModel:void addServiceClass(java.lang.String,org.apache.cxf.tools.common.model.JavaServiceClass)",
            "org.apache.cxf.tools.common.model.JavaType:void <clinit>()",
            "org.apache.cxf.tools.common.model.JavaMethod:void addAnnotation(java.lang.String,org.apache.cxf.tools.common.model.JAnnotation)",
            "org.apache.cxf.tools.common.model.JavaMethod:void <clinit>()",
            "org.apache.cxf.tools.common.model.JavaParameter:void addAnnotation(java.lang.String,org.apache.cxf.tools.common.model.JAnnotation)",
            "org.apache.cxf.tools.util.ToolsStaxUtils:java.util.List getTags(java.io.File)",
            "org.apache.cxf.tools.util.ToolsStaxUtils:org.apache.cxf.tools.common.Tag getTagTree(java.io.InputStream,java.util.List)",
            "org.apache.cxf.tools.util.BuiltInTypesJavaMappingUtil:void <clinit>()",
            "org.apache.cxf.tools.util.SOAPBindingUtil:void <clinit>()",
            "org.apache.cxf.tools.util.PropertyUtil:void load(java.io.InputStream,java.lang.String)",
            "org.apache.cxf.tools.util.ClassCollector:void addSeiClassName(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.tools.util.ClassCollector:void addTypesClassName(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.tools.util.ClassCollector:void addServerClassName(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.tools.util.ClassCollector:void addImplClassName(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.tools.util.ClassCollector:void addClientClassName(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.tools.util.ClassCollector:void addServiceClassName(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.tools.util.ClassCollector:void addExceptionClassName(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.catalog.CatalogXmlSchemaURIResolver:org.xml.sax.InputSource resolveEntity(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.wsdl11.SchemaUtil:void addSchema(java.lang.String,javax.wsdl.extensions.schema.Schema)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void parseWSDL(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void registerWSDLExtensibilityPlugins(javax.wsdl.extensions.ExtensionRegistry)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildTypes(java.util.Collection,java.util.Map,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addNamespace(java.lang.String,java.lang.String,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(java.net.URL)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(org.w3c.dom.Element)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void addDefinition(java.lang.Object,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition loadDefinition(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void putSchemasForDefinition(javax.wsdl.Definition,org.apache.cxf.service.model.ServiceSchemaInfo)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void processExtension(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadAndRegister(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void <init>(java.util.Map,java.util.Map)",
            "org.apache.cxf.bus.CXFBusImpl:void setExtension(java.lang.Object,java.lang.Class)",
            "org.apache.cxf.attachment.AttachmentImpl:void setHeader(java.lang.String,java.lang.String)",
            "org.apache.cxf.attachment.AttachmentUtil:java.util.Map getDHMap(java.util.Collection)",
            "org.apache.cxf.frontend.ClientProxyFactoryBean:java.lang.Object create()",
            "org.apache.cxf.frontend.SimpleMethodDispatcher:void bind(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method[])",
            "org.apache.cxf.frontend.SimpleMethodDispatcher:org.apache.cxf.service.model.BindingOperationInfo getBindingOperation(java.lang.reflect.Method,org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory:org.apache.cxf.endpoint.Endpoint createEndpoint()",
            "org.apache.cxf.aegis.Context:void setProperty(java.lang.Object)",
            "org.apache.cxf.aegis.util.jdom.StaxBuilder:void <clinit>()",
            "org.apache.cxf.aegis.util.stax.JDOMStreamReader:void declare(org.jdom.Namespace)",
            "org.apache.cxf.aegis.databinding.XMLStreamDataWriter:void setProperty(java.lang.String,java.lang.Object)",
            "org.apache.cxf.aegis.databinding.ElementDataWriter:void setProperty(java.lang.String,java.lang.Object)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void initializeMessage(org.apache.cxf.service.Service,org.apache.cxf.aegis.type.TypeMapping,org.apache.cxf.service.model.AbstractMessageContainer,int,java.util.Set)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:org.apache.cxf.aegis.type.Type getParameterType(org.apache.cxf.service.Service,org.apache.cxf.aegis.type.TypeMapping,org.apache.cxf.service.model.MessagePartInfo,int)",
            "org.apache.cxf.aegis.type.basic.XMLBeanTypeInfo:org.apache.cxf.aegis.type.basic.BeanTypePropertyInfo ensurePropertyInfo(javax.xml.namespace.QName)",
            "org.apache.cxf.aegis.type.basic.InterfaceInvocationHandler:void writeProperty(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.aegis.type.basic.BeanTypeInfo:void mapType(javax.xml.namespace.QName,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.basic.BeanTypeInfo:void mapAttribute(java.lang.String,javax.xml.namespace.QName)",
            "org.apache.cxf.aegis.type.basic.BeanTypeInfo:void mapElement(java.lang.String,javax.xml.namespace.QName)",
            "org.apache.cxf.aegis.type.basic.BeanTypeInfo:void mapTypeName(javax.xml.namespace.QName,javax.xml.namespace.QName)",
            "org.apache.cxf.aegis.type.encoded.MarshalRegistry:java.lang.String getInstanceId(java.lang.Object)",
            "org.apache.cxf.aegis.type.XMLTypeCreator:org.w3c.dom.Document getDocument(java.lang.Class)",
            "org.apache.cxf.aegis.type.DefaultTypeMapping:void register(org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.collection.MapType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.jaxws.handler.HandlerResolverImpl:java.util.List getHandlerChain(javax.xml.ws.handler.PortInfo)",
            "org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean:void initSchemaLocations()",
            "org.apache.cxf.jaxws.support.JaxWsServiceConfiguration:javax.jws.WebParam getWebParam(java.lang.reflect.Method,int)",
            "org.apache.cxf.jaxws.support.JaxWsServiceConfiguration:java.lang.Class getResponseWrapper(java.lang.reflect.Method)",
            "org.apache.cxf.jaxws.support.JaxWsServiceConfiguration:java.lang.Class getRequestWrapper(java.lang.reflect.Method)",
            "org.apache.cxf.jaxws.JaxWsClientProxy:void setupEndpointAddressContext(org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.jaxws.JaxWsClientProxy:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])",
            "org.apache.cxf.jaxws.ServiceImpl:void addPort(javax.xml.namespace.QName,java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxws.DispatchImpl:java.lang.Object invoke(java.lang.Object,boolean)",
            "org.apache.cxf.jaxws.interceptors.SwAOutInterceptor:boolean callSWARefMethod(javax.xml.bind.JAXBContext)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:void <init>(java.util.Map,org.apache.cxf.message.Exchange,javax.xml.ws.handler.MessageContext$Scope)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:void copyScoped(java.util.Map)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:java.lang.Object createAttachments(org.apache.cxf.message.Message,java.lang.String)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:java.lang.Object put(java.lang.String,java.lang.Object,javax.xml.ws.handler.MessageContext$Scope)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:void setScope(java.lang.String,javax.xml.ws.handler.MessageContext$Scope)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:void <clinit>()",
            "org.apache.cxf.xmlbeans.XmlBeansSchemaInitializer:org.apache.ws.commons.schema.XmlSchema getSchema(org.apache.xmlbeans.SchemaTypeSystem,java.lang.String)",
            "org.apache.cxf.xmlbeans.XmlBeansSchemaInitializer:void <clinit>()",
            "org.apache.cxf.xmlbeans.tools.XMLBeansSchemaTypeUtils:void <clinit>()",
            "org.apache.cxf.xmlbeans.tools.XMLBeansToolingDataBinding:void <clinit>()"
        ]
    },
    "org.apache.cxf.common.util.ASMHelper:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.ASMHelper:java.lang.String getMethodSignature(java.lang.reflect.Method)",
            "org.apache.cxf.common.util.ASMHelper:java.lang.String getClassCode(java.lang.Class)",
            "org.apache.cxf.common.util.ASMHelper:java.lang.String getClassCode(java.lang.reflect.Type)",
            "org.apache.cxf.common.util.ASMHelper:org.objectweb.asm.ClassWriter createClassWriter()",
            "org.apache.cxf.common.util.ASMHelper:java.lang.Class loadClass(java.lang.String,java.lang.Class,byte[])",
            "org.apache.cxf.common.util.ASMHelper:java.lang.Class findClass(java.lang.String,java.lang.Class)",
            "org.apache.cxf.common.util.ASMHelper:org.apache.cxf.common.util.ASMHelper$TypeHelperClassLoader getTypeHelperClassLoader(java.lang.Class)",
            "org.apache.cxf.common.util.ASMHelper:void <clinit>()",
            "org.apache.cxf.jaxb.JAXBUtils:java.lang.Object createNamespaceWrapper(java.util.Map)",
            "org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean:java.util.Set generatedWrapperBeanClass()",
            "org.apache.cxf.jaxws.WrapperClassGenerator:java.util.Set generate()",
            "org.apache.cxf.jaxws.WrapperClassGenerator:void createWrapperClass(org.apache.cxf.service.model.MessagePartInfo,org.apache.cxf.service.model.MessageInfo,org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,boolean)",
            "org.apache.cxf.jaxws.WrapperClassGenerator:void generatePackageInfo(java.lang.String,java.lang.String,java.lang.Class)",
            "org.apache.cxf.jaxws.WrapperClassGenerator:void generateMessagePart(org.objectweb.asm.ClassWriter,org.apache.cxf.service.model.MessagePartInfo,java.lang.reflect.Method,java.lang.String)",
            "org.apache.cxf.jaxws.WrapperClassGenerator:void addJAXBAnnotations(org.objectweb.asm.FieldVisitor,java.util.List)",
            "org.apache.cxf.jaxws.WrapperClassGenerator:void <clinit>()"
        ]
    },
    "org.apache.cxf.common.util.ASMHelper$TypeHelperClassLoader:java.lang.Class defineClass(java.lang.String,byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.ASMHelper:java.lang.Class loadClass(java.lang.String,java.lang.Class,byte[])"
        ]
    },
    "org.apache.cxf.common.util.CacheMap:java.lang.Object put(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.MapNamespaceContext:void addNamespace(java.lang.String,java.lang.String)",
            "org.apache.cxf.helpers.HttpHeaderHelper:java.lang.String mapCharset(java.lang.String)",
            "org.apache.cxf.helpers.HttpHeaderHelper:void <clinit>()",
            "org.apache.cxf.helpers.XMLUtils:javax.xml.transform.TransformerFactory getTransformerFactory()",
            "org.apache.cxf.helpers.XMLUtils:javax.xml.parsers.DocumentBuilderFactory getDocumentBuilderFactory()",
            "org.apache.cxf.common.xmlschema.FixedExtensionDeserializer:void deserialize(org.apache.ws.commons.schema.XmlSchemaObject,javax.xml.namespace.QName,org.w3c.dom.Node)",
            "org.apache.cxf.common.logging.Log4jLogger:void <clinit>()",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.common.util.ASMHelper:org.apache.cxf.common.util.ASMHelper$TypeHelperClassLoader getTypeHelperClassLoader(java.lang.Class)",
            "org.apache.cxf.common.util.ASMHelper:void <clinit>()",
            "org.apache.cxf.common.util.ASMHelper$TypeHelperClassLoader:java.lang.Class defineClass(java.lang.String,byte[])",
            "org.apache.cxf.common.util.CacheMap:void updateMainDataMap()",
            "org.apache.cxf.common.util.CacheMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.common.util.CacheMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.common.util.CacheMap:void putAll(java.util.Map)",
            "org.apache.cxf.common.util.ParamReader:void readCode()",
            "org.apache.cxf.common.util.TwoStageMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.resource.URIResolver:void tryRemote(java.lang.String)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.util.List getBeanListForId(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void mapElementToJaxbProperty(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder,java.lang.String,java.lang.Class)",
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:java.lang.Object unmarshalFactoryString(java.lang.String,java.lang.Class)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void initWildcardDefinitionMap()",
            "org.apache.cxf.jaxb.JAXBUtils:void <clinit>()",
            "org.apache.cxf.jaxb.JAXBDataBinding:void initialize(org.apache.cxf.service.Service)",
            "org.apache.cxf.jaxb.JAXBDataBinding:org.apache.cxf.jaxb.JAXBDataBinding$CachedContextAndSchemas createJAXBContextAndSchemas(java.util.Set,java.lang.String)",
            "org.apache.cxf.jaxb.JAXBDataBinding:void addToObjectFactoryCache(java.lang.Package,java.lang.Class)",
            "org.apache.cxf.jaxb.JAXBDataBinding$1:void <init>(org.apache.cxf.jaxb.JAXBDataBinding,java.util.List)",
            "org.apache.cxf.management.jmx.export.runtime.ModelMBeanInfoSupporter:void addModelMBeanMethod(java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String,java.lang.String,javax.management.Descriptor)",
            "org.apache.cxf.management.jmx.export.runtime.ModelMBeanInfoSupporter:void addModelMBeanNotification(java.lang.String[],java.lang.String,java.lang.String,javax.management.Descriptor)",
            "org.apache.cxf.management.jmx.export.runtime.ModelMBeanInfoSupporter:void addModelMBeanAttribute(java.lang.String,java.lang.String,boolean,boolean,boolean,java.lang.String,javax.management.Descriptor)",
            "org.apache.cxf.management.jmx.export.runtime.ModelMBeanInfoSupporter:void addModelMBeanConstructor(java.lang.reflect.Constructor,java.lang.String,javax.management.Descriptor)",
            "org.apache.cxf.management.counters.CounterRepository:void increaseCounter(javax.management.ObjectName,org.apache.cxf.management.counters.MessageHandlingTimeRecorder)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startPrefixMapping(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:void addNs(java.lang.String,java.lang.String)",
            "org.apache.cxf.message.MessageImpl:void setContent(java.lang.Class,java.lang.Object)",
            "org.apache.cxf.headers.HeaderManagerImpl:void registerHeaderProcessor(org.apache.cxf.headers.HeaderProcessor)",
            "org.apache.cxf.interceptor.StaxOutInterceptor:javax.xml.stream.XMLOutputFactory getXMLOutputFactory(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxInInterceptor:javax.xml.stream.XMLInputFactory getXMLInputFactory(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.FIStaxOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.ConduitInitiatorManagerImpl:void registerConduitInitiator(java.lang.String,org.apache.cxf.transport.ConduitInitiator)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void writeResponse(java.lang.String,java.lang.String,org.apache.cxf.service.model.EndpointInfo,java.io.OutputStream)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updateDefinition(javax.wsdl.Definition,java.util.Map,java.util.Map,java.lang.String,org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updateSchemaImports(javax.wsdl.extensions.schema.Schema,java.util.Map,java.lang.String)",
            "org.apache.cxf.transport.http.Cookie:void handleSetCookie(java.util.Map,java.util.List)",
            "org.apache.cxf.transport.http.DigestAuthSupplier:java.lang.String getAuthorizationForRealm(org.apache.cxf.transport.http.HTTPConduit,java.net.URL,org.apache.cxf.message.Message,java.lang.String,java.lang.String)",
            "org.apache.cxf.transport.http.HTTPConduit:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:void setHeadersByAuthorizationPolicy(org.apache.cxf.message.Message,java.net.URL,java.util.Map)",
            "org.apache.cxf.transport.http.HTTPConduit:void setHeadersByClientPolicy(org.apache.cxf.message.Message,java.util.Map)",
            "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection authorizationRetransmit(java.net.HttpURLConnection,org.apache.cxf.message.Message,org.apache.cxf.io.CacheAndWriteOutputStream)",
            "org.apache.cxf.transport.http.HTTPConduit:void setBasicAuthHeader(java.lang.String,java.lang.String,java.util.Map)",
            "org.apache.cxf.transport.http.HTTPConduit:void setProxyBasicAuthHeader(java.lang.String,java.lang.String,java.util.Map)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void copyRequestHeaders(org.apache.cxf.message.Message,java.util.Map)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void setPolicies(java.util.Map)",
            "org.apache.cxf.transport.http.gzip.GZIPOutInterceptor:void addHeader(org.apache.cxf.message.Message,java.lang.String,java.lang.String)",
            "org.apache.cxf.transport.DestinationFactoryManagerImpl:void registerDestinationFactory(java.lang.String,org.apache.cxf.transport.DestinationFactory)",
            "org.apache.cxf.transport.servlet.ServletContextResourceResolver:java.lang.Object resolve(java.lang.String,java.lang.Class)",
            "org.apache.cxf.transport.servlet.ServletTransportFactory:org.apache.cxf.transport.Destination getDestination(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.servlet.AbstractCXFServlet:void init(javax.servlet.ServletConfig)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPTransportFactory:org.apache.cxf.transport.http_jetty.JettyHTTPDestination createDestination(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void setEnginesList(java.util.List)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void setTLSServerParametersForPort(int,org.apache.cxf.configuration.jsse.TLSServerParameters)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine createJettyHTTPServerEngine(int,java.lang.String)",
            "org.apache.cxf.transport.jms.JMSUtils:void addContentTypeToProtocolHeader(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.jms.JMSConduit:void sendExchange(org.apache.cxf.message.Exchange,java.lang.Object)",
            "org.apache.cxf.NSManager:void resolveConstants(java.lang.Class)",
            "org.apache.cxf.extension.RegistryImpl:void register(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.endpoint.ClientImpl:java.util.Map getRequestContext()",
            "org.apache.cxf.endpoint.ClientImpl:java.util.Map getResponseContext()",
            "org.apache.cxf.endpoint.ClientImpl:void setThreadLocalRequestContext(boolean)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map)",
            "org.apache.cxf.endpoint.ClientImpl$EchoContext:java.lang.Object put(java.lang.String,java.lang.Object)",
            "org.apache.cxf.ws.addressing.ContextUtils:java.lang.String getActionFromMessageAttributes(org.apache.cxf.service.model.MessageInfo)",
            "org.apache.cxf.ws.addressing.MAPAggregator:boolean validateIncomingMAPs(org.apache.cxf.ws.addressing.AddressingProperties,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void cacheExchange(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.addressing.AddressingProperties)",
            "org.apache.cxf.ws.policy.PolicyRegistryImpl:void register(java.lang.String,org.apache.neethi.Policy)",
            "org.apache.cxf.ws.security.policy.model.ContentEncryptedElements:void addDeclaredNamespaces(java.lang.String,java.lang.String)",
            "org.apache.cxf.ws.security.policy.model.SignedEncryptedElements:void addDeclaredNamespaces(java.lang.String,java.lang.String)",
            "org.apache.cxf.ws.security.policy.model.RequiredElements:void addDeclaredNamespaces(java.lang.String,java.lang.String)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationOutInterceptor:void renewToken(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.ws.security.tokenstore.SecurityToken,org.apache.cxf.ws.security.policy.model.SecureConversationToken)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationTokenInterceptorProvider:void mapSecurityProps(org.apache.cxf.message.Message,java.util.Map)",
            "org.apache.cxf.ws.security.trust.STSClient:org.apache.cxf.ws.security.tokenstore.SecurityToken requestSecurityToken(java.lang.String,java.lang.String,java.lang.String,org.apache.cxf.ws.security.tokenstore.SecurityToken)",
            "org.apache.cxf.ws.security.trust.STSClient:boolean validateSecurityToken(org.apache.cxf.ws.security.tokenstore.SecurityToken,java.lang.String)",
            "org.apache.cxf.ws.security.trust.STSClient:void cancelSecurityToken(org.apache.cxf.ws.security.tokenstore.SecurityToken)",
            "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:void add(org.apache.cxf.ws.security.tokenstore.SecurityToken)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:java.util.Map handleSupportingTokens(org.apache.cxf.ws.security.policy.model.SupportingToken,boolean,java.util.Map)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:org.apache.ws.security.components.crypto.Crypto getCrypto(org.apache.cxf.ws.security.policy.model.TokenWrapper,java.lang.String,java.lang.String)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:java.util.Properties getProps(java.lang.Object,org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.wss4j.AbstractWSS4JInterceptor:void setProperty(java.lang.String,java.lang.String)",
            "org.apache.cxf.ws.security.wss4j.AbstractWSS4JInterceptor:org.apache.ws.security.components.crypto.Crypto loadSignatureCrypto(org.apache.ws.security.handler.RequestData)",
            "org.apache.cxf.ws.security.wss4j.AbstractWSS4JInterceptor:org.apache.ws.security.components.crypto.Crypto loadDecryptionCrypto(org.apache.ws.security.handler.RequestData)",
            "org.apache.cxf.ws.security.wss4j.AbstractWSS4JInterceptor:org.apache.ws.security.components.crypto.Crypto loadEncryptionCrypto(org.apache.ws.security.handler.RequestData)",
            "org.apache.cxf.ws.rm.Source:void addSequence(org.apache.cxf.ws.rm.SourceSequence,boolean)",
            "org.apache.cxf.ws.rm.Source:void setCurrent(org.apache.cxf.ws.rm.Identifier,org.apache.cxf.ws.rm.SourceSequence)",
            "org.apache.cxf.ws.rm.Destination:void addSequence(org.apache.cxf.ws.rm.DestinationSequence,boolean)",
            "org.apache.cxf.ws.rm.RMManager:org.apache.cxf.ws.rm.RMEndpoint getReliableEndpoint(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.RMManager:void recoverReliableEndpoint(org.apache.cxf.endpoint.Endpoint,org.apache.cxf.transport.Conduit)",
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl:org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl$ResendCandidate cacheUnacknowledged(org.apache.cxf.message.Message)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void <init>(java.util.SortedSet)",
            "org.apache.cxf.workqueue.WorkQueueManagerImpl:void addNamedWorkQueue(java.lang.String,org.apache.cxf.workqueue.AutomaticWorkQueue)",
            "org.apache.cxf.databinding.AbstractDataBinding:void <init>()",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void <clinit>()",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.bind.JAXBElement getServiceNameType(javax.xml.namespace.QName,java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:void setInterfaceName(org.apache.cxf.ws.addressing.EndpointReferenceType,javax.xml.namespace.QName)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:void setWSDLLocation(org.apache.cxf.ws.addressing.EndpointReferenceType,java.lang.String[])",
            "org.apache.cxf.service.model.BindingOperationInfo:void <init>(org.apache.cxf.service.model.BindingInfo,org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:void addMessagePart(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:void setProperty(java.lang.String,java.lang.Object)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:void addExtensionAttribute(javax.xml.namespace.QName,java.lang.Object)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperationForWrapperElement(org.apache.cxf.message.Exchange,javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.service.model.InterfaceInfo:void addOperation(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.ServiceInfo:void initMessagesMap()",
            "org.apache.cxf.service.model.BindingInfo:void addOperation(org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.service.model.OperationInfo:void addFault(org.apache.cxf.service.model.FaultInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createEndpoints()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isWrapped(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isRPC(java.lang.reflect.Method)",
            "org.apache.cxf.binding.BindingFactoryManagerImpl:void registerBindingFactory(java.lang.String,org.apache.cxf.binding.BindingFactory)",
            "org.apache.cxf.binding.soap.interceptor.SoapPreProtocolOutInterceptor:void setSoapAction(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.SoapVersionFactory:void register(org.apache.cxf.binding.soap.SoapVersion)",
            "org.apache.cxf.clustering.FailoverTargetSelector:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.clustering.FailoverTargetSelector:void overrideAddressProperty(java.util.Map)",
            "org.apache.cxf.tools.common.ToolContext:void put(java.lang.String,java.lang.Object)",
            "org.apache.cxf.tools.common.ToolContext:void addNamespacePackageMap(java.lang.String,java.lang.String)",
            "org.apache.cxf.tools.common.ToolContext:void addExcludeNamespacePackageMap(java.lang.String,java.lang.String)",
            "org.apache.cxf.tools.common.VelocityGenerator:void setCommonAttributes()",
            "org.apache.cxf.tools.common.VelocityGenerator:void setAttributes(java.lang.String,java.lang.Object)",
            "org.apache.cxf.tools.common.model.JavaModel:void addInterface(java.lang.String,org.apache.cxf.tools.common.model.JavaInterface)",
            "org.apache.cxf.tools.common.model.JavaModel:void addExceptionClass(java.lang.String,org.apache.cxf.tools.common.model.JavaExceptionClass)",
            "org.apache.cxf.tools.common.model.JavaModel:void addServiceClass(java.lang.String,org.apache.cxf.tools.common.model.JavaServiceClass)",
            "org.apache.cxf.tools.common.model.JavaType:void <clinit>()",
            "org.apache.cxf.tools.common.model.JavaMethod:void addAnnotation(java.lang.String,org.apache.cxf.tools.common.model.JAnnotation)",
            "org.apache.cxf.tools.common.model.JavaMethod:void <clinit>()",
            "org.apache.cxf.tools.common.model.JavaParameter:void addAnnotation(java.lang.String,org.apache.cxf.tools.common.model.JAnnotation)",
            "org.apache.cxf.tools.util.ToolsStaxUtils:java.util.List getTags(java.io.File)",
            "org.apache.cxf.tools.util.ToolsStaxUtils:org.apache.cxf.tools.common.Tag getTagTree(java.io.InputStream,java.util.List)",
            "org.apache.cxf.tools.util.BuiltInTypesJavaMappingUtil:void <clinit>()",
            "org.apache.cxf.tools.util.SOAPBindingUtil:void <clinit>()",
            "org.apache.cxf.tools.util.PropertyUtil:void load(java.io.InputStream,java.lang.String)",
            "org.apache.cxf.tools.util.ClassCollector:void addSeiClassName(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.tools.util.ClassCollector:void addTypesClassName(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.tools.util.ClassCollector:void addServerClassName(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.tools.util.ClassCollector:void addImplClassName(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.tools.util.ClassCollector:void addClientClassName(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.tools.util.ClassCollector:void addServiceClassName(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.tools.util.ClassCollector:void addExceptionClassName(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.catalog.CatalogXmlSchemaURIResolver:org.xml.sax.InputSource resolveEntity(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.wsdl11.SchemaUtil:void addSchema(java.lang.String,javax.wsdl.extensions.schema.Schema)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void parseWSDL(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void registerWSDLExtensibilityPlugins(javax.wsdl.extensions.ExtensionRegistry)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildTypes(java.util.Collection,java.util.Map,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addNamespace(java.lang.String,java.lang.String,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(java.net.URL)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(org.w3c.dom.Element)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void addDefinition(java.lang.Object,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition loadDefinition(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void putSchemasForDefinition(javax.wsdl.Definition,org.apache.cxf.service.model.ServiceSchemaInfo)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void processExtension(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadAndRegister(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void <init>(java.util.Map,java.util.Map)",
            "org.apache.cxf.bus.CXFBusImpl:void setExtension(java.lang.Object,java.lang.Class)",
            "org.apache.cxf.attachment.AttachmentImpl:void setHeader(java.lang.String,java.lang.String)",
            "org.apache.cxf.attachment.AttachmentUtil:java.util.Map getDHMap(java.util.Collection)",
            "org.apache.cxf.frontend.ClientProxyFactoryBean:java.lang.Object create()",
            "org.apache.cxf.frontend.SimpleMethodDispatcher:void bind(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method[])",
            "org.apache.cxf.frontend.SimpleMethodDispatcher:org.apache.cxf.service.model.BindingOperationInfo getBindingOperation(java.lang.reflect.Method,org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory:org.apache.cxf.endpoint.Endpoint createEndpoint()",
            "org.apache.cxf.aegis.Context:void setProperty(java.lang.Object)",
            "org.apache.cxf.aegis.util.jdom.StaxBuilder:void <clinit>()",
            "org.apache.cxf.aegis.util.stax.JDOMStreamReader:void declare(org.jdom.Namespace)",
            "org.apache.cxf.aegis.databinding.XMLStreamDataWriter:void setProperty(java.lang.String,java.lang.Object)",
            "org.apache.cxf.aegis.databinding.ElementDataWriter:void setProperty(java.lang.String,java.lang.Object)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void initializeMessage(org.apache.cxf.service.Service,org.apache.cxf.aegis.type.TypeMapping,org.apache.cxf.service.model.AbstractMessageContainer,int,java.util.Set)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:org.apache.cxf.aegis.type.Type getParameterType(org.apache.cxf.service.Service,org.apache.cxf.aegis.type.TypeMapping,org.apache.cxf.service.model.MessagePartInfo,int)",
            "org.apache.cxf.aegis.type.basic.XMLBeanTypeInfo:org.apache.cxf.aegis.type.basic.BeanTypePropertyInfo ensurePropertyInfo(javax.xml.namespace.QName)",
            "org.apache.cxf.aegis.type.basic.InterfaceInvocationHandler:void writeProperty(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.aegis.type.basic.BeanTypeInfo:void mapType(javax.xml.namespace.QName,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.basic.BeanTypeInfo:void mapAttribute(java.lang.String,javax.xml.namespace.QName)",
            "org.apache.cxf.aegis.type.basic.BeanTypeInfo:void mapElement(java.lang.String,javax.xml.namespace.QName)",
            "org.apache.cxf.aegis.type.basic.BeanTypeInfo:void mapTypeName(javax.xml.namespace.QName,javax.xml.namespace.QName)",
            "org.apache.cxf.aegis.type.encoded.MarshalRegistry:java.lang.String getInstanceId(java.lang.Object)",
            "org.apache.cxf.aegis.type.XMLTypeCreator:org.w3c.dom.Document getDocument(java.lang.Class)",
            "org.apache.cxf.aegis.type.DefaultTypeMapping:void register(org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.collection.MapType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.jaxws.handler.HandlerResolverImpl:java.util.List getHandlerChain(javax.xml.ws.handler.PortInfo)",
            "org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean:void initSchemaLocations()",
            "org.apache.cxf.jaxws.support.JaxWsServiceConfiguration:javax.jws.WebParam getWebParam(java.lang.reflect.Method,int)",
            "org.apache.cxf.jaxws.support.JaxWsServiceConfiguration:java.lang.Class getResponseWrapper(java.lang.reflect.Method)",
            "org.apache.cxf.jaxws.support.JaxWsServiceConfiguration:java.lang.Class getRequestWrapper(java.lang.reflect.Method)",
            "org.apache.cxf.jaxws.JaxWsClientProxy:void setupEndpointAddressContext(org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.jaxws.JaxWsClientProxy:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])",
            "org.apache.cxf.jaxws.ServiceImpl:void addPort(javax.xml.namespace.QName,java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxws.DispatchImpl:java.lang.Object invoke(java.lang.Object,boolean)",
            "org.apache.cxf.jaxws.interceptors.SwAOutInterceptor:boolean callSWARefMethod(javax.xml.bind.JAXBContext)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:void <init>(java.util.Map,org.apache.cxf.message.Exchange,javax.xml.ws.handler.MessageContext$Scope)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:void copyScoped(java.util.Map)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:java.lang.Object createAttachments(org.apache.cxf.message.Message,java.lang.String)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:java.lang.Object put(java.lang.String,java.lang.Object,javax.xml.ws.handler.MessageContext$Scope)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:void setScope(java.lang.String,javax.xml.ws.handler.MessageContext$Scope)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:void <clinit>()",
            "org.apache.cxf.xmlbeans.XmlBeansSchemaInitializer:org.apache.ws.commons.schema.XmlSchema getSchema(org.apache.xmlbeans.SchemaTypeSystem,java.lang.String)",
            "org.apache.cxf.xmlbeans.XmlBeansSchemaInitializer:void <clinit>()",
            "org.apache.cxf.xmlbeans.tools.XMLBeansSchemaTypeUtils:void <clinit>()",
            "org.apache.cxf.xmlbeans.tools.XMLBeansToolingDataBinding:void <clinit>()"
        ]
    },
    "org.apache.cxf.jaxb.JAXBUtils:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.JAXBUtils:java.lang.String builtInTypeToJavaType(java.lang.String)",
            "org.apache.cxf.jaxb.JAXBUtils:java.lang.Class holderClass(java.lang.String)",
            "org.apache.cxf.jaxb.JAXBUtils:java.lang.String namespaceURIToPackage(java.lang.String)",
            "org.apache.cxf.jaxb.JAXBUtils:java.lang.String nameSpaceURIToPackage(java.net.URI)",
            "org.apache.cxf.jaxb.JAXBUtils:java.lang.String normalizePackageNamePart(java.lang.String)",
            "org.apache.cxf.jaxb.JAXBUtils:java.lang.String nameToIdentifier(java.lang.String,org.apache.cxf.jaxb.JAXBUtils$IdentifierType)",
            "org.apache.cxf.jaxb.JAXBUtils:void splitWord(java.util.List,int)",
            "org.apache.cxf.jaxb.JAXBUtils:void setNamespaceWrapper(java.util.Map,javax.xml.bind.Marshaller)",
            "org.apache.cxf.jaxb.JAXBUtils:java.lang.Object createNamespaceWrapper(java.util.Map)",
            "org.apache.cxf.jaxb.JAXBUtils:void <clinit>()",
            "org.apache.cxf.jaxb.JAXBDataBinding:void initialize(org.apache.cxf.service.Service)",
            "org.apache.cxf.jaxb.JAXBDataBinding:boolean addJaxbObjectFactory(javax.xml.bind.JAXBException)",
            "org.apache.cxf.jaxb.JAXBDataBinding:org.apache.cxf.databinding.WrapperHelper createWrapperHelper(java.lang.Class,java.util.List,java.util.List,java.util.List)",
            "org.apache.cxf.jaxb.JAXBDataBinding:java.lang.reflect.Field getElField(java.lang.String,java.lang.Class)",
            "org.apache.cxf.jaxb.JAXBContextInitializer:void addClass(java.lang.Class)",
            "org.apache.cxf.jaxb.JAXBEncoderDecoder:void marshalWithBridge(javax.xml.namespace.QName,java.lang.Class,java.lang.'annotation'.Annotation[],java.util.Set,java.lang.Object,java.lang.Object,javax.xml.bind.attachment.AttachmentMarshaller)",
            "org.apache.cxf.jaxb.JAXBEncoderDecoder:java.lang.Object unmarshalWithBridge(javax.xml.namespace.QName,java.lang.Class,java.lang.'annotation'.Annotation[],java.util.Set,java.lang.Object,javax.xml.bind.attachment.AttachmentUnmarshaller)",
            "org.apache.cxf.jaxb.io.DataWriterImpl:javax.xml.bind.Marshaller createMarshaller(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:org.apache.cxf.endpoint.Client createClient(java.lang.String,javax.xml.namespace.QName,java.lang.ClassLoader,javax.xml.namespace.QName,java.util.List)",
            "org.apache.cxf.ws.policy.builder.jaxb.JaxbAssertionBuilder:void <init>(javax.xml.namespace.QName)",
            "org.apache.cxf.jaxws.WrapperClassGenerator:void generateMessagePart(org.objectweb.asm.ClassWriter,org.apache.cxf.service.model.MessagePartInfo,java.lang.reflect.Method,java.lang.String)",
            "org.apache.cxf.xmlbeans.XmlBeansDataBinding:org.apache.cxf.databinding.WrapperHelper createWrapperHelper(java.lang.Class,java.util.List,java.util.List,java.util.List)"
        ]
    },
    "org.apache.cxf.jaxb.JAXBDataBinding:void addToObjectFactoryCache(java.lang.Package,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.JAXBDataBinding:void scanPackages(java.util.Set)"
        ]
    },
    "org.apache.cxf.jaxb.JAXBDataBinding$1:void <init>(org.apache.cxf.jaxb.JAXBDataBinding,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.JAXBDataBinding:java.util.List generateJaxbSchemas()"
        ]
    },
    "org.apache.cxf.management.jmx.export.runtime.ModelMBeanInfoSupporter:void addModelMBeanMethod(java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String,java.lang.String,javax.management.Descriptor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.management.jmx.export.runtime.ModelMBeanAssembler:void addAttributeOperation(java.lang.reflect.Method)",
            "org.apache.cxf.management.jmx.export.runtime.ModelMBeanAssembler:javax.management.modelmbean.ModelMBeanInfo getModelMbeanInfo(java.lang.Class)"
        ]
    },
    "org.apache.cxf.management.jmx.export.runtime.ModelMBeanInfoSupporter:void addModelMBeanNotification(java.lang.String[],java.lang.String,java.lang.String,javax.management.Descriptor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.management.jmx.export.runtime.ModelMBeanAssembler:javax.management.modelmbean.ModelMBeanInfo getModelMbeanInfo(java.lang.Class)"
        ]
    },
    "org.apache.cxf.management.jmx.export.runtime.ModelMBeanInfoSupporter:void addModelMBeanAttribute(java.lang.String,java.lang.String,boolean,boolean,boolean,java.lang.String,javax.management.Descriptor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.management.jmx.export.runtime.ModelMBeanAssembler:javax.management.modelmbean.ModelMBeanInfo getModelMbeanInfo(java.lang.Class)"
        ]
    },
    "org.apache.cxf.management.jmx.export.runtime.ModelMBeanInfoSupporter:void addModelMBeanConstructor(java.lang.reflect.Constructor,java.lang.String,javax.management.Descriptor)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.staxutils.StreamWriterContentHandler:void startPrefixMapping(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:void addNs(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.CachingXmlEventWriter:void writeNamespace(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter:void setPrefix(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.message.MessageImpl:void setContent(java.lang.Class,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.message.MessageContentsList:org.apache.cxf.message.MessageContentsList getContentsList(org.apache.cxf.message.Message)",
            "org.apache.cxf.message.AbstractWrappedMessage:void setContent(java.lang.Class,java.lang.Object)",
            "org.apache.cxf.message.MessageImpl:void copyContent(org.apache.cxf.message.Message,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxOutInterceptor:void handleFault(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AttachmentOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.WrappedInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.LoggingOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.ServiceInvokerInterceptor$1:void run()",
            "org.apache.cxf.interceptor.BareInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.ClientFaultConverter:void processFaultDetail(org.apache.cxf.interceptor.Fault,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.LoggingOutInterceptor$LoggingCallback:void onClose(org.apache.cxf.io.CachedOutputStream)",
            "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:org.apache.cxf.staxutils.DepthXMLStreamReader getXMLStreamReader(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.LoggingInInterceptor:void logging(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxOutInterceptor$StaxOutEndingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.PrettyLoggingOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit$InterposedMessageObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination$BackChannelConduit:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void setupMessage(org.apache.cxf.message.Message,javax.servlet.ServletConfig,javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream$1:void run()",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponseInternal()",
            "org.apache.cxf.transport.http.gzip.GZIPInInterceptor$GZIPInEndingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.gzip.GZIPOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.gzip.GZIPInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.jms.JMSDestination:void onMessage(javax.jms.Message)",
            "org.apache.cxf.transport.jms.JMSDestination$BackChannelConduit:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.jms.JMSConduit:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.jms.JMSConduit:void onMessage(javax.jms.Message)",
            "org.apache.cxf.endpoint.ClientImpl:void setParameters(java.lang.Object[],org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.RMManager:void recoverReliableEndpoint(org.apache.cxf.endpoint.Endpoint,org.apache.cxf.transport.Conduit)",
            "org.apache.cxf.ws.rm.RMUtils:org.apache.cxf.io.WriteOnCloseOutputStream createCachedStream(org.apache.cxf.message.Message,java.io.OutputStream)",
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)",
            "org.apache.cxf.databinding.stax.StaxDataBindingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.soap.interceptor.RPCInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.xml.interceptor.XMLFaultInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.clustering.FailoverTargetSelector:void complete(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.attachment.AttachmentDeserializer:void initializeRootMessage()",
            "org.apache.cxf.attachment.AttachmentDeserializer:java.lang.String findBoundaryFromInputStream()",
            "org.apache.cxf.attachment.AttachmentDeserializer:void cacheStreamedAttachments()",
            "org.apache.cxf.jaxws.handler.HandlerChainInvoker:void setFaultMessage(javax.xml.ws.handler.MessageContext,java.lang.Exception)",
            "org.apache.cxf.jaxws.handler.soap.SOAPMessageContextImpl:void setMessage(javax.xml.soap.SOAPMessage)",
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerInterceptor:void handleAbort(org.apache.cxf.binding.soap.SoapMessage,javax.xml.ws.handler.MessageContext)",
            "org.apache.cxf.jaxws.handler.logical.LogicalHandlerFaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.handler.logical.LogicalHandlerFaultOutInterceptor$LogicalHandlerFaultOutEndingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.handler.logical.LogicalHandlerOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.handler.logical.LogicalHandlerOutInterceptor:void handleFault(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.handler.logical.LogicalHandlerOutInterceptor$LogicalHandlerOutEndingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.handler.logical.LogicalMessageImpl:javax.xml.transform.Source getPayload()",
            "org.apache.cxf.jaxws.handler.logical.LogicalMessageImpl:javax.xml.transform.Source handleDispatchProviderCase(javax.xml.ws.Service$Mode)",
            "org.apache.cxf.jaxws.handler.logical.LogicalMessageImpl:void setPayload(javax.xml.transform.Source)",
            "org.apache.cxf.jaxws.interceptors.MessageModeInInterceptor:void doFromSoapMessage(org.apache.cxf.message.Message,java.lang.Object)",
            "org.apache.cxf.jaxws.interceptors.MessageModeOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.interceptors.WrapperClassOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.interceptors.WrapperClassInInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.headers.HeaderManagerImpl:void registerHeaderProcessor(org.apache.cxf.headers.HeaderProcessor)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.ConduitInitiatorManagerImpl:void registerConduitInitiator(java.lang.String,org.apache.cxf.transport.ConduitInitiator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.AbstractHTTPTransportFactory:void registerWithBindingManager()"
        ]
    },
    "org.apache.cxf.transport.http.DigestAuthSupplier:java.lang.String getAuthorizationForRealm(org.apache.cxf.transport.http.HTTPConduit,java.net.URL,org.apache.cxf.message.Message,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection authorizationRetransmit(java.net.HttpURLConnection,org.apache.cxf.message.Message,org.apache.cxf.io.CacheAndWriteOutputStream)"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit:void setBasicAuthHeader(java.lang.String,java.lang.String,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:void setHeadersByAuthorizationPolicy(org.apache.cxf.message.Message,java.net.URL,java.util.Map)"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit:void setProxyBasicAuthHeader(java.lang.String,java.lang.String,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:void setHeadersByAuthorizationPolicy(org.apache.cxf.message.Message,java.net.URL,java.util.Map)"
        ]
    },
    "org.apache.cxf.transport.http.AbstractHTTPDestination:void setPolicies(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void updateResponseHeaders(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.DestinationFactoryManagerImpl:void registerDestinationFactory(java.lang.String,org.apache.cxf.transport.DestinationFactory)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.servlet.ServletTransportFactory:void register()",
            "org.apache.cxf.transport.servlet.AbstractCXFServlet:void registerTransport(org.apache.cxf.transport.DestinationFactory,java.lang.String)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPTransportFactory:void finalizeConfig()",
            "org.apache.cxf.binding.soap.SoapTransportFactory:void registerWithBindingManager()"
        ]
    },
    "org.apache.cxf.NSManager:void resolveConstants(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.NSManager:void <init>()"
        ]
    },
    "org.apache.cxf.extension.RegistryImpl:void register(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.PolicyInterceptorProviderRegistryImpl:void register(org.apache.cxf.ws.policy.PolicyInterceptorProvider)",
            "org.apache.cxf.ws.policy.AssertionBuilderRegistryImpl:void register(org.apache.cxf.ws.policy.AssertionBuilder)"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:void setThreadLocalRequestContext(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.endpoint.ClientImpl$EchoContext:java.lang.Object put(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl$EchoContext:java.lang.Object put(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cxf.ws.addressing.soap.MAPCodec:void cacheExchange(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.addressing.AddressingProperties)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void encode(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.addressing.AddressingPropertiesImpl)"
        ]
    },
    "org.apache.cxf.ws.policy.PolicyRegistryImpl:void register(java.lang.String,org.apache.neethi.Policy)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.WSPolicyFeature:org.apache.neethi.Policy resolveLocal(org.apache.neethi.PolicyReference,org.w3c.dom.Element,org.apache.cxf.Bus)",
            "org.apache.cxf.ws.policy.attachment.wsdl11.Wsdl11AttachmentPolicyProvider:org.apache.neethi.Policy resolveLocal(org.apache.neethi.PolicyReference,org.apache.cxf.service.model.DescriptionInfo)",
            "org.apache.cxf.ws.policy.attachment.external.ExternalAttachmentProvider:org.apache.neethi.Policy resolveLocal(org.apache.neethi.PolicyReference,org.w3c.dom.Document)"
        ]
    },
    "org.apache.cxf.ws.security.policy.model.ContentEncryptedElements:void addDeclaredNamespaces(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.policy.builders.ContentEncryptedElementsBuilder:void addNamespaces(org.w3c.dom.Node,org.apache.cxf.ws.security.policy.model.ContentEncryptedElements)"
        ]
    },
    "org.apache.cxf.ws.security.policy.model.SignedEncryptedElements:void addDeclaredNamespaces(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.policy.builders.EncryptedElementsBuilder:void addNamespaces(org.w3c.dom.Node,org.apache.cxf.ws.security.policy.model.SignedEncryptedElements)",
            "org.apache.cxf.ws.security.policy.builders.SignedElementsBuilder:void addNamespaces(org.w3c.dom.Node,org.apache.cxf.ws.security.policy.model.SignedEncryptedElements)"
        ]
    },
    "org.apache.cxf.ws.security.policy.model.RequiredElements:void addDeclaredNamespaces(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.policy.builders.RequiredElementsBuilder:void addNamespaces(org.w3c.dom.Node,org.apache.cxf.ws.security.policy.model.RequiredElements)"
        ]
    },
    "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:void add(org.apache.cxf.ws.security.tokenstore.SecurityToken)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationOutInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor$STSInvoker:void doIssue(org.w3c.dom.Element,org.apache.cxf.message.Exchange,org.apache.cxf.staxutils.W3CDOMStreamWriter,java.lang.String,java.lang.String)",
            "org.apache.cxf.ws.security.policy.interceptors.IssuedTokenInterceptorProvider$IssuedTokenOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:void update(org.apache.cxf.ws.security.tokenstore.SecurityToken)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:org.apache.cxf.ws.security.tokenstore.SecurityToken getSecurityToken()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.SymmetricBindingHandler:java.lang.String setupEncryptedKey(org.apache.cxf.ws.security.policy.model.TokenWrapper,org.apache.cxf.ws.security.policy.model.Token)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.SymmetricBindingHandler:java.lang.String getEncryptedKey()"
        ]
    },
    "org.apache.cxf.ws.security.wss4j.AbstractWSS4JInterceptor:void setProperty(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.rm.Source:void addSequence(org.apache.cxf.ws.rm.SourceSequence,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.Source:void addSequence(org.apache.cxf.ws.rm.SourceSequence)",
            "org.apache.cxf.ws.rm.RMManager:void recoverReliableEndpoint(org.apache.cxf.endpoint.Endpoint,org.apache.cxf.transport.Conduit)"
        ]
    },
    "org.apache.cxf.ws.rm.Source:void setCurrent(org.apache.cxf.ws.rm.Identifier,org.apache.cxf.ws.rm.SourceSequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.Servant:org.apache.cxf.ws.rm.CreateSequenceResponseType createSequence(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.Servant:void createSequenceResponse(org.apache.cxf.ws.rm.CreateSequenceResponseType)",
            "org.apache.cxf.ws.rm.Source:void setCurrent(org.apache.cxf.ws.rm.SourceSequence)"
        ]
    },
    "org.apache.cxf.ws.rm.Destination:void addSequence(org.apache.cxf.ws.rm.DestinationSequence,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.Destination:void addSequence(org.apache.cxf.ws.rm.DestinationSequence)"
        ]
    },
    "org.apache.cxf.workqueue.WorkQueueManagerImpl:void addNamedWorkQueue(java.lang.String,org.apache.cxf.workqueue.AutomaticWorkQueue)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void register()"
        ]
    },
    "org.apache.cxf.databinding.AbstractDataBinding:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.JAXBDataBinding:void <init>()",
            "org.apache.cxf.jaxb.JAXBDataBinding:void <init>(boolean)",
            "org.apache.cxf.jaxb.JAXBDataBinding:void <init>(java.lang.Class[])",
            "org.apache.cxf.databinding.source.SourceDataBinding:void <init>()",
            "org.apache.cxf.databinding.stax.StaxDataBinding:void <init>()",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void <init>()",
            "org.apache.cxf.xmlbeans.XmlBeansDataBinding:void <init>()"
        ]
    },
    "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl.JAXBExtensionHelper:void marshall(java.lang.Class,javax.xml.namespace.QName,javax.wsdl.extensions.ExtensibilityElement,java.io.PrintWriter,javax.wsdl.Definition,javax.wsdl.extensions.ExtensionRegistry)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:int getIndentLevel(java.lang.Class)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void <clinit>()"
        ]
    },
    "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.bind.JAXBElement getServiceNameType(javax.xml.namespace.QName,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl.EndpointReferenceUtils:void setServiceAndPortName(org.apache.cxf.ws.addressing.EndpointReferenceType,javax.xml.namespace.QName,java.lang.String)"
        ]
    },
    "org.apache.cxf.wsdl.EndpointReferenceUtils:void setInterfaceName(org.apache.cxf.ws.addressing.EndpointReferenceType,javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.wsdl.EndpointReferenceUtils:void setWSDLLocation(org.apache.cxf.ws.addressing.EndpointReferenceType,java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl.EndpointReferenceUtils:void setMetadata(org.apache.cxf.ws.addressing.EndpointReferenceType,java.util.List)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:org.apache.cxf.ws.addressing.EndpointReferenceType getEndpointReference(java.net.URL,javax.xml.namespace.QName,java.lang.String)"
        ]
    },
    "org.apache.cxf.service.model.AbstractPropertiesHolder:void addExtensionAttribute(javax.xml.namespace.QName,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean:void buildWSAActions(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)"
        ]
    },
    "org.apache.cxf.service.model.InterfaceInfo:void addOperation(org.apache.cxf.service.model.OperationInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.model.InterfaceInfo:org.apache.cxf.service.model.OperationInfo addOperation(javax.xml.namespace.QName)"
        ]
    },
    "org.apache.cxf.service.model.OperationInfo:void addFault(org.apache.cxf.service.model.FaultInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.model.OperationInfo:org.apache.cxf.service.model.FaultInfo addFault(javax.xml.namespace.QName,javax.xml.namespace.QName)"
        ]
    },
    "org.apache.cxf.binding.BindingFactoryManagerImpl:void registerBindingFactory(java.lang.String,org.apache.cxf.binding.BindingFactory)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.AbstractBindingFactory:void registerWithBindingManager()"
        ]
    },
    "org.apache.cxf.binding.soap.SoapVersionFactory:void register(org.apache.cxf.binding.soap.SoapVersion)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.soap.SoapVersionFactory:void <clinit>()"
        ]
    },
    "org.apache.cxf.tools.common.ToolContext:void put(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.tools.common.ToolContext:void addParameters(java.util.Map)",
            "org.apache.cxf.tools.common.ToolContext:void put(java.lang.Class,java.lang.Object)"
        ]
    },
    "org.apache.cxf.tools.common.ToolContext:void addNamespacePackageMap(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.tools.common.ToolContext:void addExcludeNamespacePackageMap(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.tools.common.VelocityGenerator:void setAttributes(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.tools.common.model.JavaModel:void addInterface(java.lang.String,org.apache.cxf.tools.common.model.JavaInterface)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.tools.common.model.JavaModel:void addExceptionClass(java.lang.String,org.apache.cxf.tools.common.model.JavaExceptionClass)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.tools.common.model.JavaModel:void addServiceClass(java.lang.String,org.apache.cxf.tools.common.model.JavaServiceClass)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.tools.common.model.JavaType:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.tools.common.model.JavaType:java.lang.String getDefaultTypeValue()",
            "org.apache.cxf.tools.common.model.JavaType:void <clinit>()"
        ]
    },
    "org.apache.cxf.tools.common.model.JavaMethod:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.tools.common.model.JavaMethod:void setReturn(org.apache.cxf.tools.common.model.JavaReturn)",
            "org.apache.cxf.tools.common.model.JavaMethod:boolean isEquiv(java.lang.String,java.lang.String)",
            "org.apache.cxf.tools.common.model.JavaMethod:void addParameter(org.apache.cxf.tools.common.model.JavaParameter)",
            "org.apache.cxf.tools.common.model.JavaMethod:void addException(org.apache.cxf.tools.common.model.JavaException)",
            "org.apache.cxf.tools.common.model.JavaMethod:void <clinit>()",
            "org.apache.cxf.tools.common.model.JavaClass:org.apache.cxf.tools.common.model.JavaMethod appendGetter(org.apache.cxf.tools.common.model.JavaField)",
            "org.apache.cxf.tools.common.model.JavaClass:org.apache.cxf.tools.common.model.JavaMethod appendSetter(org.apache.cxf.tools.common.model.JavaField)"
        ]
    },
    "org.apache.cxf.tools.common.model.JavaParameter:void addAnnotation(java.lang.String,org.apache.cxf.tools.common.model.JAnnotation)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.tools.util.ToolsStaxUtils:java.util.List getTags(java.io.File)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.tools.common.ProcessorTestBase:boolean assertXmlEquals(java.io.File,java.io.File,java.util.List)"
        ]
    },
    "org.apache.cxf.tools.util.ToolsStaxUtils:org.apache.cxf.tools.common.Tag getTagTree(java.io.InputStream,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.tools.common.ProcessorTestBase:void assertWsdlEquals(java.io.InputStream,java.io.InputStream,java.util.List,java.util.List)",
            "org.apache.cxf.tools.util.ToolsStaxUtils:org.apache.cxf.tools.common.Tag getTagTree(java.io.File,java.util.List)"
        ]
    },
    "org.apache.cxf.tools.util.BuiltInTypesJavaMappingUtil:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.tools.util.BuiltInTypesJavaMappingUtil:java.lang.String getJType(java.lang.String,java.lang.String)",
            "org.apache.cxf.tools.util.BuiltInTypesJavaMappingUtil:void <clinit>()"
        ]
    },
    "org.apache.cxf.tools.util.SOAPBindingUtil:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.soap.SoapBindingFactory:void createSoapBinding(org.apache.cxf.binding.soap.model.SoapBindingInfo)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:void addMessageFromBinding(javax.wsdl.extensions.ExtensibilityElement,org.apache.cxf.service.model.BindingOperationInfo,boolean)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:org.apache.cxf.service.model.BindingInfo createBindingInfo(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding,java.lang.String)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:void initializeBindingOperation(org.apache.cxf.binding.soap.model.SoapBindingInfo,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:void initializeMessage(org.apache.cxf.binding.soap.model.SoapBindingInfo,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.service.model.BindingMessageInfo)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:java.util.List handleMimePart(javax.wsdl.extensions.mime.MIMEPart,java.util.List,org.apache.cxf.service.model.MessageInfo,org.apache.cxf.service.model.BindingMessageInfo,java.util.List,java.util.List)",
            "org.apache.cxf.binding.soap.wsdl11.SoapAddressPlugin:javax.wsdl.extensions.ExtensibilityElement createExtension(boolean,java.lang.String)",
            "org.apache.cxf.binding.soap.HeaderUtil:java.util.Set getHeaderQNames(org.apache.cxf.service.model.BindingMessageInfo)",
            "org.apache.cxf.binding.soap.SoapTransportFactory:org.apache.cxf.service.model.EndpointInfo createEndpointInfo(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.BindingInfo,javax.wsdl.Port)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:java.lang.String getBindingAnnotation(java.lang.String)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:boolean isSOAPBinding(javax.wsdl.Binding)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:java.lang.String getBindingStyle(javax.wsdl.Binding)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapOperation getSoapOperation(java.util.List)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapOperation getSoapOperation(java.lang.Object)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:java.lang.String getSOAPOperationStyle(javax.wsdl.BindingOperation)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapBody getBindingInputSOAPBody(javax.wsdl.BindingOperation)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapBody getBindingOutputSOAPBody(javax.wsdl.BindingOperation)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapBody getSoapBody(java.util.List)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapBody getSoapBody(java.lang.Object)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:java.util.List getSoapHeaders(java.util.List)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapHeader getSoapHeader(java.lang.Object)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapAddress getSoapAddress(java.lang.Object)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapHeader getBindingInputSOAPHeader(javax.wsdl.BindingOperation)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapHeader getBindingOutputSOAPHeader(javax.wsdl.BindingOperation)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapBinding getSoapBinding(java.util.List)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapBinding getSoapBinding(java.lang.Object)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:java.util.List getBindingOperationSoapFaults(javax.wsdl.BindingOperation)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapFault getSoapFault(java.lang.Object)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:boolean isMixedStyle(javax.wsdl.Binding)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:java.lang.String getCanonicalBindingStyle(javax.wsdl.Binding)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapAddress createSoapAddress(javax.wsdl.extensions.ExtensionRegistry,boolean)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapBody createSoapBody(javax.wsdl.extensions.ExtensionRegistry,java.lang.Class,boolean)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapBinding createSoapBinding(javax.wsdl.extensions.ExtensionRegistry,boolean)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapOperation createSoapOperation(javax.wsdl.extensions.ExtensionRegistry,boolean)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapFault createSoapFault(javax.wsdl.extensions.ExtensionRegistry,boolean)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapHeader createSoapHeader(javax.wsdl.extensions.ExtensionRegistry,java.lang.Class,boolean)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:void <clinit>()"
        ]
    },
    "org.apache.cxf.tools.util.PropertyUtil:void load(java.io.InputStream,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.tools.util.PropertyUtil:void load(java.io.InputStream)"
        ]
    },
    "org.apache.cxf.tools.util.ClassCollector:void addSeiClassName(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.tools.util.ClassCollector:void addTypesClassName(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.xmlbeans.tools.XMLBeansToolingDataBinding$1:java.io.Writer createSourceFile(java.lang.String)"
        ]
    },
    "org.apache.cxf.tools.util.ClassCollector:void addServerClassName(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.tools.util.ClassCollector:void addImplClassName(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.tools.util.ClassCollector:void addClientClassName(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.tools.util.ClassCollector:void addServiceClassName(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.tools.util.ClassCollector:void addExceptionClassName(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addNamespace(java.lang.String,java.lang.String,javax.wsdl.Definition)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:javax.wsdl.Definition build(java.util.Map)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:javax.wsdl.Definition newDefinition(javax.xml.namespace.QName,java.lang.String)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addNamespace(java.lang.String,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addNamespace(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLManagerImpl:void addDefinition(java.lang.Object,javax.wsdl.Definition)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition loadDefinition(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(java.net.URL)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(java.lang.String)"
        ]
    },
    "org.apache.cxf.bus.CXFBusImpl:void setExtension(java.lang.Object,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.management.jmx.InstrumentationManagerImpl:void register()",
            "org.apache.cxf.management.counters.CounterRepository:void registerInterceptorsToBus()",
            "org.apache.cxf.headers.HeaderManagerImpl:void register()",
            "org.apache.cxf.transport.ConduitInitiatorManagerImpl:void register()",
            "org.apache.cxf.transport.http.QueryHandlerRegistryImpl:void register()",
            "org.apache.cxf.transport.DestinationFactoryManagerImpl:void register()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void <init>(org.apache.cxf.Bus,java.util.Map,java.util.Map)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void registerWithBus()",
            "org.apache.cxf.endpoint.EndpointResolverRegistryImpl:void init()",
            "org.apache.cxf.endpoint.ServiceContractResolverRegistryImpl:void init()",
            "org.apache.cxf.endpoint.ServerRegistryImpl:void register()",
            "org.apache.cxf.ws.rm.RMManager:void register()",
            "org.apache.cxf.workqueue.WorkQueueManagerImpl:void register()",
            "org.apache.cxf.binding.BindingFactoryManagerImpl:void register()",
            "org.apache.cxf.buslifecycle.CXFBusLifeCycleManager:void register()",
            "org.apache.cxf.catalog.OASISCatalogManager:void register()",
            "org.apache.cxf.catalog.OASISCatalogManager:org.apache.cxf.catalog.OASISCatalogManager getCatalogManager(org.apache.cxf.Bus)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void register()",
            "org.apache.cxf.bus.spring.BusExtensionPostProcessor:java.lang.Object postProcessBeforeInitialization(java.lang.Object,java.lang.String)",
            "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus finishCreatingBus(org.apache.cxf.bus.spring.BusApplicationContext)",
            "org.apache.cxf.bus.resource.ResourceManagerImpl:void register()",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void <init>(java.util.Map,java.util.Map)"
        ]
    },
    "org.apache.cxf.attachment.AttachmentImpl:void setHeader(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.soap.saaj.SAAJOutInterceptor$SAAJOutEndingInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.attachment.AttachmentUtil:org.apache.cxf.message.Attachment createAttachment(java.io.InputStream,javax.mail.internet.InternetHeaders)",
            "org.apache.cxf.jaxws.interceptors.SwAOutInterceptor:void processAttachments(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.binding.soap.model.SoapBodyInfo)"
        ]
    },
    "org.apache.cxf.frontend.SimpleMethodDispatcher:void bind(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void bindOperation(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean:void bindOperation(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean:void initializeWSDLOperationsForProvider()",
            "org.apache.cxf.jaxws.JAXWSMethodDispatcher:void bind(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method[])"
        ]
    },
    "org.apache.cxf.aegis.Context:void setProperty(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.encoded.MarshalRegistry:org.apache.cxf.aegis.type.encoded.MarshalRegistry get(org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.SoapRefRegistry:org.apache.cxf.aegis.type.encoded.SoapRefRegistry get(org.apache.cxf.aegis.Context)"
        ]
    },
    "org.apache.cxf.aegis.util.jdom.StaxBuilder:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.util.jdom.StaxBuilder:void buildTree(org.jdom.JDOMFactory,javax.xml.stream.XMLStreamReader,org.jdom.Document)",
            "org.apache.cxf.aegis.util.jdom.StaxBuilder:int resolveAttrType(java.lang.String)",
            "org.apache.cxf.aegis.util.jdom.StaxBuilder:void <clinit>()",
            "org.apache.cxf.aegis.type.xml.JDOMElementType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.xml.JDOMDocumentType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)"
        ]
    },
    "org.apache.cxf.aegis.util.stax.JDOMStreamReader:void declare(org.jdom.Namespace)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.util.stax.JDOMStreamReader:void setupNamespaces(org.jdom.Element)"
        ]
    },
    "org.apache.cxf.aegis.databinding.XMLStreamDataWriter:void setProperty(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:org.apache.cxf.databinding.DataWriter getDataWriter(org.apache.cxf.message.Message,org.apache.cxf.service.Service,java.lang.Class)"
        ]
    },
    "org.apache.cxf.aegis.databinding.ElementDataWriter:void setProperty(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:org.apache.cxf.databinding.DataWriter getDataWriter(org.apache.cxf.message.Message,org.apache.cxf.service.Service,java.lang.Class)"
        ]
    },
    "org.apache.cxf.aegis.type.basic.InterfaceInvocationHandler:void writeProperty(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.basic.BeanType:void writeProperty(javax.xml.namespace.QName,java.lang.Object,java.lang.Object,java.lang.Class,org.apache.cxf.aegis.type.basic.BeanTypeInfo)",
            "org.apache.cxf.aegis.type.basic.InterfaceInvocationHandler:java.lang.Object doSetter(java.lang.reflect.Method,java.lang.Object[])"
        ]
    },
    "org.apache.cxf.aegis.type.basic.BeanTypeInfo:void mapType(javax.xml.namespace.QName,org.apache.cxf.aegis.type.Type)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.basic.XMLBeanTypeInfo:void mapProperty(java.beans.PropertyDescriptor)",
            "org.apache.cxf.aegis.type.basic.BeanTypeInfo:org.apache.cxf.aegis.type.Type getType(javax.xml.namespace.QName)"
        ]
    },
    "org.apache.cxf.aegis.type.basic.BeanTypeInfo:void mapAttribute(java.lang.String,javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.basic.XMLBeanTypeInfo:void mapProperty(java.beans.PropertyDescriptor)",
            "org.apache.cxf.aegis.type.basic.BeanTypeInfo:void mapProperty(java.beans.PropertyDescriptor)",
            "org.apache.cxf.aegis.type.java5.AnnotatedTypeInfo:void mapProperty(java.beans.PropertyDescriptor)"
        ]
    },
    "org.apache.cxf.aegis.type.basic.BeanTypeInfo:void mapElement(java.lang.String,javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.basic.XMLBeanTypeInfo:void mapProperty(java.beans.PropertyDescriptor)",
            "org.apache.cxf.aegis.type.basic.BeanTypeInfo:void mapProperty(java.beans.PropertyDescriptor)",
            "org.apache.cxf.aegis.type.java5.AnnotatedTypeInfo:void mapProperty(java.beans.PropertyDescriptor)"
        ]
    },
    "org.apache.cxf.aegis.type.basic.BeanTypeInfo:void mapTypeName(javax.xml.namespace.QName,javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.basic.XMLBeanTypeInfo:void mapProperty(java.beans.PropertyDescriptor)"
        ]
    },
    "org.apache.cxf.aegis.type.DefaultTypeMapping:void register(org.apache.cxf.aegis.type.Type)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.databinding.AegisDatabinding:org.apache.cxf.aegis.type.Type getParameterType(org.apache.cxf.service.Service,org.apache.cxf.aegis.type.TypeMapping,org.apache.cxf.service.model.MessagePartInfo,int)",
            "org.apache.cxf.aegis.AegisContext:void processRootTypes()",
            "org.apache.cxf.aegis.type.basic.ObjectType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.BeanType:org.apache.cxf.aegis.type.Type getSuperType()",
            "org.apache.cxf.aegis.type.basic.ArrayType:org.apache.cxf.aegis.type.Type getComponentType()",
            "org.apache.cxf.aegis.type.basic.BeanTypeInfo:org.apache.cxf.aegis.type.Type getType(javax.xml.namespace.QName)",
            "org.apache.cxf.aegis.type.encoded.SoapArrayType:org.apache.cxf.aegis.type.Type getComponentType()",
            "org.apache.cxf.aegis.type.encoded.TrailingBlocks:java.util.List writeBlocks(org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.DefaultTypeMapping:void register(java.lang.Class,javax.xml.namespace.QName,org.apache.cxf.aegis.type.Type)"
        ]
    },
    "org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean:void initSchemaLocations()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean:void <init>()"
        ]
    },
    "org.apache.cxf.jaxws.JaxWsClientProxy:void setupEndpointAddressContext(org.apache.cxf.endpoint.Endpoint)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.JaxWsClientProxy:void <init>(org.apache.cxf.endpoint.Client,javax.xml.ws.Binding)",
            "org.apache.cxf.jaxws.JaxWsClientProxy:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])"
        ]
    },
    "org.apache.cxf.jaxws.ServiceImpl:void addPort(javax.xml.namespace.QName,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.ServiceImpl:void initializePorts()"
        ]
    },
    "org.apache.cxf.jaxws.context.WrappedMessageContext:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.handler.AbstractProtocolHandlerInterceptor:javax.xml.ws.handler.MessageContext createProtocolMessageContext(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.handler.soap.SOAPMessageContextImpl:javax.xml.soap.SOAPMessage getMessage()",
            "org.apache.cxf.jaxws.handler.soap.SOAPMessageContextImpl:void <clinit>()",
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerInterceptor:javax.xml.ws.handler.MessageContext createProtocolMessageContext(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerFaultInInterceptor:javax.xml.ws.handler.MessageContext createProtocolMessageContext(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerFaultOutInterceptor:javax.xml.ws.handler.MessageContext createProtocolMessageContext(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.jaxws.JaxWsClientProxy:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])",
            "org.apache.cxf.jaxws.JaxWsClientProxy:java.util.Map getRequestContext()",
            "org.apache.cxf.jaxws.JaxWsClientProxy:java.util.Map getResponseContext()",
            "org.apache.cxf.jaxws.JAXWSMethodInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object,java.lang.reflect.Method,java.util.List)",
            "org.apache.cxf.jaxws.DispatchImpl:java.util.Map getRequestContext()",
            "org.apache.cxf.jaxws.DispatchImpl:java.util.Map getResponseContext()",
            "org.apache.cxf.jaxws.DispatchImpl:void setupEndpointAddressContext(org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:void <init>(java.util.Map,org.apache.cxf.message.Exchange,javax.xml.ws.handler.MessageContext$Scope)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:java.lang.String mapKey(java.lang.String)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:java.lang.String mapKeyReverse(java.lang.String)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:void clear()",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:void <clinit>()",
            "org.apache.cxf.jaxws.AbstractJAXWSMethodInvoker:java.util.Map removeHandlerProperties(org.apache.cxf.jaxws.context.WrappedMessageContext)"
        ]
    },
    "org.apache.cxf.xmlbeans.XmlBeansSchemaInitializer:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.xmlbeans.XmlBeansDataBinding:void initialize(org.apache.cxf.service.Service)",
            "org.apache.cxf.xmlbeans.XmlBeansSchemaInitializer:void begin(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.xmlbeans.XmlBeansSchemaInitializer:void mapClass(org.apache.cxf.service.model.MessagePartInfo,java.lang.Class)",
            "org.apache.cxf.xmlbeans.XmlBeansSchemaInitializer:void <clinit>()"
        ]
    },
    "org.apache.cxf.xmlbeans.tools.XMLBeansSchemaTypeUtils:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.xmlbeans.tools.XMLBeansSchemaTypeUtils:java.lang.String getNaturalJavaClassName(org.apache.xmlbeans.SchemaType)",
            "org.apache.cxf.xmlbeans.tools.XMLBeansSchemaTypeUtils:void <clinit>()",
            "org.apache.cxf.xmlbeans.tools.XMLBeansToolingDataBinding:java.lang.String getWrappedElementType(javax.xml.namespace.QName,javax.xml.namespace.QName)"
        ]
    },
    "org.apache.cxf.xmlbeans.tools.XMLBeansToolingDataBinding:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.xmlbeans.tools.XMLBeansToolingDataBinding:org.apache.xmlbeans.SchemaTypeSystem loadTypeSystem(java.lang.String,java.lang.String[],java.util.Set,java.io.File,java.io.File,org.xml.sax.EntityResolver)",
            "org.apache.cxf.xmlbeans.tools.XMLBeansToolingDataBinding:void addWsdlSchemas(java.lang.String,org.apache.xmlbeans.impl.xb.substwsdl.DefinitionsDocument,org.apache.xmlbeans.impl.common.XmlErrorWatcher,java.util.List)",
            "org.apache.cxf.xmlbeans.tools.XMLBeansToolingDataBinding:void <clinit>()"
        ]
    },
    "org.apache.cxf.configuration.spring.AbstractSpringBeanMap$SpringBeanMapWrapper:int size()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.WeakIdentityHashMap:int size()",
            "org.apache.cxf.common.util.CacheMap:int size()",
            "org.apache.cxf.common.util.TwoStageMap:int size()",
            "org.apache.cxf.common.util.TwoStageMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:int size()",
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.util.Map keepInOrder(java.util.Map,org.apache.cxf.service.model.OperationInfo,java.util.List)",
            "org.apache.cxf.transport.http.HTTPConduit:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.RMManager:void shutdown()",
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl:boolean isEmpty()",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.wsdl.Port getPort(org.apache.cxf.wsdl.WSDLManager,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.service.model.AbstractMessageContainer:void addMessagePart(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo addOutOfBandMessagePart(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.AbstractMessageContainer:int size()",
            "org.apache.cxf.service.model.OperationInfo:boolean hasFaults()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createMessageParts(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.binding.soap.interceptor.SoapPreProtocolOutInterceptor:void setSoapAction(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.tools.common.ToolContext:boolean isExcludeNamespaceEnabled()",
            "org.apache.cxf.wsdl11.SchemaUtil:void addSchema(java.lang.String,javax.wsdl.extensions.schema.Schema)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildMockServices(javax.wsdl.Definition)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:int size()"
        ]
    },
    "org.apache.cxf.jaxws.support.JaxWsServiceConfiguration:javax.xml.namespace.QName getInParameterName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getInParameterName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)"
        ]
    },
    "org.apache.cxf.jaxws.support.JaxWsServiceConfiguration:javax.xml.namespace.QName getOutParameterName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getOutParameterName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)"
        ]
    },
    "org.apache.cxf.ws.addressing.soap.MAPCodec:java.lang.Object decodeAsNative(java.lang.String,java.lang.Class,org.w3c.dom.Element,javax.xml.bind.Unmarshaller)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.soap.MAPCodec:org.apache.cxf.ws.addressing.AddressingProperties unmarshalMAPs(org.apache.cxf.binding.soap.SoapMessage)"
        ]
    },
    "org.apache.cxf.ws.rm.Servant:org.apache.cxf.ws.rm.CreateSequenceResponseType createSequence(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.Servant:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object)",
            "org.apache.cxf.ws.rm.RMInInterceptor:void handle(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxws.EndpointImpl:void publish(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.EndpointImpl:void publish()",
            "org.apache.cxf.jaxws.spi.ProviderImpl:javax.xml.ws.Endpoint createAndPublishEndpoint(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.cxf.jaxws.EndpointImpl:javax.xml.ws.Binding getBinding()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.EndpointImpl:javax.xml.ws.EndpointReference getEndpointReference(org.w3c.dom.Element[])"
        ]
    },
    "org.apache.cxf.service.invoker.SessionFactory:java.lang.Object create(org.apache.cxf.message.Exchange)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.invoker.SessionFactory:java.lang.Object create(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.service.invoker.SingletonFactory:void createBean(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.service.invoker.PooledFactory:java.lang.Object createObject(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.service.invoker.FactoryInvoker:java.lang.Object getServiceObject(org.apache.cxf.message.Exchange)"
        ]
    },
    "org.apache.cxf.service.invoker.SingletonFactory:void createBean(org.apache.cxf.message.Exchange)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.invoker.SingletonFactory:java.lang.Object create(org.apache.cxf.message.Exchange)"
        ]
    },
    "org.apache.cxf.service.invoker.PooledFactory:java.lang.Object createObject(org.apache.cxf.message.Exchange)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.invoker.PooledFactory:java.lang.Object create(org.apache.cxf.message.Exchange)"
        ]
    },
    "org.apache.cxf.service.invoker.FactoryInvoker:java.lang.Object getServiceObject(org.apache.cxf.message.Exchange)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.invoker.AbstractInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object)"
        ]
    },
    "org.apache.cxf.common.injection.ResourceInjector:void inject(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.invoker.PerRequestFactory:java.lang.Object create(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.bus.spring.Jsr250BeanPostProcessor:java.lang.Object postProcessBeforeInitialization(java.lang.Object,java.lang.String)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadAndRegister(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.jaxws.JaxWsProxyFactoryBean:void buildHandlerChain(org.apache.cxf.jaxws.JaxWsClientProxy)",
            "org.apache.cxf.jaxws.handler.HandlerResolverImpl:void configHandler(javax.xml.ws.handler.Handler)",
            "org.apache.cxf.jaxws.handler.HandlerChainBuilder:void initializeViaInjection(javax.xml.ws.handler.Handler,java.util.Map)",
            "org.apache.cxf.jaxws.JaxWsServerFactoryBean:void injectResources(java.lang.Object)"
        ]
    },
    "org.apache.cxf.common.injection.ResourceInjector:void injectResourceClassLevel(java.lang.Class,javax.'annotation'.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.injection.ResourceInjector:void visitClass(java.lang.Class,java.lang.'annotation'.Annotation)"
        ]
    },
    "org.apache.cxf.common.injection.ResourceInjector:void visitField(java.lang.reflect.Field,java.lang.'annotation'.Annotation)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.annotation.AnnotationProcessor:void processFields(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)"
        ]
    },
    "org.apache.cxf.common.injection.ResourceInjector:void visitMethod(java.lang.reflect.Method,java.lang.'annotation'.Annotation)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.annotation.AnnotationProcessor:void processMethods(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)"
        ]
    },
    "org.apache.cxf.configuration.jsse.spring.TLSClientParametersConfig:org.apache.cxf.configuration.jsse.TLSClientParameters createTLSClientParametersFromType(org.apache.cxf.configuration.security.TLSClientParametersType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.jsse.spring.TLSClientParametersConfig:java.lang.Object createTLSClientParameters(java.lang.String)"
        ]
    },
    "org.apache.cxf.configuration.jsse.spring.TLSServerParametersConfig:void <init>(org.apache.cxf.configuration.security.TLSServerParametersType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.spring.JettySpringTypesFactory:java.util.Map toTLSServerParamenters(java.util.List)",
            "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser:org.apache.cxf.configuration.jsse.spring.TLSServerParametersConfig createTLSServerParametersConfig(java.lang.String)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:void copy(javax.xml.transform.Source,javax.xml.stream.XMLStreamWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.source.XMLStreamDataWriter:void write(java.lang.Object,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.databinding.source.NodeDataWriter:void write(java.lang.Object,org.w3c.dom.Node)",
            "org.apache.cxf.aegis.type.xml.SourceType:void write(javax.xml.transform.Source,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.jaxws.handler.logical.LogicalMessageImpl:void write(javax.xml.transform.Source,org.w3c.dom.Node)",
            "org.apache.cxf.jaxws.interceptors.MessageModeInInterceptor:void doFromSoapMessage(org.apache.cxf.message.Message,java.lang.Object)",
            "org.apache.cxf.jaxws.interceptors.SwAOutInterceptor:javax.activation.DataSource createDataSource(javax.xml.transform.Source,java.lang.String)",
            "org.apache.cxf.jaxws.interceptors.MessageModeOutInterceptor$MessageModeOutInterceptorInternal:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)"
        ]
    },
    "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeAttributeEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor$SOAPHeaderWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeAttributeEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:void writeNode(org.w3c.dom.Node,javax.xml.stream.XMLStreamWriter,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:void writeDocument(org.w3c.dom.Document,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeNode(org.w3c.dom.Node,javax.xml.stream.XMLStreamWriter,boolean)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void writeResponse(java.lang.String,java.lang.String,org.apache.cxf.service.model.EndpointInfo,java.io.OutputStream)",
            "org.apache.cxf.databinding.source.XMLStreamDataWriter:void write(java.lang.Object,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.binding.soap.interceptor.Soap12FaultOutInterceptor$Soap12FaultOutInterceptorInternal:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.Soap11FaultOutInterceptor$Soap11FaultOutInterceptorInternal:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.xml.interceptor.XMLFaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.aegis.type.xml.DocumentType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.databinding.XMLStreamDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.aegis.databinding.ElementDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,org.w3c.dom.Element)",
            "org.apache.cxf.aegis.AegisXMLStreamDataWriter:void write(java.lang.Object,javax.xml.namespace.QName,boolean,javax.xml.stream.XMLStreamWriter,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.basic.ObjectType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.BeanType:void writeObjectInternal(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,boolean)",
            "org.apache.cxf.aegis.type.basic.BeanType:void writeElement(javax.xml.namespace.QName,java.lang.Object,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.ArrayType:void writeValue(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type,java.lang.String,java.lang.String)",
            "org.apache.cxf.aegis.type.encoded.StructType:void writeElement(javax.xml.namespace.QName,java.lang.Object,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.SoapArrayType:void writeValue(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.collection.MapType:void writeEntry(org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.type.Type,java.util.Map$Entry)"
        ]
    },
    "org.apache.cxf.aegis.type.xml.SourceType:void write(javax.xml.transform.Source,javax.xml.stream.XMLStreamWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.xml.SourceType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)"
        ]
    },
    "org.apache.cxf.aegis.xml.stax.ElementReader:void <init>(javax.xml.stream.XMLStreamReader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.AegisXMLStreamDataReader:java.lang.Object read(javax.xml.stream.XMLStreamReader,org.apache.cxf.aegis.type.Type)"
        ]
    },
    "org.apache.cxf.aegis.xml.stax.ElementReader:org.apache.cxf.aegis.xml.MessageReader getNextElementReader()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.xml.AbstractMessageReader:void readToEnd(org.apache.cxf.aegis.xml.MessageReader)",
            "org.apache.cxf.aegis.type.basic.ObjectType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.BeanType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.ArrayType:java.util.Collection readCollection(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.mtom.AbstractXOPType:java.lang.Object readMtoM(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.SoapArrayType:java.util.List readCollection(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.encoded.ArrayTypeInfo,int)",
            "org.apache.cxf.aegis.type.encoded.TrailingBlocks:java.util.List readBlocks(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.collection.MapType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.collection.MapType:void readToEnd(org.apache.cxf.aegis.xml.MessageReader)"
        ]
    },
    "org.apache.cxf.transport.http.AbstractHTTPTransportFactory:org.apache.cxf.transport.Conduit getConduit(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.ws.addressing.EndpointReferenceType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.AbstractHTTPTransportFactory:org.apache.cxf.transport.Conduit getConduit(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.AbstractDestination:org.apache.cxf.transport.Conduit getBackChannel(org.apache.cxf.message.Message,org.apache.cxf.message.Message,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.endpoint.AbstractConduitSelector:org.apache.cxf.transport.Conduit getSelectedConduit(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit:void <init>(org.apache.cxf.Bus,org.apache.cxf.service.model.EndpointInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.AbstractHTTPTransportFactory:org.apache.cxf.transport.Conduit getConduit(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.ws.addressing.EndpointReferenceType)"
        ]
    },
    "org.apache.cxf.transport.servlet.ServletDestination:void <init>(org.apache.cxf.Bus,org.apache.cxf.transport.ConduitInitiator,org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.transport.servlet.ServletTransportFactory,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.servlet.ServletTransportFactory:org.apache.cxf.transport.Destination getDestination(org.apache.cxf.service.model.EndpointInfo)"
        ]
    },
    "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void <init>(org.apache.cxf.Bus,org.apache.cxf.transport.http_jetty.JettyHTTPTransportFactory,org.apache.cxf.service.model.EndpointInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.JettyHTTPTransportFactory:org.apache.cxf.transport.http_jetty.JettyHTTPDestination createDestination(org.apache.cxf.service.model.EndpointInfo)"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleHeadersTrustCaching()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void onFirstWrite()",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void close()"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection access$300(org.apache.cxf.transport.http.HTTPConduit,java.net.HttpURLConnection,org.apache.cxf.message.Message,org.apache.cxf.io.CacheAndWriteOutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleRetransmits()"
        ]
    },
    "org.apache.cxf.io.AbstractWrappedOutputStream:void write(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.IOUtils:int copy(java.io.InputStream,java.io.OutputStream,int)",
            "org.apache.cxf.io.CachedOutputStream:void write(byte[],int,int)",
            "org.apache.cxf.io.AbstractWrappedOutputStream:void write(byte[],int,int)",
            "org.apache.cxf.io.AbstractWrappedOutputStream:void write(byte[])",
            "org.apache.cxf.io.AbstractThresholdOutputStream:void write(byte[],int,int)",
            "org.apache.cxf.io.AbstractThresholdOutputStream:void unBuffer()",
            "org.apache.cxf.io.CacheAndWriteOutputStream:void write(byte[],int,int)",
            "org.apache.cxf.aegis.type.mtom.ByteArrayType:void copy(java.io.InputStream,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.io.AbstractWrappedOutputStream:void write(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.io.CachedOutputStream:void write(int)",
            "org.apache.cxf.io.AbstractWrappedOutputStream:void write(int)",
            "org.apache.cxf.io.AbstractThresholdOutputStream:void write(int)",
            "org.apache.cxf.io.CacheAndWriteOutputStream:void write(int)"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit:org.apache.cxf.transport.Destination getBackChannel()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.WSAContextUtils:org.apache.cxf.ws.addressing.EndpointReferenceType retrieveReplyTo(org.apache.cxf.transport.Conduit,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.addressing.MAPAggregator:void addRoleSpecific(org.apache.cxf.ws.addressing.AddressingPropertiesImpl,org.apache.cxf.message.Message,boolean,boolean)",
            "org.apache.cxf.ws.rm.RMManager:org.apache.cxf.ws.rm.SourceSequence getSequence(org.apache.cxf.ws.rm.Identifier,org.apache.cxf.message.Message,org.apache.cxf.ws.addressing.AddressingProperties)"
        ]
    },
    "org.apache.cxf.transport.https.CertificateHostnameVerifier$AbstractVerifier:void check(java.lang.String,javax.net.ssl.SSLSocket)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.https.HttpsURLConnectionFactory:java.net.HttpURLConnection createConnection(java.net.Proxy,java.net.URL)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection retransmit(java.net.HttpURLConnection,java.net.URL,org.apache.cxf.message.Message,org.apache.cxf.io.CacheAndWriteOutputStream)"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit:void releaseDecoupledDestination()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:void close()"
        ]
    },
    "org.apache.cxf.transport.AbstractDestination:org.apache.cxf.transport.Conduit getBackChannel(org.apache.cxf.message.Message,org.apache.cxf.message.Message,org.apache.cxf.ws.addressing.EndpointReferenceType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:org.apache.cxf.transport.Conduit getBackChannelConduit(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.OneWayProcessorInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.addressing.ContextUtils:void rebaseResponse(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.ws.addressing.AddressingProperties,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.endpoint.PreexistingConduitSelector:void prepare(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:void prepareConduitSelector(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.binding.AbstractBindingFactory:void addListener(org.apache.cxf.transport.Destination,org.apache.cxf.endpoint.Endpoint)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ServerImpl:void start()",
            "org.apache.cxf.binding.soap.SoapBindingFactory:void addListener(org.apache.cxf.transport.Destination,org.apache.cxf.endpoint.Endpoint)"
        ]
    },
    "org.apache.cxf.binding.soap.SoapBindingFactory:void addListener(org.apache.cxf.transport.Destination,org.apache.cxf.endpoint.Endpoint)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ServerImpl:void start()"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:void <init>(org.apache.cxf.Bus,org.apache.cxf.endpoint.Endpoint)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.trust.STSClient:void createClient()"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:void <init>(org.apache.cxf.Bus,org.apache.cxf.endpoint.Endpoint,org.apache.cxf.transport.Conduit)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.rm.Proxy$RMClient:void <init>(org.apache.cxf.ws.rm.Proxy,org.apache.cxf.Bus,org.apache.cxf.endpoint.Endpoint,org.apache.cxf.endpoint.ConduitSelector)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.Proxy:org.apache.cxf.endpoint.Client createClient(org.apache.cxf.Bus,org.apache.cxf.endpoint.Endpoint,org.apache.cxf.transport.Conduit,org.apache.cxf.ws.addressing.EndpointReferenceType)"
        ]
    },
    "org.apache.cxf.frontend.ClientFactoryBean:void createClient(org.apache.cxf.endpoint.Endpoint)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.frontend.ClientFactoryBean:org.apache.cxf.endpoint.Client create()"
        ]
    },
    "org.apache.cxf.transport.http.AbstractHTTPDestination:org.apache.cxf.ws.addressing.EndpointReferenceType getAddressWithId(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl.EndpointReferenceUtils:org.apache.cxf.ws.addressing.EndpointReferenceType getEndpointReferenceWithId(javax.xml.namespace.QName,java.lang.String,java.lang.String,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:org.apache.cxf.endpoint.Client createClient(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:org.apache.cxf.endpoint.Client createClient(java.lang.String,javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:org.apache.cxf.endpoint.Client createClient(java.net.URL)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:org.apache.cxf.endpoint.Client createClient(java.net.URL,javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.addressing.soap.MAPCodec:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.ws.policy.PolicyBuilderImpl:org.apache.neethi.Policy getPolicyOperator(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.PolicyBuilderImpl:org.apache.neethi.Policy getPolicy(org.w3c.dom.Element)",
            "org.apache.cxf.ws.policy.PolicyBuilderImpl:org.apache.neethi.PolicyOperator processOperationElement(org.w3c.dom.Element,org.apache.neethi.PolicyOperator)"
        ]
    },
    "org.apache.cxf.ws.policy.PolicyBuilderImpl:org.apache.neethi.ExactlyOne getExactlyOneOperator(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.PolicyBuilderImpl:org.apache.neethi.PolicyOperator processOperationElement(org.w3c.dom.Element,org.apache.neethi.PolicyOperator)"
        ]
    },
    "org.apache.cxf.ws.policy.PolicyBuilderImpl:org.apache.neethi.All getAllOperator(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.PolicyBuilderImpl:org.apache.neethi.PolicyOperator processOperationElement(org.w3c.dom.Element,org.apache.neethi.PolicyOperator)"
        ]
    },
    "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl:void addUnacknowledged(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.RetransmissionCallback:void onClose(org.apache.cxf.io.CachedOutputStream)",
            "org.apache.cxf.ws.rm.RMManager:void recoverReliableEndpoint(org.apache.cxf.endpoint.Endpoint,org.apache.cxf.transport.Conduit)"
        ]
    },
    "org.apache.cxf.ws.rm.soap.RMSoapInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.soap.RMSoapInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxws.ServiceImpl:java.lang.Object getPort(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.frontend.ClientFactoryBean:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.frontend.ClientProxyFactoryBean:void <init>()"
        ]
    },
    "org.apache.cxf.jaxws.JaxWsClientFactoryBean:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.JaxWsProxyFactoryBean:void <init>()",
            "org.apache.cxf.jaxws.ServiceImpl:javax.xml.ws.Dispatch createDispatch(javax.xml.namespace.QName,java.lang.Class,javax.xml.ws.Service$Mode,javax.xml.ws.WebServiceFeature[])",
            "org.apache.cxf.jaxws.ServiceImpl:javax.xml.ws.Dispatch createDispatch(javax.xml.namespace.QName,javax.xml.bind.JAXBContext,javax.xml.ws.Service$Mode,javax.xml.ws.WebServiceFeature[])"
        ]
    },
    "org.apache.cxf.simple.SimpleServiceBuilder:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.frontend.spring.ServerFactoryBeanDefinitionParser$SpringServerFactoryBean:void <init>(org.apache.cxf.service.factory.ReflectionServiceFactoryBean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.frontend.ServerFactoryBean:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.frontend.spring.ServerFactoryBeanDefinitionParser$SpringServerFactoryBean:void <init>()"
        ]
    },
    "org.apache.cxf.jaxws.JaxWsServerFactoryBean:void <init>(org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.spring.NamespaceHandler$SpringServerFactoryBean:void <init>(org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean)",
            "org.apache.cxf.jaxws.JaxWsServerFactoryBean:void <init>()"
        ]
    },
    "org.apache.cxf.frontend.ClientProxyFactoryBean:javax.xml.namespace.QName getServiceName()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.endpoint.SimpleEndpointImplFactory:org.apache.cxf.endpoint.EndpointImpl newEndpointImpl(org.apache.cxf.Bus,org.apache.cxf.service.Service,org.apache.cxf.service.model.EndpointInfo)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.endpoint.Endpoint createEndpoint(org.apache.cxf.service.model.EndpointInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createEndpoints()",
            "org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory:org.apache.cxf.endpoint.Endpoint createEndpoint()"
        ]
    },
    "org.apache.cxf.frontend.SimpleMethodDispatcher:org.apache.cxf.service.model.BindingOperationInfo getRealOperation(org.apache.cxf.service.model.OperationInfo,org.apache.cxf.service.model.BindingOperationInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.frontend.SimpleMethodDispatcher:org.apache.cxf.service.model.BindingOperationInfo getBindingOperation(java.lang.reflect.Method,org.apache.cxf.endpoint.Endpoint)"
        ]
    },
    "org.apache.cxf.aegis.type.java5.AnnotatedTypeInfo:boolean isNillable(javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.basic.BeanType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.BeanType:void writeObjectInternal(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,boolean)",
            "org.apache.cxf.aegis.type.basic.BeanType:void writeTypeReference(javax.xml.namespace.QName,org.apache.ws.commons.schema.XmlSchemaElement,org.apache.cxf.aegis.type.Type,org.apache.ws.commons.schema.XmlSchema)"
        ]
    },
    "org.apache.cxf.aegis.type.java5.AnnotatedTypeInfo:boolean registerType(java.beans.PropertyDescriptor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.basic.BeanTypeInfo:org.apache.cxf.aegis.type.Type getType(javax.xml.namespace.QName)"
        ]
    },
    "org.apache.cxf.aegis.type.java5.Java5TypeCreator:org.apache.cxf.aegis.type.AbstractTypeCreator$TypeClassInfo createClassInfo(java.beans.PropertyDescriptor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.AbstractTypeCreator:org.apache.cxf.aegis.type.Type createType(java.beans.PropertyDescriptor)",
            "org.apache.cxf.aegis.type.XMLTypeCreator:org.apache.cxf.aegis.type.AbstractTypeCreator$TypeClassInfo createClassInfo(java.beans.PropertyDescriptor)"
        ]
    },
    "org.apache.cxf.aegis.type.java5.AnnotatedTypeInfo:javax.xml.namespace.QName createQName(java.beans.PropertyDescriptor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.java5.AnnotatedTypeInfo:javax.xml.namespace.QName createMappedName(java.beans.PropertyDescriptor,boolean)"
        ]
    },
    "org.apache.cxf.aegis.type.java5.Java5TypeCreator:javax.xml.namespace.QName createQName(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.AbstractTypeCreator:org.apache.cxf.aegis.type.Type createUserType(org.apache.cxf.aegis.type.AbstractTypeCreator$TypeClassInfo)",
            "org.apache.cxf.aegis.type.java5.Java5TypeCreator:org.apache.cxf.aegis.type.Type createDefaultType(org.apache.cxf.aegis.type.AbstractTypeCreator$TypeClassInfo)",
            "org.apache.cxf.aegis.type.java5.Java5TypeCreator:org.apache.cxf.aegis.type.Type createEnumType(org.apache.cxf.aegis.type.AbstractTypeCreator$TypeClassInfo)"
        ]
    },
    "org.apache.cxf.aegis.type.java5.AnnotatedTypeInfo:void mapProperty(java.beans.PropertyDescriptor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.basic.BeanTypeInfo:void initializeSync()"
        ]
    },
    "org.apache.cxf.aegis.type.java5.Java5TypeCreator:javax.xml.namespace.QName createQName(java.lang.Class,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.java5.Java5TypeCreator:org.apache.cxf.aegis.type.AbstractTypeCreator$TypeClassInfo createClassInfo(java.lang.reflect.Method,int)",
            "org.apache.cxf.aegis.type.java5.Java5TypeCreator:javax.xml.namespace.QName createQName(java.lang.Class)"
        ]
    },
    "org.apache.cxf.aegis.type.java5.AnnotatedTypeInfo:int getMinOccurs(javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.basic.BeanType:void writeTypeReference(javax.xml.namespace.QName,org.apache.ws.commons.schema.XmlSchemaElement,org.apache.cxf.aegis.type.Type,org.apache.ws.commons.schema.XmlSchema)"
        ]
    },
    "org.apache.cxf.aegis.type.java5.Java5TypeCreator:org.apache.cxf.aegis.type.Type createDefaultType(org.apache.cxf.aegis.type.AbstractTypeCreator$TypeClassInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.AbstractTypeCreator:org.apache.cxf.aegis.type.Type createTypeForClass(org.apache.cxf.aegis.type.AbstractTypeCreator$TypeClassInfo)",
            "org.apache.cxf.aegis.type.XMLTypeCreator:org.apache.cxf.aegis.type.Type createDefaultType(org.apache.cxf.aegis.type.AbstractTypeCreator$TypeClassInfo)"
        ]
    },
    "org.apache.cxf.jaxb.attachment.JAXBAttachmentMarshaller:java.lang.String addMtomAttachment(byte[],int,int,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxb.attachment.JAXBAttachmentMarshaller:java.lang.String addMtomAttachment(javax.activation.DataHandler,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxb.attachment.JAXBAttachmentUnmarshaller:javax.activation.DataSource getAttachmentDataSource(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.attachment.JAXBAttachmentUnmarshaller:javax.activation.DataHandler getAttachmentAsDataHandler(java.lang.String)",
            "org.apache.cxf.jaxb.attachment.JAXBAttachmentUnmarshaller:byte[] getAttachmentAsByteArray(java.lang.String)"
        ]
    },
    "org.apache.cxf.databinding.AbstractWrapperHelper:java.lang.Object createWrapperObject(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.interceptors.WrapperClassOutInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.databinding.AbstractWrapperHelper:java.util.List getWrapperParts(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.interceptors.WrapperClassInInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.aegis.databinding.ElementDataReader:java.lang.Object read(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.databinding.ElementDataReader:java.lang.Object read(java.lang.Object)"
        ]
    },
    "org.apache.cxf.aegis.databinding.ElementDataReader:java.lang.Object read(javax.xml.namespace.QName,org.w3c.dom.Element,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.databinding.ElementDataReader:java.lang.Object read(javax.xml.namespace.QName,java.lang.Object,java.lang.Class)"
        ]
    },
    "org.apache.cxf.jaxws.handler.logical.LogicalMessageImpl:void write(javax.xml.transform.Source,org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.handler.logical.LogicalMessageImpl:void setPayload(javax.xml.transform.Source)"
        ]
    },
    "org.apache.cxf.jaxws.support.JaxWsServiceConfiguration:java.lang.Boolean isWrapped(java.lang.reflect.Method)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isWrapped(java.lang.reflect.Method)",
            "org.apache.cxf.jaxws.support.JaxWsServiceConfiguration:javax.xml.namespace.QName getPartName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int,org.apache.cxf.service.model.MessageInfo,java.lang.String,boolean)",
            "org.apache.cxf.jaxws.support.JaxWsServiceConfiguration:javax.xml.namespace.QName getParameterName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int,int,java.lang.String,boolean)",
            "org.apache.cxf.jaxws.support.JaxWsServiceConfiguration:javax.xml.namespace.QName getOutParameterName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)",
            "org.apache.cxf.jaxws.support.JaxWsServiceConfiguration:javax.xml.namespace.QName getOutPartName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)"
        ]
    },
    "org.apache.cxf.jaxws.interceptors.SwAOutInterceptor:javax.activation.DataSource createDataSource(javax.xml.transform.Source,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.interceptors.SwAOutInterceptor:void processAttachments(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.binding.soap.model.SoapBodyInfo)"
        ]
    },
    "org.apache.cxf.jaxws.interceptors.SwAOutInterceptor:java.awt.image.BufferedImage convertToBufferedImage(java.awt.Image)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.interceptors.SwAOutInterceptor:void processAttachments(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.binding.soap.model.SoapBodyInfo)"
        ]
    },
    "org.apache.cxf.jaxws.interceptors.MessageModeOutInterceptor$MessageModeOutInterceptorInternal:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.interceptors.MessageModeOutInterceptor$MessageModeOutInterceptorInternal:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void deactivate()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.AbstractObservable:void setMessageObserver(org.apache.cxf.transport.MessageObserver)"
        ]
    },
    "org.apache.cxf.service.invoker.AbstractInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object,java.lang.reflect.Method,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.invoker.AbstractInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object)",
            "org.apache.cxf.jaxws.JAXWSMethodInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object,java.lang.reflect.Method,java.util.List)"
        ]
    },
    "org.apache.cxf.jaxws.AbstractJAXWSMethodInvoker:org.apache.cxf.interceptor.Fault createFault(java.lang.Throwable,java.lang.reflect.Method,java.util.List,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.invoker.AbstractInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object,java.lang.reflect.Method,java.util.List)"
        ]
    },
    "org.apache.cxf.tools.util.URLFactory:java.net.URL createURL(java.net.URL,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.tools.util.URLFactory:java.net.URL createURL(java.lang.String)"
        ]
    },
    "org.apache.cxf.aegis.type.encoded.StructType:void writeProperty(javax.xml.namespace.QName,java.lang.Object,java.lang.Object,java.lang.Class,org.apache.cxf.aegis.type.basic.BeanTypeInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.basic.BeanType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.StructType$WritePropertyAction:void onSet(org.apache.cxf.aegis.type.encoded.SoapRef)"
        ]
    },
    "org.apache.cxf.jaxws.DispatchImpl:void checkError()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.DispatchImpl:java.lang.Object invoke(java.lang.Object,boolean)",
            "org.apache.cxf.jaxws.DispatchImpl:java.util.concurrent.Future invokeAsync(java.lang.Object,javax.xml.ws.AsyncHandler)"
        ]
    },
    "org.apache.cxf.jaxws.DispatchImpl:java.lang.RuntimeException mapException(java.lang.Exception)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.DispatchImpl:java.lang.Object invoke(java.lang.Object,boolean)",
            "org.apache.cxf.jaxws.DispatchImpl:java.util.concurrent.Future invokeAsync(java.lang.Object,javax.xml.ws.AsyncHandler)"
        ]
    },
    "org.apache.cxf.tools.common.model.JavaClass:org.apache.cxf.tools.common.model.JavaMethod appendGetter(org.apache.cxf.tools.common.model.JavaField)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.tools.common.model.JavaClass:org.apache.cxf.tools.common.model.JavaMethod appendSetter(org.apache.cxf.tools.common.model.JavaField)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.tools.common.model.JavaInterface:void replaceMethod(org.apache.cxf.tools.common.model.JavaMethod)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.tools.common.model.JavaInterface:void addMethod(org.apache.cxf.tools.common.model.JavaMethod)"
        ]
    },
    "org.apache.cxf.bus.CXFBusFactory:org.apache.cxf.Bus createBus(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.CXFBusFactory:org.apache.cxf.Bus createBus()"
        ]
    },
    "org.apache.cxf.transport.servlet.CXFServlet:void destroy()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser$SpringJettyHTTPServerEngine:void setApplicationContext(org.springframework.context.ApplicationContext)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineFactoryBeanDefinitionParser$SpringJettyHTTPServerEngineFactory:void setApplicationContext(org.springframework.context.ApplicationContext)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.frontend.spring.ServerFactoryBeanDefinitionParser$SpringServerFactoryBean:void setApplicationContext(org.springframework.context.ApplicationContext)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.frontend.spring.ClientProxyFactoryBeanDefinitionParser$SpringClientProxyFactoryBean:void setApplicationContext(org.springframework.context.ApplicationContext)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxws.spring.EndpointDefinitionParser$SpringEndpointImpl:void setApplicationContext(org.springframework.context.ApplicationContext)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxws.spring.NamespaceHandler$SpringServerFactoryBean:void setApplicationContext(org.springframework.context.ApplicationContext)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxws.spring.JaxWsProxyFactoryBeanDefinitionParser$JAXWSSpringClientProxyFactoryBean:void setApplicationContext(org.springframework.context.ApplicationContext)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.extension.ExtensionManagerImpl:void <init>(java.lang.ClassLoader,java.util.Map,org.apache.cxf.resource.ResourceManager)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void <init>(java.util.Map,java.util.Map)"
        ]
    },
    "org.apache.cxf.bus.extension.ExtensionManagerImpl:void <init>(java.lang.String,java.lang.ClassLoader,java.util.Map,org.apache.cxf.resource.ResourceManager)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.databinding.source.XMLStreamDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.source.XMLStreamDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,java.lang.Object)"
        ]
    },
    "org.apache.cxf.databinding.source.XMLStreamDataWriter:void write(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.util.WeakIdentityHashMap:int hashCode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.WeakIdentityHashMap:int hashCode()",
            "org.apache.cxf.tools.common.Tag:int hashCode()",
            "org.apache.cxf.aegis.type.basic.InterfaceInvocationHandler:java.lang.String proxyToString(java.lang.Object)"
        ]
    },
    "org.apache.cxf.configuration.spring.AbstractSpringBeanMap$Entry:java.lang.Object setValue(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.configuration.spring.AbstractSpringBeanMap$SpringBeanMapWrapper:java.lang.Object put(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.MapNamespaceContext:void addNamespace(java.lang.String,java.lang.String)",
            "org.apache.cxf.helpers.HttpHeaderHelper:java.lang.String mapCharset(java.lang.String)",
            "org.apache.cxf.helpers.HttpHeaderHelper:void <clinit>()",
            "org.apache.cxf.helpers.XMLUtils:javax.xml.transform.TransformerFactory getTransformerFactory()",
            "org.apache.cxf.helpers.XMLUtils:javax.xml.parsers.DocumentBuilderFactory getDocumentBuilderFactory()",
            "org.apache.cxf.common.xmlschema.FixedExtensionDeserializer:void deserialize(org.apache.ws.commons.schema.XmlSchemaObject,javax.xml.namespace.QName,org.w3c.dom.Node)",
            "org.apache.cxf.common.logging.Log4jLogger:void <clinit>()",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.common.util.ASMHelper:org.apache.cxf.common.util.ASMHelper$TypeHelperClassLoader getTypeHelperClassLoader(java.lang.Class)",
            "org.apache.cxf.common.util.ASMHelper:void <clinit>()",
            "org.apache.cxf.common.util.ASMHelper$TypeHelperClassLoader:java.lang.Class defineClass(java.lang.String,byte[])",
            "org.apache.cxf.common.util.CacheMap:void updateMainDataMap()",
            "org.apache.cxf.common.util.CacheMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.common.util.CacheMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.common.util.ParamReader:void readCode()",
            "org.apache.cxf.common.util.TwoStageMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.resource.URIResolver:void tryRemote(java.lang.String)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.util.List getBeanListForId(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void mapElementToJaxbProperty(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder,java.lang.String,java.lang.Class)",
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:java.lang.Object unmarshalFactoryString(java.lang.String,java.lang.Class)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void initWildcardDefinitionMap()",
            "org.apache.cxf.jaxb.JAXBUtils:void <clinit>()",
            "org.apache.cxf.jaxb.JAXBDataBinding:void initialize(org.apache.cxf.service.Service)",
            "org.apache.cxf.jaxb.JAXBDataBinding:org.apache.cxf.jaxb.JAXBDataBinding$CachedContextAndSchemas createJAXBContextAndSchemas(java.util.Set,java.lang.String)",
            "org.apache.cxf.jaxb.JAXBDataBinding:void addToObjectFactoryCache(java.lang.Package,java.lang.Class)",
            "org.apache.cxf.jaxb.JAXBDataBinding$1:void <init>(org.apache.cxf.jaxb.JAXBDataBinding,java.util.List)",
            "org.apache.cxf.management.jmx.export.runtime.ModelMBeanInfoSupporter:void addModelMBeanMethod(java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String,java.lang.String,javax.management.Descriptor)",
            "org.apache.cxf.management.jmx.export.runtime.ModelMBeanInfoSupporter:void addModelMBeanNotification(java.lang.String[],java.lang.String,java.lang.String,javax.management.Descriptor)",
            "org.apache.cxf.management.jmx.export.runtime.ModelMBeanInfoSupporter:void addModelMBeanAttribute(java.lang.String,java.lang.String,boolean,boolean,boolean,java.lang.String,javax.management.Descriptor)",
            "org.apache.cxf.management.jmx.export.runtime.ModelMBeanInfoSupporter:void addModelMBeanConstructor(java.lang.reflect.Constructor,java.lang.String,javax.management.Descriptor)",
            "org.apache.cxf.management.counters.CounterRepository:void increaseCounter(javax.management.ObjectName,org.apache.cxf.management.counters.MessageHandlingTimeRecorder)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startPrefixMapping(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:void addNs(java.lang.String,java.lang.String)",
            "org.apache.cxf.message.MessageImpl:void setContent(java.lang.Class,java.lang.Object)",
            "org.apache.cxf.headers.HeaderManagerImpl:void registerHeaderProcessor(org.apache.cxf.headers.HeaderProcessor)",
            "org.apache.cxf.interceptor.StaxOutInterceptor:javax.xml.stream.XMLOutputFactory getXMLOutputFactory(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxInInterceptor:javax.xml.stream.XMLInputFactory getXMLInputFactory(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.FIStaxOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.ConduitInitiatorManagerImpl:void registerConduitInitiator(java.lang.String,org.apache.cxf.transport.ConduitInitiator)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void writeResponse(java.lang.String,java.lang.String,org.apache.cxf.service.model.EndpointInfo,java.io.OutputStream)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updateDefinition(javax.wsdl.Definition,java.util.Map,java.util.Map,java.lang.String,org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updateSchemaImports(javax.wsdl.extensions.schema.Schema,java.util.Map,java.lang.String)",
            "org.apache.cxf.transport.http.Cookie:void handleSetCookie(java.util.Map,java.util.List)",
            "org.apache.cxf.transport.http.DigestAuthSupplier:java.lang.String getAuthorizationForRealm(org.apache.cxf.transport.http.HTTPConduit,java.net.URL,org.apache.cxf.message.Message,java.lang.String,java.lang.String)",
            "org.apache.cxf.transport.http.HTTPConduit:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:void setHeadersByAuthorizationPolicy(org.apache.cxf.message.Message,java.net.URL,java.util.Map)",
            "org.apache.cxf.transport.http.HTTPConduit:void setHeadersByClientPolicy(org.apache.cxf.message.Message,java.util.Map)",
            "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection authorizationRetransmit(java.net.HttpURLConnection,org.apache.cxf.message.Message,org.apache.cxf.io.CacheAndWriteOutputStream)",
            "org.apache.cxf.transport.http.HTTPConduit:void setBasicAuthHeader(java.lang.String,java.lang.String,java.util.Map)",
            "org.apache.cxf.transport.http.HTTPConduit:void setProxyBasicAuthHeader(java.lang.String,java.lang.String,java.util.Map)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void copyRequestHeaders(org.apache.cxf.message.Message,java.util.Map)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void setPolicies(java.util.Map)",
            "org.apache.cxf.transport.http.gzip.GZIPOutInterceptor:void addHeader(org.apache.cxf.message.Message,java.lang.String,java.lang.String)",
            "org.apache.cxf.transport.DestinationFactoryManagerImpl:void registerDestinationFactory(java.lang.String,org.apache.cxf.transport.DestinationFactory)",
            "org.apache.cxf.transport.servlet.ServletContextResourceResolver:java.lang.Object resolve(java.lang.String,java.lang.Class)",
            "org.apache.cxf.transport.servlet.ServletTransportFactory:org.apache.cxf.transport.Destination getDestination(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.servlet.AbstractCXFServlet:void init(javax.servlet.ServletConfig)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPTransportFactory:org.apache.cxf.transport.http_jetty.JettyHTTPDestination createDestination(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void setEnginesList(java.util.List)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void setTLSServerParametersForPort(int,org.apache.cxf.configuration.jsse.TLSServerParameters)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine createJettyHTTPServerEngine(int,java.lang.String)",
            "org.apache.cxf.transport.jms.JMSUtils:void addContentTypeToProtocolHeader(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.jms.JMSConduit:void sendExchange(org.apache.cxf.message.Exchange,java.lang.Object)",
            "org.apache.cxf.NSManager:void resolveConstants(java.lang.Class)",
            "org.apache.cxf.extension.RegistryImpl:void register(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.endpoint.ClientImpl:java.util.Map getRequestContext()",
            "org.apache.cxf.endpoint.ClientImpl:java.util.Map getResponseContext()",
            "org.apache.cxf.endpoint.ClientImpl:void setThreadLocalRequestContext(boolean)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map)",
            "org.apache.cxf.endpoint.ClientImpl$EchoContext:java.lang.Object put(java.lang.String,java.lang.Object)",
            "org.apache.cxf.ws.addressing.ContextUtils:java.lang.String getActionFromMessageAttributes(org.apache.cxf.service.model.MessageInfo)",
            "org.apache.cxf.ws.addressing.MAPAggregator:boolean validateIncomingMAPs(org.apache.cxf.ws.addressing.AddressingProperties,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void cacheExchange(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.addressing.AddressingProperties)",
            "org.apache.cxf.ws.policy.PolicyRegistryImpl:void register(java.lang.String,org.apache.neethi.Policy)",
            "org.apache.cxf.ws.security.policy.model.ContentEncryptedElements:void addDeclaredNamespaces(java.lang.String,java.lang.String)",
            "org.apache.cxf.ws.security.policy.model.SignedEncryptedElements:void addDeclaredNamespaces(java.lang.String,java.lang.String)",
            "org.apache.cxf.ws.security.policy.model.RequiredElements:void addDeclaredNamespaces(java.lang.String,java.lang.String)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationOutInterceptor:void renewToken(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.ws.security.tokenstore.SecurityToken,org.apache.cxf.ws.security.policy.model.SecureConversationToken)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationTokenInterceptorProvider:void mapSecurityProps(org.apache.cxf.message.Message,java.util.Map)",
            "org.apache.cxf.ws.security.trust.STSClient:org.apache.cxf.ws.security.tokenstore.SecurityToken requestSecurityToken(java.lang.String,java.lang.String,java.lang.String,org.apache.cxf.ws.security.tokenstore.SecurityToken)",
            "org.apache.cxf.ws.security.trust.STSClient:boolean validateSecurityToken(org.apache.cxf.ws.security.tokenstore.SecurityToken,java.lang.String)",
            "org.apache.cxf.ws.security.trust.STSClient:void cancelSecurityToken(org.apache.cxf.ws.security.tokenstore.SecurityToken)",
            "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:void add(org.apache.cxf.ws.security.tokenstore.SecurityToken)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:java.util.Map handleSupportingTokens(org.apache.cxf.ws.security.policy.model.SupportingToken,boolean,java.util.Map)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:org.apache.ws.security.components.crypto.Crypto getCrypto(org.apache.cxf.ws.security.policy.model.TokenWrapper,java.lang.String,java.lang.String)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:java.util.Properties getProps(java.lang.Object,org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.wss4j.AbstractWSS4JInterceptor:void setProperty(java.lang.String,java.lang.String)",
            "org.apache.cxf.ws.security.wss4j.AbstractWSS4JInterceptor:org.apache.ws.security.components.crypto.Crypto loadSignatureCrypto(org.apache.ws.security.handler.RequestData)",
            "org.apache.cxf.ws.security.wss4j.AbstractWSS4JInterceptor:org.apache.ws.security.components.crypto.Crypto loadDecryptionCrypto(org.apache.ws.security.handler.RequestData)",
            "org.apache.cxf.ws.security.wss4j.AbstractWSS4JInterceptor:org.apache.ws.security.components.crypto.Crypto loadEncryptionCrypto(org.apache.ws.security.handler.RequestData)",
            "org.apache.cxf.ws.rm.Source:void addSequence(org.apache.cxf.ws.rm.SourceSequence,boolean)",
            "org.apache.cxf.ws.rm.Source:void setCurrent(org.apache.cxf.ws.rm.Identifier,org.apache.cxf.ws.rm.SourceSequence)",
            "org.apache.cxf.ws.rm.Destination:void addSequence(org.apache.cxf.ws.rm.DestinationSequence,boolean)",
            "org.apache.cxf.ws.rm.RMManager:org.apache.cxf.ws.rm.RMEndpoint getReliableEndpoint(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.RMManager:void recoverReliableEndpoint(org.apache.cxf.endpoint.Endpoint,org.apache.cxf.transport.Conduit)",
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl:org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl$ResendCandidate cacheUnacknowledged(org.apache.cxf.message.Message)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void <init>(java.util.SortedSet)",
            "org.apache.cxf.workqueue.WorkQueueManagerImpl:void addNamedWorkQueue(java.lang.String,org.apache.cxf.workqueue.AutomaticWorkQueue)",
            "org.apache.cxf.databinding.AbstractDataBinding:void <init>()",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void <clinit>()",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.bind.JAXBElement getServiceNameType(javax.xml.namespace.QName,java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:void setInterfaceName(org.apache.cxf.ws.addressing.EndpointReferenceType,javax.xml.namespace.QName)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:void setWSDLLocation(org.apache.cxf.ws.addressing.EndpointReferenceType,java.lang.String[])",
            "org.apache.cxf.service.model.BindingOperationInfo:void <init>(org.apache.cxf.service.model.BindingInfo,org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:void addMessagePart(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:void setProperty(java.lang.String,java.lang.Object)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:void addExtensionAttribute(javax.xml.namespace.QName,java.lang.Object)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperationForWrapperElement(org.apache.cxf.message.Exchange,javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.service.model.InterfaceInfo:void addOperation(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.ServiceInfo:void initMessagesMap()",
            "org.apache.cxf.service.model.BindingInfo:void addOperation(org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.service.model.OperationInfo:void addFault(org.apache.cxf.service.model.FaultInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createEndpoints()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isWrapped(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isRPC(java.lang.reflect.Method)",
            "org.apache.cxf.binding.BindingFactoryManagerImpl:void registerBindingFactory(java.lang.String,org.apache.cxf.binding.BindingFactory)",
            "org.apache.cxf.binding.soap.interceptor.SoapPreProtocolOutInterceptor:void setSoapAction(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.SoapVersionFactory:void register(org.apache.cxf.binding.soap.SoapVersion)",
            "org.apache.cxf.clustering.FailoverTargetSelector:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.clustering.FailoverTargetSelector:void overrideAddressProperty(java.util.Map)",
            "org.apache.cxf.tools.common.ToolContext:void put(java.lang.String,java.lang.Object)",
            "org.apache.cxf.tools.common.ToolContext:void addNamespacePackageMap(java.lang.String,java.lang.String)",
            "org.apache.cxf.tools.common.ToolContext:void addExcludeNamespacePackageMap(java.lang.String,java.lang.String)",
            "org.apache.cxf.tools.common.VelocityGenerator:void setCommonAttributes()",
            "org.apache.cxf.tools.common.VelocityGenerator:void setAttributes(java.lang.String,java.lang.Object)",
            "org.apache.cxf.tools.common.model.JavaModel:void addInterface(java.lang.String,org.apache.cxf.tools.common.model.JavaInterface)",
            "org.apache.cxf.tools.common.model.JavaModel:void addExceptionClass(java.lang.String,org.apache.cxf.tools.common.model.JavaExceptionClass)",
            "org.apache.cxf.tools.common.model.JavaModel:void addServiceClass(java.lang.String,org.apache.cxf.tools.common.model.JavaServiceClass)",
            "org.apache.cxf.tools.common.model.JavaType:void <clinit>()",
            "org.apache.cxf.tools.common.model.JavaMethod:void addAnnotation(java.lang.String,org.apache.cxf.tools.common.model.JAnnotation)",
            "org.apache.cxf.tools.common.model.JavaMethod:void <clinit>()",
            "org.apache.cxf.tools.common.model.JavaParameter:void addAnnotation(java.lang.String,org.apache.cxf.tools.common.model.JAnnotation)",
            "org.apache.cxf.tools.util.ToolsStaxUtils:java.util.List getTags(java.io.File)",
            "org.apache.cxf.tools.util.ToolsStaxUtils:org.apache.cxf.tools.common.Tag getTagTree(java.io.InputStream,java.util.List)",
            "org.apache.cxf.tools.util.BuiltInTypesJavaMappingUtil:void <clinit>()",
            "org.apache.cxf.tools.util.SOAPBindingUtil:void <clinit>()",
            "org.apache.cxf.tools.util.PropertyUtil:void load(java.io.InputStream,java.lang.String)",
            "org.apache.cxf.tools.util.ClassCollector:void addSeiClassName(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.tools.util.ClassCollector:void addTypesClassName(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.tools.util.ClassCollector:void addServerClassName(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.tools.util.ClassCollector:void addImplClassName(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.tools.util.ClassCollector:void addClientClassName(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.tools.util.ClassCollector:void addServiceClassName(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.tools.util.ClassCollector:void addExceptionClassName(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.catalog.CatalogXmlSchemaURIResolver:org.xml.sax.InputSource resolveEntity(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.wsdl11.SchemaUtil:void addSchema(java.lang.String,javax.wsdl.extensions.schema.Schema)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void parseWSDL(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void registerWSDLExtensibilityPlugins(javax.wsdl.extensions.ExtensionRegistry)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildTypes(java.util.Collection,java.util.Map,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addNamespace(java.lang.String,java.lang.String,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(java.net.URL)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(org.w3c.dom.Element)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void addDefinition(java.lang.Object,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition loadDefinition(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void putSchemasForDefinition(javax.wsdl.Definition,org.apache.cxf.service.model.ServiceSchemaInfo)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void processExtension(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadAndRegister(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void <init>(java.util.Map,java.util.Map)",
            "org.apache.cxf.bus.CXFBusImpl:void setExtension(java.lang.Object,java.lang.Class)",
            "org.apache.cxf.attachment.AttachmentImpl:void setHeader(java.lang.String,java.lang.String)",
            "org.apache.cxf.attachment.AttachmentUtil:java.util.Map getDHMap(java.util.Collection)",
            "org.apache.cxf.frontend.ClientProxyFactoryBean:java.lang.Object create()",
            "org.apache.cxf.frontend.SimpleMethodDispatcher:void bind(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method[])",
            "org.apache.cxf.frontend.SimpleMethodDispatcher:org.apache.cxf.service.model.BindingOperationInfo getBindingOperation(java.lang.reflect.Method,org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory:org.apache.cxf.endpoint.Endpoint createEndpoint()",
            "org.apache.cxf.aegis.Context:void setProperty(java.lang.Object)",
            "org.apache.cxf.aegis.util.jdom.StaxBuilder:void <clinit>()",
            "org.apache.cxf.aegis.util.stax.JDOMStreamReader:void declare(org.jdom.Namespace)",
            "org.apache.cxf.aegis.databinding.XMLStreamDataWriter:void setProperty(java.lang.String,java.lang.Object)",
            "org.apache.cxf.aegis.databinding.ElementDataWriter:void setProperty(java.lang.String,java.lang.Object)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void initializeMessage(org.apache.cxf.service.Service,org.apache.cxf.aegis.type.TypeMapping,org.apache.cxf.service.model.AbstractMessageContainer,int,java.util.Set)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:org.apache.cxf.aegis.type.Type getParameterType(org.apache.cxf.service.Service,org.apache.cxf.aegis.type.TypeMapping,org.apache.cxf.service.model.MessagePartInfo,int)",
            "org.apache.cxf.aegis.type.basic.XMLBeanTypeInfo:org.apache.cxf.aegis.type.basic.BeanTypePropertyInfo ensurePropertyInfo(javax.xml.namespace.QName)",
            "org.apache.cxf.aegis.type.basic.InterfaceInvocationHandler:void writeProperty(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.aegis.type.basic.BeanTypeInfo:void mapType(javax.xml.namespace.QName,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.basic.BeanTypeInfo:void mapAttribute(java.lang.String,javax.xml.namespace.QName)",
            "org.apache.cxf.aegis.type.basic.BeanTypeInfo:void mapElement(java.lang.String,javax.xml.namespace.QName)",
            "org.apache.cxf.aegis.type.basic.BeanTypeInfo:void mapTypeName(javax.xml.namespace.QName,javax.xml.namespace.QName)",
            "org.apache.cxf.aegis.type.encoded.MarshalRegistry:java.lang.String getInstanceId(java.lang.Object)",
            "org.apache.cxf.aegis.type.XMLTypeCreator:org.w3c.dom.Document getDocument(java.lang.Class)",
            "org.apache.cxf.aegis.type.DefaultTypeMapping:void register(org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.collection.MapType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.jaxws.handler.HandlerResolverImpl:java.util.List getHandlerChain(javax.xml.ws.handler.PortInfo)",
            "org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean:void initSchemaLocations()",
            "org.apache.cxf.jaxws.support.JaxWsServiceConfiguration:javax.jws.WebParam getWebParam(java.lang.reflect.Method,int)",
            "org.apache.cxf.jaxws.support.JaxWsServiceConfiguration:java.lang.Class getResponseWrapper(java.lang.reflect.Method)",
            "org.apache.cxf.jaxws.support.JaxWsServiceConfiguration:java.lang.Class getRequestWrapper(java.lang.reflect.Method)",
            "org.apache.cxf.jaxws.JaxWsClientProxy:void setupEndpointAddressContext(org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.jaxws.JaxWsClientProxy:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])",
            "org.apache.cxf.jaxws.ServiceImpl:void addPort(javax.xml.namespace.QName,java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxws.DispatchImpl:java.lang.Object invoke(java.lang.Object,boolean)",
            "org.apache.cxf.jaxws.interceptors.SwAOutInterceptor:boolean callSWARefMethod(javax.xml.bind.JAXBContext)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:void <init>(java.util.Map,org.apache.cxf.message.Exchange,javax.xml.ws.handler.MessageContext$Scope)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:void copyScoped(java.util.Map)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:java.lang.Object createAttachments(org.apache.cxf.message.Message,java.lang.String)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:java.lang.Object put(java.lang.String,java.lang.Object,javax.xml.ws.handler.MessageContext$Scope)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:void setScope(java.lang.String,javax.xml.ws.handler.MessageContext$Scope)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:void <clinit>()",
            "org.apache.cxf.xmlbeans.XmlBeansSchemaInitializer:org.apache.ws.commons.schema.XmlSchema getSchema(org.apache.xmlbeans.SchemaTypeSystem,java.lang.String)",
            "org.apache.cxf.xmlbeans.XmlBeansSchemaInitializer:void <clinit>()",
            "org.apache.cxf.xmlbeans.tools.XMLBeansSchemaTypeUtils:void <clinit>()",
            "org.apache.cxf.xmlbeans.tools.XMLBeansToolingDataBinding:void <clinit>()"
        ]
    },
    "org.apache.cxf.message.AbstractWrappedMessage:void removeContent(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.message.AbstractWrappedMessage:void removeContent(java.lang.Class)",
            "org.apache.cxf.interceptor.StaxOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxOutInterceptor$StaxOutEndingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponseInternal()",
            "org.apache.cxf.jaxws.handler.HandlerChainInvoker:void setFaultMessage(javax.xml.ws.handler.MessageContext,java.lang.Exception)",
            "org.apache.cxf.jaxws.handler.logical.LogicalHandlerFaultOutInterceptor$LogicalHandlerFaultOutEndingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.handler.logical.LogicalHandlerOutInterceptor$LogicalHandlerOutEndingInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.servlet.ServletDestination:void shutdown()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:void releaseDecoupledDestination()",
            "org.apache.cxf.endpoint.ServerImpl:void stop()"
        ]
    },
    "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void shutdown()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:void releaseDecoupledDestination()",
            "org.apache.cxf.endpoint.ServerImpl:void stop()"
        ]
    },
    "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine:void shutdown()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void postShutdown()"
        ]
    },
    "org.apache.cxf.ws.addressing.soap.MAPCodec:void handleFault(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:void unwind(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:void update(org.apache.cxf.ws.security.tokenstore.SecurityToken)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor$STSInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object)"
        ]
    },
    "org.apache.cxf.ws.rm.DestinationSequence$SequenceTermination:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl$3:void run()",
            "org.apache.cxf.workqueue.SynchronousExecutor:void execute(java.lang.Runnable)",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl$2:void run()",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void execute(java.lang.Runnable,long)",
            "org.apache.cxf.jaxws.ServiceImpl$1:void execute(java.lang.Runnable)"
        ]
    },
    "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:org.apache.cxf.service.model.MessageInfo setMessage(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo,boolean,org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.MessageInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:org.apache.cxf.service.model.MessagePartInfo findMessagePart(org.apache.cxf.message.Exchange,java.util.Collection,javax.xml.namespace.QName,boolean,int,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:org.apache.cxf.service.model.MessageInfo setMessage(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo,boolean,org.apache.cxf.service.model.ServiceInfo)"
        ]
    },
    "org.apache.cxf.transport.ChainInitiationObserver:void setExchangeProperties(org.apache.cxf.message.Exchange,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.ChainInitiationObserver:void onMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:void setExchangeProperties(org.apache.cxf.message.Exchange,org.apache.cxf.endpoint.Endpoint,org.apache.cxf.service.model.BindingOperationInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:void invoke(org.apache.cxf.endpoint.ClientCallback,org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[])",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.ClientImpl:org.apache.cxf.transport.Conduit getConduit()"
        ]
    },
    "org.apache.cxf.ws.policy.PolicyEngineImpl:void setEffectiveClientRequestPolicy(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.ws.policy.EffectivePolicy)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.RMEndpoint:void setPolicies()"
        ]
    },
    "org.apache.cxf.ws.policy.PolicyEngineImpl:void setEffectiveServerResponsePolicy(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.ws.policy.EffectivePolicy)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.RMEndpoint:void setPolicies()"
        ]
    },
    "org.apache.cxf.ws.policy.PolicyEngineImpl:void setEffectiveServerFaultPolicy(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.service.model.BindingFaultInfo,org.apache.cxf.ws.policy.EffectivePolicy)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.policy.PolicyEngineImpl:void setClientEndpointPolicy(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.ws.policy.EndpointPolicy)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.WSPolicyFeature:void initialize(org.apache.cxf.endpoint.Client,org.apache.cxf.Bus)",
            "org.apache.cxf.ws.rm.RMEndpoint:void setPolicies()"
        ]
    },
    "org.apache.cxf.ws.policy.PolicyEngineImpl:void setServerEndpointPolicy(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.ws.policy.EndpointPolicy)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.WSPolicyFeature:void initialize(org.apache.cxf.endpoint.Server,org.apache.cxf.Bus)",
            "org.apache.cxf.ws.rm.RMEndpoint:void setPolicies()"
        ]
    },
    "org.apache.cxf.ws.policy.PolicyEngineImpl:void setEffectiveServerRequestPolicy(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.ws.policy.EffectivePolicy)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.RMEndpoint:void setPolicies()"
        ]
    },
    "org.apache.cxf.ws.policy.PolicyEngineImpl:void setEffectiveClientResponsePolicy(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.ws.policy.EffectivePolicy)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.RMEndpoint:void setPolicies()"
        ]
    },
    "org.apache.cxf.ws.policy.PolicyEngineImpl:void setEffectiveClientFaultPolicy(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.service.model.BindingFaultInfo,org.apache.cxf.ws.policy.EffectivePolicy)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.security.policy.interceptors.IssuedTokenInterceptorProvider:org.apache.cxf.ws.security.tokenstore.TokenStore getTokenStore(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.policy.interceptors.IssuedTokenInterceptorProvider$IssuedTokenOutInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.ws.security.policy.interceptors.SecureConversationTokenInterceptorProvider:org.apache.cxf.ws.security.tokenstore.TokenStore getTokenStore(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor$SecureConversationCancelInterceptor:void doCancel(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.ws.security.policy.model.SecureConversationToken)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationOutInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)"
        ]
    },
    "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:java.util.Map getCryptoCache()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:org.apache.ws.security.components.crypto.Crypto getCrypto(org.apache.cxf.ws.security.policy.model.TokenWrapper,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:org.apache.cxf.ws.security.tokenstore.TokenStore getTokenStore()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:org.apache.cxf.ws.security.tokenstore.SecurityToken getSecurityToken()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.SymmetricBindingHandler:void <init>(org.apache.cxf.ws.security.policy.model.SymmetricBinding,javax.xml.soap.SOAPMessage,org.apache.ws.security.message.WSSecHeader,org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.binding.soap.SoapMessage)"
        ]
    },
    "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:java.util.Map getPropertiesCache(org.apache.cxf.binding.soap.SoapMessage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:java.util.Properties getProps(java.lang.Object,org.apache.cxf.binding.soap.SoapMessage)"
        ]
    },
    "org.apache.cxf.ws.rm.RMEndpoint:void createService()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.RMEndpoint:void initialise(org.apache.cxf.transport.Conduit,org.apache.cxf.ws.addressing.EndpointReferenceType)"
        ]
    },
    "org.apache.cxf.service.model.UnwrappedOperationInfo:void setProperty(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.model.UnwrappedOperationInfo:void setProperty(java.lang.String,java.lang.Object)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeWSDLOperation(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean initializeClassInfo(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,java.util.List)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.OperationInfo createOperation(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.InterfaceInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createMessageParts(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildInterfaceOperation(org.apache.cxf.service.model.InterfaceInfo,javax.wsdl.Operation)",
            "org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean:void initializeWSDLOperation(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createFaultForException(java.lang.Class,org.apache.cxf.service.model.FaultInfo)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.binding.soap.interceptor.RPCInInterceptor:void setMessage(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.soap.interceptor.RPCInInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxws.binding.soap.SOAPBindingImpl:void setMTOMEnabled(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.support.JaxWsEndpointImpl:void createJaxwsBinding()"
        ]
    },
    "org.apache.cxf.management.jmx.InstrumentationManagerImpl:void register(java.lang.Object,javax.management.ObjectName,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.management.jmx.InstrumentationManagerImpl:void register(java.lang.Object,javax.management.ObjectName)",
            "org.apache.cxf.management.jmx.InstrumentationManagerImpl:javax.management.ObjectName register(org.apache.cxf.management.ManagedComponent,boolean)"
        ]
    },
    "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo addMessagePart(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.trust.STSUtils:org.apache.cxf.service.model.OperationInfo addIssueOperation(org.apache.cxf.service.model.InterfaceInfo,java.lang.String,java.lang.String)",
            "org.apache.cxf.ws.security.trust.STSUtils:org.apache.cxf.service.model.OperationInfo addCancelOperation(org.apache.cxf.service.model.InterfaceInfo,java.lang.String,java.lang.String)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createInputWrappedMessageParts(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,org.apache.cxf.service.model.MessageInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createOutputWrappedMessageParts(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,org.apache.cxf.service.model.MessageInfo)",
            "org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean:void initializeWSDLOperationsForProvider()",
            "org.apache.cxf.jaxws.DispatchImpl:void addInvokeOperation(boolean)"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLServiceBuilder:boolean isWrappableSequence(org.apache.ws.commons.schema.XmlSchemaComplexType,java.lang.String,org.apache.cxf.service.model.MessageInfo,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void checkForWrapped(org.apache.cxf.service.model.OperationInfo,boolean)"
        ]
    },
    "org.apache.cxf.ws.rm.RMEndpoint:void buildOperationInfo(org.apache.cxf.service.model.InterfaceInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.RMEndpoint:void buildInterfaceInfo(org.apache.cxf.service.model.ServiceInfo)"
        ]
    },
    "org.apache.cxf.binding.soap.interceptor.SoapPreProtocolOutInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.tools.common.ToolContext:java.lang.String getCustomizedNS(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.wsdl11.WSDLServiceFactory:void <init>(org.apache.cxf.Bus,java.net.URL,javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:void <init>(org.apache.cxf.Bus,java.net.URL,javax.xml.namespace.QName,javax.xml.namespace.QName,org.apache.cxf.endpoint.EndpointImplFactory)"
        ]
    },
    "org.apache.cxf.configuration.spring.AbstractSpringBeanMap$SpringBeanMapWrapper:boolean isEmpty()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.xmlschema.FixedExtensionDeserializer:void deserialize(org.apache.ws.commons.schema.XmlSchemaObject,javax.xml.namespace.QName,org.w3c.dom.Node)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:boolean isEmpty()",
            "org.apache.cxf.common.util.CacheMap:boolean isEmpty()",
            "org.apache.cxf.common.util.TwoStageMap:boolean isEmpty()",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:boolean isEmpty()",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureWithWildCard(java.lang.String,java.lang.Object)",
            "org.apache.cxf.binding.soap.SoapMessage:boolean hasAdditionalEnvNs()",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void parseWSDL(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void copyExtensionAttributes(org.apache.cxf.service.model.AbstractPropertiesHolder,javax.wsdl.extensions.AttributeExtensible)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void activateAll()",
            "org.apache.cxf.aegis.type.encoded.MarshalRegistry$1:boolean hasNext()",
            "org.apache.cxf.jaxws.handler.soap.SOAPMessageContextImpl:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.jaxws.handler.logical.LogicalMessageContextImpl:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:boolean isEmpty()",
            "org.apache.cxf.jaxws.AbstractJAXWSMethodInvoker:void updateWebServiceContext(org.apache.cxf.message.Exchange,javax.xml.ws.handler.MessageContext)"
        ]
    },
    "org.apache.cxf.jaxws.handler.soap.SOAPHandlerFaultOutInterceptor:void access$000(org.apache.cxf.jaxws.handler.soap.SOAPHandlerFaultOutInterceptor,org.apache.cxf.binding.soap.SoapMessage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerFaultOutInterceptor$1:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)"
        ]
    },
    "org.apache.cxf.aegis.type.xml.JDOMElementType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.AegisXMLStreamDataReader:java.lang.Object read(javax.xml.stream.XMLStreamReader,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.basic.ObjectType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.BeanType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.ArrayType:java.util.Collection readCollection(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.SoapRefType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.collection.MapType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)"
        ]
    },
    "org.apache.cxf.aegis.type.xml.JDOMDocumentType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.AegisXMLStreamDataReader:java.lang.Object read(javax.xml.stream.XMLStreamReader,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.basic.ObjectType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.BeanType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.ArrayType:java.util.Collection readCollection(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.SoapRefType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.collection.MapType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)"
        ]
    },
    "org.apache.cxf.staxutils.AbstractDOMStreamReader:int nextTag()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.JAXBEncoderDecoder:java.lang.Exception unmarshallException(javax.xml.bind.Unmarshaller,java.lang.Object,org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.jaxb.JAXBEncoderDecoder:java.util.List unmarshallArray(javax.xml.bind.Unmarshaller,java.lang.Object,javax.xml.namespace.QName,java.lang.Class,java.util.List)",
            "org.apache.cxf.interceptor.ClientFaultConverter:void processFaultDetail(org.apache.cxf.interceptor.Fault,org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.soap.interceptor.ReadHeadersInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.Soap11FaultInInterceptor:org.apache.cxf.binding.soap.SoapFault unmarshalFault(org.apache.cxf.binding.soap.SoapMessage,javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.binding.soap.interceptor.SoapHeaderInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.soap.saaj.SAAJInInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.xml.interceptor.XMLMessageInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.xml.interceptor.XMLMessageInInterceptor:org.apache.cxf.service.model.BindingOperationInfo getBindingOperationInfo(boolean,javax.xml.namespace.QName,org.apache.cxf.service.model.BindingInfo,javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.aegis.AegisXMLStreamDataReader:void setupReaderPosition(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.aegis.xml.stax.ElementReader:void <init>(java.io.InputStream)",
            "org.apache.cxf.aegis.AegisElementDataReader:java.lang.Object read(org.w3c.dom.Element)",
            "org.apache.cxf.aegis.AegisElementDataReader:java.lang.Object read(org.w3c.dom.Element,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerInterceptor:javax.xml.stream.XMLStreamReader createXMLStreamReaderFromSOAPMessage(javax.xml.soap.SOAPMessage)",
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerFaultInInterceptor:javax.xml.stream.XMLStreamReader createXMLStreamReaderFromSOAPMessage(javax.xml.soap.SOAPMessage)"
        ]
    },
    "org.apache.cxf.staxutils.DepthXMLStreamReader:java.lang.String getElementText()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DepthXMLStreamReader:java.lang.String getElementText()",
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.namespace.QName readQName(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.binding.soap.interceptor.Soap11FaultInInterceptor:org.apache.cxf.binding.soap.SoapFault unmarshalFault(org.apache.cxf.binding.soap.SoapMessage,javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.binding.xml.interceptor.XMLFaultInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.aegis.util.NamespaceHelper:javax.xml.namespace.QName readQName(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.aegis.xml.stax.ElementReader:java.lang.String getValue()"
        ]
    },
    "org.apache.cxf.staxutils.DepthXMLStreamReader:int next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DepthXMLStreamReader:java.lang.String getElementText()",
            "org.apache.cxf.staxutils.DepthXMLStreamReader:int next()",
            "org.apache.cxf.staxutils.DepthXMLStreamReader:int nextTag()",
            "org.apache.cxf.staxutils.PartialXMLStreamReader:int next()",
            "org.apache.cxf.staxutils.StaxUtils:void nextEvent(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.staxutils.StaxUtils:boolean toNextText(org.apache.cxf.staxutils.DepthXMLStreamReader)",
            "org.apache.cxf.staxutils.StaxUtils:boolean toNextTag(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.staxutils.StaxUtils:boolean toNextTag(org.apache.cxf.staxutils.DepthXMLStreamReader,javax.xml.namespace.QName)",
            "org.apache.cxf.staxutils.StaxUtils:boolean skipToStartOfElement(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.staxutils.StaxUtils:boolean toNextElement(org.apache.cxf.staxutils.DepthXMLStreamReader)",
            "org.apache.cxf.staxutils.StaxUtils:boolean skipToStartOfElement(org.apache.cxf.staxutils.DepthXMLStreamReader)",
            "org.apache.cxf.staxutils.StaxUtils:void copy(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:org.w3c.dom.Element startElement(org.w3c.dom.Node,javax.xml.stream.XMLStreamReader,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void readDocElements(org.w3c.dom.Node,javax.xml.stream.XMLStreamReader,boolean)",
            "org.apache.cxf.staxutils.FragmentStreamReader:int next()",
            "org.apache.cxf.staxutils.StaxSource:void parse()",
            "org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor:void doResults(org.apache.cxf.binding.soap.SoapMessage,java.lang.String,javax.xml.soap.SOAPMessage,java.util.Vector)",
            "org.apache.cxf.binding.soap.interceptor.ReadHeadersInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.CheckFaultInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.RPCInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.tools.util.ToolsStaxUtils:java.util.List getTags(java.io.File)",
            "org.apache.cxf.tools.util.ToolsStaxUtils:org.apache.cxf.tools.common.Tag getTagTree(java.io.InputStream,java.util.List)",
            "org.apache.cxf.aegis.util.jdom.StaxBuilder:void buildTree(org.jdom.JDOMFactory,javax.xml.stream.XMLStreamReader,org.jdom.Document)",
            "org.apache.cxf.aegis.xml.stax.ElementReader:java.lang.String getValue()",
            "org.apache.cxf.aegis.xml.stax.ElementReader:boolean checkHasMoreChildReaders()",
            "org.apache.cxf.aegis.type.basic.Base64Type:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.xmlbeans.DataReaderImpl:java.lang.Object read(org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamReader)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:void nextEvent(javax.xml.stream.XMLStreamReader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.WrappedInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.soap.interceptor.RPCInInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:boolean toNextTag(javax.xml.stream.XMLStreamReader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.handler.logical.LogicalMessageImpl:javax.xml.transform.Source getPayload()"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:boolean skipToStartOfElement(javax.xml.stream.XMLStreamReader)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.staxutils.StaxUtils:org.w3c.dom.Element startElement(org.w3c.dom.Node,javax.xml.stream.XMLStreamReader,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:void readDocElements(org.w3c.dom.Node,javax.xml.stream.XMLStreamReader,boolean)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:void readDocElements(org.w3c.dom.Node,javax.xml.stream.XMLStreamReader,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:org.w3c.dom.Document read(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.staxutils.StaxUtils:org.w3c.dom.Document read(javax.xml.parsers.DocumentBuilder,javax.xml.stream.XMLStreamReader,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:org.w3c.dom.Element startElement(org.w3c.dom.Node,javax.xml.stream.XMLStreamReader,boolean)",
            "org.apache.cxf.binding.soap.saaj.SAAJInInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)"
        ]
    },
    "org.apache.cxf.aegis.xml.jdom.JDOMWriter:org.apache.cxf.aegis.xml.MessageWriter getElementWriter(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.aegis.xml.jdom.JDOMWriter:org.apache.cxf.aegis.xml.MessageWriter getElementWriter(javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.basic.BeanType:org.apache.cxf.aegis.xml.MessageWriter getWriter(org.apache.cxf.aegis.xml.MessageWriter,javax.xml.namespace.QName,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.mtom.AbstractXOPType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.StructType:void writeElement(javax.xml.namespace.QName,java.lang.Object,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.TrailingBlocks:java.util.List writeBlocks(org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.collection.MapType:void writeEntry(org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.type.Type,java.util.Map$Entry)"
        ]
    },
    "org.apache.cxf.aegis.xml.jdom.JDOMWriter:org.apache.cxf.aegis.xml.MessageWriter getAttributeWriter(javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.basic.ObjectType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.BeanType:void writeObjectInternal(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,boolean)",
            "org.apache.cxf.aegis.type.mtom.AbstractXOPType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.SoapEncodingUtil:void writeAttribute(org.apache.cxf.aegis.xml.MessageWriter,javax.xml.namespace.QName,java.lang.String)"
        ]
    },
    "org.apache.cxf.aegis.databinding.AegisDatabinding:org.apache.cxf.databinding.DataReader createReader(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.ClientFaultConverter:void processFaultDetail(org.apache.cxf.interceptor.Fault,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:org.apache.cxf.databinding.DataReader getDataReader(org.apache.cxf.message.Message,java.lang.Class)",
            "org.apache.cxf.binding.soap.interceptor.ReadHeadersInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.saaj.SAAJInInterceptor:void replaceHeaders(javax.xml.soap.SOAPMessage,org.apache.cxf.binding.soap.SoapMessage)"
        ]
    },
    "org.apache.cxf.aegis.databinding.AegisDatabinding:org.apache.cxf.databinding.DataWriter createWriter(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.FaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:org.apache.cxf.databinding.DataWriter getDataWriter(org.apache.cxf.message.Message,org.apache.cxf.service.Service,java.lang.Class)",
            "org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor:void writeSoapEnvelopeStart(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor:org.apache.cxf.databinding.DataWriter getDataWriter(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.interceptors.WebFaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.aegis.databinding.AegisDatabinding:org.apache.cxf.aegis.AegisContext getAegisContext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.databinding.ElementDataReader:void <init>(org.apache.cxf.aegis.databinding.AegisDatabinding)",
            "org.apache.cxf.aegis.databinding.XMLStreamDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.aegis.databinding.ElementDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,org.w3c.dom.Element)",
            "org.apache.cxf.aegis.databinding.XMLStreamDataReader:void <init>(org.apache.cxf.aegis.databinding.AegisDatabinding,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.aegis.type.basic.BeanTypeInfo:void initialize()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.basic.BeanType:org.apache.cxf.aegis.type.basic.BeanTypeInfo getTypeInfo()",
            "org.apache.cxf.aegis.type.java5.AnnotatedTypeInfo:void <init>(org.apache.cxf.aegis.type.TypeMapping,java.lang.Class,java.lang.String,org.apache.cxf.aegis.type.java5.AnnotationReader,org.apache.cxf.aegis.type.TypeCreationOptions)"
        ]
    },
    "org.apache.cxf.aegis.type.basic.BeanTypeInfo:void initializeProperties()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.basic.BeanTypeInfo:void <init>(java.lang.Class,java.lang.String)",
            "org.apache.cxf.aegis.type.basic.BeanTypeInfo:void <init>(java.lang.Class,java.lang.String,boolean)"
        ]
    },
    "org.apache.cxf.aegis.databinding.AegisDatabinding:javax.xml.namespace.QName getSuggestedName(org.apache.cxf.service.Service,org.apache.cxf.aegis.type.TypeMapping,org.apache.cxf.service.model.OperationInfo,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.aegis.databinding.XMLStreamDataWriter:void write(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.aegis.databinding.ElementDataWriter:void write(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.aegis.AegisElementDataWriter:void write(java.lang.Object,javax.xml.namespace.QName,boolean,java.lang.Object,org.apache.cxf.aegis.type.Type)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxws.handler.soap.SOAPHandlerInterceptor:void handleFault(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:void unwind(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxws.handler.soap.SOAPHandlerFaultInInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxws.handler.soap.SOAPHandlerFaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxws.handler.HandlerResolverImpl:java.util.List getHandlersFromAnnotation(java.lang.Class,javax.xml.ws.handler.PortInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.handler.HandlerResolverImpl:java.util.List createHandlerChain(javax.xml.ws.handler.PortInfo)"
        ]
    },
    "org.apache.cxf.jaxws.handler.AnnotationHandlerChainBuilder:void processHandlerChainElement(org.w3c.dom.Element,java.util.List,javax.xml.namespace.QName,javax.xml.namespace.QName,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.handler.AnnotationHandlerChainBuilder:java.util.List buildHandlerChainFromClass(java.lang.Class,java.util.List,javax.xml.namespace.QName,javax.xml.namespace.QName,java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxws.support.JaxWsEndpointImpl:void <init>(org.apache.cxf.Bus,org.apache.cxf.service.Service,org.apache.cxf.service.model.EndpointInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.support.JaxWsEndpointImplFactory:org.apache.cxf.endpoint.EndpointImpl newEndpointImpl(org.apache.cxf.Bus,org.apache.cxf.service.Service,org.apache.cxf.service.model.EndpointInfo)"
        ]
    },
    "org.apache.cxf.jaxws.support.JaxWsEndpointImpl:void <init>(org.apache.cxf.Bus,org.apache.cxf.service.Service,org.apache.cxf.service.model.EndpointInfo,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.support.JaxWsClientEndpointImpl:void <init>(org.apache.cxf.Bus,org.apache.cxf.service.Service,org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.jaxws.ServiceImpl,javax.xml.ws.WebServiceFeature[])"
        ]
    },
    "org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean:void setServiceClass(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.frontend.AbstractServiceFactory:void setServiceClass(java.lang.Class)",
            "org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory:void initializeServiceFactory()",
            "org.apache.cxf.jaxws.ServiceImpl:org.apache.cxf.service.factory.AbstractServiceFactoryBean createDispatchService(org.apache.cxf.databinding.DataBinding)",
            "org.apache.cxf.jaxws.ServiceImpl:java.lang.Object createPort(javax.xml.namespace.QName,org.apache.cxf.ws.addressing.EndpointReferenceType,java.lang.Class,javax.xml.ws.WebServiceFeature[])"
        ]
    },
    "org.apache.cxf.attachment.DelegatingInputStream:int read()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.IOUtils:java.lang.String readStringFromStream(java.io.InputStream)",
            "org.apache.cxf.attachment.DelegatingInputStream:int read()",
            "org.apache.cxf.attachment.QuotedPrintableDecoderStream:int read()",
            "org.apache.cxf.jaxws.interceptors.MessageModeInInterceptor$MultiPartDataSource$1:int read()"
        ]
    },
    "org.apache.cxf.attachment.QuotedPrintableDecoderStream:int read()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.IOUtils:java.lang.String readStringFromStream(java.io.InputStream)",
            "org.apache.cxf.attachment.DelegatingInputStream:int read()",
            "org.apache.cxf.attachment.QuotedPrintableDecoderStream:int decodeNonspaceChar(int)",
            "org.apache.cxf.attachment.QuotedPrintableDecoderStream:int read()",
            "org.apache.cxf.jaxws.interceptors.MessageModeInInterceptor$MultiPartDataSource$1:int read()"
        ]
    },
    "org.apache.cxf.jaxws.handler.AbstractProtocolHandlerInterceptor:javax.xml.ws.handler.MessageContext createProtocolMessageContext(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxws.handler.soap.SOAPMessageContextImpl:void <init>(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerInterceptor:javax.xml.ws.handler.MessageContext createProtocolMessageContext(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerFaultInInterceptor:javax.xml.ws.handler.MessageContext createProtocolMessageContext(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerFaultOutInterceptor:javax.xml.ws.handler.MessageContext createProtocolMessageContext(org.apache.cxf.binding.soap.SoapMessage)"
        ]
    },
    "org.apache.cxf.jaxws.handler.logical.LogicalMessageContextImpl:void <init>(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.handler.logical.LogicalHandlerFaultOutInterceptor$LogicalHandlerFaultOutEndingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.handler.logical.LogicalHandlerOutInterceptor$LogicalHandlerOutEndingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.handler.logical.LogicalHandlerInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.handler.logical.LogicalHandlerFaultInInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxws.context.WrappedMessageContext:void <init>(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.service.factory.DefaultServiceConfiguration:javax.xml.namespace.QName getInParameterName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getInParameterName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)",
            "org.apache.cxf.service.factory.DefaultServiceConfiguration:javax.xml.namespace.QName getInPartName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)"
        ]
    },
    "org.apache.cxf.service.factory.DefaultServiceConfiguration:javax.xml.namespace.QName getOutParameterName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getOutParameterName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)",
            "org.apache.cxf.service.factory.DefaultServiceConfiguration:javax.xml.namespace.QName getOutPartName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)"
        ]
    },
    "org.apache.cxf.transport.servlet.CXFServlet:void loadAdditionalConfig(org.springframework.context.ApplicationContext,javax.servlet.ServletConfig)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.servlet.CXFServlet:void updateContext(javax.servlet.ServletConfig,org.springframework.context.ApplicationContext)"
        ]
    },
    "org.apache.cxf.aegis.type.basic.CharacterAsStringType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.databinding.XMLStreamDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.aegis.databinding.ElementDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,org.w3c.dom.Element)",
            "org.apache.cxf.aegis.AegisXMLStreamDataWriter:void write(java.lang.Object,javax.xml.namespace.QName,boolean,javax.xml.stream.XMLStreamWriter,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.basic.ObjectType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.BeanType:void writeObjectInternal(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,boolean)",
            "org.apache.cxf.aegis.type.basic.BeanType:void writeElement(javax.xml.namespace.QName,java.lang.Object,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.ArrayType:void writeValue(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type,java.lang.String,java.lang.String)",
            "org.apache.cxf.aegis.type.encoded.StructType:void writeElement(javax.xml.namespace.QName,java.lang.Object,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.SoapArrayType:void writeValue(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.collection.MapType:void writeEntry(org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.type.Type,java.util.Map$Entry)"
        ]
    },
    "org.apache.cxf.aegis.type.AbstractTypeCreator:org.apache.cxf.aegis.type.Type createHolderType(org.apache.cxf.aegis.type.AbstractTypeCreator$TypeClassInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.AbstractTypeCreator:org.apache.cxf.aegis.type.Type createTypeForClass(org.apache.cxf.aegis.type.AbstractTypeCreator$TypeClassInfo)"
        ]
    },
    "org.apache.cxf.aegis.type.java5.Java5TypeCreator:org.apache.cxf.aegis.type.Type getOrCreateGenericType(org.apache.cxf.aegis.type.AbstractTypeCreator$TypeClassInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.AbstractTypeCreator:org.apache.cxf.aegis.type.Type createCollectionTypeFromGeneric(org.apache.cxf.aegis.type.AbstractTypeCreator$TypeClassInfo)"
        ]
    },
    "org.apache.cxf.aegis.type.java5.Java5TypeCreator:org.apache.cxf.aegis.type.Type getOrCreateMapKeyType(org.apache.cxf.aegis.type.AbstractTypeCreator$TypeClassInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.AbstractTypeCreator:org.apache.cxf.aegis.type.Type getOrCreateMapKeyType(org.apache.cxf.aegis.type.AbstractTypeCreator$TypeClassInfo)",
            "org.apache.cxf.aegis.type.AbstractTypeCreator:org.apache.cxf.aegis.type.Type createMapType(org.apache.cxf.aegis.type.AbstractTypeCreator$TypeClassInfo)"
        ]
    },
    "org.apache.cxf.aegis.type.java5.Java5TypeCreator:org.apache.cxf.aegis.type.Type getOrCreateMapValueType(org.apache.cxf.aegis.type.AbstractTypeCreator$TypeClassInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.AbstractTypeCreator:org.apache.cxf.aegis.type.Type getOrCreateMapValueType(org.apache.cxf.aegis.type.AbstractTypeCreator$TypeClassInfo)",
            "org.apache.cxf.aegis.type.AbstractTypeCreator:org.apache.cxf.aegis.type.Type createMapType(org.apache.cxf.aegis.type.AbstractTypeCreator$TypeClassInfo)"
        ]
    },
    "org.apache.cxf.aegis.type.XMLTypeCreator:org.apache.cxf.aegis.type.Type getOrCreateGenericType(org.apache.cxf.aegis.type.AbstractTypeCreator$TypeClassInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.AbstractTypeCreator:org.apache.cxf.aegis.type.Type createCollectionTypeFromGeneric(org.apache.cxf.aegis.type.AbstractTypeCreator$TypeClassInfo)"
        ]
    },
    "org.apache.cxf.aegis.type.XMLTypeCreator:org.apache.cxf.aegis.type.Type getOrCreateMapKeyType(org.apache.cxf.aegis.type.AbstractTypeCreator$TypeClassInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.AbstractTypeCreator:org.apache.cxf.aegis.type.Type getOrCreateMapKeyType(org.apache.cxf.aegis.type.AbstractTypeCreator$TypeClassInfo)",
            "org.apache.cxf.aegis.type.AbstractTypeCreator:org.apache.cxf.aegis.type.Type createMapType(org.apache.cxf.aegis.type.AbstractTypeCreator$TypeClassInfo)"
        ]
    },
    "org.apache.cxf.aegis.type.XMLTypeCreator:org.apache.cxf.aegis.type.Type getOrCreateMapValueType(org.apache.cxf.aegis.type.AbstractTypeCreator$TypeClassInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.AbstractTypeCreator:org.apache.cxf.aegis.type.Type getOrCreateMapValueType(org.apache.cxf.aegis.type.AbstractTypeCreator$TypeClassInfo)",
            "org.apache.cxf.aegis.type.AbstractTypeCreator:org.apache.cxf.aegis.type.Type createMapType(org.apache.cxf.aegis.type.AbstractTypeCreator$TypeClassInfo)"
        ]
    },
    "org.apache.cxf.aegis.AegisElementDataReader:java.lang.Object read(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.aegis.databinding.ElementDataReader:java.lang.Object read(org.apache.cxf.service.model.MessagePartInfo,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.WrappedInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.BareInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.ClientFaultConverter:void processFaultDetail(org.apache.cxf.interceptor.Fault,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void getPara(org.apache.cxf.staxutils.DepthXMLStreamReader,org.apache.cxf.databinding.DataReader,org.apache.cxf.message.MessageContentsList,java.util.Iterator,org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.soap.interceptor.RPCInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.soap.interceptor.SoapHeaderInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.aegis.databinding.XMLStreamDataReader:java.lang.Object read(javax.xml.namespace.QName,java.lang.Object,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.staxutils.StaxUtils:void copy(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:void copy(javax.xml.transform.Source,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:org.w3c.dom.Document copy(org.w3c.dom.Document)",
            "org.apache.cxf.staxutils.StaxUtils:void copy(org.w3c.dom.Document,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void copy(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.databinding.source.XMLStreamDataWriter:void write(java.lang.Object,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.databinding.source.XMLStreamDataReader:java.io.InputStream getInputStream(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.databinding.stax.StaxDataBinding$XMLStreamDataWriter:void write(java.lang.Object,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.binding.soap.saaj.SAAJOutInterceptor$SAAJOutEndingInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.bus.spring.TunedDocumentLoader:org.w3c.dom.Document loadFastinfosetDocument(java.net.URL)",
            "org.apache.cxf.aegis.type.xml.XMLStreamReaderType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.jaxws.handler.logical.LogicalHandlerFaultOutInterceptor$LogicalHandlerFaultOutEndingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.handler.logical.LogicalHandlerOutInterceptor$LogicalHandlerOutEndingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.handler.logical.LogicalMessageImpl:javax.xml.transform.Source getPayload()"
        ]
    },
    "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeStartElement(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeStartElement(java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamWriter,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElementEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor$SOAPHeaderWriter:void writeStartElement(java.lang.String)",
            "org.apache.cxf.binding.soap.interceptor.Soap11FaultOutInterceptor$Soap11FaultOutInterceptorInternal:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.aegis.xml.stax.ElementWriter:void writeStartElement()",
            "org.apache.cxf.xmlbeans.DataWriterImpl:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamWriter)"
        ]
    },
    "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeStartElement(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeStartElement(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElementEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor$SOAPHeaderWriter:void writeStartElement(java.lang.String,java.lang.String)",
            "org.apache.cxf.xmlbeans.DataWriterImpl:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamWriter)"
        ]
    },
    "org.apache.cxf.xmlbeans.DataWriterImpl:void write(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.xmlbeans.NodeDataWriterImpl:void write(java.lang.Object,org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.xmlbeans.NodeDataWriterImpl:void write(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cxf.xmlbeans.NodeDataWriterImpl:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.FaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:void writeParts(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.message.MessageContentsList,java.util.List)",
            "org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor:void writeSoapEnvelopeStart(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor:boolean handleHeaderPart(boolean,org.apache.cxf.binding.soap.SoapMessage,java.lang.String)",
            "org.apache.cxf.jaxws.interceptors.WebFaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor$SOAPHeaderWriter:void writeStartElement(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeStartElement(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElementEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.xmlbeans.DataWriterImpl:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamWriter)"
        ]
    },
    "org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor$SOAPHeaderWriter:void writeStartElement(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeStartElement(java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamWriter,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElementEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.binding.soap.interceptor.Soap11FaultOutInterceptor$Soap11FaultOutInterceptorInternal:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.aegis.xml.stax.ElementWriter:void writeStartElement()",
            "org.apache.cxf.xmlbeans.DataWriterImpl:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamWriter)"
        ]
    },
    "org.apache.cxf.aegis.xml.stax.ElementWriter:void <init>(javax.xml.stream.XMLStreamWriter,javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.aegis.xml.stax.ElementWriter:org.apache.cxf.aegis.xml.MessageWriter getElementWriter(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.aegis.xml.stax.ElementWriter:org.apache.cxf.aegis.xml.MessageWriter getElementWriter(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.basic.ArrayType:void writeValue(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type,java.lang.String,java.lang.String)",
            "org.apache.cxf.aegis.type.encoded.SoapArrayType:void writeValue(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type)"
        ]
    },
    "org.apache.cxf.aegis.type.basic.BeanType:org.apache.cxf.aegis.xml.MessageWriter getWriter(org.apache.cxf.aegis.xml.MessageWriter,javax.xml.namespace.QName,org.apache.cxf.aegis.type.Type)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.basic.BeanType:void writeObjectInternal(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,boolean)",
            "org.apache.cxf.aegis.type.basic.BeanType:void writeElement(javax.xml.namespace.QName,java.lang.Object,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)"
        ]
    },
    "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$1$1:java.util.Map$Entry next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$1$1:java.lang.Object next()"
        ]
    },
    "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$3$1:java.lang.Object next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.MapNamespaceContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.helpers.WSDLHelper:javax.wsdl.BindingOperation getBindingOperation(javax.wsdl.Definition,java.lang.String)",
            "org.apache.cxf.helpers.WSDLHelper:javax.wsdl.BindingOperation getBindingOperation(javax.wsdl.Binding,java.lang.String)",
            "org.apache.cxf.helpers.WSDLHelper:java.util.List getPortTypes(javax.wsdl.Definition)",
            "org.apache.cxf.helpers.WSDLHelper:java.util.List getInMessageParts(javax.wsdl.Operation)",
            "org.apache.cxf.helpers.WSDLHelper:java.util.List getOutMessageParts(javax.wsdl.Operation)",
            "org.apache.cxf.helpers.WSDLHelper:javax.wsdl.Binding getBinding(javax.wsdl.BindingOperation,javax.wsdl.Definition)",
            "org.apache.cxf.helpers.XMLUtils:org.w3c.dom.Element fetchElementByNameAttribute(org.w3c.dom.Element,java.lang.String,java.lang.String)",
            "org.apache.cxf.common.util.SortedArraySet:boolean addAll(java.util.Collection)",
            "org.apache.cxf.common.util.SortedArraySet:boolean containsAll(java.util.Collection)",
            "org.apache.cxf.common.util.SortedArraySet:boolean removeAll(java.util.Collection)",
            "org.apache.cxf.common.util.SortedArraySet:boolean retainAll(java.util.Collection)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.util.Set entrySet()",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.util.Set keySet()",
            "org.apache.cxf.common.util.ReflectionInvokationHandler$WrapperIterator:java.lang.Object next()",
            "org.apache.cxf.common.util.StringUtils:java.util.List getParts(java.lang.String,java.lang.String)",
            "org.apache.cxf.common.util.StringUtils:java.lang.String getFirstNotEmpty(java.lang.String,java.lang.String)",
            "org.apache.cxf.common.util.StringUtils:java.lang.String getFirstNotEmpty(java.util.List)",
            "org.apache.cxf.common.util.ReflectionUtil:java.util.List getPackagesFromJar(java.io.File)",
            "org.apache.cxf.common.util.CacheMap:void updateMainDataMap()",
            "org.apache.cxf.common.util.CacheMap:void putAll(java.util.Map)",
            "org.apache.cxf.common.util.AbstractTwoStageCache:boolean recycle(java.lang.Object)",
            "org.apache.cxf.common.util.CollectionUtils:java.util.Collection diff(java.util.Collection,java.util.Collection)",
            "org.apache.cxf.common.util.CollectionUtils:boolean isEmpty(java.util.Collection)",
            "org.apache.cxf.common.util.TwoStageMap:void putAll(java.util.Map)",
            "org.apache.cxf.common.injection.ResourceInjector:void invokePostConstruct()",
            "org.apache.cxf.common.injection.ResourceInjector:void invokePreDestroy()",
            "org.apache.cxf.common.annotation.AnnotationProcessor:void processMethods(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)",
            "org.apache.cxf.common.annotation.AnnotationProcessor:void processFields(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)",
            "org.apache.cxf.common.annotation.AnnotationProcessor:void processClass(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)",
            "org.apache.cxf.resource.DefaultResourceManager:java.lang.Object findResource(java.lang.String,java.lang.Class,boolean,java.util.List)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.util.Set entrySet()",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.util.Collection values()",
            "org.apache.cxf.configuration.spring.SpringBeanMap:void processBeans(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.configuration.spring.SpringBeanQNameMap:void processBeans(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void initWildcardDefinitionMap()",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureBean(java.lang.String,java.lang.Object,boolean)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureWithWildCard(java.lang.String,java.lang.Object)",
            "org.apache.cxf.configuration.jsse.spring.TLSParameterJaxBUtils:java.security.KeyStore createTrustStore(java.io.InputStream)",
            "org.apache.cxf.jaxb.JAXBUtils:java.lang.String makeConventionalIdentifier(java.util.List,org.apache.cxf.jaxb.JAXBUtils$IdentifierType)",
            "org.apache.cxf.jaxb.JAXBDataBinding:void initialize(org.apache.cxf.service.Service)",
            "org.apache.cxf.jaxb.JAXBDataBinding:org.apache.cxf.jaxb.JAXBDataBinding$CachedContextAndSchemas createJAXBContextAndSchemas(java.util.Set,java.lang.String)",
            "org.apache.cxf.jaxb.JAXBDataBinding:void scanPackages(java.util.Set)",
            "org.apache.cxf.jaxb.JAXBSchemaInitializer:javax.xml.namespace.QName getTypeName(org.apache.cxf.jaxb.JAXBBeanInfo)",
            "org.apache.cxf.jaxb.JAXBSchemaInitializer:void end(org.apache.cxf.service.model.FaultInfo)",
            "org.apache.cxf.jaxb.JAXBSchemaInitializer:void buildExceptionType(org.apache.cxf.service.model.MessagePartInfo,java.lang.Class)",
            "org.apache.cxf.jaxb.JAXBSchemaInitializer:void addElement(org.apache.ws.commons.schema.XmlSchemaSequence,org.apache.cxf.jaxb.JAXBBeanInfo,javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.jaxb.JAXBSchemaInitializer:boolean isExistSchemaElement(org.apache.ws.commons.schema.XmlSchema,javax.xml.namespace.QName)",
            "org.apache.cxf.jaxb.io.DataWriterImpl:javax.xml.bind.Marshaller createMarshaller(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.jaxb.io.DataReaderImpl:javax.xml.bind.Unmarshaller createUnmarshaller()",
            "org.apache.cxf.management.utils.ManagementConsole:void listAllManagedEndpoint()",
            "org.apache.cxf.management.utils.ManagementConsole:void invokeEndpoint(java.lang.String)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElementEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.message.MessageUtils:boolean isDOMPresent(org.apache.cxf.message.Message)",
            "org.apache.cxf.message.MessageImpl:void copyContent(org.apache.cxf.message.Message,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:org.apache.cxf.service.model.BindingOperationInfo findAnyOp(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.util.Map keepInOrder(java.util.Map,org.apache.cxf.service.model.OperationInfo,java.util.List)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:org.apache.cxf.message.MessageContentsList getParameters(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.util.Map getQueries(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.WrappedInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.BareInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.ClientFaultConverter:void processFaultDetail(org.apache.cxf.interceptor.Fault,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:org.apache.cxf.service.model.MessagePartInfo findMessagePart(org.apache.cxf.message.Exchange,java.util.Collection,javax.xml.namespace.QName,boolean,int,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.FaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.FaultOutInterceptor:org.apache.cxf.service.model.FaultInfo getFaultForClass(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Class)",
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:void writeParts(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.message.MessageContentsList,java.util.List)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void getPara(org.apache.cxf.staxutils.DepthXMLStreamReader,org.apache.cxf.databinding.DataReader,org.apache.cxf.message.MessageContentsList,java.util.Iterator,org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.ConduitInitiatorManagerImpl:org.apache.cxf.transport.ConduitInitiator getConduitInitiatorForUri(java.lang.String)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updateDoc(org.w3c.dom.Document,java.lang.String,java.util.Map,java.util.Map)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updateDefinition(javax.wsdl.Definition,java.util.Map,java.util.Map,java.lang.String,org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updatePublishedEndpointUrl(java.lang.String,javax.wsdl.Definition,javax.xml.namespace.QName)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void setSoapAddressLocationOn(javax.wsdl.Port,java.lang.String)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updateSchemaImports(javax.wsdl.extensions.schema.Schema,java.util.Map,java.lang.String)",
            "org.apache.cxf.transport.http.Cookie:void handleSetCookie(java.util.Map,java.util.List)",
            "org.apache.cxf.transport.http.AbstractHTTPTransportFactory:void registerWithBindingManager()",
            "org.apache.cxf.transport.http.AbstractHTTPTransportFactory:org.apache.cxf.service.model.EndpointInfo createEndpointInfo(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.BindingInfo,javax.wsdl.Port)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPClientPolicy getClient(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPClientPolicy)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPServerPolicy getServer(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPServerPolicy)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPClientPolicy getClient(org.apache.cxf.ws.policy.PolicyEngine,org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.transport.Conduit)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPServerPolicy getServer(org.apache.cxf.ws.policy.PolicyEngine,org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.transport.Destination)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:void assertClientPolicy(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPClientPolicy)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:void assertServerPolicy(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPServerPolicy)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPClientPolicy getClient(java.util.Collection)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPServerPolicy getServer(java.util.Collection)",
            "org.apache.cxf.transport.http.HTTPConduit:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:void transferProtocolHeadersToURLConnection(org.apache.cxf.message.Message,java.net.URLConnection)",
            "org.apache.cxf.transport.http.HTTPConduit:void logProtocolHeaders(java.util.logging.Level,org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:java.lang.String extractAuthorizationRealm(java.util.Map)",
            "org.apache.cxf.transport.http.HTTPConduit:java.lang.String extractLocation(java.util.Map)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void copyResponseHeaders(org.apache.cxf.message.Message,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponseInternal()",
            "org.apache.cxf.transport.http.gzip.GZIPOutInterceptor:org.apache.cxf.transport.http.gzip.GZIPOutInterceptor$UseGzip gzipPermitted(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.gzip.GZIPInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.AbstractMultiplexDestination:java.lang.String extractStringElementFromAny(javax.xml.namespace.QName,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.transport.DestinationFactoryManagerImpl:org.apache.cxf.transport.DestinationFactory getDestinationFactoryForUri(java.lang.String)",
            "org.apache.cxf.transport.servlet.ServletController:void updateDests(javax.servlet.http.HttpServletRequest)",
            "org.apache.cxf.transport.servlet.ServletController:void invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.servlet.ServletController:org.apache.cxf.transport.servlet.ServletDestination checkRestfulRequest(javax.servlet.http.HttpServletRequest)",
            "org.apache.cxf.transport.servlet.ServletController:void generateServiceList(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.servlet.ServletController:void generateUnformattedServiceList(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.servlet.ServletTransportFactory:void register()",
            "org.apache.cxf.transport.servlet.AbstractCXFServlet:void replaceDestinationFactory()",
            "org.apache.cxf.transport.https.CertificateHostnameVerifier$Certificates:java.lang.String[] getDNSSubjectAlts(java.security.cert.X509Certificate)",
            "org.apache.cxf.transport.https.SSLUtils:java.util.List compileRegexPatterns(java.util.List,boolean,java.util.logging.Logger)",
            "org.apache.cxf.transport.https.SSLUtils:boolean matchesOneOf(java.lang.String,java.util.List)",
            "org.apache.cxf.transport.https.CertificateHostnameVerifier$AbstractVerifier:void check(java.lang.String[],java.lang.String[],java.lang.String[],boolean,boolean)",
            "org.apache.cxf.transport.http_jetty.spring.JettySpringTypesFactory:java.util.Map toThreadingParameters(java.util.List)",
            "org.apache.cxf.transport.http_jetty.spring.JettySpringTypesFactory:java.util.Map toTLSServerParamenters(java.util.List)",
            "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineFactoryBeanDefinitionParser:java.util.List getRequiredElementsList(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,javax.xml.namespace.QName,org.springframework.beans.factory.support.BeanDefinitionBuilder)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void doService(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine:void addServant(java.net.URL,org.apache.cxf.transport.http_jetty.JettyHTTPHandler)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPTransportFactory:void finalizeConfig()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void setEnginesList(java.util.List)",
            "org.apache.cxf.transport.jms.JMSUtils:void addProtocolHeaders(javax.jms.Message,java.util.Map)",
            "org.apache.cxf.feature.AbstractFeature:java.lang.Object getActive(java.util.List,java.lang.Class)",
            "org.apache.cxf.endpoint.ClientLifeCycleManagerImpl:void clientCreated(org.apache.cxf.endpoint.Client)",
            "org.apache.cxf.endpoint.ClientLifeCycleManagerImpl:void clientDestroyed(org.apache.cxf.endpoint.Client)",
            "org.apache.cxf.endpoint.ServerLifeCycleManagerImpl:void startServer(org.apache.cxf.endpoint.Server)",
            "org.apache.cxf.endpoint.ServerLifeCycleManagerImpl:void stopServer(org.apache.cxf.endpoint.Server)",
            "org.apache.cxf.endpoint.EndpointResolverRegistryImpl:org.apache.cxf.ws.addressing.EndpointReferenceType resolve(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.endpoint.EndpointResolverRegistryImpl:org.apache.cxf.ws.addressing.EndpointReferenceType renew(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.endpoint.EndpointResolverRegistryImpl:org.apache.cxf.ws.addressing.EndpointReferenceType mint(javax.xml.namespace.QName)",
            "org.apache.cxf.endpoint.EndpointResolverRegistryImpl:org.apache.cxf.ws.addressing.EndpointReferenceType mint(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.endpoint.ServiceContractResolverRegistryImpl:java.net.URI getContractLocation(javax.xml.namespace.QName)",
            "org.apache.cxf.endpoint.ClientImpl:org.apache.cxf.service.model.EndpointInfo findEndpoint(org.apache.cxf.service.Service,javax.xml.namespace.QName)",
            "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:org.apache.cxf.endpoint.Client createClient(java.lang.String,javax.xml.namespace.QName,java.lang.ClassLoader,javax.xml.namespace.QName,java.util.List)",
            "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:void addBindingFiles(java.util.List,org.apache.cxf.jaxb.JAXBUtils$SchemaCompiler)",
            "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:boolean isValidPackage(org.apache.cxf.jaxb.JAXBUtils$JPackage)",
            "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:void outputDebug(org.apache.cxf.jaxb.JAXBUtils$JCodeModel)",
            "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:void addSchemas(java.lang.String,java.util.Collection,org.apache.cxf.jaxb.JAXBUtils$SchemaCompiler)",
            "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:boolean compileJavaSrc(java.lang.String,java.util.List,java.lang.String)",
            "org.apache.cxf.endpoint.dynamic.TypeClassInitializer:void begin(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.ws.addressing.ContextUtils:java.lang.String getActionFromServiceModel(org.apache.cxf.message.Message,java.lang.Exception)",
            "org.apache.cxf.ws.addressing.MAPAggregator:void assertAssertion(org.apache.cxf.ws.policy.AssertionInfoMap,javax.xml.namespace.QName)",
            "org.apache.cxf.ws.addressing.MAPAggregator:boolean hasUsingAddressing(java.util.List)",
            "org.apache.cxf.ws.addressing.MAPAggregator:java.lang.String getActionFromFaultMessage(org.apache.cxf.service.model.OperationInfo,java.lang.String)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void encodeReferenceParameters(org.apache.cxf.ws.addressing.AddressingProperties,org.w3c.dom.Element,javax.xml.bind.Marshaller)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void addMustUnderstandAttribute(org.w3c.dom.Element,javax.xml.namespace.QName,org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.addressing.AddressingPropertiesImpl)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:org.apache.cxf.ws.addressing.AddressingProperties unmarshalMAPs(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void decodeReferenceParameters(java.util.Set,org.apache.cxf.ws.addressing.AddressingPropertiesImpl,javax.xml.bind.Unmarshaller)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void discardMAPs(java.util.List,org.apache.cxf.ws.addressing.AddressingProperties)",
            "org.apache.cxf.ws.policy.builder.primitive.NestedPrimitiveAssertion:org.apache.neethi.PolicyComponent normalize()",
            "org.apache.cxf.ws.policy.builder.primitive.NestedPrimitiveAssertion:boolean isAsserted(org.apache.cxf.ws.policy.AssertionInfoMap)",
            "org.apache.cxf.ws.policy.builder.primitive.NestedPrimitiveAssertion:boolean isPolicyAsserted(org.apache.neethi.PolicyOperator,org.apache.cxf.ws.policy.AssertionInfoMap)",
            "org.apache.cxf.ws.policy.builder.primitive.PrimitiveAssertion:boolean isAsserted(org.apache.cxf.ws.policy.AssertionInfoMap)",
            "org.apache.cxf.ws.policy.util.PolicyComparator:boolean compare(java.util.List,java.util.List)",
            "org.apache.cxf.ws.policy.AssertionInfoMap:void <init>(java.util.Collection)",
            "org.apache.cxf.ws.policy.AssertionInfoMap:void putAssertionInfo(org.apache.cxf.ws.policy.PolicyAssertion)",
            "org.apache.cxf.ws.policy.AssertionInfoMap:boolean supportsAlternative(org.apache.cxf.ws.policy.PolicyAssertion,java.util.List)",
            "org.apache.cxf.ws.policy.AssertionInfoMap:boolean supportsAlternative(java.util.Collection,java.util.List)",
            "org.apache.cxf.ws.policy.AssertionInfoMap:void checkEffectivePolicy(org.apache.neethi.Policy)",
            "org.apache.cxf.ws.policy.AssertionInfoMap:void check()",
            "org.apache.cxf.ws.policy.AssertionInfoMap:void getAssertions(org.apache.neethi.PolicyOperator,java.util.Collection)",
            "org.apache.cxf.ws.policy.Intersector:boolean compatibleAlternatives(java.util.Collection,java.util.Collection)",
            "org.apache.cxf.ws.policy.Intersector:boolean compatiblePolicies(org.apache.neethi.Policy,org.apache.neethi.Policy)",
            "org.apache.cxf.ws.policy.Intersector:org.apache.neethi.Policy intersect(org.apache.neethi.Policy,org.apache.neethi.Policy)",
            "org.apache.cxf.ws.policy.Intersector:org.apache.cxf.ws.policy.PolicyAssertion findCompatibleAssertion(org.apache.cxf.ws.policy.PolicyAssertion,java.util.Collection)",
            "org.apache.cxf.ws.policy.EndpointPolicyImpl:java.util.Collection getSupportedAlternatives()",
            "org.apache.cxf.ws.policy.EndpointPolicyImpl:void initializeVocabulary()",
            "org.apache.cxf.ws.policy.EndpointPolicyImpl:java.util.Collection getSupportedAlternatives(org.apache.neethi.Policy)",
            "org.apache.cxf.ws.policy.EndpointPolicyImpl:void initializeInterceptors(org.apache.cxf.ws.policy.PolicyInterceptorProviderRegistry,java.util.Set,org.apache.cxf.ws.policy.PolicyAssertion,boolean)",
            "org.apache.cxf.ws.policy.EndpointPolicyImpl:void initializeInterceptors()",
            "org.apache.cxf.ws.policy.EndpointPolicyImpl:void checkExactlyOnes()",
            "org.apache.cxf.ws.policy.ServerPolicyOutFaultInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.policy.WSPolicyFeature:org.apache.neethi.Policy initializeEndpointPolicy(org.apache.cxf.endpoint.Endpoint,org.apache.cxf.Bus)",
            "org.apache.cxf.ws.policy.PolicyInInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.policy.PolicyOutInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.policy.PolicyInterceptorProviderRegistryImpl:void register(org.apache.cxf.ws.policy.PolicyInterceptorProvider)",
            "org.apache.cxf.ws.policy.PolicyInterceptorProviderRegistryImpl:java.util.List getInterceptors(java.util.Collection,boolean,boolean)",
            "org.apache.cxf.ws.policy.selector.MinimalAlternativeSelector:java.util.Collection selectAlternative(org.apache.neethi.Policy,org.apache.cxf.ws.policy.PolicyEngine,org.apache.cxf.ws.policy.Assertor)",
            "org.apache.cxf.ws.policy.selector.FirstAlternativeSelector:java.util.Collection selectAlternative(org.apache.neethi.Policy,org.apache.cxf.ws.policy.PolicyEngine,org.apache.cxf.ws.policy.Assertor)",
            "org.apache.cxf.ws.policy.selector.MaximalAlternativeSelector:java.util.Collection selectAlternative(org.apache.neethi.Policy,org.apache.cxf.ws.policy.PolicyEngine,org.apache.cxf.ws.policy.Assertor)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:org.apache.neethi.Policy getAggregatedServicePolicy(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:org.apache.neethi.Policy getAggregatedEndpointPolicy(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:org.apache.neethi.Policy getAggregatedOperationPolicy(org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:org.apache.neethi.Policy getAggregatedMessagePolicy(org.apache.cxf.service.model.BindingMessageInfo)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:org.apache.neethi.Policy getAggregatedFaultPolicy(org.apache.cxf.service.model.BindingFaultInfo)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:java.util.Collection getAssertions(org.apache.cxf.ws.policy.EffectivePolicy,boolean)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:void addAssertions(org.apache.neethi.PolicyComponent,boolean,java.util.Collection)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:java.util.Set getVocabulary(org.apache.neethi.PolicyComponent,boolean)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:boolean supportsAlternative(java.util.Collection,org.apache.cxf.ws.policy.Assertor)",
            "org.apache.cxf.ws.policy.PolicyUtils:boolean contains(java.util.Collection,org.apache.neethi.Assertion)",
            "org.apache.cxf.ws.policy.PolicyUtils:boolean contains(java.util.Collection,java.util.Collection)",
            "org.apache.cxf.ws.policy.PolicyUtils:void printPolicyComponent(org.apache.neethi.PolicyComponent,java.lang.StringBuffer,int)",
            "org.apache.cxf.ws.policy.mtom.MTOMPolicyInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.policy.EffectivePolicyImpl:void initialiseInterceptors(org.apache.cxf.ws.policy.PolicyEngineImpl,boolean)",
            "org.apache.cxf.ws.policy.EffectivePolicyImpl:java.util.Collection getSupportedAlternatives(org.apache.cxf.ws.policy.PolicyEngineImpl,org.apache.neethi.Policy)",
            "org.apache.cxf.ws.policy.EffectivePolicyImpl:void initialiseInterceptors(org.apache.cxf.ws.policy.PolicyInterceptorProviderRegistry,org.apache.cxf.ws.policy.PolicyEngineImpl,java.util.Set,org.apache.cxf.ws.policy.PolicyAssertion,boolean)",
            "org.apache.cxf.ws.policy.attachment.wsdl11.Wsdl11AttachmentPolicyProvider$ExtensibleInfo:java.lang.Object getExtensor(java.lang.Class)",
            "org.apache.cxf.ws.policy.attachment.wsdl11.Wsdl11AttachmentPolicyProvider$ExtensibleInfo:java.util.List getExtensors(java.lang.Class)",
            "org.apache.cxf.ws.policy.attachment.wsdl11.Wsdl11AttachmentPolicyProvider:org.apache.neethi.Policy getElementPolicy(org.apache.cxf.service.model.Extensible,boolean,org.apache.cxf.service.model.DescriptionInfo)",
            "org.apache.cxf.ws.policy.attachment.reference.LocalServiceModelReferenceResolver:org.apache.neethi.Policy resolveReference(java.lang.String)",
            "org.apache.cxf.ws.policy.attachment.reference.RemoteReferenceResolver:org.apache.neethi.Policy resolveReference(java.lang.String)",
            "org.apache.cxf.ws.policy.attachment.external.PolicyAttachment:boolean appliesTo(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.ws.policy.attachment.external.PolicyAttachment:boolean appliesTo(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.ws.policy.attachment.external.PolicyAttachment:boolean appliesTo(org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.ws.policy.attachment.external.PolicyAttachment:boolean appliesTo(org.apache.cxf.service.model.BindingMessageInfo)",
            "org.apache.cxf.ws.policy.attachment.external.PolicyAttachment:boolean appliesTo(org.apache.cxf.service.model.BindingFaultInfo)",
            "org.apache.cxf.ws.policy.attachment.external.ExternalAttachmentProvider:org.apache.neethi.Policy getEffectivePolicy(org.apache.cxf.service.model.BindingFaultInfo)",
            "org.apache.cxf.ws.policy.attachment.external.ExternalAttachmentProvider:org.apache.neethi.Policy getEffectivePolicy(org.apache.cxf.service.model.BindingMessageInfo)",
            "org.apache.cxf.ws.policy.attachment.external.ExternalAttachmentProvider:org.apache.neethi.Policy getEffectivePolicy(org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.ws.policy.attachment.external.ExternalAttachmentProvider:org.apache.neethi.Policy getEffectivePolicy(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.ws.policy.attachment.external.ExternalAttachmentProvider:org.apache.neethi.Policy getEffectivePolicy(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.ws.policy.attachment.external.ExternalAttachmentProvider:void readDocument()",
            "org.apache.cxf.ws.policy.AssertionBuilderRegistryImpl:void register(org.apache.cxf.ws.policy.AssertionBuilder)",
            "org.apache.cxf.ws.policy.ClientPolicyInFaultInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.policy.AbstractPolicyInterceptor:org.apache.cxf.service.model.BindingFaultInfo getBindingFaultInfo(org.apache.cxf.message.Message,java.lang.Exception,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.ws.security.policy.builders.X509TokenBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.builders.X509TokenBuilder:void processAlternative(java.util.List,org.apache.cxf.ws.security.policy.model.X509Token,org.apache.cxf.ws.security.policy.SPConstants)",
            "org.apache.cxf.ws.security.policy.builders.SupportingTokens12Builder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.builders.SupportingTokens12Builder:void processAlternative(java.util.List,org.apache.cxf.ws.security.policy.model.SupportingToken)",
            "org.apache.cxf.ws.security.policy.builders.InitiatorTokenBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.builders.InitiatorTokenBuilder:void processAlternative(java.util.List,org.apache.cxf.ws.security.policy.model.InitiatorToken)",
            "org.apache.cxf.ws.security.policy.builders.AsymmetricBindingBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.builders.AsymmetricBindingBuilder:void processAlternative(java.util.List,org.apache.cxf.ws.security.policy.model.AsymmetricBinding,org.apache.cxf.ws.security.policy.SPConstants)",
            "org.apache.cxf.ws.security.policy.builders.IssuedTokenBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.builders.IssuedTokenBuilder:void processAlternative(java.util.List,org.apache.cxf.ws.security.policy.model.IssuedToken)",
            "org.apache.cxf.ws.security.policy.builders.ProtectionTokenBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.builders.TransportTokenBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.builders.RecipientTokenBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.builders.RecipientTokenBuilder:void processAlternative(java.util.List,org.apache.cxf.ws.security.policy.model.RecipientToken)",
            "org.apache.cxf.ws.security.policy.builders.SupportingTokensBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.builders.SupportingTokensBuilder:void processAlternative(java.util.List,org.apache.cxf.ws.security.policy.model.SupportingToken)",
            "org.apache.cxf.ws.security.policy.builders.SymmetricBindingBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.builders.SymmetricBindingBuilder:void processAlternatives(java.util.List,org.apache.cxf.ws.security.policy.model.SymmetricBinding,org.apache.cxf.ws.security.policy.SPConstants)",
            "org.apache.cxf.ws.security.policy.model.RequiredParts:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.ContentEncryptedElements:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SignedEncryptedElements:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.RequiredElements:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SupportingToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SupportingToken:org.apache.neethi.Policy getPolicy()",
            "org.apache.cxf.ws.security.policy.model.SignedEncryptedParts:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.AbstractSecurityAssertion:boolean isAsserted(org.apache.cxf.ws.policy.AssertionInfoMap)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor$SecureConversationTokenFinderInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor$SecureConversationCancelInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.policy.interceptors.HttpsTokenInterceptorProvider$HttpsTokenInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.policy.interceptors.HttpsTokenInterceptorProvider$HttpsTokenInInterceptor:void assertHttps(java.util.Collection,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationOutInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor:org.apache.cxf.ws.security.policy.model.Binding getBinding(org.apache.cxf.ws.policy.AssertionInfoMap)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor:void recalcEffectivePolicy(org.apache.cxf.binding.soap.SoapMessage,java.lang.String,org.apache.neethi.Policy)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor:void unmapSecurityProps(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.policy.interceptors.IssuedTokenInterceptorProvider$IssuedTokenOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.policy.interceptors.IssuedTokenInterceptorProvider$IssuedTokenOutInterceptor:org.apache.cxf.ws.security.policy.model.Trust10 getTrust10(org.apache.cxf.ws.policy.AssertionInfoMap)",
            "org.apache.cxf.ws.security.policy.interceptors.IssuedTokenInterceptorProvider$IssuedTokenOutInterceptor:org.apache.cxf.ws.security.policy.model.Trust13 getTrust13(org.apache.cxf.ws.policy.AssertionInfoMap)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationTokenInterceptorProvider:org.apache.cxf.ws.security.policy.model.Trust10 getTrust10(org.apache.cxf.ws.policy.AssertionInfoMap)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationTokenInterceptorProvider:org.apache.cxf.ws.security.policy.model.Trust13 getTrust13(org.apache.cxf.ws.policy.AssertionInfoMap)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationTokenInterceptorProvider:org.apache.cxf.ws.policy.PolicyAssertion getAddressingPolicy(org.apache.cxf.ws.policy.AssertionInfoMap,boolean)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationTokenInterceptorProvider:void mapSecurityProps(org.apache.cxf.message.Message,java.util.Map)",
            "org.apache.cxf.ws.security.policy.interceptors.HttpsTokenInterceptorProvider$HttpsTokenOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.policy.interceptors.HttpsTokenInterceptorProvider$HttpsTokenOutInterceptor:void assertHttps(java.util.Collection,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.policy.interceptors.IssuedTokenInterceptorProvider$IssuedTokenInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.trust.STSClient:void setPolicy(org.apache.neethi.Policy)",
            "org.apache.cxf.ws.security.trust.STSClient:org.apache.cxf.service.model.BindingOperationInfo findOperation(java.lang.String)",
            "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:org.apache.cxf.ws.security.tokenstore.SecurityToken getToken(java.lang.String)",
            "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:java.util.Collection getTokens(org.apache.cxf.ws.security.tokenstore.SecurityToken$State)",
            "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:void processTokenExpiry()",
            "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:void removeCancelledTokens()",
            "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:void removeExpiredTokens()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.TransportBindingHandler:void addUsernameTokens(org.apache.cxf.ws.security.policy.model.SupportingToken)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.TransportBindingHandler:void handleBinding()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.TransportBindingHandler:byte[] doX509TokenSignature(org.apache.cxf.ws.security.policy.model.Token,org.apache.cxf.ws.security.policy.model.SignedEncryptedParts,org.apache.cxf.ws.security.policy.model.TokenWrapper)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.TransportBindingHandler:byte[] doIssuedTokenSignature(org.apache.cxf.ws.security.policy.model.Token,org.apache.cxf.ws.security.policy.model.SignedEncryptedParts,org.apache.cxf.ws.security.policy.model.TokenWrapper,org.apache.cxf.ws.security.tokenstore.SecurityToken)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AsymmetricBindingHandler:void doSignBeforeEncrypt()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AsymmetricBindingHandler:void doEncryptBeforeSign()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AsymmetricBindingHandler:void assertUnusedTokens(org.apache.cxf.ws.security.policy.model.TokenWrapper)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void policyNotAsserted(org.apache.cxf.ws.policy.PolicyAssertion,java.lang.Exception)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void policyNotAsserted(org.apache.cxf.ws.policy.PolicyAssertion,java.lang.String)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void policyAsserted(org.apache.cxf.ws.policy.PolicyAssertion)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void policyAsserted(javax.xml.namespace.QName)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:java.util.Collection findAndAssertPolicy(javax.xml.namespace.QName)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:org.apache.ws.security.message.WSSecTimestamp createTimestamp()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:org.apache.ws.security.message.WSSecTimestamp handleLayout(org.apache.ws.security.message.WSSecTimestamp)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void assertSupportingTokens(java.util.Collection)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:java.util.Map handleSupportingTokens(java.util.Collection,boolean)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:java.util.Map handleSupportingTokens(org.apache.cxf.ws.security.policy.model.SupportingToken,boolean,java.util.Map)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void addSignatureParts(java.util.Map,java.util.List)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:org.apache.ws.security.message.WSSecUsernameToken addUsernameToken(org.apache.cxf.ws.security.policy.model.UsernameToken)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:java.util.Vector getEncryptedParts()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:java.util.Vector getSignedParts()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:java.util.Vector getPartsAndElements(boolean,boolean,java.util.List,java.util.List,java.util.Map)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:org.apache.cxf.ws.security.policy.model.Wss10 getWss10()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void doEndorsedSignatures(java.util.Map,boolean,boolean)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void handleEncryptedSignedHeaders(java.util.Vector,java.util.Vector)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.SymmetricBindingHandler:void doEncryptBeforeSign()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.SymmetricBindingHandler:void doSignBeforeEncrypt()",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JOutInterceptor$PolicyBasedWSS4JOutInterceptorInternal:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:void handleWSS11(org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:boolean assertPolicy(org.apache.cxf.ws.policy.AssertionInfoMap,javax.xml.namespace.QName)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:void assertPolicy(org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.ws.policy.PolicyAssertion)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:void notAssertPolicy(org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.ws.policy.PolicyAssertion,java.lang.String)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:java.lang.String checkAsymetricBinding(org.apache.cxf.ws.policy.AssertionInfoMap,java.lang.String,org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:java.lang.String checkSymetricBinding(org.apache.cxf.ws.policy.AssertionInfoMap,java.lang.String,org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:void assertTokens(org.apache.cxf.ws.policy.AssertionInfoMap,javax.xml.namespace.QName,java.util.Collection,org.apache.cxf.binding.soap.SoapMessage,javax.xml.soap.SOAPMessage,java.lang.String)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:void doResults(org.apache.cxf.binding.soap.SoapMessage,java.lang.String,javax.xml.soap.SOAPMessage,java.util.Vector)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:boolean assertSymetricBinding(org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.binding.soap.SoapMessage,javax.xml.soap.SOAPMessage,org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor$Protections,boolean)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:boolean assertAsymetricBinding(org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.binding.soap.SoapMessage,javax.xml.soap.SOAPMessage,org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor$Protections,boolean)",
            "org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor:void doResults(org.apache.cxf.binding.soap.SoapMessage,java.lang.String,javax.xml.soap.SOAPMessage,java.util.Vector)",
            "org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor:org.apache.ws.security.WSSecurityEngine createSecurityEngine(java.util.Map)",
            "org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor$TokenStoreCallbackHandler:void handle(javax.security.auth.callback.Callback[])",
            "org.apache.cxf.ws.rm.AbstractRMInterceptor:void assertReliability(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.Servant:void terminateSequence(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.AbstractSequence:boolean isAcknowledged(java.math.BigInteger)",
            "org.apache.cxf.ws.rm.DestinationSequence:void scheduleDeferredAcknowledgement(long)",
            "org.apache.cxf.ws.rm.policy.PolicyUtils:org.apache.cxf.ws.rm.policy.RMAssertion getRMAssertion(org.apache.cxf.ws.rm.policy.RMAssertion,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.Source:java.util.Collection getAllUnacknowledgedSequences()",
            "org.apache.cxf.ws.rm.RMInInterceptor:void processAcknowledgments(org.apache.cxf.ws.rm.Source,org.apache.cxf.ws.rm.RMProperties)",
            "org.apache.cxf.ws.rm.RMOutInterceptor:void addAcknowledgements(org.apache.cxf.ws.rm.Destination,org.apache.cxf.ws.rm.RMProperties,org.apache.cxf.ws.rm.Identifier,org.apache.cxf.ws.addressing.v200408.AttributedURI)",
            "org.apache.cxf.ws.rm.Destination:void ackRequested(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.RMManager:void shutdown()",
            "org.apache.cxf.ws.rm.RMManager:void recoverReliableEndpoint(org.apache.cxf.endpoint.Endpoint,org.apache.cxf.transport.Conduit)",
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl:void resend(org.apache.cxf.transport.Conduit,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.soap.RMSoapInterceptor:void encode(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.rm.RMProperties)",
            "org.apache.cxf.ws.rm.soap.RMSoapInterceptor:org.apache.cxf.ws.rm.RMProperties unmarshalRMProperties(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.rm.soap.RMSoapInterceptor:void discardRMHeaders(java.util.List)",
            "org.apache.cxf.ws.rm.RMEndpoint:void setPolicies()",
            "org.apache.cxf.ws.rm.RMEndpoint:java.lang.Object getUsingAddressing(java.util.List)",
            "org.apache.cxf.ws.rm.RMEndpoint:void shutdown()",
            "org.apache.cxf.ws.rm.persistence.jdbc.RMTxStore:void removeMessages(org.apache.cxf.ws.rm.Identifier,java.util.Collection,boolean)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void <init>(java.util.SortedSet)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void add(java.util.Collection,boolean)",
            "org.apache.cxf.workqueue.WorkQueueManagerImpl:void shutdown(boolean)",
            "org.apache.cxf.workqueue.WorkQueueManagerImpl:void run()",
            "org.apache.cxf.databinding.AbstractDataBinding:void setNamespaceMap(java.util.Map)",
            "org.apache.cxf.databinding.AbstractDataBinding:void checkNamespaceMap(java.util.Map)",
            "org.apache.cxf.databinding.stax.StaxDataBindingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.databinding.stax.StaxDataBindingFeature:void removeInterceptor(java.util.List,java.lang.String)",
            "org.apache.cxf.wsdl.JAXBExtensionHelper$1:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils$SchemaLSResourceResolver:org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.namespace.QName getServiceName(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:java.lang.String getPortName(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:void setPortName(org.apache.cxf.ws.addressing.EndpointReferenceType,java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.namespace.QName getInterfaceName(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:void setMetadata(org.apache.cxf.ws.addressing.EndpointReferenceType,java.util.List)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.wsdl.Definition getWSDLDefinition(org.apache.cxf.wsdl.WSDLManager,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.validation.Schema createSchema(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.wsdl.Port getPort(org.apache.cxf.wsdl.WSDLManager,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:org.apache.cxf.transport.MultiplexDestination getMatchingMultiplexDestination(javax.xml.namespace.QName,java.lang.String,org.apache.cxf.Bus)",
            "org.apache.cxf.io.CachedOutputStream:void flush()",
            "org.apache.cxf.io.CachedOutputStream:void lockOutputStream()",
            "org.apache.cxf.io.CachedOutputStream:void close()",
            "org.apache.cxf.service.model.BindingOperationInfo:void <init>(org.apache.cxf.service.model.BindingInfo,org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:int getMessagePartIndex(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePartByIndex(int)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePart(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePart(int)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperation(org.apache.cxf.message.Exchange,java.lang.String)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperationForWrapperElement(org.apache.cxf.message.Exchange,javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.SchemaInfo getSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.ServiceModelUtil:java.util.List getOperationInputPartNames(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.EndpointInfo findBestEndpointInfo(javax.xml.namespace.QName,java.util.List)",
            "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.BindingInfo getBinding(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.EndpointInfo getEndpoint(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.ServiceInfo:void initMessagesMap()",
            "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.SchemaInfo getSchema(java.lang.String)",
            "org.apache.cxf.service.model.MessageInfo:java.util.Map getMessagePartsMap()",
            "org.apache.cxf.service.model.MessageInfo:java.util.List getOrderedParts(java.util.List)",
            "org.apache.cxf.service.model.BindingInfo:org.apache.cxf.service.model.BindingOperationInfo buildOperation(javax.xml.namespace.QName,java.lang.String,java.lang.String)",
            "org.apache.cxf.service.model.BindingInfo:org.apache.cxf.service.model.BindingOperationInfo getOperation(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.ServiceImpl:org.apache.cxf.service.model.EndpointInfo getEndpointInfo(javax.xml.namespace.QName)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void fillInSchemaCrossreferences()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createEndpoints()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeServiceConfigurations()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromWSDL(java.lang.String)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromClass()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean hasWrappedMethods(org.apache.cxf.service.model.InterfaceInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void validateServiceModel()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.InterfaceInfo getInterfaceInfo()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeWSDLOperations()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void setFaultClassInfo(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.OperationInfo createOperation(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.InterfaceInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeWrappedSchema(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void checkForElement(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createBareMessage(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.OperationInfo,boolean)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isExistImport(org.apache.ws.commons.schema.XmlSchema,java.lang.String)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.ws.commons.schema.XmlSchemaElement getExistingSchemaElement(org.apache.ws.commons.schema.XmlSchema,javax.xml.namespace.QName)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createWrappedMessageSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.AbstractMessageContainer,org.apache.cxf.service.model.AbstractMessageContainer,org.apache.ws.commons.schema.XmlSchema,javax.xml.namespace.QName)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.SchemaInfo getOrCreateSchema(org.apache.cxf.service.model.ServiceInfo,java.lang.String,boolean)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createInputWrappedMessageParts(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,org.apache.cxf.service.model.MessageInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createOutputWrappedMessageParts(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,org.apache.cxf.service.model.MessageInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getEndpointName(boolean)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getServiceName()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getServiceNamespace()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getInterfaceName()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isValidMethod(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isHolder(java.lang.Class,java.lang.reflect.Type)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.reflect.Type getHolderType(java.lang.Class,java.lang.reflect.Type)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isWrapped(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isOutParam(java.lang.reflect.Method,int)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isInParam(java.lang.reflect.Method,int)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getInputMessageName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName createOutputMessageName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean hasOutMessage(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getFaultName(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.Class,java.lang.Class)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getAction(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isHeader(java.lang.reflect.Method,int)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getOperationName(org.apache.cxf.service.model.InterfaceInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isAsync(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getInPartName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getInParameterName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getOutParameterName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getOutPartName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.Class getResponseWrapper(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getResponseWrapperClassName(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.Class getRequestWrapper(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getRequestWrapperClassName(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isWrapperPartQualified(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isWrapperPartNillable(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:long getWrapperPartMaxOccurs(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:long getWrapperPartMinOccurs(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getWsdlURL()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isWrapped()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getStyle()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isRPC(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.DefaultServiceConfiguration:java.lang.Boolean isOperation(java.lang.reflect.Method)",
            "org.apache.cxf.service.ServiceModelVisitor:void walk()",
            "org.apache.cxf.service.ServiceModelVisitor:void visitOperation(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.binding.AbstractBindingFactory:void registerWithBindingManager()",
            "org.apache.cxf.binding.AbstractBindingFactory:org.apache.cxf.service.model.BindingInfo initializeBindingInfo(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding,org.apache.cxf.service.model.BindingInfo)",
            "org.apache.cxf.binding.AbstractBindingFactory:void copyExtensors(org.apache.cxf.service.model.AbstractPropertiesHolder,javax.wsdl.extensions.ElementExtensible,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:org.apache.cxf.service.model.BindingInfo createBindingInfo(org.apache.cxf.service.model.ServiceInfo,java.lang.String,java.lang.Object)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:void createSoapBinding(org.apache.cxf.binding.soap.model.SoapBindingInfo)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:void setupHeaders(org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.service.model.BindingMessageInfo,org.apache.cxf.service.model.BindingMessageInfo,org.apache.cxf.service.model.MessageInfo,org.apache.cxf.binding.soap.SoapBindingConfiguration)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:org.apache.cxf.binding.Binding createBinding(org.apache.cxf.service.model.BindingInfo)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:void addOutOfBandParts(org.apache.cxf.service.model.BindingOperationInfo,javax.wsdl.Message,org.apache.cxf.common.xmlschema.SchemaCollection,boolean,java.lang.String)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:void buildMessage(org.apache.cxf.service.model.MessageInfo,javax.wsdl.Message,org.apache.cxf.common.xmlschema.SchemaCollection,int,java.lang.String)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:org.apache.cxf.service.model.BindingInfo createBindingInfo(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding,java.lang.String)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:void initializeMessage(org.apache.cxf.binding.soap.model.SoapBindingInfo,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.service.model.BindingMessageInfo)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:java.util.List handleMimePart(javax.wsdl.extensions.mime.MIMEPart,java.util.List,org.apache.cxf.service.model.MessageInfo,org.apache.cxf.service.model.BindingMessageInfo,java.util.List,java.util.List)",
            "org.apache.cxf.binding.soap.interceptor.ReadHeadersInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.Soap12FaultOutInterceptor$Soap12FaultOutInterceptorInternal:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.RPCOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.soap.interceptor.SoapActionInInterceptor:void getAndSetOperation(org.apache.cxf.binding.soap.SoapMessage,java.lang.String)",
            "org.apache.cxf.binding.soap.interceptor.SoapHeaderOutFilterInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.RPCInInterceptor:org.apache.cxf.service.model.BindingOperationInfo getOperation(org.apache.cxf.message.Message,javax.xml.namespace.QName)",
            "org.apache.cxf.binding.soap.interceptor.RPCInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor:void writeSoapEnvelopeStart(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor:boolean handleHeaderPart(boolean,org.apache.cxf.binding.soap.SoapMessage,java.lang.String)",
            "org.apache.cxf.binding.soap.interceptor.MustUnderstandInterceptor:void initServiceSideInfo(java.util.Set,org.apache.cxf.binding.soap.SoapMessage,java.util.Set)",
            "org.apache.cxf.binding.soap.interceptor.MustUnderstandInterceptor:void buildMustUnderstandHeaders(java.util.Set,org.apache.cxf.binding.soap.SoapMessage,java.util.Set,java.util.Set)",
            "org.apache.cxf.binding.soap.interceptor.MustUnderstandInterceptor:void checkUnderstand(java.util.Set,java.util.Set,java.util.Set)",
            "org.apache.cxf.binding.soap.interceptor.Soap11FaultOutInterceptor$Soap11FaultOutInterceptorInternal:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.EndpointSelectionInterceptor:org.apache.cxf.endpoint.Endpoint selectEndpoint(org.apache.cxf.message.Message,java.util.Set)",
            "org.apache.cxf.binding.soap.interceptor.MustUnderstandInterceptor$UltimateReceiverMustUnderstandInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.SoapHeaderInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.soap.HeaderUtil:java.util.Set getHeaderQNames(org.apache.cxf.service.model.BindingMessageInfo)",
            "org.apache.cxf.binding.soap.SoapTransportFactory:org.apache.cxf.service.model.EndpointInfo createEndpointInfo(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.BindingInfo,javax.wsdl.Port)",
            "org.apache.cxf.binding.soap.SoapTransportFactory:void registerWithBindingManager()",
            "org.apache.cxf.binding.soap.SoapMessage:boolean hasHeader(javax.xml.namespace.QName)",
            "org.apache.cxf.binding.soap.SoapMessage:org.apache.cxf.headers.Header getHeader(javax.xml.namespace.QName)",
            "org.apache.cxf.binding.soap.saaj.SAAJInInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.saaj.SAAJOutInterceptor$SAAJOutEndingInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.model.SoapBindingInfo:org.apache.cxf.service.model.OperationInfo getOperationByAction(java.lang.String)",
            "org.apache.cxf.binding.xml.interceptor.XMLMessageInInterceptor:org.apache.cxf.service.model.BindingOperationInfo getBindingOperationInfo(boolean,javax.xml.namespace.QName,org.apache.cxf.service.model.BindingInfo,javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.binding.xml.XMLFormatValidator:boolean checkXMLBindingFormat()",
            "org.apache.cxf.binding.xml.XMLFormatValidator:boolean checkXMLFormat(org.apache.cxf.service.model.BindingInfo)",
            "org.apache.cxf.binding.xml.XMLFormatValidator:boolean findXMLFormatRootNode(java.util.Iterator,org.apache.cxf.service.model.BindingOperationInfo,java.lang.String)",
            "org.apache.cxf.binding.xml.XMLBindingFactory:org.apache.cxf.service.model.BindingInfo createBindingInfo(org.apache.cxf.service.model.ServiceInfo,java.lang.String,java.lang.Object)",
            "org.apache.cxf.clustering.AbstractStaticFailoverStrategy:java.util.List getAlternateEndpoints(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.tools.common.Tag:java.lang.String formatAttribute(org.apache.cxf.tools.common.Tag)",
            "org.apache.cxf.tools.common.Tag:java.lang.String formatTag(org.apache.cxf.tools.common.Tag,int)",
            "org.apache.cxf.tools.common.Tag:boolean equals(java.lang.Object)",
            "org.apache.cxf.tools.common.ClassUtils:void compile(org.apache.cxf.tools.common.ToolContext)",
            "org.apache.cxf.tools.common.ToolContext:void addParameters(java.util.Map)",
            "org.apache.cxf.tools.common.VelocityGenerator:void doWrite(java.lang.String,java.io.Writer)",
            "org.apache.cxf.tools.common.toolspec.ToolSpec:boolean isValidInputStream(java.lang.String)",
            "org.apache.cxf.tools.common.toolspec.ToolSpec:java.util.List getInstreamIds()",
            "org.apache.cxf.tools.common.toolspec.ToolSpec:java.util.List getOutstreamIds()",
            "org.apache.cxf.tools.common.toolspec.ToolSpec:java.lang.String getStreamRefName(java.lang.String)",
            "org.apache.cxf.tools.common.toolspec.parser.CommandDocument:java.lang.String[] getParameters(java.lang.String)",
            "org.apache.cxf.tools.common.toolspec.parser.CommandDocument:java.lang.String[] getParameterNames()",
            "org.apache.cxf.tools.common.toolspec.parser.Form:void <init>(org.w3c.dom.Element)",
            "org.apache.cxf.tools.common.toolspec.parser.Option:boolean accept(org.apache.cxf.tools.common.toolspec.parser.TokenInputStream,org.w3c.dom.Element,org.apache.cxf.tools.common.toolspec.parser.ErrorVisitor)",
            "org.apache.cxf.tools.common.toolspec.parser.OptionGroup:void <init>(org.w3c.dom.Element)",
            "org.apache.cxf.tools.common.toolspec.parser.OptionGroup:boolean accept(org.apache.cxf.tools.common.toolspec.parser.TokenInputStream,org.w3c.dom.Element,org.apache.cxf.tools.common.toolspec.parser.ErrorVisitor)",
            "org.apache.cxf.tools.common.toolspec.parser.OptionGroup:boolean isSatisfied(org.apache.cxf.tools.common.toolspec.parser.ErrorVisitor)",
            "org.apache.cxf.tools.common.toolspec.parser.ErrorVisitor:java.lang.String toString()",
            "org.apache.cxf.tools.common.toolspec.parser.CommandLineParser:org.apache.cxf.tools.common.toolspec.parser.CommandDocument parseArguments(java.lang.String[])",
            "org.apache.cxf.tools.common.ProcessorTestBase:boolean assertXmlEquals(java.io.File,java.io.File,java.util.List)",
            "org.apache.cxf.tools.common.ProcessorTestBase:void assertAttributesEquals(javax.xml.namespace.QName,java.util.Map,java.util.Map,java.util.Collection)",
            "org.apache.cxf.tools.common.ProcessorTestBase:void assertTagEquals(org.apache.cxf.tools.common.Tag,org.apache.cxf.tools.common.Tag,java.util.List,java.util.List)",
            "org.apache.cxf.tools.common.ProcessorTestBase:org.apache.cxf.tools.common.Tag getFromSource(org.apache.cxf.tools.common.Tag,org.apache.cxf.tools.common.Tag)",
            "org.apache.cxf.tools.common.model.JAnnotation:java.util.Set getImports()",
            "org.apache.cxf.tools.common.model.JAnnotation:org.apache.cxf.tools.common.model.JAnnotationElement getElementByName(java.lang.String)",
            "org.apache.cxf.tools.common.model.JavaMethod:java.lang.String getSignature()",
            "org.apache.cxf.tools.common.model.JavaMethod:void addAnnotation(java.lang.String,org.apache.cxf.tools.common.model.JAnnotation)",
            "org.apache.cxf.tools.common.model.JavaMethod:java.util.List getParameterList(boolean)",
            "org.apache.cxf.tools.common.model.JavaInterface:void addAnnotation(org.apache.cxf.tools.common.model.JAnnotation)",
            "org.apache.cxf.tools.common.model.JavaInterface:void addImports(java.util.Collection)",
            "org.apache.cxf.tools.common.model.JavaInterface:java.lang.String toString()",
            "org.apache.cxf.tools.common.model.JavaField:void addAnnotation(org.apache.cxf.tools.common.model.JAnnotation)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:boolean isSOAPBinding(javax.wsdl.Binding)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:java.lang.String getBindingStyle(javax.wsdl.Binding)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapOperation getSoapOperation(java.util.List)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:java.lang.String getSOAPOperationStyle(javax.wsdl.BindingOperation)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapBody getBindingInputSOAPBody(javax.wsdl.BindingOperation)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapBody getBindingOutputSOAPBody(javax.wsdl.BindingOperation)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapBody getSoapBody(java.util.List)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:java.util.List getSoapHeaders(java.util.List)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapHeader getBindingInputSOAPHeader(javax.wsdl.BindingOperation)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapHeader getBindingOutputSOAPHeader(javax.wsdl.BindingOperation)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapBinding getSoapBinding(java.util.List)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:java.util.List getBindingOperationSoapFaults(javax.wsdl.BindingOperation)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:boolean isMixedStyle(javax.wsdl.Binding)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:java.lang.String getCanonicalBindingStyle(javax.wsdl.Binding)",
            "org.apache.cxf.buslifecycle.CXFBusLifeCycleManager:void initComplete()",
            "org.apache.cxf.buslifecycle.CXFBusLifeCycleManager:void preShutdown()",
            "org.apache.cxf.buslifecycle.CXFBusLifeCycleManager:void postShutdown()",
            "org.apache.cxf.wsdl11.SchemaUtil:void getSchemas(javax.wsdl.Definition,org.apache.cxf.common.xmlschema.SchemaCollection,java.util.List)",
            "org.apache.cxf.wsdl11.SchemaUtil:void extractSchema(javax.wsdl.Definition,org.apache.cxf.common.xmlschema.SchemaCollection,java.util.List)",
            "org.apache.cxf.wsdl11.SchemaUtil:void parseImports(javax.wsdl.Definition,java.util.List)",
            "org.apache.cxf.wsdl11.SchemaUtil:void getSchemaList(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.SchemaUtil:void addSchema(java.lang.String,javax.wsdl.extensions.schema.Schema)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void parseWSDL(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:java.util.Collection getImports(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void parseImports(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void registerWSDLExtensibilityPlugins(javax.wsdl.extensions.ExtensionRegistry)",
            "org.apache.cxf.wsdl11.WSDLServiceUtils:org.apache.cxf.binding.BindingFactory getBindingFactory(javax.wsdl.Binding,org.apache.cxf.Bus,java.lang.StringBuffer)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:javax.wsdl.Definition build(java.util.Map)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addExtensibilityElements(javax.wsdl.extensions.ElementExtensible,java.util.List)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addExtensibilityAttributes(javax.wsdl.extensions.AttributeExtensible,java.util.Map)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildTypes(java.util.Collection,java.util.Map,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBinding(java.util.Collection,java.util.Collection)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBindingOperation(javax.wsdl.Definition,javax.wsdl.Binding,java.util.Collection)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBindingFault(javax.wsdl.Definition,javax.wsdl.BindingOperation,java.util.Collection)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildService(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildPortTypeOperation(javax.wsdl.PortType,java.util.Collection,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildMessage(javax.wsdl.Message,org.apache.cxf.service.model.AbstractMessageContainer,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void registerInitialExtensions(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:org.apache.cxf.service.model.ServiceSchemaInfo getSchemasForDefinition(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void putSchemasForDefinition(javax.wsdl.Definition,org.apache.cxf.service.model.ServiceSchemaInfo)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void removeDefinition(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void copyExtensors(org.apache.cxf.service.model.AbstractPropertiesHolder,java.util.List)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildMockServices(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition,javax.wsdl.Service,javax.xml.namespace.QName,org.apache.cxf.service.model.DescriptionInfo)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void parseImports(javax.wsdl.Definition,java.util.List)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.EndpointInfo buildEndpoint(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.BindingInfo,javax.wsdl.Port)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.BindingInfo buildBinding(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildInterface(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.PortType)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildInterfaceOperation(org.apache.cxf.service.model.InterfaceInfo,javax.wsdl.Operation)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildMessage(org.apache.cxf.service.model.AbstractMessageContainer,javax.wsdl.Message)",
            "org.apache.cxf.wsdl11.WSDLServiceFactory:org.apache.cxf.service.Service create()",
            "org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor:void insertConstructorArg(org.springframework.beans.factory.config.ConstructorArgumentValues,java.lang.Object)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void activateViaNS(java.lang.String)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void activateAll()",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadFragment(java.io.InputStream)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void processExtension(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadAndRegister(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:java.lang.Object getExtension(java.lang.String,java.lang.Class)",
            "org.apache.cxf.bus.extension.Extension:java.lang.String toString()",
            "org.apache.cxf.bus.CXFBusImpl:void initializeFeatures()",
            "org.apache.cxf.attachment.LazyDataSource:void load()",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:boolean containsValue(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:javax.activation.DataHandler get(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:javax.activation.DataHandler remove(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:void putAll(java.util.Map)",
            "org.apache.cxf.attachment.AttachmentDeserializer:void cacheStreamedAttachments()",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$1$1$1:void <init>(org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$1$1)",
            "org.apache.cxf.attachment.AttachmentSerializer:void writeAttachments()",
            "org.apache.cxf.attachment.AttachmentUtil:java.util.Map getDHMap(java.util.Collection)",
            "org.apache.cxf.attachment.AttachmentUtil:boolean isTypeSupported(java.lang.String,java.util.List)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$3$1:javax.activation.DataHandler next()",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$2$1:java.lang.String next()",
            "org.apache.cxf.frontend.ClientFactoryBean:void applyFeatures()",
            "org.apache.cxf.frontend.SimpleMethodDispatcher:org.apache.cxf.service.model.BindingOperationInfo getBindingOperation(java.lang.reflect.Method,org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory:org.apache.cxf.service.model.BindingInfo createBindingInfo()",
            "org.apache.cxf.frontend.ServerFactoryBean:void initializeServiceFactory()",
            "org.apache.cxf.frontend.ServerFactoryBean:void applyFeatures()",
            "org.apache.cxf.aegis.DatabindingException:java.lang.String getActualMessage()",
            "org.apache.cxf.aegis.util.jdom.StaxSerializer:void writeDocument(org.jdom.Document,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.aegis.util.jdom.StaxSerializer:void writeElement(org.jdom.Element,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.aegis.util.jdom.StaxSerializer:boolean isDeclared(javax.xml.stream.XMLStreamWriter,java.lang.String,java.lang.String)",
            "org.apache.cxf.aegis.util.jdom.StaxBuilder:void buildTree(org.jdom.JDOMFactory,javax.xml.stream.XMLStreamReader,org.jdom.Document)",
            "org.apache.cxf.aegis.util.stax.JDOMStreamReader:void setupNamespaces(org.jdom.Element)",
            "org.apache.cxf.aegis.util.stax.JDOMNamespaceContext:java.lang.String rawGetPrefix(org.jdom.Element,java.lang.String)",
            "org.apache.cxf.aegis.util.stax.JDOMNamespaceContext:void rawGetPrefixes(org.jdom.Element,java.lang.String,java.util.List)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void initialize(org.apache.cxf.service.Service)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void initializeOperation(org.apache.cxf.service.Service,org.apache.cxf.aegis.type.TypeMapping,org.apache.cxf.service.model.OperationInfo,java.util.Set)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void initializeOperationTypes(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void initializeMessage(org.apache.cxf.service.Service,org.apache.cxf.aegis.type.TypeMapping,org.apache.cxf.service.model.AbstractMessageContainer,int,java.util.Set)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void initializeMessageTypes(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.AbstractMessageContainer,int)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void addDependencies(java.util.Set,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void createSchemas(org.apache.cxf.service.Service,java.util.Set)",
            "org.apache.cxf.aegis.AegisContext:void processRootTypes()",
            "org.apache.cxf.aegis.type.basic.XMLBeanTypeInfo:org.w3c.dom.Element getPropertyElement(java.lang.String)",
            "org.apache.cxf.aegis.type.basic.BeanType:void writeObjectInternal(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,boolean)",
            "org.apache.cxf.aegis.type.basic.BeanType:java.util.Set getDependencies()",
            "org.apache.cxf.aegis.type.basic.BeanType:void writeSchema(org.apache.ws.commons.schema.XmlSchema)",
            "org.apache.cxf.aegis.type.basic.BeanTypeInfo:boolean containsPropertyName(java.util.List,java.lang.String)",
            "org.apache.cxf.aegis.type.mtom.AttachmentUtil:org.apache.cxf.message.Attachment getAttachment(java.lang.String,java.util.Collection)",
            "org.apache.cxf.aegis.type.encoded.ArrayTypeInfo:void <init>(javax.xml.namespace.NamespaceContext,java.lang.String,java.lang.String)",
            "org.apache.cxf.aegis.type.encoded.ArrayTypeInfo:java.lang.String toString()",
            "org.apache.cxf.aegis.type.encoded.MarshalRegistry$1:java.lang.Object next()",
            "org.apache.cxf.aegis.type.encoded.SoapArrayType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.SoapArrayType:java.lang.Object makeArray(java.util.List,java.util.List,java.lang.Class)",
            "org.apache.cxf.aegis.type.encoded.TrailingBlocks:java.util.List writeBlocks(org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.SoapRefRegistry:void addInstance(java.lang.String,java.lang.Object)",
            "org.apache.cxf.aegis.type.XMLTypeCreator:org.w3c.dom.Element getBestMatch(org.w3c.dom.Element,java.lang.reflect.Method,java.util.List)",
            "org.apache.cxf.aegis.type.collection.MapType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.collection.CollectionType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.jaxws.JaxWsProxyFactoryBean:boolean needWrapperClassInterceptor(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.jaxws.JaxWsProxyFactoryBean:void buildHandlerChain(org.apache.cxf.jaxws.JaxWsClientProxy)",
            "org.apache.cxf.jaxws.handler.HandlerResolverImpl:java.util.List createHandlerChain(javax.xml.ws.handler.PortInfo)",
            "org.apache.cxf.jaxws.handler.HandlerChainInvoker:void <init>(java.util.List,boolean)",
            "org.apache.cxf.jaxws.handler.HandlerChainInvoker:boolean invokeHandleFault(java.util.List,javax.xml.ws.handler.MessageContext)",
            "org.apache.cxf.jaxws.handler.HandlerChainInvoker:boolean invokeHandleMessage(java.util.List,javax.xml.ws.handler.MessageContext)",
            "org.apache.cxf.jaxws.handler.HandlerChainBuilder:java.util.List buildHandlerChainFromConfiguration(java.util.List)",
            "org.apache.cxf.jaxws.handler.HandlerChainBuilder:java.util.List sortHandlers(java.util.List)",
            "org.apache.cxf.jaxws.handler.HandlerChainBuilder:void configureHandler(javax.xml.ws.handler.Handler,org.apache.cxf.jaxws.javaee.PortComponentHandlerType)",
            "org.apache.cxf.jaxws.handler.soap.SOAPMessageContextImpl:java.lang.Object[] getHeaders(javax.xml.namespace.QName,javax.xml.bind.JAXBContext,boolean)",
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerInterceptor:java.util.Set getUnderstoodHeaders()",
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerInterceptor:javax.xml.ws.handler.MessageContext createProtocolMessageContext(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerFaultInInterceptor:java.util.Set getUnderstoodHeaders()",
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerFaultOutInterceptor:java.util.Set getUnderstoodHeaders()",
            "org.apache.cxf.jaxws.support.JaxWsEndpointImpl:boolean hasUsingAddressing(java.util.List)",
            "org.apache.cxf.jaxws.support.JaxWsEndpointImpl:boolean addressingRequired(java.util.List)",
            "org.apache.cxf.jaxws.support.JaxWsEndpointImpl:javax.xml.ws.soap.AddressingFeature getAddressingFeature()",
            "org.apache.cxf.jaxws.support.JaxWsEndpointImpl:org.apache.cxf.ws.addressing.WSAddressingFeature getWSAddressingFeature()",
            "org.apache.cxf.jaxws.support.JaxWsEndpointImpl:javax.xml.ws.soap.MTOMFeature getMTOMFeature()",
            "org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean:void initializeWSDLOperationsForProvider()",
            "org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean:org.apache.cxf.service.model.FaultInfo getFaultInfo(org.apache.cxf.service.model.OperationInfo,java.lang.Class)",
            "org.apache.cxf.jaxws.support.JaxWsImplementorInfo:java.lang.String getWsdlLocation()",
            "org.apache.cxf.jaxws.support.JaxWsImplementorInfo:javax.xml.namespace.QName getInterfaceName()",
            "org.apache.cxf.jaxws.support.JaxWsImplementorInfo:java.lang.String getImplementorClassName()",
            "org.apache.cxf.jaxws.WrapperClassGenerator:java.util.Set generate()",
            "org.apache.cxf.jaxws.WrapperClassGenerator:void createWrapperClass(org.apache.cxf.service.model.MessagePartInfo,org.apache.cxf.service.model.MessageInfo,org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,boolean)",
            "org.apache.cxf.jaxws.WrapperClassGenerator:void addJAXBAnnotations(org.objectweb.asm.FieldVisitor,java.util.List)",
            "org.apache.cxf.jaxws.JaxWsClientProxy:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])",
            "org.apache.cxf.jaxws.ServiceImpl:void initializePorts()",
            "org.apache.cxf.jaxws.ServiceImpl:org.apache.cxf.jaxws.support.JaxWsClientEndpointImpl getJaxwsEndpoint(javax.xml.namespace.QName,org.apache.cxf.service.factory.AbstractServiceFactoryBean,javax.xml.ws.WebServiceFeature[])",
            "org.apache.cxf.jaxws.ServiceImpl:org.apache.cxf.service.factory.AbstractServiceFactoryBean createDispatchService(org.apache.cxf.databinding.DataBinding)",
            "org.apache.cxf.jaxws.ServiceImpl:java.lang.Object getPort(org.apache.cxf.ws.addressing.EndpointReferenceType,java.lang.Class,javax.xml.ws.WebServiceFeature[])",
            "org.apache.cxf.jaxws.ServiceImpl:javax.xml.ws.Dispatch createDispatch(javax.xml.namespace.QName,java.lang.Class,javax.xml.ws.Service$Mode,javax.xml.ws.WebServiceFeature[])",
            "org.apache.cxf.jaxws.ServiceImpl:javax.xml.ws.Dispatch createDispatch(javax.xml.namespace.QName,javax.xml.bind.JAXBContext,javax.xml.ws.Service$Mode,javax.xml.ws.WebServiceFeature[])",
            "org.apache.cxf.jaxws.spi.ProviderImpl:javax.xml.ws.wsaddressing.W3CEndpointReference createW3CEndpointReference(java.lang.String,javax.xml.namespace.QName,javax.xml.namespace.QName,java.util.List,java.lang.String,java.util.List)",
            "org.apache.cxf.jaxws.JaxWsServerFactoryBean:void buildHandlerChain()",
            "org.apache.cxf.jaxws.DispatchImpl:void addInvokeOperation(boolean)",
            "org.apache.cxf.jaxws.interceptors.MessageModeInInterceptor$MultiPartDataSource:void nextCurrent()",
            "org.apache.cxf.jaxws.interceptors.WebFaultOutInterceptor:org.apache.cxf.service.model.MessagePartInfo getFaultMessagePart(javax.xml.namespace.QName,org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.jaxws.interceptors.HolderOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.interceptors.SwAInInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.jaxws.interceptors.WrapperClassOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.interceptors.WrapperClassOutInterceptor:org.apache.cxf.databinding.WrapperHelper createWrapperHelper(org.apache.cxf.databinding.WrapperCapableDatabinding,org.apache.cxf.service.model.MessageInfo,org.apache.cxf.service.model.MessageInfo,java.lang.Class)",
            "org.apache.cxf.jaxws.interceptors.HolderInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.interceptors.WrapperClassInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.interceptors.WrapperClassInInterceptor:org.apache.cxf.databinding.WrapperHelper createWrapperHelper(org.apache.cxf.databinding.WrapperCapableDatabinding,org.apache.cxf.service.model.MessageInfo,org.apache.cxf.service.model.MessageInfo,java.lang.Class)",
            "org.apache.cxf.jaxws.interceptors.SwAOutInterceptor:void processAttachments(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.binding.soap.model.SoapBodyInfo)",
            "org.apache.cxf.jaxws.binding.http.HTTPBindingImpl:void validate()",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:void copyScoped(java.util.Map)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:void clear()",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:java.util.Set keySet()",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:java.util.Set entrySet()",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:void putAll(java.util.Map)",
            "org.apache.cxf.jaxws.AbstractJAXWSMethodInvoker:java.util.Map removeHandlerProperties(org.apache.cxf.jaxws.context.WrappedMessageContext)",
            "org.apache.cxf.jaxws.AbstractJAXWSMethodInvoker:void addHandlerProperties(org.apache.cxf.jaxws.context.WrappedMessageContext,java.util.Map)",
            "org.apache.cxf.jaxws.AbstractJAXWSMethodInvoker:void updateWebServiceContext(org.apache.cxf.message.Exchange,javax.xml.ws.handler.MessageContext)",
            "org.apache.cxf.xmlbeans.XmlBeansDataBinding:void initialize(org.apache.cxf.service.Service)"
        ]
    },
    "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$2$1:java.lang.Object next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.MapNamespaceContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.helpers.WSDLHelper:javax.wsdl.BindingOperation getBindingOperation(javax.wsdl.Definition,java.lang.String)",
            "org.apache.cxf.helpers.WSDLHelper:javax.wsdl.BindingOperation getBindingOperation(javax.wsdl.Binding,java.lang.String)",
            "org.apache.cxf.helpers.WSDLHelper:java.util.List getPortTypes(javax.wsdl.Definition)",
            "org.apache.cxf.helpers.WSDLHelper:java.util.List getInMessageParts(javax.wsdl.Operation)",
            "org.apache.cxf.helpers.WSDLHelper:java.util.List getOutMessageParts(javax.wsdl.Operation)",
            "org.apache.cxf.helpers.WSDLHelper:javax.wsdl.Binding getBinding(javax.wsdl.BindingOperation,javax.wsdl.Definition)",
            "org.apache.cxf.helpers.XMLUtils:org.w3c.dom.Element fetchElementByNameAttribute(org.w3c.dom.Element,java.lang.String,java.lang.String)",
            "org.apache.cxf.common.util.SortedArraySet:boolean addAll(java.util.Collection)",
            "org.apache.cxf.common.util.SortedArraySet:boolean containsAll(java.util.Collection)",
            "org.apache.cxf.common.util.SortedArraySet:boolean removeAll(java.util.Collection)",
            "org.apache.cxf.common.util.SortedArraySet:boolean retainAll(java.util.Collection)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.util.Set entrySet()",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.util.Set keySet()",
            "org.apache.cxf.common.util.ReflectionInvokationHandler$WrapperIterator:java.lang.Object next()",
            "org.apache.cxf.common.util.StringUtils:java.util.List getParts(java.lang.String,java.lang.String)",
            "org.apache.cxf.common.util.StringUtils:java.lang.String getFirstNotEmpty(java.lang.String,java.lang.String)",
            "org.apache.cxf.common.util.StringUtils:java.lang.String getFirstNotEmpty(java.util.List)",
            "org.apache.cxf.common.util.ReflectionUtil:java.util.List getPackagesFromJar(java.io.File)",
            "org.apache.cxf.common.util.CacheMap:void updateMainDataMap()",
            "org.apache.cxf.common.util.CacheMap:void putAll(java.util.Map)",
            "org.apache.cxf.common.util.AbstractTwoStageCache:boolean recycle(java.lang.Object)",
            "org.apache.cxf.common.util.CollectionUtils:java.util.Collection diff(java.util.Collection,java.util.Collection)",
            "org.apache.cxf.common.util.CollectionUtils:boolean isEmpty(java.util.Collection)",
            "org.apache.cxf.common.util.TwoStageMap:void putAll(java.util.Map)",
            "org.apache.cxf.common.injection.ResourceInjector:void invokePostConstruct()",
            "org.apache.cxf.common.injection.ResourceInjector:void invokePreDestroy()",
            "org.apache.cxf.common.annotation.AnnotationProcessor:void processMethods(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)",
            "org.apache.cxf.common.annotation.AnnotationProcessor:void processFields(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)",
            "org.apache.cxf.common.annotation.AnnotationProcessor:void processClass(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)",
            "org.apache.cxf.resource.DefaultResourceManager:java.lang.Object findResource(java.lang.String,java.lang.Class,boolean,java.util.List)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.util.Set entrySet()",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.util.Collection values()",
            "org.apache.cxf.configuration.spring.SpringBeanMap:void processBeans(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.configuration.spring.SpringBeanQNameMap:void processBeans(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void initWildcardDefinitionMap()",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureBean(java.lang.String,java.lang.Object,boolean)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureWithWildCard(java.lang.String,java.lang.Object)",
            "org.apache.cxf.configuration.jsse.spring.TLSParameterJaxBUtils:java.security.KeyStore createTrustStore(java.io.InputStream)",
            "org.apache.cxf.jaxb.JAXBUtils:java.lang.String makeConventionalIdentifier(java.util.List,org.apache.cxf.jaxb.JAXBUtils$IdentifierType)",
            "org.apache.cxf.jaxb.JAXBDataBinding:void initialize(org.apache.cxf.service.Service)",
            "org.apache.cxf.jaxb.JAXBDataBinding:org.apache.cxf.jaxb.JAXBDataBinding$CachedContextAndSchemas createJAXBContextAndSchemas(java.util.Set,java.lang.String)",
            "org.apache.cxf.jaxb.JAXBDataBinding:void scanPackages(java.util.Set)",
            "org.apache.cxf.jaxb.JAXBSchemaInitializer:javax.xml.namespace.QName getTypeName(org.apache.cxf.jaxb.JAXBBeanInfo)",
            "org.apache.cxf.jaxb.JAXBSchemaInitializer:void end(org.apache.cxf.service.model.FaultInfo)",
            "org.apache.cxf.jaxb.JAXBSchemaInitializer:void buildExceptionType(org.apache.cxf.service.model.MessagePartInfo,java.lang.Class)",
            "org.apache.cxf.jaxb.JAXBSchemaInitializer:void addElement(org.apache.ws.commons.schema.XmlSchemaSequence,org.apache.cxf.jaxb.JAXBBeanInfo,javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.jaxb.JAXBSchemaInitializer:boolean isExistSchemaElement(org.apache.ws.commons.schema.XmlSchema,javax.xml.namespace.QName)",
            "org.apache.cxf.jaxb.io.DataWriterImpl:javax.xml.bind.Marshaller createMarshaller(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.jaxb.io.DataReaderImpl:javax.xml.bind.Unmarshaller createUnmarshaller()",
            "org.apache.cxf.management.utils.ManagementConsole:void listAllManagedEndpoint()",
            "org.apache.cxf.management.utils.ManagementConsole:void invokeEndpoint(java.lang.String)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElementEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.message.MessageUtils:boolean isDOMPresent(org.apache.cxf.message.Message)",
            "org.apache.cxf.message.MessageImpl:void copyContent(org.apache.cxf.message.Message,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:org.apache.cxf.service.model.BindingOperationInfo findAnyOp(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.util.Map keepInOrder(java.util.Map,org.apache.cxf.service.model.OperationInfo,java.util.List)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:org.apache.cxf.message.MessageContentsList getParameters(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.util.Map getQueries(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.WrappedInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.BareInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.ClientFaultConverter:void processFaultDetail(org.apache.cxf.interceptor.Fault,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:org.apache.cxf.service.model.MessagePartInfo findMessagePart(org.apache.cxf.message.Exchange,java.util.Collection,javax.xml.namespace.QName,boolean,int,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.FaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.FaultOutInterceptor:org.apache.cxf.service.model.FaultInfo getFaultForClass(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Class)",
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:void writeParts(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.message.MessageContentsList,java.util.List)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void getPara(org.apache.cxf.staxutils.DepthXMLStreamReader,org.apache.cxf.databinding.DataReader,org.apache.cxf.message.MessageContentsList,java.util.Iterator,org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.ConduitInitiatorManagerImpl:org.apache.cxf.transport.ConduitInitiator getConduitInitiatorForUri(java.lang.String)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updateDoc(org.w3c.dom.Document,java.lang.String,java.util.Map,java.util.Map)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updateDefinition(javax.wsdl.Definition,java.util.Map,java.util.Map,java.lang.String,org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updatePublishedEndpointUrl(java.lang.String,javax.wsdl.Definition,javax.xml.namespace.QName)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void setSoapAddressLocationOn(javax.wsdl.Port,java.lang.String)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updateSchemaImports(javax.wsdl.extensions.schema.Schema,java.util.Map,java.lang.String)",
            "org.apache.cxf.transport.http.Cookie:void handleSetCookie(java.util.Map,java.util.List)",
            "org.apache.cxf.transport.http.AbstractHTTPTransportFactory:void registerWithBindingManager()",
            "org.apache.cxf.transport.http.AbstractHTTPTransportFactory:org.apache.cxf.service.model.EndpointInfo createEndpointInfo(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.BindingInfo,javax.wsdl.Port)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPClientPolicy getClient(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPClientPolicy)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPServerPolicy getServer(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPServerPolicy)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPClientPolicy getClient(org.apache.cxf.ws.policy.PolicyEngine,org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.transport.Conduit)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPServerPolicy getServer(org.apache.cxf.ws.policy.PolicyEngine,org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.transport.Destination)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:void assertClientPolicy(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPClientPolicy)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:void assertServerPolicy(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPServerPolicy)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPClientPolicy getClient(java.util.Collection)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPServerPolicy getServer(java.util.Collection)",
            "org.apache.cxf.transport.http.HTTPConduit:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:void transferProtocolHeadersToURLConnection(org.apache.cxf.message.Message,java.net.URLConnection)",
            "org.apache.cxf.transport.http.HTTPConduit:void logProtocolHeaders(java.util.logging.Level,org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:java.lang.String extractAuthorizationRealm(java.util.Map)",
            "org.apache.cxf.transport.http.HTTPConduit:java.lang.String extractLocation(java.util.Map)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void copyResponseHeaders(org.apache.cxf.message.Message,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponseInternal()",
            "org.apache.cxf.transport.http.gzip.GZIPOutInterceptor:org.apache.cxf.transport.http.gzip.GZIPOutInterceptor$UseGzip gzipPermitted(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.gzip.GZIPInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.AbstractMultiplexDestination:java.lang.String extractStringElementFromAny(javax.xml.namespace.QName,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.transport.DestinationFactoryManagerImpl:org.apache.cxf.transport.DestinationFactory getDestinationFactoryForUri(java.lang.String)",
            "org.apache.cxf.transport.servlet.ServletController:void updateDests(javax.servlet.http.HttpServletRequest)",
            "org.apache.cxf.transport.servlet.ServletController:void invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.servlet.ServletController:org.apache.cxf.transport.servlet.ServletDestination checkRestfulRequest(javax.servlet.http.HttpServletRequest)",
            "org.apache.cxf.transport.servlet.ServletController:void generateServiceList(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.servlet.ServletController:void generateUnformattedServiceList(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.servlet.ServletTransportFactory:void register()",
            "org.apache.cxf.transport.servlet.AbstractCXFServlet:void replaceDestinationFactory()",
            "org.apache.cxf.transport.https.CertificateHostnameVerifier$Certificates:java.lang.String[] getDNSSubjectAlts(java.security.cert.X509Certificate)",
            "org.apache.cxf.transport.https.SSLUtils:java.util.List compileRegexPatterns(java.util.List,boolean,java.util.logging.Logger)",
            "org.apache.cxf.transport.https.SSLUtils:boolean matchesOneOf(java.lang.String,java.util.List)",
            "org.apache.cxf.transport.https.CertificateHostnameVerifier$AbstractVerifier:void check(java.lang.String[],java.lang.String[],java.lang.String[],boolean,boolean)",
            "org.apache.cxf.transport.http_jetty.spring.JettySpringTypesFactory:java.util.Map toThreadingParameters(java.util.List)",
            "org.apache.cxf.transport.http_jetty.spring.JettySpringTypesFactory:java.util.Map toTLSServerParamenters(java.util.List)",
            "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineFactoryBeanDefinitionParser:java.util.List getRequiredElementsList(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,javax.xml.namespace.QName,org.springframework.beans.factory.support.BeanDefinitionBuilder)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void doService(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine:void addServant(java.net.URL,org.apache.cxf.transport.http_jetty.JettyHTTPHandler)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPTransportFactory:void finalizeConfig()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void setEnginesList(java.util.List)",
            "org.apache.cxf.transport.jms.JMSUtils:void addProtocolHeaders(javax.jms.Message,java.util.Map)",
            "org.apache.cxf.feature.AbstractFeature:java.lang.Object getActive(java.util.List,java.lang.Class)",
            "org.apache.cxf.endpoint.ClientLifeCycleManagerImpl:void clientCreated(org.apache.cxf.endpoint.Client)",
            "org.apache.cxf.endpoint.ClientLifeCycleManagerImpl:void clientDestroyed(org.apache.cxf.endpoint.Client)",
            "org.apache.cxf.endpoint.ServerLifeCycleManagerImpl:void startServer(org.apache.cxf.endpoint.Server)",
            "org.apache.cxf.endpoint.ServerLifeCycleManagerImpl:void stopServer(org.apache.cxf.endpoint.Server)",
            "org.apache.cxf.endpoint.EndpointResolverRegistryImpl:org.apache.cxf.ws.addressing.EndpointReferenceType resolve(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.endpoint.EndpointResolverRegistryImpl:org.apache.cxf.ws.addressing.EndpointReferenceType renew(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.endpoint.EndpointResolverRegistryImpl:org.apache.cxf.ws.addressing.EndpointReferenceType mint(javax.xml.namespace.QName)",
            "org.apache.cxf.endpoint.EndpointResolverRegistryImpl:org.apache.cxf.ws.addressing.EndpointReferenceType mint(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.endpoint.ServiceContractResolverRegistryImpl:java.net.URI getContractLocation(javax.xml.namespace.QName)",
            "org.apache.cxf.endpoint.ClientImpl:org.apache.cxf.service.model.EndpointInfo findEndpoint(org.apache.cxf.service.Service,javax.xml.namespace.QName)",
            "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:org.apache.cxf.endpoint.Client createClient(java.lang.String,javax.xml.namespace.QName,java.lang.ClassLoader,javax.xml.namespace.QName,java.util.List)",
            "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:void addBindingFiles(java.util.List,org.apache.cxf.jaxb.JAXBUtils$SchemaCompiler)",
            "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:boolean isValidPackage(org.apache.cxf.jaxb.JAXBUtils$JPackage)",
            "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:void outputDebug(org.apache.cxf.jaxb.JAXBUtils$JCodeModel)",
            "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:void addSchemas(java.lang.String,java.util.Collection,org.apache.cxf.jaxb.JAXBUtils$SchemaCompiler)",
            "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:boolean compileJavaSrc(java.lang.String,java.util.List,java.lang.String)",
            "org.apache.cxf.endpoint.dynamic.TypeClassInitializer:void begin(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.ws.addressing.ContextUtils:java.lang.String getActionFromServiceModel(org.apache.cxf.message.Message,java.lang.Exception)",
            "org.apache.cxf.ws.addressing.MAPAggregator:void assertAssertion(org.apache.cxf.ws.policy.AssertionInfoMap,javax.xml.namespace.QName)",
            "org.apache.cxf.ws.addressing.MAPAggregator:boolean hasUsingAddressing(java.util.List)",
            "org.apache.cxf.ws.addressing.MAPAggregator:java.lang.String getActionFromFaultMessage(org.apache.cxf.service.model.OperationInfo,java.lang.String)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void encodeReferenceParameters(org.apache.cxf.ws.addressing.AddressingProperties,org.w3c.dom.Element,javax.xml.bind.Marshaller)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void addMustUnderstandAttribute(org.w3c.dom.Element,javax.xml.namespace.QName,org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.addressing.AddressingPropertiesImpl)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:org.apache.cxf.ws.addressing.AddressingProperties unmarshalMAPs(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void decodeReferenceParameters(java.util.Set,org.apache.cxf.ws.addressing.AddressingPropertiesImpl,javax.xml.bind.Unmarshaller)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void discardMAPs(java.util.List,org.apache.cxf.ws.addressing.AddressingProperties)",
            "org.apache.cxf.ws.policy.builder.primitive.NestedPrimitiveAssertion:org.apache.neethi.PolicyComponent normalize()",
            "org.apache.cxf.ws.policy.builder.primitive.NestedPrimitiveAssertion:boolean isAsserted(org.apache.cxf.ws.policy.AssertionInfoMap)",
            "org.apache.cxf.ws.policy.builder.primitive.NestedPrimitiveAssertion:boolean isPolicyAsserted(org.apache.neethi.PolicyOperator,org.apache.cxf.ws.policy.AssertionInfoMap)",
            "org.apache.cxf.ws.policy.builder.primitive.PrimitiveAssertion:boolean isAsserted(org.apache.cxf.ws.policy.AssertionInfoMap)",
            "org.apache.cxf.ws.policy.util.PolicyComparator:boolean compare(java.util.List,java.util.List)",
            "org.apache.cxf.ws.policy.AssertionInfoMap:void <init>(java.util.Collection)",
            "org.apache.cxf.ws.policy.AssertionInfoMap:void putAssertionInfo(org.apache.cxf.ws.policy.PolicyAssertion)",
            "org.apache.cxf.ws.policy.AssertionInfoMap:boolean supportsAlternative(org.apache.cxf.ws.policy.PolicyAssertion,java.util.List)",
            "org.apache.cxf.ws.policy.AssertionInfoMap:boolean supportsAlternative(java.util.Collection,java.util.List)",
            "org.apache.cxf.ws.policy.AssertionInfoMap:void checkEffectivePolicy(org.apache.neethi.Policy)",
            "org.apache.cxf.ws.policy.AssertionInfoMap:void check()",
            "org.apache.cxf.ws.policy.AssertionInfoMap:void getAssertions(org.apache.neethi.PolicyOperator,java.util.Collection)",
            "org.apache.cxf.ws.policy.Intersector:boolean compatibleAlternatives(java.util.Collection,java.util.Collection)",
            "org.apache.cxf.ws.policy.Intersector:boolean compatiblePolicies(org.apache.neethi.Policy,org.apache.neethi.Policy)",
            "org.apache.cxf.ws.policy.Intersector:org.apache.neethi.Policy intersect(org.apache.neethi.Policy,org.apache.neethi.Policy)",
            "org.apache.cxf.ws.policy.Intersector:org.apache.cxf.ws.policy.PolicyAssertion findCompatibleAssertion(org.apache.cxf.ws.policy.PolicyAssertion,java.util.Collection)",
            "org.apache.cxf.ws.policy.EndpointPolicyImpl:java.util.Collection getSupportedAlternatives()",
            "org.apache.cxf.ws.policy.EndpointPolicyImpl:void initializeVocabulary()",
            "org.apache.cxf.ws.policy.EndpointPolicyImpl:java.util.Collection getSupportedAlternatives(org.apache.neethi.Policy)",
            "org.apache.cxf.ws.policy.EndpointPolicyImpl:void initializeInterceptors(org.apache.cxf.ws.policy.PolicyInterceptorProviderRegistry,java.util.Set,org.apache.cxf.ws.policy.PolicyAssertion,boolean)",
            "org.apache.cxf.ws.policy.EndpointPolicyImpl:void initializeInterceptors()",
            "org.apache.cxf.ws.policy.EndpointPolicyImpl:void checkExactlyOnes()",
            "org.apache.cxf.ws.policy.ServerPolicyOutFaultInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.policy.WSPolicyFeature:org.apache.neethi.Policy initializeEndpointPolicy(org.apache.cxf.endpoint.Endpoint,org.apache.cxf.Bus)",
            "org.apache.cxf.ws.policy.PolicyInInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.policy.PolicyOutInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.policy.PolicyInterceptorProviderRegistryImpl:void register(org.apache.cxf.ws.policy.PolicyInterceptorProvider)",
            "org.apache.cxf.ws.policy.PolicyInterceptorProviderRegistryImpl:java.util.List getInterceptors(java.util.Collection,boolean,boolean)",
            "org.apache.cxf.ws.policy.selector.MinimalAlternativeSelector:java.util.Collection selectAlternative(org.apache.neethi.Policy,org.apache.cxf.ws.policy.PolicyEngine,org.apache.cxf.ws.policy.Assertor)",
            "org.apache.cxf.ws.policy.selector.FirstAlternativeSelector:java.util.Collection selectAlternative(org.apache.neethi.Policy,org.apache.cxf.ws.policy.PolicyEngine,org.apache.cxf.ws.policy.Assertor)",
            "org.apache.cxf.ws.policy.selector.MaximalAlternativeSelector:java.util.Collection selectAlternative(org.apache.neethi.Policy,org.apache.cxf.ws.policy.PolicyEngine,org.apache.cxf.ws.policy.Assertor)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:org.apache.neethi.Policy getAggregatedServicePolicy(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:org.apache.neethi.Policy getAggregatedEndpointPolicy(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:org.apache.neethi.Policy getAggregatedOperationPolicy(org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:org.apache.neethi.Policy getAggregatedMessagePolicy(org.apache.cxf.service.model.BindingMessageInfo)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:org.apache.neethi.Policy getAggregatedFaultPolicy(org.apache.cxf.service.model.BindingFaultInfo)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:java.util.Collection getAssertions(org.apache.cxf.ws.policy.EffectivePolicy,boolean)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:void addAssertions(org.apache.neethi.PolicyComponent,boolean,java.util.Collection)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:java.util.Set getVocabulary(org.apache.neethi.PolicyComponent,boolean)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:boolean supportsAlternative(java.util.Collection,org.apache.cxf.ws.policy.Assertor)",
            "org.apache.cxf.ws.policy.PolicyUtils:boolean contains(java.util.Collection,org.apache.neethi.Assertion)",
            "org.apache.cxf.ws.policy.PolicyUtils:boolean contains(java.util.Collection,java.util.Collection)",
            "org.apache.cxf.ws.policy.PolicyUtils:void printPolicyComponent(org.apache.neethi.PolicyComponent,java.lang.StringBuffer,int)",
            "org.apache.cxf.ws.policy.mtom.MTOMPolicyInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.policy.EffectivePolicyImpl:void initialiseInterceptors(org.apache.cxf.ws.policy.PolicyEngineImpl,boolean)",
            "org.apache.cxf.ws.policy.EffectivePolicyImpl:java.util.Collection getSupportedAlternatives(org.apache.cxf.ws.policy.PolicyEngineImpl,org.apache.neethi.Policy)",
            "org.apache.cxf.ws.policy.EffectivePolicyImpl:void initialiseInterceptors(org.apache.cxf.ws.policy.PolicyInterceptorProviderRegistry,org.apache.cxf.ws.policy.PolicyEngineImpl,java.util.Set,org.apache.cxf.ws.policy.PolicyAssertion,boolean)",
            "org.apache.cxf.ws.policy.attachment.wsdl11.Wsdl11AttachmentPolicyProvider$ExtensibleInfo:java.lang.Object getExtensor(java.lang.Class)",
            "org.apache.cxf.ws.policy.attachment.wsdl11.Wsdl11AttachmentPolicyProvider$ExtensibleInfo:java.util.List getExtensors(java.lang.Class)",
            "org.apache.cxf.ws.policy.attachment.wsdl11.Wsdl11AttachmentPolicyProvider:org.apache.neethi.Policy getElementPolicy(org.apache.cxf.service.model.Extensible,boolean,org.apache.cxf.service.model.DescriptionInfo)",
            "org.apache.cxf.ws.policy.attachment.reference.LocalServiceModelReferenceResolver:org.apache.neethi.Policy resolveReference(java.lang.String)",
            "org.apache.cxf.ws.policy.attachment.reference.RemoteReferenceResolver:org.apache.neethi.Policy resolveReference(java.lang.String)",
            "org.apache.cxf.ws.policy.attachment.external.PolicyAttachment:boolean appliesTo(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.ws.policy.attachment.external.PolicyAttachment:boolean appliesTo(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.ws.policy.attachment.external.PolicyAttachment:boolean appliesTo(org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.ws.policy.attachment.external.PolicyAttachment:boolean appliesTo(org.apache.cxf.service.model.BindingMessageInfo)",
            "org.apache.cxf.ws.policy.attachment.external.PolicyAttachment:boolean appliesTo(org.apache.cxf.service.model.BindingFaultInfo)",
            "org.apache.cxf.ws.policy.attachment.external.ExternalAttachmentProvider:org.apache.neethi.Policy getEffectivePolicy(org.apache.cxf.service.model.BindingFaultInfo)",
            "org.apache.cxf.ws.policy.attachment.external.ExternalAttachmentProvider:org.apache.neethi.Policy getEffectivePolicy(org.apache.cxf.service.model.BindingMessageInfo)",
            "org.apache.cxf.ws.policy.attachment.external.ExternalAttachmentProvider:org.apache.neethi.Policy getEffectivePolicy(org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.ws.policy.attachment.external.ExternalAttachmentProvider:org.apache.neethi.Policy getEffectivePolicy(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.ws.policy.attachment.external.ExternalAttachmentProvider:org.apache.neethi.Policy getEffectivePolicy(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.ws.policy.attachment.external.ExternalAttachmentProvider:void readDocument()",
            "org.apache.cxf.ws.policy.AssertionBuilderRegistryImpl:void register(org.apache.cxf.ws.policy.AssertionBuilder)",
            "org.apache.cxf.ws.policy.ClientPolicyInFaultInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.policy.AbstractPolicyInterceptor:org.apache.cxf.service.model.BindingFaultInfo getBindingFaultInfo(org.apache.cxf.message.Message,java.lang.Exception,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.ws.security.policy.builders.X509TokenBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.builders.X509TokenBuilder:void processAlternative(java.util.List,org.apache.cxf.ws.security.policy.model.X509Token,org.apache.cxf.ws.security.policy.SPConstants)",
            "org.apache.cxf.ws.security.policy.builders.SupportingTokens12Builder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.builders.SupportingTokens12Builder:void processAlternative(java.util.List,org.apache.cxf.ws.security.policy.model.SupportingToken)",
            "org.apache.cxf.ws.security.policy.builders.InitiatorTokenBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.builders.InitiatorTokenBuilder:void processAlternative(java.util.List,org.apache.cxf.ws.security.policy.model.InitiatorToken)",
            "org.apache.cxf.ws.security.policy.builders.AsymmetricBindingBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.builders.AsymmetricBindingBuilder:void processAlternative(java.util.List,org.apache.cxf.ws.security.policy.model.AsymmetricBinding,org.apache.cxf.ws.security.policy.SPConstants)",
            "org.apache.cxf.ws.security.policy.builders.IssuedTokenBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.builders.IssuedTokenBuilder:void processAlternative(java.util.List,org.apache.cxf.ws.security.policy.model.IssuedToken)",
            "org.apache.cxf.ws.security.policy.builders.ProtectionTokenBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.builders.TransportTokenBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.builders.RecipientTokenBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.builders.RecipientTokenBuilder:void processAlternative(java.util.List,org.apache.cxf.ws.security.policy.model.RecipientToken)",
            "org.apache.cxf.ws.security.policy.builders.SupportingTokensBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.builders.SupportingTokensBuilder:void processAlternative(java.util.List,org.apache.cxf.ws.security.policy.model.SupportingToken)",
            "org.apache.cxf.ws.security.policy.builders.SymmetricBindingBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.builders.SymmetricBindingBuilder:void processAlternatives(java.util.List,org.apache.cxf.ws.security.policy.model.SymmetricBinding,org.apache.cxf.ws.security.policy.SPConstants)",
            "org.apache.cxf.ws.security.policy.model.RequiredParts:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.ContentEncryptedElements:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SignedEncryptedElements:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.RequiredElements:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SupportingToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SupportingToken:org.apache.neethi.Policy getPolicy()",
            "org.apache.cxf.ws.security.policy.model.SignedEncryptedParts:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.AbstractSecurityAssertion:boolean isAsserted(org.apache.cxf.ws.policy.AssertionInfoMap)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor$SecureConversationTokenFinderInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor$SecureConversationCancelInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.policy.interceptors.HttpsTokenInterceptorProvider$HttpsTokenInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.policy.interceptors.HttpsTokenInterceptorProvider$HttpsTokenInInterceptor:void assertHttps(java.util.Collection,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationOutInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor:org.apache.cxf.ws.security.policy.model.Binding getBinding(org.apache.cxf.ws.policy.AssertionInfoMap)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor:void recalcEffectivePolicy(org.apache.cxf.binding.soap.SoapMessage,java.lang.String,org.apache.neethi.Policy)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor:void unmapSecurityProps(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.policy.interceptors.IssuedTokenInterceptorProvider$IssuedTokenOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.policy.interceptors.IssuedTokenInterceptorProvider$IssuedTokenOutInterceptor:org.apache.cxf.ws.security.policy.model.Trust10 getTrust10(org.apache.cxf.ws.policy.AssertionInfoMap)",
            "org.apache.cxf.ws.security.policy.interceptors.IssuedTokenInterceptorProvider$IssuedTokenOutInterceptor:org.apache.cxf.ws.security.policy.model.Trust13 getTrust13(org.apache.cxf.ws.policy.AssertionInfoMap)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationTokenInterceptorProvider:org.apache.cxf.ws.security.policy.model.Trust10 getTrust10(org.apache.cxf.ws.policy.AssertionInfoMap)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationTokenInterceptorProvider:org.apache.cxf.ws.security.policy.model.Trust13 getTrust13(org.apache.cxf.ws.policy.AssertionInfoMap)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationTokenInterceptorProvider:org.apache.cxf.ws.policy.PolicyAssertion getAddressingPolicy(org.apache.cxf.ws.policy.AssertionInfoMap,boolean)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationTokenInterceptorProvider:void mapSecurityProps(org.apache.cxf.message.Message,java.util.Map)",
            "org.apache.cxf.ws.security.policy.interceptors.HttpsTokenInterceptorProvider$HttpsTokenOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.policy.interceptors.HttpsTokenInterceptorProvider$HttpsTokenOutInterceptor:void assertHttps(java.util.Collection,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.policy.interceptors.IssuedTokenInterceptorProvider$IssuedTokenInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.trust.STSClient:void setPolicy(org.apache.neethi.Policy)",
            "org.apache.cxf.ws.security.trust.STSClient:org.apache.cxf.service.model.BindingOperationInfo findOperation(java.lang.String)",
            "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:org.apache.cxf.ws.security.tokenstore.SecurityToken getToken(java.lang.String)",
            "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:java.util.Collection getTokens(org.apache.cxf.ws.security.tokenstore.SecurityToken$State)",
            "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:void processTokenExpiry()",
            "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:void removeCancelledTokens()",
            "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:void removeExpiredTokens()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.TransportBindingHandler:void addUsernameTokens(org.apache.cxf.ws.security.policy.model.SupportingToken)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.TransportBindingHandler:void handleBinding()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.TransportBindingHandler:byte[] doX509TokenSignature(org.apache.cxf.ws.security.policy.model.Token,org.apache.cxf.ws.security.policy.model.SignedEncryptedParts,org.apache.cxf.ws.security.policy.model.TokenWrapper)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.TransportBindingHandler:byte[] doIssuedTokenSignature(org.apache.cxf.ws.security.policy.model.Token,org.apache.cxf.ws.security.policy.model.SignedEncryptedParts,org.apache.cxf.ws.security.policy.model.TokenWrapper,org.apache.cxf.ws.security.tokenstore.SecurityToken)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AsymmetricBindingHandler:void doSignBeforeEncrypt()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AsymmetricBindingHandler:void doEncryptBeforeSign()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AsymmetricBindingHandler:void assertUnusedTokens(org.apache.cxf.ws.security.policy.model.TokenWrapper)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void policyNotAsserted(org.apache.cxf.ws.policy.PolicyAssertion,java.lang.Exception)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void policyNotAsserted(org.apache.cxf.ws.policy.PolicyAssertion,java.lang.String)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void policyAsserted(org.apache.cxf.ws.policy.PolicyAssertion)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void policyAsserted(javax.xml.namespace.QName)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:java.util.Collection findAndAssertPolicy(javax.xml.namespace.QName)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:org.apache.ws.security.message.WSSecTimestamp createTimestamp()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:org.apache.ws.security.message.WSSecTimestamp handleLayout(org.apache.ws.security.message.WSSecTimestamp)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void assertSupportingTokens(java.util.Collection)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:java.util.Map handleSupportingTokens(java.util.Collection,boolean)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:java.util.Map handleSupportingTokens(org.apache.cxf.ws.security.policy.model.SupportingToken,boolean,java.util.Map)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void addSignatureParts(java.util.Map,java.util.List)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:org.apache.ws.security.message.WSSecUsernameToken addUsernameToken(org.apache.cxf.ws.security.policy.model.UsernameToken)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:java.util.Vector getEncryptedParts()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:java.util.Vector getSignedParts()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:java.util.Vector getPartsAndElements(boolean,boolean,java.util.List,java.util.List,java.util.Map)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:org.apache.cxf.ws.security.policy.model.Wss10 getWss10()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void doEndorsedSignatures(java.util.Map,boolean,boolean)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void handleEncryptedSignedHeaders(java.util.Vector,java.util.Vector)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.SymmetricBindingHandler:void doEncryptBeforeSign()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.SymmetricBindingHandler:void doSignBeforeEncrypt()",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JOutInterceptor$PolicyBasedWSS4JOutInterceptorInternal:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:void handleWSS11(org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:boolean assertPolicy(org.apache.cxf.ws.policy.AssertionInfoMap,javax.xml.namespace.QName)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:void assertPolicy(org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.ws.policy.PolicyAssertion)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:void notAssertPolicy(org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.ws.policy.PolicyAssertion,java.lang.String)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:java.lang.String checkAsymetricBinding(org.apache.cxf.ws.policy.AssertionInfoMap,java.lang.String,org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:java.lang.String checkSymetricBinding(org.apache.cxf.ws.policy.AssertionInfoMap,java.lang.String,org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:void assertTokens(org.apache.cxf.ws.policy.AssertionInfoMap,javax.xml.namespace.QName,java.util.Collection,org.apache.cxf.binding.soap.SoapMessage,javax.xml.soap.SOAPMessage,java.lang.String)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:void doResults(org.apache.cxf.binding.soap.SoapMessage,java.lang.String,javax.xml.soap.SOAPMessage,java.util.Vector)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:boolean assertSymetricBinding(org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.binding.soap.SoapMessage,javax.xml.soap.SOAPMessage,org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor$Protections,boolean)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:boolean assertAsymetricBinding(org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.binding.soap.SoapMessage,javax.xml.soap.SOAPMessage,org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor$Protections,boolean)",
            "org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor:void doResults(org.apache.cxf.binding.soap.SoapMessage,java.lang.String,javax.xml.soap.SOAPMessage,java.util.Vector)",
            "org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor:org.apache.ws.security.WSSecurityEngine createSecurityEngine(java.util.Map)",
            "org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor$TokenStoreCallbackHandler:void handle(javax.security.auth.callback.Callback[])",
            "org.apache.cxf.ws.rm.AbstractRMInterceptor:void assertReliability(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.Servant:void terminateSequence(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.AbstractSequence:boolean isAcknowledged(java.math.BigInteger)",
            "org.apache.cxf.ws.rm.DestinationSequence:void scheduleDeferredAcknowledgement(long)",
            "org.apache.cxf.ws.rm.policy.PolicyUtils:org.apache.cxf.ws.rm.policy.RMAssertion getRMAssertion(org.apache.cxf.ws.rm.policy.RMAssertion,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.Source:java.util.Collection getAllUnacknowledgedSequences()",
            "org.apache.cxf.ws.rm.RMInInterceptor:void processAcknowledgments(org.apache.cxf.ws.rm.Source,org.apache.cxf.ws.rm.RMProperties)",
            "org.apache.cxf.ws.rm.RMOutInterceptor:void addAcknowledgements(org.apache.cxf.ws.rm.Destination,org.apache.cxf.ws.rm.RMProperties,org.apache.cxf.ws.rm.Identifier,org.apache.cxf.ws.addressing.v200408.AttributedURI)",
            "org.apache.cxf.ws.rm.Destination:void ackRequested(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.RMManager:void shutdown()",
            "org.apache.cxf.ws.rm.RMManager:void recoverReliableEndpoint(org.apache.cxf.endpoint.Endpoint,org.apache.cxf.transport.Conduit)",
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl:void resend(org.apache.cxf.transport.Conduit,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.soap.RMSoapInterceptor:void encode(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.rm.RMProperties)",
            "org.apache.cxf.ws.rm.soap.RMSoapInterceptor:org.apache.cxf.ws.rm.RMProperties unmarshalRMProperties(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.rm.soap.RMSoapInterceptor:void discardRMHeaders(java.util.List)",
            "org.apache.cxf.ws.rm.RMEndpoint:void setPolicies()",
            "org.apache.cxf.ws.rm.RMEndpoint:java.lang.Object getUsingAddressing(java.util.List)",
            "org.apache.cxf.ws.rm.RMEndpoint:void shutdown()",
            "org.apache.cxf.ws.rm.persistence.jdbc.RMTxStore:void removeMessages(org.apache.cxf.ws.rm.Identifier,java.util.Collection,boolean)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void <init>(java.util.SortedSet)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void add(java.util.Collection,boolean)",
            "org.apache.cxf.workqueue.WorkQueueManagerImpl:void shutdown(boolean)",
            "org.apache.cxf.workqueue.WorkQueueManagerImpl:void run()",
            "org.apache.cxf.databinding.AbstractDataBinding:void setNamespaceMap(java.util.Map)",
            "org.apache.cxf.databinding.AbstractDataBinding:void checkNamespaceMap(java.util.Map)",
            "org.apache.cxf.databinding.stax.StaxDataBindingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.databinding.stax.StaxDataBindingFeature:void removeInterceptor(java.util.List,java.lang.String)",
            "org.apache.cxf.wsdl.JAXBExtensionHelper$1:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils$SchemaLSResourceResolver:org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.namespace.QName getServiceName(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:java.lang.String getPortName(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:void setPortName(org.apache.cxf.ws.addressing.EndpointReferenceType,java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.namespace.QName getInterfaceName(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:void setMetadata(org.apache.cxf.ws.addressing.EndpointReferenceType,java.util.List)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.wsdl.Definition getWSDLDefinition(org.apache.cxf.wsdl.WSDLManager,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.validation.Schema createSchema(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.wsdl.Port getPort(org.apache.cxf.wsdl.WSDLManager,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:org.apache.cxf.transport.MultiplexDestination getMatchingMultiplexDestination(javax.xml.namespace.QName,java.lang.String,org.apache.cxf.Bus)",
            "org.apache.cxf.io.CachedOutputStream:void flush()",
            "org.apache.cxf.io.CachedOutputStream:void lockOutputStream()",
            "org.apache.cxf.io.CachedOutputStream:void close()",
            "org.apache.cxf.service.model.BindingOperationInfo:void <init>(org.apache.cxf.service.model.BindingInfo,org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:int getMessagePartIndex(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePartByIndex(int)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePart(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePart(int)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperation(org.apache.cxf.message.Exchange,java.lang.String)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperationForWrapperElement(org.apache.cxf.message.Exchange,javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.SchemaInfo getSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.ServiceModelUtil:java.util.List getOperationInputPartNames(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.EndpointInfo findBestEndpointInfo(javax.xml.namespace.QName,java.util.List)",
            "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.BindingInfo getBinding(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.EndpointInfo getEndpoint(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.ServiceInfo:void initMessagesMap()",
            "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.SchemaInfo getSchema(java.lang.String)",
            "org.apache.cxf.service.model.MessageInfo:java.util.Map getMessagePartsMap()",
            "org.apache.cxf.service.model.MessageInfo:java.util.List getOrderedParts(java.util.List)",
            "org.apache.cxf.service.model.BindingInfo:org.apache.cxf.service.model.BindingOperationInfo buildOperation(javax.xml.namespace.QName,java.lang.String,java.lang.String)",
            "org.apache.cxf.service.model.BindingInfo:org.apache.cxf.service.model.BindingOperationInfo getOperation(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.ServiceImpl:org.apache.cxf.service.model.EndpointInfo getEndpointInfo(javax.xml.namespace.QName)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void fillInSchemaCrossreferences()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createEndpoints()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeServiceConfigurations()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromWSDL(java.lang.String)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromClass()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean hasWrappedMethods(org.apache.cxf.service.model.InterfaceInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void validateServiceModel()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.InterfaceInfo getInterfaceInfo()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeWSDLOperations()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void setFaultClassInfo(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.OperationInfo createOperation(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.InterfaceInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeWrappedSchema(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void checkForElement(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createBareMessage(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.OperationInfo,boolean)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isExistImport(org.apache.ws.commons.schema.XmlSchema,java.lang.String)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.ws.commons.schema.XmlSchemaElement getExistingSchemaElement(org.apache.ws.commons.schema.XmlSchema,javax.xml.namespace.QName)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createWrappedMessageSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.AbstractMessageContainer,org.apache.cxf.service.model.AbstractMessageContainer,org.apache.ws.commons.schema.XmlSchema,javax.xml.namespace.QName)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.SchemaInfo getOrCreateSchema(org.apache.cxf.service.model.ServiceInfo,java.lang.String,boolean)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createInputWrappedMessageParts(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,org.apache.cxf.service.model.MessageInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createOutputWrappedMessageParts(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,org.apache.cxf.service.model.MessageInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getEndpointName(boolean)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getServiceName()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getServiceNamespace()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getInterfaceName()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isValidMethod(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isHolder(java.lang.Class,java.lang.reflect.Type)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.reflect.Type getHolderType(java.lang.Class,java.lang.reflect.Type)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isWrapped(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isOutParam(java.lang.reflect.Method,int)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isInParam(java.lang.reflect.Method,int)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getInputMessageName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName createOutputMessageName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean hasOutMessage(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getFaultName(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.Class,java.lang.Class)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getAction(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isHeader(java.lang.reflect.Method,int)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getOperationName(org.apache.cxf.service.model.InterfaceInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isAsync(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getInPartName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getInParameterName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getOutParameterName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getOutPartName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.Class getResponseWrapper(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getResponseWrapperClassName(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.Class getRequestWrapper(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getRequestWrapperClassName(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isWrapperPartQualified(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isWrapperPartNillable(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:long getWrapperPartMaxOccurs(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:long getWrapperPartMinOccurs(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getWsdlURL()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isWrapped()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getStyle()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isRPC(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.DefaultServiceConfiguration:java.lang.Boolean isOperation(java.lang.reflect.Method)",
            "org.apache.cxf.service.ServiceModelVisitor:void walk()",
            "org.apache.cxf.service.ServiceModelVisitor:void visitOperation(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.binding.AbstractBindingFactory:void registerWithBindingManager()",
            "org.apache.cxf.binding.AbstractBindingFactory:org.apache.cxf.service.model.BindingInfo initializeBindingInfo(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding,org.apache.cxf.service.model.BindingInfo)",
            "org.apache.cxf.binding.AbstractBindingFactory:void copyExtensors(org.apache.cxf.service.model.AbstractPropertiesHolder,javax.wsdl.extensions.ElementExtensible,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:org.apache.cxf.service.model.BindingInfo createBindingInfo(org.apache.cxf.service.model.ServiceInfo,java.lang.String,java.lang.Object)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:void createSoapBinding(org.apache.cxf.binding.soap.model.SoapBindingInfo)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:void setupHeaders(org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.service.model.BindingMessageInfo,org.apache.cxf.service.model.BindingMessageInfo,org.apache.cxf.service.model.MessageInfo,org.apache.cxf.binding.soap.SoapBindingConfiguration)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:org.apache.cxf.binding.Binding createBinding(org.apache.cxf.service.model.BindingInfo)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:void addOutOfBandParts(org.apache.cxf.service.model.BindingOperationInfo,javax.wsdl.Message,org.apache.cxf.common.xmlschema.SchemaCollection,boolean,java.lang.String)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:void buildMessage(org.apache.cxf.service.model.MessageInfo,javax.wsdl.Message,org.apache.cxf.common.xmlschema.SchemaCollection,int,java.lang.String)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:org.apache.cxf.service.model.BindingInfo createBindingInfo(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding,java.lang.String)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:void initializeMessage(org.apache.cxf.binding.soap.model.SoapBindingInfo,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.service.model.BindingMessageInfo)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:java.util.List handleMimePart(javax.wsdl.extensions.mime.MIMEPart,java.util.List,org.apache.cxf.service.model.MessageInfo,org.apache.cxf.service.model.BindingMessageInfo,java.util.List,java.util.List)",
            "org.apache.cxf.binding.soap.interceptor.ReadHeadersInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.Soap12FaultOutInterceptor$Soap12FaultOutInterceptorInternal:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.RPCOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.soap.interceptor.SoapActionInInterceptor:void getAndSetOperation(org.apache.cxf.binding.soap.SoapMessage,java.lang.String)",
            "org.apache.cxf.binding.soap.interceptor.SoapHeaderOutFilterInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.RPCInInterceptor:org.apache.cxf.service.model.BindingOperationInfo getOperation(org.apache.cxf.message.Message,javax.xml.namespace.QName)",
            "org.apache.cxf.binding.soap.interceptor.RPCInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor:void writeSoapEnvelopeStart(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor:boolean handleHeaderPart(boolean,org.apache.cxf.binding.soap.SoapMessage,java.lang.String)",
            "org.apache.cxf.binding.soap.interceptor.MustUnderstandInterceptor:void initServiceSideInfo(java.util.Set,org.apache.cxf.binding.soap.SoapMessage,java.util.Set)",
            "org.apache.cxf.binding.soap.interceptor.MustUnderstandInterceptor:void buildMustUnderstandHeaders(java.util.Set,org.apache.cxf.binding.soap.SoapMessage,java.util.Set,java.util.Set)",
            "org.apache.cxf.binding.soap.interceptor.MustUnderstandInterceptor:void checkUnderstand(java.util.Set,java.util.Set,java.util.Set)",
            "org.apache.cxf.binding.soap.interceptor.Soap11FaultOutInterceptor$Soap11FaultOutInterceptorInternal:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.EndpointSelectionInterceptor:org.apache.cxf.endpoint.Endpoint selectEndpoint(org.apache.cxf.message.Message,java.util.Set)",
            "org.apache.cxf.binding.soap.interceptor.MustUnderstandInterceptor$UltimateReceiverMustUnderstandInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.SoapHeaderInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.soap.HeaderUtil:java.util.Set getHeaderQNames(org.apache.cxf.service.model.BindingMessageInfo)",
            "org.apache.cxf.binding.soap.SoapTransportFactory:org.apache.cxf.service.model.EndpointInfo createEndpointInfo(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.BindingInfo,javax.wsdl.Port)",
            "org.apache.cxf.binding.soap.SoapTransportFactory:void registerWithBindingManager()",
            "org.apache.cxf.binding.soap.SoapMessage:boolean hasHeader(javax.xml.namespace.QName)",
            "org.apache.cxf.binding.soap.SoapMessage:org.apache.cxf.headers.Header getHeader(javax.xml.namespace.QName)",
            "org.apache.cxf.binding.soap.saaj.SAAJInInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.saaj.SAAJOutInterceptor$SAAJOutEndingInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.model.SoapBindingInfo:org.apache.cxf.service.model.OperationInfo getOperationByAction(java.lang.String)",
            "org.apache.cxf.binding.xml.interceptor.XMLMessageInInterceptor:org.apache.cxf.service.model.BindingOperationInfo getBindingOperationInfo(boolean,javax.xml.namespace.QName,org.apache.cxf.service.model.BindingInfo,javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.binding.xml.XMLFormatValidator:boolean checkXMLBindingFormat()",
            "org.apache.cxf.binding.xml.XMLFormatValidator:boolean checkXMLFormat(org.apache.cxf.service.model.BindingInfo)",
            "org.apache.cxf.binding.xml.XMLFormatValidator:boolean findXMLFormatRootNode(java.util.Iterator,org.apache.cxf.service.model.BindingOperationInfo,java.lang.String)",
            "org.apache.cxf.binding.xml.XMLBindingFactory:org.apache.cxf.service.model.BindingInfo createBindingInfo(org.apache.cxf.service.model.ServiceInfo,java.lang.String,java.lang.Object)",
            "org.apache.cxf.clustering.AbstractStaticFailoverStrategy:java.util.List getAlternateEndpoints(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.tools.common.Tag:java.lang.String formatAttribute(org.apache.cxf.tools.common.Tag)",
            "org.apache.cxf.tools.common.Tag:java.lang.String formatTag(org.apache.cxf.tools.common.Tag,int)",
            "org.apache.cxf.tools.common.Tag:boolean equals(java.lang.Object)",
            "org.apache.cxf.tools.common.ClassUtils:void compile(org.apache.cxf.tools.common.ToolContext)",
            "org.apache.cxf.tools.common.ToolContext:void addParameters(java.util.Map)",
            "org.apache.cxf.tools.common.VelocityGenerator:void doWrite(java.lang.String,java.io.Writer)",
            "org.apache.cxf.tools.common.toolspec.ToolSpec:boolean isValidInputStream(java.lang.String)",
            "org.apache.cxf.tools.common.toolspec.ToolSpec:java.util.List getInstreamIds()",
            "org.apache.cxf.tools.common.toolspec.ToolSpec:java.util.List getOutstreamIds()",
            "org.apache.cxf.tools.common.toolspec.ToolSpec:java.lang.String getStreamRefName(java.lang.String)",
            "org.apache.cxf.tools.common.toolspec.parser.CommandDocument:java.lang.String[] getParameters(java.lang.String)",
            "org.apache.cxf.tools.common.toolspec.parser.CommandDocument:java.lang.String[] getParameterNames()",
            "org.apache.cxf.tools.common.toolspec.parser.Form:void <init>(org.w3c.dom.Element)",
            "org.apache.cxf.tools.common.toolspec.parser.Option:boolean accept(org.apache.cxf.tools.common.toolspec.parser.TokenInputStream,org.w3c.dom.Element,org.apache.cxf.tools.common.toolspec.parser.ErrorVisitor)",
            "org.apache.cxf.tools.common.toolspec.parser.OptionGroup:void <init>(org.w3c.dom.Element)",
            "org.apache.cxf.tools.common.toolspec.parser.OptionGroup:boolean accept(org.apache.cxf.tools.common.toolspec.parser.TokenInputStream,org.w3c.dom.Element,org.apache.cxf.tools.common.toolspec.parser.ErrorVisitor)",
            "org.apache.cxf.tools.common.toolspec.parser.OptionGroup:boolean isSatisfied(org.apache.cxf.tools.common.toolspec.parser.ErrorVisitor)",
            "org.apache.cxf.tools.common.toolspec.parser.ErrorVisitor:java.lang.String toString()",
            "org.apache.cxf.tools.common.toolspec.parser.CommandLineParser:org.apache.cxf.tools.common.toolspec.parser.CommandDocument parseArguments(java.lang.String[])",
            "org.apache.cxf.tools.common.ProcessorTestBase:boolean assertXmlEquals(java.io.File,java.io.File,java.util.List)",
            "org.apache.cxf.tools.common.ProcessorTestBase:void assertAttributesEquals(javax.xml.namespace.QName,java.util.Map,java.util.Map,java.util.Collection)",
            "org.apache.cxf.tools.common.ProcessorTestBase:void assertTagEquals(org.apache.cxf.tools.common.Tag,org.apache.cxf.tools.common.Tag,java.util.List,java.util.List)",
            "org.apache.cxf.tools.common.ProcessorTestBase:org.apache.cxf.tools.common.Tag getFromSource(org.apache.cxf.tools.common.Tag,org.apache.cxf.tools.common.Tag)",
            "org.apache.cxf.tools.common.model.JAnnotation:java.util.Set getImports()",
            "org.apache.cxf.tools.common.model.JAnnotation:org.apache.cxf.tools.common.model.JAnnotationElement getElementByName(java.lang.String)",
            "org.apache.cxf.tools.common.model.JavaMethod:java.lang.String getSignature()",
            "org.apache.cxf.tools.common.model.JavaMethod:void addAnnotation(java.lang.String,org.apache.cxf.tools.common.model.JAnnotation)",
            "org.apache.cxf.tools.common.model.JavaMethod:java.util.List getParameterList(boolean)",
            "org.apache.cxf.tools.common.model.JavaInterface:void addAnnotation(org.apache.cxf.tools.common.model.JAnnotation)",
            "org.apache.cxf.tools.common.model.JavaInterface:void addImports(java.util.Collection)",
            "org.apache.cxf.tools.common.model.JavaInterface:java.lang.String toString()",
            "org.apache.cxf.tools.common.model.JavaField:void addAnnotation(org.apache.cxf.tools.common.model.JAnnotation)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:boolean isSOAPBinding(javax.wsdl.Binding)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:java.lang.String getBindingStyle(javax.wsdl.Binding)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapOperation getSoapOperation(java.util.List)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:java.lang.String getSOAPOperationStyle(javax.wsdl.BindingOperation)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapBody getBindingInputSOAPBody(javax.wsdl.BindingOperation)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapBody getBindingOutputSOAPBody(javax.wsdl.BindingOperation)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapBody getSoapBody(java.util.List)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:java.util.List getSoapHeaders(java.util.List)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapHeader getBindingInputSOAPHeader(javax.wsdl.BindingOperation)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapHeader getBindingOutputSOAPHeader(javax.wsdl.BindingOperation)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapBinding getSoapBinding(java.util.List)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:java.util.List getBindingOperationSoapFaults(javax.wsdl.BindingOperation)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:boolean isMixedStyle(javax.wsdl.Binding)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:java.lang.String getCanonicalBindingStyle(javax.wsdl.Binding)",
            "org.apache.cxf.buslifecycle.CXFBusLifeCycleManager:void initComplete()",
            "org.apache.cxf.buslifecycle.CXFBusLifeCycleManager:void preShutdown()",
            "org.apache.cxf.buslifecycle.CXFBusLifeCycleManager:void postShutdown()",
            "org.apache.cxf.wsdl11.SchemaUtil:void getSchemas(javax.wsdl.Definition,org.apache.cxf.common.xmlschema.SchemaCollection,java.util.List)",
            "org.apache.cxf.wsdl11.SchemaUtil:void extractSchema(javax.wsdl.Definition,org.apache.cxf.common.xmlschema.SchemaCollection,java.util.List)",
            "org.apache.cxf.wsdl11.SchemaUtil:void parseImports(javax.wsdl.Definition,java.util.List)",
            "org.apache.cxf.wsdl11.SchemaUtil:void getSchemaList(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.SchemaUtil:void addSchema(java.lang.String,javax.wsdl.extensions.schema.Schema)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void parseWSDL(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:java.util.Collection getImports(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void parseImports(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void registerWSDLExtensibilityPlugins(javax.wsdl.extensions.ExtensionRegistry)",
            "org.apache.cxf.wsdl11.WSDLServiceUtils:org.apache.cxf.binding.BindingFactory getBindingFactory(javax.wsdl.Binding,org.apache.cxf.Bus,java.lang.StringBuffer)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:javax.wsdl.Definition build(java.util.Map)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addExtensibilityElements(javax.wsdl.extensions.ElementExtensible,java.util.List)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addExtensibilityAttributes(javax.wsdl.extensions.AttributeExtensible,java.util.Map)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildTypes(java.util.Collection,java.util.Map,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBinding(java.util.Collection,java.util.Collection)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBindingOperation(javax.wsdl.Definition,javax.wsdl.Binding,java.util.Collection)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBindingFault(javax.wsdl.Definition,javax.wsdl.BindingOperation,java.util.Collection)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildService(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildPortTypeOperation(javax.wsdl.PortType,java.util.Collection,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildMessage(javax.wsdl.Message,org.apache.cxf.service.model.AbstractMessageContainer,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void registerInitialExtensions(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:org.apache.cxf.service.model.ServiceSchemaInfo getSchemasForDefinition(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void putSchemasForDefinition(javax.wsdl.Definition,org.apache.cxf.service.model.ServiceSchemaInfo)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void removeDefinition(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void copyExtensors(org.apache.cxf.service.model.AbstractPropertiesHolder,java.util.List)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildMockServices(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition,javax.wsdl.Service,javax.xml.namespace.QName,org.apache.cxf.service.model.DescriptionInfo)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void parseImports(javax.wsdl.Definition,java.util.List)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.EndpointInfo buildEndpoint(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.BindingInfo,javax.wsdl.Port)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.BindingInfo buildBinding(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildInterface(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.PortType)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildInterfaceOperation(org.apache.cxf.service.model.InterfaceInfo,javax.wsdl.Operation)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildMessage(org.apache.cxf.service.model.AbstractMessageContainer,javax.wsdl.Message)",
            "org.apache.cxf.wsdl11.WSDLServiceFactory:org.apache.cxf.service.Service create()",
            "org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor:void insertConstructorArg(org.springframework.beans.factory.config.ConstructorArgumentValues,java.lang.Object)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void activateViaNS(java.lang.String)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void activateAll()",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadFragment(java.io.InputStream)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void processExtension(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadAndRegister(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:java.lang.Object getExtension(java.lang.String,java.lang.Class)",
            "org.apache.cxf.bus.extension.Extension:java.lang.String toString()",
            "org.apache.cxf.bus.CXFBusImpl:void initializeFeatures()",
            "org.apache.cxf.attachment.LazyDataSource:void load()",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:boolean containsValue(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:javax.activation.DataHandler get(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:javax.activation.DataHandler remove(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:void putAll(java.util.Map)",
            "org.apache.cxf.attachment.AttachmentDeserializer:void cacheStreamedAttachments()",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$1$1$1:void <init>(org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$1$1)",
            "org.apache.cxf.attachment.AttachmentSerializer:void writeAttachments()",
            "org.apache.cxf.attachment.AttachmentUtil:java.util.Map getDHMap(java.util.Collection)",
            "org.apache.cxf.attachment.AttachmentUtil:boolean isTypeSupported(java.lang.String,java.util.List)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$3$1:javax.activation.DataHandler next()",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$2$1:java.lang.String next()",
            "org.apache.cxf.frontend.ClientFactoryBean:void applyFeatures()",
            "org.apache.cxf.frontend.SimpleMethodDispatcher:org.apache.cxf.service.model.BindingOperationInfo getBindingOperation(java.lang.reflect.Method,org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory:org.apache.cxf.service.model.BindingInfo createBindingInfo()",
            "org.apache.cxf.frontend.ServerFactoryBean:void initializeServiceFactory()",
            "org.apache.cxf.frontend.ServerFactoryBean:void applyFeatures()",
            "org.apache.cxf.aegis.DatabindingException:java.lang.String getActualMessage()",
            "org.apache.cxf.aegis.util.jdom.StaxSerializer:void writeDocument(org.jdom.Document,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.aegis.util.jdom.StaxSerializer:void writeElement(org.jdom.Element,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.aegis.util.jdom.StaxSerializer:boolean isDeclared(javax.xml.stream.XMLStreamWriter,java.lang.String,java.lang.String)",
            "org.apache.cxf.aegis.util.jdom.StaxBuilder:void buildTree(org.jdom.JDOMFactory,javax.xml.stream.XMLStreamReader,org.jdom.Document)",
            "org.apache.cxf.aegis.util.stax.JDOMStreamReader:void setupNamespaces(org.jdom.Element)",
            "org.apache.cxf.aegis.util.stax.JDOMNamespaceContext:java.lang.String rawGetPrefix(org.jdom.Element,java.lang.String)",
            "org.apache.cxf.aegis.util.stax.JDOMNamespaceContext:void rawGetPrefixes(org.jdom.Element,java.lang.String,java.util.List)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void initialize(org.apache.cxf.service.Service)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void initializeOperation(org.apache.cxf.service.Service,org.apache.cxf.aegis.type.TypeMapping,org.apache.cxf.service.model.OperationInfo,java.util.Set)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void initializeOperationTypes(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void initializeMessage(org.apache.cxf.service.Service,org.apache.cxf.aegis.type.TypeMapping,org.apache.cxf.service.model.AbstractMessageContainer,int,java.util.Set)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void initializeMessageTypes(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.AbstractMessageContainer,int)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void addDependencies(java.util.Set,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void createSchemas(org.apache.cxf.service.Service,java.util.Set)",
            "org.apache.cxf.aegis.AegisContext:void processRootTypes()",
            "org.apache.cxf.aegis.type.basic.XMLBeanTypeInfo:org.w3c.dom.Element getPropertyElement(java.lang.String)",
            "org.apache.cxf.aegis.type.basic.BeanType:void writeObjectInternal(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,boolean)",
            "org.apache.cxf.aegis.type.basic.BeanType:java.util.Set getDependencies()",
            "org.apache.cxf.aegis.type.basic.BeanType:void writeSchema(org.apache.ws.commons.schema.XmlSchema)",
            "org.apache.cxf.aegis.type.basic.BeanTypeInfo:boolean containsPropertyName(java.util.List,java.lang.String)",
            "org.apache.cxf.aegis.type.mtom.AttachmentUtil:org.apache.cxf.message.Attachment getAttachment(java.lang.String,java.util.Collection)",
            "org.apache.cxf.aegis.type.encoded.ArrayTypeInfo:void <init>(javax.xml.namespace.NamespaceContext,java.lang.String,java.lang.String)",
            "org.apache.cxf.aegis.type.encoded.ArrayTypeInfo:java.lang.String toString()",
            "org.apache.cxf.aegis.type.encoded.MarshalRegistry$1:java.lang.Object next()",
            "org.apache.cxf.aegis.type.encoded.SoapArrayType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.SoapArrayType:java.lang.Object makeArray(java.util.List,java.util.List,java.lang.Class)",
            "org.apache.cxf.aegis.type.encoded.TrailingBlocks:java.util.List writeBlocks(org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.SoapRefRegistry:void addInstance(java.lang.String,java.lang.Object)",
            "org.apache.cxf.aegis.type.XMLTypeCreator:org.w3c.dom.Element getBestMatch(org.w3c.dom.Element,java.lang.reflect.Method,java.util.List)",
            "org.apache.cxf.aegis.type.collection.MapType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.collection.CollectionType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.jaxws.JaxWsProxyFactoryBean:boolean needWrapperClassInterceptor(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.jaxws.JaxWsProxyFactoryBean:void buildHandlerChain(org.apache.cxf.jaxws.JaxWsClientProxy)",
            "org.apache.cxf.jaxws.handler.HandlerResolverImpl:java.util.List createHandlerChain(javax.xml.ws.handler.PortInfo)",
            "org.apache.cxf.jaxws.handler.HandlerChainInvoker:void <init>(java.util.List,boolean)",
            "org.apache.cxf.jaxws.handler.HandlerChainInvoker:boolean invokeHandleFault(java.util.List,javax.xml.ws.handler.MessageContext)",
            "org.apache.cxf.jaxws.handler.HandlerChainInvoker:boolean invokeHandleMessage(java.util.List,javax.xml.ws.handler.MessageContext)",
            "org.apache.cxf.jaxws.handler.HandlerChainBuilder:java.util.List buildHandlerChainFromConfiguration(java.util.List)",
            "org.apache.cxf.jaxws.handler.HandlerChainBuilder:java.util.List sortHandlers(java.util.List)",
            "org.apache.cxf.jaxws.handler.HandlerChainBuilder:void configureHandler(javax.xml.ws.handler.Handler,org.apache.cxf.jaxws.javaee.PortComponentHandlerType)",
            "org.apache.cxf.jaxws.handler.soap.SOAPMessageContextImpl:java.lang.Object[] getHeaders(javax.xml.namespace.QName,javax.xml.bind.JAXBContext,boolean)",
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerInterceptor:java.util.Set getUnderstoodHeaders()",
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerInterceptor:javax.xml.ws.handler.MessageContext createProtocolMessageContext(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerFaultInInterceptor:java.util.Set getUnderstoodHeaders()",
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerFaultOutInterceptor:java.util.Set getUnderstoodHeaders()",
            "org.apache.cxf.jaxws.support.JaxWsEndpointImpl:boolean hasUsingAddressing(java.util.List)",
            "org.apache.cxf.jaxws.support.JaxWsEndpointImpl:boolean addressingRequired(java.util.List)",
            "org.apache.cxf.jaxws.support.JaxWsEndpointImpl:javax.xml.ws.soap.AddressingFeature getAddressingFeature()",
            "org.apache.cxf.jaxws.support.JaxWsEndpointImpl:org.apache.cxf.ws.addressing.WSAddressingFeature getWSAddressingFeature()",
            "org.apache.cxf.jaxws.support.JaxWsEndpointImpl:javax.xml.ws.soap.MTOMFeature getMTOMFeature()",
            "org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean:void initializeWSDLOperationsForProvider()",
            "org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean:org.apache.cxf.service.model.FaultInfo getFaultInfo(org.apache.cxf.service.model.OperationInfo,java.lang.Class)",
            "org.apache.cxf.jaxws.support.JaxWsImplementorInfo:java.lang.String getWsdlLocation()",
            "org.apache.cxf.jaxws.support.JaxWsImplementorInfo:javax.xml.namespace.QName getInterfaceName()",
            "org.apache.cxf.jaxws.support.JaxWsImplementorInfo:java.lang.String getImplementorClassName()",
            "org.apache.cxf.jaxws.WrapperClassGenerator:java.util.Set generate()",
            "org.apache.cxf.jaxws.WrapperClassGenerator:void createWrapperClass(org.apache.cxf.service.model.MessagePartInfo,org.apache.cxf.service.model.MessageInfo,org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,boolean)",
            "org.apache.cxf.jaxws.WrapperClassGenerator:void addJAXBAnnotations(org.objectweb.asm.FieldVisitor,java.util.List)",
            "org.apache.cxf.jaxws.JaxWsClientProxy:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])",
            "org.apache.cxf.jaxws.ServiceImpl:void initializePorts()",
            "org.apache.cxf.jaxws.ServiceImpl:org.apache.cxf.jaxws.support.JaxWsClientEndpointImpl getJaxwsEndpoint(javax.xml.namespace.QName,org.apache.cxf.service.factory.AbstractServiceFactoryBean,javax.xml.ws.WebServiceFeature[])",
            "org.apache.cxf.jaxws.ServiceImpl:org.apache.cxf.service.factory.AbstractServiceFactoryBean createDispatchService(org.apache.cxf.databinding.DataBinding)",
            "org.apache.cxf.jaxws.ServiceImpl:java.lang.Object getPort(org.apache.cxf.ws.addressing.EndpointReferenceType,java.lang.Class,javax.xml.ws.WebServiceFeature[])",
            "org.apache.cxf.jaxws.ServiceImpl:javax.xml.ws.Dispatch createDispatch(javax.xml.namespace.QName,java.lang.Class,javax.xml.ws.Service$Mode,javax.xml.ws.WebServiceFeature[])",
            "org.apache.cxf.jaxws.ServiceImpl:javax.xml.ws.Dispatch createDispatch(javax.xml.namespace.QName,javax.xml.bind.JAXBContext,javax.xml.ws.Service$Mode,javax.xml.ws.WebServiceFeature[])",
            "org.apache.cxf.jaxws.spi.ProviderImpl:javax.xml.ws.wsaddressing.W3CEndpointReference createW3CEndpointReference(java.lang.String,javax.xml.namespace.QName,javax.xml.namespace.QName,java.util.List,java.lang.String,java.util.List)",
            "org.apache.cxf.jaxws.JaxWsServerFactoryBean:void buildHandlerChain()",
            "org.apache.cxf.jaxws.DispatchImpl:void addInvokeOperation(boolean)",
            "org.apache.cxf.jaxws.interceptors.MessageModeInInterceptor$MultiPartDataSource:void nextCurrent()",
            "org.apache.cxf.jaxws.interceptors.WebFaultOutInterceptor:org.apache.cxf.service.model.MessagePartInfo getFaultMessagePart(javax.xml.namespace.QName,org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.jaxws.interceptors.HolderOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.interceptors.SwAInInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.jaxws.interceptors.WrapperClassOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.interceptors.WrapperClassOutInterceptor:org.apache.cxf.databinding.WrapperHelper createWrapperHelper(org.apache.cxf.databinding.WrapperCapableDatabinding,org.apache.cxf.service.model.MessageInfo,org.apache.cxf.service.model.MessageInfo,java.lang.Class)",
            "org.apache.cxf.jaxws.interceptors.HolderInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.interceptors.WrapperClassInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.interceptors.WrapperClassInInterceptor:org.apache.cxf.databinding.WrapperHelper createWrapperHelper(org.apache.cxf.databinding.WrapperCapableDatabinding,org.apache.cxf.service.model.MessageInfo,org.apache.cxf.service.model.MessageInfo,java.lang.Class)",
            "org.apache.cxf.jaxws.interceptors.SwAOutInterceptor:void processAttachments(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.binding.soap.model.SoapBodyInfo)",
            "org.apache.cxf.jaxws.binding.http.HTTPBindingImpl:void validate()",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:void copyScoped(java.util.Map)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:void clear()",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:java.util.Set keySet()",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:java.util.Set entrySet()",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:void putAll(java.util.Map)",
            "org.apache.cxf.jaxws.AbstractJAXWSMethodInvoker:java.util.Map removeHandlerProperties(org.apache.cxf.jaxws.context.WrappedMessageContext)",
            "org.apache.cxf.jaxws.AbstractJAXWSMethodInvoker:void addHandlerProperties(org.apache.cxf.jaxws.context.WrappedMessageContext,java.util.Map)",
            "org.apache.cxf.jaxws.AbstractJAXWSMethodInvoker:void updateWebServiceContext(org.apache.cxf.message.Exchange,javax.xml.ws.handler.MessageContext)",
            "org.apache.cxf.xmlbeans.XmlBeansDataBinding:void initialize(org.apache.cxf.service.Service)"
        ]
    },
    "org.apache.cxf.aegis.type.basic.InterfaceInvocationHandler:java.lang.String proxyToString(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.basic.InterfaceInvocationHandler:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])"
        ]
    },
    "org.apache.cxf.transport.http.AbstractHTTPDestination:void setupMessage(org.apache.cxf.message.Message,javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void serviceRequest(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.cxf.transport.jms.JMSUtils:void populateIncomingContext(javax.jms.Message,org.apache.cxf.message.Message,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.jms.JMSDestination:void onMessage(javax.jms.Message)",
            "org.apache.cxf.transport.jms.JMSConduit:void onMessage(javax.jms.Message)"
        ]
    },
    "org.apache.cxf.helpers.XMLUtils:void writeTo(javax.xml.transform.Source,java.io.OutputStream,int,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.XMLUtils:void writeTo(javax.xml.transform.Source,java.io.OutputStream,int)"
        ]
    },
    "org.apache.cxf.helpers.XMLUtils:java.lang.String toString(javax.xml.transform.Source,java.util.Properties)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.XMLUtils:java.lang.String toString(javax.xml.transform.Source)"
        ]
    },
    "org.apache.cxf.helpers.XMLUtils:void generateXMLFile(org.w3c.dom.Element,java.io.Writer)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.helpers.XMLUtils:org.w3c.dom.Document parse(org.xml.sax.InputSource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.helpers.XMLUtils:org.w3c.dom.Document parse(java.io.File)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.helpers.XMLUtils:org.w3c.dom.Document parse(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.validation.Schema createSchema(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.aegis.AegisContext:org.w3c.dom.Document getSchemaDocument(java.lang.String)",
            "org.apache.cxf.jaxws.handler.AnnotationHandlerChainBuilder:java.util.List buildHandlerChainFromClass(java.lang.Class,java.util.List,javax.xml.namespace.QName,javax.xml.namespace.QName,java.lang.String)",
            "org.apache.cxf.xmlbeans.XmlBeansSchemaInitializer:org.apache.ws.commons.schema.XmlSchema getSchema(org.apache.xmlbeans.SchemaTypeSystem,java.lang.String)"
        ]
    },
    "org.apache.cxf.helpers.XMLUtils:org.w3c.dom.Document parse(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.XMLUtils:org.w3c.dom.Document parse(java.lang.String)"
        ]
    },
    "org.apache.cxf.helpers.XMLUtils:org.w3c.dom.Document newDocument()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.W3CDOMStreamWriter:void <init>()",
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.EndpointReferenceType convertToInternal(javax.xml.ws.EndpointReference)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildTypes(java.util.Collection,java.util.Map,javax.wsdl.Definition)",
            "org.apache.cxf.jaxws.handler.logical.LogicalHandlerFaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.handler.logical.LogicalHandlerOutInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.common.logging.AbstractDelegatingLogger:void doLog(java.util.logging.LogRecord)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void log(java.util.logging.LogRecord)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void log(java.util.logging.Level,java.lang.String)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void log(java.util.logging.Level,java.lang.String,java.lang.Object)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void log(java.util.logging.Level,java.lang.String,java.lang.Object[])",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void logp(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void logp(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.Object)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void logp(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.Object[])",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void logp(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void throwing(java.lang.String,java.lang.String,java.lang.Throwable)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void severe(java.lang.String)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void warning(java.lang.String)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void info(java.lang.String)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void config(java.lang.String)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void fine(java.lang.String)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void finer(java.lang.String)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void finest(java.lang.String)"
        ]
    },
    "org.apache.cxf.common.logging.AbstractDelegatingLogger:void doLog(java.util.logging.LogRecord,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void logrb(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void logrb(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Object)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void logrb(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Object[])",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void logrb(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)"
        ]
    },
    "org.apache.cxf.jaxb.WrapperHelperCompiler:void doCollection(org.objectweb.asm.MethodVisitor,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.WrapperHelperCompiler:boolean addCreateWrapperObject(java.lang.String,java.lang.Class)"
        ]
    },
    "org.apache.cxf.jaxb.JAXBUtils:java.lang.Class createNamespaceWrapperInternal(org.apache.cxf.common.util.ASMHelper,org.objectweb.asm.ClassWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.JAXBUtils:java.lang.Object createNamespaceWrapper(java.util.Map)"
        ]
    },
    "org.apache.cxf.jaxb.JAXBUtils:java.lang.Object createNamespaceWrapper(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.JAXBUtils:void setNamespaceWrapper(java.util.Map,javax.xml.bind.Marshaller)"
        ]
    },
    "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void mapElementToJaxbProperty(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder,javax.xml.namespace.QName,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.spring.HttpDestinationBeanDefinitionParser:void doParse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder)",
            "org.apache.cxf.ws.rm.spring.RMFeatureBeanDefinitionParser:void parseChildElements(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder)",
            "org.apache.cxf.ws.rm.spring.RMManagerBeanDefinitionParser:void doParse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder)"
        ]
    },
    "org.apache.cxf.transport.http.spring.HttpConduitBeanDefinitionParser:void doParse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.jms.spring.JMSDestinationBeanDefinitionParser:void doParse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.jms.spring.JMSConduitBeanDefinitionParser:void doParse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.rm.spring.RMFeatureBeanDefinitionParser:void parseChildElements(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void doParse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder)"
        ]
    },
    "org.apache.cxf.ws.rm.spring.RMManagerBeanDefinitionParser:void doParse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxb.WrapperHelperCompiler:org.apache.cxf.databinding.WrapperHelper compileWrapperHelper(java.lang.Class,java.lang.reflect.Method[],java.lang.reflect.Method[],java.lang.reflect.Method[],java.lang.reflect.Field[],java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.JAXBDataBinding:org.apache.cxf.databinding.WrapperHelper compileWrapperHelper(java.lang.Class,java.lang.reflect.Method[],java.lang.reflect.Method[],java.lang.reflect.Method[],java.lang.reflect.Field[],java.lang.Object)"
        ]
    },
    "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JOutInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JOutInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.ws.security.wss4j.WSS4JOutInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.security.wss4j.WSS4JOutInterceptor$WSS4JOutInterceptorInternal:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.wss4j.WSS4JOutInterceptor$WSS4JOutInterceptorInternal:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.binding.soap.interceptor.Soap12FaultInInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.soap.interceptor.Soap12FaultInInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.binding.soap.interceptor.Soap11FaultInInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.soap.interceptor.Soap11FaultInInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor$SoapOutEndingInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor$SoapOutEndingInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.binding.soap.saaj.SAAJOutInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JOutInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.wss4j.WSS4JOutInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.saaj.SAAJOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerFaultOutInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)"
        ]
    },
    "org.apache.cxf.interceptor.ServiceInvokerInterceptor:java.lang.Object access$000(org.apache.cxf.interceptor.ServiceInvokerInterceptor,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.ServiceInvokerInterceptor$1:void run()"
        ]
    },
    "org.apache.cxf.ws.rm.RetransmissionInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.ws.rm.RetransmissionInterceptor:void handleFault(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:void unwind(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.phase.PhaseInterceptorChain:void unwind(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxws.handler.logical.LogicalMessageImpl:void setPayload(java.lang.Object,javax.xml.bind.JAXBContext)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.endpoint.UpfrontConduitSelector:void prepare(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:void prepareConduitSelector(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.endpoint.UpfrontConduitSelector:org.apache.cxf.transport.Conduit selectConduit(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.message.ExchangeImpl:org.apache.cxf.transport.Conduit getConduit(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ClientImpl:org.apache.cxf.transport.Conduit getConduit()"
        ]
    },
    "org.apache.cxf.endpoint.DeferredConduitSelector:org.apache.cxf.transport.Conduit selectConduit(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.message.ExchangeImpl:org.apache.cxf.transport.Conduit getConduit(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ClientImpl:org.apache.cxf.transport.Conduit getConduit()",
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl$1:org.apache.cxf.transport.Conduit selectConduit(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.Proxy$2:org.apache.cxf.transport.Conduit selectConduit(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.clustering.FailoverTargetSelector:org.apache.cxf.transport.Conduit selectConduit(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.message.ExchangeImpl:org.apache.cxf.transport.Conduit getConduit(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ClientImpl:org.apache.cxf.transport.Conduit getConduit()"
        ]
    },
    "org.apache.cxf.binding.soap.SoapTransportFactory:org.apache.cxf.transport.Conduit getConduit(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.ws.addressing.EndpointReferenceType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.AbstractDestination:org.apache.cxf.transport.Conduit getBackChannel(org.apache.cxf.message.Message,org.apache.cxf.message.Message,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.endpoint.AbstractConduitSelector:org.apache.cxf.transport.Conduit getSelectedConduit(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.http.gzip.GZIPOutInterceptor$GZipThresholdOutputStream:void thresholdReached()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.io.AbstractThresholdOutputStream:void write(byte[],int,int)",
            "org.apache.cxf.io.AbstractThresholdOutputStream:void write(int)"
        ]
    },
    "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void finalizeConfig()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.JettyHTTPTransportFactory:org.apache.cxf.transport.http_jetty.JettyHTTPDestination createDestination(org.apache.cxf.service.model.EndpointInfo)"
        ]
    },
    "org.apache.cxf.ws.rm.Source:org.apache.cxf.ws.rm.SourceSequence getCurrent()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.rm.SourceSequence:java.math.BigInteger nextMessageNumber(org.apache.cxf.ws.rm.Identifier,java.math.BigInteger,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.SourceSequence:java.math.BigInteger nextMessageNumber()",
            "org.apache.cxf.ws.rm.RMOutInterceptor:void handle(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl:int countUnacknowledged(org.apache.cxf.ws.rm.SourceSequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.SourceSequence:void checkLastMessage(org.apache.cxf.ws.rm.Identifier,java.math.BigInteger)"
        ]
    },
    "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl:void stop(org.apache.cxf.ws.rm.SourceSequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.RMEndpoint:void shutdown()"
        ]
    },
    "org.apache.cxf.binding.soap.interceptor.Soap11FaultOutInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.soap.interceptor.Soap11FaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.binding.soap.interceptor.Soap12FaultOutInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.soap.interceptor.Soap12FaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxws.interceptors.SwAOutInterceptor:java.util.Collection setupAttachmentOutput(org.apache.cxf.binding.soap.SoapMessage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.interceptors.SwAOutInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.jaxws.interceptors.SwAOutInterceptor:void processAttachments(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.binding.soap.model.SoapBodyInfo)"
        ]
    },
    "org.apache.cxf.wsdl.JAXBExtensionHelper:void marshall(java.lang.Class,javax.xml.namespace.QName,javax.wsdl.extensions.ExtensibilityElement,java.io.PrintWriter,javax.wsdl.Definition,javax.wsdl.extensions.ExtensionRegistry)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.message.AbstractWrappedMessage:java.lang.Object getContextualProperty(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.message.AbstractWrappedMessage:java.lang.Object getContextualProperty(java.lang.String)",
            "org.apache.cxf.interceptor.StaxOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxOutInterceptor:javax.xml.stream.XMLOutputFactory getXMLOutputFactory(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AttachmentOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:void setSchemaInMessage(org.apache.cxf.service.Service,org.apache.cxf.message.Message,org.apache.cxf.databinding.DataReader)",
            "org.apache.cxf.interceptor.StaxInInterceptor:javax.xml.stream.XMLInputFactory getXMLInputFactory(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:void writeParts(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.message.MessageContentsList,java.util.List)",
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:boolean isBufferingEnabled(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:boolean shouldValidate(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:org.apache.cxf.databinding.DataWriter getDataWriter(org.apache.cxf.message.Message,org.apache.cxf.service.Service,java.lang.Class)",
            "org.apache.cxf.interceptor.FIStaxOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.DigestAuthSupplier:org.apache.cxf.configuration.security.AuthorizationPolicy getPolicy(org.apache.cxf.transport.http.HTTPConduit,org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.jms.JMSConduit:void sendExchange(org.apache.cxf.message.Exchange,java.lang.Object)",
            "org.apache.cxf.ws.policy.PolicyInInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.policy.PolicyOutInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor$SecureConversationCancelInterceptor:void doCancel(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.ws.security.policy.model.SecureConversationToken)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationOutInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationOutInterceptor:void renewToken(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.ws.security.tokenstore.SecurityToken,org.apache.cxf.ws.security.policy.model.SecureConversationToken)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor$STSInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor:void recalcEffectivePolicy(org.apache.cxf.binding.soap.SoapMessage,java.lang.String,org.apache.neethi.Policy)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor:void unmapSecurityProps(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.policy.interceptors.IssuedTokenInterceptorProvider:org.apache.cxf.ws.security.tokenstore.TokenStore getTokenStore(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.policy.interceptors.IssuedTokenInterceptorProvider:org.apache.cxf.ws.security.trust.STSClient getClient(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.policy.interceptors.IssuedTokenInterceptorProvider$IssuedTokenOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationTokenInterceptorProvider:org.apache.cxf.ws.security.tokenstore.TokenStore getTokenStore(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationTokenInterceptorProvider:java.lang.String setupClient(org.apache.cxf.ws.security.trust.STSClient,org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.ws.security.policy.model.SecureConversationToken,boolean)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationTokenInterceptorProvider:void mapSecurityProps(org.apache.cxf.message.Message,java.util.Map)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationTokenInterceptorProvider:org.apache.cxf.ws.security.trust.STSClient getClient(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:java.util.Map getCryptoCache()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:org.apache.cxf.ws.security.tokenstore.TokenStore getTokenStore()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:org.apache.cxf.ws.security.tokenstore.SecurityToken getSecurityToken()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:org.apache.ws.security.message.WSSecUsernameToken addUsernameToken(org.apache.cxf.ws.security.policy.model.UsernameToken)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:java.lang.String getPassword(java.lang.String,org.apache.cxf.ws.policy.PolicyAssertion,int)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:org.apache.ws.security.components.crypto.Crypto getCrypto(org.apache.cxf.ws.security.policy.model.TokenWrapper,java.lang.String,java.lang.String)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void setEncryptionUser(org.apache.ws.security.message.WSSecEncryptedKey,org.apache.cxf.ws.security.policy.model.TokenWrapper,boolean,org.apache.ws.security.components.crypto.Crypto)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:org.apache.ws.security.message.WSSecSignature getSignatureBuider(org.apache.cxf.ws.security.policy.model.TokenWrapper,org.apache.cxf.ws.security.policy.model.Token,boolean)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:java.util.Map getPropertiesCache(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:java.lang.String checkAsymetricBinding(org.apache.cxf.ws.policy.AssertionInfoMap,java.lang.String,org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:java.lang.String checkSymetricBinding(org.apache.cxf.ws.policy.AssertionInfoMap,java.lang.String,org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor:javax.security.auth.callback.CallbackHandler getCallback(org.apache.ws.security.handler.RequestData,int)",
            "org.apache.cxf.ws.security.wss4j.AbstractWSS4JInterceptor:java.lang.String getPassword(java.lang.Object)",
            "org.apache.cxf.ws.security.wss4j.AbstractWSS4JInterceptor:java.lang.Object getProperty(java.lang.Object,java.lang.String)",
            "org.apache.cxf.binding.soap.interceptor.Soap11FaultOutInterceptor$Soap11FaultOutInterceptorInternal:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.attachment.AttachmentDeserializer:void setStreamedAttachmentProperties(org.apache.cxf.io.CachedOutputStream)",
            "org.apache.cxf.jaxws.handler.logical.LogicalMessageImpl:void setPayload(javax.xml.transform.Source)",
            "org.apache.cxf.jaxws.interceptors.WrapperClassOutInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:boolean isBufferingEnabled(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:void writeParts(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.message.MessageContentsList,java.util.List)"
        ]
    },
    "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:boolean shouldValidate(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:void writeParts(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.message.MessageContentsList,java.util.List)",
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:void setSchemaOutMessage(org.apache.cxf.service.Service,org.apache.cxf.message.Message,org.apache.cxf.databinding.DataWriter)"
        ]
    },
    "org.apache.cxf.transport.http.DigestAuthSupplier:org.apache.cxf.configuration.security.AuthorizationPolicy getPolicy(org.apache.cxf.transport.http.HTTPConduit,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.DigestAuthSupplier:java.lang.String getPassword(org.apache.cxf.transport.http.HTTPConduit,org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.DigestAuthSupplier:java.lang.String getUsername(org.apache.cxf.transport.http.HTTPConduit,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.ws.security.policy.interceptors.IssuedTokenInterceptorProvider:org.apache.cxf.ws.security.trust.STSClient getClient(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.policy.interceptors.IssuedTokenInterceptorProvider$IssuedTokenOutInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.ws.security.policy.interceptors.SecureConversationTokenInterceptorProvider:org.apache.cxf.ws.security.trust.STSClient getClient(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor$SecureConversationCancelInterceptor:void doCancel(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.ws.security.policy.model.SecureConversationToken)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationOutInterceptor:void renewToken(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.ws.security.tokenstore.SecurityToken,org.apache.cxf.ws.security.policy.model.SecureConversationToken)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationOutInterceptor:org.apache.cxf.ws.security.tokenstore.SecurityToken issueToken(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.ws.security.policy.model.SecureConversationToken)"
        ]
    },
    "org.apache.cxf.ws.security.wss4j.AbstractWSS4JInterceptor:java.lang.String getPassword(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.attachment.AttachmentDeserializer:void setStreamedAttachmentProperties(org.apache.cxf.io.CachedOutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.AttachmentDeserializer:void cache(org.apache.cxf.attachment.DelegatingInputStream,boolean)"
        ]
    },
    "org.apache.cxf.ws.policy.PolicyEngineImpl:org.apache.cxf.ws.policy.EndpointPolicy getClientEndpointPolicy(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.transport.Conduit)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPClientPolicy getClient(org.apache.cxf.ws.policy.PolicyEngine,org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.transport.Conduit)",
            "org.apache.cxf.ws.policy.WSPolicyFeature:void initialize(org.apache.cxf.endpoint.Client,org.apache.cxf.Bus)",
            "org.apache.cxf.ws.policy.PolicyInInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.policy.EffectivePolicyImpl:org.apache.cxf.ws.policy.Assertor initialisePolicy(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.ws.policy.PolicyEngineImpl,boolean,org.apache.cxf.ws.policy.Assertor)",
            "org.apache.cxf.ws.policy.ClientPolicyInFaultInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.RMEndpoint:void setPolicies()"
        ]
    },
    "org.apache.cxf.ws.policy.PolicyEngineImpl:org.apache.cxf.ws.policy.EndpointPolicy getServerEndpointPolicy(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.transport.Destination)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPServerPolicy getServer(org.apache.cxf.ws.policy.PolicyEngine,org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.transport.Destination)",
            "org.apache.cxf.ws.policy.WSPolicyFeature:void initialize(org.apache.cxf.endpoint.Server,org.apache.cxf.Bus)",
            "org.apache.cxf.ws.policy.PolicyInInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.policy.EffectivePolicyImpl:org.apache.cxf.ws.policy.Assertor initialisePolicy(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.ws.policy.PolicyEngineImpl,boolean,org.apache.cxf.ws.policy.Assertor)",
            "org.apache.cxf.ws.policy.EffectivePolicyImpl:void initialisePolicy(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.service.model.BindingFaultInfo,org.apache.cxf.ws.policy.PolicyEngineImpl)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor:void recalcEffectivePolicy(org.apache.cxf.binding.soap.SoapMessage,java.lang.String,org.apache.neethi.Policy)",
            "org.apache.cxf.ws.rm.RMEndpoint:void setPolicies()"
        ]
    },
    "org.apache.cxf.service.model.UnwrappedOperationInfo:java.lang.Object getProperty(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.model.UnwrappedOperationInfo:java.lang.Object getProperty(java.lang.String,java.lang.Class)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildPortTypeOperation(javax.wsdl.PortType,java.util.Collection,javax.wsdl.Definition)",
            "org.apache.cxf.jaxws.binding.soap.JaxWsSoapBindingConfiguration:java.lang.String getStyle(org.apache.cxf.service.model.OperationInfo)"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.util.Map getJaxbAnnoMap(org.apache.cxf.service.model.MessagePartInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createWrappedMessageSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.AbstractMessageContainer,org.apache.cxf.service.model.AbstractMessageContainer,org.apache.ws.commons.schema.XmlSchema,javax.xml.namespace.QName)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createMessageParts(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)"
        ]
    },
    "org.apache.cxf.jaxws.WrapperClassGenerator:java.util.List getJaxbAnnos(org.apache.cxf.service.model.MessagePartInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.WrapperClassGenerator:void generateMessagePart(org.objectweb.asm.ClassWriter,org.apache.cxf.service.model.MessagePartInfo,java.lang.reflect.Method,java.lang.String)"
        ]
    },
    "org.apache.cxf.xmlbeans.DataReaderImpl:java.lang.Object read(javax.xml.stream.XMLStreamReader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.xmlbeans.DataReaderImpl:java.lang.Object read(java.lang.Object)"
        ]
    },
    "org.apache.cxf.xmlbeans.DataReaderImpl:java.lang.Object read(org.apache.cxf.service.model.MessagePartInfo,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.WrappedInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.BareInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.ClientFaultConverter:void processFaultDetail(org.apache.cxf.interceptor.Fault,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void getPara(org.apache.cxf.staxutils.DepthXMLStreamReader,org.apache.cxf.databinding.DataReader,org.apache.cxf.message.MessageContentsList,java.util.Iterator,org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.soap.interceptor.RPCInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.soap.interceptor.SoapHeaderInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.tools.common.ToolContext:java.lang.Object get(java.lang.String,java.lang.Class,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.tools.common.ToolContext:boolean getBooleanValue(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.tools.common.AbstractCXFToolContainer:boolean isVerboseOn()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.tools.common.ToolContext:javax.xml.namespace.QName getQName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.management.interceptor.AbstractMessageResponseTimeInterceptor:void endHandlingMessage(org.apache.cxf.message.Exchange)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.management.interceptor.ResponseTimeMessageOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.management.interceptor.ResponseTimeMessageOutInterceptor:void handleFault(org.apache.cxf.message.Message)",
            "org.apache.cxf.management.interceptor.ResponseTimeMessageInvokerInterceptor:void handleFault(org.apache.cxf.message.Message)",
            "org.apache.cxf.management.interceptor.ResponseTimeMessageInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.management.interceptor.ResponseTimeMessageInInterceptor:void handleFault(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.management.interceptor.AbstractMessageResponseTimeInterceptor:void setOneWayMessage(org.apache.cxf.message.Exchange)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.management.interceptor.ResponseTimeMessageOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.management.interceptor.ResponseTimeMessageInvokerInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.http.AbstractHTTPTransportFactory:void configure(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.JettyHTTPTransportFactory:org.apache.cxf.transport.http_jetty.JettyHTTPDestination createDestination(org.apache.cxf.service.model.EndpointInfo)"
        ]
    },
    "org.apache.cxf.transport.servlet.CXFNonSpringServlet:void loadBus(javax.servlet.ServletConfig)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.servlet.CXFServlet:void loadSpringBus(javax.servlet.ServletConfig)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.servlet.CXFServlet:void loadBus(javax.servlet.ServletConfig)"
        ]
    },
    "org.apache.cxf.transport.servlet.CXFServlet:void onApplicationEvent(org.springframework.context.ApplicationEvent)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine:void finalizeConfig()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser$SpringJettyHTTPServerEngine:void finalizeConfig()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void setTLSServerParametersForPort(int,org.apache.cxf.configuration.jsse.TLSServerParameters)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine createJettyHTTPServerEngine(int,java.lang.String)"
        ]
    },
    "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void finalizeConfig()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.JettyHTTPTransportFactory:org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory getJettyHTTPServerEngineFactory()"
        ]
    },
    "org.apache.cxf.transport.jms.JMSTransportFactory:org.apache.cxf.transport.Conduit getConduit(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.ws.addressing.EndpointReferenceType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.AbstractDestination:org.apache.cxf.transport.Conduit getBackChannel(org.apache.cxf.message.Message,org.apache.cxf.message.Message,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.transport.jms.JMSTransportFactory:org.apache.cxf.transport.Conduit getConduit(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.endpoint.AbstractConduitSelector:org.apache.cxf.transport.Conduit getSelectedConduit(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.jms.JMSTransportFactory:org.apache.cxf.transport.Destination getDestination(org.apache.cxf.service.model.EndpointInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:org.apache.cxf.transport.Destination getDestination(java.lang.String)",
            "org.apache.cxf.endpoint.ServerImpl:void initDestination(org.apache.cxf.transport.DestinationFactory)",
            "org.apache.cxf.binding.soap.SoapTransportFactory:org.apache.cxf.transport.Destination getDestination(org.apache.cxf.service.model.EndpointInfo)"
        ]
    },
    "org.apache.cxf.ws.policy.PolicyEngineImpl:void setEnabled(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.WSPolicyFeature:void initialize(org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.ws.rm.soap.RMSoapInterceptor:org.apache.cxf.ws.rm.RMManager getManager(org.apache.cxf.binding.soap.SoapMessage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.soap.RMSoapInterceptor:void updateServiceModelInfo(org.apache.cxf.binding.soap.SoapMessage)"
        ]
    },
    "org.apache.cxf.feature.AbstractFeature:void initialize(org.apache.cxf.endpoint.Server,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.jms.JMSConfigFeature:void initialize(org.apache.cxf.endpoint.Server,org.apache.cxf.Bus)",
            "org.apache.cxf.frontend.ServerFactoryBean:void applyFeatures()"
        ]
    },
    "org.apache.cxf.feature.AbstractFeature:void initialize(org.apache.cxf.endpoint.Client,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.jms.JMSConfigFeature:void initialize(org.apache.cxf.endpoint.Client,org.apache.cxf.Bus)",
            "org.apache.cxf.frontend.ClientFactoryBean:void applyFeatures()",
            "org.apache.cxf.jaxws.ServiceImpl:javax.xml.ws.Dispatch createDispatch(javax.xml.namespace.QName,java.lang.Class,javax.xml.ws.Service$Mode,javax.xml.ws.WebServiceFeature[])",
            "org.apache.cxf.jaxws.ServiceImpl:javax.xml.ws.Dispatch createDispatch(javax.xml.namespace.QName,javax.xml.bind.JAXBContext,javax.xml.ws.Service$Mode,javax.xml.ws.WebServiceFeature[])"
        ]
    },
    "org.apache.cxf.feature.AbstractFeature:void initialize(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.CXFBusImpl:void initializeFeatures()"
        ]
    },
    "org.apache.cxf.workqueue.WorkQueueManagerImpl:org.apache.cxf.workqueue.AutomaticWorkQueue createAutomaticWorkQueue()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.workqueue.WorkQueueManagerImpl:org.apache.cxf.workqueue.AutomaticWorkQueue getAutomaticWorkQueue()"
        ]
    },
    "org.apache.cxf.catalog.CatalogXmlSchemaURIResolver:void <init>(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromClass()",
            "org.apache.cxf.wsdl11.SchemaUtil:void extractSchema(javax.wsdl.Definition,org.apache.cxf.common.xmlschema.SchemaCollection,java.util.List)"
        ]
    },
    "org.apache.cxf.catalog.CatalogWSDLLocator:void <init>(java.lang.String,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.ResourceManagerWSDLLocator:void <init>(java.lang.String,org.apache.cxf.Bus)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition loadDefinition(java.lang.String)"
        ]
    },
    "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus finishCreatingBus(org.apache.cxf.bus.spring.BusApplicationContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus createBus(java.lang.String[],boolean)",
            "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus createBus(java.net.URL[],boolean)"
        ]
    },
    "org.apache.cxf.jaxws.ServiceImpl:void configureObject(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.ServiceImpl:org.apache.cxf.service.factory.AbstractServiceFactoryBean createDispatchService(org.apache.cxf.databinding.DataBinding)",
            "org.apache.cxf.jaxws.ServiceImpl:java.lang.Object createPort(javax.xml.namespace.QName,org.apache.cxf.ws.addressing.EndpointReferenceType,java.lang.Class,javax.xml.ws.WebServiceFeature[])",
            "org.apache.cxf.jaxws.ServiceImpl:javax.xml.ws.Dispatch createDispatch(javax.xml.namespace.QName,java.lang.Class,javax.xml.ws.Service$Mode,javax.xml.ws.WebServiceFeature[])",
            "org.apache.cxf.jaxws.ServiceImpl:javax.xml.ws.Dispatch createDispatch(javax.xml.namespace.QName,javax.xml.bind.JAXBContext,javax.xml.ws.Service$Mode,javax.xml.ws.WebServiceFeature[])"
        ]
    },
    "org.apache.cxf.aegis.type.basic.BeanType:void writeTypeReference(javax.xml.namespace.QName,org.apache.ws.commons.schema.XmlSchemaElement,org.apache.cxf.aegis.type.Type,org.apache.ws.commons.schema.XmlSchema)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.basic.BeanType:void writeSchema(org.apache.ws.commons.schema.XmlSchema)"
        ]
    },
    "org.apache.cxf.aegis.type.basic.InterfaceInvocationHandler:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.CglibProxyHelper$1:java.lang.Object intercept(java.lang.Object,java.lang.reflect.Method,java.lang.Object[],net.sf.cglib.proxy.MethodProxy)"
        ]
    },
    "org.apache.cxf.aegis.type.encoded.StructType:org.apache.cxf.aegis.type.Type getElementType(javax.xml.namespace.QName,org.apache.cxf.aegis.type.basic.BeanTypeInfo,org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.basic.BeanType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)"
        ]
    },
    "org.apache.cxf.aegis.type.encoded.StructType:org.apache.cxf.aegis.type.basic.BeanTypeInfo getBeanTypeInfoWithProperty(javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.basic.BeanType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)"
        ]
    },
    "org.apache.cxf.aegis.type.basic.BeanType:java.lang.Object readProperty(java.lang.Object,javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.basic.BeanType:void writeObjectInternal(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,boolean)"
        ]
    },
    "org.apache.cxf.aegis.type.TypeUtil:org.apache.cxf.aegis.type.Type getWriteType(org.apache.cxf.aegis.AegisContext,java.lang.Object,org.apache.cxf.aegis.type.Type)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.databinding.XMLStreamDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.aegis.databinding.ElementDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,org.w3c.dom.Element)",
            "org.apache.cxf.aegis.AegisXMLStreamDataWriter:void write(java.lang.Object,javax.xml.namespace.QName,boolean,javax.xml.stream.XMLStreamWriter,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.basic.BeanType:void writeObjectInternal(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,boolean)",
            "org.apache.cxf.aegis.type.basic.ArrayType:void writeValue(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type,java.lang.String,java.lang.String)",
            "org.apache.cxf.aegis.type.encoded.SoapArrayType:void writeValue(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.TypeUtil:org.apache.cxf.aegis.type.Type getWriteTypeStandalone(org.apache.cxf.aegis.AegisContext,java.lang.Object,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.collection.MapType:void writeEntry(org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.type.Type,java.util.Map$Entry)"
        ]
    },
    "org.apache.cxf.aegis.type.encoded.StructType:org.apache.cxf.aegis.type.basic.BeanType superBeanType(org.apache.cxf.aegis.type.Type)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.encoded.StructType:javax.xml.namespace.QName qualifyName(javax.xml.namespace.QName)"
        ]
    },
    "org.apache.cxf.aegis.type.AbstractTypeCreator:org.apache.cxf.aegis.type.Type createArrayType(org.apache.cxf.aegis.type.AbstractTypeCreator$TypeClassInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.AbstractTypeCreator:org.apache.cxf.aegis.type.Type createTypeForClass(org.apache.cxf.aegis.type.AbstractTypeCreator$TypeClassInfo)"
        ]
    },
    "org.apache.cxf.aegis.type.basic.ArrayType:void writeSchema(org.apache.ws.commons.schema.XmlSchema)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void createSchemas(org.apache.cxf.service.Service,java.util.Set)",
            "org.apache.cxf.aegis.type.encoded.SoapRefType:void writeSchema(org.apache.ws.commons.schema.XmlSchema)"
        ]
    },
    "org.apache.cxf.aegis.type.basic.ArrayType:java.util.Set getDependencies()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void addDependencies(java.util.Set,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.encoded.SoapRefType:java.util.Set getDependencies()"
        ]
    },
    "org.apache.cxf.aegis.type.encoded.SoapArrayType:java.util.Set getDependencies()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void addDependencies(java.util.Set,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.encoded.SoapRefType:java.util.Set getDependencies()"
        ]
    },
    "org.apache.cxf.aegis.type.encoded.SoapArrayType:javax.xml.namespace.QName getRootType()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.encoded.SoapArrayType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.SoapArrayType:javax.xml.namespace.QName getRootType()"
        ]
    },
    "org.apache.cxf.jaxws.support.JaxWsServiceConfiguration:javax.xml.namespace.QName getInPartName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getInPartName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)"
        ]
    },
    "org.apache.cxf.jaxws.support.JaxWsServiceConfiguration:javax.xml.namespace.QName getOutPartName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getOutPartName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)"
        ]
    },
    "org.apache.cxf.jaxws.support.JaxWsServiceConfiguration:int getPartIndex(java.lang.reflect.Method,int,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.support.JaxWsServiceConfiguration:javax.xml.namespace.QName getPartName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int,org.apache.cxf.service.model.MessageInfo,java.lang.String,boolean)",
            "org.apache.cxf.jaxws.support.JaxWsServiceConfiguration:javax.xml.namespace.QName getParameterName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int,int,java.lang.String,boolean)"
        ]
    },
    "org.apache.cxf.jaxws.context.WrappedMessageContext:java.lang.Object put(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.MapNamespaceContext:void addNamespace(java.lang.String,java.lang.String)",
            "org.apache.cxf.helpers.HttpHeaderHelper:java.lang.String mapCharset(java.lang.String)",
            "org.apache.cxf.helpers.HttpHeaderHelper:void <clinit>()",
            "org.apache.cxf.helpers.XMLUtils:javax.xml.transform.TransformerFactory getTransformerFactory()",
            "org.apache.cxf.helpers.XMLUtils:javax.xml.parsers.DocumentBuilderFactory getDocumentBuilderFactory()",
            "org.apache.cxf.common.xmlschema.FixedExtensionDeserializer:void deserialize(org.apache.ws.commons.schema.XmlSchemaObject,javax.xml.namespace.QName,org.w3c.dom.Node)",
            "org.apache.cxf.common.logging.Log4jLogger:void <clinit>()",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.common.util.ASMHelper:org.apache.cxf.common.util.ASMHelper$TypeHelperClassLoader getTypeHelperClassLoader(java.lang.Class)",
            "org.apache.cxf.common.util.ASMHelper:void <clinit>()",
            "org.apache.cxf.common.util.ASMHelper$TypeHelperClassLoader:java.lang.Class defineClass(java.lang.String,byte[])",
            "org.apache.cxf.common.util.CacheMap:void updateMainDataMap()",
            "org.apache.cxf.common.util.CacheMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.common.util.CacheMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.common.util.ParamReader:void readCode()",
            "org.apache.cxf.common.util.TwoStageMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.resource.URIResolver:void tryRemote(java.lang.String)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.util.List getBeanListForId(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void mapElementToJaxbProperty(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder,java.lang.String,java.lang.Class)",
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:java.lang.Object unmarshalFactoryString(java.lang.String,java.lang.Class)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void initWildcardDefinitionMap()",
            "org.apache.cxf.jaxb.JAXBUtils:void <clinit>()",
            "org.apache.cxf.jaxb.JAXBDataBinding:void initialize(org.apache.cxf.service.Service)",
            "org.apache.cxf.jaxb.JAXBDataBinding:org.apache.cxf.jaxb.JAXBDataBinding$CachedContextAndSchemas createJAXBContextAndSchemas(java.util.Set,java.lang.String)",
            "org.apache.cxf.jaxb.JAXBDataBinding:void addToObjectFactoryCache(java.lang.Package,java.lang.Class)",
            "org.apache.cxf.jaxb.JAXBDataBinding$1:void <init>(org.apache.cxf.jaxb.JAXBDataBinding,java.util.List)",
            "org.apache.cxf.management.jmx.export.runtime.ModelMBeanInfoSupporter:void addModelMBeanMethod(java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String,java.lang.String,javax.management.Descriptor)",
            "org.apache.cxf.management.jmx.export.runtime.ModelMBeanInfoSupporter:void addModelMBeanNotification(java.lang.String[],java.lang.String,java.lang.String,javax.management.Descriptor)",
            "org.apache.cxf.management.jmx.export.runtime.ModelMBeanInfoSupporter:void addModelMBeanAttribute(java.lang.String,java.lang.String,boolean,boolean,boolean,java.lang.String,javax.management.Descriptor)",
            "org.apache.cxf.management.jmx.export.runtime.ModelMBeanInfoSupporter:void addModelMBeanConstructor(java.lang.reflect.Constructor,java.lang.String,javax.management.Descriptor)",
            "org.apache.cxf.management.counters.CounterRepository:void increaseCounter(javax.management.ObjectName,org.apache.cxf.management.counters.MessageHandlingTimeRecorder)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startPrefixMapping(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:void addNs(java.lang.String,java.lang.String)",
            "org.apache.cxf.message.MessageImpl:void setContent(java.lang.Class,java.lang.Object)",
            "org.apache.cxf.headers.HeaderManagerImpl:void registerHeaderProcessor(org.apache.cxf.headers.HeaderProcessor)",
            "org.apache.cxf.interceptor.StaxOutInterceptor:javax.xml.stream.XMLOutputFactory getXMLOutputFactory(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxInInterceptor:javax.xml.stream.XMLInputFactory getXMLInputFactory(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.FIStaxOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.ConduitInitiatorManagerImpl:void registerConduitInitiator(java.lang.String,org.apache.cxf.transport.ConduitInitiator)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void writeResponse(java.lang.String,java.lang.String,org.apache.cxf.service.model.EndpointInfo,java.io.OutputStream)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updateDefinition(javax.wsdl.Definition,java.util.Map,java.util.Map,java.lang.String,org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updateSchemaImports(javax.wsdl.extensions.schema.Schema,java.util.Map,java.lang.String)",
            "org.apache.cxf.transport.http.Cookie:void handleSetCookie(java.util.Map,java.util.List)",
            "org.apache.cxf.transport.http.DigestAuthSupplier:java.lang.String getAuthorizationForRealm(org.apache.cxf.transport.http.HTTPConduit,java.net.URL,org.apache.cxf.message.Message,java.lang.String,java.lang.String)",
            "org.apache.cxf.transport.http.HTTPConduit:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:void setHeadersByAuthorizationPolicy(org.apache.cxf.message.Message,java.net.URL,java.util.Map)",
            "org.apache.cxf.transport.http.HTTPConduit:void setHeadersByClientPolicy(org.apache.cxf.message.Message,java.util.Map)",
            "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection authorizationRetransmit(java.net.HttpURLConnection,org.apache.cxf.message.Message,org.apache.cxf.io.CacheAndWriteOutputStream)",
            "org.apache.cxf.transport.http.HTTPConduit:void setBasicAuthHeader(java.lang.String,java.lang.String,java.util.Map)",
            "org.apache.cxf.transport.http.HTTPConduit:void setProxyBasicAuthHeader(java.lang.String,java.lang.String,java.util.Map)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void copyRequestHeaders(org.apache.cxf.message.Message,java.util.Map)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void setPolicies(java.util.Map)",
            "org.apache.cxf.transport.http.gzip.GZIPOutInterceptor:void addHeader(org.apache.cxf.message.Message,java.lang.String,java.lang.String)",
            "org.apache.cxf.transport.DestinationFactoryManagerImpl:void registerDestinationFactory(java.lang.String,org.apache.cxf.transport.DestinationFactory)",
            "org.apache.cxf.transport.servlet.ServletContextResourceResolver:java.lang.Object resolve(java.lang.String,java.lang.Class)",
            "org.apache.cxf.transport.servlet.ServletTransportFactory:org.apache.cxf.transport.Destination getDestination(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.servlet.AbstractCXFServlet:void init(javax.servlet.ServletConfig)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPTransportFactory:org.apache.cxf.transport.http_jetty.JettyHTTPDestination createDestination(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void setEnginesList(java.util.List)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void setTLSServerParametersForPort(int,org.apache.cxf.configuration.jsse.TLSServerParameters)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine createJettyHTTPServerEngine(int,java.lang.String)",
            "org.apache.cxf.transport.jms.JMSUtils:void addContentTypeToProtocolHeader(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.jms.JMSConduit:void sendExchange(org.apache.cxf.message.Exchange,java.lang.Object)",
            "org.apache.cxf.NSManager:void resolveConstants(java.lang.Class)",
            "org.apache.cxf.extension.RegistryImpl:void register(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.endpoint.ClientImpl:java.util.Map getRequestContext()",
            "org.apache.cxf.endpoint.ClientImpl:java.util.Map getResponseContext()",
            "org.apache.cxf.endpoint.ClientImpl:void setThreadLocalRequestContext(boolean)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map)",
            "org.apache.cxf.endpoint.ClientImpl$EchoContext:java.lang.Object put(java.lang.String,java.lang.Object)",
            "org.apache.cxf.ws.addressing.ContextUtils:java.lang.String getActionFromMessageAttributes(org.apache.cxf.service.model.MessageInfo)",
            "org.apache.cxf.ws.addressing.MAPAggregator:boolean validateIncomingMAPs(org.apache.cxf.ws.addressing.AddressingProperties,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void cacheExchange(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.addressing.AddressingProperties)",
            "org.apache.cxf.ws.policy.PolicyRegistryImpl:void register(java.lang.String,org.apache.neethi.Policy)",
            "org.apache.cxf.ws.security.policy.model.ContentEncryptedElements:void addDeclaredNamespaces(java.lang.String,java.lang.String)",
            "org.apache.cxf.ws.security.policy.model.SignedEncryptedElements:void addDeclaredNamespaces(java.lang.String,java.lang.String)",
            "org.apache.cxf.ws.security.policy.model.RequiredElements:void addDeclaredNamespaces(java.lang.String,java.lang.String)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationOutInterceptor:void renewToken(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.ws.security.tokenstore.SecurityToken,org.apache.cxf.ws.security.policy.model.SecureConversationToken)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationTokenInterceptorProvider:void mapSecurityProps(org.apache.cxf.message.Message,java.util.Map)",
            "org.apache.cxf.ws.security.trust.STSClient:org.apache.cxf.ws.security.tokenstore.SecurityToken requestSecurityToken(java.lang.String,java.lang.String,java.lang.String,org.apache.cxf.ws.security.tokenstore.SecurityToken)",
            "org.apache.cxf.ws.security.trust.STSClient:boolean validateSecurityToken(org.apache.cxf.ws.security.tokenstore.SecurityToken,java.lang.String)",
            "org.apache.cxf.ws.security.trust.STSClient:void cancelSecurityToken(org.apache.cxf.ws.security.tokenstore.SecurityToken)",
            "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:void add(org.apache.cxf.ws.security.tokenstore.SecurityToken)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:java.util.Map handleSupportingTokens(org.apache.cxf.ws.security.policy.model.SupportingToken,boolean,java.util.Map)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:org.apache.ws.security.components.crypto.Crypto getCrypto(org.apache.cxf.ws.security.policy.model.TokenWrapper,java.lang.String,java.lang.String)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:java.util.Properties getProps(java.lang.Object,org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.wss4j.AbstractWSS4JInterceptor:void setProperty(java.lang.String,java.lang.String)",
            "org.apache.cxf.ws.security.wss4j.AbstractWSS4JInterceptor:org.apache.ws.security.components.crypto.Crypto loadSignatureCrypto(org.apache.ws.security.handler.RequestData)",
            "org.apache.cxf.ws.security.wss4j.AbstractWSS4JInterceptor:org.apache.ws.security.components.crypto.Crypto loadDecryptionCrypto(org.apache.ws.security.handler.RequestData)",
            "org.apache.cxf.ws.security.wss4j.AbstractWSS4JInterceptor:org.apache.ws.security.components.crypto.Crypto loadEncryptionCrypto(org.apache.ws.security.handler.RequestData)",
            "org.apache.cxf.ws.rm.Source:void addSequence(org.apache.cxf.ws.rm.SourceSequence,boolean)",
            "org.apache.cxf.ws.rm.Source:void setCurrent(org.apache.cxf.ws.rm.Identifier,org.apache.cxf.ws.rm.SourceSequence)",
            "org.apache.cxf.ws.rm.Destination:void addSequence(org.apache.cxf.ws.rm.DestinationSequence,boolean)",
            "org.apache.cxf.ws.rm.RMManager:org.apache.cxf.ws.rm.RMEndpoint getReliableEndpoint(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.RMManager:void recoverReliableEndpoint(org.apache.cxf.endpoint.Endpoint,org.apache.cxf.transport.Conduit)",
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl:org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl$ResendCandidate cacheUnacknowledged(org.apache.cxf.message.Message)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void <init>(java.util.SortedSet)",
            "org.apache.cxf.workqueue.WorkQueueManagerImpl:void addNamedWorkQueue(java.lang.String,org.apache.cxf.workqueue.AutomaticWorkQueue)",
            "org.apache.cxf.databinding.AbstractDataBinding:void <init>()",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void <clinit>()",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.bind.JAXBElement getServiceNameType(javax.xml.namespace.QName,java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:void setInterfaceName(org.apache.cxf.ws.addressing.EndpointReferenceType,javax.xml.namespace.QName)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:void setWSDLLocation(org.apache.cxf.ws.addressing.EndpointReferenceType,java.lang.String[])",
            "org.apache.cxf.service.model.BindingOperationInfo:void <init>(org.apache.cxf.service.model.BindingInfo,org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:void addMessagePart(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:void setProperty(java.lang.String,java.lang.Object)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:void addExtensionAttribute(javax.xml.namespace.QName,java.lang.Object)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperationForWrapperElement(org.apache.cxf.message.Exchange,javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.service.model.InterfaceInfo:void addOperation(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.ServiceInfo:void initMessagesMap()",
            "org.apache.cxf.service.model.BindingInfo:void addOperation(org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.service.model.OperationInfo:void addFault(org.apache.cxf.service.model.FaultInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createEndpoints()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isWrapped(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isRPC(java.lang.reflect.Method)",
            "org.apache.cxf.binding.BindingFactoryManagerImpl:void registerBindingFactory(java.lang.String,org.apache.cxf.binding.BindingFactory)",
            "org.apache.cxf.binding.soap.interceptor.SoapPreProtocolOutInterceptor:void setSoapAction(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.SoapVersionFactory:void register(org.apache.cxf.binding.soap.SoapVersion)",
            "org.apache.cxf.clustering.FailoverTargetSelector:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.clustering.FailoverTargetSelector:void overrideAddressProperty(java.util.Map)",
            "org.apache.cxf.tools.common.ToolContext:void put(java.lang.String,java.lang.Object)",
            "org.apache.cxf.tools.common.ToolContext:void addNamespacePackageMap(java.lang.String,java.lang.String)",
            "org.apache.cxf.tools.common.ToolContext:void addExcludeNamespacePackageMap(java.lang.String,java.lang.String)",
            "org.apache.cxf.tools.common.VelocityGenerator:void setCommonAttributes()",
            "org.apache.cxf.tools.common.VelocityGenerator:void setAttributes(java.lang.String,java.lang.Object)",
            "org.apache.cxf.tools.common.model.JavaModel:void addInterface(java.lang.String,org.apache.cxf.tools.common.model.JavaInterface)",
            "org.apache.cxf.tools.common.model.JavaModel:void addExceptionClass(java.lang.String,org.apache.cxf.tools.common.model.JavaExceptionClass)",
            "org.apache.cxf.tools.common.model.JavaModel:void addServiceClass(java.lang.String,org.apache.cxf.tools.common.model.JavaServiceClass)",
            "org.apache.cxf.tools.common.model.JavaType:void <clinit>()",
            "org.apache.cxf.tools.common.model.JavaMethod:void addAnnotation(java.lang.String,org.apache.cxf.tools.common.model.JAnnotation)",
            "org.apache.cxf.tools.common.model.JavaMethod:void <clinit>()",
            "org.apache.cxf.tools.common.model.JavaParameter:void addAnnotation(java.lang.String,org.apache.cxf.tools.common.model.JAnnotation)",
            "org.apache.cxf.tools.util.ToolsStaxUtils:java.util.List getTags(java.io.File)",
            "org.apache.cxf.tools.util.ToolsStaxUtils:org.apache.cxf.tools.common.Tag getTagTree(java.io.InputStream,java.util.List)",
            "org.apache.cxf.tools.util.BuiltInTypesJavaMappingUtil:void <clinit>()",
            "org.apache.cxf.tools.util.SOAPBindingUtil:void <clinit>()",
            "org.apache.cxf.tools.util.PropertyUtil:void load(java.io.InputStream,java.lang.String)",
            "org.apache.cxf.tools.util.ClassCollector:void addSeiClassName(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.tools.util.ClassCollector:void addTypesClassName(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.tools.util.ClassCollector:void addServerClassName(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.tools.util.ClassCollector:void addImplClassName(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.tools.util.ClassCollector:void addClientClassName(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.tools.util.ClassCollector:void addServiceClassName(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.tools.util.ClassCollector:void addExceptionClassName(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.catalog.CatalogXmlSchemaURIResolver:org.xml.sax.InputSource resolveEntity(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.wsdl11.SchemaUtil:void addSchema(java.lang.String,javax.wsdl.extensions.schema.Schema)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void parseWSDL(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void registerWSDLExtensibilityPlugins(javax.wsdl.extensions.ExtensionRegistry)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildTypes(java.util.Collection,java.util.Map,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addNamespace(java.lang.String,java.lang.String,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(java.net.URL)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(org.w3c.dom.Element)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void addDefinition(java.lang.Object,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition loadDefinition(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void putSchemasForDefinition(javax.wsdl.Definition,org.apache.cxf.service.model.ServiceSchemaInfo)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void processExtension(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadAndRegister(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void <init>(java.util.Map,java.util.Map)",
            "org.apache.cxf.bus.CXFBusImpl:void setExtension(java.lang.Object,java.lang.Class)",
            "org.apache.cxf.attachment.AttachmentImpl:void setHeader(java.lang.String,java.lang.String)",
            "org.apache.cxf.attachment.AttachmentUtil:java.util.Map getDHMap(java.util.Collection)",
            "org.apache.cxf.frontend.ClientProxyFactoryBean:java.lang.Object create()",
            "org.apache.cxf.frontend.SimpleMethodDispatcher:void bind(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method[])",
            "org.apache.cxf.frontend.SimpleMethodDispatcher:org.apache.cxf.service.model.BindingOperationInfo getBindingOperation(java.lang.reflect.Method,org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory:org.apache.cxf.endpoint.Endpoint createEndpoint()",
            "org.apache.cxf.aegis.Context:void setProperty(java.lang.Object)",
            "org.apache.cxf.aegis.util.jdom.StaxBuilder:void <clinit>()",
            "org.apache.cxf.aegis.util.stax.JDOMStreamReader:void declare(org.jdom.Namespace)",
            "org.apache.cxf.aegis.databinding.XMLStreamDataWriter:void setProperty(java.lang.String,java.lang.Object)",
            "org.apache.cxf.aegis.databinding.ElementDataWriter:void setProperty(java.lang.String,java.lang.Object)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void initializeMessage(org.apache.cxf.service.Service,org.apache.cxf.aegis.type.TypeMapping,org.apache.cxf.service.model.AbstractMessageContainer,int,java.util.Set)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:org.apache.cxf.aegis.type.Type getParameterType(org.apache.cxf.service.Service,org.apache.cxf.aegis.type.TypeMapping,org.apache.cxf.service.model.MessagePartInfo,int)",
            "org.apache.cxf.aegis.type.basic.XMLBeanTypeInfo:org.apache.cxf.aegis.type.basic.BeanTypePropertyInfo ensurePropertyInfo(javax.xml.namespace.QName)",
            "org.apache.cxf.aegis.type.basic.InterfaceInvocationHandler:void writeProperty(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.aegis.type.basic.BeanTypeInfo:void mapType(javax.xml.namespace.QName,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.basic.BeanTypeInfo:void mapAttribute(java.lang.String,javax.xml.namespace.QName)",
            "org.apache.cxf.aegis.type.basic.BeanTypeInfo:void mapElement(java.lang.String,javax.xml.namespace.QName)",
            "org.apache.cxf.aegis.type.basic.BeanTypeInfo:void mapTypeName(javax.xml.namespace.QName,javax.xml.namespace.QName)",
            "org.apache.cxf.aegis.type.encoded.MarshalRegistry:java.lang.String getInstanceId(java.lang.Object)",
            "org.apache.cxf.aegis.type.XMLTypeCreator:org.w3c.dom.Document getDocument(java.lang.Class)",
            "org.apache.cxf.aegis.type.DefaultTypeMapping:void register(org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.collection.MapType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.jaxws.handler.HandlerResolverImpl:java.util.List getHandlerChain(javax.xml.ws.handler.PortInfo)",
            "org.apache.cxf.jaxws.handler.HandlerChainInvoker:void setMessageOutboundProperty(javax.xml.ws.handler.MessageContext)",
            "org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean:void initSchemaLocations()",
            "org.apache.cxf.jaxws.support.JaxWsServiceConfiguration:javax.jws.WebParam getWebParam(java.lang.reflect.Method,int)",
            "org.apache.cxf.jaxws.support.JaxWsServiceConfiguration:java.lang.Class getResponseWrapper(java.lang.reflect.Method)",
            "org.apache.cxf.jaxws.support.JaxWsServiceConfiguration:java.lang.Class getRequestWrapper(java.lang.reflect.Method)",
            "org.apache.cxf.jaxws.JaxWsClientProxy:void setupEndpointAddressContext(org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.jaxws.JaxWsClientProxy:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])",
            "org.apache.cxf.jaxws.ServiceImpl:void addPort(javax.xml.namespace.QName,java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxws.DispatchImpl:void setupEndpointAddressContext(org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.jaxws.DispatchImpl:java.lang.Object invoke(java.lang.Object,boolean)",
            "org.apache.cxf.jaxws.interceptors.SwAOutInterceptor:boolean callSWARefMethod(javax.xml.bind.JAXBContext)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:void <init>(java.util.Map,org.apache.cxf.message.Exchange,javax.xml.ws.handler.MessageContext$Scope)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:void copyScoped(java.util.Map)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:java.lang.Object createAttachments(org.apache.cxf.message.Message,java.lang.String)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:java.lang.Object put(java.lang.String,java.lang.Object,javax.xml.ws.handler.MessageContext$Scope)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:void setScope(java.lang.String,javax.xml.ws.handler.MessageContext$Scope)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:void <clinit>()",
            "org.apache.cxf.xmlbeans.XmlBeansSchemaInitializer:org.apache.ws.commons.schema.XmlSchema getSchema(org.apache.xmlbeans.SchemaTypeSystem,java.lang.String)",
            "org.apache.cxf.xmlbeans.XmlBeansSchemaInitializer:void <clinit>()",
            "org.apache.cxf.xmlbeans.tools.XMLBeansSchemaTypeUtils:void <clinit>()",
            "org.apache.cxf.xmlbeans.tools.XMLBeansToolingDataBinding:void <clinit>()"
        ]
    },
    "org.apache.cxf.common.logging.Log4jLogger:java.util.logging.Level fromL4J(org.apache.log4j.Level)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.logging.Log4jLogger:java.util.logging.Level getLevel()",
            "org.apache.cxf.common.logging.Log4jLogger:java.util.logging.Level access$000(org.apache.cxf.common.logging.Log4jLogger,org.apache.log4j.Level)"
        ]
    },
    "org.apache.cxf.common.logging.Log4jLogger:void access$100(java.util.logging.LogRecord,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.logging.Log4jLogger$HandlerWrapper:void append(org.apache.log4j.spi.LoggingEvent)"
        ]
    },
    "org.apache.cxf.common.logging.Log4jLogger:java.util.Map access$200()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.logging.Log4jLogger$HandlerWrapper:org.apache.log4j.Priority getThreshold()"
        ]
    },
    "org.apache.cxf.common.util.ASMHelper:org.objectweb.asm.ClassWriter createClassWriter()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.JAXBUtils:java.lang.Object createNamespaceWrapper(java.util.Map)",
            "org.apache.cxf.jaxb.WrapperHelperCompiler:void <init>(java.lang.Class,java.lang.reflect.Method[],java.lang.reflect.Method[],java.lang.reflect.Method[],java.lang.reflect.Field[],java.lang.Object)",
            "org.apache.cxf.jaxws.WrapperClassGenerator:java.util.Set generate()",
            "org.apache.cxf.jaxws.WrapperClassGenerator:void createWrapperClass(org.apache.cxf.service.model.MessagePartInfo,org.apache.cxf.service.model.MessageInfo,org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,boolean)",
            "org.apache.cxf.jaxws.WrapperClassGenerator:void generatePackageInfo(java.lang.String,java.lang.String,java.lang.Class)"
        ]
    },
    "org.apache.cxf.jaxws.WrapperClassGenerator:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean:java.util.Set generatedWrapperBeanClass()",
            "org.apache.cxf.jaxws.WrapperClassGenerator:java.util.Set generate()",
            "org.apache.cxf.jaxws.WrapperClassGenerator:void createWrapperClass(org.apache.cxf.service.model.MessagePartInfo,org.apache.cxf.service.model.MessageInfo,org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,boolean)",
            "org.apache.cxf.jaxws.WrapperClassGenerator:void generatePackageInfo(java.lang.String,java.lang.String,java.lang.Class)",
            "org.apache.cxf.jaxws.WrapperClassGenerator:void generateMessagePart(org.objectweb.asm.ClassWriter,org.apache.cxf.service.model.MessagePartInfo,java.lang.reflect.Method,java.lang.String)",
            "org.apache.cxf.jaxws.WrapperClassGenerator:void addJAXBAnnotations(org.objectweb.asm.FieldVisitor,java.util.List)",
            "org.apache.cxf.jaxws.WrapperClassGenerator:void <clinit>()"
        ]
    },
    "org.apache.cxf.jaxb.JAXBUtils:java.lang.String namespaceURIToPackage(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.JAXBDataBinding:boolean addJaxbObjectFactory(javax.xml.bind.JAXBException)",
            "org.apache.cxf.ws.policy.builder.jaxb.JaxbAssertionBuilder:void <init>(javax.xml.namespace.QName)"
        ]
    },
    "org.apache.cxf.jaxb.JAXBUtils:java.lang.String nameSpaceURIToPackage(java.net.URI)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.JAXBUtils:java.lang.String namespaceURIToPackage(java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxb.JAXBUtils:java.lang.String normalizePackageNamePart(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.JAXBUtils:java.lang.String nameSpaceURIToPackage(java.net.URI)",
            "org.apache.cxf.jaxb.JAXBUtils:java.lang.String nameToIdentifier(java.lang.String,org.apache.cxf.jaxb.JAXBUtils$IdentifierType)"
        ]
    },
    "org.apache.cxf.jaxb.JAXBUtils:void splitWord(java.util.List,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.JAXBUtils:java.lang.String nameToIdentifier(java.lang.String,org.apache.cxf.jaxb.JAXBUtils$IdentifierType)"
        ]
    },
    "org.apache.cxf.jaxb.JAXBUtils:void setNamespaceWrapper(java.util.Map,javax.xml.bind.Marshaller)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.io.DataWriterImpl:javax.xml.bind.Marshaller createMarshaller(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo)"
        ]
    },
    "org.apache.cxf.jaxb.JAXBDataBinding:boolean addJaxbObjectFactory(javax.xml.bind.JAXBException)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.JAXBDataBinding:void initialize(org.apache.cxf.service.Service)"
        ]
    },
    "org.apache.cxf.jaxb.JAXBContextInitializer:void addClass(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.JAXBContextInitializer:void begin(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.jaxb.JAXBContextInitializer:void addType(java.lang.reflect.Type,boolean)",
            "org.apache.cxf.jaxb.JAXBContextInitializer:void addClass(java.lang.Class)"
        ]
    },
    "org.apache.cxf.jaxb.JAXBDataBinding:java.util.List generateJaxbSchemas()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.JAXBDataBinding:void initialize(org.apache.cxf.service.Service)"
        ]
    },
    "org.apache.cxf.management.jmx.export.runtime.ModelMBeanAssembler:void addAttributeOperation(java.lang.reflect.Method)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.management.jmx.export.runtime.ModelMBeanAssembler:javax.management.modelmbean.ModelMBeanInfo getModelMbeanInfo(java.lang.Class)"
        ]
    },
    "org.apache.cxf.staxutils.CachingXmlEventWriter:void writeNamespace(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeNamespace(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter:void setDefaultNamespace(java.lang.String)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter:void writeDefaultNamespace(java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamWriter,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:java.lang.String getUniquePrefix(javax.xml.stream.XMLStreamWriter,java.lang.String,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.interceptor.WrappedOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.policy.model.RequiredParts:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.AlgorithmSuite:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.Wss11:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.EncryptionToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SymmetricBinding:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SignatureToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.Trust10:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.AsymmetricBinding:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.ContentEncryptedElements:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.KeyValueToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SignedEncryptedElements:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.Trust13:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.RequiredElements:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.UsernameToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SupportingToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.TransportBinding:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SignedEncryptedParts:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.IssuedToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SecureConversationToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.Wss10:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.ProtectionToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeNamespace(java.lang.String,java.lang.String)",
            "org.apache.cxf.binding.soap.interceptor.Soap12FaultOutInterceptor$Soap12FaultOutInterceptorInternal:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor:void writeSoapEnvelopeStart(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.Soap11FaultOutInterceptor$Soap11FaultOutInterceptorInternal:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.aegis.util.NamespaceHelper:java.lang.String getUniquePrefix(javax.xml.stream.XMLStreamWriter,java.lang.String,boolean)",
            "org.apache.cxf.aegis.util.jdom.StaxSerializer:void writeElement(org.jdom.Element,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.aegis.xml.stax.ElementWriter:void writeStartElement()",
            "org.apache.cxf.aegis.xml.stax.ElementWriter:java.lang.String getPrefixForNamespace(java.lang.String)",
            "org.apache.cxf.aegis.xml.stax.ElementWriter:java.lang.String getPrefixForNamespace(java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxws.spi.ProviderImpl:javax.xml.ws.wsaddressing.W3CEndpointReference createW3CEndpointReference(java.lang.String,javax.xml.namespace.QName,javax.xml.namespace.QName,java.util.List,java.lang.String,java.util.List)",
            "org.apache.cxf.xmlbeans.DataWriterImpl:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamWriter)"
        ]
    },
    "org.apache.cxf.staxutils.CachingXmlEventWriter:void setPrefix(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void setPrefix(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startPrefixMapping(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:java.lang.String getUniquePrefix(javax.xml.stream.XMLStreamWriter,java.lang.String,boolean)",
            "org.apache.cxf.interceptor.WrappedOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.policy.model.InitiatorToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.RequiredParts:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.TransportToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.AlgorithmSuite:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.Wss11:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.EncryptionToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SymmetricBinding:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.X509Token:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SignatureToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.Trust10:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.HttpsToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.AsymmetricBinding:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.ContentEncryptedElements:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.KeyValueToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SignedEncryptedElements:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.Trust13:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.RequiredElements:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.UsernameToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SupportingToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.TransportBinding:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SignedEncryptedParts:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.Layout:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.IssuedToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SecureConversationToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.Wss10:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.ProtectionToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.RecipientToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void setPrefix(java.lang.String,java.lang.String)",
            "org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor:void writeSoapEnvelopeStart(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.aegis.util.NamespaceHelper:java.lang.String getUniquePrefix(javax.xml.stream.XMLStreamWriter,java.lang.String,boolean)",
            "org.apache.cxf.aegis.util.jdom.StaxSerializer:void writeElement(org.jdom.Element,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.aegis.xml.stax.ElementWriter:void writeStartElement()",
            "org.apache.cxf.aegis.xml.stax.ElementWriter:java.lang.String getPrefixForNamespace(java.lang.String)",
            "org.apache.cxf.aegis.xml.stax.ElementWriter:java.lang.String getPrefixForNamespace(java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxws.spi.ProviderImpl:javax.xml.ws.wsaddressing.W3CEndpointReference createW3CEndpointReference(java.lang.String,javax.xml.namespace.QName,javax.xml.namespace.QName,java.util.List,java.lang.String,java.util.List)"
        ]
    },
    "org.apache.cxf.message.AbstractWrappedMessage:void setContent(java.lang.Class,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.message.MessageContentsList:org.apache.cxf.message.MessageContentsList getContentsList(org.apache.cxf.message.Message)",
            "org.apache.cxf.message.AbstractWrappedMessage:void setContent(java.lang.Class,java.lang.Object)",
            "org.apache.cxf.message.MessageImpl:void copyContent(org.apache.cxf.message.Message,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxOutInterceptor:void handleFault(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AttachmentOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.WrappedInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.LoggingOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.ServiceInvokerInterceptor$1:void run()",
            "org.apache.cxf.interceptor.BareInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.ClientFaultConverter:void processFaultDetail(org.apache.cxf.interceptor.Fault,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.LoggingOutInterceptor$LoggingCallback:void onClose(org.apache.cxf.io.CachedOutputStream)",
            "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:org.apache.cxf.staxutils.DepthXMLStreamReader getXMLStreamReader(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.LoggingInInterceptor:void logging(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxOutInterceptor$StaxOutEndingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.PrettyLoggingOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit$InterposedMessageObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination$BackChannelConduit:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void setupMessage(org.apache.cxf.message.Message,javax.servlet.ServletConfig,javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http.gzip.GZIPInInterceptor$GZIPInEndingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.gzip.GZIPOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.gzip.GZIPInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.jms.JMSDestination$BackChannelConduit:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.jms.JMSConduit:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ClientImpl:void setParameters(java.lang.Object[],org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor:void doResults(org.apache.cxf.binding.soap.SoapMessage,java.lang.String,javax.xml.soap.SOAPMessage,java.util.Vector)",
            "org.apache.cxf.ws.rm.RMUtils:org.apache.cxf.io.WriteOnCloseOutputStream createCachedStream(org.apache.cxf.message.Message,java.io.OutputStream)",
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)",
            "org.apache.cxf.databinding.stax.StaxDataBindingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.soap.interceptor.ReadHeadersInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.Soap12FaultInInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.RPCInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.soap.interceptor.Soap11FaultInInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.SoapHeaderInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.soap.saaj.SAAJOutInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.saaj.SAAJOutInterceptor:void handleFault(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.saaj.SAAJInInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.saaj.SAAJOutInterceptor$SAAJOutEndingInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.xml.interceptor.XMLFaultInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.clustering.FailoverTargetSelector:void complete(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.attachment.AttachmentDeserializer:void initializeRootMessage()",
            "org.apache.cxf.attachment.AttachmentDeserializer:java.lang.String findBoundaryFromInputStream()",
            "org.apache.cxf.attachment.AttachmentDeserializer:void cacheStreamedAttachments()",
            "org.apache.cxf.jaxws.handler.HandlerChainInvoker:void setFaultMessage(javax.xml.ws.handler.MessageContext,java.lang.Exception)",
            "org.apache.cxf.jaxws.handler.soap.SOAPMessageContextImpl:void setMessage(javax.xml.soap.SOAPMessage)",
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerInterceptor:void handleAbort(org.apache.cxf.binding.soap.SoapMessage,javax.xml.ws.handler.MessageContext)",
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerFaultInInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerFaultOutInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.jaxws.handler.logical.LogicalHandlerFaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.handler.logical.LogicalHandlerFaultOutInterceptor$LogicalHandlerFaultOutEndingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.handler.logical.LogicalHandlerOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.handler.logical.LogicalHandlerOutInterceptor:void handleFault(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.handler.logical.LogicalHandlerOutInterceptor$LogicalHandlerOutEndingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.handler.logical.LogicalMessageImpl:javax.xml.transform.Source getPayload()",
            "org.apache.cxf.jaxws.handler.logical.LogicalMessageImpl:javax.xml.transform.Source handleDispatchProviderCase(javax.xml.ws.Service$Mode)",
            "org.apache.cxf.jaxws.handler.logical.LogicalMessageImpl:void setPayload(javax.xml.transform.Source)",
            "org.apache.cxf.jaxws.interceptors.MessageModeInInterceptor:void doFromSoapMessage(org.apache.cxf.message.Message,java.lang.Object)",
            "org.apache.cxf.jaxws.interceptors.WrapperClassOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.interceptors.WrapperClassInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.interceptors.MessageModeOutInterceptor$MessageModeOutInterceptorInternal:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)"
        ]
    },
    "org.apache.cxf.interceptor.StaxOutInterceptor:void handleFault(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:void unwind(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.http.AbstractHTTPDestination$BackChannelConduit:void prepare(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.OneWayProcessorInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.MessageSenderInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.TransportURIResolver:org.xml.sax.InputSource resolve(java.lang.String,java.lang.String)",
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl:void resend(org.apache.cxf.transport.Conduit,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.http.gzip.GZIPInInterceptor$GZIPInEndingInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.jms.JMSDestination$BackChannelConduit:void prepare(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.OneWayProcessorInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.MessageSenderInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.TransportURIResolver:org.xml.sax.InputSource resolve(java.lang.String,java.lang.String)",
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl:void resend(org.apache.cxf.transport.Conduit,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.jms.JMSConduit:void prepare(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.OneWayProcessorInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.MessageSenderInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.TransportURIResolver:org.xml.sax.InputSource resolve(java.lang.String,java.lang.String)",
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl:void resend(org.apache.cxf.transport.Conduit,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:void setParameters(java.lang.Object[],org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:void invoke(org.apache.cxf.endpoint.ClientCallback,org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[])",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)"
        ]
    },
    "org.apache.cxf.ws.rm.RMUtils:org.apache.cxf.io.WriteOnCloseOutputStream createCachedStream(org.apache.cxf.message.Message,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.RetransmissionInterceptor:void handle(org.apache.cxf.message.Message,boolean)",
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl:void resend(org.apache.cxf.transport.Conduit,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxws.handler.logical.LogicalHandlerOutInterceptor:void handleFault(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:void unwind(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.http.AbstractHTTPDestination:void updateResponseHeaders(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.AbstractHTTPDestination:java.io.OutputStream flushHeaders(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.NSManager:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void <init>(org.apache.cxf.Bus,java.util.List)"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl$EchoContext:java.lang.Object put(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.MapNamespaceContext:void addNamespace(java.lang.String,java.lang.String)",
            "org.apache.cxf.helpers.HttpHeaderHelper:java.lang.String mapCharset(java.lang.String)",
            "org.apache.cxf.helpers.HttpHeaderHelper:void <clinit>()",
            "org.apache.cxf.helpers.XMLUtils:javax.xml.transform.TransformerFactory getTransformerFactory()",
            "org.apache.cxf.helpers.XMLUtils:javax.xml.parsers.DocumentBuilderFactory getDocumentBuilderFactory()",
            "org.apache.cxf.common.xmlschema.FixedExtensionDeserializer:void deserialize(org.apache.ws.commons.schema.XmlSchemaObject,javax.xml.namespace.QName,org.w3c.dom.Node)",
            "org.apache.cxf.common.logging.Log4jLogger:void <clinit>()",
            "org.apache.cxf.common.util.ClassReader:java.util.Map findAttributeReaders(java.lang.Class)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.common.util.ASMHelper:org.apache.cxf.common.util.ASMHelper$TypeHelperClassLoader getTypeHelperClassLoader(java.lang.Class)",
            "org.apache.cxf.common.util.ASMHelper:void <clinit>()",
            "org.apache.cxf.common.util.ASMHelper$TypeHelperClassLoader:java.lang.Class defineClass(java.lang.String,byte[])",
            "org.apache.cxf.common.util.CacheMap:void updateMainDataMap()",
            "org.apache.cxf.common.util.CacheMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.common.util.CacheMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.common.util.ParamReader:void readCode()",
            "org.apache.cxf.common.util.TwoStageMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.resource.URIResolver:void tryRemote(java.lang.String)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.util.List getBeanListForId(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void mapElementToJaxbProperty(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder,java.lang.String,java.lang.Class)",
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:java.lang.Object unmarshalFactoryString(java.lang.String,java.lang.Class)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void initWildcardDefinitionMap()",
            "org.apache.cxf.jaxb.JAXBUtils:javax.xml.bind.JAXBContext createRIContext(java.lang.Class[],java.lang.String)",
            "org.apache.cxf.jaxb.JAXBUtils:void <clinit>()",
            "org.apache.cxf.jaxb.JAXBDataBinding:void initialize(org.apache.cxf.service.Service)",
            "org.apache.cxf.jaxb.JAXBDataBinding:org.apache.cxf.jaxb.JAXBDataBinding$CachedContextAndSchemas createJAXBContextAndSchemas(java.util.Set,java.lang.String)",
            "org.apache.cxf.jaxb.JAXBDataBinding:void scanPackages(java.util.Set)",
            "org.apache.cxf.jaxb.JAXBDataBinding:void addToObjectFactoryCache(java.lang.Package,java.lang.Class)",
            "org.apache.cxf.jaxb.JAXBDataBinding$1:void <init>(org.apache.cxf.jaxb.JAXBDataBinding,java.util.List)",
            "org.apache.cxf.management.jmx.export.runtime.ModelMBeanInfoSupporter:void addModelMBeanMethod(java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String,java.lang.String,javax.management.Descriptor)",
            "org.apache.cxf.management.jmx.export.runtime.ModelMBeanInfoSupporter:void addModelMBeanNotification(java.lang.String[],java.lang.String,java.lang.String,javax.management.Descriptor)",
            "org.apache.cxf.management.jmx.export.runtime.ModelMBeanInfoSupporter:void addModelMBeanAttribute(java.lang.String,java.lang.String,boolean,boolean,boolean,java.lang.String,javax.management.Descriptor)",
            "org.apache.cxf.management.jmx.export.runtime.ModelMBeanInfoSupporter:void addModelMBeanConstructor(java.lang.reflect.Constructor,java.lang.String,javax.management.Descriptor)",
            "org.apache.cxf.management.counters.CounterRepository:void increaseCounter(javax.management.ObjectName,org.apache.cxf.management.counters.MessageHandlingTimeRecorder)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startPrefixMapping(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:void addNs(java.lang.String,java.lang.String)",
            "org.apache.cxf.message.MessageImpl:void setContent(java.lang.Class,java.lang.Object)",
            "org.apache.cxf.headers.HeaderManagerImpl:void registerHeaderProcessor(org.apache.cxf.headers.HeaderProcessor)",
            "org.apache.cxf.interceptor.StaxOutInterceptor:javax.xml.stream.XMLOutputFactory getXMLOutputFactory(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxInInterceptor:javax.xml.stream.XMLInputFactory getXMLInputFactory(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.FIStaxOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.ConduitInitiatorManagerImpl:void registerConduitInitiator(java.lang.String,org.apache.cxf.transport.ConduitInitiator)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void writeResponse(java.lang.String,java.lang.String,org.apache.cxf.service.model.EndpointInfo,java.io.OutputStream)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updateDefinition(javax.wsdl.Definition,java.util.Map,java.util.Map,java.lang.String,org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updateSchemaImports(javax.wsdl.extensions.schema.Schema,java.util.Map,java.lang.String)",
            "org.apache.cxf.transport.http.UrlUtilities:java.util.Map parseQueryString(java.lang.String)",
            "org.apache.cxf.transport.http.Cookie:void handleSetCookie(java.util.Map,java.util.List)",
            "org.apache.cxf.transport.http.DigestAuthSupplier:java.lang.String getAuthorizationForRealm(org.apache.cxf.transport.http.HTTPConduit,java.net.URL,org.apache.cxf.message.Message,java.lang.String,java.lang.String)",
            "org.apache.cxf.transport.http.HTTPConduit:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:void setHeadersByAuthorizationPolicy(org.apache.cxf.message.Message,java.net.URL,java.util.Map)",
            "org.apache.cxf.transport.http.HTTPConduit:void setHeadersByClientPolicy(org.apache.cxf.message.Message,java.util.Map)",
            "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection authorizationRetransmit(java.net.HttpURLConnection,org.apache.cxf.message.Message,org.apache.cxf.io.CacheAndWriteOutputStream)",
            "org.apache.cxf.transport.http.HTTPConduit:void setBasicAuthHeader(java.lang.String,java.lang.String,java.util.Map)",
            "org.apache.cxf.transport.http.HTTPConduit:void setProxyBasicAuthHeader(java.lang.String,java.lang.String,java.util.Map)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void copyRequestHeaders(org.apache.cxf.message.Message,java.util.Map)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void setPolicies(java.util.Map)",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponseInternal()",
            "org.apache.cxf.transport.http.gzip.GZIPOutInterceptor:void addHeader(org.apache.cxf.message.Message,java.lang.String,java.lang.String)",
            "org.apache.cxf.transport.DestinationFactoryManagerImpl:void registerDestinationFactory(java.lang.String,org.apache.cxf.transport.DestinationFactory)",
            "org.apache.cxf.transport.servlet.ServletContextResourceResolver:java.lang.Object resolve(java.lang.String,java.lang.Class)",
            "org.apache.cxf.transport.servlet.ServletTransportFactory:org.apache.cxf.transport.Destination getDestination(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.servlet.AbstractCXFServlet:void init(javax.servlet.ServletConfig)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPTransportFactory:org.apache.cxf.transport.http_jetty.JettyHTTPDestination createDestination(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void setEnginesList(java.util.List)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void setTLSServerParametersForPort(int,org.apache.cxf.configuration.jsse.TLSServerParameters)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine createJettyHTTPServerEngine(int,java.lang.String)",
            "org.apache.cxf.transport.jms.JMSUtils:void populateIncomingContext(javax.jms.Message,org.apache.cxf.message.Message,java.lang.String)",
            "org.apache.cxf.transport.jms.JMSUtils:void addContentTypeToProtocolHeader(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.jms.JMSConduit:void sendExchange(org.apache.cxf.message.Exchange,java.lang.Object)",
            "org.apache.cxf.NSManager:void resolveConstants(java.lang.Class)",
            "org.apache.cxf.extension.RegistryImpl:void register(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.endpoint.ClientImpl:java.util.Map getRequestContext()",
            "org.apache.cxf.endpoint.ClientImpl:java.util.Map getResponseContext()",
            "org.apache.cxf.endpoint.ClientImpl:void setThreadLocalRequestContext(boolean)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map)",
            "org.apache.cxf.endpoint.ClientImpl:void invoke(org.apache.cxf.endpoint.ClientCallback,org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[])",
            "org.apache.cxf.endpoint.ClientImpl$EchoContext:java.lang.Object put(java.lang.String,java.lang.Object)",
            "org.apache.cxf.ws.addressing.ContextUtils:java.lang.String getActionFromMessageAttributes(org.apache.cxf.service.model.MessageInfo)",
            "org.apache.cxf.ws.addressing.MAPAggregator:boolean validateIncomingMAPs(org.apache.cxf.ws.addressing.AddressingProperties,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void cacheExchange(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.addressing.AddressingProperties)",
            "org.apache.cxf.ws.policy.PolicyRegistryImpl:void register(java.lang.String,org.apache.neethi.Policy)",
            "org.apache.cxf.ws.security.policy.model.ContentEncryptedElements:void addDeclaredNamespaces(java.lang.String,java.lang.String)",
            "org.apache.cxf.ws.security.policy.model.SignedEncryptedElements:void addDeclaredNamespaces(java.lang.String,java.lang.String)",
            "org.apache.cxf.ws.security.policy.model.RequiredElements:void addDeclaredNamespaces(java.lang.String,java.lang.String)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationOutInterceptor:void renewToken(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.ws.security.tokenstore.SecurityToken,org.apache.cxf.ws.security.policy.model.SecureConversationToken)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationTokenInterceptorProvider:void mapSecurityProps(org.apache.cxf.message.Message,java.util.Map)",
            "org.apache.cxf.ws.security.trust.STSClient:org.apache.cxf.ws.security.tokenstore.SecurityToken requestSecurityToken(java.lang.String,java.lang.String,java.lang.String,org.apache.cxf.ws.security.tokenstore.SecurityToken)",
            "org.apache.cxf.ws.security.trust.STSClient:boolean validateSecurityToken(org.apache.cxf.ws.security.tokenstore.SecurityToken,java.lang.String)",
            "org.apache.cxf.ws.security.trust.STSClient:void cancelSecurityToken(org.apache.cxf.ws.security.tokenstore.SecurityToken)",
            "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:void add(org.apache.cxf.ws.security.tokenstore.SecurityToken)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:java.util.Map handleSupportingTokens(org.apache.cxf.ws.security.policy.model.SupportingToken,boolean,java.util.Map)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:org.apache.ws.security.components.crypto.Crypto getCrypto(org.apache.cxf.ws.security.policy.model.TokenWrapper,java.lang.String,java.lang.String)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:java.util.Properties getProps(java.lang.Object,org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.wss4j.AbstractWSS4JInterceptor:void setProperty(java.lang.String,java.lang.String)",
            "org.apache.cxf.ws.security.wss4j.AbstractWSS4JInterceptor:org.apache.ws.security.components.crypto.Crypto loadSignatureCrypto(org.apache.ws.security.handler.RequestData)",
            "org.apache.cxf.ws.security.wss4j.AbstractWSS4JInterceptor:org.apache.ws.security.components.crypto.Crypto loadDecryptionCrypto(org.apache.ws.security.handler.RequestData)",
            "org.apache.cxf.ws.security.wss4j.AbstractWSS4JInterceptor:org.apache.ws.security.components.crypto.Crypto loadEncryptionCrypto(org.apache.ws.security.handler.RequestData)",
            "org.apache.cxf.ws.rm.Source:void addSequence(org.apache.cxf.ws.rm.SourceSequence,boolean)",
            "org.apache.cxf.ws.rm.Source:void setCurrent(org.apache.cxf.ws.rm.Identifier,org.apache.cxf.ws.rm.SourceSequence)",
            "org.apache.cxf.ws.rm.Destination:void addSequence(org.apache.cxf.ws.rm.DestinationSequence,boolean)",
            "org.apache.cxf.ws.rm.RMManager:org.apache.cxf.ws.rm.RMEndpoint getReliableEndpoint(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.RMManager:void recoverReliableEndpoint(org.apache.cxf.endpoint.Endpoint,org.apache.cxf.transport.Conduit)",
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl:org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl$ResendCandidate cacheUnacknowledged(org.apache.cxf.message.Message)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void <init>(java.util.SortedSet)",
            "org.apache.cxf.workqueue.WorkQueueManagerImpl:void addNamedWorkQueue(java.lang.String,org.apache.cxf.workqueue.AutomaticWorkQueue)",
            "org.apache.cxf.databinding.AbstractDataBinding:void <init>()",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void <clinit>()",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.bind.JAXBElement getServiceNameType(javax.xml.namespace.QName,java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:void setInterfaceName(org.apache.cxf.ws.addressing.EndpointReferenceType,javax.xml.namespace.QName)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:void setWSDLLocation(org.apache.cxf.ws.addressing.EndpointReferenceType,java.lang.String[])",
            "org.apache.cxf.service.model.BindingOperationInfo:void <init>(org.apache.cxf.service.model.BindingInfo,org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:void addMessagePart(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:void setProperty(java.lang.String,java.lang.Object)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:void addExtensionAttribute(javax.xml.namespace.QName,java.lang.Object)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperationForWrapperElement(org.apache.cxf.message.Exchange,javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.service.model.InterfaceInfo:void addOperation(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.ServiceInfo:void initMessagesMap()",
            "org.apache.cxf.service.model.MessageInfo:java.util.Map getMessagePartsMap()",
            "org.apache.cxf.service.model.BindingInfo:void addOperation(org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.service.model.OperationInfo:void addFault(org.apache.cxf.service.model.FaultInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createEndpoints()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeWSDLOperations()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isWrapped(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isRPC(java.lang.reflect.Method)",
            "org.apache.cxf.binding.BindingFactoryManagerImpl:void registerBindingFactory(java.lang.String,org.apache.cxf.binding.BindingFactory)",
            "org.apache.cxf.binding.soap.interceptor.Soap12FaultInInterceptor:org.apache.cxf.binding.soap.SoapFault unmarshalFault(org.apache.cxf.binding.soap.SoapMessage,javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.binding.soap.interceptor.SoapPreProtocolOutInterceptor:void setSoapAction(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.SoapVersionFactory:void register(org.apache.cxf.binding.soap.SoapVersion)",
            "org.apache.cxf.clustering.FailoverTargetSelector:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.clustering.FailoverTargetSelector:void overrideAddressProperty(java.util.Map)",
            "org.apache.cxf.tools.common.AbstractCXFToolContainer:java.util.Map getParametersMap(java.util.Set)",
            "org.apache.cxf.tools.common.ToolContext:void put(java.lang.String,java.lang.Object)",
            "org.apache.cxf.tools.common.ToolContext:void addNamespacePackageMap(java.lang.String,java.lang.String)",
            "org.apache.cxf.tools.common.ToolContext:void addExcludeNamespacePackageMap(java.lang.String,java.lang.String)",
            "org.apache.cxf.tools.common.VelocityGenerator:void setCommonAttributes()",
            "org.apache.cxf.tools.common.VelocityGenerator:void setAttributes(java.lang.String,java.lang.Object)",
            "org.apache.cxf.tools.common.model.JavaModel:void addInterface(java.lang.String,org.apache.cxf.tools.common.model.JavaInterface)",
            "org.apache.cxf.tools.common.model.JavaModel:void addExceptionClass(java.lang.String,org.apache.cxf.tools.common.model.JavaExceptionClass)",
            "org.apache.cxf.tools.common.model.JavaModel:void addServiceClass(java.lang.String,org.apache.cxf.tools.common.model.JavaServiceClass)",
            "org.apache.cxf.tools.common.model.JavaType:void <clinit>()",
            "org.apache.cxf.tools.common.model.JavaMethod:void addAnnotation(java.lang.String,org.apache.cxf.tools.common.model.JAnnotation)",
            "org.apache.cxf.tools.common.model.JavaMethod:void <clinit>()",
            "org.apache.cxf.tools.common.model.JavaParameter:void addAnnotation(java.lang.String,org.apache.cxf.tools.common.model.JAnnotation)",
            "org.apache.cxf.tools.util.ToolsStaxUtils:java.util.List getTags(java.io.File)",
            "org.apache.cxf.tools.util.ToolsStaxUtils:org.apache.cxf.tools.common.Tag getTagTree(java.io.InputStream,java.util.List)",
            "org.apache.cxf.tools.util.BuiltInTypesJavaMappingUtil:void <clinit>()",
            "org.apache.cxf.tools.util.SOAPBindingUtil:void <clinit>()",
            "org.apache.cxf.tools.util.PropertyUtil:void load(java.io.InputStream,java.lang.String)",
            "org.apache.cxf.tools.util.ClassCollector:void addSeiClassName(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.tools.util.ClassCollector:void addTypesClassName(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.tools.util.ClassCollector:void addServerClassName(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.tools.util.ClassCollector:void addImplClassName(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.tools.util.ClassCollector:void addClientClassName(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.tools.util.ClassCollector:void addServiceClassName(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.tools.util.ClassCollector:void addExceptionClassName(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.catalog.CatalogXmlSchemaURIResolver:org.xml.sax.InputSource resolveEntity(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.wsdl11.SchemaUtil:void addSchema(java.lang.String,javax.wsdl.extensions.schema.Schema)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void parseWSDL(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void registerWSDLExtensibilityPlugins(javax.wsdl.extensions.ExtensionRegistry)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildTypes(java.util.Collection,java.util.Map,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addNamespace(java.lang.String,java.lang.String,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(java.net.URL)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(org.w3c.dom.Element)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void addDefinition(java.lang.Object,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition loadDefinition(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void putSchemasForDefinition(javax.wsdl.Definition,org.apache.cxf.service.model.ServiceSchemaInfo)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void processExtension(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadAndRegister(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void <init>(java.util.Map,java.util.Map)",
            "org.apache.cxf.bus.CXFBusImpl:void setExtension(java.lang.Object,java.lang.Class)",
            "org.apache.cxf.attachment.AttachmentImpl:void setHeader(java.lang.String,java.lang.String)",
            "org.apache.cxf.attachment.AttachmentUtil:java.util.Map getDHMap(java.util.Collection)",
            "org.apache.cxf.frontend.ClientProxyFactoryBean:java.lang.Object create()",
            "org.apache.cxf.frontend.SimpleMethodDispatcher:void bind(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method[])",
            "org.apache.cxf.frontend.SimpleMethodDispatcher:org.apache.cxf.service.model.BindingOperationInfo getBindingOperation(java.lang.reflect.Method,org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory:org.apache.cxf.endpoint.Endpoint createEndpoint()",
            "org.apache.cxf.aegis.Context:void setProperty(java.lang.Object)",
            "org.apache.cxf.aegis.util.jdom.StaxBuilder:void <clinit>()",
            "org.apache.cxf.aegis.util.stax.JDOMStreamReader:void declare(org.jdom.Namespace)",
            "org.apache.cxf.aegis.databinding.XMLStreamDataWriter:void setProperty(java.lang.String,java.lang.Object)",
            "org.apache.cxf.aegis.databinding.ElementDataWriter:void setProperty(java.lang.String,java.lang.Object)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void initialize(org.apache.cxf.service.Service)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void initializeMessage(org.apache.cxf.service.Service,org.apache.cxf.aegis.type.TypeMapping,org.apache.cxf.service.model.AbstractMessageContainer,int,java.util.Set)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void createSchemas(org.apache.cxf.service.Service,java.util.Set)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:org.apache.cxf.aegis.type.Type getParameterType(org.apache.cxf.service.Service,org.apache.cxf.aegis.type.TypeMapping,org.apache.cxf.service.model.MessagePartInfo,int)",
            "org.apache.cxf.aegis.type.basic.XMLBeanTypeInfo:org.apache.cxf.aegis.type.basic.BeanTypePropertyInfo ensurePropertyInfo(javax.xml.namespace.QName)",
            "org.apache.cxf.aegis.type.basic.InterfaceInvocationHandler:void writeProperty(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.aegis.type.basic.BeanTypeInfo:void mapType(javax.xml.namespace.QName,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.basic.BeanTypeInfo:void mapAttribute(java.lang.String,javax.xml.namespace.QName)",
            "org.apache.cxf.aegis.type.basic.BeanTypeInfo:void mapElement(java.lang.String,javax.xml.namespace.QName)",
            "org.apache.cxf.aegis.type.basic.BeanTypeInfo:void mapTypeName(javax.xml.namespace.QName,javax.xml.namespace.QName)",
            "org.apache.cxf.aegis.type.mtom.AbstractXOPType:void addToSchemaElement(org.apache.ws.commons.schema.XmlSchemaElement)",
            "org.apache.cxf.aegis.type.encoded.MarshalRegistry:java.lang.String getInstanceId(java.lang.Object)",
            "org.apache.cxf.aegis.type.XMLTypeCreator:org.w3c.dom.Document getDocument(java.lang.Class)",
            "org.apache.cxf.aegis.type.DefaultTypeMapping:void register(org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.collection.MapType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.jaxws.handler.HandlerResolverImpl:java.util.List getHandlerChain(javax.xml.ws.handler.PortInfo)",
            "org.apache.cxf.jaxws.handler.HandlerChainBuilder:void configureHandler(javax.xml.ws.handler.Handler,org.apache.cxf.jaxws.javaee.PortComponentHandlerType)",
            "org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean:void initSchemaLocations()",
            "org.apache.cxf.jaxws.support.JaxWsServiceConfiguration:javax.jws.WebParam getWebParam(java.lang.reflect.Method,int)",
            "org.apache.cxf.jaxws.support.JaxWsServiceConfiguration:java.lang.Class getResponseWrapper(java.lang.reflect.Method)",
            "org.apache.cxf.jaxws.support.JaxWsServiceConfiguration:java.lang.Class getRequestWrapper(java.lang.reflect.Method)",
            "org.apache.cxf.jaxws.JaxWsClientProxy:void setupEndpointAddressContext(org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.jaxws.JaxWsClientProxy:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])",
            "org.apache.cxf.jaxws.ServiceImpl:void addPort(javax.xml.namespace.QName,java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxws.DispatchImpl:java.lang.Object invoke(java.lang.Object,boolean)",
            "org.apache.cxf.jaxws.interceptors.SwAOutInterceptor:boolean callSWARefMethod(javax.xml.bind.JAXBContext)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:void <init>(java.util.Map,org.apache.cxf.message.Exchange,javax.xml.ws.handler.MessageContext$Scope)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:void copyScoped(java.util.Map)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:java.lang.Object createAttachments(org.apache.cxf.message.Message,java.lang.String)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:java.lang.Object put(java.lang.String,java.lang.Object,javax.xml.ws.handler.MessageContext$Scope)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:void setScope(java.lang.String,javax.xml.ws.handler.MessageContext$Scope)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:void <clinit>()",
            "org.apache.cxf.jaxws.AbstractJAXWSMethodInvoker:java.util.Map removeHandlerProperties(org.apache.cxf.jaxws.context.WrappedMessageContext)",
            "org.apache.cxf.xmlbeans.XmlBeansSchemaInitializer:org.apache.ws.commons.schema.XmlSchema getSchema(org.apache.xmlbeans.SchemaTypeSystem,java.lang.String)",
            "org.apache.cxf.xmlbeans.XmlBeansSchemaInitializer:void <clinit>()",
            "org.apache.cxf.xmlbeans.tools.XMLBeansSchemaTypeUtils:void <clinit>()",
            "org.apache.cxf.xmlbeans.tools.XMLBeansToolingDataBinding:void <clinit>()"
        ]
    },
    "org.apache.cxf.ws.security.policy.builders.ContentEncryptedElementsBuilder:void addNamespaces(org.w3c.dom.Node,org.apache.cxf.ws.security.policy.model.ContentEncryptedElements)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.policy.builders.ContentEncryptedElementsBuilder:void processElement(org.w3c.dom.Element,org.apache.cxf.ws.security.policy.model.ContentEncryptedElements)",
            "org.apache.cxf.ws.security.policy.builders.ContentEncryptedElementsBuilder:void addNamespaces(org.w3c.dom.Node,org.apache.cxf.ws.security.policy.model.ContentEncryptedElements)"
        ]
    },
    "org.apache.cxf.ws.security.policy.builders.EncryptedElementsBuilder:void addNamespaces(org.w3c.dom.Node,org.apache.cxf.ws.security.policy.model.SignedEncryptedElements)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.policy.builders.EncryptedElementsBuilder:void processElement(org.w3c.dom.Element,org.apache.cxf.ws.security.policy.model.SignedEncryptedElements)",
            "org.apache.cxf.ws.security.policy.builders.EncryptedElementsBuilder:void addNamespaces(org.w3c.dom.Node,org.apache.cxf.ws.security.policy.model.SignedEncryptedElements)"
        ]
    },
    "org.apache.cxf.ws.security.policy.builders.SignedElementsBuilder:void addNamespaces(org.w3c.dom.Node,org.apache.cxf.ws.security.policy.model.SignedEncryptedElements)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.policy.builders.SignedElementsBuilder:void processElement(org.w3c.dom.Element,org.apache.cxf.ws.security.policy.model.SignedEncryptedElements)",
            "org.apache.cxf.ws.security.policy.builders.SignedElementsBuilder:void addNamespaces(org.w3c.dom.Node,org.apache.cxf.ws.security.policy.model.SignedEncryptedElements)"
        ]
    },
    "org.apache.cxf.ws.security.policy.builders.RequiredElementsBuilder:void addNamespaces(org.w3c.dom.Node,org.apache.cxf.ws.security.policy.model.RequiredElements)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.policy.builders.RequiredElementsBuilder:void processElement(org.w3c.dom.Element,org.apache.cxf.ws.security.policy.model.RequiredElements)",
            "org.apache.cxf.ws.security.policy.builders.RequiredElementsBuilder:void addNamespaces(org.w3c.dom.Node,org.apache.cxf.ws.security.policy.model.RequiredElements)"
        ]
    },
    "org.apache.cxf.ws.security.wss4j.policyhandlers.SymmetricBindingHandler:java.lang.String getEncryptedKey()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.wss4j.policyhandlers.SymmetricBindingHandler:void doEncryptBeforeSign()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.SymmetricBindingHandler:void doSignBeforeEncrypt()"
        ]
    },
    "org.apache.cxf.ws.rm.Source:void addSequence(org.apache.cxf.ws.rm.SourceSequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.Servant:org.apache.cxf.ws.rm.CreateSequenceResponseType createSequence(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.Servant:void createSequenceResponse(org.apache.cxf.ws.rm.CreateSequenceResponseType)"
        ]
    },
    "org.apache.cxf.ws.rm.Servant:void createSequenceResponse(org.apache.cxf.ws.rm.CreateSequenceResponseType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.Servant:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object)",
            "org.apache.cxf.ws.rm.RMManager:org.apache.cxf.ws.rm.SourceSequence getSequence(org.apache.cxf.ws.rm.Identifier,org.apache.cxf.message.Message,org.apache.cxf.ws.addressing.AddressingProperties)"
        ]
    },
    "org.apache.cxf.ws.rm.Source:void setCurrent(org.apache.cxf.ws.rm.SourceSequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.RMOutInterceptor:void handle(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.ws.rm.Destination:void addSequence(org.apache.cxf.ws.rm.DestinationSequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.Servant:org.apache.cxf.ws.rm.CreateSequenceResponseType createSequence(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.Servant:void createSequenceResponse(org.apache.cxf.ws.rm.CreateSequenceResponseType)"
        ]
    },
    "org.apache.cxf.jaxb.JAXBDataBinding:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.JAXBDataBinding:void <init>(javax.xml.bind.JAXBContext)",
            "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:org.apache.cxf.endpoint.Client createClient(java.lang.String,javax.xml.namespace.QName,java.lang.ClassLoader,javax.xml.namespace.QName,java.util.List)"
        ]
    },
    "org.apache.cxf.jaxb.JAXBDataBinding:void <init>(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.databinding.DataBinding createDefaultDataBinding()"
        ]
    },
    "org.apache.cxf.databinding.source.SourceDataBinding:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.trust.STSClient:void createClient()",
            "org.apache.cxf.ws.security.trust.STSUtils:org.apache.cxf.endpoint.Endpoint createSTSEndpoint(org.apache.cxf.Bus,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.neethi.Policy,javax.xml.namespace.QName)",
            "org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean:void initConfiguration(org.apache.cxf.jaxws.support.JaxWsImplementorInfo)",
            "org.apache.cxf.jaxws.ServiceImpl:javax.xml.ws.Dispatch createDispatch(javax.xml.namespace.QName,java.lang.Class,javax.xml.ws.Service$Mode,javax.xml.ws.WebServiceFeature[])"
        ]
    },
    "org.apache.cxf.databinding.stax.StaxDataBinding:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.aegis.databinding.AegisDatabinding:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.xmlbeans.XmlBeansDataBinding:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.wsdl.EndpointReferenceUtils:void setServiceAndPortName(org.apache.cxf.ws.addressing.EndpointReferenceType,javax.xml.namespace.QName,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.AbstractObservable:org.apache.cxf.ws.addressing.EndpointReferenceType getTargetReference(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)",
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.EndpointReferenceType convert(org.apache.cxf.ws.addressing.v200408.EndpointReferenceType)",
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.EndpointReferenceType convert(org.apache.cxf.ws.addressing.v200403.EndpointReferenceType)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:org.apache.cxf.ws.addressing.EndpointReferenceType getEndpointReference(java.net.URL,javax.xml.namespace.QName,java.lang.String)"
        ]
    },
    "org.apache.cxf.wsdl.EndpointReferenceUtils:org.apache.cxf.ws.addressing.EndpointReferenceType getEndpointReference(java.net.URL,javax.xml.namespace.QName,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.binding.soap.SoapVersionFactory:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.soap.interceptor.ReadHeadersInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.SoapVersionFactory:org.apache.cxf.binding.soap.SoapVersionFactory getInstance()",
            "org.apache.cxf.binding.soap.SoapVersionFactory:void <clinit>()"
        ]
    },
    "org.apache.cxf.tools.common.ToolContext:void put(java.lang.Class,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.tools.common.model.JavaMethod:void setReturn(org.apache.cxf.tools.common.model.JavaReturn)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.tools.common.model.JavaClass:org.apache.cxf.tools.common.model.JavaMethod appendGetter(org.apache.cxf.tools.common.model.JavaField)",
            "org.apache.cxf.tools.common.model.JavaClass:org.apache.cxf.tools.common.model.JavaMethod appendSetter(org.apache.cxf.tools.common.model.JavaField)"
        ]
    },
    "org.apache.cxf.tools.common.model.JavaMethod:void addException(org.apache.cxf.tools.common.model.JavaException)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.tools.common.ProcessorTestBase:void assertWsdlEquals(java.io.InputStream,java.io.InputStream,java.util.List,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.tools.util.ToolsStaxUtils:org.apache.cxf.tools.common.Tag getTagTree(java.io.File,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.tools.common.ProcessorTestBase:void assertWsdlEquals(java.io.File,java.io.File,java.util.List,java.util.List)",
            "org.apache.cxf.tools.util.ToolsStaxUtils:org.apache.cxf.tools.common.Tag getTagTree(java.io.File)"
        ]
    },
    "org.apache.cxf.binding.soap.wsdl11.SoapAddressPlugin:javax.wsdl.extensions.ExtensibilityElement createExtension(boolean,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.soap.wsdl11.SoapAddressPlugin:javax.wsdl.extensions.ExtensibilityElement createExtension(java.util.Map)",
            "org.apache.cxf.binding.soap.SoapTransportFactory:void createSoapExtensors(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.binding.soap.model.SoapBindingInfo,boolean)"
        ]
    },
    "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapOperation getSoapOperation(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapOperation getSoapOperation(java.util.List)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:java.lang.String getSOAPOperationStyle(javax.wsdl.BindingOperation)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:boolean isMixedStyle(javax.wsdl.Binding)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapOperation createSoapOperation(javax.wsdl.extensions.ExtensionRegistry,boolean)"
        ]
    },
    "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapBody getSoapBody(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.soap.SoapBindingFactory:java.util.List handleMimePart(javax.wsdl.extensions.mime.MIMEPart,java.util.List,org.apache.cxf.service.model.MessageInfo,org.apache.cxf.service.model.BindingMessageInfo,java.util.List,java.util.List)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapBody getBindingInputSOAPBody(javax.wsdl.BindingOperation)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapBody getBindingOutputSOAPBody(javax.wsdl.BindingOperation)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapBody getSoapBody(java.util.List)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapBody createSoapBody(javax.wsdl.extensions.ExtensionRegistry,java.lang.Class,boolean)"
        ]
    },
    "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapHeader getSoapHeader(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.soap.SoapBindingFactory:void addMessageFromBinding(javax.wsdl.extensions.ExtensibilityElement,org.apache.cxf.service.model.BindingOperationInfo,boolean)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:java.util.List handleMimePart(javax.wsdl.extensions.mime.MIMEPart,java.util.List,org.apache.cxf.service.model.MessageInfo,org.apache.cxf.service.model.BindingMessageInfo,java.util.List,java.util.List)",
            "org.apache.cxf.binding.soap.HeaderUtil:java.util.Set getHeaderQNames(org.apache.cxf.service.model.BindingMessageInfo)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:java.util.List getSoapHeaders(java.util.List)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapHeader createSoapHeader(javax.wsdl.extensions.ExtensionRegistry,java.lang.Class,boolean)"
        ]
    },
    "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapAddress getSoapAddress(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.soap.SoapTransportFactory:org.apache.cxf.service.model.EndpointInfo createEndpointInfo(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.BindingInfo,javax.wsdl.Port)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapAddress createSoapAddress(javax.wsdl.extensions.ExtensionRegistry,boolean)"
        ]
    },
    "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapBinding getSoapBinding(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.tools.util.SOAPBindingUtil:java.lang.String getBindingStyle(javax.wsdl.Binding)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapBinding getSoapBinding(java.util.List)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:boolean isMixedStyle(javax.wsdl.Binding)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapBinding createSoapBinding(javax.wsdl.extensions.ExtensionRegistry,boolean)"
        ]
    },
    "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapFault getSoapFault(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.tools.util.SOAPBindingUtil:java.util.List getBindingOperationSoapFaults(javax.wsdl.BindingOperation)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapFault createSoapFault(javax.wsdl.extensions.ExtensionRegistry,boolean)"
        ]
    },
    "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapAddress createSoapAddress(javax.wsdl.extensions.ExtensionRegistry,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.soap.wsdl11.SoapAddressPlugin:javax.wsdl.extensions.ExtensibilityElement createExtension(boolean,java.lang.String)"
        ]
    },
    "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapBody createSoapBody(javax.wsdl.extensions.ExtensionRegistry,java.lang.Class,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.soap.SoapBindingFactory:void createSoapBinding(org.apache.cxf.binding.soap.model.SoapBindingInfo)"
        ]
    },
    "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapBinding createSoapBinding(javax.wsdl.extensions.ExtensionRegistry,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.soap.SoapBindingFactory:void createSoapBinding(org.apache.cxf.binding.soap.model.SoapBindingInfo)"
        ]
    },
    "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapOperation createSoapOperation(javax.wsdl.extensions.ExtensionRegistry,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.soap.SoapBindingFactory:void createSoapBinding(org.apache.cxf.binding.soap.model.SoapBindingInfo)"
        ]
    },
    "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapFault createSoapFault(javax.wsdl.extensions.ExtensionRegistry,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.soap.SoapBindingFactory:void createSoapBinding(org.apache.cxf.binding.soap.model.SoapBindingInfo)"
        ]
    },
    "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapHeader createSoapHeader(javax.wsdl.extensions.ExtensionRegistry,java.lang.Class,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.soap.SoapBindingFactory:void createSoapBinding(org.apache.cxf.binding.soap.model.SoapBindingInfo)"
        ]
    },
    "org.apache.cxf.tools.util.PropertyUtil:void load(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.tools.common.ToolContext:void loadDefaultNS2Pck(java.io.InputStream)",
            "org.apache.cxf.tools.common.ToolContext:void loadDefaultExcludes(java.io.InputStream)"
        ]
    },
    "org.apache.cxf.xmlbeans.tools.XMLBeansToolingDataBinding$1:java.io.Writer createSourceFile(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addNamespace(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addNamespace(java.lang.String)"
        ]
    },
    "org.apache.cxf.management.counters.CounterRepository:void registerInterceptorsToBus()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.headers.HeaderManagerImpl:void register()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.ConduitInitiatorManagerImpl:void register()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.http.QueryHandlerRegistryImpl:void register()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.DestinationFactoryManagerImpl:void register()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.endpoint.EndpointResolverRegistryImpl:void init()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.endpoint.ServiceContractResolverRegistryImpl:void init()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.rm.RMManager:void register()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.binding.BindingFactoryManagerImpl:void register()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.buslifecycle.CXFBusLifeCycleManager:void register()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.catalog.OASISCatalogManager:void register()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.wsdl11.WSDLManagerImpl:void register()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.spring.BusExtensionPostProcessor:java.lang.Object postProcessBeforeInitialization(java.lang.Object,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void bindOperation(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeWSDLOperation(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.OperationInfo createOperation(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.InterfaceInfo,java.lang.reflect.Method)"
        ]
    },
    "org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean:void bindOperation(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeWSDLOperation(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.OperationInfo createOperation(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.InterfaceInfo,java.lang.reflect.Method)",
            "org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean:void initializeWSDLOperation(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)"
        ]
    },
    "org.apache.cxf.jaxws.JAXWSMethodDispatcher:void bind(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void bindOperation(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean:void bindOperation(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean:void initializeWSDLOperationsForProvider()"
        ]
    },
    "org.apache.cxf.aegis.type.basic.InterfaceInvocationHandler:java.lang.Object doSetter(java.lang.reflect.Method,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.basic.InterfaceInvocationHandler:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])"
        ]
    },
    "org.apache.cxf.aegis.type.basic.BeanTypeInfo:void mapProperty(java.beans.PropertyDescriptor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.basic.BeanTypeInfo:void initializeSync()"
        ]
    },
    "org.apache.cxf.aegis.type.DefaultTypeMapping:void register(java.lang.Class,javax.xml.namespace.QName,org.apache.cxf.aegis.type.Type)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.DefaultTypeMapping:void defaultRegister(org.apache.cxf.aegis.type.TypeMapping,boolean,java.lang.Class,javax.xml.namespace.QName,org.apache.cxf.aegis.type.Type)"
        ]
    },
    "org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.JaxwsServiceBuilder:void <init>()",
            "org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean:void <init>(org.apache.cxf.jaxws.support.JaxWsImplementorInfo)",
            "org.apache.cxf.jaxws.ServiceImpl:org.apache.cxf.service.factory.AbstractServiceFactoryBean createDispatchService(org.apache.cxf.databinding.DataBinding)",
            "org.apache.cxf.jaxws.JaxWsServerFactoryBean:void <init>()",
            "org.apache.cxf.jaxws.JaxWsClientFactoryBean:void <init>()"
        ]
    },
    "org.apache.cxf.jaxws.JaxWsClientProxy:void <init>(org.apache.cxf.endpoint.Client,javax.xml.ws.Binding)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.JaxWsProxyFactoryBean:org.apache.cxf.frontend.ClientProxy clientClientProxy(org.apache.cxf.endpoint.Client)"
        ]
    },
    "org.apache.cxf.jaxws.handler.soap.SOAPMessageContextImpl:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.handler.soap.SOAPMessageContextImpl:javax.xml.soap.SOAPMessage getMessage()",
            "org.apache.cxf.jaxws.handler.soap.SOAPMessageContextImpl:void <clinit>()",
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerInterceptor:javax.xml.ws.handler.MessageContext createProtocolMessageContext(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerFaultInInterceptor:javax.xml.ws.handler.MessageContext createProtocolMessageContext(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerFaultOutInterceptor:javax.xml.ws.handler.MessageContext createProtocolMessageContext(org.apache.cxf.binding.soap.SoapMessage)"
        ]
    },
    "org.apache.cxf.jaxws.handler.soap.SOAPHandlerFaultInInterceptor:javax.xml.ws.handler.MessageContext createProtocolMessageContext(org.apache.cxf.binding.soap.SoapMessage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerFaultInInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerFaultInInterceptor:javax.xml.ws.handler.MessageContext createProtocolMessageContext(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxws.handler.soap.SOAPHandlerFaultOutInterceptor:javax.xml.ws.handler.MessageContext createProtocolMessageContext(org.apache.cxf.binding.soap.SoapMessage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerFaultOutInterceptor:void handleMessageInternal(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerFaultOutInterceptor:javax.xml.ws.handler.MessageContext createProtocolMessageContext(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.xmlbeans.tools.XMLBeansToolingDataBinding:void addWsdlSchemas(java.lang.String,org.apache.xmlbeans.impl.xb.substwsdl.DefinitionsDocument,org.apache.xmlbeans.impl.common.XmlErrorWatcher,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.xmlbeans.tools.XMLBeansToolingDataBinding:org.apache.xmlbeans.SchemaTypeSystem loadTypeSystem(java.lang.String,java.lang.String[],java.util.Set,java.io.File,java.io.File,org.xml.sax.EntityResolver)"
        ]
    },
    "org.apache.cxf.jaxws.EndpointImpl:void publish()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxws.spi.ProviderImpl:javax.xml.ws.Endpoint createAndPublishEndpoint(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxws.EndpointImpl:javax.xml.ws.EndpointReference getEndpointReference(org.w3c.dom.Element[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.EndpointImpl:javax.xml.ws.EndpointReference getEndpointReference(java.lang.Class,org.w3c.dom.Element[])"
        ]
    },
    "org.apache.cxf.service.invoker.SingletonFactory:java.lang.Object create(org.apache.cxf.message.Exchange)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.invoker.SessionFactory:java.lang.Object create(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.service.invoker.SingletonFactory:void createBean(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.service.invoker.PooledFactory:java.lang.Object createObject(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.service.invoker.FactoryInvoker:java.lang.Object getServiceObject(org.apache.cxf.message.Exchange)"
        ]
    },
    "org.apache.cxf.service.invoker.PooledFactory:java.lang.Object create(org.apache.cxf.message.Exchange)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.invoker.SessionFactory:java.lang.Object create(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.service.invoker.SingletonFactory:void createBean(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.service.invoker.PooledFactory:java.lang.Object createObject(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.service.invoker.FactoryInvoker:java.lang.Object getServiceObject(org.apache.cxf.message.Exchange)"
        ]
    },
    "org.apache.cxf.bus.spring.Jsr250BeanPostProcessor:java.lang.Object postProcessBeforeInitialization(java.lang.Object,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.injection.ResourceInjector:void visitClass(java.lang.Class,java.lang.'annotation'.Annotation)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.annotation.AnnotationProcessor:void processClass(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)"
        ]
    },
    "org.apache.cxf.configuration.jsse.spring.TLSClientParametersConfig:java.lang.Object createTLSClientParameters(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.databinding.source.NodeDataWriter:void write(java.lang.Object,org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.source.NodeDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,org.w3c.dom.Node)",
            "org.apache.cxf.databinding.source.NodeDataWriter:void write(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor$SOAPHeaderWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeAttributeEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:void writeDocument(org.w3c.dom.Document,javax.xml.stream.XMLStreamWriter,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:void writeDocument(org.w3c.dom.Document,javax.xml.stream.XMLStreamWriter,boolean)"
        ]
    },
    "org.apache.cxf.aegis.type.xml.SourceType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.databinding.XMLStreamDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.aegis.databinding.ElementDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,org.w3c.dom.Element)",
            "org.apache.cxf.aegis.AegisXMLStreamDataWriter:void write(java.lang.Object,javax.xml.namespace.QName,boolean,javax.xml.stream.XMLStreamWriter,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.basic.ObjectType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.BeanType:void writeObjectInternal(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,boolean)",
            "org.apache.cxf.aegis.type.basic.BeanType:void writeElement(javax.xml.namespace.QName,java.lang.Object,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.ArrayType:void writeValue(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type,java.lang.String,java.lang.String)",
            "org.apache.cxf.aegis.type.encoded.StructType:void writeElement(javax.xml.namespace.QName,java.lang.Object,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.SoapArrayType:void writeValue(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.collection.MapType:void writeEntry(org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.type.Type,java.util.Map$Entry)"
        ]
    },
    "org.apache.cxf.aegis.xml.AbstractMessageReader:void readToEnd(org.apache.cxf.aegis.xml.MessageReader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.xml.AbstractMessageReader:void readToEnd()",
            "org.apache.cxf.aegis.xml.AbstractMessageReader:void readToEnd(org.apache.cxf.aegis.xml.MessageReader)"
        ]
    },
    "org.apache.cxf.aegis.type.collection.MapType:void readToEnd(org.apache.cxf.aegis.xml.MessageReader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.collection.MapType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.collection.MapType:void readToEnd(org.apache.cxf.aegis.xml.MessageReader)"
        ]
    },
    "org.apache.cxf.transport.http.AbstractHTTPTransportFactory:org.apache.cxf.transport.Conduit getConduit(org.apache.cxf.service.model.EndpointInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.TransportURIResolver:org.xml.sax.InputSource resolve(java.lang.String,java.lang.String)",
            "org.apache.cxf.endpoint.AbstractConduitSelector:org.apache.cxf.transport.Conduit getSelectedConduit(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.soap.SoapTransportFactory:org.apache.cxf.transport.Conduit getConduit(org.apache.cxf.service.model.EndpointInfo)"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void onFirstWrite()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.io.AbstractWrappedOutputStream:void write(byte[],int,int)",
            "org.apache.cxf.io.AbstractWrappedOutputStream:void write(int)"
        ]
    },
    "org.apache.cxf.helpers.IOUtils:int copy(java.io.InputStream,java.io.OutputStream,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.IOUtils:int copy(java.io.InputStream,java.io.OutputStream)",
            "org.apache.cxf.helpers.IOUtils:int copyAndCloseInput(java.io.InputStream,java.io.OutputStream)",
            "org.apache.cxf.helpers.IOUtils:int copyAndCloseInput(java.io.InputStream,java.io.OutputStream,int)",
            "org.apache.cxf.jaxws.interceptors.SwAOutInterceptor:javax.activation.DataSource createDataSource(javax.xml.transform.Source,java.lang.String)"
        ]
    },
    "org.apache.cxf.io.CachedOutputStream:void write(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.IOUtils:int copy(java.io.InputStream,java.io.OutputStream,int)",
            "org.apache.cxf.io.CachedOutputStream:void write(byte[],int,int)",
            "org.apache.cxf.io.AbstractWrappedOutputStream:void write(byte[],int,int)",
            "org.apache.cxf.io.CacheAndWriteOutputStream:void write(byte[],int,int)",
            "org.apache.cxf.aegis.type.mtom.ByteArrayType:void copy(java.io.InputStream,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.io.AbstractWrappedOutputStream:void write(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.Base64Utility:void decode(char[],int,int,java.io.OutputStream)",
            "org.apache.cxf.common.util.Base64Utility:void decode(java.lang.String,java.io.OutputStream)",
            "org.apache.cxf.common.util.Base64Utility:void encodeChunk(byte[],int,int,java.io.OutputStream)",
            "org.apache.cxf.jaxb.JAXBEncoderDecoder:void marshalWithBridge(javax.xml.namespace.QName,java.lang.Class,java.lang.'annotation'.Annotation[],java.util.Set,java.lang.Object,java.lang.Object,javax.xml.bind.attachment.AttachmentMarshaller)",
            "org.apache.cxf.io.CachedOutputStream:void write(byte[])",
            "org.apache.cxf.io.CacheAndWriteOutputStream:void write(byte[])",
            "org.apache.cxf.attachment.AttachmentSerializer:void writeProlog()",
            "org.apache.cxf.attachment.AttachmentSerializer:void writeAttachments()"
        ]
    },
    "org.apache.cxf.io.AbstractThresholdOutputStream:void write(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.IOUtils:int copy(java.io.InputStream,java.io.OutputStream,int)",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void close()",
            "org.apache.cxf.io.CachedOutputStream:void write(byte[],int,int)",
            "org.apache.cxf.io.AbstractWrappedOutputStream:void write(byte[],int,int)",
            "org.apache.cxf.io.AbstractWrappedOutputStream:void write(byte[])",
            "org.apache.cxf.io.CacheAndWriteOutputStream:void write(byte[],int,int)",
            "org.apache.cxf.aegis.type.mtom.ByteArrayType:void copy(java.io.InputStream,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.io.AbstractThresholdOutputStream:void unBuffer()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.io.AbstractThresholdOutputStream:void write(byte[],int,int)",
            "org.apache.cxf.io.AbstractThresholdOutputStream:void write(int)",
            "org.apache.cxf.io.AbstractThresholdOutputStream:void close()"
        ]
    },
    "org.apache.cxf.io.CacheAndWriteOutputStream:void write(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.IOUtils:int copy(java.io.InputStream,java.io.OutputStream,int)",
            "org.apache.cxf.io.CachedOutputStream:void write(byte[],int,int)",
            "org.apache.cxf.io.AbstractWrappedOutputStream:void write(byte[],int,int)",
            "org.apache.cxf.io.CacheAndWriteOutputStream:void write(byte[],int,int)",
            "org.apache.cxf.aegis.type.mtom.ByteArrayType:void copy(java.io.InputStream,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.io.CachedOutputStream:void write(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.io.CachedOutputStream:void write(int)",
            "org.apache.cxf.io.AbstractWrappedOutputStream:void write(int)",
            "org.apache.cxf.io.CacheAndWriteOutputStream:void write(int)"
        ]
    },
    "org.apache.cxf.io.AbstractThresholdOutputStream:void write(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.io.CachedOutputStream:void write(int)",
            "org.apache.cxf.io.AbstractWrappedOutputStream:void write(int)",
            "org.apache.cxf.io.CacheAndWriteOutputStream:void write(int)"
        ]
    },
    "org.apache.cxf.io.CacheAndWriteOutputStream:void write(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.io.CachedOutputStream:void write(int)",
            "org.apache.cxf.io.AbstractWrappedOutputStream:void write(int)",
            "org.apache.cxf.io.CacheAndWriteOutputStream:void write(int)"
        ]
    },
    "org.apache.cxf.ws.addressing.WSAContextUtils:org.apache.cxf.ws.addressing.EndpointReferenceType retrieveReplyTo(org.apache.cxf.transport.Conduit,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.http.HTTPConduit:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.clustering.FailoverTargetSelector:void complete(org.apache.cxf.message.Exchange)"
        ]
    },
    "org.apache.cxf.interceptor.OutgoingChainInterceptor:org.apache.cxf.transport.Conduit getBackChannelConduit(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.MessageSenderInterceptor:org.apache.cxf.transport.Conduit getConduit(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.ws.rm.Proxy:org.apache.cxf.endpoint.Client createClient(org.apache.cxf.Bus,org.apache.cxf.endpoint.Endpoint,org.apache.cxf.transport.Conduit,org.apache.cxf.ws.addressing.EndpointReferenceType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.Proxy:java.lang.Object invoke(org.apache.cxf.service.model.OperationInfo,java.lang.Object[],java.util.Map)"
        ]
    },
    "org.apache.cxf.ws.addressing.soap.MAPCodec:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.ws.policy.PolicyBuilderImpl:org.apache.neethi.Policy getPolicy(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.builder.primitive.NestedPrimitiveAssertion:void <init>(org.w3c.dom.Element,org.apache.cxf.ws.policy.PolicyBuilder,boolean)",
            "org.apache.cxf.ws.policy.WSPolicyFeature:org.apache.neethi.Policy initializeEndpointPolicy(org.apache.cxf.endpoint.Endpoint,org.apache.cxf.Bus)",
            "org.apache.cxf.ws.policy.WSPolicyFeature$1:org.apache.neethi.Policy resolveReference(java.lang.String)",
            "org.apache.cxf.ws.policy.PolicyBuilderImpl:org.apache.neethi.Policy getPolicy(java.io.InputStream)",
            "org.apache.cxf.ws.policy.attachment.wsdl11.Wsdl11AttachmentPolicyProvider:org.apache.neethi.Policy getElementPolicy(org.apache.cxf.service.model.Extensible,boolean,org.apache.cxf.service.model.DescriptionInfo)",
            "org.apache.cxf.ws.policy.attachment.reference.LocalServiceModelReferenceResolver:org.apache.neethi.Policy resolveReference(java.lang.String)",
            "org.apache.cxf.ws.policy.attachment.reference.LocalDocumentReferenceResolver:org.apache.neethi.Policy resolveReference(java.lang.String,org.w3c.dom.Element)",
            "org.apache.cxf.ws.policy.attachment.reference.RemoteReferenceResolver:org.apache.neethi.Policy resolveReference(java.lang.String)",
            "org.apache.cxf.ws.policy.attachment.external.ExternalAttachmentProvider:void readDocument()",
            "org.apache.cxf.ws.security.policy.builders.X509TokenBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.builders.SupportingTokens12Builder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.builders.InitiatorTokenBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.builders.AsymmetricBindingBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.builders.IssuedTokenBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.builders.ProtectionTokenBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.builders.TransportTokenBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.builders.RecipientTokenBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.builders.SecureConversationTokenBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.builders.SupportingTokensBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.builders.SymmetricBindingBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.trust.STSClient:void setPolicy(org.w3c.dom.Element)"
        ]
    },
    "org.apache.cxf.ws.rm.soap.RMSoapInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.frontend.ClientProxyFactoryBean:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.frontend.spring.ClientProxyFactoryBeanDefinitionParser$SpringClientProxyFactoryBean:void <init>()"
        ]
    },
    "org.apache.cxf.jaxws.JaxWsProxyFactoryBean:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.spring.JaxWsProxyFactoryBeanDefinitionParser$JAXWSSpringClientProxyFactoryBean:void <init>()",
            "org.apache.cxf.jaxws.ServiceImpl:java.lang.Object createPort(javax.xml.namespace.QName,org.apache.cxf.ws.addressing.EndpointReferenceType,java.lang.Class,javax.xml.ws.WebServiceFeature[])"
        ]
    },
    "org.apache.cxf.frontend.spring.ServerFactoryBeanDefinitionParser$SpringServerFactoryBean:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxws.spring.NamespaceHandler$SpringServerFactoryBean:void <init>(org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxws.JaxWsServerFactoryBean:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.spring.NamespaceHandler$SpringServerFactoryBean:void <init>()",
            "org.apache.cxf.jaxws.EndpointImpl:void <init>(org.apache.cxf.Bus,java.lang.Object,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.aegis.type.java5.AnnotatedTypeInfo:javax.xml.namespace.QName createMappedName(java.beans.PropertyDescriptor,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.basic.BeanTypeInfo:void mapProperty(java.beans.PropertyDescriptor)",
            "org.apache.cxf.aegis.type.java5.AnnotatedTypeInfo:void mapProperty(java.beans.PropertyDescriptor)"
        ]
    },
    "org.apache.cxf.aegis.type.java5.Java5TypeCreator:org.apache.cxf.aegis.type.Type createEnumType(org.apache.cxf.aegis.type.AbstractTypeCreator$TypeClassInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.AbstractTypeCreator:org.apache.cxf.aegis.type.Type createTypeForClass(org.apache.cxf.aegis.type.AbstractTypeCreator$TypeClassInfo)",
            "org.apache.cxf.aegis.type.XMLTypeCreator:org.apache.cxf.aegis.type.Type createEnumType(org.apache.cxf.aegis.type.AbstractTypeCreator$TypeClassInfo)"
        ]
    },
    "org.apache.cxf.jaxb.attachment.JAXBAttachmentUnmarshaller:javax.activation.DataHandler getAttachmentAsDataHandler(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.aegis.databinding.ElementDataReader:java.lang.Object read(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.stax.StaxDataBindingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.soap.interceptor.ReadHeadersInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.saaj.SAAJInInterceptor:void replaceHeaders(javax.xml.soap.SOAPMessage,org.apache.cxf.binding.soap.SoapMessage)"
        ]
    },
    "org.apache.cxf.aegis.databinding.ElementDataReader:java.lang.Object read(javax.xml.namespace.QName,java.lang.Object,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxws.interceptors.MessageModeOutInterceptor$MessageModeOutInterceptorInternal:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.tools.util.URLFactory:java.net.URL createURL(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.aegis.type.encoded.StructType$WritePropertyAction:void onSet(org.apache.cxf.aegis.type.encoded.SoapRef)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.encoded.SoapRef:void set(java.lang.Object)",
            "org.apache.cxf.aegis.type.encoded.SoapRef:void setAction(org.apache.cxf.aegis.type.encoded.SoapRef$Action)"
        ]
    },
    "org.apache.cxf.bus.CXFBusFactory:org.apache.cxf.Bus createBus()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.servlet.CXFNonSpringServlet:void loadBusNoConfig(javax.servlet.ServletConfig)",
            "org.apache.cxf.BusFactory:org.apache.cxf.Bus getDefaultBus(boolean)"
        ]
    },
    "org.apache.cxf.databinding.source.XMLStreamDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.FaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:void writeParts(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.message.MessageContentsList,java.util.List)",
            "org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor:void writeSoapEnvelopeStart(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor:boolean handleHeaderPart(boolean,org.apache.cxf.binding.soap.SoapMessage,java.lang.String)",
            "org.apache.cxf.jaxws.interceptors.WebFaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.tools.common.Tag:int hashCode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.basic.InterfaceInvocationHandler:java.lang.String proxyToString(java.lang.Object)"
        ]
    },
    "org.apache.cxf.interceptor.DocLiteralInInterceptor:org.apache.cxf.service.model.MessageInfo setMessage(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo,boolean,org.apache.cxf.service.model.ServiceInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:org.apache.cxf.transport.Conduit getConduit()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.jms.JMSConfigFeature:void initialize(org.apache.cxf.endpoint.Client,org.apache.cxf.Bus)",
            "org.apache.cxf.ws.security.trust.STSClient:org.apache.cxf.service.model.BindingOperationInfo findOperation(java.lang.String)",
            "org.apache.cxf.ws.rm.RMManager:void clientCreated(org.apache.cxf.endpoint.Client)"
        ]
    },
    "org.apache.cxf.ws.security.wss4j.policyhandlers.SymmetricBindingHandler:void <init>(org.apache.cxf.ws.security.policy.model.SymmetricBinding,javax.xml.soap.SOAPMessage,org.apache.ws.security.message.WSSecHeader,org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.binding.soap.SoapMessage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JOutInterceptor$PolicyBasedWSS4JOutInterceptorInternal:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)"
        ]
    },
    "org.apache.cxf.management.jmx.InstrumentationManagerImpl:void register(java.lang.Object,javax.management.ObjectName)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.management.jmx.InstrumentationManagerImpl:javax.management.ObjectName register(org.apache.cxf.management.ManagedComponent,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.management.jmx.InstrumentationManagerImpl:javax.management.ObjectName register(org.apache.cxf.management.ManagedComponent)"
        ]
    },
    "org.apache.cxf.ws.rm.RMEndpoint:void buildInterfaceInfo(org.apache.cxf.service.model.ServiceInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.RMEndpoint:void createService()"
        ]
    },
    "org.apache.cxf.jaxws.handler.soap.SOAPHandlerFaultOutInterceptor$1:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerFaultOutInterceptor$1:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.binding.soap.interceptor.Soap11FaultInInterceptor:org.apache.cxf.binding.soap.SoapFault unmarshalFault(org.apache.cxf.binding.soap.SoapMessage,javax.xml.stream.XMLStreamReader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.soap.interceptor.Soap11FaultInInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.saaj.SAAJInInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)"
        ]
    },
    "org.apache.cxf.aegis.AegisXMLStreamDataReader:void setupReaderPosition(javax.xml.stream.XMLStreamReader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.AegisXMLStreamDataReader:java.lang.Object read(javax.xml.stream.XMLStreamReader,org.apache.cxf.aegis.type.Type)"
        ]
    },
    "org.apache.cxf.jaxws.handler.soap.SOAPHandlerInterceptor:javax.xml.stream.XMLStreamReader createXMLStreamReaderFromSOAPMessage(javax.xml.soap.SOAPMessage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerInterceptor:void handleAbort(org.apache.cxf.binding.soap.SoapMessage,javax.xml.ws.handler.MessageContext)"
        ]
    },
    "org.apache.cxf.jaxws.handler.soap.SOAPHandlerFaultInInterceptor:javax.xml.stream.XMLStreamReader createXMLStreamReaderFromSOAPMessage(javax.xml.soap.SOAPMessage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerFaultInInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:javax.xml.namespace.QName readQName(javax.xml.stream.XMLStreamReader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.soap.interceptor.Soap11FaultInInterceptor:org.apache.cxf.binding.soap.SoapFault unmarshalFault(org.apache.cxf.binding.soap.SoapMessage,javax.xml.stream.XMLStreamReader)"
        ]
    },
    "org.apache.cxf.aegis.util.NamespaceHelper:javax.xml.namespace.QName readQName(javax.xml.stream.XMLStreamReader)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.aegis.xml.stax.ElementReader:java.lang.String getValue()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.xml.AbstractMessageReader:boolean isXsiNil()",
            "org.apache.cxf.aegis.xml.AbstractMessageReader:boolean hasValue()",
            "org.apache.cxf.aegis.xml.AbstractMessageReader:char getValueAsCharacter()",
            "org.apache.cxf.aegis.xml.AbstractMessageReader:int getValueAsInt()",
            "org.apache.cxf.aegis.xml.AbstractMessageReader:long getValueAsLong()",
            "org.apache.cxf.aegis.xml.AbstractMessageReader:double getValueAsDouble()",
            "org.apache.cxf.aegis.xml.AbstractMessageReader:float getValueAsFloat()",
            "org.apache.cxf.aegis.xml.AbstractMessageReader:boolean getValueAsBoolean()",
            "org.apache.cxf.aegis.type.basic.ByteType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.BigIntegerType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.ObjectType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.ObjectType:java.lang.Object reconstituteJavaObject(org.apache.cxf.aegis.xml.MessageReader)",
            "org.apache.cxf.aegis.type.basic.ObjectType:boolean isNil(org.apache.cxf.aegis.xml.MessageReader)",
            "org.apache.cxf.aegis.type.basic.DateType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.CalendarType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.URIType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.TimestampType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.BigDecimalType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.DateTimeType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.ShortType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.StringType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.TimeType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.TimezoneLessDateType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.mtom.AbstractXOPType:java.lang.Object readMtoM(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.mtom.AbstractXOPType:java.lang.Object readInclude(java.lang.String,org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.SoapEncodingUtil:java.lang.String readAttributeValue(org.apache.cxf.aegis.xml.MessageReader,javax.xml.namespace.QName)",
            "org.apache.cxf.aegis.type.java5.EnumType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.java5.XMLGregorianCalendarType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.java5.DurationType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)"
        ]
    },
    "org.apache.cxf.staxutils.DepthXMLStreamReader:int nextTag()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.JAXBEncoderDecoder:java.lang.Exception unmarshallException(javax.xml.bind.Unmarshaller,java.lang.Object,org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.jaxb.JAXBEncoderDecoder:java.util.List unmarshallArray(javax.xml.bind.Unmarshaller,java.lang.Object,javax.xml.namespace.QName,java.lang.Class,java.util.List)",
            "org.apache.cxf.binding.soap.interceptor.ReadHeadersInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.Soap11FaultInInterceptor:org.apache.cxf.binding.soap.SoapFault unmarshalFault(org.apache.cxf.binding.soap.SoapMessage,javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.binding.soap.saaj.SAAJInInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.xml.interceptor.XMLMessageInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.xml.interceptor.XMLMessageInInterceptor:org.apache.cxf.service.model.BindingOperationInfo getBindingOperationInfo(boolean,javax.xml.namespace.QName,org.apache.cxf.service.model.BindingInfo,javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.binding.xml.interceptor.XMLFaultInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.aegis.AegisXMLStreamDataReader:void setupReaderPosition(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.aegis.xml.stax.ElementReader:void <init>(java.io.InputStream)",
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerInterceptor:javax.xml.stream.XMLStreamReader createXMLStreamReaderFromSOAPMessage(javax.xml.soap.SOAPMessage)",
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerFaultInInterceptor:javax.xml.stream.XMLStreamReader createXMLStreamReaderFromSOAPMessage(javax.xml.soap.SOAPMessage)"
        ]
    },
    "org.apache.cxf.staxutils.PartialXMLStreamReader:int next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DepthXMLStreamReader:java.lang.String getElementText()",
            "org.apache.cxf.staxutils.DepthXMLStreamReader:int next()",
            "org.apache.cxf.staxutils.DepthXMLStreamReader:int nextTag()",
            "org.apache.cxf.staxutils.StaxUtils:void nextEvent(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.staxutils.StaxUtils:boolean toNextText(org.apache.cxf.staxutils.DepthXMLStreamReader)",
            "org.apache.cxf.staxutils.StaxUtils:boolean toNextTag(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.staxutils.StaxUtils:boolean toNextTag(org.apache.cxf.staxutils.DepthXMLStreamReader,javax.xml.namespace.QName)",
            "org.apache.cxf.staxutils.StaxUtils:boolean skipToStartOfElement(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.staxutils.StaxUtils:boolean toNextElement(org.apache.cxf.staxutils.DepthXMLStreamReader)",
            "org.apache.cxf.staxutils.StaxUtils:boolean skipToStartOfElement(org.apache.cxf.staxutils.DepthXMLStreamReader)",
            "org.apache.cxf.staxutils.StaxUtils:void copy(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:org.w3c.dom.Element startElement(org.w3c.dom.Node,javax.xml.stream.XMLStreamReader,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void readDocElements(org.w3c.dom.Node,javax.xml.stream.XMLStreamReader,boolean)",
            "org.apache.cxf.staxutils.StaxSource:void parse()",
            "org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor:void doResults(org.apache.cxf.binding.soap.SoapMessage,java.lang.String,javax.xml.soap.SOAPMessage,java.util.Vector)",
            "org.apache.cxf.binding.soap.interceptor.ReadHeadersInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.CheckFaultInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.RPCInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.tools.util.ToolsStaxUtils:java.util.List getTags(java.io.File)",
            "org.apache.cxf.tools.util.ToolsStaxUtils:org.apache.cxf.tools.common.Tag getTagTree(java.io.InputStream,java.util.List)",
            "org.apache.cxf.aegis.util.jdom.StaxBuilder:void buildTree(org.jdom.JDOMFactory,javax.xml.stream.XMLStreamReader,org.jdom.Document)",
            "org.apache.cxf.aegis.xml.stax.ElementReader:java.lang.String getValue()",
            "org.apache.cxf.aegis.xml.stax.ElementReader:boolean checkHasMoreChildReaders()",
            "org.apache.cxf.aegis.type.basic.Base64Type:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.xmlbeans.DataReaderImpl:java.lang.Object read(org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamReader)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:boolean toNextText(org.apache.cxf.staxutils.DepthXMLStreamReader)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.staxutils.StaxUtils:boolean toNextTag(org.apache.cxf.staxutils.DepthXMLStreamReader,javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.staxutils.StaxUtils:boolean toNextElement(org.apache.cxf.staxutils.DepthXMLStreamReader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.WrappedInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.BareInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void getPara(org.apache.cxf.staxutils.DepthXMLStreamReader,org.apache.cxf.databinding.DataReader,org.apache.cxf.message.MessageContentsList,java.util.Iterator,org.apache.cxf.message.Message)",
            "org.apache.cxf.databinding.stax.StaxDataBindingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.soap.interceptor.RPCInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.xml.interceptor.XMLMessageInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.xml.interceptor.XMLFaultInInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:boolean skipToStartOfElement(org.apache.cxf.staxutils.DepthXMLStreamReader)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.staxutils.FragmentStreamReader:int next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DepthXMLStreamReader:java.lang.String getElementText()",
            "org.apache.cxf.staxutils.DepthXMLStreamReader:int next()",
            "org.apache.cxf.staxutils.DepthXMLStreamReader:int nextTag()",
            "org.apache.cxf.staxutils.StaxUtils:void nextEvent(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.staxutils.StaxUtils:boolean toNextText(org.apache.cxf.staxutils.DepthXMLStreamReader)",
            "org.apache.cxf.staxutils.StaxUtils:boolean toNextTag(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.staxutils.StaxUtils:boolean toNextTag(org.apache.cxf.staxutils.DepthXMLStreamReader,javax.xml.namespace.QName)",
            "org.apache.cxf.staxutils.StaxUtils:boolean skipToStartOfElement(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.staxutils.StaxUtils:boolean toNextElement(org.apache.cxf.staxutils.DepthXMLStreamReader)",
            "org.apache.cxf.staxutils.StaxUtils:boolean skipToStartOfElement(org.apache.cxf.staxutils.DepthXMLStreamReader)",
            "org.apache.cxf.staxutils.StaxUtils:void copy(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:org.w3c.dom.Element startElement(org.w3c.dom.Node,javax.xml.stream.XMLStreamReader,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void readDocElements(org.w3c.dom.Node,javax.xml.stream.XMLStreamReader,boolean)",
            "org.apache.cxf.staxutils.StaxSource:void parse()",
            "org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor:void doResults(org.apache.cxf.binding.soap.SoapMessage,java.lang.String,javax.xml.soap.SOAPMessage,java.util.Vector)",
            "org.apache.cxf.binding.soap.interceptor.ReadHeadersInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.CheckFaultInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.RPCInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.tools.util.ToolsStaxUtils:java.util.List getTags(java.io.File)",
            "org.apache.cxf.tools.util.ToolsStaxUtils:org.apache.cxf.tools.common.Tag getTagTree(java.io.InputStream,java.util.List)",
            "org.apache.cxf.aegis.util.jdom.StaxBuilder:void buildTree(org.jdom.JDOMFactory,javax.xml.stream.XMLStreamReader,org.jdom.Document)",
            "org.apache.cxf.aegis.xml.stax.ElementReader:java.lang.String getValue()",
            "org.apache.cxf.aegis.xml.stax.ElementReader:boolean checkHasMoreChildReaders()",
            "org.apache.cxf.aegis.type.basic.Base64Type:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.xmlbeans.DataReaderImpl:java.lang.Object read(org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamReader)"
        ]
    },
    "org.apache.cxf.aegis.xml.stax.ElementReader:boolean checkHasMoreChildReaders()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.xml.stax.ElementReader:boolean hasMoreElementReaders()",
            "org.apache.cxf.aegis.xml.stax.ElementReader:org.apache.cxf.aegis.xml.MessageReader getNextElementReader()"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:org.w3c.dom.Document read(javax.xml.stream.XMLStreamReader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:void printXmlFragment(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.databinding.source.XMLStreamDataReader:java.lang.Object read(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.binding.soap.interceptor.ReadHeadersInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.Soap12FaultInInterceptor:org.apache.cxf.binding.soap.SoapFault unmarshalFault(org.apache.cxf.binding.soap.SoapMessage,javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.binding.soap.interceptor.Soap11FaultInInterceptor:org.apache.cxf.binding.soap.SoapFault unmarshalFault(org.apache.cxf.binding.soap.SoapMessage,javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.binding.xml.interceptor.XMLFaultInInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:org.w3c.dom.Document read(javax.xml.parsers.DocumentBuilder,javax.xml.stream.XMLStreamReader,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.xml.DocumentType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)"
        ]
    },
    "org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor:org.apache.cxf.databinding.DataWriter getDataWriter(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor:boolean handleHeaderPart(boolean,org.apache.cxf.binding.soap.SoapMessage,java.lang.String)"
        ]
    },
    "org.apache.cxf.aegis.databinding.ElementDataReader:void <init>(org.apache.cxf.aegis.databinding.AegisDatabinding)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.databinding.AegisDatabinding:org.apache.cxf.databinding.DataReader createReader(java.lang.Class)"
        ]
    },
    "org.apache.cxf.aegis.databinding.XMLStreamDataReader:void <init>(org.apache.cxf.aegis.databinding.AegisDatabinding,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.databinding.AegisDatabinding:org.apache.cxf.databinding.DataReader createReader(java.lang.Class)"
        ]
    },
    "org.apache.cxf.aegis.type.basic.BeanType:org.apache.cxf.aegis.type.basic.BeanTypeInfo getTypeInfo()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.AegisContext:void processRootTypes()",
            "org.apache.cxf.aegis.type.DefaultTypeCreator:org.apache.cxf.aegis.type.Type createDefaultType(org.apache.cxf.aegis.type.AbstractTypeCreator$TypeClassInfo)",
            "org.apache.cxf.aegis.type.basic.BeanType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.BeanType:void writeObjectInternal(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,boolean)",
            "org.apache.cxf.aegis.type.basic.BeanType:java.lang.Object readProperty(java.lang.Object,javax.xml.namespace.QName)",
            "org.apache.cxf.aegis.type.basic.BeanType:void writeTypeReference(javax.xml.namespace.QName,org.apache.ws.commons.schema.XmlSchemaElement,org.apache.cxf.aegis.type.Type,org.apache.ws.commons.schema.XmlSchema)",
            "org.apache.cxf.aegis.type.basic.BeanType:java.util.Set getDependencies()",
            "org.apache.cxf.aegis.type.basic.BeanType:org.apache.cxf.aegis.type.basic.BeanTypeInfo getBeanTypeInfoWithProperty(javax.xml.namespace.QName)",
            "org.apache.cxf.aegis.type.basic.BeanType:org.apache.cxf.aegis.type.Type getSuperType()",
            "org.apache.cxf.aegis.type.basic.BeanType:java.lang.String toString()",
            "org.apache.cxf.aegis.type.basic.BeanType:long getMinOccurs()",
            "org.apache.cxf.aegis.type.basic.BeanType:void writeSchema(org.apache.ws.commons.schema.XmlSchema)",
            "org.apache.cxf.aegis.type.encoded.StructType:javax.xml.namespace.QName qualifyName(javax.xml.namespace.QName)"
        ]
    },
    "org.apache.cxf.aegis.type.java5.AnnotatedTypeInfo:void <init>(org.apache.cxf.aegis.type.TypeMapping,java.lang.Class,java.lang.String,org.apache.cxf.aegis.type.java5.AnnotationReader,org.apache.cxf.aegis.type.TypeCreationOptions)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.java5.AnnotatedTypeInfo:void <init>(org.apache.cxf.aegis.type.TypeMapping,java.lang.Class,java.lang.String,org.apache.cxf.aegis.type.TypeCreationOptions)"
        ]
    },
    "org.apache.cxf.aegis.type.basic.BeanTypeInfo:void <init>(java.lang.Class,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.basic.XMLBeanTypeInfo:void <init>(java.lang.Class,java.util.List,java.lang.String)",
            "org.apache.cxf.aegis.type.basic.BeanType:org.apache.cxf.aegis.type.basic.BeanTypeInfo createTypeInfo()",
            "org.apache.cxf.aegis.type.java5.AnnotatedTypeInfo:void <init>(org.apache.cxf.aegis.type.TypeMapping,java.lang.Class,java.lang.String,org.apache.cxf.aegis.type.java5.AnnotationReader,org.apache.cxf.aegis.type.TypeCreationOptions)"
        ]
    },
    "org.apache.cxf.aegis.type.basic.BeanTypeInfo:void <init>(java.lang.Class,java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxws.support.JaxWsEndpointImplFactory:org.apache.cxf.endpoint.EndpointImpl newEndpointImpl(org.apache.cxf.Bus,org.apache.cxf.service.Service,org.apache.cxf.service.model.EndpointInfo)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxws.support.JaxWsClientEndpointImpl:void <init>(org.apache.cxf.Bus,org.apache.cxf.service.Service,org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.jaxws.ServiceImpl,javax.xml.ws.WebServiceFeature[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.ServiceImpl:org.apache.cxf.jaxws.support.JaxWsClientEndpointImpl getJaxwsEndpoint(javax.xml.namespace.QName,org.apache.cxf.service.factory.AbstractServiceFactoryBean,javax.xml.ws.WebServiceFeature[])"
        ]
    },
    "org.apache.cxf.frontend.AbstractServiceFactory:void setServiceClass(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory:void initializeServiceFactory()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory:org.apache.cxf.endpoint.Endpoint createEndpoint()",
            "org.apache.cxf.frontend.ServerFactoryBean:void initializeServiceFactory()"
        ]
    },
    "org.apache.cxf.attachment.QuotedPrintableDecoderStream:int decodeNonspaceChar(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.QuotedPrintableDecoderStream:int read()"
        ]
    },
    "org.apache.cxf.service.factory.DefaultServiceConfiguration:javax.xml.namespace.QName getInPartName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getInPartName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)"
        ]
    },
    "org.apache.cxf.service.factory.DefaultServiceConfiguration:javax.xml.namespace.QName getOutPartName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getOutPartName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)"
        ]
    },
    "org.apache.cxf.aegis.type.AbstractTypeCreator:org.apache.cxf.aegis.type.Type createCollectionTypeFromGeneric(org.apache.cxf.aegis.type.AbstractTypeCreator$TypeClassInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.DefaultTypeCreator:org.apache.cxf.aegis.type.Type createCollectionType(org.apache.cxf.aegis.type.AbstractTypeCreator$TypeClassInfo)",
            "org.apache.cxf.aegis.type.java5.Java5TypeCreator:org.apache.cxf.aegis.type.Type createCollectionType(org.apache.cxf.aegis.type.AbstractTypeCreator$TypeClassInfo)",
            "org.apache.cxf.aegis.type.XMLTypeCreator:org.apache.cxf.aegis.type.Type createCollectionType(org.apache.cxf.aegis.type.AbstractTypeCreator$TypeClassInfo)"
        ]
    },
    "org.apache.cxf.aegis.type.AbstractTypeCreator:org.apache.cxf.aegis.type.Type getOrCreateMapKeyType(org.apache.cxf.aegis.type.AbstractTypeCreator$TypeClassInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.XMLTypeCreator:org.apache.cxf.aegis.type.Type getOrCreateMapKeyType(org.apache.cxf.aegis.type.AbstractTypeCreator$TypeClassInfo)"
        ]
    },
    "org.apache.cxf.aegis.type.AbstractTypeCreator:org.apache.cxf.aegis.type.Type createMapType(org.apache.cxf.aegis.type.AbstractTypeCreator$TypeClassInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.AbstractTypeCreator:org.apache.cxf.aegis.type.Type createTypeForClass(org.apache.cxf.aegis.type.AbstractTypeCreator$TypeClassInfo)"
        ]
    },
    "org.apache.cxf.aegis.type.AbstractTypeCreator:org.apache.cxf.aegis.type.Type getOrCreateMapValueType(org.apache.cxf.aegis.type.AbstractTypeCreator$TypeClassInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.XMLTypeCreator:org.apache.cxf.aegis.type.Type getOrCreateMapValueType(org.apache.cxf.aegis.type.AbstractTypeCreator$TypeClassInfo)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:org.w3c.dom.Document copy(org.w3c.dom.Document)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.AbstractDataBinding:org.w3c.dom.Document copy(org.w3c.dom.Document)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:void copy(org.w3c.dom.Document,javax.xml.stream.XMLStreamWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.soap.saaj.SAAJInInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.jaxws.handler.logical.LogicalHandlerFaultOutInterceptor$LogicalHandlerFaultOutEndingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.handler.logical.LogicalHandlerOutInterceptor$LogicalHandlerOutEndingInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:void copy(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void mapElementToJaxbProperty(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder,java.lang.String,java.lang.Class)",
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:org.springframework.beans.factory.support.AbstractBeanDefinition mapElementToJaxbBean(org.w3c.dom.Element,java.lang.Class,java.lang.Class,java.lang.String,java.lang.Object[])",
            "org.apache.cxf.transport.http.spring.HttpConduitBeanDefinitionParser:void mapTLSClientParameters(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder)",
            "org.apache.cxf.ws.security.policy.model.IssuedToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SecureConversationToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.trust.STSClient:org.apache.cxf.ws.security.tokenstore.SecurityToken requestSecurityToken(java.lang.String,java.lang.String,java.lang.String,org.apache.cxf.ws.security.tokenstore.SecurityToken)",
            "org.apache.cxf.ws.security.trust.STSClient:boolean validateSecurityToken(org.apache.cxf.ws.security.tokenstore.SecurityToken,java.lang.String)",
            "org.apache.cxf.ws.security.trust.STSClient:void cancelSecurityToken(org.apache.cxf.ws.security.tokenstore.SecurityToken)",
            "org.apache.cxf.ws.security.tokenstore.SecurityToken:org.w3c.dom.Element cloneElement(org.w3c.dom.Element)",
            "org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor:void writeSoapEnvelopeStart(org.apache.cxf.binding.soap.SoapMessage)"
        ]
    },
    "org.apache.cxf.databinding.stax.StaxDataBinding$XMLStreamDataWriter:void write(java.lang.Object,javax.xml.stream.XMLStreamWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.stax.StaxDataBinding$XMLStreamDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.databinding.stax.StaxDataBinding$XMLStreamDataWriter:void write(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cxf.bus.spring.TunedDocumentLoader:org.w3c.dom.Document loadFastinfosetDocument(java.net.URL)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.ControlledValidationXmlBeanDefinitionReader:int fastInfosetLoadBeanDefinitions(org.springframework.core.io.support.EncodedResource)"
        ]
    },
    "org.apache.cxf.aegis.type.xml.XMLStreamReaderType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.databinding.XMLStreamDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.aegis.databinding.ElementDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,org.w3c.dom.Element)",
            "org.apache.cxf.aegis.AegisXMLStreamDataWriter:void write(java.lang.Object,javax.xml.namespace.QName,boolean,javax.xml.stream.XMLStreamWriter,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.basic.ObjectType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.BeanType:void writeObjectInternal(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,boolean)",
            "org.apache.cxf.aegis.type.basic.BeanType:void writeElement(javax.xml.namespace.QName,java.lang.Object,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.ArrayType:void writeValue(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type,java.lang.String,java.lang.String)",
            "org.apache.cxf.aegis.type.encoded.StructType:void writeElement(javax.xml.namespace.QName,java.lang.Object,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.SoapArrayType:void writeValue(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.collection.MapType:void writeEntry(org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.type.Type,java.util.Map$Entry)"
        ]
    },
    "org.apache.cxf.xmlbeans.NodeDataWriterImpl:void write(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$1$1:java.lang.Object next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.MapNamespaceContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.helpers.WSDLHelper:javax.wsdl.BindingOperation getBindingOperation(javax.wsdl.Definition,java.lang.String)",
            "org.apache.cxf.helpers.WSDLHelper:javax.wsdl.BindingOperation getBindingOperation(javax.wsdl.Binding,java.lang.String)",
            "org.apache.cxf.helpers.WSDLHelper:java.util.List getPortTypes(javax.wsdl.Definition)",
            "org.apache.cxf.helpers.WSDLHelper:java.util.List getInMessageParts(javax.wsdl.Operation)",
            "org.apache.cxf.helpers.WSDLHelper:java.util.List getOutMessageParts(javax.wsdl.Operation)",
            "org.apache.cxf.helpers.WSDLHelper:javax.wsdl.Binding getBinding(javax.wsdl.BindingOperation,javax.wsdl.Definition)",
            "org.apache.cxf.helpers.XMLUtils:org.w3c.dom.Element fetchElementByNameAttribute(org.w3c.dom.Element,java.lang.String,java.lang.String)",
            "org.apache.cxf.common.util.SortedArraySet:boolean addAll(java.util.Collection)",
            "org.apache.cxf.common.util.SortedArraySet:boolean containsAll(java.util.Collection)",
            "org.apache.cxf.common.util.SortedArraySet:boolean removeAll(java.util.Collection)",
            "org.apache.cxf.common.util.SortedArraySet:boolean retainAll(java.util.Collection)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.util.Set entrySet()",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.util.Set keySet()",
            "org.apache.cxf.common.util.ReflectionInvokationHandler$WrapperIterator:java.lang.Object next()",
            "org.apache.cxf.common.util.StringUtils:java.util.List getParts(java.lang.String,java.lang.String)",
            "org.apache.cxf.common.util.StringUtils:java.lang.String getFirstNotEmpty(java.lang.String,java.lang.String)",
            "org.apache.cxf.common.util.StringUtils:java.lang.String getFirstNotEmpty(java.util.List)",
            "org.apache.cxf.common.util.ReflectionUtil:java.util.List getPackagesFromJar(java.io.File)",
            "org.apache.cxf.common.util.CacheMap:void updateMainDataMap()",
            "org.apache.cxf.common.util.CacheMap:void putAll(java.util.Map)",
            "org.apache.cxf.common.util.AbstractTwoStageCache:boolean recycle(java.lang.Object)",
            "org.apache.cxf.common.util.CollectionUtils:java.util.Collection diff(java.util.Collection,java.util.Collection)",
            "org.apache.cxf.common.util.CollectionUtils:boolean isEmpty(java.util.Collection)",
            "org.apache.cxf.common.util.TwoStageMap:void putAll(java.util.Map)",
            "org.apache.cxf.common.injection.ResourceInjector:void invokePostConstruct()",
            "org.apache.cxf.common.injection.ResourceInjector:void invokePreDestroy()",
            "org.apache.cxf.common.annotation.AnnotationProcessor:void processMethods(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)",
            "org.apache.cxf.common.annotation.AnnotationProcessor:void processFields(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)",
            "org.apache.cxf.common.annotation.AnnotationProcessor:void processClass(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)",
            "org.apache.cxf.resource.DefaultResourceManager:java.lang.Object findResource(java.lang.String,java.lang.Class,boolean,java.util.List)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.util.Set entrySet()",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.util.Collection values()",
            "org.apache.cxf.configuration.spring.SpringBeanMap:void processBeans(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.configuration.spring.SpringBeanQNameMap:void processBeans(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void initWildcardDefinitionMap()",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureBean(java.lang.String,java.lang.Object,boolean)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureWithWildCard(java.lang.String,java.lang.Object)",
            "org.apache.cxf.configuration.jsse.spring.TLSParameterJaxBUtils:java.security.KeyStore createTrustStore(java.io.InputStream)",
            "org.apache.cxf.jaxb.JAXBUtils:java.lang.String makeConventionalIdentifier(java.util.List,org.apache.cxf.jaxb.JAXBUtils$IdentifierType)",
            "org.apache.cxf.jaxb.JAXBDataBinding:void initialize(org.apache.cxf.service.Service)",
            "org.apache.cxf.jaxb.JAXBDataBinding:org.apache.cxf.jaxb.JAXBDataBinding$CachedContextAndSchemas createJAXBContextAndSchemas(java.util.Set,java.lang.String)",
            "org.apache.cxf.jaxb.JAXBDataBinding:void scanPackages(java.util.Set)",
            "org.apache.cxf.jaxb.JAXBSchemaInitializer:javax.xml.namespace.QName getTypeName(org.apache.cxf.jaxb.JAXBBeanInfo)",
            "org.apache.cxf.jaxb.JAXBSchemaInitializer:void end(org.apache.cxf.service.model.FaultInfo)",
            "org.apache.cxf.jaxb.JAXBSchemaInitializer:void buildExceptionType(org.apache.cxf.service.model.MessagePartInfo,java.lang.Class)",
            "org.apache.cxf.jaxb.JAXBSchemaInitializer:void addElement(org.apache.ws.commons.schema.XmlSchemaSequence,org.apache.cxf.jaxb.JAXBBeanInfo,javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.jaxb.JAXBSchemaInitializer:boolean isExistSchemaElement(org.apache.ws.commons.schema.XmlSchema,javax.xml.namespace.QName)",
            "org.apache.cxf.jaxb.io.DataWriterImpl:javax.xml.bind.Marshaller createMarshaller(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.jaxb.io.DataReaderImpl:javax.xml.bind.Unmarshaller createUnmarshaller()",
            "org.apache.cxf.management.utils.ManagementConsole:void listAllManagedEndpoint()",
            "org.apache.cxf.management.utils.ManagementConsole:void invokeEndpoint(java.lang.String)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElementEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.message.MessageUtils:boolean isDOMPresent(org.apache.cxf.message.Message)",
            "org.apache.cxf.message.MessageImpl:void copyContent(org.apache.cxf.message.Message,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:org.apache.cxf.service.model.BindingOperationInfo findAnyOp(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.util.Map keepInOrder(java.util.Map,org.apache.cxf.service.model.OperationInfo,java.util.List)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:org.apache.cxf.message.MessageContentsList getParameters(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.util.Map getQueries(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.WrappedInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.BareInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.ClientFaultConverter:void processFaultDetail(org.apache.cxf.interceptor.Fault,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:org.apache.cxf.service.model.MessagePartInfo findMessagePart(org.apache.cxf.message.Exchange,java.util.Collection,javax.xml.namespace.QName,boolean,int,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.FaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.FaultOutInterceptor:org.apache.cxf.service.model.FaultInfo getFaultForClass(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Class)",
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:void writeParts(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.message.MessageContentsList,java.util.List)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void getPara(org.apache.cxf.staxutils.DepthXMLStreamReader,org.apache.cxf.databinding.DataReader,org.apache.cxf.message.MessageContentsList,java.util.Iterator,org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.ConduitInitiatorManagerImpl:org.apache.cxf.transport.ConduitInitiator getConduitInitiatorForUri(java.lang.String)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updateDoc(org.w3c.dom.Document,java.lang.String,java.util.Map,java.util.Map)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updateDefinition(javax.wsdl.Definition,java.util.Map,java.util.Map,java.lang.String,org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updatePublishedEndpointUrl(java.lang.String,javax.wsdl.Definition,javax.xml.namespace.QName)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void setSoapAddressLocationOn(javax.wsdl.Port,java.lang.String)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updateSchemaImports(javax.wsdl.extensions.schema.Schema,java.util.Map,java.lang.String)",
            "org.apache.cxf.transport.http.Cookie:void handleSetCookie(java.util.Map,java.util.List)",
            "org.apache.cxf.transport.http.AbstractHTTPTransportFactory:void registerWithBindingManager()",
            "org.apache.cxf.transport.http.AbstractHTTPTransportFactory:org.apache.cxf.service.model.EndpointInfo createEndpointInfo(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.BindingInfo,javax.wsdl.Port)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPClientPolicy getClient(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPClientPolicy)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPServerPolicy getServer(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPServerPolicy)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPClientPolicy getClient(org.apache.cxf.ws.policy.PolicyEngine,org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.transport.Conduit)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPServerPolicy getServer(org.apache.cxf.ws.policy.PolicyEngine,org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.transport.Destination)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:void assertClientPolicy(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPClientPolicy)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:void assertServerPolicy(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPServerPolicy)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPClientPolicy getClient(java.util.Collection)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPServerPolicy getServer(java.util.Collection)",
            "org.apache.cxf.transport.http.HTTPConduit:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:void transferProtocolHeadersToURLConnection(org.apache.cxf.message.Message,java.net.URLConnection)",
            "org.apache.cxf.transport.http.HTTPConduit:void logProtocolHeaders(java.util.logging.Level,org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:java.lang.String extractAuthorizationRealm(java.util.Map)",
            "org.apache.cxf.transport.http.HTTPConduit:java.lang.String extractLocation(java.util.Map)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void copyResponseHeaders(org.apache.cxf.message.Message,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponseInternal()",
            "org.apache.cxf.transport.http.gzip.GZIPOutInterceptor:org.apache.cxf.transport.http.gzip.GZIPOutInterceptor$UseGzip gzipPermitted(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.gzip.GZIPInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.AbstractMultiplexDestination:java.lang.String extractStringElementFromAny(javax.xml.namespace.QName,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.transport.DestinationFactoryManagerImpl:org.apache.cxf.transport.DestinationFactory getDestinationFactoryForUri(java.lang.String)",
            "org.apache.cxf.transport.servlet.ServletController:void updateDests(javax.servlet.http.HttpServletRequest)",
            "org.apache.cxf.transport.servlet.ServletController:void invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.servlet.ServletController:org.apache.cxf.transport.servlet.ServletDestination checkRestfulRequest(javax.servlet.http.HttpServletRequest)",
            "org.apache.cxf.transport.servlet.ServletController:void generateServiceList(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.servlet.ServletController:void generateUnformattedServiceList(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.servlet.ServletTransportFactory:void register()",
            "org.apache.cxf.transport.servlet.AbstractCXFServlet:void replaceDestinationFactory()",
            "org.apache.cxf.transport.https.CertificateHostnameVerifier$Certificates:java.lang.String[] getDNSSubjectAlts(java.security.cert.X509Certificate)",
            "org.apache.cxf.transport.https.SSLUtils:java.util.List compileRegexPatterns(java.util.List,boolean,java.util.logging.Logger)",
            "org.apache.cxf.transport.https.SSLUtils:boolean matchesOneOf(java.lang.String,java.util.List)",
            "org.apache.cxf.transport.https.CertificateHostnameVerifier$AbstractVerifier:void check(java.lang.String[],java.lang.String[],java.lang.String[],boolean,boolean)",
            "org.apache.cxf.transport.http_jetty.spring.JettySpringTypesFactory:java.util.Map toThreadingParameters(java.util.List)",
            "org.apache.cxf.transport.http_jetty.spring.JettySpringTypesFactory:java.util.Map toTLSServerParamenters(java.util.List)",
            "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineFactoryBeanDefinitionParser:java.util.List getRequiredElementsList(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,javax.xml.namespace.QName,org.springframework.beans.factory.support.BeanDefinitionBuilder)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void doService(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine:void addServant(java.net.URL,org.apache.cxf.transport.http_jetty.JettyHTTPHandler)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPTransportFactory:void finalizeConfig()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void setEnginesList(java.util.List)",
            "org.apache.cxf.transport.jms.JMSUtils:void addProtocolHeaders(javax.jms.Message,java.util.Map)",
            "org.apache.cxf.feature.AbstractFeature:java.lang.Object getActive(java.util.List,java.lang.Class)",
            "org.apache.cxf.endpoint.ClientLifeCycleManagerImpl:void clientCreated(org.apache.cxf.endpoint.Client)",
            "org.apache.cxf.endpoint.ClientLifeCycleManagerImpl:void clientDestroyed(org.apache.cxf.endpoint.Client)",
            "org.apache.cxf.endpoint.ServerLifeCycleManagerImpl:void startServer(org.apache.cxf.endpoint.Server)",
            "org.apache.cxf.endpoint.ServerLifeCycleManagerImpl:void stopServer(org.apache.cxf.endpoint.Server)",
            "org.apache.cxf.endpoint.EndpointResolverRegistryImpl:org.apache.cxf.ws.addressing.EndpointReferenceType resolve(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.endpoint.EndpointResolverRegistryImpl:org.apache.cxf.ws.addressing.EndpointReferenceType renew(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.endpoint.EndpointResolverRegistryImpl:org.apache.cxf.ws.addressing.EndpointReferenceType mint(javax.xml.namespace.QName)",
            "org.apache.cxf.endpoint.EndpointResolverRegistryImpl:org.apache.cxf.ws.addressing.EndpointReferenceType mint(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.endpoint.ServiceContractResolverRegistryImpl:java.net.URI getContractLocation(javax.xml.namespace.QName)",
            "org.apache.cxf.endpoint.ClientImpl:org.apache.cxf.service.model.EndpointInfo findEndpoint(org.apache.cxf.service.Service,javax.xml.namespace.QName)",
            "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:org.apache.cxf.endpoint.Client createClient(java.lang.String,javax.xml.namespace.QName,java.lang.ClassLoader,javax.xml.namespace.QName,java.util.List)",
            "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:void addBindingFiles(java.util.List,org.apache.cxf.jaxb.JAXBUtils$SchemaCompiler)",
            "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:boolean isValidPackage(org.apache.cxf.jaxb.JAXBUtils$JPackage)",
            "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:void outputDebug(org.apache.cxf.jaxb.JAXBUtils$JCodeModel)",
            "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:void addSchemas(java.lang.String,java.util.Collection,org.apache.cxf.jaxb.JAXBUtils$SchemaCompiler)",
            "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:boolean compileJavaSrc(java.lang.String,java.util.List,java.lang.String)",
            "org.apache.cxf.endpoint.dynamic.TypeClassInitializer:void begin(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.ws.addressing.ContextUtils:java.lang.String getActionFromServiceModel(org.apache.cxf.message.Message,java.lang.Exception)",
            "org.apache.cxf.ws.addressing.MAPAggregator:void assertAssertion(org.apache.cxf.ws.policy.AssertionInfoMap,javax.xml.namespace.QName)",
            "org.apache.cxf.ws.addressing.MAPAggregator:boolean hasUsingAddressing(java.util.List)",
            "org.apache.cxf.ws.addressing.MAPAggregator:java.lang.String getActionFromFaultMessage(org.apache.cxf.service.model.OperationInfo,java.lang.String)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void encodeReferenceParameters(org.apache.cxf.ws.addressing.AddressingProperties,org.w3c.dom.Element,javax.xml.bind.Marshaller)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void addMustUnderstandAttribute(org.w3c.dom.Element,javax.xml.namespace.QName,org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.addressing.AddressingPropertiesImpl)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:org.apache.cxf.ws.addressing.AddressingProperties unmarshalMAPs(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void decodeReferenceParameters(java.util.Set,org.apache.cxf.ws.addressing.AddressingPropertiesImpl,javax.xml.bind.Unmarshaller)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void discardMAPs(java.util.List,org.apache.cxf.ws.addressing.AddressingProperties)",
            "org.apache.cxf.ws.policy.builder.primitive.NestedPrimitiveAssertion:org.apache.neethi.PolicyComponent normalize()",
            "org.apache.cxf.ws.policy.builder.primitive.NestedPrimitiveAssertion:boolean isAsserted(org.apache.cxf.ws.policy.AssertionInfoMap)",
            "org.apache.cxf.ws.policy.builder.primitive.NestedPrimitiveAssertion:boolean isPolicyAsserted(org.apache.neethi.PolicyOperator,org.apache.cxf.ws.policy.AssertionInfoMap)",
            "org.apache.cxf.ws.policy.builder.primitive.PrimitiveAssertion:boolean isAsserted(org.apache.cxf.ws.policy.AssertionInfoMap)",
            "org.apache.cxf.ws.policy.util.PolicyComparator:boolean compare(java.util.List,java.util.List)",
            "org.apache.cxf.ws.policy.AssertionInfoMap:void <init>(java.util.Collection)",
            "org.apache.cxf.ws.policy.AssertionInfoMap:void putAssertionInfo(org.apache.cxf.ws.policy.PolicyAssertion)",
            "org.apache.cxf.ws.policy.AssertionInfoMap:boolean supportsAlternative(org.apache.cxf.ws.policy.PolicyAssertion,java.util.List)",
            "org.apache.cxf.ws.policy.AssertionInfoMap:boolean supportsAlternative(java.util.Collection,java.util.List)",
            "org.apache.cxf.ws.policy.AssertionInfoMap:void checkEffectivePolicy(org.apache.neethi.Policy)",
            "org.apache.cxf.ws.policy.AssertionInfoMap:void check()",
            "org.apache.cxf.ws.policy.AssertionInfoMap:void getAssertions(org.apache.neethi.PolicyOperator,java.util.Collection)",
            "org.apache.cxf.ws.policy.Intersector:boolean compatibleAlternatives(java.util.Collection,java.util.Collection)",
            "org.apache.cxf.ws.policy.Intersector:boolean compatiblePolicies(org.apache.neethi.Policy,org.apache.neethi.Policy)",
            "org.apache.cxf.ws.policy.Intersector:org.apache.neethi.Policy intersect(org.apache.neethi.Policy,org.apache.neethi.Policy)",
            "org.apache.cxf.ws.policy.Intersector:org.apache.cxf.ws.policy.PolicyAssertion findCompatibleAssertion(org.apache.cxf.ws.policy.PolicyAssertion,java.util.Collection)",
            "org.apache.cxf.ws.policy.EndpointPolicyImpl:java.util.Collection getSupportedAlternatives()",
            "org.apache.cxf.ws.policy.EndpointPolicyImpl:void initializeVocabulary()",
            "org.apache.cxf.ws.policy.EndpointPolicyImpl:java.util.Collection getSupportedAlternatives(org.apache.neethi.Policy)",
            "org.apache.cxf.ws.policy.EndpointPolicyImpl:void initializeInterceptors(org.apache.cxf.ws.policy.PolicyInterceptorProviderRegistry,java.util.Set,org.apache.cxf.ws.policy.PolicyAssertion,boolean)",
            "org.apache.cxf.ws.policy.EndpointPolicyImpl:void initializeInterceptors()",
            "org.apache.cxf.ws.policy.EndpointPolicyImpl:void checkExactlyOnes()",
            "org.apache.cxf.ws.policy.ServerPolicyOutFaultInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.policy.WSPolicyFeature:org.apache.neethi.Policy initializeEndpointPolicy(org.apache.cxf.endpoint.Endpoint,org.apache.cxf.Bus)",
            "org.apache.cxf.ws.policy.PolicyInInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.policy.PolicyOutInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.policy.PolicyInterceptorProviderRegistryImpl:void register(org.apache.cxf.ws.policy.PolicyInterceptorProvider)",
            "org.apache.cxf.ws.policy.PolicyInterceptorProviderRegistryImpl:java.util.List getInterceptors(java.util.Collection,boolean,boolean)",
            "org.apache.cxf.ws.policy.selector.MinimalAlternativeSelector:java.util.Collection selectAlternative(org.apache.neethi.Policy,org.apache.cxf.ws.policy.PolicyEngine,org.apache.cxf.ws.policy.Assertor)",
            "org.apache.cxf.ws.policy.selector.FirstAlternativeSelector:java.util.Collection selectAlternative(org.apache.neethi.Policy,org.apache.cxf.ws.policy.PolicyEngine,org.apache.cxf.ws.policy.Assertor)",
            "org.apache.cxf.ws.policy.selector.MaximalAlternativeSelector:java.util.Collection selectAlternative(org.apache.neethi.Policy,org.apache.cxf.ws.policy.PolicyEngine,org.apache.cxf.ws.policy.Assertor)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:org.apache.neethi.Policy getAggregatedServicePolicy(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:org.apache.neethi.Policy getAggregatedEndpointPolicy(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:org.apache.neethi.Policy getAggregatedOperationPolicy(org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:org.apache.neethi.Policy getAggregatedMessagePolicy(org.apache.cxf.service.model.BindingMessageInfo)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:org.apache.neethi.Policy getAggregatedFaultPolicy(org.apache.cxf.service.model.BindingFaultInfo)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:java.util.Collection getAssertions(org.apache.cxf.ws.policy.EffectivePolicy,boolean)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:void addAssertions(org.apache.neethi.PolicyComponent,boolean,java.util.Collection)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:java.util.Set getVocabulary(org.apache.neethi.PolicyComponent,boolean)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:boolean supportsAlternative(java.util.Collection,org.apache.cxf.ws.policy.Assertor)",
            "org.apache.cxf.ws.policy.PolicyUtils:boolean contains(java.util.Collection,org.apache.neethi.Assertion)",
            "org.apache.cxf.ws.policy.PolicyUtils:boolean contains(java.util.Collection,java.util.Collection)",
            "org.apache.cxf.ws.policy.PolicyUtils:void printPolicyComponent(org.apache.neethi.PolicyComponent,java.lang.StringBuffer,int)",
            "org.apache.cxf.ws.policy.mtom.MTOMPolicyInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.policy.EffectivePolicyImpl:void initialiseInterceptors(org.apache.cxf.ws.policy.PolicyEngineImpl,boolean)",
            "org.apache.cxf.ws.policy.EffectivePolicyImpl:java.util.Collection getSupportedAlternatives(org.apache.cxf.ws.policy.PolicyEngineImpl,org.apache.neethi.Policy)",
            "org.apache.cxf.ws.policy.EffectivePolicyImpl:void initialiseInterceptors(org.apache.cxf.ws.policy.PolicyInterceptorProviderRegistry,org.apache.cxf.ws.policy.PolicyEngineImpl,java.util.Set,org.apache.cxf.ws.policy.PolicyAssertion,boolean)",
            "org.apache.cxf.ws.policy.attachment.wsdl11.Wsdl11AttachmentPolicyProvider$ExtensibleInfo:java.lang.Object getExtensor(java.lang.Class)",
            "org.apache.cxf.ws.policy.attachment.wsdl11.Wsdl11AttachmentPolicyProvider$ExtensibleInfo:java.util.List getExtensors(java.lang.Class)",
            "org.apache.cxf.ws.policy.attachment.wsdl11.Wsdl11AttachmentPolicyProvider:org.apache.neethi.Policy getElementPolicy(org.apache.cxf.service.model.Extensible,boolean,org.apache.cxf.service.model.DescriptionInfo)",
            "org.apache.cxf.ws.policy.attachment.reference.LocalServiceModelReferenceResolver:org.apache.neethi.Policy resolveReference(java.lang.String)",
            "org.apache.cxf.ws.policy.attachment.reference.RemoteReferenceResolver:org.apache.neethi.Policy resolveReference(java.lang.String)",
            "org.apache.cxf.ws.policy.attachment.external.PolicyAttachment:boolean appliesTo(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.ws.policy.attachment.external.PolicyAttachment:boolean appliesTo(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.ws.policy.attachment.external.PolicyAttachment:boolean appliesTo(org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.ws.policy.attachment.external.PolicyAttachment:boolean appliesTo(org.apache.cxf.service.model.BindingMessageInfo)",
            "org.apache.cxf.ws.policy.attachment.external.PolicyAttachment:boolean appliesTo(org.apache.cxf.service.model.BindingFaultInfo)",
            "org.apache.cxf.ws.policy.attachment.external.ExternalAttachmentProvider:org.apache.neethi.Policy getEffectivePolicy(org.apache.cxf.service.model.BindingFaultInfo)",
            "org.apache.cxf.ws.policy.attachment.external.ExternalAttachmentProvider:org.apache.neethi.Policy getEffectivePolicy(org.apache.cxf.service.model.BindingMessageInfo)",
            "org.apache.cxf.ws.policy.attachment.external.ExternalAttachmentProvider:org.apache.neethi.Policy getEffectivePolicy(org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.ws.policy.attachment.external.ExternalAttachmentProvider:org.apache.neethi.Policy getEffectivePolicy(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.ws.policy.attachment.external.ExternalAttachmentProvider:org.apache.neethi.Policy getEffectivePolicy(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.ws.policy.attachment.external.ExternalAttachmentProvider:void readDocument()",
            "org.apache.cxf.ws.policy.AssertionBuilderRegistryImpl:void register(org.apache.cxf.ws.policy.AssertionBuilder)",
            "org.apache.cxf.ws.policy.ClientPolicyInFaultInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.policy.AbstractPolicyInterceptor:org.apache.cxf.service.model.BindingFaultInfo getBindingFaultInfo(org.apache.cxf.message.Message,java.lang.Exception,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.ws.security.policy.builders.X509TokenBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.builders.X509TokenBuilder:void processAlternative(java.util.List,org.apache.cxf.ws.security.policy.model.X509Token,org.apache.cxf.ws.security.policy.SPConstants)",
            "org.apache.cxf.ws.security.policy.builders.SupportingTokens12Builder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.builders.SupportingTokens12Builder:void processAlternative(java.util.List,org.apache.cxf.ws.security.policy.model.SupportingToken)",
            "org.apache.cxf.ws.security.policy.builders.InitiatorTokenBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.builders.InitiatorTokenBuilder:void processAlternative(java.util.List,org.apache.cxf.ws.security.policy.model.InitiatorToken)",
            "org.apache.cxf.ws.security.policy.builders.AsymmetricBindingBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.builders.AsymmetricBindingBuilder:void processAlternative(java.util.List,org.apache.cxf.ws.security.policy.model.AsymmetricBinding,org.apache.cxf.ws.security.policy.SPConstants)",
            "org.apache.cxf.ws.security.policy.builders.IssuedTokenBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.builders.IssuedTokenBuilder:void processAlternative(java.util.List,org.apache.cxf.ws.security.policy.model.IssuedToken)",
            "org.apache.cxf.ws.security.policy.builders.ProtectionTokenBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.builders.TransportTokenBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.builders.RecipientTokenBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.builders.RecipientTokenBuilder:void processAlternative(java.util.List,org.apache.cxf.ws.security.policy.model.RecipientToken)",
            "org.apache.cxf.ws.security.policy.builders.SupportingTokensBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.builders.SupportingTokensBuilder:void processAlternative(java.util.List,org.apache.cxf.ws.security.policy.model.SupportingToken)",
            "org.apache.cxf.ws.security.policy.builders.SymmetricBindingBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.builders.SymmetricBindingBuilder:void processAlternatives(java.util.List,org.apache.cxf.ws.security.policy.model.SymmetricBinding,org.apache.cxf.ws.security.policy.SPConstants)",
            "org.apache.cxf.ws.security.policy.model.RequiredParts:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.ContentEncryptedElements:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SignedEncryptedElements:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.RequiredElements:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SupportingToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SupportingToken:org.apache.neethi.Policy getPolicy()",
            "org.apache.cxf.ws.security.policy.model.SignedEncryptedParts:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.AbstractSecurityAssertion:boolean isAsserted(org.apache.cxf.ws.policy.AssertionInfoMap)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor$SecureConversationTokenFinderInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor$SecureConversationCancelInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.policy.interceptors.HttpsTokenInterceptorProvider$HttpsTokenInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.policy.interceptors.HttpsTokenInterceptorProvider$HttpsTokenInInterceptor:void assertHttps(java.util.Collection,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationOutInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor:org.apache.cxf.ws.security.policy.model.Binding getBinding(org.apache.cxf.ws.policy.AssertionInfoMap)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor:void recalcEffectivePolicy(org.apache.cxf.binding.soap.SoapMessage,java.lang.String,org.apache.neethi.Policy)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor:void unmapSecurityProps(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.policy.interceptors.IssuedTokenInterceptorProvider$IssuedTokenOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.policy.interceptors.IssuedTokenInterceptorProvider$IssuedTokenOutInterceptor:org.apache.cxf.ws.security.policy.model.Trust10 getTrust10(org.apache.cxf.ws.policy.AssertionInfoMap)",
            "org.apache.cxf.ws.security.policy.interceptors.IssuedTokenInterceptorProvider$IssuedTokenOutInterceptor:org.apache.cxf.ws.security.policy.model.Trust13 getTrust13(org.apache.cxf.ws.policy.AssertionInfoMap)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationTokenInterceptorProvider:org.apache.cxf.ws.security.policy.model.Trust10 getTrust10(org.apache.cxf.ws.policy.AssertionInfoMap)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationTokenInterceptorProvider:org.apache.cxf.ws.security.policy.model.Trust13 getTrust13(org.apache.cxf.ws.policy.AssertionInfoMap)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationTokenInterceptorProvider:org.apache.cxf.ws.policy.PolicyAssertion getAddressingPolicy(org.apache.cxf.ws.policy.AssertionInfoMap,boolean)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationTokenInterceptorProvider:void mapSecurityProps(org.apache.cxf.message.Message,java.util.Map)",
            "org.apache.cxf.ws.security.policy.interceptors.HttpsTokenInterceptorProvider$HttpsTokenOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.policy.interceptors.HttpsTokenInterceptorProvider$HttpsTokenOutInterceptor:void assertHttps(java.util.Collection,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.policy.interceptors.IssuedTokenInterceptorProvider$IssuedTokenInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.trust.STSClient:void setPolicy(org.apache.neethi.Policy)",
            "org.apache.cxf.ws.security.trust.STSClient:org.apache.cxf.service.model.BindingOperationInfo findOperation(java.lang.String)",
            "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:org.apache.cxf.ws.security.tokenstore.SecurityToken getToken(java.lang.String)",
            "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:java.util.Collection getTokens(org.apache.cxf.ws.security.tokenstore.SecurityToken$State)",
            "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:void processTokenExpiry()",
            "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:void removeCancelledTokens()",
            "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:void removeExpiredTokens()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.TransportBindingHandler:void addUsernameTokens(org.apache.cxf.ws.security.policy.model.SupportingToken)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.TransportBindingHandler:void handleBinding()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.TransportBindingHandler:byte[] doX509TokenSignature(org.apache.cxf.ws.security.policy.model.Token,org.apache.cxf.ws.security.policy.model.SignedEncryptedParts,org.apache.cxf.ws.security.policy.model.TokenWrapper)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.TransportBindingHandler:byte[] doIssuedTokenSignature(org.apache.cxf.ws.security.policy.model.Token,org.apache.cxf.ws.security.policy.model.SignedEncryptedParts,org.apache.cxf.ws.security.policy.model.TokenWrapper,org.apache.cxf.ws.security.tokenstore.SecurityToken)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AsymmetricBindingHandler:void doSignBeforeEncrypt()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AsymmetricBindingHandler:void doEncryptBeforeSign()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AsymmetricBindingHandler:void assertUnusedTokens(org.apache.cxf.ws.security.policy.model.TokenWrapper)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void policyNotAsserted(org.apache.cxf.ws.policy.PolicyAssertion,java.lang.Exception)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void policyNotAsserted(org.apache.cxf.ws.policy.PolicyAssertion,java.lang.String)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void policyAsserted(org.apache.cxf.ws.policy.PolicyAssertion)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void policyAsserted(javax.xml.namespace.QName)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:java.util.Collection findAndAssertPolicy(javax.xml.namespace.QName)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:org.apache.ws.security.message.WSSecTimestamp createTimestamp()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:org.apache.ws.security.message.WSSecTimestamp handleLayout(org.apache.ws.security.message.WSSecTimestamp)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void assertSupportingTokens(java.util.Collection)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:java.util.Map handleSupportingTokens(java.util.Collection,boolean)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:java.util.Map handleSupportingTokens(org.apache.cxf.ws.security.policy.model.SupportingToken,boolean,java.util.Map)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void addSignatureParts(java.util.Map,java.util.List)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:org.apache.ws.security.message.WSSecUsernameToken addUsernameToken(org.apache.cxf.ws.security.policy.model.UsernameToken)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:java.util.Vector getEncryptedParts()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:java.util.Vector getSignedParts()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:java.util.Vector getPartsAndElements(boolean,boolean,java.util.List,java.util.List,java.util.Map)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:org.apache.cxf.ws.security.policy.model.Wss10 getWss10()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void doEndorsedSignatures(java.util.Map,boolean,boolean)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void handleEncryptedSignedHeaders(java.util.Vector,java.util.Vector)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.SymmetricBindingHandler:void doEncryptBeforeSign()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.SymmetricBindingHandler:void doSignBeforeEncrypt()",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JOutInterceptor$PolicyBasedWSS4JOutInterceptorInternal:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:void handleWSS11(org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:boolean assertPolicy(org.apache.cxf.ws.policy.AssertionInfoMap,javax.xml.namespace.QName)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:void assertPolicy(org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.ws.policy.PolicyAssertion)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:void notAssertPolicy(org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.ws.policy.PolicyAssertion,java.lang.String)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:java.lang.String checkAsymetricBinding(org.apache.cxf.ws.policy.AssertionInfoMap,java.lang.String,org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:java.lang.String checkSymetricBinding(org.apache.cxf.ws.policy.AssertionInfoMap,java.lang.String,org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:void assertTokens(org.apache.cxf.ws.policy.AssertionInfoMap,javax.xml.namespace.QName,java.util.Collection,org.apache.cxf.binding.soap.SoapMessage,javax.xml.soap.SOAPMessage,java.lang.String)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:void doResults(org.apache.cxf.binding.soap.SoapMessage,java.lang.String,javax.xml.soap.SOAPMessage,java.util.Vector)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:boolean assertSymetricBinding(org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.binding.soap.SoapMessage,javax.xml.soap.SOAPMessage,org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor$Protections,boolean)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:boolean assertAsymetricBinding(org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.binding.soap.SoapMessage,javax.xml.soap.SOAPMessage,org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor$Protections,boolean)",
            "org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor:void doResults(org.apache.cxf.binding.soap.SoapMessage,java.lang.String,javax.xml.soap.SOAPMessage,java.util.Vector)",
            "org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor:org.apache.ws.security.WSSecurityEngine createSecurityEngine(java.util.Map)",
            "org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor$TokenStoreCallbackHandler:void handle(javax.security.auth.callback.Callback[])",
            "org.apache.cxf.ws.rm.AbstractRMInterceptor:void assertReliability(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.Servant:void terminateSequence(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.AbstractSequence:boolean isAcknowledged(java.math.BigInteger)",
            "org.apache.cxf.ws.rm.DestinationSequence:void scheduleDeferredAcknowledgement(long)",
            "org.apache.cxf.ws.rm.policy.PolicyUtils:org.apache.cxf.ws.rm.policy.RMAssertion getRMAssertion(org.apache.cxf.ws.rm.policy.RMAssertion,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.Source:java.util.Collection getAllUnacknowledgedSequences()",
            "org.apache.cxf.ws.rm.RMInInterceptor:void processAcknowledgments(org.apache.cxf.ws.rm.Source,org.apache.cxf.ws.rm.RMProperties)",
            "org.apache.cxf.ws.rm.RMOutInterceptor:void addAcknowledgements(org.apache.cxf.ws.rm.Destination,org.apache.cxf.ws.rm.RMProperties,org.apache.cxf.ws.rm.Identifier,org.apache.cxf.ws.addressing.v200408.AttributedURI)",
            "org.apache.cxf.ws.rm.Destination:void ackRequested(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.RMManager:void shutdown()",
            "org.apache.cxf.ws.rm.RMManager:void recoverReliableEndpoint(org.apache.cxf.endpoint.Endpoint,org.apache.cxf.transport.Conduit)",
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl:void resend(org.apache.cxf.transport.Conduit,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.soap.RMSoapInterceptor:void encode(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.rm.RMProperties)",
            "org.apache.cxf.ws.rm.soap.RMSoapInterceptor:org.apache.cxf.ws.rm.RMProperties unmarshalRMProperties(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.rm.soap.RMSoapInterceptor:void discardRMHeaders(java.util.List)",
            "org.apache.cxf.ws.rm.RMEndpoint:void setPolicies()",
            "org.apache.cxf.ws.rm.RMEndpoint:java.lang.Object getUsingAddressing(java.util.List)",
            "org.apache.cxf.ws.rm.RMEndpoint:void shutdown()",
            "org.apache.cxf.ws.rm.persistence.jdbc.RMTxStore:void removeMessages(org.apache.cxf.ws.rm.Identifier,java.util.Collection,boolean)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void <init>(java.util.SortedSet)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void add(java.util.Collection,boolean)",
            "org.apache.cxf.workqueue.WorkQueueManagerImpl:void shutdown(boolean)",
            "org.apache.cxf.workqueue.WorkQueueManagerImpl:void run()",
            "org.apache.cxf.databinding.AbstractDataBinding:void setNamespaceMap(java.util.Map)",
            "org.apache.cxf.databinding.AbstractDataBinding:void checkNamespaceMap(java.util.Map)",
            "org.apache.cxf.databinding.stax.StaxDataBindingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.databinding.stax.StaxDataBindingFeature:void removeInterceptor(java.util.List,java.lang.String)",
            "org.apache.cxf.wsdl.JAXBExtensionHelper$1:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils$SchemaLSResourceResolver:org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.namespace.QName getServiceName(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:java.lang.String getPortName(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:void setPortName(org.apache.cxf.ws.addressing.EndpointReferenceType,java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.namespace.QName getInterfaceName(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:void setMetadata(org.apache.cxf.ws.addressing.EndpointReferenceType,java.util.List)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.wsdl.Definition getWSDLDefinition(org.apache.cxf.wsdl.WSDLManager,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.validation.Schema createSchema(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.wsdl.Port getPort(org.apache.cxf.wsdl.WSDLManager,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:org.apache.cxf.transport.MultiplexDestination getMatchingMultiplexDestination(javax.xml.namespace.QName,java.lang.String,org.apache.cxf.Bus)",
            "org.apache.cxf.io.CachedOutputStream:void flush()",
            "org.apache.cxf.io.CachedOutputStream:void lockOutputStream()",
            "org.apache.cxf.io.CachedOutputStream:void close()",
            "org.apache.cxf.service.model.BindingOperationInfo:void <init>(org.apache.cxf.service.model.BindingInfo,org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:int getMessagePartIndex(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePartByIndex(int)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePart(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePart(int)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperation(org.apache.cxf.message.Exchange,java.lang.String)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperationForWrapperElement(org.apache.cxf.message.Exchange,javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.SchemaInfo getSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.ServiceModelUtil:java.util.List getOperationInputPartNames(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.EndpointInfo findBestEndpointInfo(javax.xml.namespace.QName,java.util.List)",
            "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.BindingInfo getBinding(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.EndpointInfo getEndpoint(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.ServiceInfo:void initMessagesMap()",
            "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.SchemaInfo getSchema(java.lang.String)",
            "org.apache.cxf.service.model.MessageInfo:java.util.Map getMessagePartsMap()",
            "org.apache.cxf.service.model.MessageInfo:java.util.List getOrderedParts(java.util.List)",
            "org.apache.cxf.service.model.BindingInfo:org.apache.cxf.service.model.BindingOperationInfo buildOperation(javax.xml.namespace.QName,java.lang.String,java.lang.String)",
            "org.apache.cxf.service.model.BindingInfo:org.apache.cxf.service.model.BindingOperationInfo getOperation(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.ServiceImpl:org.apache.cxf.service.model.EndpointInfo getEndpointInfo(javax.xml.namespace.QName)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void fillInSchemaCrossreferences()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createEndpoints()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeServiceConfigurations()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromWSDL(java.lang.String)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromClass()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean hasWrappedMethods(org.apache.cxf.service.model.InterfaceInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void validateServiceModel()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.InterfaceInfo getInterfaceInfo()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeWSDLOperations()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void setFaultClassInfo(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.OperationInfo createOperation(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.InterfaceInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeWrappedSchema(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void checkForElement(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createBareMessage(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.OperationInfo,boolean)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isExistImport(org.apache.ws.commons.schema.XmlSchema,java.lang.String)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.ws.commons.schema.XmlSchemaElement getExistingSchemaElement(org.apache.ws.commons.schema.XmlSchema,javax.xml.namespace.QName)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createWrappedMessageSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.AbstractMessageContainer,org.apache.cxf.service.model.AbstractMessageContainer,org.apache.ws.commons.schema.XmlSchema,javax.xml.namespace.QName)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.SchemaInfo getOrCreateSchema(org.apache.cxf.service.model.ServiceInfo,java.lang.String,boolean)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createInputWrappedMessageParts(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,org.apache.cxf.service.model.MessageInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createOutputWrappedMessageParts(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,org.apache.cxf.service.model.MessageInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getEndpointName(boolean)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getServiceName()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getServiceNamespace()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getInterfaceName()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isValidMethod(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isHolder(java.lang.Class,java.lang.reflect.Type)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.reflect.Type getHolderType(java.lang.Class,java.lang.reflect.Type)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isWrapped(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isOutParam(java.lang.reflect.Method,int)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isInParam(java.lang.reflect.Method,int)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getInputMessageName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName createOutputMessageName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean hasOutMessage(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getFaultName(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.Class,java.lang.Class)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getAction(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isHeader(java.lang.reflect.Method,int)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getOperationName(org.apache.cxf.service.model.InterfaceInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isAsync(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getInPartName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getInParameterName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getOutParameterName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:javax.xml.namespace.QName getOutPartName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.Class getResponseWrapper(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getResponseWrapperClassName(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.Class getRequestWrapper(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getRequestWrapperClassName(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isWrapperPartQualified(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isWrapperPartNillable(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:long getWrapperPartMaxOccurs(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:long getWrapperPartMinOccurs(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getWsdlURL()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isWrapped()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getStyle()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isRPC(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.DefaultServiceConfiguration:java.lang.Boolean isOperation(java.lang.reflect.Method)",
            "org.apache.cxf.service.ServiceModelVisitor:void walk()",
            "org.apache.cxf.service.ServiceModelVisitor:void visitOperation(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.binding.AbstractBindingFactory:void registerWithBindingManager()",
            "org.apache.cxf.binding.AbstractBindingFactory:org.apache.cxf.service.model.BindingInfo initializeBindingInfo(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding,org.apache.cxf.service.model.BindingInfo)",
            "org.apache.cxf.binding.AbstractBindingFactory:void copyExtensors(org.apache.cxf.service.model.AbstractPropertiesHolder,javax.wsdl.extensions.ElementExtensible,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:org.apache.cxf.service.model.BindingInfo createBindingInfo(org.apache.cxf.service.model.ServiceInfo,java.lang.String,java.lang.Object)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:void createSoapBinding(org.apache.cxf.binding.soap.model.SoapBindingInfo)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:void setupHeaders(org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.service.model.BindingMessageInfo,org.apache.cxf.service.model.BindingMessageInfo,org.apache.cxf.service.model.MessageInfo,org.apache.cxf.binding.soap.SoapBindingConfiguration)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:org.apache.cxf.binding.Binding createBinding(org.apache.cxf.service.model.BindingInfo)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:void addOutOfBandParts(org.apache.cxf.service.model.BindingOperationInfo,javax.wsdl.Message,org.apache.cxf.common.xmlschema.SchemaCollection,boolean,java.lang.String)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:void buildMessage(org.apache.cxf.service.model.MessageInfo,javax.wsdl.Message,org.apache.cxf.common.xmlschema.SchemaCollection,int,java.lang.String)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:org.apache.cxf.service.model.BindingInfo createBindingInfo(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding,java.lang.String)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:void initializeMessage(org.apache.cxf.binding.soap.model.SoapBindingInfo,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.service.model.BindingMessageInfo)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:java.util.List handleMimePart(javax.wsdl.extensions.mime.MIMEPart,java.util.List,org.apache.cxf.service.model.MessageInfo,org.apache.cxf.service.model.BindingMessageInfo,java.util.List,java.util.List)",
            "org.apache.cxf.binding.soap.interceptor.ReadHeadersInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.Soap12FaultOutInterceptor$Soap12FaultOutInterceptorInternal:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.RPCOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.soap.interceptor.SoapActionInInterceptor:void getAndSetOperation(org.apache.cxf.binding.soap.SoapMessage,java.lang.String)",
            "org.apache.cxf.binding.soap.interceptor.SoapHeaderOutFilterInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.RPCInInterceptor:org.apache.cxf.service.model.BindingOperationInfo getOperation(org.apache.cxf.message.Message,javax.xml.namespace.QName)",
            "org.apache.cxf.binding.soap.interceptor.RPCInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor:void writeSoapEnvelopeStart(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor:boolean handleHeaderPart(boolean,org.apache.cxf.binding.soap.SoapMessage,java.lang.String)",
            "org.apache.cxf.binding.soap.interceptor.MustUnderstandInterceptor:void initServiceSideInfo(java.util.Set,org.apache.cxf.binding.soap.SoapMessage,java.util.Set)",
            "org.apache.cxf.binding.soap.interceptor.MustUnderstandInterceptor:void buildMustUnderstandHeaders(java.util.Set,org.apache.cxf.binding.soap.SoapMessage,java.util.Set,java.util.Set)",
            "org.apache.cxf.binding.soap.interceptor.MustUnderstandInterceptor:void checkUnderstand(java.util.Set,java.util.Set,java.util.Set)",
            "org.apache.cxf.binding.soap.interceptor.Soap11FaultOutInterceptor$Soap11FaultOutInterceptorInternal:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.EndpointSelectionInterceptor:org.apache.cxf.endpoint.Endpoint selectEndpoint(org.apache.cxf.message.Message,java.util.Set)",
            "org.apache.cxf.binding.soap.interceptor.MustUnderstandInterceptor$UltimateReceiverMustUnderstandInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.SoapHeaderInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.soap.HeaderUtil:java.util.Set getHeaderQNames(org.apache.cxf.service.model.BindingMessageInfo)",
            "org.apache.cxf.binding.soap.SoapTransportFactory:org.apache.cxf.service.model.EndpointInfo createEndpointInfo(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.BindingInfo,javax.wsdl.Port)",
            "org.apache.cxf.binding.soap.SoapTransportFactory:void registerWithBindingManager()",
            "org.apache.cxf.binding.soap.SoapMessage:boolean hasHeader(javax.xml.namespace.QName)",
            "org.apache.cxf.binding.soap.SoapMessage:org.apache.cxf.headers.Header getHeader(javax.xml.namespace.QName)",
            "org.apache.cxf.binding.soap.saaj.SAAJInInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.saaj.SAAJOutInterceptor$SAAJOutEndingInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.model.SoapBindingInfo:org.apache.cxf.service.model.OperationInfo getOperationByAction(java.lang.String)",
            "org.apache.cxf.binding.xml.interceptor.XMLMessageInInterceptor:org.apache.cxf.service.model.BindingOperationInfo getBindingOperationInfo(boolean,javax.xml.namespace.QName,org.apache.cxf.service.model.BindingInfo,javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.binding.xml.XMLFormatValidator:boolean checkXMLBindingFormat()",
            "org.apache.cxf.binding.xml.XMLFormatValidator:boolean checkXMLFormat(org.apache.cxf.service.model.BindingInfo)",
            "org.apache.cxf.binding.xml.XMLFormatValidator:boolean findXMLFormatRootNode(java.util.Iterator,org.apache.cxf.service.model.BindingOperationInfo,java.lang.String)",
            "org.apache.cxf.binding.xml.XMLBindingFactory:org.apache.cxf.service.model.BindingInfo createBindingInfo(org.apache.cxf.service.model.ServiceInfo,java.lang.String,java.lang.Object)",
            "org.apache.cxf.clustering.AbstractStaticFailoverStrategy:java.util.List getAlternateEndpoints(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.tools.common.Tag:java.lang.String formatAttribute(org.apache.cxf.tools.common.Tag)",
            "org.apache.cxf.tools.common.Tag:java.lang.String formatTag(org.apache.cxf.tools.common.Tag,int)",
            "org.apache.cxf.tools.common.Tag:boolean equals(java.lang.Object)",
            "org.apache.cxf.tools.common.ClassUtils:void compile(org.apache.cxf.tools.common.ToolContext)",
            "org.apache.cxf.tools.common.ToolContext:void addParameters(java.util.Map)",
            "org.apache.cxf.tools.common.VelocityGenerator:void doWrite(java.lang.String,java.io.Writer)",
            "org.apache.cxf.tools.common.toolspec.ToolSpec:boolean isValidInputStream(java.lang.String)",
            "org.apache.cxf.tools.common.toolspec.ToolSpec:java.util.List getInstreamIds()",
            "org.apache.cxf.tools.common.toolspec.ToolSpec:java.util.List getOutstreamIds()",
            "org.apache.cxf.tools.common.toolspec.ToolSpec:java.lang.String getStreamRefName(java.lang.String)",
            "org.apache.cxf.tools.common.toolspec.parser.CommandDocument:java.lang.String[] getParameters(java.lang.String)",
            "org.apache.cxf.tools.common.toolspec.parser.CommandDocument:java.lang.String[] getParameterNames()",
            "org.apache.cxf.tools.common.toolspec.parser.Form:void <init>(org.w3c.dom.Element)",
            "org.apache.cxf.tools.common.toolspec.parser.Option:boolean accept(org.apache.cxf.tools.common.toolspec.parser.TokenInputStream,org.w3c.dom.Element,org.apache.cxf.tools.common.toolspec.parser.ErrorVisitor)",
            "org.apache.cxf.tools.common.toolspec.parser.OptionGroup:void <init>(org.w3c.dom.Element)",
            "org.apache.cxf.tools.common.toolspec.parser.OptionGroup:boolean accept(org.apache.cxf.tools.common.toolspec.parser.TokenInputStream,org.w3c.dom.Element,org.apache.cxf.tools.common.toolspec.parser.ErrorVisitor)",
            "org.apache.cxf.tools.common.toolspec.parser.OptionGroup:boolean isSatisfied(org.apache.cxf.tools.common.toolspec.parser.ErrorVisitor)",
            "org.apache.cxf.tools.common.toolspec.parser.ErrorVisitor:java.lang.String toString()",
            "org.apache.cxf.tools.common.toolspec.parser.CommandLineParser:org.apache.cxf.tools.common.toolspec.parser.CommandDocument parseArguments(java.lang.String[])",
            "org.apache.cxf.tools.common.ProcessorTestBase:boolean assertXmlEquals(java.io.File,java.io.File,java.util.List)",
            "org.apache.cxf.tools.common.ProcessorTestBase:void assertAttributesEquals(javax.xml.namespace.QName,java.util.Map,java.util.Map,java.util.Collection)",
            "org.apache.cxf.tools.common.ProcessorTestBase:void assertTagEquals(org.apache.cxf.tools.common.Tag,org.apache.cxf.tools.common.Tag,java.util.List,java.util.List)",
            "org.apache.cxf.tools.common.ProcessorTestBase:org.apache.cxf.tools.common.Tag getFromSource(org.apache.cxf.tools.common.Tag,org.apache.cxf.tools.common.Tag)",
            "org.apache.cxf.tools.common.model.JAnnotation:java.util.Set getImports()",
            "org.apache.cxf.tools.common.model.JAnnotation:org.apache.cxf.tools.common.model.JAnnotationElement getElementByName(java.lang.String)",
            "org.apache.cxf.tools.common.model.JavaMethod:java.lang.String getSignature()",
            "org.apache.cxf.tools.common.model.JavaMethod:void addAnnotation(java.lang.String,org.apache.cxf.tools.common.model.JAnnotation)",
            "org.apache.cxf.tools.common.model.JavaMethod:java.util.List getParameterList(boolean)",
            "org.apache.cxf.tools.common.model.JavaInterface:void addAnnotation(org.apache.cxf.tools.common.model.JAnnotation)",
            "org.apache.cxf.tools.common.model.JavaInterface:void addImports(java.util.Collection)",
            "org.apache.cxf.tools.common.model.JavaInterface:java.lang.String toString()",
            "org.apache.cxf.tools.common.model.JavaField:void addAnnotation(org.apache.cxf.tools.common.model.JAnnotation)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:boolean isSOAPBinding(javax.wsdl.Binding)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:java.lang.String getBindingStyle(javax.wsdl.Binding)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapOperation getSoapOperation(java.util.List)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:java.lang.String getSOAPOperationStyle(javax.wsdl.BindingOperation)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapBody getBindingInputSOAPBody(javax.wsdl.BindingOperation)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapBody getBindingOutputSOAPBody(javax.wsdl.BindingOperation)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapBody getSoapBody(java.util.List)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:java.util.List getSoapHeaders(java.util.List)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapHeader getBindingInputSOAPHeader(javax.wsdl.BindingOperation)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapHeader getBindingOutputSOAPHeader(javax.wsdl.BindingOperation)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:org.apache.cxf.tools.common.extensions.soap.SoapBinding getSoapBinding(java.util.List)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:java.util.List getBindingOperationSoapFaults(javax.wsdl.BindingOperation)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:boolean isMixedStyle(javax.wsdl.Binding)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:java.lang.String getCanonicalBindingStyle(javax.wsdl.Binding)",
            "org.apache.cxf.buslifecycle.CXFBusLifeCycleManager:void initComplete()",
            "org.apache.cxf.buslifecycle.CXFBusLifeCycleManager:void preShutdown()",
            "org.apache.cxf.buslifecycle.CXFBusLifeCycleManager:void postShutdown()",
            "org.apache.cxf.wsdl11.SchemaUtil:void getSchemas(javax.wsdl.Definition,org.apache.cxf.common.xmlschema.SchemaCollection,java.util.List)",
            "org.apache.cxf.wsdl11.SchemaUtil:void extractSchema(javax.wsdl.Definition,org.apache.cxf.common.xmlschema.SchemaCollection,java.util.List)",
            "org.apache.cxf.wsdl11.SchemaUtil:void parseImports(javax.wsdl.Definition,java.util.List)",
            "org.apache.cxf.wsdl11.SchemaUtil:void getSchemaList(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.SchemaUtil:void addSchema(java.lang.String,javax.wsdl.extensions.schema.Schema)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void parseWSDL(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:java.util.Collection getImports(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void parseImports(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void registerWSDLExtensibilityPlugins(javax.wsdl.extensions.ExtensionRegistry)",
            "org.apache.cxf.wsdl11.WSDLServiceUtils:org.apache.cxf.binding.BindingFactory getBindingFactory(javax.wsdl.Binding,org.apache.cxf.Bus,java.lang.StringBuffer)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:javax.wsdl.Definition build(java.util.Map)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addExtensibilityElements(javax.wsdl.extensions.ElementExtensible,java.util.List)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addExtensibilityAttributes(javax.wsdl.extensions.AttributeExtensible,java.util.Map)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildTypes(java.util.Collection,java.util.Map,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBinding(java.util.Collection,java.util.Collection)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBindingOperation(javax.wsdl.Definition,javax.wsdl.Binding,java.util.Collection)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildBindingFault(javax.wsdl.Definition,javax.wsdl.BindingOperation,java.util.Collection)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildService(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildPortTypeOperation(javax.wsdl.PortType,java.util.Collection,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildMessage(javax.wsdl.Message,org.apache.cxf.service.model.AbstractMessageContainer,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void registerInitialExtensions(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:org.apache.cxf.service.model.ServiceSchemaInfo getSchemasForDefinition(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void putSchemasForDefinition(javax.wsdl.Definition,org.apache.cxf.service.model.ServiceSchemaInfo)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void removeDefinition(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void copyExtensors(org.apache.cxf.service.model.AbstractPropertiesHolder,java.util.List)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildMockServices(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition,javax.wsdl.Service,javax.xml.namespace.QName,org.apache.cxf.service.model.DescriptionInfo)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void parseImports(javax.wsdl.Definition,java.util.List)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.EndpointInfo buildEndpoint(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.BindingInfo,javax.wsdl.Port)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.BindingInfo buildBinding(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildInterface(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.PortType)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildInterfaceOperation(org.apache.cxf.service.model.InterfaceInfo,javax.wsdl.Operation)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildMessage(org.apache.cxf.service.model.AbstractMessageContainer,javax.wsdl.Message)",
            "org.apache.cxf.wsdl11.WSDLServiceFactory:org.apache.cxf.service.Service create()",
            "org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor:void insertConstructorArg(org.springframework.beans.factory.config.ConstructorArgumentValues,java.lang.Object)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void activateViaNS(java.lang.String)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void activateAll()",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadFragment(java.io.InputStream)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void processExtension(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadAndRegister(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:java.lang.Object getExtension(java.lang.String,java.lang.Class)",
            "org.apache.cxf.bus.extension.Extension:java.lang.String toString()",
            "org.apache.cxf.bus.CXFBusImpl:void initializeFeatures()",
            "org.apache.cxf.attachment.LazyDataSource:void load()",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:boolean containsValue(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:javax.activation.DataHandler get(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:javax.activation.DataHandler remove(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:void putAll(java.util.Map)",
            "org.apache.cxf.attachment.AttachmentDeserializer:void cacheStreamedAttachments()",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$1$1$1:void <init>(org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$1$1)",
            "org.apache.cxf.attachment.AttachmentSerializer:void writeAttachments()",
            "org.apache.cxf.attachment.AttachmentUtil:java.util.Map getDHMap(java.util.Collection)",
            "org.apache.cxf.attachment.AttachmentUtil:boolean isTypeSupported(java.lang.String,java.util.List)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$3$1:javax.activation.DataHandler next()",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$2$1:java.lang.String next()",
            "org.apache.cxf.frontend.ClientFactoryBean:void applyFeatures()",
            "org.apache.cxf.frontend.SimpleMethodDispatcher:org.apache.cxf.service.model.BindingOperationInfo getBindingOperation(java.lang.reflect.Method,org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory:org.apache.cxf.service.model.BindingInfo createBindingInfo()",
            "org.apache.cxf.frontend.ServerFactoryBean:void initializeServiceFactory()",
            "org.apache.cxf.frontend.ServerFactoryBean:void applyFeatures()",
            "org.apache.cxf.aegis.DatabindingException:java.lang.String getActualMessage()",
            "org.apache.cxf.aegis.util.jdom.StaxSerializer:void writeDocument(org.jdom.Document,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.aegis.util.jdom.StaxSerializer:void writeElement(org.jdom.Element,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.aegis.util.jdom.StaxSerializer:boolean isDeclared(javax.xml.stream.XMLStreamWriter,java.lang.String,java.lang.String)",
            "org.apache.cxf.aegis.util.jdom.StaxBuilder:void buildTree(org.jdom.JDOMFactory,javax.xml.stream.XMLStreamReader,org.jdom.Document)",
            "org.apache.cxf.aegis.util.stax.JDOMStreamReader:void setupNamespaces(org.jdom.Element)",
            "org.apache.cxf.aegis.util.stax.JDOMNamespaceContext:java.lang.String rawGetPrefix(org.jdom.Element,java.lang.String)",
            "org.apache.cxf.aegis.util.stax.JDOMNamespaceContext:void rawGetPrefixes(org.jdom.Element,java.lang.String,java.util.List)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void initialize(org.apache.cxf.service.Service)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void initializeOperation(org.apache.cxf.service.Service,org.apache.cxf.aegis.type.TypeMapping,org.apache.cxf.service.model.OperationInfo,java.util.Set)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void initializeOperationTypes(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void initializeMessage(org.apache.cxf.service.Service,org.apache.cxf.aegis.type.TypeMapping,org.apache.cxf.service.model.AbstractMessageContainer,int,java.util.Set)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void initializeMessageTypes(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.AbstractMessageContainer,int)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void addDependencies(java.util.Set,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void createSchemas(org.apache.cxf.service.Service,java.util.Set)",
            "org.apache.cxf.aegis.AegisContext:void processRootTypes()",
            "org.apache.cxf.aegis.type.basic.XMLBeanTypeInfo:org.w3c.dom.Element getPropertyElement(java.lang.String)",
            "org.apache.cxf.aegis.type.basic.BeanType:void writeObjectInternal(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,boolean)",
            "org.apache.cxf.aegis.type.basic.BeanType:java.util.Set getDependencies()",
            "org.apache.cxf.aegis.type.basic.BeanType:void writeSchema(org.apache.ws.commons.schema.XmlSchema)",
            "org.apache.cxf.aegis.type.basic.BeanTypeInfo:boolean containsPropertyName(java.util.List,java.lang.String)",
            "org.apache.cxf.aegis.type.mtom.AttachmentUtil:org.apache.cxf.message.Attachment getAttachment(java.lang.String,java.util.Collection)",
            "org.apache.cxf.aegis.type.encoded.ArrayTypeInfo:void <init>(javax.xml.namespace.NamespaceContext,java.lang.String,java.lang.String)",
            "org.apache.cxf.aegis.type.encoded.ArrayTypeInfo:java.lang.String toString()",
            "org.apache.cxf.aegis.type.encoded.MarshalRegistry$1:java.lang.Object next()",
            "org.apache.cxf.aegis.type.encoded.SoapArrayType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.SoapArrayType:java.lang.Object makeArray(java.util.List,java.util.List,java.lang.Class)",
            "org.apache.cxf.aegis.type.encoded.TrailingBlocks:java.util.List writeBlocks(org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.SoapRefRegistry:void addInstance(java.lang.String,java.lang.Object)",
            "org.apache.cxf.aegis.type.XMLTypeCreator:org.w3c.dom.Element getBestMatch(org.w3c.dom.Element,java.lang.reflect.Method,java.util.List)",
            "org.apache.cxf.aegis.type.collection.MapType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.collection.CollectionType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.jaxws.JaxWsProxyFactoryBean:boolean needWrapperClassInterceptor(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.jaxws.JaxWsProxyFactoryBean:void buildHandlerChain(org.apache.cxf.jaxws.JaxWsClientProxy)",
            "org.apache.cxf.jaxws.handler.HandlerResolverImpl:java.util.List createHandlerChain(javax.xml.ws.handler.PortInfo)",
            "org.apache.cxf.jaxws.handler.HandlerChainInvoker:void <init>(java.util.List,boolean)",
            "org.apache.cxf.jaxws.handler.HandlerChainInvoker:boolean invokeHandleFault(java.util.List,javax.xml.ws.handler.MessageContext)",
            "org.apache.cxf.jaxws.handler.HandlerChainInvoker:boolean invokeHandleMessage(java.util.List,javax.xml.ws.handler.MessageContext)",
            "org.apache.cxf.jaxws.handler.HandlerChainBuilder:java.util.List buildHandlerChainFromConfiguration(java.util.List)",
            "org.apache.cxf.jaxws.handler.HandlerChainBuilder:java.util.List sortHandlers(java.util.List)",
            "org.apache.cxf.jaxws.handler.HandlerChainBuilder:void configureHandler(javax.xml.ws.handler.Handler,org.apache.cxf.jaxws.javaee.PortComponentHandlerType)",
            "org.apache.cxf.jaxws.handler.soap.SOAPMessageContextImpl:java.lang.Object[] getHeaders(javax.xml.namespace.QName,javax.xml.bind.JAXBContext,boolean)",
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerInterceptor:java.util.Set getUnderstoodHeaders()",
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerInterceptor:javax.xml.ws.handler.MessageContext createProtocolMessageContext(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerFaultInInterceptor:java.util.Set getUnderstoodHeaders()",
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerFaultOutInterceptor:java.util.Set getUnderstoodHeaders()",
            "org.apache.cxf.jaxws.support.JaxWsEndpointImpl:boolean hasUsingAddressing(java.util.List)",
            "org.apache.cxf.jaxws.support.JaxWsEndpointImpl:boolean addressingRequired(java.util.List)",
            "org.apache.cxf.jaxws.support.JaxWsEndpointImpl:javax.xml.ws.soap.AddressingFeature getAddressingFeature()",
            "org.apache.cxf.jaxws.support.JaxWsEndpointImpl:org.apache.cxf.ws.addressing.WSAddressingFeature getWSAddressingFeature()",
            "org.apache.cxf.jaxws.support.JaxWsEndpointImpl:javax.xml.ws.soap.MTOMFeature getMTOMFeature()",
            "org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean:void initializeWSDLOperationsForProvider()",
            "org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean:org.apache.cxf.service.model.FaultInfo getFaultInfo(org.apache.cxf.service.model.OperationInfo,java.lang.Class)",
            "org.apache.cxf.jaxws.support.JaxWsImplementorInfo:java.lang.String getWsdlLocation()",
            "org.apache.cxf.jaxws.support.JaxWsImplementorInfo:javax.xml.namespace.QName getInterfaceName()",
            "org.apache.cxf.jaxws.support.JaxWsImplementorInfo:java.lang.String getImplementorClassName()",
            "org.apache.cxf.jaxws.WrapperClassGenerator:java.util.Set generate()",
            "org.apache.cxf.jaxws.WrapperClassGenerator:void createWrapperClass(org.apache.cxf.service.model.MessagePartInfo,org.apache.cxf.service.model.MessageInfo,org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,boolean)",
            "org.apache.cxf.jaxws.WrapperClassGenerator:void addJAXBAnnotations(org.objectweb.asm.FieldVisitor,java.util.List)",
            "org.apache.cxf.jaxws.JaxWsClientProxy:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])",
            "org.apache.cxf.jaxws.ServiceImpl:void initializePorts()",
            "org.apache.cxf.jaxws.ServiceImpl:org.apache.cxf.jaxws.support.JaxWsClientEndpointImpl getJaxwsEndpoint(javax.xml.namespace.QName,org.apache.cxf.service.factory.AbstractServiceFactoryBean,javax.xml.ws.WebServiceFeature[])",
            "org.apache.cxf.jaxws.ServiceImpl:org.apache.cxf.service.factory.AbstractServiceFactoryBean createDispatchService(org.apache.cxf.databinding.DataBinding)",
            "org.apache.cxf.jaxws.ServiceImpl:java.lang.Object getPort(org.apache.cxf.ws.addressing.EndpointReferenceType,java.lang.Class,javax.xml.ws.WebServiceFeature[])",
            "org.apache.cxf.jaxws.ServiceImpl:javax.xml.ws.Dispatch createDispatch(javax.xml.namespace.QName,java.lang.Class,javax.xml.ws.Service$Mode,javax.xml.ws.WebServiceFeature[])",
            "org.apache.cxf.jaxws.ServiceImpl:javax.xml.ws.Dispatch createDispatch(javax.xml.namespace.QName,javax.xml.bind.JAXBContext,javax.xml.ws.Service$Mode,javax.xml.ws.WebServiceFeature[])",
            "org.apache.cxf.jaxws.spi.ProviderImpl:javax.xml.ws.wsaddressing.W3CEndpointReference createW3CEndpointReference(java.lang.String,javax.xml.namespace.QName,javax.xml.namespace.QName,java.util.List,java.lang.String,java.util.List)",
            "org.apache.cxf.jaxws.JaxWsServerFactoryBean:void buildHandlerChain()",
            "org.apache.cxf.jaxws.DispatchImpl:void addInvokeOperation(boolean)",
            "org.apache.cxf.jaxws.interceptors.MessageModeInInterceptor$MultiPartDataSource:void nextCurrent()",
            "org.apache.cxf.jaxws.interceptors.WebFaultOutInterceptor:org.apache.cxf.service.model.MessagePartInfo getFaultMessagePart(javax.xml.namespace.QName,org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.jaxws.interceptors.HolderOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.interceptors.SwAInInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.jaxws.interceptors.WrapperClassOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.interceptors.WrapperClassOutInterceptor:org.apache.cxf.databinding.WrapperHelper createWrapperHelper(org.apache.cxf.databinding.WrapperCapableDatabinding,org.apache.cxf.service.model.MessageInfo,org.apache.cxf.service.model.MessageInfo,java.lang.Class)",
            "org.apache.cxf.jaxws.interceptors.HolderInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.interceptors.WrapperClassInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.interceptors.WrapperClassInInterceptor:org.apache.cxf.databinding.WrapperHelper createWrapperHelper(org.apache.cxf.databinding.WrapperCapableDatabinding,org.apache.cxf.service.model.MessageInfo,org.apache.cxf.service.model.MessageInfo,java.lang.Class)",
            "org.apache.cxf.jaxws.interceptors.SwAOutInterceptor:void processAttachments(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.binding.soap.model.SoapBodyInfo)",
            "org.apache.cxf.jaxws.binding.http.HTTPBindingImpl:void validate()",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:void copyScoped(java.util.Map)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:void clear()",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:java.util.Set keySet()",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:java.util.Set entrySet()",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:void putAll(java.util.Map)",
            "org.apache.cxf.jaxws.AbstractJAXWSMethodInvoker:java.util.Map removeHandlerProperties(org.apache.cxf.jaxws.context.WrappedMessageContext)",
            "org.apache.cxf.jaxws.AbstractJAXWSMethodInvoker:void addHandlerProperties(org.apache.cxf.jaxws.context.WrappedMessageContext,java.util.Map)",
            "org.apache.cxf.jaxws.AbstractJAXWSMethodInvoker:void updateWebServiceContext(org.apache.cxf.message.Exchange,javax.xml.ws.handler.MessageContext)",
            "org.apache.cxf.xmlbeans.XmlBeansDataBinding:void initialize(org.apache.cxf.service.Service)"
        ]
    },
    "org.apache.cxf.helpers.XMLUtils:void writeTo(javax.xml.transform.Source,java.io.OutputStream,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.XMLUtils:void writeTo(org.w3c.dom.Node,java.io.OutputStream,int)",
            "org.apache.cxf.helpers.XMLUtils:void writeTo(javax.xml.transform.Source,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.helpers.XMLUtils:java.lang.String toString(javax.xml.transform.Source)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.aegis.AegisContext:org.w3c.dom.Document getSchemaDocument(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.AegisContext:org.w3c.dom.Document getAegisTypesSchemaDocument()",
            "org.apache.cxf.aegis.AegisContext:org.w3c.dom.Document getXmimeSchemaDocument()"
        ]
    },
    "org.apache.cxf.helpers.XMLUtils:org.w3c.dom.Document parse(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.staxutils.W3CDOMStreamWriter:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:org.w3c.dom.Document copy(org.w3c.dom.Document)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor$STSInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object)",
            "org.apache.cxf.ws.security.trust.STSClient:org.apache.cxf.ws.security.tokenstore.SecurityToken requestSecurityToken(java.lang.String,java.lang.String,java.lang.String,org.apache.cxf.ws.security.tokenstore.SecurityToken)",
            "org.apache.cxf.ws.security.trust.STSClient:boolean validateSecurityToken(org.apache.cxf.ws.security.tokenstore.SecurityToken,java.lang.String)",
            "org.apache.cxf.ws.security.trust.STSClient:void cancelSecurityToken(org.apache.cxf.ws.security.tokenstore.SecurityToken)",
            "org.apache.cxf.ws.security.tokenstore.SecurityToken:org.w3c.dom.Element cloneElement(org.w3c.dom.Element)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.transform.Source convertToXML(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.bus.spring.TunedDocumentLoader:org.w3c.dom.Document loadFastinfosetDocument(java.net.URL)",
            "org.apache.cxf.jaxws.handler.logical.LogicalMessageImpl:javax.xml.transform.Source getPayload()",
            "org.apache.cxf.jaxws.handler.logical.LogicalMessageImpl:void setPayload(java.lang.Object,javax.xml.bind.JAXBContext)"
        ]
    },
    "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.EndpointReferenceType convertToInternal(javax.xml.ws.EndpointReference)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.ServiceImpl:javax.xml.ws.Dispatch createDispatch(javax.xml.ws.EndpointReference,java.lang.Class,javax.xml.ws.Service$Mode,javax.xml.ws.WebServiceFeature[])",
            "org.apache.cxf.jaxws.ServiceImpl:javax.xml.ws.Dispatch createDispatch(javax.xml.ws.EndpointReference,javax.xml.bind.JAXBContext,javax.xml.ws.Service$Mode,javax.xml.ws.WebServiceFeature[])",
            "org.apache.cxf.jaxws.ServiceImpl:java.lang.Object getPort(javax.xml.ws.EndpointReference,java.lang.Class,javax.xml.ws.WebServiceFeature[])"
        ]
    },
    "org.apache.cxf.common.logging.AbstractDelegatingLogger:void log(java.util.logging.LogRecord)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.logging.LogUtils:void doLog(java.util.logging.Logger,java.util.logging.Level,java.lang.String,java.lang.Throwable)"
        ]
    },
    "org.apache.cxf.common.logging.AbstractDelegatingLogger:void log(java.util.logging.Level,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.injection.ResourceInjector:void injectResourceClassLevel(java.lang.Class,javax.'annotation'.Resource)",
            "org.apache.cxf.jaxb.JAXBUtils:void setNamespaceWrapper(java.util.Map,javax.xml.bind.Marshaller)",
            "org.apache.cxf.management.interceptor.AbstractMessageResponseTimeInterceptor:void increaseCounter(org.apache.cxf.message.Exchange,org.apache.cxf.management.counters.MessageHandlingTimeRecorder)",
            "org.apache.cxf.management.utils.ManagementConsole:void getManagedObjectAttributes(javax.management.ObjectName)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:void finalizeConfig()",
            "org.apache.cxf.transport.http.HTTPConduit:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:void makeTrustDecision(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:void logProtocolHeaders(java.util.logging.Level,org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:void releaseDecoupledDestination()",
            "org.apache.cxf.transport.http.HTTPConduit:void setTlsClientParameters(org.apache.cxf.configuration.jsse.TLSClientParameters)",
            "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection redirectRetransmit(java.net.HttpURLConnection,org.apache.cxf.message.Message,org.apache.cxf.io.CacheAndWriteOutputStream)",
            "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection authorizationRetransmit(java.net.HttpURLConnection,org.apache.cxf.message.Message,org.apache.cxf.io.CacheAndWriteOutputStream)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void setHeaders(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void setupMessage(org.apache.cxf.message.Message,javax.servlet.ServletConfig,javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:java.io.OutputStream flushHeaders(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:java.lang.String getId(java.util.Map)",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponseInternal()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void activate()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void deactivate()",
            "org.apache.cxf.transport.jms.JMSOldConfigHolder:java.util.Properties getInitialContextEnv(org.apache.cxf.transport.jms.AddressType)",
            "org.apache.cxf.transport.jms.JMSOutputStream:java.lang.Object retrieveRequestFromStream(boolean)",
            "org.apache.cxf.transport.jms.JMSDestination:void activate()",
            "org.apache.cxf.transport.jms.JMSDestination:void shutdown()",
            "org.apache.cxf.transport.jms.JMSDestination:void onMessage(javax.jms.Message)",
            "org.apache.cxf.transport.jms.JMSDestination:void sendExchange(org.apache.cxf.message.Exchange,java.lang.Object)",
            "org.apache.cxf.transport.jms.JMSUtils:java.lang.String getEncoding(java.lang.String)",
            "org.apache.cxf.transport.jms.JMSConduit:void sendExchange(org.apache.cxf.message.Exchange,java.lang.Object)",
            "org.apache.cxf.transport.jms.JMSConduit:void onMessage(javax.jms.Message)",
            "org.apache.cxf.transport.jms.JMSConduit:void close()",
            "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:org.apache.cxf.endpoint.Client createClient(java.lang.String,javax.xml.namespace.QName,java.lang.ClassLoader,javax.xml.namespace.QName,java.util.List)",
            "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:void outputDebug(org.apache.cxf.jaxb.JAXBUtils$JCodeModel)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void encode(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.addressing.AddressingPropertiesImpl)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:org.apache.cxf.ws.addressing.AddressingProperties unmarshalMAPs(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void restoreExchange(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.addressing.AddressingProperties)",
            "org.apache.cxf.ws.policy.PolicyUtils:void logPolicy(java.util.logging.Logger,java.util.logging.Level,java.lang.String,org.apache.neethi.PolicyComponent)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void policyNotAsserted(org.apache.cxf.ws.policy.PolicyAssertion,java.lang.Exception)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void policyNotAsserted(org.apache.cxf.ws.policy.PolicyAssertion,java.lang.String)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void policyAsserted(org.apache.cxf.ws.policy.PolicyAssertion)",
            "org.apache.cxf.ws.rm.DestinationSequence:void applyDeliveryAssurance(java.math.BigInteger)",
            "org.apache.cxf.ws.rm.Proxy:void acknowledge(org.apache.cxf.ws.rm.DestinationSequence)",
            "org.apache.cxf.ws.rm.Proxy:void lastMessage(org.apache.cxf.ws.rm.SourceSequence)",
            "org.apache.cxf.ws.rm.Proxy:void ackRequested(org.apache.cxf.ws.rm.SourceSequence)",
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl:void serverResend(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.soap.RMSoapInterceptor:void encode(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.rm.RMProperties)",
            "org.apache.cxf.ws.rm.soap.RMSoapInterceptor:void encodeFault(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.rm.SequenceFault)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.validation.Schema createSchema(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.wsdl.Port getPort(org.apache.cxf.wsdl.WSDLManager,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:org.apache.cxf.transport.MultiplexDestination getMatchingMultiplexDestination(javax.xml.namespace.QName,java.lang.String,org.apache.cxf.Bus)",
            "org.apache.cxf.tools.common.dom.ExtendedDocumentBuilder:void setValidating(boolean)",
            "org.apache.cxf.tools.common.dom.ExtendedDocumentBuilder:javax.xml.parsers.DocumentBuilder getParser()",
            "org.apache.cxf.tools.common.dom.SchemaValidatingSAXParser:void <init>()",
            "org.apache.cxf.tools.common.dom.SchemaValidatingSAXParser:void setValidating(boolean)",
            "org.apache.cxf.tools.common.VelocityGenerator:void initVelocity(boolean)",
            "org.apache.cxf.tools.common.toolspec.parser.CommandLineParser:org.apache.cxf.tools.common.toolspec.parser.CommandDocument parseArguments(java.lang.String[])",
            "org.apache.cxf.tools.common.toolspec.AbstractToolContainer:void init()",
            "org.apache.cxf.tools.common.toolspec.ToolRunner:void runTool(java.lang.Class,java.io.InputStream,boolean,java.lang.String[],boolean,org.apache.cxf.tools.common.ToolContext)",
            "org.apache.cxf.aegis.type.XMLTypeCreator:org.w3c.dom.Document readAegisFile(java.io.InputStream,java.lang.String)",
            "org.apache.cxf.jaxws.handler.HandlerChainInvoker:void <init>(java.util.List,boolean)",
            "org.apache.cxf.jaxws.handler.HandlerChainInvoker:void mepComplete(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.handler.HandlerChainInvoker:boolean invokeHandlerChain(java.util.List,javax.xml.ws.handler.MessageContext)",
            "org.apache.cxf.jaxws.handler.HandlerChainInvoker:boolean invokeHandlerChainHandleFault(java.util.List,javax.xml.ws.handler.MessageContext)",
            "org.apache.cxf.jaxws.handler.HandlerChainInvoker:boolean invokeThisHandler(javax.xml.ws.handler.Handler)",
            "org.apache.cxf.xmlbeans.XmlBeansDataBinding:void initialize(org.apache.cxf.service.Service)",
            "org.apache.cxf.xmlbeans.XmlBeansSchemaInitializer:void mapClass(org.apache.cxf.service.model.MessagePartInfo,java.lang.Class)"
        ]
    },
    "org.apache.cxf.common.logging.AbstractDelegatingLogger:void log(java.util.logging.Level,java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.injection.ResourceInjector:void injectResourceClassLevel(java.lang.Class,javax.'annotation'.Resource)",
            "org.apache.cxf.common.injection.ResourceInjector:void visitField(java.lang.reflect.Field,java.lang.'annotation'.Annotation)",
            "org.apache.cxf.common.injection.ResourceInjector:java.lang.reflect.Method findSetterForResource(javax.'annotation'.Resource)",
            "org.apache.cxf.common.injection.ResourceInjector:void invokeSetter(java.lang.reflect.Method,java.lang.Object)",
            "org.apache.cxf.common.injection.ResourceInjector:void invokePostConstruct()",
            "org.apache.cxf.common.injection.ResourceInjector:void invokePreDestroy()",
            "org.apache.cxf.resource.URIResolver:void tryClasspath(java.lang.String)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureBean(java.lang.String,java.lang.Object,boolean)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine:void shutdown()",
            "org.apache.cxf.transport.jms.JMSDestination$2:javax.jms.Message createMessage(javax.jms.Session)",
            "org.apache.cxf.transport.jms.JMSConduit$1:javax.jms.Message createMessage(javax.jms.Session)",
            "org.apache.cxf.transport.jms.JMSDestination:void onMessage(javax.jms.Message)",
            "org.apache.cxf.transport.jms.JMSDestination:void sendExchange(org.apache.cxf.message.Exchange,java.lang.Object)",
            "org.apache.cxf.transport.jms.JMSConduit:void onMessage(javax.jms.Message)",
            "org.apache.cxf.ws.addressing.ContextUtils:void storeMAPs(org.apache.cxf.ws.addressing.AddressingProperties,org.apache.cxf.message.Message,boolean,boolean,boolean)",
            "org.apache.cxf.ws.addressing.ContextUtils:org.apache.cxf.ws.addressing.AddressingPropertiesImpl retrieveMAPs(org.apache.cxf.message.Message,boolean,boolean,boolean)",
            "org.apache.cxf.ws.addressing.MAPAggregator:org.apache.cxf.ws.addressing.AddressingPropertiesImpl getMAPs(org.apache.cxf.message.Message,boolean,boolean)",
            "org.apache.cxf.ws.addressing.MAPAggregator:boolean validateIncomingMAPs(org.apache.cxf.ws.addressing.AddressingProperties,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void encodeReferenceParameters(org.apache.cxf.ws.addressing.AddressingProperties,org.w3c.dom.Element,javax.xml.bind.Marshaller)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:org.apache.cxf.ws.addressing.AddressingProperties unmarshalMAPs(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void propogateAction(org.apache.cxf.ws.addressing.AttributedURIType,org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.policy.ServerPolicyOutFaultInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.policy.PolicyInInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.policy.PolicyOutInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.policy.ClientPolicyInFaultInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.RMManager:void clientCreated(org.apache.cxf.endpoint.Client)",
            "org.apache.cxf.ws.rm.RMManager:void shutdown()",
            "org.apache.cxf.ws.rm.RMManager:void recoverReliableEndpoint(org.apache.cxf.endpoint.Endpoint,org.apache.cxf.transport.Conduit)",
            "org.apache.cxf.ws.rm.Proxy:java.lang.Object invoke(org.apache.cxf.service.model.OperationInfo,java.lang.Object[],java.util.Map)",
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl$3:void resend(org.apache.cxf.message.Message,boolean)",
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl$ResendCandidate:void initiate(boolean)",
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl:void stop(org.apache.cxf.ws.rm.SourceSequence)",
            "org.apache.cxf.ws.rm.soap.RMSoapInterceptor:org.apache.cxf.ws.rm.RMProperties unmarshalRMProperties(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.rm.soap.RMSoapInterceptor:void encodeProperty(java.lang.Object,javax.xml.namespace.QName,java.lang.Class,org.w3c.dom.Element,javax.xml.bind.Marshaller)",
            "org.apache.cxf.ws.rm.RMEndpoint:void shutdown()",
            "org.apache.cxf.ws.rm.persistence.jdbc.RMTxStore:void init()",
            "org.apache.cxf.ws.rm.persistence.jdbc.RMTxStore:void deleteDatabaseFiles(java.lang.String,boolean)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromClass()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeWSDLOperations()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeWSDLOperation(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void checkServiceClassAnnotations(java.lang.Class)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getWsdlURL()",
            "org.apache.cxf.clustering.AbstractStaticFailoverStrategy:java.util.List getAlternateEndpoints(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.clustering.FailoverTargetSelector:void complete(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.bus.spring.BusEntityResolver:org.xml.sax.InputSource resolveEntity(java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxws.handler.HandlerChainBuilder:java.util.List buildHandlerChain(org.apache.cxf.jaxws.javaee.PortComponentHandlerType,java.lang.ClassLoader)",
            "org.apache.cxf.jaxws.handler.HandlerChainBuilder:void initializeViaInitMethod(javax.xml.ws.handler.Handler,java.util.Map,java.lang.reflect.Method)",
            "org.apache.cxf.jaxws.ServiceImpl:void <init>(org.apache.cxf.Bus,java.net.URL,javax.xml.namespace.QName,java.lang.Class)",
            "org.apache.cxf.jaxws.ServiceImpl:java.lang.Object createPort(javax.xml.namespace.QName,org.apache.cxf.ws.addressing.EndpointReferenceType,java.lang.Class,javax.xml.ws.WebServiceFeature[])"
        ]
    },
    "org.apache.cxf.common.logging.AbstractDelegatingLogger:void log(java.util.logging.Level,java.lang.String,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.injection.ResourceInjector:void visitMethod(java.lang.reflect.Method,java.lang.'annotation'.Annotation)",
            "org.apache.cxf.common.injection.ResourceInjector:void invokeSetter(java.lang.reflect.Method,java.lang.Object)",
            "org.apache.cxf.jaxb.JAXBDataBinding:void initialize(org.apache.cxf.service.Service)",
            "org.apache.cxf.management.jmx.MBServerConnectorFactory:void createConnector()",
            "org.apache.cxf.management.jmx.InstrumentationManagerImpl:void init()",
            "org.apache.cxf.management.jmx.InstrumentationManagerImpl:void shutdown()",
            "org.apache.cxf.management.jmx.InstrumentationManagerImpl:void postShutdown()",
            "org.apache.cxf.management.jmx.MBServerConnectorFactory$1:void run()",
            "org.apache.cxf.management.utils.ManagementConsole:void listAllManagedEndpoint()",
            "org.apache.cxf.management.utils.ManagementConsole:void invokeEndpoint(java.lang.String)",
            "org.apache.cxf.management.utils.ManagementConsole:void doManagement()",
            "org.apache.cxf.management.counters.CounterRepository:org.apache.cxf.management.counters.Counter createCounter(javax.management.ObjectName,org.apache.cxf.management.counters.MessageHandlingTimeRecorder)",
            "org.apache.cxf.transport.servlet.CXFServlet:void loadBus(javax.servlet.ServletConfig)",
            "org.apache.cxf.transport.servlet.CXFServlet:void loadAdditionalConfig(org.springframework.context.ApplicationContext,javax.servlet.ServletConfig)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine:void addServant(java.net.URL,org.apache.cxf.transport.http_jetty.JettyHTTPHandler)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine:void setReuseAddress(org.mortbay.jetty.Connector)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine:void removeServant(java.net.URL)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine createJettyHTTPServerEngine(int,java.lang.String)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void encodeAsExposed(org.apache.cxf.ws.addressing.AddressingPropertiesImpl,org.apache.cxf.binding.soap.SoapMessage,java.lang.Object,javax.xml.namespace.QName,java.lang.Class,org.w3c.dom.Element,javax.xml.bind.Marshaller)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:java.lang.Object decodeAsNative(java.lang.String,java.lang.Class,org.w3c.dom.Element,javax.xml.bind.Unmarshaller)",
            "org.apache.cxf.ws.rm.RMManager:void recoverReliableEndpoint(org.apache.cxf.endpoint.Endpoint,org.apache.cxf.transport.Conduit)",
            "org.apache.cxf.ws.rm.persistence.jdbc.RMTxStore:void storeMessage(org.apache.cxf.ws.rm.Identifier,org.apache.cxf.ws.rm.persistence.RMMessage,boolean)",
            "org.apache.cxf.ws.rm.persistence.jdbc.RMTxStore:void deleteDatabaseFiles(java.lang.String,boolean)",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void <init>(int,int,int,int,long,java.lang.String)",
            "org.apache.cxf.wsdl.JAXBExtensionHelper:void addExtensions(javax.wsdl.extensions.ExtensionRegistry,java.lang.Class,java.lang.Class,java.lang.String)",
            "org.apache.cxf.service.invoker.AbstractInvoker:void checkSuspendedInvocation(org.apache.cxf.message.Exchange,java.lang.Object,java.lang.reflect.Method,java.util.List,java.lang.Throwable)",
            "org.apache.cxf.service.invoker.AbstractInvoker:java.lang.Object performInvocation(org.apache.cxf.message.Exchange,java.lang.Object,java.lang.reflect.Method,java.lang.Object[])",
            "org.apache.cxf.clustering.AbstractStaticFailoverStrategy:java.util.List getAlternateEndpoints(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.clustering.AbstractStaticFailoverStrategy:org.apache.cxf.endpoint.Endpoint selectAlternateEndpoint(java.util.List)",
            "org.apache.cxf.clustering.FailoverTargetSelector:void setStrategy(org.apache.cxf.clustering.FailoverStrategy)",
            "org.apache.cxf.clustering.FailoverTargetSelector:org.apache.cxf.clustering.FailoverStrategy getStrategy()",
            "org.apache.cxf.clustering.FailoverTargetSelector:boolean requiresFailover(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean:void initializeWSDLOperationsForProvider()",
            "org.apache.cxf.jaxws.support.JaxWsServiceConfiguration:java.lang.Class getResponseWrapper(java.lang.reflect.Method)",
            "org.apache.cxf.jaxws.support.JaxWsServiceConfiguration:java.lang.Class getRequestWrapper(java.lang.reflect.Method)"
        ]
    },
    "org.apache.cxf.common.logging.AbstractDelegatingLogger:void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.injection.ResourceInjector:void invokePostConstruct()",
            "org.apache.cxf.common.injection.ResourceInjector:void invokePreDestroy()",
            "org.apache.cxf.jaxb.JAXBUtils:void setNamespaceWrapper(java.util.Map,javax.xml.bind.Marshaller)",
            "org.apache.cxf.jaxb.io.DataWriterImpl:javax.xml.bind.Marshaller createMarshaller(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.jaxb.io.DataReaderImpl:javax.xml.bind.Unmarshaller createUnmarshaller()",
            "org.apache.cxf.management.interceptor.AbstractMessageResponseTimeInterceptor:void increaseCounter(org.apache.cxf.message.Exchange,org.apache.cxf.management.counters.MessageHandlingTimeRecorder)",
            "org.apache.cxf.interceptor.FaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:void makeTrustDecision(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:void setUpDecoupledDestination()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void doService(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.endpoint.ServerImpl:void initDestination(org.apache.cxf.transport.DestinationFactory)",
            "org.apache.cxf.ws.addressing.ContextUtils:void rebaseResponse(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.ws.addressing.AddressingProperties,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void encode(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.addressing.AddressingPropertiesImpl)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:org.apache.cxf.ws.addressing.AddressingProperties unmarshalMAPs(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.trust.STSClient:void cancelSecurityToken(org.apache.cxf.ws.security.tokenstore.SecurityToken)",
            "org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.rm.Proxy:java.lang.Object invoke(org.apache.cxf.service.model.OperationInfo,java.lang.Object[],java.util.Map)",
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl$3:void resend(org.apache.cxf.message.Message,boolean)",
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl$ResendCandidate:void initiate(boolean)",
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl$ResendCandidate:void schedule()",
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl:void resend(org.apache.cxf.transport.Conduit,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.soap.RMSoapInterceptor:void encode(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.rm.RMProperties)",
            "org.apache.cxf.ws.rm.soap.RMSoapInterceptor:void encodeFault(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.rm.SequenceFault)",
            "org.apache.cxf.ws.rm.soap.RMSoapInterceptor:org.apache.cxf.ws.rm.RMProperties unmarshalRMProperties(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.rm.persistence.jdbc.RMTxStore:java.util.Collection getDestinationSequences(java.lang.String)",
            "org.apache.cxf.ws.rm.persistence.jdbc.RMTxStore:java.util.Collection getSourceSequences(java.lang.String)",
            "org.apache.cxf.ws.rm.persistence.jdbc.RMTxStore:java.util.Collection getMessages(org.apache.cxf.ws.rm.Identifier,boolean)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void unwind(org.apache.cxf.message.Message)",
            "org.apache.cxf.workqueue.WorkQueueManagerImpl:void register()",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void register()",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.validation.Schema createSchema(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.tools.common.dom.ExtendedDocumentBuilder:void setValidating(boolean)",
            "org.apache.cxf.tools.common.dom.SchemaValidatingSAXParser:void setValidating(boolean)",
            "org.apache.cxf.tools.common.toolspec.parser.CommandLineParser:org.apache.cxf.tools.common.toolspec.parser.CommandDocument parseArguments(java.lang.String[])",
            "org.apache.cxf.tools.common.toolspec.parser.CommandLineParser:void throwUsage(org.apache.cxf.tools.common.toolspec.parser.ErrorVisitor)",
            "org.apache.cxf.catalog.OASISCatalogManager:void loadContextCatalogs(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void registerWSDLExtensibilityPlugins(javax.wsdl.extensions.ExtensionRegistry)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void registerInitialExtensions(java.lang.String)",
            "org.apache.cxf.aegis.type.XMLTypeCreator:org.w3c.dom.Document readAegisFile(java.io.InputStream,java.lang.String)",
            "org.apache.cxf.aegis.type.XMLTypeCreator:org.w3c.dom.Document getDocument(java.lang.Class)",
            "org.apache.cxf.aegis.type.XMLTypeCreator:void <clinit>()",
            "org.apache.cxf.aegis.type.XMLTypeCreator$1:void error(org.xml.sax.SAXParseException)",
            "org.apache.cxf.aegis.type.XMLTypeCreator$1:void fatalError(org.xml.sax.SAXParseException)",
            "org.apache.cxf.aegis.type.XMLTypeCreator$1:void warning(org.xml.sax.SAXParseException)",
            "org.apache.cxf.jaxws.handler.HandlerChainInvoker:boolean invokeHandleFault(java.util.List,javax.xml.ws.handler.MessageContext)",
            "org.apache.cxf.jaxws.handler.HandlerChainInvoker:boolean invokeHandleMessage(java.util.List,javax.xml.ws.handler.MessageContext)",
            "org.apache.cxf.jaxws.handler.HandlerChainInvoker:boolean invokeReversedHandleFault(javax.xml.ws.handler.MessageContext)",
            "org.apache.cxf.jaxws.support.ServiceDelegateAccessor:org.apache.cxf.jaxws.ServiceImpl get(javax.xml.ws.Service)",
            "org.apache.cxf.jaxws.interceptors.WebFaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.common.logging.AbstractDelegatingLogger:void logp(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void entering(java.lang.String,java.lang.String)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void entering(java.lang.String,java.lang.String,java.lang.Object[])",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void exiting(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.common.logging.AbstractDelegatingLogger:void logp(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.logging.AbstractDelegatingLogger:void logp(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void entering(java.lang.String,java.lang.String,java.lang.Object)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void entering(java.lang.String,java.lang.String,java.lang.Object[])",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void exiting(java.lang.String,java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.cxf.common.logging.AbstractDelegatingLogger:void logp(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.logging.AbstractDelegatingLogger:void throwing(java.lang.String,java.lang.String,java.lang.Throwable)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.logging.AbstractDelegatingLogger:void severe(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:void setElementQName(org.apache.ws.commons.schema.XmlSchemaElement,javax.xml.namespace.QName)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:void setElementName(org.apache.ws.commons.schema.XmlSchemaElement,java.lang.String)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:void setElementRefName(org.apache.ws.commons.schema.XmlSchemaElement,javax.xml.namespace.QName)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:void unsupportedConstruct(java.lang.String,java.lang.String,javax.xml.namespace.QName,org.apache.ws.commons.schema.XmlSchemaObject)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:void unsupportedConstruct(java.lang.String,org.apache.ws.commons.schema.XmlSchemaType)",
            "org.apache.cxf.common.injection.ResourceInjector:void injectField(java.lang.reflect.Field,java.lang.Object)",
            "org.apache.cxf.configuration.jsse.spring.TLSParameterJaxBUtils:java.security.KeyStore getKeyStore(org.apache.cxf.configuration.security.KeyStoreType)",
            "org.apache.cxf.configuration.jsse.spring.TLSParameterJaxBUtils:java.security.KeyStore getKeyStore(org.apache.cxf.configuration.security.CertStoreType)",
            "org.apache.cxf.staxutils.StaxUtils:void printXmlFragment(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.ws.rm.Servant:void terminateSequence(org.apache.cxf.message.Message)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void fillInSchemaCrossreferences()",
            "org.apache.cxf.tools.common.toolspec.parser.Option:boolean accept(org.apache.cxf.tools.common.toolspec.parser.TokenInputStream,org.w3c.dom.Element,org.apache.cxf.tools.common.toolspec.parser.ErrorVisitor)",
            "org.apache.cxf.jaxws.handler.InitParamResourceResolver:java.lang.Object convertToType(java.lang.String,java.lang.Class)"
        ]
    },
    "org.apache.cxf.common.logging.AbstractDelegatingLogger:void warning(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.UrlUtils:java.lang.String urlDecode(java.lang.String)",
            "org.apache.cxf.jaxb.JAXBEncoderDecoder:void marshallException(javax.xml.bind.Marshaller,java.lang.Exception,org.apache.cxf.service.model.MessagePartInfo,java.lang.Object)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:org.apache.cxf.message.MessageContentsList getParameters(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.lang.String uriDecode(java.lang.String)",
            "org.apache.cxf.transport.servlet.ServletController:void invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:org.apache.cxf.message.MessageImpl retrieveFromContinuation(javax.servlet.http.HttpServletRequest)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine:void retrieveListenerFactory()",
            "org.apache.cxf.endpoint.AbstractConduitSelector:org.apache.cxf.transport.Conduit getSelectedConduit(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.policy.AssertionBuilderRegistryImpl:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor:java.lang.String getAction(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.binding.soap.SoapVersion)",
            "org.apache.cxf.ws.security.wss4j.WSS4JOutInterceptor$WSS4JOutInterceptorInternal:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.rm.SequenceMonitor:void setMonitorInterval(long)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils$SchemaLSResourceResolver:org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean$1:boolean handleError(org.w3c.dom.DOMError)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromClass()",
            "org.apache.cxf.clustering.AbstractStaticFailoverStrategy:org.apache.cxf.endpoint.Endpoint selectAlternateEndpoint(java.util.List)",
            "org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory:org.apache.cxf.endpoint.Endpoint createEndpoint()",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void initialize(org.apache.cxf.service.Service)",
            "org.apache.cxf.aegis.type.TypeUtil:org.apache.cxf.aegis.type.Type getReadType(javax.xml.stream.XMLStreamReader,org.apache.cxf.aegis.AegisContext,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.TypeUtil:org.apache.cxf.aegis.type.Type getReadTypeStandalone(javax.xml.stream.XMLStreamReader,org.apache.cxf.aegis.AegisContext,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.DefaultTypeMapping:void register(org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.jaxws.WrapperClassGenerator:java.util.Set generate()"
        ]
    },
    "org.apache.cxf.common.logging.AbstractDelegatingLogger:void info(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.commands.ForkedCommand:int execute(int)",
            "org.apache.cxf.management.jmx.MBServerConnectorFactory:void createConnector()",
            "org.apache.cxf.management.jmx.MBServerConnectorFactory:void destroy()",
            "org.apache.cxf.staxutils.StaxUtils:void printXmlFragment(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.util.Map keepInOrder(java.util.Map,org.apache.cxf.service.model.OperationInfo,java.util.List)",
            "org.apache.cxf.interceptor.PrettyLoggingOutInterceptor$LoggingCallback:void onClose(org.apache.cxf.io.CachedOutputStream)",
            "org.apache.cxf.interceptor.LoggingOutInterceptor$LoggingCallback:void onClose(org.apache.cxf.io.CachedOutputStream)",
            "org.apache.cxf.interceptor.LoggingInInterceptor:void logging(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:void setUpDecoupledDestination()",
            "org.apache.cxf.transport.servlet.CXFNonSpringServlet:void loadBusNoConfig(javax.servlet.ServletConfig)",
            "org.apache.cxf.transport.servlet.CXFServlet:void updateContext(javax.servlet.ServletConfig,org.springframework.context.ApplicationContext)",
            "org.apache.cxf.transport.servlet.AbstractCXFServlet:void replaceDestinationFactory()",
            "org.apache.cxf.transport.jms.JMSFactory:org.springframework.jms.listener.DefaultMessageListenerContainer createJmsListener(org.apache.cxf.transport.jms.JMSConfiguration,javax.jms.MessageListener,java.lang.String,java.lang.String,boolean)",
            "org.apache.cxf.endpoint.ServerImpl:void initDestination(org.apache.cxf.transport.DestinationFactory)",
            "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:void addSchemas(java.lang.String,java.util.Collection,org.apache.cxf.jaxb.JAXBUtils$SchemaCompiler)",
            "org.apache.cxf.ws.rm.RMInInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.soap.RMSoapInterceptor:void updateServiceModelInfo(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.rm.persistence.jdbc.RMTxStore:void createDestinationSequence(org.apache.cxf.ws.rm.DestinationSequence)",
            "org.apache.cxf.ws.rm.persistence.jdbc.RMTxStore:java.util.Collection getDestinationSequences(java.lang.String)",
            "org.apache.cxf.ws.rm.persistence.jdbc.RMTxStore:java.util.Collection getSourceSequences(java.lang.String)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromWSDL(java.lang.String)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromClass()",
            "org.apache.cxf.binding.soap.interceptor.Soap12FaultOutInterceptor$Soap12FaultOutInterceptorInternal:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.clustering.FailoverTargetSelector:void complete(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.tools.common.toolspec.ToolSupport:void init()",
            "org.apache.cxf.tools.common.toolspec.ToolSupport:void performFunction()",
            "org.apache.cxf.tools.common.toolspec.ToolSupport:void destroy()",
            "org.apache.cxf.tools.common.toolspec.parser.CommandLineParser:org.apache.cxf.tools.common.toolspec.parser.CommandDocument parseArguments(java.lang.String[])",
            "org.apache.cxf.jaxws.EndpointUtils:boolean isValidImplementor(java.lang.Object)"
        ]
    },
    "org.apache.cxf.common.logging.AbstractDelegatingLogger:void config(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.logging.AbstractDelegatingLogger:void fine(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.XMLUtils:org.w3c.dom.Document parse(java.io.InputStream)",
            "org.apache.cxf.helpers.XMLUtils:org.w3c.dom.Document parse(byte[])",
            "org.apache.cxf.common.commands.ForkedCommand:int execute(int)",
            "org.apache.cxf.common.logging.LogUtils:void <clinit>()",
            "org.apache.cxf.resource.DefaultResourceManager:java.lang.Object findResource(java.lang.String,java.lang.Class,boolean,java.util.List)",
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void addBusWiringAttribute(org.springframework.beans.factory.support.BeanDefinitionBuilder,org.apache.cxf.configuration.spring.BusWiringType)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureBean(java.lang.String,java.lang.Object,boolean)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.WrappedInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:org.apache.cxf.interceptor.InterceptorChain getOutInterceptorChain(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:org.apache.cxf.phase.PhaseInterceptorChain getChain(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.interceptor.BareInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AttachmentInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:void setURLRequestHeaders(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection retransmit(java.net.HttpURLConnection,java.net.URL,org.apache.cxf.message.Message,org.apache.cxf.io.CacheAndWriteOutputStream)",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleRetransmits()",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponseInternal()",
            "org.apache.cxf.transport.http.gzip.GZIPOutInterceptor$GZipThresholdOutputStream:void thresholdNotReached()",
            "org.apache.cxf.transport.http.gzip.GZIPOutInterceptor$GZipThresholdOutputStream:void thresholdReached()",
            "org.apache.cxf.transport.http.gzip.GZIPOutInterceptor:org.apache.cxf.transport.http.gzip.GZIPOutInterceptor$UseGzip gzipPermitted(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.gzip.GZIPInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.AbstractObservable:void setMessageObserver(org.apache.cxf.transport.MessageObserver)",
            "org.apache.cxf.transport.servlet.ServletController:void invokeDestination(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.cxf.transport.servlet.ServletDestination)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void serviceRequest(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine:void retrieveListenerFactory()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine createJettyHTTPServerEngine(int,java.lang.String)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void destroyForPort(int)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] processResult(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,java.util.Map)",
            "org.apache.cxf.endpoint.ClientImpl:void setContext(java.util.Map,org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ClientImpl:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ClientImpl:org.apache.cxf.phase.PhaseInterceptorChain setupInterceptorChain(org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.endpoint.ServerImpl:void start()",
            "org.apache.cxf.endpoint.ServerImpl:void stop()",
            "org.apache.cxf.ws.addressing.ContextUtils:org.apache.cxf.ws.addressing.AttributedURIType getAction(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.addressing.ContextUtils:java.lang.String getActionFromServiceModel(org.apache.cxf.message.Message,java.lang.Exception)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void restoreExchange(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.addressing.AddressingProperties)",
            "org.apache.cxf.ws.addressing.soap.VersionTransformer:java.lang.Object decodeAsNative(java.lang.String,java.lang.Class,org.w3c.dom.Element,javax.xml.bind.Unmarshaller)",
            "org.apache.cxf.ws.policy.builder.jaxb.JaxbAssertionBuilder:java.lang.Object getData(org.w3c.dom.Element)",
            "org.apache.cxf.ws.policy.ServerPolicyOutFaultInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.policy.PolicyInInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.policy.PolicyOutInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:boolean supportsAlternative(java.util.Collection,org.apache.cxf.ws.policy.Assertor)",
            "org.apache.cxf.ws.policy.PolicyVerificationInInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.policy.PolicyVerificationOutInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.policy.PolicyVerificationInFaultInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.policy.ClientPolicyInFaultInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.wss4j.WSS4JOutInterceptor$WSS4JOutInterceptorInternal:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.rm.AbstractRMInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.Servant:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object)",
            "org.apache.cxf.ws.rm.Servant:org.apache.cxf.ws.rm.CreateSequenceResponseType createSequence(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.Servant:void createSequenceResponse(org.apache.cxf.ws.rm.CreateSequenceResponseType)",
            "org.apache.cxf.ws.rm.Servant:void terminateSequence(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.DestinationSequence:void acknowledge(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.DestinationSequence:void scheduleAcknowledgement(long)",
            "org.apache.cxf.ws.rm.DestinationSequence:void scheduleDeferredAcknowledgement(long)",
            "org.apache.cxf.ws.rm.SourceSequence:void checkLastMessage(org.apache.cxf.ws.rm.Identifier,java.math.BigInteger)",
            "org.apache.cxf.ws.rm.RMInInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.DestinationSequence$DeferredAcknowledgment:void run()",
            "org.apache.cxf.ws.rm.RMOutInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.RMOutInterceptor:void addAcknowledgements(org.apache.cxf.ws.rm.Destination,org.apache.cxf.ws.rm.RMProperties,org.apache.cxf.ws.rm.Identifier,org.apache.cxf.ws.addressing.v200408.AttributedURI)",
            "org.apache.cxf.ws.rm.RMManager:org.apache.cxf.ws.rm.RMEndpoint getReliableEndpoint(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.Proxy:void createSequenceResponse(org.apache.cxf.ws.rm.CreateSequenceResponseType)",
            "org.apache.cxf.ws.rm.Proxy:org.apache.cxf.ws.rm.CreateSequenceResponseType createSequence(org.apache.cxf.ws.addressing.v200408.EndpointReferenceType,org.apache.cxf.ws.addressing.RelatesToType,boolean)",
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl$2:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl:void purgeAcknowledged(org.apache.cxf.ws.rm.SourceSequence)",
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl:void start()",
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl:org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl$ResendCandidate cacheUnacknowledged(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl:void serverResend(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl:void resend(org.apache.cxf.transport.Conduit,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.soap.RMSoapInterceptor:void updateServiceModelInfo(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.rm.persistence.jdbc.RMTxStore:void createSourceSequence(org.apache.cxf.ws.rm.SourceSequence)",
            "org.apache.cxf.ws.rm.persistence.jdbc.RMTxStore:void createTables()",
            "org.apache.cxf.phase.PhaseInterceptorChain:void add(org.apache.cxf.interceptor.Interceptor,boolean)",
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void unwind(org.apache.cxf.message.Message)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void outputChainToLog(boolean)",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void <init>(int,int,int,int,long,java.lang.String)",
            "org.apache.cxf.databinding.stax.StaxDataBindingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromClass()",
            "org.apache.cxf.binding.soap.interceptor.ReadHeadersInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.RPCInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.xml.interceptor.XMLMessageInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.tools.common.dom.ExtendedDocumentBuilder:org.w3c.dom.Document parse(java.io.InputStream)",
            "org.apache.cxf.tools.common.toolspec.ToolSpec:java.lang.String getParameterDefault(java.lang.String)",
            "org.apache.cxf.tools.common.toolspec.parser.CommandDocument:java.lang.String getParameter(java.lang.String)",
            "org.apache.cxf.tools.common.toolspec.parser.CommandDocument:java.lang.String[] getParameters(java.lang.String)",
            "org.apache.cxf.tools.common.toolspec.parser.TokenInputStream:java.lang.String read()",
            "org.apache.cxf.tools.common.toolspec.parser.TokenInputStream:java.lang.String peek()",
            "org.apache.cxf.tools.common.toolspec.parser.Form:boolean accept(org.apache.cxf.tools.common.toolspec.parser.TokenInputStream,org.w3c.dom.Element,org.apache.cxf.tools.common.toolspec.parser.ErrorVisitor)",
            "org.apache.cxf.tools.common.toolspec.parser.Option:boolean accept(org.apache.cxf.tools.common.toolspec.parser.TokenInputStream,org.w3c.dom.Element,org.apache.cxf.tools.common.toolspec.parser.ErrorVisitor)",
            "org.apache.cxf.tools.common.toolspec.parser.Option:boolean isSatisfied(org.apache.cxf.tools.common.toolspec.parser.ErrorVisitor)",
            "org.apache.cxf.tools.common.toolspec.parser.OptionGroup:boolean accept(org.apache.cxf.tools.common.toolspec.parser.TokenInputStream,org.w3c.dom.Element,org.apache.cxf.tools.common.toolspec.parser.ErrorVisitor)",
            "org.apache.cxf.tools.common.toolspec.parser.ErrorVisitor:void add(org.apache.cxf.tools.common.toolspec.parser.CommandLineError)",
            "org.apache.cxf.tools.common.toolspec.parser.CommandLineParser:org.apache.cxf.tools.common.toolspec.parser.CommandDocument parseArguments(java.lang.String[])",
            "org.apache.cxf.tools.common.toolspec.parser.Argument:boolean accept(org.apache.cxf.tools.common.toolspec.parser.TokenInputStream,org.w3c.dom.Element,org.apache.cxf.tools.common.toolspec.parser.ErrorVisitor)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void registerWSDLExtensibilityPlugins(javax.wsdl.extensions.ExtensionRegistry)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void registerInitialExtensions(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.BindingInfo buildBinding(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding)",
            "org.apache.cxf.bus.spring.BusApplicationContext:org.springframework.core.io.Resource[] getConfigResources()",
            "org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor:void postProcessBeanFactory(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)",
            "org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory:void initializeAnnotationInterceptors(org.apache.cxf.endpoint.Endpoint,java.lang.Class)",
            "org.apache.cxf.jaxws.handler.AnnotationHandlerChainBuilder:java.util.List buildHandlerChainFromClass(java.lang.Class,java.util.List,javax.xml.namespace.QName,javax.xml.namespace.QName,java.lang.String)",
            "org.apache.cxf.jaxws.handler.AnnotationHandlerChainBuilder:org.apache.cxf.jaxws.handler.AnnotationHandlerChainBuilder$HandlerChainAnnotation findHandlerChainAnnotation(java.lang.Class,boolean)",
            "org.apache.cxf.jaxws.handler.HandlerChainBuilder:java.util.List buildHandlerChain(org.apache.cxf.jaxws.javaee.PortComponentHandlerType,java.lang.ClassLoader)",
            "org.apache.cxf.jaxws.interceptors.WebFaultOutInterceptor:java.lang.Object createFaultInfoBean(javax.xml.ws.WebFault,java.lang.Throwable)",
            "org.apache.cxf.jaxws.interceptors.HolderOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.interceptors.WrapperClassInInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.common.logging.AbstractDelegatingLogger:void finer(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.logging.AbstractDelegatingLogger:void finest(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.PolicyOutInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.aegis.type.basic.XMLBeanTypeInfo:void mapProperty(java.beans.PropertyDescriptor)",
            "org.apache.cxf.aegis.type.basic.ArrayType:org.apache.cxf.aegis.type.Type getComponentType()",
            "org.apache.cxf.aegis.type.encoded.SoapArrayType:org.apache.cxf.aegis.type.Type getComponentType()",
            "org.apache.cxf.aegis.type.XMLTypeCreator:org.w3c.dom.Document getDocument(java.lang.Class)",
            "org.apache.cxf.aegis.type.TypeUtil:org.apache.cxf.aegis.type.Type getReadType(javax.xml.stream.XMLStreamReader,org.apache.cxf.aegis.AegisContext,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.xmlbeans.XmlBeansSchemaInitializer:void begin(org.apache.cxf.service.model.MessagePartInfo)"
        ]
    },
    "org.apache.cxf.common.logging.AbstractDelegatingLogger:void logrb(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.logging.AbstractDelegatingLogger:void logrb(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.logging.AbstractDelegatingLogger:void logrb(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.logging.AbstractDelegatingLogger:void logrb(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.http.spring.HttpDestinationBeanDefinitionParser:void doParse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void doParse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.frontend.spring.ServerFactoryBeanDefinitionParser:void doParse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder)"
        ]
    },
    "org.apache.cxf.jaxb.JAXBDataBinding:org.apache.cxf.databinding.WrapperHelper compileWrapperHelper(java.lang.Class,java.lang.reflect.Method[],java.lang.reflect.Method[],java.lang.reflect.Method[],java.lang.reflect.Field[],java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.JAXBDataBinding:org.apache.cxf.databinding.WrapperHelper createWrapperHelper(java.lang.Class,java.lang.reflect.Method[],java.lang.reflect.Method[],java.lang.reflect.Method[],java.lang.reflect.Field[],java.lang.Object)"
        ]
    },
    "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JOutInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.ws.security.wss4j.WSS4JOutInterceptor$WSS4JOutInterceptorInternal:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.binding.soap.interceptor.Soap12FaultInInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.binding.soap.interceptor.Soap11FaultInInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor$SoapOutEndingInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.binding.soap.saaj.SAAJOutInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.message.ExchangeImpl:org.apache.cxf.transport.Conduit getConduit(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:org.apache.cxf.transport.Conduit getBackChannelConduit(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.MessageSenderInterceptor:org.apache.cxf.transport.Conduit getConduit(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.addressing.ContextUtils:org.apache.cxf.transport.Conduit getConduit(org.apache.cxf.transport.Conduit,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.policy.PolicyInInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.policy.PolicyOutInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.policy.ClientPolicyInFaultInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.policy.AbstractPolicyInterceptor:void getTransportAssertions(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.RMManager:org.apache.cxf.ws.rm.RMEndpoint getReliableEndpoint(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.RMManager:org.apache.cxf.ws.rm.SourceSequence getSequence(org.apache.cxf.ws.rm.Identifier,org.apache.cxf.message.Message,org.apache.cxf.ws.addressing.AddressingProperties)",
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl:void clientResend(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl$1:org.apache.cxf.transport.Conduit selectConduit(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.message.ExchangeImpl:org.apache.cxf.transport.Conduit getConduit(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ClientImpl:org.apache.cxf.transport.Conduit getConduit()",
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl:void serverResend(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.ws.rm.Proxy$2:org.apache.cxf.transport.Conduit selectConduit(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.message.ExchangeImpl:org.apache.cxf.transport.Conduit getConduit(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ClientImpl:org.apache.cxf.transport.Conduit getConduit()"
        ]
    },
    "org.apache.cxf.ws.rm.SourceSequence:java.math.BigInteger nextMessageNumber()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.binding.soap.interceptor.Soap11FaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.binding.soap.interceptor.Soap12FaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.http.DigestAuthSupplier:java.lang.String getPassword(org.apache.cxf.transport.http.HTTPConduit,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.DigestAuthSupplier:java.lang.String getAuthorizationForRealm(org.apache.cxf.transport.http.HTTPConduit,java.net.URL,org.apache.cxf.message.Message,java.lang.String,java.lang.String)",
            "org.apache.cxf.transport.http.DigestAuthSupplier:java.lang.String getPreemptiveAuthorization(org.apache.cxf.transport.http.HTTPConduit,java.net.URL,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.http.DigestAuthSupplier:java.lang.String getUsername(org.apache.cxf.transport.http.HTTPConduit,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.DigestAuthSupplier:java.lang.String getAuthorizationForRealm(org.apache.cxf.transport.http.HTTPConduit,java.net.URL,org.apache.cxf.message.Message,java.lang.String,java.lang.String)",
            "org.apache.cxf.transport.http.DigestAuthSupplier:java.lang.String getPreemptiveAuthorization(org.apache.cxf.transport.http.HTTPConduit,java.net.URL,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.xmlbeans.DataReaderImpl:java.lang.Object read(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.stax.StaxDataBindingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.soap.interceptor.ReadHeadersInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.saaj.SAAJInInterceptor:void replaceHeaders(javax.xml.soap.SOAPMessage,org.apache.cxf.binding.soap.SoapMessage)"
        ]
    },
    "org.apache.cxf.management.interceptor.ResponseTimeMessageOutInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.management.interceptor.ResponseTimeMessageOutInterceptor:void handleFault(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:void unwind(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.management.interceptor.ResponseTimeMessageInvokerInterceptor:void handleFault(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:void unwind(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.management.interceptor.ResponseTimeMessageInInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.management.interceptor.ResponseTimeMessageInInterceptor:void handleFault(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:void unwind(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.management.interceptor.ResponseTimeMessageInvokerInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.servlet.CXFServlet:void loadBus(javax.servlet.ServletConfig)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.jms.JMSTransportFactory:org.apache.cxf.transport.Conduit getConduit(org.apache.cxf.service.model.EndpointInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.TransportURIResolver:org.xml.sax.InputSource resolve(java.lang.String,java.lang.String)",
            "org.apache.cxf.endpoint.AbstractConduitSelector:org.apache.cxf.transport.Conduit getSelectedConduit(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.soap.SoapTransportFactory:org.apache.cxf.transport.Conduit getConduit(org.apache.cxf.service.model.EndpointInfo)"
        ]
    },
    "org.apache.cxf.transport.jms.JMSConfigFeature:void initialize(org.apache.cxf.endpoint.Server,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.frontend.ServerFactoryBean:void applyFeatures()"
        ]
    },
    "org.apache.cxf.transport.jms.JMSConfigFeature:void initialize(org.apache.cxf.endpoint.Client,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.frontend.ClientFactoryBean:void applyFeatures()",
            "org.apache.cxf.jaxws.ServiceImpl:javax.xml.ws.Dispatch createDispatch(javax.xml.namespace.QName,java.lang.Class,javax.xml.ws.Service$Mode,javax.xml.ws.WebServiceFeature[])",
            "org.apache.cxf.jaxws.ServiceImpl:javax.xml.ws.Dispatch createDispatch(javax.xml.namespace.QName,javax.xml.bind.JAXBContext,javax.xml.ws.Service$Mode,javax.xml.ws.WebServiceFeature[])"
        ]
    },
    "org.apache.cxf.wsdl11.ResourceManagerWSDLLocator:void <init>(java.lang.String,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.WSDLQueryHandler:void writeResponse(java.lang.String,java.lang.String,org.apache.cxf.service.model.EndpointInfo,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus createBus(java.lang.String[],boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus createBus(java.lang.String[])",
            "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus createBus(java.lang.String,boolean)"
        ]
    },
    "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus createBus(java.net.URL[],boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus createBus(java.net.URL[])",
            "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus createBus(java.net.URL,boolean)"
        ]
    },
    "org.apache.cxf.jaxws.handler.HandlerChainInvoker:void setMessageOutboundProperty(javax.xml.ws.handler.MessageContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.handler.HandlerChainInvoker:boolean invokeHandlerChainHandleFault(java.util.List,javax.xml.ws.handler.MessageContext)",
            "org.apache.cxf.jaxws.handler.HandlerChainInvoker:void changeMessageDirection(javax.xml.ws.handler.MessageContext)"
        ]
    },
    "org.apache.cxf.common.logging.Log4jLogger:java.util.logging.Level getLevel()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:boolean isLoggable(java.util.logging.Level)"
        ]
    },
    "org.apache.cxf.common.logging.Log4jLogger:java.util.logging.Level access$000(org.apache.cxf.common.logging.Log4jLogger,org.apache.log4j.Level)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.logging.Log4jLogger$HandlerWrapper:void append(org.apache.log4j.spi.LoggingEvent)"
        ]
    },
    "org.apache.cxf.jaxb.WrapperHelperCompiler:void <init>(java.lang.Class,java.lang.reflect.Method[],java.lang.reflect.Method[],java.lang.reflect.Method[],java.lang.reflect.Field[],java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.WrapperHelperCompiler:org.apache.cxf.databinding.WrapperHelper compileWrapperHelper(java.lang.Class,java.lang.reflect.Method[],java.lang.reflect.Method[],java.lang.reflect.Method[],java.lang.reflect.Field[],java.lang.Object)"
        ]
    },
    "org.apache.cxf.jaxb.JAXBContextInitializer:void addType(java.lang.reflect.Type,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.JAXBContextInitializer:void begin(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.jaxb.JAXBContextInitializer:void addType(java.lang.reflect.Type)"
        ]
    },
    "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeNamespace(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeNamespace(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamWriter,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:java.lang.String getUniquePrefix(javax.xml.stream.XMLStreamWriter,java.lang.String,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.interceptor.WrappedOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.policy.model.RequiredParts:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.AlgorithmSuite:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.Wss11:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.EncryptionToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SymmetricBinding:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SignatureToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.Trust10:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.AsymmetricBinding:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.ContentEncryptedElements:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.KeyValueToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SignedEncryptedElements:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.Trust13:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.RequiredElements:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.UsernameToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SupportingToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.TransportBinding:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SignedEncryptedParts:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.IssuedToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SecureConversationToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.Wss10:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.ProtectionToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeNamespace(java.lang.String,java.lang.String)",
            "org.apache.cxf.binding.soap.interceptor.Soap12FaultOutInterceptor$Soap12FaultOutInterceptorInternal:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor:void writeSoapEnvelopeStart(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.Soap11FaultOutInterceptor$Soap11FaultOutInterceptorInternal:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.aegis.util.NamespaceHelper:java.lang.String getUniquePrefix(javax.xml.stream.XMLStreamWriter,java.lang.String,boolean)",
            "org.apache.cxf.aegis.util.jdom.StaxSerializer:void writeElement(org.jdom.Element,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.aegis.xml.stax.ElementWriter:void writeStartElement()",
            "org.apache.cxf.aegis.xml.stax.ElementWriter:java.lang.String getPrefixForNamespace(java.lang.String)",
            "org.apache.cxf.aegis.xml.stax.ElementWriter:java.lang.String getPrefixForNamespace(java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxws.spi.ProviderImpl:javax.xml.ws.wsaddressing.W3CEndpointReference createW3CEndpointReference(java.lang.String,javax.xml.namespace.QName,javax.xml.namespace.QName,java.util.List,java.lang.String,java.util.List)",
            "org.apache.cxf.xmlbeans.DataWriterImpl:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamWriter)"
        ]
    },
    "org.apache.cxf.staxutils.CachingXmlEventWriter:void setDefaultNamespace(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void setDefaultNamespace(java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void setDefaultNamespace(java.lang.String)"
        ]
    },
    "org.apache.cxf.staxutils.CachingXmlEventWriter:void writeDefaultNamespace(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeDefaultNamespace(java.lang.String)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamWriter,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeDefaultNamespace(java.lang.String)",
            "org.apache.cxf.aegis.util.jdom.StaxSerializer:void writeElement(org.jdom.Element,javax.xml.stream.XMLStreamWriter)"
        ]
    },
    "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeNamespace(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeNamespace(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamWriter,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:java.lang.String getUniquePrefix(javax.xml.stream.XMLStreamWriter,java.lang.String,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.interceptor.WrappedOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.policy.model.RequiredParts:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.AlgorithmSuite:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.Wss11:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.EncryptionToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SymmetricBinding:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SignatureToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.Trust10:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.AsymmetricBinding:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.ContentEncryptedElements:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.KeyValueToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SignedEncryptedElements:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.Trust13:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.RequiredElements:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.UsernameToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SupportingToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.TransportBinding:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SignedEncryptedParts:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.IssuedToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SecureConversationToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.Wss10:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.ProtectionToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeNamespace(java.lang.String,java.lang.String)",
            "org.apache.cxf.binding.soap.interceptor.Soap12FaultOutInterceptor$Soap12FaultOutInterceptorInternal:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor:void writeSoapEnvelopeStart(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.Soap11FaultOutInterceptor$Soap11FaultOutInterceptorInternal:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.aegis.util.NamespaceHelper:java.lang.String getUniquePrefix(javax.xml.stream.XMLStreamWriter,java.lang.String,boolean)",
            "org.apache.cxf.aegis.util.jdom.StaxSerializer:void writeElement(org.jdom.Element,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.aegis.xml.stax.ElementWriter:void writeStartElement()",
            "org.apache.cxf.aegis.xml.stax.ElementWriter:java.lang.String getPrefixForNamespace(java.lang.String)",
            "org.apache.cxf.aegis.xml.stax.ElementWriter:java.lang.String getPrefixForNamespace(java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxws.spi.ProviderImpl:javax.xml.ws.wsaddressing.W3CEndpointReference createW3CEndpointReference(java.lang.String,javax.xml.namespace.QName,javax.xml.namespace.QName,java.util.List,java.lang.String,java.util.List)",
            "org.apache.cxf.xmlbeans.DataWriterImpl:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamWriter)"
        ]
    },
    "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void setPrefix(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void setPrefix(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startPrefixMapping(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:java.lang.String getUniquePrefix(javax.xml.stream.XMLStreamWriter,java.lang.String,boolean)",
            "org.apache.cxf.interceptor.WrappedOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.policy.model.InitiatorToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.RequiredParts:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.TransportToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.AlgorithmSuite:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.Wss11:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.EncryptionToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SymmetricBinding:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.X509Token:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SignatureToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.Trust10:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.HttpsToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.AsymmetricBinding:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.ContentEncryptedElements:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.KeyValueToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SignedEncryptedElements:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.Trust13:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.RequiredElements:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.UsernameToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SupportingToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.TransportBinding:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SignedEncryptedParts:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.Layout:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.IssuedToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SecureConversationToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.Wss10:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.ProtectionToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.RecipientToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void setPrefix(java.lang.String,java.lang.String)",
            "org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor:void writeSoapEnvelopeStart(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.aegis.util.NamespaceHelper:java.lang.String getUniquePrefix(javax.xml.stream.XMLStreamWriter,java.lang.String,boolean)",
            "org.apache.cxf.aegis.util.jdom.StaxSerializer:void writeElement(org.jdom.Element,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.aegis.xml.stax.ElementWriter:void writeStartElement()",
            "org.apache.cxf.aegis.xml.stax.ElementWriter:java.lang.String getPrefixForNamespace(java.lang.String)",
            "org.apache.cxf.aegis.xml.stax.ElementWriter:java.lang.String getPrefixForNamespace(java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxws.spi.ProviderImpl:javax.xml.ws.wsaddressing.W3CEndpointReference createW3CEndpointReference(java.lang.String,javax.xml.namespace.QName,javax.xml.namespace.QName,java.util.List,java.lang.String,java.util.List)"
        ]
    },
    "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void setPrefix(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void setPrefix(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startPrefixMapping(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:java.lang.String getUniquePrefix(javax.xml.stream.XMLStreamWriter,java.lang.String,boolean)",
            "org.apache.cxf.interceptor.WrappedOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.policy.model.InitiatorToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.RequiredParts:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.TransportToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.AlgorithmSuite:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.Wss11:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.EncryptionToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SymmetricBinding:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.X509Token:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SignatureToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.Trust10:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.HttpsToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.AsymmetricBinding:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.ContentEncryptedElements:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.KeyValueToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SignedEncryptedElements:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.Trust13:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.RequiredElements:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.UsernameToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SupportingToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.TransportBinding:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SignedEncryptedParts:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.Layout:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.IssuedToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SecureConversationToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.Wss10:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.ProtectionToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.RecipientToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void setPrefix(java.lang.String,java.lang.String)",
            "org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor:void writeSoapEnvelopeStart(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.aegis.util.NamespaceHelper:java.lang.String getUniquePrefix(javax.xml.stream.XMLStreamWriter,java.lang.String,boolean)",
            "org.apache.cxf.aegis.util.jdom.StaxSerializer:void writeElement(org.jdom.Element,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.aegis.xml.stax.ElementWriter:void writeStartElement()",
            "org.apache.cxf.aegis.xml.stax.ElementWriter:java.lang.String getPrefixForNamespace(java.lang.String)",
            "org.apache.cxf.aegis.xml.stax.ElementWriter:java.lang.String getPrefixForNamespace(java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxws.spi.ProviderImpl:javax.xml.ws.wsaddressing.W3CEndpointReference createW3CEndpointReference(java.lang.String,javax.xml.namespace.QName,javax.xml.namespace.QName,java.util.List,java.lang.String,java.util.List)"
        ]
    },
    "org.apache.cxf.binding.soap.saaj.SAAJOutInterceptor:void handleFault(org.apache.cxf.binding.soap.SoapMessage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JOutInterceptor:void handleFault(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.wss4j.WSS4JOutInterceptor:void handleFault(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.saaj.SAAJOutInterceptor:void handleFault(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerInterceptor:void handleFault(org.apache.cxf.binding.soap.SoapMessage)"
        ]
    },
    "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void <init>(org.apache.cxf.Bus,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void <init>(org.apache.cxf.Bus,org.apache.cxf.service.model.ServiceInfo[])"
        ]
    },
    "org.apache.cxf.common.util.ClassReader:java.util.Map findAttributeReaders(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.ParamReader:void <init>(byte[])"
        ]
    },
    "org.apache.cxf.jaxb.JAXBUtils:javax.xml.bind.JAXBContext createRIContext(java.lang.Class[],java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.JAXBDataBinding:void initialize(org.apache.cxf.service.Service)"
        ]
    },
    "org.apache.cxf.transport.http.UrlUtilities:java.util.Map parseQueryString(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.WSDLQueryHandler:boolean isRecognizedQuery(java.lang.String,java.lang.String,org.apache.cxf.service.model.EndpointInfo,boolean)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void writeResponse(java.lang.String,java.lang.String,org.apache.cxf.service.model.EndpointInfo,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.binding.soap.interceptor.Soap12FaultInInterceptor:org.apache.cxf.binding.soap.SoapFault unmarshalFault(org.apache.cxf.binding.soap.SoapMessage,javax.xml.stream.XMLStreamReader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.soap.interceptor.Soap12FaultInInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.saaj.SAAJInInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)"
        ]
    },
    "org.apache.cxf.aegis.type.mtom.AbstractXOPType:void addToSchemaElement(org.apache.ws.commons.schema.XmlSchemaElement)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.security.policy.builders.ContentEncryptedElementsBuilder:void processElement(org.w3c.dom.Element,org.apache.cxf.ws.security.policy.model.ContentEncryptedElements)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.policy.builders.ContentEncryptedElementsBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)"
        ]
    },
    "org.apache.cxf.ws.security.policy.builders.EncryptedElementsBuilder:void processElement(org.w3c.dom.Element,org.apache.cxf.ws.security.policy.model.SignedEncryptedElements)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.policy.builders.EncryptedElementsBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)"
        ]
    },
    "org.apache.cxf.ws.security.policy.builders.SignedElementsBuilder:void processElement(org.w3c.dom.Element,org.apache.cxf.ws.security.policy.model.SignedEncryptedElements)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.policy.builders.SignedElementsBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)"
        ]
    },
    "org.apache.cxf.ws.security.policy.builders.RequiredElementsBuilder:void processElement(org.w3c.dom.Element,org.apache.cxf.ws.security.policy.model.RequiredElements)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.policy.builders.RequiredElementsBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)"
        ]
    },
    "org.apache.cxf.jaxb.JAXBDataBinding:void <init>(javax.xml.bind.JAXBContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.RMEndpoint:void createService()",
            "org.apache.cxf.jaxws.ServiceImpl:javax.xml.ws.Dispatch createDispatch(javax.xml.namespace.QName,javax.xml.bind.JAXBContext,javax.xml.ws.Service$Mode,javax.xml.ws.WebServiceFeature[])"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.databinding.DataBinding createDefaultDataBinding()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.AbstractServiceFactoryBean:org.apache.cxf.databinding.DataBinding getDataBinding()"
        ]
    },
    "org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean:void initConfiguration(org.apache.cxf.jaxws.support.JaxWsImplementorInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean:void <init>(org.apache.cxf.jaxws.support.JaxWsImplementorInfo)",
            "org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean:void setJaxWsImplementorInfo(org.apache.cxf.jaxws.support.JaxWsImplementorInfo)"
        ]
    },
    "org.apache.cxf.transport.AbstractObservable:org.apache.cxf.ws.addressing.EndpointReferenceType getTargetReference(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:void <init>(org.apache.cxf.Bus,org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.transport.AbstractObservable:org.apache.cxf.ws.addressing.EndpointReferenceType getTargetReference(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.binding.soap.SoapVersionFactory:org.apache.cxf.binding.soap.SoapVersionFactory getInstance()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.soap.interceptor.ReadHeadersInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.SoapVersionFactory:void <clinit>()"
        ]
    },
    "org.apache.cxf.tools.common.ProcessorTestBase:void assertWsdlEquals(java.io.File,java.io.File,java.util.List,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.tools.util.ToolsStaxUtils:org.apache.cxf.tools.common.Tag getTagTree(java.io.File)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.binding.soap.SoapTransportFactory:void createSoapExtensors(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.binding.soap.model.SoapBindingInfo,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.soap.SoapTransportFactory:void createPortExtensors(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.service.Service)"
        ]
    },
    "org.apache.cxf.aegis.type.DefaultTypeMapping:void defaultRegister(org.apache.cxf.aegis.type.TypeMapping,boolean,java.lang.Class,javax.xml.namespace.QName,org.apache.cxf.aegis.type.Type)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.DefaultTypeMapping:void fillStandardMappings(org.apache.cxf.aegis.type.TypeMapping,boolean,boolean,boolean)",
            "org.apache.cxf.aegis.type.DefaultTypeMapping:void registerJDOMTypes(org.apache.cxf.aegis.type.TypeMapping,boolean)",
            "org.apache.cxf.aegis.type.DefaultTypeMapping:org.apache.cxf.aegis.type.DefaultTypeMapping createSoap11TypeMapping(boolean,boolean,boolean)",
            "org.apache.cxf.aegis.type.DefaultTypeMapping:org.apache.cxf.aegis.type.DefaultTypeMapping createDefaultTypeMapping(boolean,boolean,boolean)"
        ]
    },
    "org.apache.cxf.jaxws.JaxwsServiceBuilder:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean:void <init>(org.apache.cxf.jaxws.support.JaxWsImplementorInfo)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxws.handler.soap.SOAPHandlerFaultInInterceptor:javax.xml.ws.handler.MessageContext createProtocolMessageContext(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.handler.AbstractProtocolHandlerInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxws.handler.soap.SOAPHandlerFaultOutInterceptor:javax.xml.ws.handler.MessageContext createProtocolMessageContext(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.handler.AbstractProtocolHandlerInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxws.EndpointImpl:javax.xml.ws.EndpointReference getEndpointReference(java.lang.Class,org.w3c.dom.Element[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.databinding.source.NodeDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.source.NodeDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,java.lang.Object)"
        ]
    },
    "org.apache.cxf.databinding.source.NodeDataWriter:void write(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.staxutils.StaxUtils:void writeDocument(org.w3c.dom.Document,javax.xml.stream.XMLStreamWriter,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:void writeNode(org.w3c.dom.Node,javax.xml.stream.XMLStreamWriter,boolean)"
        ]
    },
    "org.apache.cxf.aegis.xml.AbstractMessageReader:void readToEnd()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.AegisXMLStreamDataReader:java.lang.Object read(javax.xml.stream.XMLStreamReader,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.xml.stax.ElementReader:java.lang.String getValue()",
            "org.apache.cxf.aegis.type.basic.BooleanType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.BeanType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.ArrayType:java.util.Collection readCollection(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.mtom.AbstractXOPType:java.lang.Object readMtoM(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.SoapRefType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.SoapArrayType:java.util.List readCollection(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.encoded.ArrayTypeInfo,int)",
            "org.apache.cxf.aegis.type.encoded.TrailingBlocks:java.util.List readBlocks(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)"
        ]
    },
    "org.apache.cxf.helpers.IOUtils:int copy(java.io.InputStream,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.IOUtils:java.io.ByteArrayInputStream loadIntoBAIS(java.io.InputStream)",
            "org.apache.cxf.helpers.IOUtils:byte[] readBytesFromStream(java.io.InputStream)",
            "org.apache.cxf.resource.URIResolver:void tryRemote(java.lang.String)",
            "org.apache.cxf.jaxb.attachment.JAXBAttachmentUnmarshaller:byte[] getAttachmentAsByteArray(java.lang.String)",
            "org.apache.cxf.interceptor.LoggingInInterceptor:void logging(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.TransportURIResolver$1:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit$InterposedMessageObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.servlet.ServletController:void renderStyleSheet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.attachment.AttachmentDeserializer:void cache(org.apache.cxf.attachment.DelegatingInputStream,boolean)",
            "org.apache.cxf.attachment.AttachmentDataSource:void <init>(java.lang.String,java.io.InputStream)",
            "org.apache.cxf.aegis.type.mtom.DataSourceType:byte[] getBytes(java.lang.Object)",
            "org.apache.cxf.aegis.type.mtom.DataHandlerType:byte[] getBytes(java.lang.Object)"
        ]
    },
    "org.apache.cxf.common.util.Base64Utility:void decode(char[],int,int,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.basic.Base64Type:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)"
        ]
    },
    "org.apache.cxf.common.util.Base64Utility:void decode(java.lang.String,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.util.Base64Utility:void encodeChunk(byte[],int,int,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.io.CachedOutputStream:void write(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.Base64Utility:void decode(char[],int,int,java.io.OutputStream)",
            "org.apache.cxf.common.util.Base64Utility:void decode(java.lang.String,java.io.OutputStream)",
            "org.apache.cxf.common.util.Base64Utility:void encodeChunk(byte[],int,int,java.io.OutputStream)",
            "org.apache.cxf.jaxb.JAXBEncoderDecoder:void marshalWithBridge(javax.xml.namespace.QName,java.lang.Class,java.lang.'annotation'.Annotation[],java.util.Set,java.lang.Object,java.lang.Object,javax.xml.bind.attachment.AttachmentMarshaller)",
            "org.apache.cxf.io.CachedOutputStream:void write(byte[])",
            "org.apache.cxf.io.CacheAndWriteOutputStream:void write(byte[])",
            "org.apache.cxf.attachment.AttachmentSerializer:void writeProlog()",
            "org.apache.cxf.attachment.AttachmentSerializer:void writeAttachments()"
        ]
    },
    "org.apache.cxf.io.CacheAndWriteOutputStream:void write(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.Base64Utility:void decode(char[],int,int,java.io.OutputStream)",
            "org.apache.cxf.common.util.Base64Utility:void decode(java.lang.String,java.io.OutputStream)",
            "org.apache.cxf.common.util.Base64Utility:void encodeChunk(byte[],int,int,java.io.OutputStream)",
            "org.apache.cxf.jaxb.JAXBEncoderDecoder:void marshalWithBridge(javax.xml.namespace.QName,java.lang.Class,java.lang.'annotation'.Annotation[],java.util.Set,java.lang.Object,java.lang.Object,javax.xml.bind.attachment.AttachmentMarshaller)",
            "org.apache.cxf.io.CachedOutputStream:void write(byte[])",
            "org.apache.cxf.io.CacheAndWriteOutputStream:void write(byte[])",
            "org.apache.cxf.attachment.AttachmentSerializer:void writeProlog()",
            "org.apache.cxf.attachment.AttachmentSerializer:void writeAttachments()"
        ]
    },
    "org.apache.cxf.interceptor.MessageSenderInterceptor:org.apache.cxf.transport.Conduit getConduit(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.MessageSenderInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.MessageSenderInterceptor:org.apache.cxf.transport.Conduit access$000(org.apache.cxf.interceptor.MessageSenderInterceptor,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.ws.policy.builder.primitive.NestedPrimitiveAssertion:void <init>(org.w3c.dom.Element,org.apache.cxf.ws.policy.PolicyBuilder,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.builder.primitive.NestedPrimitiveAssertion:void <init>(org.w3c.dom.Element,org.apache.cxf.ws.policy.PolicyBuilder)"
        ]
    },
    "org.apache.cxf.ws.policy.PolicyBuilderImpl:org.apache.neethi.Policy getPolicy(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.policy.attachment.reference.LocalDocumentReferenceResolver:org.apache.neethi.Policy resolveReference(java.lang.String,org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.attachment.reference.LocalDocumentReferenceResolver:org.apache.neethi.Policy resolveReference(java.lang.String)",
            "org.apache.cxf.ws.policy.attachment.reference.LocalDocumentReferenceResolver:org.apache.neethi.Policy resolveReference(java.lang.String,org.w3c.dom.Element)"
        ]
    },
    "org.apache.cxf.ws.security.policy.builders.SecureConversationTokenBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.AssertionBuilderRegistryImpl:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)"
        ]
    },
    "org.apache.cxf.frontend.spring.ClientProxyFactoryBeanDefinitionParser$SpringClientProxyFactoryBean:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxws.spring.JaxWsProxyFactoryBeanDefinitionParser$JAXWSSpringClientProxyFactoryBean:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxws.spring.NamespaceHandler$SpringServerFactoryBean:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxws.EndpointImpl:void <init>(org.apache.cxf.Bus,java.lang.Object,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.EndpointImpl:void <init>(org.apache.cxf.Bus,java.lang.Object,java.lang.String)"
        ]
    },
    "org.apache.cxf.aegis.type.encoded.SoapRef:void set(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.encoded.SoapRefType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.SoapRefRegistry:void addInstance(java.lang.String,java.lang.Object)",
            "org.apache.cxf.aegis.type.encoded.SoapRefRegistry:void addRef(java.lang.String,org.apache.cxf.aegis.type.encoded.SoapRef)"
        ]
    },
    "org.apache.cxf.aegis.type.encoded.SoapRef:void setAction(org.apache.cxf.aegis.type.encoded.SoapRef$Action)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.encoded.StructType:void writeProperty(javax.xml.namespace.QName,java.lang.Object,java.lang.Object,java.lang.Class,org.apache.cxf.aegis.type.basic.BeanTypeInfo)",
            "org.apache.cxf.aegis.type.encoded.SoapArrayType:java.lang.Object makeArray(java.util.List,java.util.List,java.lang.Class)"
        ]
    },
    "org.apache.cxf.BusFactory:org.apache.cxf.Bus getDefaultBus(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.BusFactory:org.apache.cxf.Bus getDefaultBus()",
            "org.apache.cxf.BusFactory:org.apache.cxf.Bus getThreadDefaultBus(boolean)",
            "org.apache.cxf.bus.CXFBusImpl:void shutdown(boolean)"
        ]
    },
    "org.apache.cxf.management.jmx.InstrumentationManagerImpl:javax.management.ObjectName register(org.apache.cxf.management.ManagedComponent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.management.jmx.InstrumentationManagerImpl:void init()",
            "org.apache.cxf.management.counters.CounterRepository:org.apache.cxf.management.counters.Counter createCounter(javax.management.ObjectName,org.apache.cxf.management.counters.MessageHandlingTimeRecorder)",
            "org.apache.cxf.endpoint.ServerImpl:void initDestination(org.apache.cxf.transport.DestinationFactory)",
            "org.apache.cxf.workqueue.WorkQueueManagerImpl:void register()",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void register()"
        ]
    },
    "org.apache.cxf.jaxws.handler.soap.SOAPHandlerFaultOutInterceptor$1:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.aegis.xml.AbstractMessageReader:boolean isXsiNil()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.AegisXMLStreamDataReader:java.lang.Object read(javax.xml.stream.XMLStreamReader,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.xml.stax.ElementReader:java.lang.String getValue()",
            "org.apache.cxf.aegis.type.basic.BooleanType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.BeanType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.ArrayType:java.util.Collection readCollection(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.SoapArrayType:java.util.List readCollection(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.encoded.ArrayTypeInfo,int)"
        ]
    },
    "org.apache.cxf.aegis.xml.AbstractMessageReader:boolean hasValue()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.aegis.xml.AbstractMessageReader:char getValueAsCharacter()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.basic.CharacterType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)"
        ]
    },
    "org.apache.cxf.aegis.xml.AbstractMessageReader:int getValueAsInt()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.basic.IntType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)"
        ]
    },
    "org.apache.cxf.aegis.xml.AbstractMessageReader:long getValueAsLong()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.basic.LongType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)"
        ]
    },
    "org.apache.cxf.aegis.xml.AbstractMessageReader:double getValueAsDouble()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.basic.DoubleType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)"
        ]
    },
    "org.apache.cxf.aegis.xml.AbstractMessageReader:float getValueAsFloat()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.basic.FloatType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)"
        ]
    },
    "org.apache.cxf.aegis.xml.AbstractMessageReader:boolean getValueAsBoolean()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.basic.BooleanType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)"
        ]
    },
    "org.apache.cxf.aegis.type.basic.ByteType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.AegisXMLStreamDataReader:java.lang.Object read(javax.xml.stream.XMLStreamReader,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.basic.ObjectType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.BeanType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.ArrayType:java.util.Collection readCollection(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.SoapRefType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.collection.MapType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)"
        ]
    },
    "org.apache.cxf.aegis.type.basic.BigIntegerType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.AegisXMLStreamDataReader:java.lang.Object read(javax.xml.stream.XMLStreamReader,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.basic.ObjectType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.BeanType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.ArrayType:java.util.Collection readCollection(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.SoapRefType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.collection.MapType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)"
        ]
    },
    "org.apache.cxf.aegis.type.basic.ObjectType:java.lang.Object reconstituteJavaObject(org.apache.cxf.aegis.xml.MessageReader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.basic.ObjectType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)"
        ]
    },
    "org.apache.cxf.aegis.type.basic.ObjectType:boolean isNil(org.apache.cxf.aegis.xml.MessageReader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.basic.ObjectType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)"
        ]
    },
    "org.apache.cxf.aegis.type.basic.DateType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.AegisXMLStreamDataReader:java.lang.Object read(javax.xml.stream.XMLStreamReader,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.basic.SqlDateType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.ObjectType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.BeanType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.ArrayType:java.util.Collection readCollection(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.SoapRefType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.collection.MapType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)"
        ]
    },
    "org.apache.cxf.aegis.type.basic.CalendarType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.AegisXMLStreamDataReader:java.lang.Object read(javax.xml.stream.XMLStreamReader,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.basic.ObjectType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.BeanType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.ArrayType:java.util.Collection readCollection(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.SoapRefType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.collection.MapType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)"
        ]
    },
    "org.apache.cxf.aegis.type.basic.URIType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.AegisXMLStreamDataReader:java.lang.Object read(javax.xml.stream.XMLStreamReader,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.basic.ObjectType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.BeanType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.ArrayType:java.util.Collection readCollection(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.SoapRefType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.collection.MapType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)"
        ]
    },
    "org.apache.cxf.aegis.type.basic.TimestampType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.AegisXMLStreamDataReader:java.lang.Object read(javax.xml.stream.XMLStreamReader,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.basic.ObjectType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.BeanType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.ArrayType:java.util.Collection readCollection(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.SoapRefType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.collection.MapType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)"
        ]
    },
    "org.apache.cxf.aegis.type.basic.BigDecimalType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.AegisXMLStreamDataReader:java.lang.Object read(javax.xml.stream.XMLStreamReader,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.basic.ObjectType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.BeanType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.ArrayType:java.util.Collection readCollection(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.SoapRefType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.collection.MapType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)"
        ]
    },
    "org.apache.cxf.aegis.type.basic.DateTimeType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.AegisXMLStreamDataReader:java.lang.Object read(javax.xml.stream.XMLStreamReader,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.basic.ObjectType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.BeanType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.ArrayType:java.util.Collection readCollection(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.SoapRefType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.collection.MapType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)"
        ]
    },
    "org.apache.cxf.aegis.type.basic.ShortType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.AegisXMLStreamDataReader:java.lang.Object read(javax.xml.stream.XMLStreamReader,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.basic.ObjectType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.BeanType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.ArrayType:java.util.Collection readCollection(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.SoapRefType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.collection.MapType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)"
        ]
    },
    "org.apache.cxf.aegis.type.basic.StringType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.AegisXMLStreamDataReader:java.lang.Object read(javax.xml.stream.XMLStreamReader,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.basic.ObjectType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.BeanType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.ArrayType:java.util.Collection readCollection(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.SoapRefType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.collection.MapType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)"
        ]
    },
    "org.apache.cxf.aegis.type.basic.TimeType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.AegisXMLStreamDataReader:java.lang.Object read(javax.xml.stream.XMLStreamReader,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.basic.ObjectType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.BeanType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.ArrayType:java.util.Collection readCollection(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.SoapRefType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.collection.MapType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)"
        ]
    },
    "org.apache.cxf.aegis.type.basic.TimezoneLessDateType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.AegisXMLStreamDataReader:java.lang.Object read(javax.xml.stream.XMLStreamReader,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.basic.ObjectType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.BeanType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.ArrayType:java.util.Collection readCollection(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.SoapRefType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.collection.MapType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)"
        ]
    },
    "org.apache.cxf.aegis.type.encoded.SoapEncodingUtil:java.lang.String readAttributeValue(org.apache.cxf.aegis.xml.MessageReader,javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.encoded.ArrayTypeInfo:void <init>(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.type.TypeMapping)",
            "org.apache.cxf.aegis.type.encoded.SoapEncodingUtil:java.lang.String readId(org.apache.cxf.aegis.xml.MessageReader)",
            "org.apache.cxf.aegis.type.encoded.SoapEncodingUtil:java.lang.String readRef(org.apache.cxf.aegis.xml.MessageReader)",
            "org.apache.cxf.aegis.type.encoded.SoapArrayType:java.util.List readCollection(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.encoded.ArrayTypeInfo,int)"
        ]
    },
    "org.apache.cxf.aegis.type.java5.EnumType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.AegisXMLStreamDataReader:java.lang.Object read(javax.xml.stream.XMLStreamReader,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.basic.ObjectType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.BeanType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.ArrayType:java.util.Collection readCollection(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.SoapRefType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.collection.MapType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)"
        ]
    },
    "org.apache.cxf.aegis.type.java5.XMLGregorianCalendarType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.AegisXMLStreamDataReader:java.lang.Object read(javax.xml.stream.XMLStreamReader,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.basic.ObjectType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.BeanType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.ArrayType:java.util.Collection readCollection(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.SoapRefType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.collection.MapType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)"
        ]
    },
    "org.apache.cxf.aegis.type.java5.DurationType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.AegisXMLStreamDataReader:java.lang.Object read(javax.xml.stream.XMLStreamReader,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.basic.ObjectType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.BeanType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.ArrayType:java.util.Collection readCollection(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.SoapRefType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.collection.MapType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)"
        ]
    },
    "org.apache.cxf.aegis.xml.stax.ElementReader:boolean hasMoreElementReaders()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.xml.AbstractMessageReader:void readToEnd(org.apache.cxf.aegis.xml.MessageReader)",
            "org.apache.cxf.aegis.type.basic.ObjectType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.BeanType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.ArrayType:java.util.Collection readCollection(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.mtom.AbstractXOPType:java.lang.Object readMtoM(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.SoapArrayType:java.util.List readCollection(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.encoded.ArrayTypeInfo,int)",
            "org.apache.cxf.aegis.type.encoded.TrailingBlocks:java.util.List readBlocks(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.collection.MapType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.collection.MapType:void readToEnd(org.apache.cxf.aegis.xml.MessageReader)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:void printXmlFragment(javax.xml.stream.XMLStreamReader)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.databinding.source.XMLStreamDataReader:java.lang.Object read(javax.xml.stream.XMLStreamReader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.source.XMLStreamDataReader:java.lang.Object read(javax.xml.namespace.QName,javax.xml.stream.XMLStreamReader,java.lang.Class)",
            "org.apache.cxf.databinding.source.XMLStreamDataReader:java.lang.Object read(java.lang.Object)"
        ]
    },
    "org.apache.cxf.aegis.type.xml.DocumentType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.AegisXMLStreamDataReader:java.lang.Object read(javax.xml.stream.XMLStreamReader,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.basic.ObjectType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.BeanType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.ArrayType:java.util.Collection readCollection(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.xml.SourceType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.SoapRefType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.collection.MapType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)"
        ]
    },
    "org.apache.cxf.aegis.type.DefaultTypeCreator:org.apache.cxf.aegis.type.Type createDefaultType(org.apache.cxf.aegis.type.AbstractTypeCreator$TypeClassInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.AbstractTypeCreator:org.apache.cxf.aegis.type.Type createTypeForClass(org.apache.cxf.aegis.type.AbstractTypeCreator$TypeClassInfo)",
            "org.apache.cxf.aegis.type.XMLTypeCreator:org.apache.cxf.aegis.type.Type createDefaultType(org.apache.cxf.aegis.type.AbstractTypeCreator$TypeClassInfo)"
        ]
    },
    "org.apache.cxf.aegis.type.basic.BeanType:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:java.util.List enumeratorValues(org.apache.ws.commons.schema.XmlSchemaSimpleType)",
            "org.apache.cxf.common.logging.Log4jLogger$HandlerWrapper:void append(org.apache.log4j.spi.LoggingEvent)",
            "org.apache.cxf.common.util.PackageUtils:java.lang.String combine(java.util.List,char)",
            "org.apache.cxf.configuration.spring.SpringBeanMap:void processBeans(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.message.MessageUtils:boolean isTrue(java.lang.Object)",
            "org.apache.cxf.endpoint.ClientImpl:boolean isThreadLocalRequestContext()",
            "org.apache.cxf.ws.addressing.ContextUtils:java.lang.String getAction(org.apache.cxf.service.model.Extensible)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationOutInterceptor:void renewToken(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.ws.security.tokenstore.SecurityToken,org.apache.cxf.ws.security.policy.model.SecureConversationToken)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.policy.interceptors.IssuedTokenInterceptorProvider$IssuedTokenOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationTokenInterceptorProvider:java.lang.String setupClient(org.apache.cxf.ws.security.trust.STSClient,org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.ws.security.policy.model.SecureConversationToken,boolean)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:java.lang.String checkAsymetricBinding(org.apache.cxf.ws.policy.AssertionInfoMap,java.lang.String,org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:java.lang.String checkSymetricBinding(org.apache.cxf.ws.policy.AssertionInfoMap,java.lang.String,org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.wsdl.AbstractWSDLPlugin:java.lang.String getOption(java.util.Map,java.lang.String)",
            "org.apache.cxf.tools.common.toolspec.parser.ErrorVisitor:java.lang.String toString()",
            "org.apache.cxf.tools.util.URIParserUtil:java.lang.String combine(java.util.List,char)",
            "org.apache.cxf.aegis.xml.jdom.JDOMWriter:void writeValue(java.lang.Object)",
            "org.apache.cxf.aegis.xml.jdom.JDOMWriter:void writeValue(java.lang.Object,java.lang.String,java.lang.String)",
            "org.apache.cxf.aegis.xml.jdom.AttributeWriter:void writeValue(java.lang.Object)",
            "org.apache.cxf.aegis.xml.stax.AttributeWriter:void writeValue(java.lang.Object)",
            "org.apache.cxf.aegis.xml.stax.ElementWriter:void writeValue(java.lang.Object)",
            "org.apache.cxf.aegis.type.basic.BigIntegerType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.BigDecimalType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.jaxws.EndpointImpl:void checkProperties()",
            "org.apache.cxf.xmlbeans.tools.XMLBeansToolingDataBinding:void initialize(org.apache.cxf.tools.common.ToolContext)"
        ]
    },
    "org.apache.cxf.aegis.type.basic.BeanType:long getMinOccurs()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void initializeMessage(org.apache.cxf.service.Service,org.apache.cxf.aegis.type.TypeMapping,org.apache.cxf.service.model.AbstractMessageContainer,int,java.util.Set)"
        ]
    },
    "org.apache.cxf.aegis.type.java5.AnnotatedTypeInfo:void <init>(org.apache.cxf.aegis.type.TypeMapping,java.lang.Class,java.lang.String,org.apache.cxf.aegis.type.TypeCreationOptions)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.java5.Java5TypeCreator:org.apache.cxf.aegis.type.Type createDefaultType(org.apache.cxf.aegis.type.AbstractTypeCreator$TypeClassInfo)"
        ]
    },
    "org.apache.cxf.aegis.type.basic.XMLBeanTypeInfo:void <init>(java.lang.Class,java.util.List,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.XMLTypeCreator:org.apache.cxf.aegis.type.Type createDefaultType(org.apache.cxf.aegis.type.AbstractTypeCreator$TypeClassInfo)"
        ]
    },
    "org.apache.cxf.aegis.type.basic.BeanType:org.apache.cxf.aegis.type.basic.BeanTypeInfo createTypeInfo()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.basic.BeanType:org.apache.cxf.aegis.type.basic.BeanTypeInfo getTypeInfo()"
        ]
    },
    "org.apache.cxf.aegis.type.DefaultTypeCreator:org.apache.cxf.aegis.type.Type createCollectionType(org.apache.cxf.aegis.type.AbstractTypeCreator$TypeClassInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.AbstractTypeCreator:org.apache.cxf.aegis.type.Type createTypeForClass(org.apache.cxf.aegis.type.AbstractTypeCreator$TypeClassInfo)",
            "org.apache.cxf.aegis.type.java5.Java5TypeCreator:org.apache.cxf.aegis.type.Type createCollectionType(org.apache.cxf.aegis.type.AbstractTypeCreator$TypeClassInfo)",
            "org.apache.cxf.aegis.type.XMLTypeCreator:org.apache.cxf.aegis.type.Type createCollectionType(org.apache.cxf.aegis.type.AbstractTypeCreator$TypeClassInfo)"
        ]
    },
    "org.apache.cxf.aegis.type.java5.Java5TypeCreator:org.apache.cxf.aegis.type.Type createCollectionType(org.apache.cxf.aegis.type.AbstractTypeCreator$TypeClassInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.AbstractTypeCreator:org.apache.cxf.aegis.type.Type createTypeForClass(org.apache.cxf.aegis.type.AbstractTypeCreator$TypeClassInfo)",
            "org.apache.cxf.aegis.type.java5.Java5TypeCreator:org.apache.cxf.aegis.type.Type createCollectionType(org.apache.cxf.aegis.type.AbstractTypeCreator$TypeClassInfo)",
            "org.apache.cxf.aegis.type.XMLTypeCreator:org.apache.cxf.aegis.type.Type createCollectionType(org.apache.cxf.aegis.type.AbstractTypeCreator$TypeClassInfo)"
        ]
    },
    "org.apache.cxf.aegis.type.XMLTypeCreator:org.apache.cxf.aegis.type.Type createCollectionType(org.apache.cxf.aegis.type.AbstractTypeCreator$TypeClassInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.AbstractTypeCreator:org.apache.cxf.aegis.type.Type createTypeForClass(org.apache.cxf.aegis.type.AbstractTypeCreator$TypeClassInfo)",
            "org.apache.cxf.aegis.type.java5.Java5TypeCreator:org.apache.cxf.aegis.type.Type createCollectionType(org.apache.cxf.aegis.type.AbstractTypeCreator$TypeClassInfo)",
            "org.apache.cxf.aegis.type.XMLTypeCreator:org.apache.cxf.aegis.type.Type createCollectionType(org.apache.cxf.aegis.type.AbstractTypeCreator$TypeClassInfo)"
        ]
    },
    "org.apache.cxf.databinding.AbstractDataBinding:org.w3c.dom.Document copy(org.w3c.dom.Document)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.AbstractDataBinding:org.apache.ws.commons.schema.XmlSchema addSchemaDocument(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.common.xmlschema.SchemaCollection,org.w3c.dom.Document,java.lang.String)",
            "org.apache.cxf.databinding.AbstractDataBinding:org.w3c.dom.Document doEmptyNamespaceHack(org.w3c.dom.Document)"
        ]
    },
    "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:org.springframework.beans.factory.support.AbstractBeanDefinition mapElementToJaxbBean(org.w3c.dom.Element,java.lang.Class,java.lang.Class,java.lang.String,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void mapElementToJaxbPropertyFactory(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder,java.lang.String,java.lang.Class,java.lang.String,java.lang.Object[])",
            "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineFactoryBeanDefinitionParser:void doParse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder)"
        ]
    },
    "org.apache.cxf.transport.http.spring.HttpConduitBeanDefinitionParser:void mapTLSClientParameters(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.spring.HttpConduitBeanDefinitionParser:void mapSpecificElements(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder)"
        ]
    },
    "org.apache.cxf.ws.security.tokenstore.SecurityToken:org.w3c.dom.Element cloneElement(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.tokenstore.SecurityToken:void <init>(java.lang.String,org.w3c.dom.Element,java.util.Calendar,java.util.Calendar)",
            "org.apache.cxf.ws.security.tokenstore.SecurityToken:void <init>(java.lang.String,org.w3c.dom.Element,org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.tokenstore.SecurityToken:void setPreviousToken(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.tokenstore.SecurityToken:void setAttachedReference(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.tokenstore.SecurityToken:void setUnattachedReference(org.w3c.dom.Element)"
        ]
    },
    "org.apache.cxf.databinding.stax.StaxDataBinding$XMLStreamDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.stax.StaxDataBinding$XMLStreamDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,java.lang.Object)"
        ]
    },
    "org.apache.cxf.databinding.stax.StaxDataBinding$XMLStreamDataWriter:void write(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.spring.ControlledValidationXmlBeanDefinitionReader:int fastInfosetLoadBeanDefinitions(org.springframework.core.io.support.EncodedResource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.ControlledValidationXmlBeanDefinitionReader:int loadBeanDefinitions(org.springframework.core.io.support.EncodedResource)"
        ]
    },
    "org.apache.cxf.helpers.XMLUtils:void writeTo(org.w3c.dom.Node,java.io.OutputStream,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.XMLUtils:java.lang.String toString(org.w3c.dom.Node,int)"
        ]
    },
    "org.apache.cxf.helpers.XMLUtils:void writeTo(javax.xml.transform.Source,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.XMLUtils:void writeTo(org.w3c.dom.Node,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.aegis.AegisContext:org.w3c.dom.Document getAegisTypesSchemaDocument()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.AegisContext:org.apache.ws.commons.schema.XmlSchema addTypesSchemaDocument(org.apache.ws.commons.schema.XmlSchemaCollection)"
        ]
    },
    "org.apache.cxf.aegis.AegisContext:org.w3c.dom.Document getXmimeSchemaDocument()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.AegisContext:org.apache.ws.commons.schema.XmlSchema addXmimeSchemaDocument(org.apache.ws.commons.schema.XmlSchemaCollection)"
        ]
    },
    "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.transform.Source convertToXML(org.apache.cxf.ws.addressing.EndpointReferenceType)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.logging.LogUtils:void doLog(java.util.logging.Logger,java.util.logging.Level,java.lang.String,java.lang.Throwable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.logging.LogUtils:void log(java.util.logging.Logger,java.util.logging.Level,java.lang.String,java.lang.Throwable,java.lang.Object)",
            "org.apache.cxf.common.logging.LogUtils:void log(java.util.logging.Logger,java.util.logging.Level,java.lang.String,java.lang.Throwable,java.lang.Object[])",
            "org.apache.cxf.common.logging.LogUtils:void log(java.util.logging.Logger,java.util.logging.Level,java.lang.String,java.lang.Object[])"
        ]
    },
    "org.apache.cxf.management.utils.ManagementConsole:void getManagedObjectAttributes(javax.management.ObjectName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.management.utils.ManagementConsole:void listAllManagedEndpoint()"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit:void finalizeConfig()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.AbstractHTTPTransportFactory:org.apache.cxf.transport.Conduit getConduit(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.ws.addressing.EndpointReferenceType)"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit:void makeTrustDecision(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection retransmit(java.net.HttpURLConnection,java.net.URL,org.apache.cxf.message.Message,org.apache.cxf.io.CacheAndWriteOutputStream)",
            "org.apache.cxf.transport.http.HTTPConduit:void access$100(org.apache.cxf.transport.http.HTTPConduit,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit:void setTlsClientParameters(org.apache.cxf.configuration.jsse.TLSClientParameters)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.jms.JMSOldConfigHolder:java.util.Properties getInitialContextEnv(org.apache.cxf.transport.jms.AddressType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.jms.JMSOldConfigHolder:org.apache.cxf.transport.jms.JMSConfiguration createJMSConfigurationFromEndpointInfo(org.apache.cxf.Bus,org.apache.cxf.service.model.EndpointInfo,boolean)"
        ]
    },
    "org.apache.cxf.transport.jms.JMSDestination:void activate()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.AbstractObservable:void setMessageObserver(org.apache.cxf.transport.MessageObserver)"
        ]
    },
    "org.apache.cxf.transport.jms.JMSDestination:void shutdown()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:void releaseDecoupledDestination()",
            "org.apache.cxf.endpoint.ServerImpl:void stop()"
        ]
    },
    "org.apache.cxf.transport.jms.JMSDestination:void sendExchange(org.apache.cxf.message.Exchange,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.jms.JMSOutputStream:void doClose()"
        ]
    },
    "org.apache.cxf.transport.jms.JMSConduit:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.jms.JMSConduit$JMSBusLifeCycleListener:void preShutdown()",
            "org.apache.cxf.clustering.FailoverTargetSelector:void complete(org.apache.cxf.message.Exchange)"
        ]
    },
    "org.apache.cxf.tools.common.dom.ExtendedDocumentBuilder:void setValidating(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.tools.common.toolspec.ToolSpec:void <init>(java.io.InputStream,boolean)"
        ]
    },
    "org.apache.cxf.tools.common.dom.ExtendedDocumentBuilder:javax.xml.parsers.DocumentBuilder getParser()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.tools.common.dom.ExtendedDocumentBuilder:org.w3c.dom.Document parse(java.io.InputStream)"
        ]
    },
    "org.apache.cxf.tools.common.dom.SchemaValidatingSAXParser:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.tools.common.dom.SchemaValidatingSAXParser:void setValidating(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.tools.common.dom.SchemaValidatingSAXParser:void <init>()"
        ]
    },
    "org.apache.cxf.tools.common.VelocityGenerator:void initVelocity(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.tools.common.VelocityGenerator:void <init>(boolean)"
        ]
    },
    "org.apache.cxf.tools.common.toolspec.AbstractToolContainer:void init()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.tools.common.toolspec.ToolRunner:void runTool(java.lang.Class,java.io.InputStream,boolean,java.lang.String[],boolean,org.apache.cxf.tools.common.ToolContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.tools.common.toolspec.ToolRunner:void runTool(java.lang.Class,java.io.InputStream,boolean,java.lang.String[],org.apache.cxf.tools.common.ToolContext)",
            "org.apache.cxf.tools.common.toolspec.ToolRunner:void runTool(java.lang.Class,java.io.InputStream,boolean,java.lang.String[],boolean)"
        ]
    },
    "org.apache.cxf.jaxws.handler.HandlerChainInvoker:void mepComplete(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.handler.AbstractJAXWSHandlerInterceptor:void onCompletion(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxws.handler.HandlerChainInvoker:boolean invokeThisHandler(javax.xml.ws.handler.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.handler.HandlerChainInvoker:boolean invokeHandleFault(java.util.List,javax.xml.ws.handler.MessageContext)",
            "org.apache.cxf.jaxws.handler.HandlerChainInvoker:boolean invokeHandleMessage(java.util.List,javax.xml.ws.handler.MessageContext)"
        ]
    },
    "org.apache.cxf.common.injection.ResourceInjector:java.lang.reflect.Method findSetterForResource(javax.'annotation'.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.injection.ResourceInjector:void injectResourceClassLevel(java.lang.Class,javax.'annotation'.Resource)"
        ]
    },
    "org.apache.cxf.common.injection.ResourceInjector:void invokeSetter(java.lang.reflect.Method,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.injection.ResourceInjector:void injectResourceClassLevel(java.lang.Class,javax.'annotation'.Resource)",
            "org.apache.cxf.common.injection.ResourceInjector:void visitMethod(java.lang.reflect.Method,java.lang.'annotation'.Annotation)"
        ]
    },
    "org.apache.cxf.ws.addressing.ContextUtils:void storeMAPs(org.apache.cxf.ws.addressing.AddressingProperties,org.apache.cxf.message.Message,boolean,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.ContextUtils:void storeMAPs(org.apache.cxf.ws.addressing.AddressingProperties,org.apache.cxf.message.Message,boolean)",
            "org.apache.cxf.ws.addressing.ContextUtils:void storeMAPs(org.apache.cxf.ws.addressing.AddressingProperties,org.apache.cxf.message.Message,boolean,boolean)",
            "org.apache.cxf.ws.addressing.ContextUtils:void propogateReceivedMAPs(org.apache.cxf.ws.addressing.AddressingProperties,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.addressing.ContextUtils:void ensurePartialResponseMAPs(org.apache.cxf.message.Message,java.lang.String)"
        ]
    },
    "org.apache.cxf.ws.addressing.ContextUtils:org.apache.cxf.ws.addressing.AddressingPropertiesImpl retrieveMAPs(org.apache.cxf.message.Message,boolean,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.ContextUtils:org.apache.cxf.ws.addressing.AddressingPropertiesImpl retrieveMAPs(org.apache.cxf.message.Message,boolean,boolean)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void handleFault(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void mediate(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void restoreExchange(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.addressing.AddressingProperties)"
        ]
    },
    "org.apache.cxf.ws.rm.soap.RMSoapInterceptor:void encodeProperty(java.lang.Object,javax.xml.namespace.QName,java.lang.Class,org.w3c.dom.Element,javax.xml.bind.Marshaller)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.soap.RMSoapInterceptor:void encode(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.rm.RMProperties)",
            "org.apache.cxf.ws.rm.soap.RMSoapInterceptor:void encodeFault(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.rm.SequenceFault)"
        ]
    },
    "org.apache.cxf.ws.rm.persistence.jdbc.RMTxStore:void init()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.rm.persistence.jdbc.RMTxStore:void deleteDatabaseFiles(java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.persistence.jdbc.RMTxStore:void deleteDatabaseFiles()"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void checkServiceClassAnnotations(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void setServiceClass(java.lang.Class)"
        ]
    },
    "org.apache.cxf.bus.spring.BusEntityResolver:org.xml.sax.InputSource resolveEntity(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxws.handler.HandlerChainBuilder:void initializeViaInitMethod(javax.xml.ws.handler.Handler,java.util.Map,java.lang.reflect.Method)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.handler.HandlerChainBuilder:void configureHandler(javax.xml.ws.handler.Handler,org.apache.cxf.jaxws.javaee.PortComponentHandlerType)"
        ]
    },
    "org.apache.cxf.management.jmx.MBServerConnectorFactory:void createConnector()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.management.jmx.InstrumentationManagerImpl:void init()"
        ]
    },
    "org.apache.cxf.management.jmx.InstrumentationManagerImpl:void init()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.management.jmx.InstrumentationManagerImpl:void shutdown()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.management.jmx.InstrumentationManagerImpl:void postShutdown()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.buslifecycle.CXFBusLifeCycleManager:void postShutdown()"
        ]
    },
    "org.apache.cxf.management.jmx.MBServerConnectorFactory$1:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.management.jmx.MBServerConnectorFactory:void createConnector()",
            "org.apache.cxf.workqueue.OneShotAsyncExecutor:void execute(java.lang.Runnable)",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl$3:void run()",
            "org.apache.cxf.workqueue.SynchronousExecutor:void execute(java.lang.Runnable)",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl$2:void run()",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void execute(java.lang.Runnable,long)",
            "org.apache.cxf.jaxws.ServiceImpl$1:void execute(java.lang.Runnable)"
        ]
    },
    "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine:void setReuseAddress(org.mortbay.jetty.Connector)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine:void addServant(java.net.URL,org.apache.cxf.transport.http_jetty.JettyHTTPHandler)"
        ]
    },
    "org.apache.cxf.ws.rm.persistence.jdbc.RMTxStore:void storeMessage(org.apache.cxf.ws.rm.Identifier,org.apache.cxf.ws.rm.persistence.RMMessage,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.persistence.jdbc.RMTxStore:void persistIncoming(org.apache.cxf.ws.rm.DestinationSequence,org.apache.cxf.ws.rm.persistence.RMMessage)",
            "org.apache.cxf.ws.rm.persistence.jdbc.RMTxStore:void persistOutgoing(org.apache.cxf.ws.rm.SourceSequence,org.apache.cxf.ws.rm.persistence.RMMessage)"
        ]
    },
    "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void <init>(int,int,int,int,long,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void <init>(int,java.lang.String)",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void <init>(int,int,int,int,long)"
        ]
    },
    "org.apache.cxf.wsdl.JAXBExtensionHelper:void addExtensions(javax.wsdl.extensions.ExtensionRegistry,java.lang.Class,java.lang.Class,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl.JAXBExtensionHelper:void addExtensions(javax.wsdl.extensions.ExtensionRegistry,java.lang.String,java.lang.String)",
            "org.apache.cxf.wsdl.JAXBExtensionHelper:void addExtensions(javax.wsdl.extensions.ExtensionRegistry,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.wsdl.JAXBExtensionHelper:void addExtensions(javax.wsdl.extensions.ExtensionRegistry,java.lang.Class,java.lang.Class)"
        ]
    },
    "org.apache.cxf.service.invoker.AbstractInvoker:void checkSuspendedInvocation(org.apache.cxf.message.Exchange,java.lang.Object,java.lang.reflect.Method,java.util.List,java.lang.Throwable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.invoker.AbstractInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object,java.lang.reflect.Method,java.util.List)"
        ]
    },
    "org.apache.cxf.service.invoker.AbstractInvoker:java.lang.Object performInvocation(org.apache.cxf.message.Exchange,java.lang.Object,java.lang.reflect.Method,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.invoker.AbstractInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object,java.lang.reflect.Method,java.util.List)"
        ]
    },
    "org.apache.cxf.clustering.AbstractStaticFailoverStrategy:org.apache.cxf.endpoint.Endpoint selectAlternateEndpoint(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.clustering.FailoverTargetSelector:org.apache.cxf.endpoint.Endpoint getFailoverTarget(org.apache.cxf.message.Exchange,org.apache.cxf.clustering.FailoverTargetSelector$InvocationContext)"
        ]
    },
    "org.apache.cxf.clustering.FailoverTargetSelector:void setStrategy(org.apache.cxf.clustering.FailoverStrategy)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.clustering.FailoverFeature:void initialize(org.apache.cxf.endpoint.Client,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.clustering.FailoverTargetSelector:org.apache.cxf.clustering.FailoverStrategy getStrategy()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.clustering.FailoverTargetSelector:org.apache.cxf.endpoint.Endpoint getFailoverTarget(org.apache.cxf.message.Exchange,org.apache.cxf.clustering.FailoverTargetSelector$InvocationContext)"
        ]
    },
    "org.apache.cxf.clustering.FailoverTargetSelector:boolean requiresFailover(org.apache.cxf.message.Exchange)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.clustering.FailoverTargetSelector:void complete(org.apache.cxf.message.Exchange)"
        ]
    },
    "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl$ResendCandidate:void schedule()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl$ResendCandidate:void <init>(org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl$ResendCandidate:void attempted()"
        ]
    },
    "org.apache.cxf.ws.rm.persistence.jdbc.RMTxStore:java.util.Collection getDestinationSequences(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.rm.persistence.jdbc.RMTxStore:java.util.Collection getSourceSequences(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.RMManager:void clientCreated(org.apache.cxf.endpoint.Client)",
            "org.apache.cxf.ws.rm.RMManager:void recoverReliableEndpoint(org.apache.cxf.endpoint.Endpoint,org.apache.cxf.transport.Conduit)"
        ]
    },
    "org.apache.cxf.ws.rm.persistence.jdbc.RMTxStore:java.util.Collection getMessages(org.apache.cxf.ws.rm.Identifier,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.RMManager:void recoverReliableEndpoint(org.apache.cxf.endpoint.Endpoint,org.apache.cxf.transport.Conduit)"
        ]
    },
    "org.apache.cxf.tools.common.toolspec.parser.CommandLineParser:void throwUsage(org.apache.cxf.tools.common.toolspec.parser.ErrorVisitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.tools.common.toolspec.parser.CommandLineParser:org.apache.cxf.tools.common.toolspec.parser.CommandDocument parseArguments(java.lang.String[])"
        ]
    },
    "org.apache.cxf.catalog.OASISCatalogManager:void loadContextCatalogs(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.catalog.OASISCatalogManager:void loadContextCatalogs()"
        ]
    },
    "org.apache.cxf.jaxws.handler.HandlerChainInvoker:boolean invokeReversedHandleFault(javax.xml.ws.handler.MessageContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.handler.HandlerChainInvoker:boolean invokeHandleMessage(java.util.List,javax.xml.ws.handler.MessageContext)"
        ]
    },
    "org.apache.cxf.common.logging.AbstractDelegatingLogger:void entering(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.RMInInterceptor:void handle(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.common.logging.AbstractDelegatingLogger:void entering(java.lang.String,java.lang.String,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.logging.AbstractDelegatingLogger:void exiting(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.logging.AbstractDelegatingLogger:void entering(java.lang.String,java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.logging.AbstractDelegatingLogger:void exiting(java.lang.String,java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.xmlschema.XmlSchemaUtils:void setElementQName(org.apache.ws.commons.schema.XmlSchemaElement,javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.JAXBSchemaInitializer:org.apache.ws.commons.schema.XmlSchemaElement createXsElement(org.apache.cxf.service.model.MessagePartInfo,javax.xml.namespace.QName,org.apache.cxf.service.model.SchemaInfo)",
            "org.apache.cxf.jaxb.JAXBSchemaInitializer:void end(org.apache.cxf.service.model.FaultInfo)",
            "org.apache.cxf.jaxb.JAXBSchemaInitializer:void buildExceptionType(org.apache.cxf.service.model.MessagePartInfo,java.lang.Class)",
            "org.apache.cxf.jaxb.JAXBSchemaInitializer:void addElement(org.apache.ws.commons.schema.XmlSchemaSequence,org.apache.cxf.jaxb.JAXBBeanInfo,javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void checkForElement(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createBareMessage(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.OperationInfo,boolean)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createWrappedMessageSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.AbstractMessageContainer,org.apache.cxf.service.model.AbstractMessageContainer,org.apache.ws.commons.schema.XmlSchema,javax.xml.namespace.QName)"
        ]
    },
    "org.apache.cxf.common.xmlschema.XmlSchemaUtils:void setElementName(org.apache.ws.commons.schema.XmlSchemaElement,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.xmlschema.XmlSchemaUtils:void setElementRefName(org.apache.ws.commons.schema.XmlSchemaElement,javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.JAXBSchemaInitializer:void addElement(org.apache.ws.commons.schema.XmlSchemaSequence,org.apache.cxf.jaxb.JAXBBeanInfo,javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createWrappedMessageSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.AbstractMessageContainer,org.apache.cxf.service.model.AbstractMessageContainer,org.apache.ws.commons.schema.XmlSchema,javax.xml.namespace.QName)"
        ]
    },
    "org.apache.cxf.common.xmlschema.XmlSchemaUtils:void unsupportedConstruct(java.lang.String,java.lang.String,javax.xml.namespace.QName,org.apache.ws.commons.schema.XmlSchemaObject)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:org.apache.ws.commons.schema.XmlSchemaType getElementType(org.apache.cxf.common.xmlschema.SchemaCollection,java.lang.String,org.apache.ws.commons.schema.XmlSchemaElement,org.apache.ws.commons.schema.XmlSchemaType)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:org.apache.ws.commons.schema.XmlSchemaAnnotated getObjectAnnotated(org.apache.ws.commons.schema.XmlSchemaObject,javax.xml.namespace.QName)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:org.apache.ws.commons.schema.XmlSchemaParticle getObjectParticle(org.apache.ws.commons.schema.XmlSchemaObject,javax.xml.namespace.QName)"
        ]
    },
    "org.apache.cxf.common.xmlschema.XmlSchemaUtils:void unsupportedConstruct(java.lang.String,org.apache.ws.commons.schema.XmlSchemaType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:org.apache.ws.commons.schema.XmlSchemaSequence getContentSequence(org.apache.ws.commons.schema.XmlSchemaComplexType)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:org.apache.ws.commons.schema.XmlSchemaSequence getSequence(org.apache.ws.commons.schema.XmlSchemaComplexType)"
        ]
    },
    "org.apache.cxf.common.injection.ResourceInjector:void injectField(java.lang.reflect.Field,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.injection.ResourceInjector:void injectResourceClassLevel(java.lang.Class,javax.'annotation'.Resource)",
            "org.apache.cxf.common.injection.ResourceInjector:void visitField(java.lang.reflect.Field,java.lang.'annotation'.Annotation)"
        ]
    },
    "org.apache.cxf.configuration.jsse.spring.TLSParameterJaxBUtils:java.security.KeyStore getKeyStore(org.apache.cxf.configuration.security.KeyStoreType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.jsse.spring.TLSParameterJaxBUtils:javax.net.ssl.KeyManager[] getKeyManagers(org.apache.cxf.configuration.security.KeyManagersType)",
            "org.apache.cxf.configuration.jsse.spring.TLSParameterJaxBUtils:javax.net.ssl.TrustManager[] getTrustManagers(org.apache.cxf.configuration.security.TrustManagersType)"
        ]
    },
    "org.apache.cxf.jaxws.handler.InitParamResourceResolver:java.lang.Object convertToType(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.handler.InitParamResourceResolver:java.lang.Object resolve(java.lang.String,java.lang.Class)"
        ]
    },
    "org.apache.cxf.common.util.UrlUtils:java.lang.String urlDecode(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.UrlUtils:java.lang.String pathDecode(java.lang.String)"
        ]
    },
    "org.apache.cxf.interceptor.URIMappingInterceptor:java.lang.String uriDecode(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.util.Map getQueries(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:org.apache.cxf.message.MessageImpl retrieveFromContinuation(javax.servlet.http.HttpServletRequest)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void serviceRequest(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine:void retrieveListenerFactory()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine:void finalizeConfig()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine:void setTlsServerParameters(org.apache.cxf.configuration.jsse.TLSServerParameters)"
        ]
    },
    "org.apache.cxf.ws.rm.SequenceMonitor:void setMonitorInterval(long)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean$1:boolean handleError(org.w3c.dom.DOMError)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.commands.ForkedCommand:int execute(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.commands.ForkedCommand:int execute()"
        ]
    },
    "org.apache.cxf.management.jmx.MBServerConnectorFactory:void destroy()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.management.jmx.InstrumentationManagerImpl:void shutdown()"
        ]
    },
    "org.apache.cxf.transport.jms.JMSFactory:org.springframework.jms.listener.DefaultMessageListenerContainer createJmsListener(org.apache.cxf.transport.jms.JMSConfiguration,javax.jms.MessageListener,java.lang.String,java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.jms.JMSDestination:void activate()",
            "org.apache.cxf.transport.jms.JMSConduit:void sendExchange(org.apache.cxf.message.Exchange,java.lang.Object)"
        ]
    },
    "org.apache.cxf.ws.rm.persistence.jdbc.RMTxStore:void createDestinationSequence(org.apache.cxf.ws.rm.DestinationSequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.Destination:void addSequence(org.apache.cxf.ws.rm.DestinationSequence,boolean)"
        ]
    },
    "org.apache.cxf.tools.common.toolspec.ToolSupport:void init()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.tools.common.toolspec.ToolSupport:void performFunction()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.tools.common.toolspec.ToolSupport:void destroy()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxws.EndpointUtils:boolean isValidImplementor(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.spi.ProviderImpl:javax.xml.ws.Endpoint createEndpoint(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.cxf.common.logging.LogUtils:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.XMLUtils:void <clinit>()",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:void <clinit>()",
            "org.apache.cxf.common.commands.ForkedCommand:void <clinit>()",
            "org.apache.cxf.common.logging.LogUtils:void setLoggerClass(java.lang.Class)",
            "org.apache.cxf.common.logging.LogUtils:java.util.logging.Logger getLogger(java.lang.Class)",
            "org.apache.cxf.common.logging.LogUtils:java.util.logging.Logger getLogger(java.lang.Class,java.lang.String)",
            "org.apache.cxf.common.logging.LogUtils:java.util.logging.Logger getLogger(java.lang.Class,java.lang.String,java.lang.String)",
            "org.apache.cxf.common.logging.LogUtils:java.util.logging.Logger getL7dLogger(java.lang.Class)",
            "org.apache.cxf.common.logging.LogUtils:java.util.logging.Logger getL7dLogger(java.lang.Class,java.lang.String)",
            "org.apache.cxf.common.logging.LogUtils:java.util.logging.Logger getL7dLogger(java.lang.Class,java.lang.String,java.lang.String)",
            "org.apache.cxf.common.logging.LogUtils:java.util.logging.Logger createLogger(java.lang.Class,java.lang.String,java.lang.String)",
            "org.apache.cxf.common.logging.LogUtils:void log(java.util.logging.Logger,java.util.logging.Level,java.lang.String,java.lang.Throwable,java.lang.Object)",
            "org.apache.cxf.common.logging.LogUtils:void log(java.util.logging.Logger,java.util.logging.Level,java.lang.String,java.lang.Throwable,java.lang.Object[])",
            "org.apache.cxf.common.logging.LogUtils:void log(java.util.logging.Logger,java.util.logging.Level,java.lang.String)",
            "org.apache.cxf.common.logging.LogUtils:void log(java.util.logging.Logger,java.util.logging.Level,java.lang.String,java.lang.Throwable)",
            "org.apache.cxf.common.logging.LogUtils:void log(java.util.logging.Logger,java.util.logging.Level,java.lang.String,java.lang.Object)",
            "org.apache.cxf.common.logging.LogUtils:void log(java.util.logging.Logger,java.util.logging.Level,java.lang.String,java.lang.Object[])",
            "org.apache.cxf.common.logging.LogUtils:void <clinit>()",
            "org.apache.cxf.common.util.UrlUtils:void <clinit>()",
            "org.apache.cxf.common.util.Base64Utility:void <clinit>()",
            "org.apache.cxf.common.injection.ResourceInjector:void invokeSetter(java.lang.reflect.Method,java.lang.Object)",
            "org.apache.cxf.common.injection.ResourceInjector:void <clinit>()",
            "org.apache.cxf.common.annotation.AnnotationProcessor:void <clinit>()",
            "org.apache.cxf.resource.DefaultResourceManager:void <clinit>()",
            "org.apache.cxf.resource.URIResolver:void <clinit>()",
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void <clinit>()",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void initWildcardDefinitionMap()",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:java.lang.String getBeanName(java.lang.Object)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void <clinit>()",
            "org.apache.cxf.configuration.jsse.spring.TLSParameterJaxBUtils:void <clinit>()",
            "org.apache.cxf.jaxb.JAXBUtils:void <clinit>()",
            "org.apache.cxf.jaxb.DatatypeFactory:javax.xml.datatype.Duration createDuration(java.lang.String)",
            "org.apache.cxf.jaxb.DatatypeFactory:void <clinit>()",
            "org.apache.cxf.jaxb.JAXBDataBinding:void <clinit>()",
            "org.apache.cxf.jaxb.attachment.JAXBAttachmentUnmarshaller:void <clinit>()",
            "org.apache.cxf.jaxb.JAXBEncoderDecoder:void <clinit>()",
            "org.apache.cxf.jaxb.JAXBSchemaInitializer:void <clinit>()",
            "org.apache.cxf.jaxb.io.DataWriterImpl:void <clinit>()",
            "org.apache.cxf.jaxb.io.DataReaderImpl:void <clinit>()",
            "org.apache.cxf.management.interceptor.AbstractMessageResponseTimeInterceptor:void <clinit>()",
            "org.apache.cxf.management.jmx.MBServerConnectorFactory:void <clinit>()",
            "org.apache.cxf.management.jmx.InstrumentationManagerImpl:void <clinit>()",
            "org.apache.cxf.management.utils.ManagementConsole:void <clinit>()",
            "org.apache.cxf.management.counters.CounterRepository:void <clinit>()",
            "org.apache.cxf.staxutils.StaxUtils:void <clinit>()",
            "org.apache.cxf.interceptor.URIMappingInterceptor:void <clinit>()",
            "org.apache.cxf.interceptor.WrappedInInterceptor:void <clinit>()",
            "org.apache.cxf.interceptor.LoggingOutInterceptor:void <clinit>()",
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:void <clinit>()",
            "org.apache.cxf.interceptor.BareInInterceptor:void <clinit>()",
            "org.apache.cxf.interceptor.ClientFaultConverter:void processFaultDetail(org.apache.cxf.interceptor.Fault,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.ClientFaultConverter:void <clinit>()",
            "org.apache.cxf.interceptor.StaxInInterceptor:void <clinit>()",
            "org.apache.cxf.interceptor.FaultOutInterceptor:void <clinit>()",
            "org.apache.cxf.interceptor.AttachmentInInterceptor:void <clinit>()",
            "org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver:void <clinit>()",
            "org.apache.cxf.interceptor.LoggingInInterceptor:void <clinit>()",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void <clinit>()",
            "org.apache.cxf.interceptor.PrettyLoggingOutInterceptor:void <clinit>()",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void <clinit>()",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPClientPolicy getClient(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPClientPolicy)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPServerPolicy getServer(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPServerPolicy)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPClientPolicy getClient(org.apache.cxf.ws.policy.PolicyEngine,org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.transport.Conduit)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPServerPolicy getServer(org.apache.cxf.ws.policy.PolicyEngine,org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.transport.Destination)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPClientPolicy getClient(java.util.Collection)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPServerPolicy getServer(java.util.Collection)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:void <clinit>()",
            "org.apache.cxf.transport.http.HTTPConduit:void <clinit>()",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void <clinit>()",
            "org.apache.cxf.transport.http.gzip.GZIPOutInterceptor:void <clinit>()",
            "org.apache.cxf.transport.http.gzip.GZIPInInterceptor:void <clinit>()",
            "org.apache.cxf.transport.servlet.ServletController:void invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.servlet.ServletController:void <clinit>()",
            "org.apache.cxf.transport.servlet.CXFNonSpringServlet:java.util.logging.Logger getLogger()",
            "org.apache.cxf.transport.servlet.CXFServlet:java.util.logging.Logger getLogger()",
            "org.apache.cxf.transport.servlet.ServletDestination:void <clinit>()",
            "org.apache.cxf.transport.servlet.AbstractCXFServlet:java.util.logging.Logger getLogger()",
            "org.apache.cxf.transport.https.HttpsURLConnectionFactory:void <clinit>()",
            "org.apache.cxf.transport.https.SSLUtils:javax.net.ssl.KeyManager[] getKeyStoreManagers(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.transport.https.SSLUtils:javax.net.ssl.KeyManager[] loadKeyStore(javax.net.ssl.KeyManagerFactory,java.security.KeyStore,java.io.ByteArrayInputStream,java.lang.String,java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.transport.https.SSLUtils:javax.net.ssl.TrustManager[] getTrustStoreManagers(boolean,java.lang.String,java.lang.String,java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.transport.https.SSLUtils:java.lang.String getKeystore(java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.transport.https.SSLUtils:java.lang.String getKeystoreType(java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.transport.https.SSLUtils:java.lang.String getKeystorePassword(java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.transport.https.SSLUtils:java.lang.String getKeyPassword(java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.transport.https.SSLUtils:java.lang.String getKeystoreAlgorithm(java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.transport.https.SSLUtils:java.lang.String getTrustStoreAlgorithm(java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.transport.https.SSLUtils:java.lang.String[] getCiphersuites(java.util.List,java.lang.String[],org.apache.cxf.configuration.security.FiltersType,java.util.logging.Logger,boolean)",
            "org.apache.cxf.transport.https.SSLUtils:java.util.List compileRegexPatterns(java.util.List,boolean,java.util.logging.Logger)",
            "org.apache.cxf.transport.https.SSLUtils:java.lang.String[] getCiphersFromList(java.util.List,java.util.logging.Logger)",
            "org.apache.cxf.transport.https.SSLUtils:java.lang.String getTrustStore(java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.transport.https.SSLUtils:java.lang.String getTrustStoreType(java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.transport.https.SSLUtils:java.lang.String getSecureSocketProtocol(java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.transport.https.SSLUtils:boolean getRequireClientAuthentication(boolean,java.lang.Boolean,java.util.logging.Logger)",
            "org.apache.cxf.transport.https.SSLUtils:boolean getWantClientAuthentication(boolean,java.lang.Boolean,java.util.logging.Logger)",
            "org.apache.cxf.transport.https.SSLUtils:void logUnSupportedPolicy(boolean,boolean,java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.transport.https.SSLSocketFactoryWrapper:java.net.Socket enableCipherSuites(java.net.Socket,java.lang.Object[])",
            "org.apache.cxf.transport.https.SSLSocketFactoryWrapper:void <clinit>()",
            "org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector:void <clinit>()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void <clinit>()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine:void <clinit>()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void <clinit>()",
            "org.apache.cxf.transport.jms.JMSOldConfigHolder:void <clinit>()",
            "org.apache.cxf.transport.jms.JMSFactory:void <clinit>()",
            "org.apache.cxf.transport.jms.JMSOutputStream:void <clinit>()",
            "org.apache.cxf.transport.jms.JMSDestination:void <clinit>()",
            "org.apache.cxf.transport.jms.JMSUtils:void <clinit>()",
            "org.apache.cxf.transport.jms.JMSConfigFeature:void <clinit>()",
            "org.apache.cxf.transport.jms.JMSConduit:void <clinit>()",
            "org.apache.cxf.BusFactory:org.apache.cxf.BusFactory newInstance(java.lang.String)",
            "org.apache.cxf.BusFactory:java.lang.String getBusFactoryClass(java.lang.ClassLoader)",
            "org.apache.cxf.BusFactory:void <clinit>()",
            "org.apache.cxf.endpoint.UpfrontConduitSelector:void <clinit>()",
            "org.apache.cxf.endpoint.DeferredConduitSelector:void <clinit>()",
            "org.apache.cxf.endpoint.EndpointImpl:void <clinit>()",
            "org.apache.cxf.endpoint.ClientImpl:void waitResponse(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.ClientImpl:void <clinit>()",
            "org.apache.cxf.endpoint.ServerImpl:void <clinit>()",
            "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:void <clinit>()",
            "org.apache.cxf.endpoint.dynamic.TypeClassInitializer:void <clinit>()",
            "org.apache.cxf.ws.addressing.AddressingBuilder:org.apache.cxf.ws.addressing.AddressingBuilder getAddressingBuilder()",
            "org.apache.cxf.ws.addressing.AddressingBuilder:void <clinit>()",
            "org.apache.cxf.ws.addressing.ContextUtils:org.apache.cxf.ws.addressing.AddressingPropertiesImpl retrieveMAPs(org.apache.cxf.message.Message,boolean,boolean,boolean)",
            "org.apache.cxf.ws.addressing.ContextUtils:void <clinit>()",
            "org.apache.cxf.ws.addressing.MAPAggregator:void <clinit>()",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void <clinit>()",
            "org.apache.cxf.ws.addressing.soap.VersionTransformer:void <clinit>()",
            "org.apache.cxf.ws.policy.builder.jaxb.JaxbAssertionBuilder:java.lang.Object getData(org.w3c.dom.Element)",
            "org.apache.cxf.ws.policy.builder.jaxb.JaxbAssertionBuilder:void <clinit>()",
            "org.apache.cxf.ws.policy.ServerPolicyOutFaultInterceptor:void <clinit>()",
            "org.apache.cxf.ws.policy.PolicyInInterceptor:void <clinit>()",
            "org.apache.cxf.ws.policy.PolicyOutInterceptor:void <clinit>()",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:void <clinit>()",
            "org.apache.cxf.ws.policy.PolicyVerificationInInterceptor:void <clinit>()",
            "org.apache.cxf.ws.policy.PolicyVerificationOutInterceptor:void <clinit>()",
            "org.apache.cxf.ws.policy.EffectivePolicyImpl:void <clinit>()",
            "org.apache.cxf.ws.policy.PolicyVerificationInFaultInterceptor:void <clinit>()",
            "org.apache.cxf.ws.policy.AssertionBuilderRegistryImpl:void <clinit>()",
            "org.apache.cxf.ws.policy.ClientPolicyInFaultInterceptor:void <clinit>()",
            "org.apache.cxf.ws.security.policy.model.AlgorithmSuite:void <clinit>()",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor:void <clinit>()",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationTokenInterceptorProvider:void <clinit>()",
            "org.apache.cxf.ws.security.trust.STSClient:void <clinit>()",
            "org.apache.cxf.ws.security.wss4j.WSS4JOutInterceptor:void <clinit>()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void <clinit>()",
            "org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor:void <clinit>()",
            "org.apache.cxf.ws.rm.AbstractRMInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.AbstractRMInterceptor:void <clinit>()",
            "org.apache.cxf.ws.rm.Servant:void <clinit>()",
            "org.apache.cxf.ws.rm.DestinationSequence$SequenceTermination:void run()",
            "org.apache.cxf.ws.rm.DestinationSequence:void <clinit>()",
            "org.apache.cxf.ws.rm.SourceSequence:void <clinit>()",
            "org.apache.cxf.ws.rm.RMInInterceptor:void <clinit>()",
            "org.apache.cxf.ws.rm.RetransmissionCallback:void <clinit>()",
            "org.apache.cxf.ws.rm.RMOutInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.RMOutInterceptor:void <clinit>()",
            "org.apache.cxf.ws.rm.RMManager:void <clinit>()",
            "org.apache.cxf.ws.rm.Proxy:void <clinit>()",
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl:void <clinit>()",
            "org.apache.cxf.ws.rm.soap.SoapFaultFactory:org.apache.cxf.interceptor.Fault createSoap12Fault(org.apache.cxf.ws.rm.SequenceFault)",
            "org.apache.cxf.ws.rm.soap.SoapFaultFactory:void <clinit>()",
            "org.apache.cxf.ws.rm.soap.RMSoapInterceptor:void <clinit>()",
            "org.apache.cxf.ws.rm.SequenceMonitor:void <clinit>()",
            "org.apache.cxf.ws.rm.RMEndpoint:void <clinit>()",
            "org.apache.cxf.ws.rm.persistence.jdbc.RMTxStore:void abort()",
            "org.apache.cxf.ws.rm.persistence.jdbc.RMTxStore:void init()",
            "org.apache.cxf.ws.rm.persistence.jdbc.RMTxStore:void <clinit>()",
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void <clinit>()",
            "org.apache.cxf.workqueue.WorkQueueManagerImpl:void <clinit>()",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void <clinit>()",
            "org.apache.cxf.databinding.source.XMLStreamDataWriter:void <clinit>()",
            "org.apache.cxf.databinding.source.XMLStreamDataReader:void <clinit>()",
            "org.apache.cxf.databinding.source.NodeDataReader:void <clinit>()",
            "org.apache.cxf.databinding.source.NodeDataWriter:void <clinit>()",
            "org.apache.cxf.databinding.stax.StaxDataBinding$XMLStreamDataWriter:void <clinit>()",
            "org.apache.cxf.databinding.stax.StaxDataBindingInterceptor:void <clinit>()",
            "org.apache.cxf.wsdl.JAXBExtensionHelper:void <clinit>()",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:void <clinit>()",
            "org.apache.cxf.service.invoker.AbstractInvoker:void <clinit>()",
            "org.apache.cxf.service.model.InterfaceInfo:void <clinit>()",
            "org.apache.cxf.service.model.BindingInfo:void <clinit>()",
            "org.apache.cxf.service.model.OperationInfo:void <clinit>()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void <clinit>()",
            "org.apache.cxf.binding.soap.interceptor.ReadHeadersInterceptor:void <clinit>()",
            "org.apache.cxf.binding.soap.interceptor.RPCOutInterceptor:void <clinit>()",
            "org.apache.cxf.binding.soap.interceptor.Soap12FaultOutInterceptor:void <clinit>()",
            "org.apache.cxf.binding.soap.interceptor.CheckFaultInterceptor:void <clinit>()",
            "org.apache.cxf.binding.soap.interceptor.RPCInInterceptor:void <clinit>()",
            "org.apache.cxf.binding.soap.interceptor.MustUnderstandInterceptor:void <clinit>()",
            "org.apache.cxf.binding.xml.interceptor.XMLMessageInInterceptor:void <clinit>()",
            "org.apache.cxf.clustering.AbstractStaticFailoverStrategy:void <clinit>()",
            "org.apache.cxf.clustering.FailoverTargetSelector:void <clinit>()",
            "org.apache.cxf.tools.common.dom.ExtendedDocumentBuilder:void <clinit>()",
            "org.apache.cxf.tools.common.dom.SchemaValidatingSAXParser:void <clinit>()",
            "org.apache.cxf.tools.common.AbstractCXFToolContainer:void <clinit>()",
            "org.apache.cxf.tools.common.ClassUtils:void <clinit>()",
            "org.apache.cxf.tools.common.VelocityGenerator:void <clinit>()",
            "org.apache.cxf.tools.common.toolspec.ToolSpec:void <clinit>()",
            "org.apache.cxf.tools.common.toolspec.ToolSupport:void <clinit>()",
            "org.apache.cxf.tools.common.toolspec.parser.CommandDocument:void <clinit>()",
            "org.apache.cxf.tools.common.toolspec.parser.TokenInputStream:void <clinit>()",
            "org.apache.cxf.tools.common.toolspec.parser.Form:void <clinit>()",
            "org.apache.cxf.tools.common.toolspec.parser.Option:void <clinit>()",
            "org.apache.cxf.tools.common.toolspec.parser.OptionGroup:void <clinit>()",
            "org.apache.cxf.tools.common.toolspec.parser.ErrorVisitor:void <clinit>()",
            "org.apache.cxf.tools.common.toolspec.parser.CommandLineParser:void <clinit>()",
            "org.apache.cxf.tools.common.toolspec.parser.Argument:void <clinit>()",
            "org.apache.cxf.tools.common.toolspec.AbstractToolContainer:void <clinit>()",
            "org.apache.cxf.tools.common.toolspec.ToolRunner:void <clinit>()",
            "org.apache.cxf.tools.common.model.JavaMethod:void <clinit>()",
            "org.apache.cxf.tools.util.FileWriterUtil:void <clinit>()",
            "org.apache.cxf.tools.util.AnnotationUtil:void <clinit>()",
            "org.apache.cxf.catalog.OASISCatalogManager:void <clinit>()",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void <clinit>()",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void <clinit>()",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void <clinit>()",
            "org.apache.cxf.wsdl11.WSDLServiceFactory:void <clinit>()",
            "org.apache.cxf.bus.spring.BusApplicationContext:org.springframework.core.io.Resource[] getConfigResources()",
            "org.apache.cxf.bus.spring.BusApplicationContext:void <clinit>()",
            "org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor:void <clinit>()",
            "org.apache.cxf.bus.spring.BusEntityResolver:void <clinit>()",
            "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus createBus(java.lang.String[],boolean)",
            "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.bus.spring.BusApplicationContext createApplicationContext(java.lang.String[],boolean)",
            "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus createBus(java.net.URL[],boolean)",
            "org.apache.cxf.bus.spring.SpringBusFactory:void <clinit>()",
            "org.apache.cxf.frontend.ClientProxy:void <clinit>()",
            "org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory:void <clinit>()",
            "org.apache.cxf.frontend.ServerFactoryBean:void <clinit>()",
            "org.apache.cxf.aegis.AegisXMLStreamDataReader:void <clinit>()",
            "org.apache.cxf.aegis.databinding.XMLStreamDataWriter:void <clinit>()",
            "org.apache.cxf.aegis.databinding.ElementDataWriter:void <clinit>()",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void <clinit>()",
            "org.apache.cxf.aegis.AegisXMLStreamDataWriter:void <clinit>()",
            "org.apache.cxf.aegis.type.basic.XMLBeanTypeInfo:void <clinit>()",
            "org.apache.cxf.aegis.type.basic.ArrayType:void <clinit>()",
            "org.apache.cxf.aegis.type.encoded.SoapArrayType:void <clinit>()",
            "org.apache.cxf.aegis.type.XMLTypeCreator:void <clinit>()",
            "org.apache.cxf.aegis.type.TypeUtil:void <clinit>()",
            "org.apache.cxf.aegis.type.DefaultTypeMapping:void <clinit>()",
            "org.apache.cxf.jaxws.handler.AnnotationHandlerChainBuilder:void <clinit>()",
            "org.apache.cxf.jaxws.handler.HandlerChainInvoker:void <clinit>()",
            "org.apache.cxf.jaxws.handler.InitParamResourceResolver:void <clinit>()",
            "org.apache.cxf.jaxws.handler.HandlerChainBuilder:void initializeViaInitMethod(javax.xml.ws.handler.Handler,java.util.Map,java.lang.reflect.Method)",
            "org.apache.cxf.jaxws.handler.HandlerChainBuilder:void <clinit>()",
            "org.apache.cxf.jaxws.handler.logical.LogicalMessageImpl:void <clinit>()",
            "org.apache.cxf.jaxws.EndpointUtils:void <clinit>()",
            "org.apache.cxf.jaxws.support.ServiceDelegateAccessor:void <clinit>()",
            "org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean:void <clinit>()",
            "org.apache.cxf.jaxws.support.JaxWsServiceConfiguration:void <clinit>()",
            "org.apache.cxf.jaxws.support.JaxWsImplementorInfo:void <clinit>()",
            "org.apache.cxf.jaxws.WrapperClassGenerator:void <clinit>()",
            "org.apache.cxf.jaxws.EndpointReferenceBuilder:void <clinit>()",
            "org.apache.cxf.jaxws.JaxWsClientProxy:void <clinit>()",
            "org.apache.cxf.jaxws.ServiceImpl:void <clinit>()",
            "org.apache.cxf.jaxws.EndpointImpl:void <clinit>()",
            "org.apache.cxf.jaxws.spi.ProviderImpl:void <clinit>()",
            "org.apache.cxf.jaxws.DispatchImpl:void <clinit>()",
            "org.apache.cxf.jaxws.interceptors.WebFaultOutInterceptor:void <clinit>()",
            "org.apache.cxf.jaxws.interceptors.HolderOutInterceptor:void <clinit>()",
            "org.apache.cxf.jaxws.interceptors.WrapperClassInInterceptor:void <clinit>()",
            "org.apache.cxf.jaxws.interceptors.SwAOutInterceptor:void <clinit>()",
            "org.apache.cxf.jaxws.binding.soap.SOAPBindingImpl:void <clinit>()",
            "org.apache.cxf.jaxws.JAXWSMethodDispatcher:void <clinit>()",
            "org.apache.cxf.jaxws.context.WebServiceContextImpl:void <clinit>()",
            "org.apache.cxf.xmlbeans.DataWriterImpl:void <clinit>()",
            "org.apache.cxf.xmlbeans.XmlBeansDataBinding:void <clinit>()",
            "org.apache.cxf.xmlbeans.DataReaderImpl:void <clinit>()",
            "org.apache.cxf.xmlbeans.XmlBeansSchemaInitializer:void <clinit>()"
        ]
    },
    "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void addBusWiringAttribute(org.springframework.beans.factory.support.BeanDefinitionBuilder,org.apache.cxf.configuration.spring.BusWiringType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void doParse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder)",
            "org.apache.cxf.configuration.spring.AbstractFactoryBeanDefinitionParser:void doParse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder)",
            "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineFactoryBeanDefinitionParser:void doParse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder)",
            "org.apache.cxf.ws.rm.spring.RMManagerBeanDefinitionParser:void doParse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder)",
            "org.apache.cxf.jaxws.spring.EndpointDefinitionParser:void doParse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder)"
        ]
    },
    "org.apache.cxf.transport.http.gzip.GZIPOutInterceptor$GZipThresholdOutputStream:void thresholdNotReached()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.io.AbstractThresholdOutputStream:void close()"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:void setContext(java.util.Map,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:void invoke(org.apache.cxf.endpoint.ClientCallback,org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[])",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)"
        ]
    },
    "org.apache.cxf.ws.policy.builder.jaxb.JaxbAssertionBuilder:java.lang.Object getData(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.builder.jaxb.JaxbAssertionBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)"
        ]
    },
    "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl$2:void onMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit$InterposedMessageObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream$1:void run()",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponseInternal()",
            "org.apache.cxf.transport.servlet.ServletDestination:void invoke(javax.servlet.ServletConfig,javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void serviceRequest(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.jms.continuations.JMSContinuation:void doResume()",
            "org.apache.cxf.transport.jms.JMSDestination:void onMessage(javax.jms.Message)",
            "org.apache.cxf.transport.jms.JMSConduit:void onMessage(javax.jms.Message)",
            "org.apache.cxf.endpoint.ClientImpl:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.soap.interceptor.CheckFaultInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.xml.interceptor.XMLMessageInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerInterceptor:void handleAbort(org.apache.cxf.binding.soap.SoapMessage,javax.xml.ws.handler.MessageContext)",
            "org.apache.cxf.jaxws.handler.logical.LogicalHandlerOutInterceptor$LogicalHandlerOutEndingInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl:void start()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.RMOutInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.RMManager:void recoverReliableEndpoint(org.apache.cxf.endpoint.Endpoint,org.apache.cxf.transport.Conduit)"
        ]
    },
    "org.apache.cxf.ws.rm.persistence.jdbc.RMTxStore:void createSourceSequence(org.apache.cxf.ws.rm.SourceSequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.Source:void addSequence(org.apache.cxf.ws.rm.SourceSequence,boolean)"
        ]
    },
    "org.apache.cxf.ws.rm.persistence.jdbc.RMTxStore:void createTables()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.persistence.jdbc.RMTxStore:void init()"
        ]
    },
    "org.apache.cxf.phase.PhaseInterceptorChain:void outputChainToLog(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:void updateIterator()",
            "org.apache.cxf.phase.PhaseInterceptorChain:void insertInterceptor(int,org.apache.cxf.phase.PhaseInterceptor,boolean)"
        ]
    },
    "org.apache.cxf.tools.common.dom.ExtendedDocumentBuilder:org.w3c.dom.Document parse(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.tools.common.toolspec.ToolSpec:void <init>(java.io.InputStream,boolean)"
        ]
    },
    "org.apache.cxf.tools.common.toolspec.ToolSpec:java.lang.String getParameterDefault(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.tools.common.toolspec.parser.CommandDocument:java.lang.String[] getParameters(java.lang.String)"
        ]
    },
    "org.apache.cxf.tools.common.toolspec.parser.TokenInputStream:java.lang.String read()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.tools.common.toolspec.parser.Form:boolean hasInfoOption(org.apache.cxf.tools.common.toolspec.parser.TokenInputStream)",
            "org.apache.cxf.tools.common.toolspec.parser.Option:boolean accept(org.apache.cxf.tools.common.toolspec.parser.TokenInputStream,org.w3c.dom.Element,org.apache.cxf.tools.common.toolspec.parser.ErrorVisitor)",
            "org.apache.cxf.tools.common.toolspec.parser.Option:java.lang.String readArgumentValue(org.apache.cxf.tools.common.toolspec.parser.TokenInputStream,java.lang.String,org.apache.cxf.tools.common.toolspec.parser.ErrorVisitor)",
            "org.apache.cxf.tools.common.toolspec.parser.Argument:void addElement(org.apache.cxf.tools.common.toolspec.parser.TokenInputStream,org.w3c.dom.Element)"
        ]
    },
    "org.apache.cxf.tools.common.toolspec.parser.TokenInputStream:java.lang.String peek()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.tools.common.toolspec.parser.Form:boolean accept(org.apache.cxf.tools.common.toolspec.parser.TokenInputStream,org.w3c.dom.Element,org.apache.cxf.tools.common.toolspec.parser.ErrorVisitor)",
            "org.apache.cxf.tools.common.toolspec.parser.Option:boolean accept(org.apache.cxf.tools.common.toolspec.parser.TokenInputStream,org.w3c.dom.Element,org.apache.cxf.tools.common.toolspec.parser.ErrorVisitor)",
            "org.apache.cxf.tools.common.toolspec.parser.Argument:boolean accept(org.apache.cxf.tools.common.toolspec.parser.TokenInputStream,org.w3c.dom.Element,org.apache.cxf.tools.common.toolspec.parser.ErrorVisitor)"
        ]
    },
    "org.apache.cxf.tools.common.toolspec.parser.ErrorVisitor:void add(org.apache.cxf.tools.common.toolspec.parser.CommandLineError)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.tools.common.toolspec.parser.Form:boolean accept(org.apache.cxf.tools.common.toolspec.parser.TokenInputStream,org.w3c.dom.Element,org.apache.cxf.tools.common.toolspec.parser.ErrorVisitor)",
            "org.apache.cxf.tools.common.toolspec.parser.Option:java.lang.String readArgumentValue(org.apache.cxf.tools.common.toolspec.parser.TokenInputStream,java.lang.String,org.apache.cxf.tools.common.toolspec.parser.ErrorVisitor)",
            "org.apache.cxf.tools.common.toolspec.parser.Option:boolean isSatisfied(org.apache.cxf.tools.common.toolspec.parser.ErrorVisitor)",
            "org.apache.cxf.tools.common.toolspec.parser.Argument:boolean accept(org.apache.cxf.tools.common.toolspec.parser.TokenInputStream,org.w3c.dom.Element,org.apache.cxf.tools.common.toolspec.parser.ErrorVisitor)",
            "org.apache.cxf.tools.common.toolspec.parser.Argument:boolean isSatisfied(org.apache.cxf.tools.common.toolspec.parser.ErrorVisitor)"
        ]
    },
    "org.apache.cxf.tools.common.toolspec.parser.Argument:boolean accept(org.apache.cxf.tools.common.toolspec.parser.TokenInputStream,org.w3c.dom.Element,org.apache.cxf.tools.common.toolspec.parser.ErrorVisitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.tools.common.toolspec.parser.Form:boolean accept(org.apache.cxf.tools.common.toolspec.parser.TokenInputStream,org.w3c.dom.Element,org.apache.cxf.tools.common.toolspec.parser.ErrorVisitor)"
        ]
    },
    "org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory:void initializeAnnotationInterceptors(org.apache.cxf.endpoint.Endpoint,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.frontend.ClientFactoryBean:org.apache.cxf.endpoint.Client create()",
            "org.apache.cxf.frontend.ServerFactoryBean:org.apache.cxf.endpoint.Server create()"
        ]
    },
    "org.apache.cxf.jaxws.handler.AnnotationHandlerChainBuilder:org.apache.cxf.jaxws.handler.AnnotationHandlerChainBuilder$HandlerChainAnnotation findHandlerChainAnnotation(java.lang.Class,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.handler.AnnotationHandlerChainBuilder:java.util.List buildHandlerChainFromClass(java.lang.Class,java.util.List,javax.xml.namespace.QName,javax.xml.namespace.QName,java.lang.String)",
            "org.apache.cxf.jaxws.handler.AnnotationHandlerChainBuilder:org.apache.cxf.jaxws.handler.AnnotationHandlerChainBuilder$HandlerChainAnnotation findHandlerChainAnnotation(java.lang.Class,boolean)"
        ]
    },
    "org.apache.cxf.jaxws.interceptors.WebFaultOutInterceptor:java.lang.Object createFaultInfoBean(javax.xml.ws.WebFault,java.lang.Throwable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.interceptors.WebFaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.frontend.spring.ServerFactoryBeanDefinitionParser:void doParse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxb.JAXBDataBinding:org.apache.cxf.databinding.WrapperHelper createWrapperHelper(java.lang.Class,java.lang.reflect.Method[],java.lang.reflect.Method[],java.lang.reflect.Method[],java.lang.reflect.Field[],java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.JAXBDataBinding:org.apache.cxf.databinding.WrapperHelper createWrapperHelper(java.lang.Class,java.util.List,java.util.List,java.util.List)"
        ]
    },
    "org.apache.cxf.ws.addressing.ContextUtils:org.apache.cxf.transport.Conduit getConduit(org.apache.cxf.transport.Conduit,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.MAPAggregator:void addRoleSpecific(org.apache.cxf.ws.addressing.AddressingPropertiesImpl,org.apache.cxf.message.Message,boolean,boolean)"
        ]
    },
    "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus createBus(java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus createBus(java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus createBus(java.lang.String)"
        ]
    },
    "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus createBus(java.net.URL[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus createBus(java.net.URL,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus createBus(java.net.URL)"
        ]
    },
    "org.apache.cxf.jaxws.handler.HandlerChainInvoker:void changeMessageDirection(javax.xml.ws.handler.MessageContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.handler.HandlerChainInvoker:boolean invokeHandleMessage(java.util.List,javax.xml.ws.handler.MessageContext)"
        ]
    },
    "org.apache.cxf.common.logging.AbstractDelegatingLogger:boolean isLoggable(java.util.logging.Level)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.XMLUtils:org.w3c.dom.Document parse(java.io.InputStream)",
            "org.apache.cxf.helpers.XMLUtils:org.w3c.dom.Document parse(byte[])",
            "org.apache.cxf.common.commands.ForkedCommand:int execute(int)",
            "org.apache.cxf.common.logging.LogUtils:void log(java.util.logging.Logger,java.util.logging.Level,java.lang.String,java.lang.Throwable,java.lang.Object)",
            "org.apache.cxf.common.logging.LogUtils:void log(java.util.logging.Logger,java.util.logging.Level,java.lang.String,java.lang.Throwable,java.lang.Object[])",
            "org.apache.cxf.common.logging.LogUtils:void log(java.util.logging.Logger,java.util.logging.Level,java.lang.String,java.lang.Object[])",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void log(java.util.logging.LogRecord)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void log(java.util.logging.Level,java.lang.String)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void log(java.util.logging.Level,java.lang.String,java.lang.Object)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void log(java.util.logging.Level,java.lang.String,java.lang.Object[])",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void logp(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void logp(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.Object)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void logp(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.Object[])",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void logp(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void logrb(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void logrb(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Object)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void logrb(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Object[])",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void logrb(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void entering(java.lang.String,java.lang.String)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void entering(java.lang.String,java.lang.String,java.lang.Object)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void entering(java.lang.String,java.lang.String,java.lang.Object[])",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void exiting(java.lang.String,java.lang.String)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void exiting(java.lang.String,java.lang.String,java.lang.Object)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void throwing(java.lang.String,java.lang.String,java.lang.Throwable)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void severe(java.lang.String)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void warning(java.lang.String)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void info(java.lang.String)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void config(java.lang.String)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void fine(java.lang.String)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void finer(java.lang.String)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void finest(java.lang.String)",
            "org.apache.cxf.resource.DefaultResourceManager:java.lang.Object findResource(java.lang.String,java.lang.Class,boolean,java.util.List)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureBean(java.lang.String,java.lang.Object,boolean)",
            "org.apache.cxf.jaxb.JAXBDataBinding:void initialize(org.apache.cxf.service.Service)",
            "org.apache.cxf.management.jmx.MBServerConnectorFactory:void createConnector()",
            "org.apache.cxf.management.jmx.MBServerConnectorFactory:void destroy()",
            "org.apache.cxf.interceptor.URIMappingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.PrettyLoggingOutInterceptor$LoggingCallback:void onClose(org.apache.cxf.io.CachedOutputStream)",
            "org.apache.cxf.interceptor.LoggingOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:org.apache.cxf.interceptor.InterceptorChain getOutInterceptorChain(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:org.apache.cxf.phase.PhaseInterceptorChain getChain(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.interceptor.LoggingOutInterceptor$LoggingCallback:void onClose(org.apache.cxf.io.CachedOutputStream)",
            "org.apache.cxf.interceptor.LoggingInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.LoggingInInterceptor:void logging(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.PrettyLoggingOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:void finalizeConfig()",
            "org.apache.cxf.transport.http.HTTPConduit:void makeTrustDecision(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:void setURLRequestHeaders(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:void setTlsClientParameters(org.apache.cxf.configuration.jsse.TLSClientParameters)",
            "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection redirectRetransmit(java.net.HttpURLConnection,org.apache.cxf.message.Message,org.apache.cxf.io.CacheAndWriteOutputStream)",
            "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection authorizationRetransmit(java.net.HttpURLConnection,org.apache.cxf.message.Message,org.apache.cxf.io.CacheAndWriteOutputStream)",
            "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection retransmit(java.net.HttpURLConnection,java.net.URL,org.apache.cxf.message.Message,org.apache.cxf.io.CacheAndWriteOutputStream)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void setHeaders(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleRetransmits()",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponseInternal()",
            "org.apache.cxf.transport.http.gzip.GZIPOutInterceptor:org.apache.cxf.transport.http.gzip.GZIPOutInterceptor$UseGzip gzipPermitted(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.servlet.ServletController:void invokeDestination(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.cxf.transport.servlet.ServletDestination)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void serviceRequest(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine createJettyHTTPServerEngine(int,java.lang.String)",
            "org.apache.cxf.transport.jms.JMSOldConfigHolder:java.util.Properties getInitialContextEnv(org.apache.cxf.transport.jms.AddressType)",
            "org.apache.cxf.transport.jms.JMSOutputStream:java.lang.Object retrieveRequestFromStream(boolean)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] processResult(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,java.util.Map)",
            "org.apache.cxf.endpoint.ClientImpl:void setContext(java.util.Map,org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ClientImpl:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ClientImpl:org.apache.cxf.phase.PhaseInterceptorChain setupInterceptorChain(org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:void outputDebug(org.apache.cxf.jaxb.JAXBUtils$JCodeModel)",
            "org.apache.cxf.ws.policy.builder.jaxb.JaxbAssertionBuilder:java.lang.Object getData(org.w3c.dom.Element)",
            "org.apache.cxf.ws.policy.PolicyOutInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.policy.PolicyUtils:void logPolicy(java.util.logging.Logger,java.util.logging.Level,java.lang.String,org.apache.neethi.PolicyComponent)",
            "org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.wss4j.WSS4JOutInterceptor$WSS4JOutInterceptorInternal:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.rm.Servant:org.apache.cxf.ws.rm.CreateSequenceResponseType createSequence(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.SourceSequence:void checkLastMessage(org.apache.cxf.ws.rm.Identifier,java.math.BigInteger)",
            "org.apache.cxf.ws.rm.RMInInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.RMOutInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.RMOutInterceptor:void addAcknowledgements(org.apache.cxf.ws.rm.Destination,org.apache.cxf.ws.rm.RMProperties,org.apache.cxf.ws.rm.Identifier,org.apache.cxf.ws.addressing.v200408.AttributedURI)",
            "org.apache.cxf.ws.rm.RMManager:org.apache.cxf.ws.rm.RMEndpoint getReliableEndpoint(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.Proxy:java.lang.Object invoke(org.apache.cxf.service.model.OperationInfo,java.lang.Object[],java.util.Map)",
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl:void resend(org.apache.cxf.transport.Conduit,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.persistence.jdbc.RMTxStore:void createDestinationSequence(org.apache.cxf.ws.rm.DestinationSequence)",
            "org.apache.cxf.ws.rm.persistence.jdbc.RMTxStore:void createSourceSequence(org.apache.cxf.ws.rm.SourceSequence)",
            "org.apache.cxf.ws.rm.persistence.jdbc.RMTxStore:java.util.Collection getDestinationSequences(java.lang.String)",
            "org.apache.cxf.ws.rm.persistence.jdbc.RMTxStore:java.util.Collection getSourceSequences(java.lang.String)",
            "org.apache.cxf.ws.rm.persistence.jdbc.RMTxStore:void createTables()",
            "org.apache.cxf.phase.PhaseInterceptorChain:void add(org.apache.cxf.interceptor.Interceptor,boolean)",
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void unwind(org.apache.cxf.message.Message)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void outputChainToLog(boolean)",
            "org.apache.cxf.service.invoker.AbstractInvoker:void checkSuspendedInvocation(org.apache.cxf.message.Exchange,java.lang.Object,java.lang.reflect.Method,java.util.List,java.lang.Throwable)",
            "org.apache.cxf.service.invoker.AbstractInvoker:java.lang.Object performInvocation(org.apache.cxf.message.Exchange,java.lang.Object,java.lang.reflect.Method,java.lang.Object[])",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromWSDL(java.lang.String)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromClass()",
            "org.apache.cxf.tools.common.dom.ExtendedDocumentBuilder:org.w3c.dom.Document parse(java.io.InputStream)",
            "org.apache.cxf.tools.common.toolspec.ToolSpec:java.lang.String getParameterDefault(java.lang.String)",
            "org.apache.cxf.tools.common.toolspec.ToolSupport:void init()",
            "org.apache.cxf.tools.common.toolspec.ToolSupport:void performFunction()",
            "org.apache.cxf.tools.common.toolspec.ToolSupport:void destroy()",
            "org.apache.cxf.tools.common.toolspec.parser.CommandDocument:java.lang.String getParameter(java.lang.String)",
            "org.apache.cxf.tools.common.toolspec.parser.CommandDocument:java.lang.String[] getParameters(java.lang.String)",
            "org.apache.cxf.tools.common.toolspec.parser.TokenInputStream:java.lang.String read()",
            "org.apache.cxf.tools.common.toolspec.parser.TokenInputStream:java.lang.String peek()",
            "org.apache.cxf.tools.common.toolspec.parser.Form:boolean accept(org.apache.cxf.tools.common.toolspec.parser.TokenInputStream,org.w3c.dom.Element,org.apache.cxf.tools.common.toolspec.parser.ErrorVisitor)",
            "org.apache.cxf.tools.common.toolspec.parser.Option:boolean accept(org.apache.cxf.tools.common.toolspec.parser.TokenInputStream,org.w3c.dom.Element,org.apache.cxf.tools.common.toolspec.parser.ErrorVisitor)",
            "org.apache.cxf.tools.common.toolspec.parser.Option:boolean isSatisfied(org.apache.cxf.tools.common.toolspec.parser.ErrorVisitor)",
            "org.apache.cxf.tools.common.toolspec.parser.OptionGroup:boolean accept(org.apache.cxf.tools.common.toolspec.parser.TokenInputStream,org.w3c.dom.Element,org.apache.cxf.tools.common.toolspec.parser.ErrorVisitor)",
            "org.apache.cxf.tools.common.toolspec.parser.ErrorVisitor:void add(org.apache.cxf.tools.common.toolspec.parser.CommandLineError)",
            "org.apache.cxf.tools.common.toolspec.parser.CommandLineParser:org.apache.cxf.tools.common.toolspec.parser.CommandDocument parseArguments(java.lang.String[])",
            "org.apache.cxf.tools.common.toolspec.parser.Argument:boolean accept(org.apache.cxf.tools.common.toolspec.parser.TokenInputStream,org.w3c.dom.Element,org.apache.cxf.tools.common.toolspec.parser.ErrorVisitor)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void registerWSDLExtensibilityPlugins(javax.wsdl.extensions.ExtensionRegistry)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void registerInitialExtensions(java.lang.String)",
            "org.apache.cxf.bus.spring.BusApplicationContext:org.springframework.core.io.Resource[] getConfigResources()",
            "org.apache.cxf.jaxws.handler.AnnotationHandlerChainBuilder:org.apache.cxf.jaxws.handler.AnnotationHandlerChainBuilder$HandlerChainAnnotation findHandlerChainAnnotation(java.lang.Class,boolean)",
            "org.apache.cxf.jaxws.handler.HandlerChainInvoker:void <init>(java.util.List,boolean)",
            "org.apache.cxf.jaxws.handler.HandlerChainInvoker:void mepComplete(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.handler.HandlerChainInvoker:boolean invokeHandlerChain(java.util.List,javax.xml.ws.handler.MessageContext)",
            "org.apache.cxf.jaxws.handler.HandlerChainInvoker:boolean invokeHandlerChainHandleFault(java.util.List,javax.xml.ws.handler.MessageContext)",
            "org.apache.cxf.jaxws.handler.HandlerChainInvoker:boolean invokeThisHandler(javax.xml.ws.handler.Handler)",
            "org.apache.cxf.jaxws.interceptors.HolderOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.xmlbeans.XmlBeansDataBinding:void initialize(org.apache.cxf.service.Service)"
        ]
    },
    "org.apache.cxf.jaxb.JAXBContextInitializer:void addType(java.lang.reflect.Type)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.JAXBContextInitializer:void begin(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.jaxb.JAXBContextInitializer:void addType(java.lang.reflect.Type,boolean)",
            "org.apache.cxf.jaxb.JAXBContextInitializer:void inspectTypeAdapter(java.lang.Class)",
            "org.apache.cxf.jaxb.JAXBContextInitializer:void walkReferences(java.lang.Class)"
        ]
    },
    "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void setDefaultNamespace(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void setDefaultNamespace(java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void setDefaultNamespace(java.lang.String)"
        ]
    },
    "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void setDefaultNamespace(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void setDefaultNamespace(java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void setDefaultNamespace(java.lang.String)"
        ]
    },
    "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeDefaultNamespace(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeDefaultNamespace(java.lang.String)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamWriter,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeDefaultNamespace(java.lang.String)",
            "org.apache.cxf.aegis.util.jdom.StaxSerializer:void writeElement(org.jdom.Element,javax.xml.stream.XMLStreamWriter)"
        ]
    },
    "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeDefaultNamespace(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeDefaultNamespace(java.lang.String)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamWriter,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void writeDefaultNamespace(java.lang.String)",
            "org.apache.cxf.aegis.util.jdom.StaxSerializer:void writeElement(org.jdom.Element,javax.xml.stream.XMLStreamWriter)"
        ]
    },
    "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JOutInterceptor:void handleFault(org.apache.cxf.binding.soap.SoapMessage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JOutInterceptor:void handleFault(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.ws.security.wss4j.WSS4JOutInterceptor:void handleFault(org.apache.cxf.binding.soap.SoapMessage)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.binding.soap.saaj.SAAJOutInterceptor:void handleFault(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:void unwind(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void <init>(org.apache.cxf.Bus,org.apache.cxf.service.model.ServiceInfo[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.WSDLQueryHandler:void writeResponse(java.lang.String,java.lang.String,org.apache.cxf.service.model.EndpointInfo,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.ws.security.policy.builders.ContentEncryptedElementsBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.AssertionBuilderRegistryImpl:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)"
        ]
    },
    "org.apache.cxf.ws.security.policy.builders.EncryptedElementsBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.AssertionBuilderRegistryImpl:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)"
        ]
    },
    "org.apache.cxf.ws.security.policy.builders.SignedElementsBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.AssertionBuilderRegistryImpl:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)"
        ]
    },
    "org.apache.cxf.ws.security.policy.builders.RequiredElementsBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.AssertionBuilderRegistryImpl:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)"
        ]
    },
    "org.apache.cxf.service.factory.AbstractServiceFactoryBean:org.apache.cxf.databinding.DataBinding getDataBinding()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.Service create()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromWSDL(java.lang.String)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromClass()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.SchemaInfo getOrCreateSchema(org.apache.cxf.service.model.ServiceInfo,java.lang.String,boolean)",
            "org.apache.cxf.frontend.ClientFactoryBean:void applyExtraClass()",
            "org.apache.cxf.frontend.ServerFactoryBean:void initializeServiceFactory()",
            "org.apache.cxf.frontend.ServerFactoryBean:void applyExtraClass()",
            "org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean:java.util.Set generatedWrapperBeanClass()"
        ]
    },
    "org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean:void setJaxWsImplementorInfo(org.apache.cxf.jaxws.support.JaxWsImplementorInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean:void setServiceClass(java.lang.Class)"
        ]
    },
    "org.apache.cxf.transport.AbstractObservable:org.apache.cxf.ws.addressing.EndpointReferenceType getTargetReference(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void <init>(org.apache.cxf.Bus,org.apache.cxf.transport.ConduitInitiator,org.apache.cxf.service.model.EndpointInfo,boolean)",
            "org.apache.cxf.transport.jms.JMSDestination:void <init>(org.apache.cxf.Bus,org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.transport.jms.JMSConfiguration)"
        ]
    },
    "org.apache.cxf.binding.soap.SoapTransportFactory:void createPortExtensors(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.service.Service)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory:org.apache.cxf.service.model.EndpointInfo createEndpointInfo()"
        ]
    },
    "org.apache.cxf.aegis.type.DefaultTypeMapping:void fillStandardMappings(org.apache.cxf.aegis.type.TypeMapping,boolean,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.DefaultTypeMapping:org.apache.cxf.aegis.type.DefaultTypeMapping createSoap11TypeMapping(boolean,boolean,boolean)",
            "org.apache.cxf.aegis.type.DefaultTypeMapping:org.apache.cxf.aegis.type.DefaultTypeMapping createDefaultTypeMapping(boolean,boolean,boolean)"
        ]
    },
    "org.apache.cxf.aegis.type.DefaultTypeMapping:void registerJDOMTypes(org.apache.cxf.aegis.type.TypeMapping,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.DefaultTypeMapping:void fillStandardMappings(org.apache.cxf.aegis.type.TypeMapping,boolean,boolean,boolean)"
        ]
    },
    "org.apache.cxf.aegis.type.DefaultTypeMapping:org.apache.cxf.aegis.type.DefaultTypeMapping createSoap11TypeMapping(boolean,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.DefaultTypeMapping:org.apache.cxf.aegis.type.DefaultTypeMapping createSoap11TypeMapping(boolean,boolean)"
        ]
    },
    "org.apache.cxf.aegis.type.DefaultTypeMapping:org.apache.cxf.aegis.type.DefaultTypeMapping createDefaultTypeMapping(boolean,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.AegisContext:void initialize()",
            "org.apache.cxf.aegis.type.DefaultTypeMapping:org.apache.cxf.aegis.type.DefaultTypeMapping createDefaultTypeMapping(boolean,boolean)"
        ]
    },
    "org.apache.cxf.databinding.source.NodeDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.FaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:void writeParts(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.message.MessageContentsList,java.util.List)",
            "org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor:void writeSoapEnvelopeStart(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor:boolean handleHeaderPart(boolean,org.apache.cxf.binding.soap.SoapMessage,java.lang.String)",
            "org.apache.cxf.jaxws.interceptors.WebFaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.aegis.type.basic.BooleanType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.AegisXMLStreamDataReader:java.lang.Object read(javax.xml.stream.XMLStreamReader,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.basic.ObjectType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.BeanType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.ArrayType:java.util.Collection readCollection(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.SoapRefType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.collection.MapType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)"
        ]
    },
    "org.apache.cxf.transport.servlet.ServletController:void renderStyleSheet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.servlet.ServletController:void invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.cxf.aegis.type.mtom.DataHandlerType:byte[] getBytes(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.mtom.AbstractXOPType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)"
        ]
    },
    "org.apache.cxf.interceptor.MessageSenderInterceptor:org.apache.cxf.transport.Conduit access$000(org.apache.cxf.interceptor.MessageSenderInterceptor,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.MessageSenderInterceptor$MessageSenderEndingInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.ws.policy.builder.primitive.NestedPrimitiveAssertion:void <init>(org.w3c.dom.Element,org.apache.cxf.ws.policy.PolicyBuilder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.policy.AddressingAssertionBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.policy.builder.primitive.NestedPrimitiveAssertionBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)"
        ]
    },
    "org.apache.cxf.ws.policy.attachment.reference.LocalDocumentReferenceResolver:org.apache.neethi.Policy resolveReference(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.attachment.external.ExternalAttachmentProvider:org.apache.neethi.Policy resolveLocal(org.apache.neethi.PolicyReference,org.w3c.dom.Document)"
        ]
    },
    "org.apache.cxf.jaxws.EndpointImpl:void <init>(org.apache.cxf.Bus,java.lang.Object,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.EndpointImpl:void <init>(org.apache.cxf.Bus,java.lang.Object)",
            "org.apache.cxf.jaxws.spi.ProviderImpl:javax.xml.ws.Endpoint createEndpoint(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.cxf.aegis.type.encoded.SoapRefRegistry:void addRef(java.lang.String,org.apache.cxf.aegis.type.encoded.SoapRef)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.encoded.SoapRefType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)"
        ]
    },
    "org.apache.cxf.BusFactory:org.apache.cxf.Bus getDefaultBus()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.AbstractDataBinding:org.apache.cxf.Bus getBus()",
            "org.apache.cxf.tools.common.toolspec.AbstractToolContainer:org.apache.cxf.Bus getBus()"
        ]
    },
    "org.apache.cxf.BusFactory:org.apache.cxf.Bus getThreadDefaultBus(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.MultipleEndpointObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.ChainInitiationObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.BusFactory:org.apache.cxf.Bus getThreadDefaultBus()",
            "org.apache.cxf.endpoint.ClientImpl:void invoke(org.apache.cxf.endpoint.ClientCallback,org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[])",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.ClientImpl:void onMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.aegis.type.basic.CharacterType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.AegisXMLStreamDataReader:java.lang.Object read(javax.xml.stream.XMLStreamReader,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.basic.ObjectType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.BeanType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.ArrayType:java.util.Collection readCollection(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.SoapRefType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.collection.MapType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)"
        ]
    },
    "org.apache.cxf.aegis.type.basic.IntType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.AegisXMLStreamDataReader:java.lang.Object read(javax.xml.stream.XMLStreamReader,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.basic.ObjectType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.BeanType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.CharacterAsStringType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.ArrayType:java.util.Collection readCollection(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.SoapRefType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.collection.MapType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)"
        ]
    },
    "org.apache.cxf.aegis.type.basic.LongType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.AegisXMLStreamDataReader:java.lang.Object read(javax.xml.stream.XMLStreamReader,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.basic.ObjectType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.BeanType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.ArrayType:java.util.Collection readCollection(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.SoapRefType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.collection.MapType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)"
        ]
    },
    "org.apache.cxf.aegis.type.basic.DoubleType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.AegisXMLStreamDataReader:java.lang.Object read(javax.xml.stream.XMLStreamReader,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.basic.ObjectType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.BeanType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.ArrayType:java.util.Collection readCollection(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.SoapRefType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.collection.MapType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)"
        ]
    },
    "org.apache.cxf.aegis.type.basic.FloatType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.AegisXMLStreamDataReader:java.lang.Object read(javax.xml.stream.XMLStreamReader,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.basic.ObjectType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.BeanType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.ArrayType:java.util.Collection readCollection(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.SoapRefType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.collection.MapType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)"
        ]
    },
    "org.apache.cxf.aegis.type.basic.SqlDateType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.AegisXMLStreamDataReader:java.lang.Object read(javax.xml.stream.XMLStreamReader,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.basic.ObjectType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.BeanType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.ArrayType:java.util.Collection readCollection(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.SoapRefType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.collection.MapType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)"
        ]
    },
    "org.apache.cxf.aegis.type.encoded.SoapEncodingUtil:java.lang.String readId(org.apache.cxf.aegis.xml.MessageReader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.encoded.TrailingBlocks:java.util.List readBlocks(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)"
        ]
    },
    "org.apache.cxf.aegis.type.encoded.SoapEncodingUtil:java.lang.String readRef(org.apache.cxf.aegis.xml.MessageReader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.encoded.SoapRefType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)"
        ]
    },
    "org.apache.cxf.databinding.source.XMLStreamDataReader:java.lang.Object read(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.stax.StaxDataBindingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.soap.interceptor.ReadHeadersInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.saaj.SAAJInInterceptor:void replaceHeaders(javax.xml.soap.SOAPMessage,org.apache.cxf.binding.soap.SoapMessage)"
        ]
    },
    "org.apache.cxf.databinding.AbstractDataBinding:org.w3c.dom.Document doEmptyNamespaceHack(org.w3c.dom.Document)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.AbstractDataBinding:org.apache.ws.commons.schema.XmlSchema addSchemaDocument(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.common.xmlschema.SchemaCollection,org.w3c.dom.Document,java.lang.String)"
        ]
    },
    "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void mapElementToJaxbPropertyFactory(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder,java.lang.String,java.lang.Class,java.lang.String,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser:void doParse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder)"
        ]
    },
    "org.apache.cxf.transport.http.spring.HttpConduitBeanDefinitionParser:void mapSpecificElements(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.spring.HttpConduitBeanDefinitionParser:void doParse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder)"
        ]
    },
    "org.apache.cxf.ws.security.tokenstore.SecurityToken:void <init>(java.lang.String,org.w3c.dom.Element,java.util.Calendar,java.util.Calendar)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.wss4j.policyhandlers.SymmetricBindingHandler:java.lang.String setupEncryptedKey(org.apache.cxf.ws.security.policy.model.TokenWrapper,org.apache.cxf.ws.security.policy.model.Token)"
        ]
    },
    "org.apache.cxf.ws.security.tokenstore.SecurityToken:void <init>(java.lang.String,org.w3c.dom.Element,org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.trust.STSClient:org.apache.cxf.ws.security.tokenstore.SecurityToken createSecurityToken(org.w3c.dom.Element,byte[])"
        ]
    },
    "org.apache.cxf.ws.security.tokenstore.SecurityToken:void setPreviousToken(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.security.tokenstore.SecurityToken:void setAttachedReference(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor$STSInvoker:void doIssue(org.w3c.dom.Element,org.apache.cxf.message.Exchange,org.apache.cxf.staxutils.W3CDOMStreamWriter,java.lang.String,java.lang.String)",
            "org.apache.cxf.ws.security.trust.STSClient:org.apache.cxf.ws.security.tokenstore.SecurityToken createSecurityToken(org.w3c.dom.Element,byte[])"
        ]
    },
    "org.apache.cxf.ws.security.tokenstore.SecurityToken:void setUnattachedReference(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor$STSInvoker:void doIssue(org.w3c.dom.Element,org.apache.cxf.message.Exchange,org.apache.cxf.staxutils.W3CDOMStreamWriter,java.lang.String,java.lang.String)",
            "org.apache.cxf.ws.security.trust.STSClient:org.apache.cxf.ws.security.tokenstore.SecurityToken createSecurityToken(org.w3c.dom.Element,byte[])"
        ]
    },
    "org.apache.cxf.databinding.stax.StaxDataBinding$XMLStreamDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.FaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:void writeParts(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.message.MessageContentsList,java.util.List)",
            "org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor:void writeSoapEnvelopeStart(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor:boolean handleHeaderPart(boolean,org.apache.cxf.binding.soap.SoapMessage,java.lang.String)",
            "org.apache.cxf.jaxws.interceptors.WebFaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.bus.spring.ControlledValidationXmlBeanDefinitionReader:int loadBeanDefinitions(org.springframework.core.io.support.EncodedResource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.helpers.XMLUtils:java.lang.String toString(org.w3c.dom.Node,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:void printXmlFragment(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.validation.Schema createSchema(org.apache.cxf.service.model.ServiceInfo)"
        ]
    },
    "org.apache.cxf.helpers.XMLUtils:void writeTo(org.w3c.dom.Node,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.XMLUtils:java.lang.String toString(org.w3c.dom.Node)"
        ]
    },
    "org.apache.cxf.aegis.AegisContext:org.apache.ws.commons.schema.XmlSchema addTypesSchemaDocument(org.apache.ws.commons.schema.XmlSchemaCollection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void createSchemas(org.apache.cxf.service.Service,java.util.Set)"
        ]
    },
    "org.apache.cxf.aegis.AegisContext:org.apache.ws.commons.schema.XmlSchema addXmimeSchemaDocument(org.apache.ws.commons.schema.XmlSchemaCollection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void createSchemas(org.apache.cxf.service.Service,java.util.Set)"
        ]
    },
    "org.apache.cxf.common.logging.LogUtils:void log(java.util.logging.Logger,java.util.logging.Level,java.lang.String,java.lang.Throwable,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.injection.ResourceInjector:void invokeSetter(java.lang.reflect.Method,java.lang.Object)",
            "org.apache.cxf.interceptor.ClientFaultConverter:void processFaultDetail(org.apache.cxf.interceptor.Fault,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.addressing.AddressingBuilder:org.apache.cxf.ws.addressing.AddressingBuilder getAddressingBuilder()",
            "org.apache.cxf.jaxws.handler.HandlerChainBuilder:void initializeViaInitMethod(javax.xml.ws.handler.Handler,java.util.Map,java.lang.reflect.Method)"
        ]
    },
    "org.apache.cxf.common.logging.LogUtils:void log(java.util.logging.Logger,java.util.logging.Level,java.lang.String,java.lang.Throwable,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.logging.LogUtils:void log(java.util.logging.Logger,java.util.logging.Level,java.lang.String,java.lang.Throwable)",
            "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus createBus(java.lang.String[],boolean)",
            "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.bus.spring.BusApplicationContext createApplicationContext(java.lang.String[],boolean)",
            "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus createBus(java.net.URL[],boolean)"
        ]
    },
    "org.apache.cxf.common.logging.LogUtils:void log(java.util.logging.Logger,java.util.logging.Level,java.lang.String,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.logging.LogUtils:void log(java.util.logging.Logger,java.util.logging.Level,java.lang.String)",
            "org.apache.cxf.common.logging.LogUtils:void log(java.util.logging.Logger,java.util.logging.Level,java.lang.String,java.lang.Object)",
            "org.apache.cxf.transport.https.SSLUtils:javax.net.ssl.KeyManager[] loadKeyStore(javax.net.ssl.KeyManagerFactory,java.security.KeyStore,java.io.ByteArrayInputStream,java.lang.String,java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.transport.https.SSLUtils:javax.net.ssl.TrustManager[] getTrustStoreManagers(boolean,java.lang.String,java.lang.String,java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.transport.https.SSLSocketFactoryWrapper:java.net.Socket enableCipherSuites(java.net.Socket,java.lang.Object[])"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit:void access$100(org.apache.cxf.transport.http.HTTPConduit,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleHeadersTrustCaching()"
        ]
    },
    "org.apache.cxf.transport.jms.JMSConduit$JMSBusLifeCycleListener:void preShutdown()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.buslifecycle.CXFBusLifeCycleManager:void preShutdown()"
        ]
    },
    "org.apache.cxf.tools.common.toolspec.ToolSpec:void <init>(java.io.InputStream,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.tools.common.toolspec.ToolSpec:void <init>(java.io.InputStream)",
            "org.apache.cxf.tools.common.toolspec.ToolRunner:void runTool(java.lang.Class,java.io.InputStream,boolean,java.lang.String[],boolean,org.apache.cxf.tools.common.ToolContext)"
        ]
    },
    "org.apache.cxf.tools.common.VelocityGenerator:void <init>(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.tools.common.VelocityGenerator:void <init>()"
        ]
    },
    "org.apache.cxf.tools.common.toolspec.ToolRunner:void runTool(java.lang.Class,java.io.InputStream,boolean,java.lang.String[],org.apache.cxf.tools.common.ToolContext)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.tools.common.toolspec.ToolRunner:void runTool(java.lang.Class,java.io.InputStream,boolean,java.lang.String[],boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.tools.common.toolspec.ToolRunner:void runTool(java.lang.Class,java.io.InputStream,boolean,java.lang.String[])"
        ]
    },
    "org.apache.cxf.ws.addressing.ContextUtils:void storeMAPs(org.apache.cxf.ws.addressing.AddressingProperties,org.apache.cxf.message.Message,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void mediate(org.apache.cxf.binding.soap.SoapMessage)"
        ]
    },
    "org.apache.cxf.ws.addressing.ContextUtils:void storeMAPs(org.apache.cxf.ws.addressing.AddressingProperties,org.apache.cxf.message.Message,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.MAPAggregator:void aggregate(org.apache.cxf.message.Message,boolean)",
            "org.apache.cxf.ws.rm.RMContextUtils:void storeMAPs(org.apache.cxf.ws.addressing.AddressingProperties,org.apache.cxf.message.Message,boolean,boolean)"
        ]
    },
    "org.apache.cxf.ws.addressing.ContextUtils:void propogateReceivedMAPs(org.apache.cxf.ws.addressing.AddressingProperties,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.ContextUtils:void rebaseResponse(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.ws.addressing.AddressingProperties,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.addressing.ContextUtils:void propogateReceivedMAPs(org.apache.cxf.ws.addressing.AddressingProperties,org.apache.cxf.message.Exchange)"
        ]
    },
    "org.apache.cxf.ws.addressing.ContextUtils:void ensurePartialResponseMAPs(org.apache.cxf.message.Message,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.ContextUtils:void rebaseResponse(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.ws.addressing.AddressingProperties,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.ws.addressing.ContextUtils:org.apache.cxf.ws.addressing.AddressingPropertiesImpl retrieveMAPs(org.apache.cxf.message.Message,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.MAPAggregator:boolean mediate(org.apache.cxf.message.Message,boolean)",
            "org.apache.cxf.ws.addressing.MAPAggregator:org.apache.cxf.ws.addressing.AddressingPropertiesImpl getMAPs(org.apache.cxf.message.Message,boolean,boolean)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void mediate(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.rm.RMContextUtils:org.apache.cxf.ws.addressing.AddressingPropertiesImpl retrieveMAPs(org.apache.cxf.message.Message,boolean,boolean)"
        ]
    },
    "org.apache.cxf.ws.rm.persistence.jdbc.RMTxStore:void deleteDatabaseFiles()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void setServiceClass(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.frontend.AbstractServiceFactory:void setServiceClass(java.lang.Class)",
            "org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory:void initializeServiceFactory()",
            "org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean:void setServiceClass(java.lang.Class)"
        ]
    },
    "org.apache.cxf.workqueue.OneShotAsyncExecutor:void execute(java.lang.Runnable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.ServiceInvokerInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ClientImpl$1:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.addressing.ContextUtils:void rebaseResponse(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.ws.addressing.AddressingProperties,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.Proxy:org.apache.cxf.ws.rm.CreateSequenceResponseType createSequence(org.apache.cxf.ws.addressing.v200408.EndpointReferenceType,org.apache.cxf.ws.addressing.RelatesToType,boolean)",
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl$ResendCandidate:void initiate(boolean)",
            "org.apache.cxf.jaxws.ServiceImpl$1:void execute(java.lang.Runnable)"
        ]
    },
    "org.apache.cxf.ws.rm.persistence.jdbc.RMTxStore:void persistIncoming(org.apache.cxf.ws.rm.DestinationSequence,org.apache.cxf.ws.rm.persistence.RMMessage)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.rm.persistence.jdbc.RMTxStore:void persistOutgoing(org.apache.cxf.ws.rm.SourceSequence,org.apache.cxf.ws.rm.persistence.RMMessage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.RetransmissionCallback:void onClose(org.apache.cxf.io.CachedOutputStream)"
        ]
    },
    "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void <init>(int,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void <init>(java.lang.String)",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void <init>(int)"
        ]
    },
    "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void <init>(int,int,int,int,long)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.wsdl.JAXBExtensionHelper:void addExtensions(javax.wsdl.extensions.ExtensionRegistry,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void registerInitialExtensions(java.lang.String)"
        ]
    },
    "org.apache.cxf.wsdl.JAXBExtensionHelper:void addExtensions(javax.wsdl.extensions.ExtensionRegistry,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.wsdl.JAXBExtensionHelper:void addExtensions(javax.wsdl.extensions.ExtensionRegistry,java.lang.Class,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.clustering.FailoverFeature:void initialize(org.apache.cxf.endpoint.Client,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.frontend.ClientFactoryBean:void applyFeatures()",
            "org.apache.cxf.jaxws.ServiceImpl:javax.xml.ws.Dispatch createDispatch(javax.xml.namespace.QName,java.lang.Class,javax.xml.ws.Service$Mode,javax.xml.ws.WebServiceFeature[])",
            "org.apache.cxf.jaxws.ServiceImpl:javax.xml.ws.Dispatch createDispatch(javax.xml.namespace.QName,javax.xml.bind.JAXBContext,javax.xml.ws.Service$Mode,javax.xml.ws.WebServiceFeature[])"
        ]
    },
    "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl$ResendCandidate:void attempted()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl$ResendCandidate:void run()"
        ]
    },
    "org.apache.cxf.catalog.OASISCatalogManager:void loadContextCatalogs()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.catalog.OASISCatalogManager:void register()",
            "org.apache.cxf.catalog.OASISCatalogManager:org.apache.cxf.catalog.OASISCatalogManager getContextCatalog()"
        ]
    },
    "org.apache.cxf.jaxb.JAXBSchemaInitializer:org.apache.ws.commons.schema.XmlSchemaElement createXsElement(org.apache.cxf.service.model.MessagePartInfo,javax.xml.namespace.QName,org.apache.cxf.service.model.SchemaInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.JAXBSchemaInitializer:void createBridgeXsElement(org.apache.cxf.service.model.MessagePartInfo,javax.xml.namespace.QName,javax.xml.namespace.QName)"
        ]
    },
    "org.apache.cxf.common.xmlschema.XmlSchemaUtils:org.apache.ws.commons.schema.XmlSchemaType getElementType(org.apache.cxf.common.xmlschema.SchemaCollection,java.lang.String,org.apache.ws.commons.schema.XmlSchemaElement,org.apache.ws.commons.schema.XmlSchemaType)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.xmlschema.XmlSchemaUtils:org.apache.ws.commons.schema.XmlSchemaAnnotated getObjectAnnotated(org.apache.ws.commons.schema.XmlSchemaObject,javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.xmlschema.XmlSchemaUtils:org.apache.ws.commons.schema.XmlSchemaParticle getObjectParticle(org.apache.ws.commons.schema.XmlSchemaObject,javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.xmlschema.XmlSchemaUtils:org.apache.ws.commons.schema.XmlSchemaSequence getContentSequence(org.apache.ws.commons.schema.XmlSchemaComplexType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:java.util.List getContentElements(org.apache.ws.commons.schema.XmlSchemaComplexType,org.apache.cxf.common.xmlschema.SchemaCollection)"
        ]
    },
    "org.apache.cxf.common.xmlschema.XmlSchemaUtils:org.apache.ws.commons.schema.XmlSchemaSequence getSequence(org.apache.ws.commons.schema.XmlSchemaComplexType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:java.util.List getContentElements(org.apache.ws.commons.schema.XmlSchemaComplexType,org.apache.cxf.common.xmlschema.SchemaCollection)",
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addCrossImportsType(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaType)"
        ]
    },
    "org.apache.cxf.configuration.jsse.spring.TLSParameterJaxBUtils:javax.net.ssl.KeyManager[] getKeyManagers(org.apache.cxf.configuration.security.KeyManagersType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.jsse.spring.TLSClientParametersConfig:org.apache.cxf.configuration.jsse.TLSClientParameters createTLSClientParametersFromType(org.apache.cxf.configuration.security.TLSClientParametersType)",
            "org.apache.cxf.configuration.jsse.spring.TLSServerParametersConfig:void <init>(org.apache.cxf.configuration.security.TLSServerParametersType)"
        ]
    },
    "org.apache.cxf.common.util.UrlUtils:java.lang.String pathDecode(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.servlet.ServletController:java.lang.String getBaseURL(javax.servlet.http.HttpServletRequest)"
        ]
    },
    "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine:void setTlsServerParameters(org.apache.cxf.configuration.jsse.TLSServerParameters)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser$SpringJettyHTTPServerEngine:void finalizeConfig()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void setTLSServerParametersForPort(int,org.apache.cxf.configuration.jsse.TLSServerParameters)"
        ]
    },
    "org.apache.cxf.common.commands.ForkedCommand:int execute()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxws.spi.ProviderImpl:javax.xml.ws.Endpoint createEndpoint(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.spi.ProviderImpl:javax.xml.ws.Endpoint createAndPublishEndpoint(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.cxf.helpers.XMLUtils:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.XMLUtils:javax.xml.transform.TransformerFactory getTransformerFactory()",
            "org.apache.cxf.helpers.XMLUtils:javax.xml.parsers.DocumentBuilderFactory getDocumentBuilderFactory()",
            "org.apache.cxf.helpers.XMLUtils:javax.xml.transform.Transformer newTransformer()",
            "org.apache.cxf.helpers.XMLUtils:javax.xml.parsers.DocumentBuilder getParser()",
            "org.apache.cxf.helpers.XMLUtils:org.w3c.dom.Document parse(org.xml.sax.InputSource)",
            "org.apache.cxf.helpers.XMLUtils:org.w3c.dom.Document parse(java.io.File)",
            "org.apache.cxf.helpers.XMLUtils:org.w3c.dom.Document parse(java.io.InputStream)",
            "org.apache.cxf.helpers.XMLUtils:org.w3c.dom.Document parse(java.lang.String)",
            "org.apache.cxf.helpers.XMLUtils:org.w3c.dom.Document parse(byte[])",
            "org.apache.cxf.helpers.XMLUtils:org.w3c.dom.Document newDocument()",
            "org.apache.cxf.helpers.XMLUtils:void writeTo(org.w3c.dom.Node,java.io.OutputStream)",
            "org.apache.cxf.helpers.XMLUtils:void writeTo(org.w3c.dom.Node,java.io.OutputStream,int)",
            "org.apache.cxf.helpers.XMLUtils:void writeTo(javax.xml.transform.Source,java.io.OutputStream)",
            "org.apache.cxf.helpers.XMLUtils:void writeTo(javax.xml.transform.Source,java.io.OutputStream,int)",
            "org.apache.cxf.helpers.XMLUtils:void writeTo(javax.xml.transform.Source,java.io.OutputStream,int,java.lang.String,java.lang.String)",
            "org.apache.cxf.helpers.XMLUtils:java.lang.String toString(javax.xml.transform.Source)",
            "org.apache.cxf.helpers.XMLUtils:java.lang.String toString(javax.xml.transform.Source,java.util.Properties)",
            "org.apache.cxf.helpers.XMLUtils:java.lang.String toString(org.w3c.dom.Node,int)",
            "org.apache.cxf.helpers.XMLUtils:java.lang.String toString(org.w3c.dom.Node)",
            "org.apache.cxf.helpers.XMLUtils:void printDOM(org.w3c.dom.Node)",
            "org.apache.cxf.helpers.XMLUtils:void printDOM(java.lang.String,org.w3c.dom.Node)",
            "org.apache.cxf.helpers.XMLUtils:void generateXMLFile(org.w3c.dom.Element,java.io.Writer)",
            "org.apache.cxf.helpers.XMLUtils:org.w3c.dom.Element createElementNS(org.w3c.dom.Node,javax.xml.namespace.QName)",
            "org.apache.cxf.helpers.XMLUtils:org.w3c.dom.Element createElementNS(org.w3c.dom.Document,javax.xml.namespace.QName)",
            "org.apache.cxf.helpers.XMLUtils:org.w3c.dom.Text createTextNode(org.w3c.dom.Node,java.lang.String)",
            "org.apache.cxf.helpers.XMLUtils:void <clinit>()",
            "org.apache.cxf.staxutils.W3CDOMStreamWriter:void <init>()",
            "org.apache.cxf.staxutils.StaxUtils:void printXmlFragment(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void writeResponse(java.lang.String,java.lang.String,org.apache.cxf.service.model.EndpointInfo,java.io.OutputStream)",
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.EndpointReferenceType convertToInternal(javax.xml.ws.EndpointReference)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.validation.Schema createSchema(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.binding.soap.interceptor.Soap12FaultInInterceptor:org.apache.cxf.binding.soap.SoapFault unmarshalFault(org.apache.cxf.binding.soap.SoapMessage,javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.tools.util.JAXBUtils:org.w3c.dom.Node innerJaxbPackageBinding(org.w3c.dom.Element,java.lang.String)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildTypes(java.util.Collection,java.util.Map,javax.wsdl.Definition)",
            "org.apache.cxf.aegis.AegisContext:org.w3c.dom.Document getSchemaDocument(java.lang.String)",
            "org.apache.cxf.jaxws.handler.AnnotationHandlerChainBuilder:java.util.List buildHandlerChainFromClass(java.lang.Class,java.util.List,javax.xml.namespace.QName,javax.xml.namespace.QName,java.lang.String)",
            "org.apache.cxf.jaxws.handler.AnnotationHandlerChainBuilder:void processHandlerChainElement(org.w3c.dom.Element,java.util.List,javax.xml.namespace.QName,javax.xml.namespace.QName,java.lang.String)",
            "org.apache.cxf.jaxws.handler.AnnotationHandlerChainBuilder:boolean patternMatches(org.w3c.dom.Element,javax.xml.namespace.QName)",
            "org.apache.cxf.jaxws.handler.logical.LogicalHandlerFaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.handler.logical.LogicalHandlerOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.handler.logical.LogicalMessageImpl:javax.xml.transform.Source handleDispatchProviderCase(javax.xml.ws.Service$Mode)",
            "org.apache.cxf.xmlbeans.XmlBeansSchemaInitializer:org.apache.ws.commons.schema.XmlSchema getSchema(org.apache.xmlbeans.SchemaTypeSystem,java.lang.String)"
        ]
    },
    "org.apache.cxf.common.xmlschema.XmlSchemaUtils:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:void setElementQName(org.apache.ws.commons.schema.XmlSchemaElement,javax.xml.namespace.QName)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:void setElementName(org.apache.ws.commons.schema.XmlSchemaElement,java.lang.String)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:void setElementRefName(org.apache.ws.commons.schema.XmlSchemaElement,javax.xml.namespace.QName)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:void addImportIfNeeded(org.apache.ws.commons.schema.XmlSchema,javax.xml.namespace.QName)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:org.apache.ws.commons.schema.XmlSchemaElement findElementByRefName(org.apache.cxf.common.xmlschema.SchemaCollection,javax.xml.namespace.QName,java.lang.String)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:java.util.List getContentAttributes(org.apache.ws.commons.schema.XmlSchemaComplexType,org.apache.cxf.common.xmlschema.SchemaCollection)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:java.util.List getContentElements(org.apache.ws.commons.schema.XmlSchemaComplexType,org.apache.cxf.common.xmlschema.SchemaCollection)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:org.apache.ws.commons.schema.XmlSchemaSequence getContentSequence(org.apache.ws.commons.schema.XmlSchemaComplexType)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:org.apache.ws.commons.schema.XmlSchemaType getElementType(org.apache.cxf.common.xmlschema.SchemaCollection,java.lang.String,org.apache.ws.commons.schema.XmlSchemaElement,org.apache.ws.commons.schema.XmlSchemaType)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:org.apache.ws.commons.schema.XmlSchemaAnnotated getObjectAnnotated(org.apache.ws.commons.schema.XmlSchemaObject,javax.xml.namespace.QName)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:org.apache.ws.commons.schema.XmlSchemaParticle getObjectParticle(org.apache.ws.commons.schema.XmlSchemaObject,javax.xml.namespace.QName)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:org.apache.ws.commons.schema.XmlSchemaSequence getSequence(org.apache.ws.commons.schema.XmlSchemaComplexType)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:boolean isAttributeNameQualified(org.apache.ws.commons.schema.XmlSchemaAttribute,org.apache.ws.commons.schema.XmlSchema)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:boolean isAttributeQualified(org.apache.ws.commons.schema.XmlSchemaAttribute,boolean,org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchema)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:boolean isElementNameQualified(org.apache.ws.commons.schema.XmlSchemaElement,org.apache.ws.commons.schema.XmlSchema)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:boolean isElementQualified(org.apache.ws.commons.schema.XmlSchemaElement,boolean,org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchema)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:void unsupportedConstruct(java.lang.String,java.lang.String,javax.xml.namespace.QName,org.apache.ws.commons.schema.XmlSchemaObject)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:void unsupportedConstruct(java.lang.String,org.apache.ws.commons.schema.XmlSchemaType)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:void <clinit>()",
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addOneSchemaCrossImports(org.apache.ws.commons.schema.XmlSchema)",
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addElementCrossImportsElement(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaObject)",
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addCrossImportsType(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaType)",
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addCrossImportsAttributeList(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaObjectCollection)",
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addCrossImports(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaContentModel)",
            "org.apache.cxf.jaxb.JAXBSchemaInitializer:org.apache.ws.commons.schema.XmlSchemaElement createXsElement(org.apache.cxf.service.model.MessagePartInfo,javax.xml.namespace.QName,org.apache.cxf.service.model.SchemaInfo)",
            "org.apache.cxf.jaxb.JAXBSchemaInitializer:void end(org.apache.cxf.service.model.FaultInfo)",
            "org.apache.cxf.jaxb.JAXBSchemaInitializer:void buildExceptionType(org.apache.cxf.service.model.MessagePartInfo,java.lang.Class)",
            "org.apache.cxf.jaxb.JAXBSchemaInitializer:void addElement(org.apache.ws.commons.schema.XmlSchemaSequence,org.apache.cxf.jaxb.JAXBBeanInfo,javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void checkForElement(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createBareMessage(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.OperationInfo,boolean)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createWrappedMessageSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.AbstractMessageContainer,org.apache.cxf.service.model.AbstractMessageContainer,org.apache.ws.commons.schema.XmlSchema,javax.xml.namespace.QName)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:boolean schemaImportsXmime(org.apache.ws.commons.schema.XmlSchema)",
            "org.apache.cxf.aegis.AegisContext:boolean schemaImportsUtilityTypes(org.apache.ws.commons.schema.XmlSchema)",
            "org.apache.cxf.aegis.AegisContext:void addUtilityTypesToSchema(org.apache.ws.commons.schema.XmlSchema)",
            "org.apache.cxf.aegis.type.basic.BeanType:void writeTypeReference(javax.xml.namespace.QName,org.apache.ws.commons.schema.XmlSchemaElement,org.apache.cxf.aegis.type.Type,org.apache.ws.commons.schema.XmlSchema)",
            "org.apache.cxf.aegis.type.basic.BeanType:void addXmimeToSchema(org.apache.ws.commons.schema.XmlSchema)",
            "org.apache.cxf.aegis.type.basic.BeanType:void writeSchema(org.apache.ws.commons.schema.XmlSchema)",
            "org.apache.cxf.aegis.type.TypeUtil:void setAttributeAttributes(javax.xml.namespace.QName,org.apache.cxf.aegis.type.Type,org.apache.ws.commons.schema.XmlSchema)"
        ]
    },
    "org.apache.cxf.common.commands.ForkedCommand:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.commands.ForkedCommand:int execute(int)",
            "org.apache.cxf.common.commands.ForkedCommand:void <clinit>()",
            "org.apache.cxf.common.commands.JavaHelper:java.lang.String getJavaCommand()"
        ]
    },
    "org.apache.cxf.common.logging.LogUtils:void setLoggerClass(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.logging.LogUtils:java.util.logging.Logger getLogger(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.logging.LogUtils:void <clinit>()",
            "org.apache.cxf.resource.URIResolver:void <clinit>()",
            "org.apache.cxf.jaxb.JAXBDataBinding:void <clinit>()",
            "org.apache.cxf.jaxb.JAXBEncoderDecoder:void <clinit>()",
            "org.apache.cxf.jaxb.JAXBSchemaInitializer:void <clinit>()",
            "org.apache.cxf.jaxb.io.DataWriterImpl:void <clinit>()",
            "org.apache.cxf.jaxb.io.DataReaderImpl:void <clinit>()",
            "org.apache.cxf.interceptor.ClientFaultConverter:void <clinit>()",
            "org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean:void <clinit>()",
            "org.apache.cxf.xmlbeans.DataWriterImpl:void <clinit>()",
            "org.apache.cxf.xmlbeans.XmlBeansDataBinding:void <clinit>()",
            "org.apache.cxf.xmlbeans.DataReaderImpl:void <clinit>()",
            "org.apache.cxf.xmlbeans.XmlBeansSchemaInitializer:void <clinit>()"
        ]
    },
    "org.apache.cxf.common.logging.LogUtils:java.util.logging.Logger getLogger(java.lang.Class,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.logging.LogUtils:java.util.logging.Logger getLogger(java.lang.Class,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.logging.LogUtils:java.util.logging.Logger getL7dLogger(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.XMLUtils:void <clinit>()",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:void <clinit>()",
            "org.apache.cxf.common.commands.ForkedCommand:void <clinit>()",
            "org.apache.cxf.common.util.UrlUtils:void <clinit>()",
            "org.apache.cxf.common.util.Base64Utility:void <clinit>()",
            "org.apache.cxf.common.injection.ResourceInjector:void <clinit>()",
            "org.apache.cxf.common.annotation.AnnotationProcessor:void <clinit>()",
            "org.apache.cxf.resource.DefaultResourceManager:void <clinit>()",
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void <clinit>()",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void <clinit>()",
            "org.apache.cxf.configuration.jsse.spring.TLSParameterJaxBUtils:void <clinit>()",
            "org.apache.cxf.jaxb.attachment.JAXBAttachmentUnmarshaller:void <clinit>()",
            "org.apache.cxf.management.interceptor.AbstractMessageResponseTimeInterceptor:void <clinit>()",
            "org.apache.cxf.management.jmx.MBServerConnectorFactory:void <clinit>()",
            "org.apache.cxf.management.jmx.InstrumentationManagerImpl:void <clinit>()",
            "org.apache.cxf.management.utils.ManagementConsole:void <clinit>()",
            "org.apache.cxf.management.counters.CounterRepository:void <clinit>()",
            "org.apache.cxf.staxutils.StaxUtils:void <clinit>()",
            "org.apache.cxf.interceptor.URIMappingInterceptor:void <clinit>()",
            "org.apache.cxf.interceptor.WrappedInInterceptor:void <clinit>()",
            "org.apache.cxf.interceptor.LoggingOutInterceptor:void <clinit>()",
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:void <clinit>()",
            "org.apache.cxf.interceptor.BareInInterceptor:void <clinit>()",
            "org.apache.cxf.interceptor.StaxInInterceptor:void <clinit>()",
            "org.apache.cxf.interceptor.FaultOutInterceptor:void <clinit>()",
            "org.apache.cxf.interceptor.AttachmentInInterceptor:void <clinit>()",
            "org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver:void <clinit>()",
            "org.apache.cxf.interceptor.LoggingInInterceptor:void <clinit>()",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void <clinit>()",
            "org.apache.cxf.interceptor.PrettyLoggingOutInterceptor:void <clinit>()",
            "org.apache.cxf.transport.http.policy.PolicyUtils:void <clinit>()",
            "org.apache.cxf.transport.http.HTTPConduit:void <clinit>()",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void <clinit>()",
            "org.apache.cxf.transport.http.gzip.GZIPOutInterceptor:void <clinit>()",
            "org.apache.cxf.transport.http.gzip.GZIPInInterceptor:void <clinit>()",
            "org.apache.cxf.transport.servlet.ServletController:void <clinit>()",
            "org.apache.cxf.transport.servlet.CXFNonSpringServlet:java.util.logging.Logger getLogger()",
            "org.apache.cxf.transport.servlet.CXFServlet:java.util.logging.Logger getLogger()",
            "org.apache.cxf.transport.servlet.ServletDestination:void <clinit>()",
            "org.apache.cxf.transport.servlet.AbstractCXFServlet:java.util.logging.Logger getLogger()",
            "org.apache.cxf.transport.https.HttpsURLConnectionFactory:void <clinit>()",
            "org.apache.cxf.transport.https.SSLSocketFactoryWrapper:void <clinit>()",
            "org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector:void <clinit>()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void <clinit>()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine:void <clinit>()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void <clinit>()",
            "org.apache.cxf.transport.jms.JMSOldConfigHolder:void <clinit>()",
            "org.apache.cxf.transport.jms.JMSFactory:void <clinit>()",
            "org.apache.cxf.transport.jms.JMSOutputStream:void <clinit>()",
            "org.apache.cxf.transport.jms.JMSDestination:void <clinit>()",
            "org.apache.cxf.transport.jms.JMSUtils:void <clinit>()",
            "org.apache.cxf.transport.jms.JMSConfigFeature:void <clinit>()",
            "org.apache.cxf.transport.jms.JMSConduit:void <clinit>()",
            "org.apache.cxf.endpoint.UpfrontConduitSelector:void <clinit>()",
            "org.apache.cxf.endpoint.DeferredConduitSelector:void <clinit>()",
            "org.apache.cxf.endpoint.EndpointImpl:void <clinit>()",
            "org.apache.cxf.endpoint.ClientImpl:void <clinit>()",
            "org.apache.cxf.endpoint.ServerImpl:void <clinit>()",
            "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:void <clinit>()",
            "org.apache.cxf.endpoint.dynamic.TypeClassInitializer:void <clinit>()",
            "org.apache.cxf.ws.addressing.ContextUtils:void <clinit>()",
            "org.apache.cxf.ws.addressing.MAPAggregator:void <clinit>()",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void <clinit>()",
            "org.apache.cxf.ws.addressing.soap.VersionTransformer:void <clinit>()",
            "org.apache.cxf.ws.policy.builder.jaxb.JaxbAssertionBuilder:void <clinit>()",
            "org.apache.cxf.ws.policy.ServerPolicyOutFaultInterceptor:void <clinit>()",
            "org.apache.cxf.ws.policy.PolicyInInterceptor:void <clinit>()",
            "org.apache.cxf.ws.policy.PolicyOutInterceptor:void <clinit>()",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:void <clinit>()",
            "org.apache.cxf.ws.policy.PolicyVerificationInInterceptor:void <clinit>()",
            "org.apache.cxf.ws.policy.PolicyVerificationOutInterceptor:void <clinit>()",
            "org.apache.cxf.ws.policy.EffectivePolicyImpl:void <clinit>()",
            "org.apache.cxf.ws.policy.PolicyVerificationInFaultInterceptor:void <clinit>()",
            "org.apache.cxf.ws.policy.AssertionBuilderRegistryImpl:void <clinit>()",
            "org.apache.cxf.ws.policy.ClientPolicyInFaultInterceptor:void <clinit>()",
            "org.apache.cxf.ws.security.policy.model.AlgorithmSuite:void <clinit>()",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor:void <clinit>()",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationTokenInterceptorProvider:void <clinit>()",
            "org.apache.cxf.ws.security.trust.STSClient:void <clinit>()",
            "org.apache.cxf.ws.security.wss4j.WSS4JOutInterceptor:void <clinit>()",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void <clinit>()",
            "org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor:void <clinit>()",
            "org.apache.cxf.ws.rm.AbstractRMInterceptor:void <clinit>()",
            "org.apache.cxf.ws.rm.Servant:void <clinit>()",
            "org.apache.cxf.ws.rm.DestinationSequence:void <clinit>()",
            "org.apache.cxf.ws.rm.SourceSequence:void <clinit>()",
            "org.apache.cxf.ws.rm.RMInInterceptor:void <clinit>()",
            "org.apache.cxf.ws.rm.RetransmissionCallback:void <clinit>()",
            "org.apache.cxf.ws.rm.RMOutInterceptor:void <clinit>()",
            "org.apache.cxf.ws.rm.RMManager:void <clinit>()",
            "org.apache.cxf.ws.rm.Proxy:void <clinit>()",
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl:void <clinit>()",
            "org.apache.cxf.ws.rm.soap.SoapFaultFactory:void <clinit>()",
            "org.apache.cxf.ws.rm.soap.RMSoapInterceptor:void <clinit>()",
            "org.apache.cxf.ws.rm.SequenceMonitor:void <clinit>()",
            "org.apache.cxf.ws.rm.RMEndpoint:void <clinit>()",
            "org.apache.cxf.ws.rm.persistence.jdbc.RMTxStore:void <clinit>()",
            "org.apache.cxf.phase.PhaseInterceptorChain:void <clinit>()",
            "org.apache.cxf.workqueue.WorkQueueManagerImpl:void <clinit>()",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void <clinit>()",
            "org.apache.cxf.databinding.source.XMLStreamDataWriter:void <clinit>()",
            "org.apache.cxf.databinding.source.XMLStreamDataReader:void <clinit>()",
            "org.apache.cxf.databinding.source.NodeDataReader:void <clinit>()",
            "org.apache.cxf.databinding.source.NodeDataWriter:void <clinit>()",
            "org.apache.cxf.databinding.stax.StaxDataBinding$XMLStreamDataWriter:void <clinit>()",
            "org.apache.cxf.databinding.stax.StaxDataBindingInterceptor:void <clinit>()",
            "org.apache.cxf.wsdl.JAXBExtensionHelper:void <clinit>()",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:void <clinit>()",
            "org.apache.cxf.service.invoker.AbstractInvoker:void <clinit>()",
            "org.apache.cxf.service.model.InterfaceInfo:void <clinit>()",
            "org.apache.cxf.service.model.BindingInfo:void <clinit>()",
            "org.apache.cxf.service.model.OperationInfo:void <clinit>()",
            "org.apache.cxf.binding.soap.interceptor.ReadHeadersInterceptor:void <clinit>()",
            "org.apache.cxf.binding.soap.interceptor.RPCOutInterceptor:void <clinit>()",
            "org.apache.cxf.binding.soap.interceptor.Soap12FaultOutInterceptor:void <clinit>()",
            "org.apache.cxf.binding.soap.interceptor.CheckFaultInterceptor:void <clinit>()",
            "org.apache.cxf.binding.soap.interceptor.RPCInInterceptor:void <clinit>()",
            "org.apache.cxf.binding.soap.interceptor.MustUnderstandInterceptor:void <clinit>()",
            "org.apache.cxf.binding.xml.interceptor.XMLMessageInInterceptor:void <clinit>()",
            "org.apache.cxf.clustering.AbstractStaticFailoverStrategy:void <clinit>()",
            "org.apache.cxf.clustering.FailoverTargetSelector:void <clinit>()",
            "org.apache.cxf.tools.common.dom.ExtendedDocumentBuilder:void <clinit>()",
            "org.apache.cxf.tools.common.dom.SchemaValidatingSAXParser:void <clinit>()",
            "org.apache.cxf.tools.common.AbstractCXFToolContainer:void <clinit>()",
            "org.apache.cxf.tools.common.ClassUtils:void <clinit>()",
            "org.apache.cxf.tools.common.VelocityGenerator:void <clinit>()",
            "org.apache.cxf.tools.common.toolspec.ToolSpec:void <clinit>()",
            "org.apache.cxf.tools.common.toolspec.ToolSupport:void <clinit>()",
            "org.apache.cxf.tools.common.toolspec.parser.CommandDocument:void <clinit>()",
            "org.apache.cxf.tools.common.toolspec.parser.TokenInputStream:void <clinit>()",
            "org.apache.cxf.tools.common.toolspec.parser.Form:void <clinit>()",
            "org.apache.cxf.tools.common.toolspec.parser.Option:void <clinit>()",
            "org.apache.cxf.tools.common.toolspec.parser.OptionGroup:void <clinit>()",
            "org.apache.cxf.tools.common.toolspec.parser.ErrorVisitor:void <clinit>()",
            "org.apache.cxf.tools.common.toolspec.parser.CommandLineParser:void <clinit>()",
            "org.apache.cxf.tools.common.toolspec.parser.Argument:void <clinit>()",
            "org.apache.cxf.tools.common.toolspec.AbstractToolContainer:void <clinit>()",
            "org.apache.cxf.tools.common.toolspec.ToolRunner:void <clinit>()",
            "org.apache.cxf.tools.common.model.JavaMethod:void <clinit>()",
            "org.apache.cxf.tools.util.FileWriterUtil:void <clinit>()",
            "org.apache.cxf.tools.util.AnnotationUtil:void <clinit>()",
            "org.apache.cxf.catalog.OASISCatalogManager:void <clinit>()",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void <clinit>()",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void <clinit>()",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void <clinit>()",
            "org.apache.cxf.wsdl11.WSDLServiceFactory:void <clinit>()",
            "org.apache.cxf.bus.spring.BusApplicationContext:void <clinit>()",
            "org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor:void <clinit>()",
            "org.apache.cxf.bus.spring.BusEntityResolver:void <clinit>()",
            "org.apache.cxf.bus.spring.SpringBusFactory:void <clinit>()",
            "org.apache.cxf.frontend.ClientProxy:void <clinit>()",
            "org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory:void <clinit>()",
            "org.apache.cxf.frontend.ServerFactoryBean:void <clinit>()",
            "org.apache.cxf.aegis.AegisXMLStreamDataReader:void <clinit>()",
            "org.apache.cxf.aegis.databinding.XMLStreamDataWriter:void <clinit>()",
            "org.apache.cxf.aegis.databinding.ElementDataWriter:void <clinit>()",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void <clinit>()",
            "org.apache.cxf.aegis.AegisXMLStreamDataWriter:void <clinit>()",
            "org.apache.cxf.aegis.type.basic.XMLBeanTypeInfo:void <clinit>()",
            "org.apache.cxf.aegis.type.basic.ArrayType:void <clinit>()",
            "org.apache.cxf.aegis.type.encoded.SoapArrayType:void <clinit>()",
            "org.apache.cxf.aegis.type.XMLTypeCreator:void <clinit>()",
            "org.apache.cxf.aegis.type.TypeUtil:void <clinit>()",
            "org.apache.cxf.aegis.type.DefaultTypeMapping:void <clinit>()",
            "org.apache.cxf.jaxws.handler.AnnotationHandlerChainBuilder:void <clinit>()",
            "org.apache.cxf.jaxws.handler.HandlerChainInvoker:void <clinit>()",
            "org.apache.cxf.jaxws.handler.HandlerChainBuilder:void <clinit>()",
            "org.apache.cxf.jaxws.handler.logical.LogicalMessageImpl:void <clinit>()",
            "org.apache.cxf.jaxws.EndpointUtils:void <clinit>()",
            "org.apache.cxf.jaxws.support.ServiceDelegateAccessor:void <clinit>()",
            "org.apache.cxf.jaxws.support.JaxWsServiceConfiguration:void <clinit>()",
            "org.apache.cxf.jaxws.support.JaxWsImplementorInfo:void <clinit>()",
            "org.apache.cxf.jaxws.WrapperClassGenerator:void <clinit>()",
            "org.apache.cxf.jaxws.EndpointReferenceBuilder:void <clinit>()",
            "org.apache.cxf.jaxws.JaxWsClientProxy:void <clinit>()",
            "org.apache.cxf.jaxws.ServiceImpl:void <clinit>()",
            "org.apache.cxf.jaxws.EndpointImpl:void <clinit>()",
            "org.apache.cxf.jaxws.spi.ProviderImpl:void <clinit>()",
            "org.apache.cxf.jaxws.DispatchImpl:void <clinit>()",
            "org.apache.cxf.jaxws.interceptors.WebFaultOutInterceptor:void <clinit>()",
            "org.apache.cxf.jaxws.interceptors.HolderOutInterceptor:void <clinit>()",
            "org.apache.cxf.jaxws.interceptors.WrapperClassInInterceptor:void <clinit>()",
            "org.apache.cxf.jaxws.interceptors.SwAOutInterceptor:void <clinit>()",
            "org.apache.cxf.jaxws.binding.soap.SOAPBindingImpl:void <clinit>()",
            "org.apache.cxf.jaxws.JAXWSMethodDispatcher:void <clinit>()",
            "org.apache.cxf.jaxws.context.WebServiceContextImpl:void <clinit>()"
        ]
    },
    "org.apache.cxf.common.logging.LogUtils:java.util.logging.Logger getL7dLogger(java.lang.Class,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.JAXBUtils:void <clinit>()",
            "org.apache.cxf.jaxb.DatatypeFactory:void <clinit>()",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void <clinit>()",
            "org.apache.cxf.BusFactory:void <clinit>()",
            "org.apache.cxf.ws.addressing.AddressingBuilder:void <clinit>()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void <clinit>()",
            "org.apache.cxf.jaxws.handler.InitParamResourceResolver:void <clinit>()"
        ]
    },
    "org.apache.cxf.common.logging.LogUtils:java.util.logging.Logger getL7dLogger(java.lang.Class,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.wss4j.WSS4JOutInterceptor:void <clinit>()",
            "org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor:void <clinit>()"
        ]
    },
    "org.apache.cxf.common.logging.LogUtils:java.util.logging.Logger createLogger(java.lang.Class,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.logging.LogUtils:java.util.logging.Logger getLogger(java.lang.Class)",
            "org.apache.cxf.common.logging.LogUtils:java.util.logging.Logger getLogger(java.lang.Class,java.lang.String)",
            "org.apache.cxf.common.logging.LogUtils:java.util.logging.Logger getLogger(java.lang.Class,java.lang.String,java.lang.String)",
            "org.apache.cxf.common.logging.LogUtils:java.util.logging.Logger getL7dLogger(java.lang.Class)",
            "org.apache.cxf.common.logging.LogUtils:java.util.logging.Logger getL7dLogger(java.lang.Class,java.lang.String)",
            "org.apache.cxf.common.logging.LogUtils:java.util.logging.Logger getL7dLogger(java.lang.Class,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.common.logging.LogUtils:void log(java.util.logging.Logger,java.util.logging.Level,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPClientPolicy getClient(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPClientPolicy)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPServerPolicy getServer(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPServerPolicy)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPClientPolicy getClient(org.apache.cxf.ws.policy.PolicyEngine,org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.transport.Conduit)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPServerPolicy getServer(org.apache.cxf.ws.policy.PolicyEngine,org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.transport.Destination)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPClientPolicy getClient(java.util.Collection)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPServerPolicy getServer(java.util.Collection)",
            "org.apache.cxf.transport.https.SSLUtils:javax.net.ssl.KeyManager[] getKeyStoreManagers(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.transport.https.SSLUtils:java.lang.String getKeystorePassword(java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.transport.https.SSLUtils:java.lang.String getKeyPassword(java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.transport.https.SSLUtils:java.lang.String[] getCiphersuites(java.util.List,java.lang.String[],org.apache.cxf.configuration.security.FiltersType,java.util.logging.Logger,boolean)",
            "org.apache.cxf.transport.https.SSLUtils:java.lang.String getSecureSocketProtocol(java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.transport.https.SSLUtils:boolean getRequireClientAuthentication(boolean,java.lang.Boolean,java.util.logging.Logger)",
            "org.apache.cxf.transport.https.SSLUtils:boolean getWantClientAuthentication(boolean,java.lang.Boolean,java.util.logging.Logger)",
            "org.apache.cxf.ws.addressing.ContextUtils:org.apache.cxf.ws.addressing.AddressingPropertiesImpl retrieveMAPs(org.apache.cxf.message.Message,boolean,boolean,boolean)",
            "org.apache.cxf.ws.rm.RMOutInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.common.logging.LogUtils:void log(java.util.logging.Logger,java.util.logging.Level,java.lang.String,java.lang.Throwable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.ConfigurerImpl:java.lang.String getBeanName(java.lang.Object)",
            "org.apache.cxf.jaxb.DatatypeFactory:javax.xml.datatype.Duration createDuration(java.lang.String)",
            "org.apache.cxf.transport.servlet.ServletController:void invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.BusFactory:org.apache.cxf.BusFactory newInstance(java.lang.String)",
            "org.apache.cxf.BusFactory:java.lang.String getBusFactoryClass(java.lang.ClassLoader)",
            "org.apache.cxf.ws.policy.builder.jaxb.JaxbAssertionBuilder:java.lang.Object getData(org.w3c.dom.Element)",
            "org.apache.cxf.ws.rm.soap.SoapFaultFactory:org.apache.cxf.interceptor.Fault createSoap12Fault(org.apache.cxf.ws.rm.SequenceFault)",
            "org.apache.cxf.ws.rm.persistence.jdbc.RMTxStore:void abort()",
            "org.apache.cxf.ws.rm.persistence.jdbc.RMTxStore:void init()",
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.common.logging.LogUtils:void log(java.util.logging.Logger,java.util.logging.Level,java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void initWildcardDefinitionMap()",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:java.lang.String getBeanName(java.lang.Object)",
            "org.apache.cxf.transport.https.SSLUtils:javax.net.ssl.KeyManager[] getKeyStoreManagers(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.transport.https.SSLUtils:javax.net.ssl.KeyManager[] loadKeyStore(javax.net.ssl.KeyManagerFactory,java.security.KeyStore,java.io.ByteArrayInputStream,java.lang.String,java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.transport.https.SSLUtils:javax.net.ssl.TrustManager[] getTrustStoreManagers(boolean,java.lang.String,java.lang.String,java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.transport.https.SSLUtils:java.lang.String getKeystore(java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.transport.https.SSLUtils:java.lang.String getKeystoreType(java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.transport.https.SSLUtils:java.lang.String getKeystoreAlgorithm(java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.transport.https.SSLUtils:java.lang.String getTrustStoreAlgorithm(java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.transport.https.SSLUtils:java.lang.String[] getCiphersuites(java.util.List,java.lang.String[],org.apache.cxf.configuration.security.FiltersType,java.util.logging.Logger,boolean)",
            "org.apache.cxf.transport.https.SSLUtils:java.util.List compileRegexPatterns(java.util.List,boolean,java.util.logging.Logger)",
            "org.apache.cxf.transport.https.SSLUtils:java.lang.String[] getCiphersFromList(java.util.List,java.util.logging.Logger)",
            "org.apache.cxf.transport.https.SSLUtils:java.lang.String getTrustStore(java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.transport.https.SSLUtils:java.lang.String getTrustStoreType(java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.transport.https.SSLUtils:java.lang.String getSecureSocketProtocol(java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.transport.https.SSLUtils:boolean getRequireClientAuthentication(boolean,java.lang.Boolean,java.util.logging.Logger)",
            "org.apache.cxf.transport.https.SSLUtils:boolean getWantClientAuthentication(boolean,java.lang.Boolean,java.util.logging.Logger)",
            "org.apache.cxf.transport.https.SSLUtils:void logUnSupportedPolicy(boolean,boolean,java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.endpoint.ClientImpl:void waitResponse(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.ws.rm.AbstractRMInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.DestinationSequence$SequenceTermination:void run()",
            "org.apache.cxf.bus.spring.BusApplicationContext:org.springframework.core.io.Resource[] getConfigResources()"
        ]
    },
    "org.apache.cxf.common.util.UrlUtils:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.UrlUtils:java.lang.String urlDecode(java.lang.String)",
            "org.apache.cxf.common.util.UrlUtils:java.lang.String pathDecode(java.lang.String)",
            "org.apache.cxf.common.util.UrlUtils:void <clinit>()",
            "org.apache.cxf.transport.servlet.ServletController:java.lang.String getBaseURL(javax.servlet.http.HttpServletRequest)"
        ]
    },
    "org.apache.cxf.common.util.Base64Utility:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.Base64Utility:byte[] decodeChunk(char[],int,int)",
            "org.apache.cxf.common.util.Base64Utility:byte[] decode(java.lang.String)",
            "org.apache.cxf.common.util.Base64Utility:void decode(char[],int,int,java.io.OutputStream)",
            "org.apache.cxf.common.util.Base64Utility:void decode(java.lang.String,java.io.OutputStream)",
            "org.apache.cxf.common.util.Base64Utility:java.lang.String encode(byte[])",
            "org.apache.cxf.common.util.Base64Utility:char[] encodeChunk(byte[],int,int)",
            "org.apache.cxf.common.util.Base64Utility:void encodeChunk(byte[],int,int,java.io.OutputStream)",
            "org.apache.cxf.common.util.Base64Utility:void encode(byte[],int,int,java.io.Writer)",
            "org.apache.cxf.common.util.Base64Utility:int processEncodeme(char[],byte[],int)",
            "org.apache.cxf.common.util.Base64Utility:void <clinit>()",
            "org.apache.cxf.resource.URIResolver:void tryFileSystem(java.lang.String,java.lang.String)",
            "org.apache.cxf.transport.http.HTTPConduit:void setBasicAuthHeader(java.lang.String,java.lang.String,java.util.Map)",
            "org.apache.cxf.transport.http.HTTPConduit:void setProxyBasicAuthHeader(java.lang.String,java.lang.String,java.util.Map)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void setHeaders(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HttpBasicAuthSupplier:java.lang.String getAuthorizationForRealm(org.apache.cxf.transport.http.HTTPConduit,java.net.URL,org.apache.cxf.message.Message,java.lang.String,java.lang.String)",
            "org.apache.cxf.transport.http.HttpBasicAuthSupplier:java.lang.String getPreemptiveAuthorization(org.apache.cxf.transport.http.HTTPConduit,java.net.URL,org.apache.cxf.message.Message)",
            "org.apache.cxf.aegis.type.basic.ObjectType:java.lang.Object reconstituteJavaObject(org.apache.cxf.aegis.xml.MessageReader)",
            "org.apache.cxf.aegis.type.basic.Base64Type:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.Base64Type:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)"
        ]
    },
    "org.apache.cxf.common.injection.ResourceInjector:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.injection.ResourceInjector:void <init>(org.apache.cxf.resource.ResourceManager,java.util.List)",
            "org.apache.cxf.common.injection.ResourceInjector:void visitClass(java.lang.Class,java.lang.'annotation'.Annotation)",
            "org.apache.cxf.common.injection.ResourceInjector:void injectResourceClassLevel(java.lang.Class,javax.'annotation'.Resource)",
            "org.apache.cxf.common.injection.ResourceInjector:void visitField(java.lang.reflect.Field,java.lang.'annotation'.Annotation)",
            "org.apache.cxf.common.injection.ResourceInjector:void visitMethod(java.lang.reflect.Method,java.lang.'annotation'.Annotation)",
            "org.apache.cxf.common.injection.ResourceInjector:java.lang.reflect.Field findFieldForResource(javax.'annotation'.Resource)",
            "org.apache.cxf.common.injection.ResourceInjector:java.lang.reflect.Method findSetterForResource(javax.'annotation'.Resource)",
            "org.apache.cxf.common.injection.ResourceInjector:void invokeSetter(java.lang.reflect.Method,java.lang.Object)",
            "org.apache.cxf.common.injection.ResourceInjector:java.lang.String getResourceName(javax.'annotation'.Resource,java.lang.reflect.Method)",
            "org.apache.cxf.common.injection.ResourceInjector:void injectField(java.lang.reflect.Field,java.lang.Object)",
            "org.apache.cxf.common.injection.ResourceInjector:void invokePostConstruct()",
            "org.apache.cxf.common.injection.ResourceInjector:void invokePreDestroy()",
            "org.apache.cxf.common.injection.ResourceInjector:java.lang.Class getResourceType(javax.'annotation'.Resource,java.lang.reflect.Field)",
            "org.apache.cxf.common.injection.ResourceInjector:java.lang.String getFieldNameForResource(javax.'annotation'.Resource,java.lang.reflect.Field)",
            "org.apache.cxf.common.injection.ResourceInjector:void <clinit>()",
            "org.apache.cxf.service.invoker.PerRequestFactory:java.lang.Object create(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.bus.spring.Jsr250BeanPostProcessor:java.lang.Object postProcessAfterInitialization(java.lang.Object,java.lang.String)",
            "org.apache.cxf.bus.spring.Jsr250BeanPostProcessor:java.lang.Object postProcessBeforeInitialization(java.lang.Object,java.lang.String)",
            "org.apache.cxf.bus.spring.Jsr250BeanPostProcessor:void postProcessBeforeDestruction(java.lang.Object,java.lang.String)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadAndRegister(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.jaxws.JaxWsProxyFactoryBean:void buildHandlerChain(org.apache.cxf.jaxws.JaxWsClientProxy)",
            "org.apache.cxf.jaxws.handler.HandlerResolverImpl:void configHandler(javax.xml.ws.handler.Handler)",
            "org.apache.cxf.jaxws.handler.HandlerChainBuilder:void initializeViaInjection(javax.xml.ws.handler.Handler,java.util.Map)",
            "org.apache.cxf.jaxws.JaxWsServerFactoryBean:void injectResources(java.lang.Object)"
        ]
    },
    "org.apache.cxf.common.annotation.AnnotationProcessor:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.injection.ResourceInjector:void inject(java.lang.Object,java.lang.Class)",
            "org.apache.cxf.common.annotation.AnnotationProcessor:void <init>(java.lang.Object)",
            "org.apache.cxf.common.annotation.AnnotationProcessor:void <clinit>()"
        ]
    },
    "org.apache.cxf.resource.DefaultResourceManager:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.resource.DefaultResourceManager:java.lang.Object findResource(java.lang.String,java.lang.Class,boolean,java.util.List)",
            "org.apache.cxf.resource.DefaultResourceManager:void <clinit>()",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void <init>(java.util.Map,java.util.Map)",
            "org.apache.cxf.jaxws.JaxWsProxyFactoryBean:void buildHandlerChain(org.apache.cxf.jaxws.JaxWsClientProxy)",
            "org.apache.cxf.jaxws.handler.HandlerResolverImpl:void configHandler(javax.xml.ws.handler.Handler)",
            "org.apache.cxf.jaxws.JaxWsServerFactoryBean:void injectResources(java.lang.Object)"
        ]
    },
    "org.apache.cxf.resource.URIResolver:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.resource.ExtendedURIResolver:void <init>()",
            "org.apache.cxf.resource.URIResolver:void tryClasspath(java.lang.String)",
            "org.apache.cxf.resource.URIResolver:void <clinit>()",
            "org.apache.cxf.transport.servlet.CXFServlet:void loadAdditionalConfig(org.springframework.context.ApplicationContext,javax.servlet.ServletConfig)",
            "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:java.net.URL composeUrl(java.lang.String)",
            "org.apache.cxf.frontend.ServerFactoryBean:void initializeServiceFactory()"
        ]
    },
    "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void addBusWiringAttribute(org.springframework.beans.factory.support.BeanDefinitionBuilder,org.apache.cxf.configuration.spring.BusWiringType)",
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void mapElementToJaxbProperty(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder,java.lang.String,java.lang.Class)",
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:java.lang.Object unmarshalFactoryString(java.lang.String,java.lang.Class)",
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void <clinit>()",
            "org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor:void postProcessBeanFactory(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)"
        ]
    },
    "org.apache.cxf.configuration.spring.ConfigurerImpl:java.lang.String getBeanName(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.configuration.spring.ConfigurerImpl:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void initWildcardDefinitionMap()",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureBean(java.lang.String,java.lang.Object,boolean)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:java.lang.String getBeanName(java.lang.Object)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void <clinit>()"
        ]
    },
    "org.apache.cxf.configuration.jsse.spring.TLSParameterJaxBUtils:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.jsse.spring.TLSParameterJaxBUtils:java.security.KeyStore getKeyStore(org.apache.cxf.configuration.security.KeyStoreType)",
            "org.apache.cxf.configuration.jsse.spring.TLSParameterJaxBUtils:java.security.KeyStore getKeyStore(org.apache.cxf.configuration.security.CertStoreType)",
            "org.apache.cxf.configuration.jsse.spring.TLSParameterJaxBUtils:java.security.KeyStore createTrustStore(java.io.InputStream)",
            "org.apache.cxf.configuration.jsse.spring.TLSParameterJaxBUtils:javax.net.ssl.KeyManager[] getKeyManagers(org.apache.cxf.configuration.security.KeyManagersType)",
            "org.apache.cxf.configuration.jsse.spring.TLSParameterJaxBUtils:javax.net.ssl.TrustManager[] getTrustManagers(org.apache.cxf.configuration.security.TrustManagersType)",
            "org.apache.cxf.configuration.jsse.spring.TLSParameterJaxBUtils:void <clinit>()",
            "org.apache.cxf.configuration.jsse.spring.TLSClientParametersConfig:org.apache.cxf.configuration.jsse.TLSClientParameters createTLSClientParametersFromType(org.apache.cxf.configuration.security.TLSClientParametersType)",
            "org.apache.cxf.configuration.jsse.spring.TLSServerParametersConfig:void <init>(org.apache.cxf.configuration.security.TLSServerParametersType)"
        ]
    },
    "org.apache.cxf.jaxb.DatatypeFactory:javax.xml.datatype.Duration createDuration(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.DatatypeFactory:void <clinit>()",
            "org.apache.cxf.ws.rm.manager.DestinationPolicyType:javax.xml.datatype.Duration getSequenceExpiration()",
            "org.apache.cxf.ws.rm.manager.SourcePolicyType:javax.xml.datatype.Duration getSequenceExpiration()",
            "org.apache.cxf.ws.rm.manager.SourcePolicyType:javax.xml.datatype.Duration getOfferedSequenceExpiration()"
        ]
    },
    "org.apache.cxf.jaxb.DatatypeFactory:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.DatatypeFactory:javax.xml.datatype.Duration createDuration(java.lang.String)",
            "org.apache.cxf.jaxb.DatatypeFactory:void <clinit>()",
            "org.apache.cxf.ws.rm.manager.DestinationPolicyType:javax.xml.datatype.Duration getSequenceExpiration()",
            "org.apache.cxf.ws.rm.manager.SourcePolicyType:javax.xml.datatype.Duration getSequenceExpiration()",
            "org.apache.cxf.ws.rm.manager.SourcePolicyType:javax.xml.datatype.Duration getOfferedSequenceExpiration()",
            "org.apache.cxf.ws.rm.Servant:org.apache.cxf.ws.rm.CreateSequenceResponseType createSequence(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.SourceSequence:void setExpires(org.apache.cxf.ws.rm.Expires)"
        ]
    },
    "org.apache.cxf.jaxb.JAXBDataBinding:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.JAXBDataBinding:java.lang.Class[] getSupportedWriterFormats()",
            "org.apache.cxf.jaxb.JAXBDataBinding:java.lang.Class[] getSupportedReaderFormats()",
            "org.apache.cxf.jaxb.JAXBDataBinding:void initialize(org.apache.cxf.service.Service)",
            "org.apache.cxf.jaxb.JAXBDataBinding:org.apache.cxf.jaxb.JAXBDataBinding$CachedContextAndSchemas createJAXBContextAndSchemas(java.util.Set,java.lang.String)",
            "org.apache.cxf.jaxb.JAXBDataBinding:void scanPackages(java.util.Set)",
            "org.apache.cxf.jaxb.JAXBDataBinding:void addToObjectFactoryCache(java.lang.Package,java.lang.Class)",
            "org.apache.cxf.jaxb.JAXBDataBinding:void clearCaches()",
            "org.apache.cxf.jaxb.JAXBDataBinding:org.apache.cxf.databinding.WrapperHelper createWrapperHelper(java.lang.Class,java.util.List,java.util.List,java.util.List)",
            "org.apache.cxf.jaxb.JAXBDataBinding:org.apache.cxf.databinding.WrapperHelper createWrapperHelper(java.lang.Class,java.lang.reflect.Method[],java.lang.reflect.Method[],java.lang.reflect.Method[],java.lang.reflect.Field[],java.lang.Object)",
            "org.apache.cxf.jaxb.JAXBDataBinding:void <clinit>()",
            "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:org.apache.cxf.endpoint.Client createClient(java.lang.String,javax.xml.namespace.QName,java.lang.ClassLoader,javax.xml.namespace.QName,java.util.List)",
            "org.apache.cxf.ws.rm.RMEndpoint:void createService()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.databinding.DataBinding createDefaultDataBinding()",
            "org.apache.cxf.jaxws.ServiceImpl:javax.xml.ws.Dispatch createDispatch(javax.xml.namespace.QName,javax.xml.bind.JAXBContext,javax.xml.ws.Service$Mode,javax.xml.ws.WebServiceFeature[])"
        ]
    },
    "org.apache.cxf.jaxb.attachment.JAXBAttachmentUnmarshaller:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.JAXBDataBase:javax.xml.bind.attachment.AttachmentUnmarshaller getAttachmentUnmarshaller()",
            "org.apache.cxf.jaxb.attachment.JAXBAttachmentUnmarshaller:byte[] getAttachmentAsByteArray(java.lang.String)",
            "org.apache.cxf.jaxb.attachment.JAXBAttachmentUnmarshaller:void <clinit>()"
        ]
    },
    "org.apache.cxf.jaxb.JAXBEncoderDecoder:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.JAXBEncoderDecoder:void marshall(javax.xml.bind.Marshaller,java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,java.lang.Object)",
            "org.apache.cxf.jaxb.JAXBEncoderDecoder:void marshalWithBridge(javax.xml.namespace.QName,java.lang.Class,java.lang.'annotation'.Annotation[],java.util.Set,java.lang.Object,java.lang.Object,javax.xml.bind.attachment.AttachmentMarshaller)",
            "org.apache.cxf.jaxb.JAXBEncoderDecoder:java.lang.Object unmarshalWithBridge(javax.xml.namespace.QName,java.lang.Class,java.lang.'annotation'.Annotation[],java.util.Set,java.lang.Object,javax.xml.bind.attachment.AttachmentUnmarshaller)",
            "org.apache.cxf.jaxb.JAXBEncoderDecoder:void marshallException(javax.xml.bind.Marshaller,java.lang.Exception,org.apache.cxf.service.model.MessagePartInfo,java.lang.Object)",
            "org.apache.cxf.jaxb.JAXBEncoderDecoder:void writeArrayObject(javax.xml.bind.Marshaller,java.lang.Object,javax.xml.namespace.QName,java.lang.Object)",
            "org.apache.cxf.jaxb.JAXBEncoderDecoder:java.lang.Exception unmarshallException(javax.xml.bind.Unmarshaller,java.lang.Object,org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.jaxb.JAXBEncoderDecoder:void writeObject(javax.xml.bind.Marshaller,java.lang.Object,java.lang.Object)",
            "org.apache.cxf.jaxb.JAXBEncoderDecoder:javax.xml.stream.XMLStreamWriter getStreamWriter(java.lang.Object)",
            "org.apache.cxf.jaxb.JAXBEncoderDecoder:void marshallNullElement(javax.xml.bind.Marshaller,java.lang.Object,org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.jaxb.JAXBEncoderDecoder:java.lang.Object unmarshall(javax.xml.bind.Unmarshaller,java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,boolean)",
            "org.apache.cxf.jaxb.JAXBEncoderDecoder:java.util.List createList(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.jaxb.JAXBEncoderDecoder:java.lang.Object unmarshall(javax.xml.bind.Unmarshaller,java.lang.Object,javax.xml.namespace.QName,java.lang.Class,boolean)",
            "org.apache.cxf.jaxb.JAXBEncoderDecoder:java.lang.Class getClassFromType(java.lang.reflect.Type)",
            "org.apache.cxf.jaxb.JAXBEncoderDecoder:java.util.List unmarshallArray(javax.xml.bind.Unmarshaller,java.lang.Object,javax.xml.namespace.QName,java.lang.Class,java.util.List)",
            "org.apache.cxf.jaxb.JAXBEncoderDecoder:void <clinit>()",
            "org.apache.cxf.jaxb.io.DataWriterImpl:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,java.lang.Object)",
            "org.apache.cxf.jaxb.io.DataReaderImpl:java.lang.Object read(org.apache.cxf.service.model.MessagePartInfo,java.lang.Object)",
            "org.apache.cxf.jaxb.io.DataReaderImpl:java.lang.Object read(javax.xml.namespace.QName,java.lang.Object,java.lang.Class)",
            "org.apache.cxf.jaxws.support.JaxWsImplementorInfo:java.lang.Class getProviderParameterType()"
        ]
    },
    "org.apache.cxf.jaxb.JAXBSchemaInitializer:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.JAXBDataBinding:void initialize(org.apache.cxf.service.Service)",
            "org.apache.cxf.jaxb.JAXBEncoderDecoder:void marshallException(javax.xml.bind.Marshaller,java.lang.Exception,org.apache.cxf.service.model.MessagePartInfo,java.lang.Object)",
            "org.apache.cxf.jaxb.JAXBEncoderDecoder:java.lang.Exception unmarshallException(javax.xml.bind.Unmarshaller,java.lang.Object,org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.jaxb.JAXBSchemaInitializer:java.lang.Class getArrayComponentType(java.lang.reflect.Type)",
            "org.apache.cxf.jaxb.JAXBSchemaInitializer:org.apache.cxf.jaxb.JAXBBeanInfo getBeanInfo(java.lang.Class)",
            "org.apache.cxf.jaxb.JAXBSchemaInitializer:void createBridgeXsElement(org.apache.cxf.service.model.MessagePartInfo,javax.xml.namespace.QName,javax.xml.namespace.QName)",
            "org.apache.cxf.jaxb.JAXBSchemaInitializer:void end(org.apache.cxf.service.model.FaultInfo)",
            "org.apache.cxf.jaxb.JAXBSchemaInitializer:void buildExceptionType(org.apache.cxf.service.model.MessagePartInfo,java.lang.Class)",
            "org.apache.cxf.jaxb.JAXBSchemaInitializer:void <clinit>()"
        ]
    },
    "org.apache.cxf.jaxb.io.DataWriterImpl:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.JAXBDataBinding:org.apache.cxf.databinding.DataWriter createWriter(java.lang.Class)",
            "org.apache.cxf.jaxb.io.DataWriterImpl:javax.xml.bind.Marshaller createMarshaller(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.jaxb.io.DataWriterImpl:void <clinit>()"
        ]
    },
    "org.apache.cxf.jaxb.io.DataReaderImpl:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.JAXBDataBinding:org.apache.cxf.databinding.DataReader createReader(java.lang.Class)",
            "org.apache.cxf.jaxb.io.DataReaderImpl:javax.xml.bind.Unmarshaller createUnmarshaller()",
            "org.apache.cxf.jaxb.io.DataReaderImpl:void <clinit>()"
        ]
    },
    "org.apache.cxf.management.interceptor.AbstractMessageResponseTimeInterceptor:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.management.interceptor.AbstractMessageResponseTimeInterceptor:void increaseCounter(org.apache.cxf.message.Exchange,org.apache.cxf.management.counters.MessageHandlingTimeRecorder)",
            "org.apache.cxf.management.interceptor.AbstractMessageResponseTimeInterceptor:void <clinit>()"
        ]
    },
    "org.apache.cxf.management.jmx.MBServerConnectorFactory:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.management.jmx.MBServerConnectorFactory:int getURLLocalHostPort(java.lang.String)",
            "org.apache.cxf.management.jmx.MBServerConnectorFactory:org.apache.cxf.management.jmx.MBServerConnectorFactory getInstance()",
            "org.apache.cxf.management.jmx.MBServerConnectorFactory:void setMBeanServer(javax.management.MBeanServer)",
            "org.apache.cxf.management.jmx.MBServerConnectorFactory:void setServiceUrl(java.lang.String)",
            "org.apache.cxf.management.jmx.MBServerConnectorFactory:void setEnvironment(java.util.Map)",
            "org.apache.cxf.management.jmx.MBServerConnectorFactory:void setThreaded(boolean)",
            "org.apache.cxf.management.jmx.MBServerConnectorFactory:void setDaemon(boolean)",
            "org.apache.cxf.management.jmx.MBServerConnectorFactory:void createConnector()",
            "org.apache.cxf.management.jmx.MBServerConnectorFactory:void destroy()",
            "org.apache.cxf.management.jmx.MBServerConnectorFactory:javax.management.remote.JMXConnectorServer access$000()",
            "org.apache.cxf.management.jmx.MBServerConnectorFactory:java.util.logging.Logger access$100()",
            "org.apache.cxf.management.jmx.MBServerConnectorFactory:void <clinit>()",
            "org.apache.cxf.management.jmx.InstrumentationManagerImpl:void init()",
            "org.apache.cxf.management.jmx.MBServerConnectorFactory$1:void run()"
        ]
    },
    "org.apache.cxf.management.jmx.InstrumentationManagerImpl:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.management.jmx.InstrumentationManagerImpl:void init()",
            "org.apache.cxf.management.jmx.InstrumentationManagerImpl:void shutdown()",
            "org.apache.cxf.management.jmx.InstrumentationManagerImpl:void postShutdown()",
            "org.apache.cxf.management.jmx.InstrumentationManagerImpl:void <clinit>()"
        ]
    },
    "org.apache.cxf.management.utils.ManagementConsole:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.management.utils.ManagementConsole:void getManagedObjectAttributes(javax.management.ObjectName)",
            "org.apache.cxf.management.utils.ManagementConsole:void connectToMBserver()",
            "org.apache.cxf.management.utils.ManagementConsole:void listAllManagedEndpoint()",
            "org.apache.cxf.management.utils.ManagementConsole:void invokeEndpoint(java.lang.String)",
            "org.apache.cxf.management.utils.ManagementConsole:void doManagement()",
            "org.apache.cxf.management.utils.ManagementConsole:void main(java.lang.String[])",
            "org.apache.cxf.management.utils.ManagementConsole:void <clinit>()"
        ]
    },
    "org.apache.cxf.management.counters.CounterRepository:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.management.counters.CounterRepository:org.apache.cxf.management.counters.Counter createCounter(javax.management.ObjectName,org.apache.cxf.management.counters.MessageHandlingTimeRecorder)",
            "org.apache.cxf.management.counters.CounterRepository:void <clinit>()"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void mapElementToJaxbProperty(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder,java.lang.String,java.lang.Class)",
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:org.springframework.beans.factory.support.AbstractBeanDefinition mapElementToJaxbBean(org.w3c.dom.Element,java.lang.Class,java.lang.Class,java.lang.String,java.lang.Object[])",
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:java.lang.Object unmarshalFactoryString(java.lang.String,java.lang.Class)",
            "org.apache.cxf.configuration.spring.JAXBBeanFactory:java.lang.Object createJAXBBean(javax.xml.bind.JAXBContext,java.lang.String,java.lang.Class)",
            "org.apache.cxf.configuration.jsse.spring.TLSClientParametersConfig:java.lang.Object createTLSClientParameters(java.lang.String)",
            "org.apache.cxf.jaxb.JAXBEncoderDecoder:java.lang.Exception unmarshallException(javax.xml.bind.Unmarshaller,java.lang.Object,org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.jaxb.JAXBEncoderDecoder:javax.xml.stream.XMLStreamWriter getStreamWriter(java.lang.Object)",
            "org.apache.cxf.jaxb.JAXBEncoderDecoder:java.util.List unmarshallArray(javax.xml.bind.Unmarshaller,java.lang.Object,javax.xml.namespace.QName,java.lang.Class,java.util.List)",
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLInputFactory getXMLInputFactory()",
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLInputFactory getXMLInputFactory(boolean)",
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLOutputFactory getXMLOutputFactory()",
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamWriter createXMLStreamWriter(java.io.Writer)",
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamWriter createXMLStreamWriter(java.io.OutputStream)",
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamWriter createXMLStreamWriter(java.io.OutputStream,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamWriter createXMLStreamWriter(javax.xml.transform.Result)",
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamReader createFilteredReader(javax.xml.stream.XMLStreamReader,javax.xml.stream.StreamFilter)",
            "org.apache.cxf.staxutils.StaxUtils:void copy(javax.xml.transform.Source,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:org.w3c.dom.Document copy(org.w3c.dom.Document)",
            "org.apache.cxf.staxutils.StaxUtils:void copy(org.w3c.dom.Document,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void copy(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void copy(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void copy(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeDocument(org.w3c.dom.Document,javax.xml.stream.XMLStreamWriter,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeDocument(org.w3c.dom.Document,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeNode(org.w3c.dom.Node,javax.xml.stream.XMLStreamWriter,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:org.w3c.dom.Document read(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.staxutils.StaxUtils:org.w3c.dom.Document read(javax.xml.parsers.DocumentBuilder,javax.xml.stream.XMLStreamReader,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:org.w3c.dom.Element startElement(org.w3c.dom.Node,javax.xml.stream.XMLStreamReader,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:boolean isDeclared(org.w3c.dom.Element,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void readDocElements(org.w3c.dom.Node,javax.xml.stream.XMLStreamReader,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamReader createXMLStreamReader(java.io.InputStream,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamReader createXMLStreamReader(java.io.InputStream)",
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamReader createXMLStreamReader(java.lang.String,java.io.InputStream)",
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamReader createXMLStreamReader(javax.xml.transform.Source)",
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamReader createXMLStreamReader(java.io.Reader)",
            "org.apache.cxf.staxutils.StaxUtils:java.lang.String getUniquePrefix(javax.xml.stream.XMLStreamWriter,java.lang.String,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void printXmlFragment(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElementEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void <clinit>()",
            "org.apache.cxf.interceptor.StaxOutInterceptor:javax.xml.stream.XMLOutputFactory getXMLOutputFactory(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.WrappedInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.BareInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxInInterceptor:javax.xml.stream.XMLInputFactory getXMLInputFactory(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:void writeParts(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.message.MessageContentsList,java.util.List)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void getPara(org.apache.cxf.staxutils.DepthXMLStreamReader,org.apache.cxf.databinding.DataReader,org.apache.cxf.message.MessageContentsList,java.util.Iterator,org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void writeResponse(java.lang.String,java.lang.String,org.apache.cxf.service.model.EndpointInfo,java.io.OutputStream)",
            "org.apache.cxf.transport.http.spring.HttpConduitBeanDefinitionParser:void mapTLSClientParameters(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder)",
            "org.apache.cxf.ws.security.policy.model.IssuedToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.policy.model.SecureConversationToken:void serialize(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.trust.STSClient:org.apache.cxf.ws.security.tokenstore.SecurityToken requestSecurityToken(java.lang.String,java.lang.String,java.lang.String,org.apache.cxf.ws.security.tokenstore.SecurityToken)",
            "org.apache.cxf.ws.security.trust.STSClient:boolean validateSecurityToken(org.apache.cxf.ws.security.tokenstore.SecurityToken,java.lang.String)",
            "org.apache.cxf.ws.security.trust.STSClient:void cancelSecurityToken(org.apache.cxf.ws.security.tokenstore.SecurityToken)",
            "org.apache.cxf.ws.security.tokenstore.SecurityToken:org.w3c.dom.Element cloneElement(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor:void doResults(org.apache.cxf.binding.soap.SoapMessage,java.lang.String,javax.xml.soap.SOAPMessage,java.util.Vector)",
            "org.apache.cxf.databinding.AbstractDataBinding:org.w3c.dom.Document copy(org.w3c.dom.Document)",
            "org.apache.cxf.databinding.source.XMLStreamDataWriter:void write(java.lang.Object,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.databinding.source.XMLStreamDataReader:java.io.InputStream getInputStream(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.databinding.source.XMLStreamDataReader:java.lang.Object read(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.databinding.source.NodeDataWriter:void write(java.lang.Object,org.w3c.dom.Node)",
            "org.apache.cxf.databinding.stax.StaxDataBinding$XMLStreamDataWriter:void write(java.lang.Object,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.databinding.stax.StaxDataBindingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.wsdl.JAXBExtensionHelper:javax.wsdl.extensions.ExtensibilityElement unmarshall(java.lang.Class,javax.xml.namespace.QName,org.w3c.dom.Element,javax.wsdl.Definition,javax.wsdl.extensions.ExtensionRegistry)",
            "org.apache.cxf.binding.soap.interceptor.ReadHeadersInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.Soap12FaultOutInterceptor$Soap12FaultOutInterceptorInternal:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.AbstractSoapInterceptor:java.lang.String getFaultCodePrefix(javax.xml.stream.XMLStreamWriter,javax.xml.namespace.QName)",
            "org.apache.cxf.binding.soap.interceptor.RPCOutInterceptor:java.lang.String addOperationNode(org.apache.cxf.helpers.NSStack,org.apache.cxf.message.Message,javax.xml.stream.XMLStreamWriter,boolean,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.binding.soap.interceptor.Soap12FaultInInterceptor:org.apache.cxf.binding.soap.SoapFault unmarshalFault(org.apache.cxf.binding.soap.SoapMessage,javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.binding.soap.interceptor.RPCInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor:void writeSoapEnvelopeStart(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.Soap11FaultInInterceptor:org.apache.cxf.binding.soap.SoapFault unmarshalFault(org.apache.cxf.binding.soap.SoapMessage,javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.binding.soap.interceptor.Soap11FaultOutInterceptor$Soap11FaultOutInterceptorInternal:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.saaj.SAAJOutInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.saaj.SAAJInInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.saaj.SAAJOutInterceptor$SAAJOutEndingInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.xml.interceptor.XMLMessageInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.xml.interceptor.XMLFaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.xml.interceptor.XMLFaultInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.xml.interceptor.XMLMessageOutInterceptor:void writeMessage(org.apache.cxf.message.Message,javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.tools.util.ToolsStaxUtils:java.util.List getTags(java.io.File)",
            "org.apache.cxf.tools.util.ToolsStaxUtils:org.apache.cxf.tools.common.Tag getTagTree(java.io.InputStream,java.util.List)",
            "org.apache.cxf.bus.spring.TunedDocumentLoader:org.w3c.dom.Document loadFastinfosetDocument(java.net.URL)",
            "org.apache.cxf.aegis.util.jdom.StaxBuilder:org.jdom.Document build(java.io.InputStream)",
            "org.apache.cxf.aegis.util.jdom.StaxBuilder:org.jdom.Document build(java.io.Reader)",
            "org.apache.cxf.aegis.xml.stax.ElementReader:void <init>(java.io.InputStream)",
            "org.apache.cxf.aegis.type.xml.DocumentType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.xml.DocumentType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.xml.SourceType:void write(javax.xml.transform.Source,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.aegis.type.xml.XMLStreamReaderType:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerInterceptor:javax.xml.stream.XMLStreamReader createXMLStreamReaderFromSOAPMessage(javax.xml.soap.SOAPMessage)",
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerFaultInInterceptor:javax.xml.stream.XMLStreamReader createXMLStreamReaderFromSOAPMessage(javax.xml.soap.SOAPMessage)",
            "org.apache.cxf.jaxws.handler.logical.LogicalHandlerFaultOutInterceptor$LogicalHandlerFaultOutEndingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.handler.logical.LogicalHandlerOutInterceptor$LogicalHandlerOutEndingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.handler.logical.LogicalHandlerInInterceptor:void handleAbort(org.apache.cxf.message.Message,org.apache.cxf.staxutils.W3CDOMStreamWriter)",
            "org.apache.cxf.jaxws.handler.logical.LogicalMessageImpl:javax.xml.transform.Source getPayload()",
            "org.apache.cxf.jaxws.handler.logical.LogicalMessageImpl:void setPayload(javax.xml.transform.Source)",
            "org.apache.cxf.jaxws.handler.logical.LogicalMessageImpl:void write(javax.xml.transform.Source,org.w3c.dom.Node)",
            "org.apache.cxf.jaxws.spi.ProviderImpl:javax.xml.ws.wsaddressing.W3CEndpointReference createW3CEndpointReference(java.lang.String,javax.xml.namespace.QName,javax.xml.namespace.QName,java.util.List,java.lang.String,java.util.List)",
            "org.apache.cxf.jaxws.spi.ProviderImpl:javax.xml.ws.EndpointReference readEndpointReference(javax.xml.transform.Source)",
            "org.apache.cxf.jaxws.interceptors.MessageModeInInterceptor:void doFromSoapMessage(org.apache.cxf.message.Message,java.lang.Object)",
            "org.apache.cxf.jaxws.interceptors.SwAOutInterceptor:javax.activation.DataSource createDataSource(javax.xml.transform.Source,java.lang.String)",
            "org.apache.cxf.jaxws.interceptors.MessageModeOutInterceptor$MessageModeOutInterceptorInternal:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.xmlbeans.DataWriterImpl:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamWriter)"
        ]
    },
    "org.apache.cxf.interceptor.URIMappingInterceptor:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.URIMappingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.util.Map keepInOrder(java.util.Map,org.apache.cxf.service.model.OperationInfo,java.util.List)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:org.apache.cxf.message.MessageContentsList getParameters(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.lang.String uriDecode(java.lang.String)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:void <clinit>()",
            "org.apache.cxf.binding.soap.SoapBindingFactory:org.apache.cxf.binding.Binding createBinding(org.apache.cxf.service.model.BindingInfo)",
            "org.apache.cxf.binding.xml.XMLBindingFactory:org.apache.cxf.binding.Binding createBinding(org.apache.cxf.service.model.BindingInfo)"
        ]
    },
    "org.apache.cxf.interceptor.WrappedInInterceptor:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.WrappedInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.WrappedInInterceptor:void <clinit>()"
        ]
    },
    "org.apache.cxf.interceptor.LoggingOutInterceptor:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.LoggingOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.LoggingOutInterceptor:java.util.logging.Logger access$200()",
            "org.apache.cxf.interceptor.LoggingOutInterceptor:void <clinit>()",
            "org.apache.cxf.interceptor.LoggingOutInterceptor$LoggingCallback:void onClose(org.apache.cxf.io.CachedOutputStream)",
            "org.apache.cxf.feature.LoggingFeature:void initializeProvider(org.apache.cxf.interceptor.InterceptorProvider,org.apache.cxf.Bus)",
            "org.apache.cxf.feature.LoggingFeature:void <clinit>()"
        ]
    },
    "org.apache.cxf.interceptor.OutgoingChainInterceptor:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:org.apache.cxf.interceptor.InterceptorChain getOutInterceptorChain(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:org.apache.cxf.phase.PhaseInterceptorChain getChain(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:void <clinit>()",
            "org.apache.cxf.interceptor.MessageSenderInterceptor:org.apache.cxf.transport.Conduit getConduit(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.addressing.ContextUtils:void rebaseResponse(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.ws.addressing.AddressingProperties,org.apache.cxf.message.Message)",
            "org.apache.cxf.service.factory.AbstractServiceFactoryBean:void initializeDefaultInterceptors()",
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerInterceptor:void handleAbort(org.apache.cxf.binding.soap.SoapMessage,javax.xml.ws.handler.MessageContext)",
            "org.apache.cxf.jaxws.handler.logical.LogicalHandlerInInterceptor:void handleAbort(org.apache.cxf.message.Message,org.apache.cxf.staxutils.W3CDOMStreamWriter)"
        ]
    },
    "org.apache.cxf.interceptor.BareInInterceptor:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.BareInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.BareInInterceptor:void <clinit>()",
            "org.apache.cxf.ws.rm.soap.RMSoapInterceptor:void updateServiceModelInfo(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.RPCInInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.ClientFaultConverter:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.ClientFaultConverter:void processFaultDetail(org.apache.cxf.interceptor.Fault,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.ClientFaultConverter:void <clinit>()",
            "org.apache.cxf.endpoint.EndpointImpl:void <init>(org.apache.cxf.Bus,org.apache.cxf.service.Service,org.apache.cxf.service.model.EndpointInfo)"
        ]
    },
    "org.apache.cxf.interceptor.StaxInInterceptor:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.StaxInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxInInterceptor:javax.xml.stream.XMLInputFactory getXMLInputFactory(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxInInterceptor:void <clinit>()",
            "org.apache.cxf.binding.soap.SoapBindingFactory:org.apache.cxf.binding.Binding createBinding(org.apache.cxf.service.model.BindingInfo)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:void addListener(org.apache.cxf.transport.Destination,org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.binding.xml.XMLBindingFactory:org.apache.cxf.binding.Binding createBinding(org.apache.cxf.service.model.BindingInfo)"
        ]
    },
    "org.apache.cxf.interceptor.FaultOutInterceptor:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.FaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.FaultOutInterceptor:java.lang.Object getFaultBean(java.lang.Throwable,org.apache.cxf.service.model.FaultInfo,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.FaultOutInterceptor:void <clinit>()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeFaultInterceptors()",
            "org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean:void initializeFaultInterceptors()",
            "org.apache.cxf.jaxws.interceptors.WebFaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.interceptors.WebFaultOutInterceptor:java.lang.Object createFaultInfoBean(javax.xml.ws.WebFault,java.lang.Throwable)",
            "org.apache.cxf.jaxws.interceptors.WebFaultOutInterceptor:void <clinit>()"
        ]
    },
    "org.apache.cxf.interceptor.AttachmentInInterceptor:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.AttachmentInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AttachmentInInterceptor:java.util.List getSupportedTypes()",
            "org.apache.cxf.interceptor.AttachmentInInterceptor:void <clinit>()",
            "org.apache.cxf.binding.soap.SoapBindingFactory:org.apache.cxf.binding.Binding createBinding(org.apache.cxf.service.model.BindingInfo)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:void addListener(org.apache.cxf.transport.Destination,org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.binding.xml.XMLBindingFactory:org.apache.cxf.binding.Binding createBinding(org.apache.cxf.service.model.BindingInfo)"
        ]
    },
    "org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver:void <clinit>()"
        ]
    },
    "org.apache.cxf.interceptor.LoggingInInterceptor:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.LoggingInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.LoggingInInterceptor:void logging(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.LoggingInInterceptor:void <clinit>()",
            "org.apache.cxf.feature.LoggingFeature:void initializeProvider(org.apache.cxf.interceptor.InterceptorProvider,org.apache.cxf.Bus)",
            "org.apache.cxf.feature.LoggingFeature:void <clinit>()"
        ]
    },
    "org.apache.cxf.interceptor.DocLiteralInInterceptor:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.DocLiteralInInterceptor:void <clinit>()",
            "org.apache.cxf.binding.soap.SoapBindingFactory:org.apache.cxf.binding.Binding createBinding(org.apache.cxf.service.model.BindingInfo)",
            "org.apache.cxf.binding.xml.XMLBindingFactory:org.apache.cxf.binding.Binding createBinding(org.apache.cxf.service.model.BindingInfo)"
        ]
    },
    "org.apache.cxf.interceptor.PrettyLoggingOutInterceptor:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.PrettyLoggingOutInterceptor$LoggingCallback:void onClose(org.apache.cxf.io.CachedOutputStream)",
            "org.apache.cxf.interceptor.PrettyLoggingOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.PrettyLoggingOutInterceptor:java.util.logging.Logger access$100()",
            "org.apache.cxf.interceptor.PrettyLoggingOutInterceptor:void <clinit>()"
        ]
    },
    "org.apache.cxf.transport.http.WSDLQueryHandler:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.WSDLQueryHandler:void writeResponse(java.lang.String,java.lang.String,org.apache.cxf.service.model.EndpointInfo,java.io.OutputStream)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updateDefinition(javax.wsdl.Definition,java.util.Map,java.util.Map,java.lang.String,org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updateSchemaImports(javax.wsdl.extensions.schema.Schema,java.util.Map,java.lang.String)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void <clinit>()",
            "org.apache.cxf.transport.http.QueryHandlerRegistryImpl:void register()"
        ]
    },
    "org.apache.cxf.transport.http.policy.PolicyUtils:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.policy.HTTPServerAssertionBuilder:void <init>()",
            "org.apache.cxf.transport.http.policy.HTTPServerAssertionBuilder:org.apache.cxf.ws.policy.PolicyAssertion buildCompatible(org.apache.cxf.ws.policy.PolicyAssertion,org.apache.cxf.ws.policy.PolicyAssertion)",
            "org.apache.cxf.transport.http.policy.HTTPClientAssertionBuilder:void <init>()",
            "org.apache.cxf.transport.http.policy.HTTPClientAssertionBuilder:org.apache.cxf.ws.policy.PolicyAssertion buildCompatible(org.apache.cxf.ws.policy.PolicyAssertion,org.apache.cxf.ws.policy.PolicyAssertion)",
            "org.apache.cxf.transport.http.policy.HTTPServerAssertionBuilder$HTTPServerPolicyAssertion:void <init>(org.apache.cxf.transport.http.policy.HTTPServerAssertionBuilder)",
            "org.apache.cxf.transport.http.policy.HTTPServerAssertionBuilder$HTTPServerPolicyAssertion:boolean equal(org.apache.neethi.PolicyComponent)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPClientPolicy getClient(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPClientPolicy)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPServerPolicy getServer(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPServerPolicy)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPClientPolicy getClient(org.apache.cxf.ws.policy.PolicyEngine,org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.transport.Conduit)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPServerPolicy getServer(org.apache.cxf.ws.policy.PolicyEngine,org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.transport.Destination)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:void assertClientPolicy(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPClientPolicy)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:void assertServerPolicy(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPServerPolicy)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:boolean compatible(org.apache.cxf.transports.http.configuration.HTTPClientPolicy,org.apache.cxf.transports.http.configuration.HTTPClientPolicy)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPClientPolicy intersect(org.apache.cxf.transports.http.configuration.HTTPClientPolicy,org.apache.cxf.transports.http.configuration.HTTPClientPolicy)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:boolean equals(org.apache.cxf.transports.http.configuration.HTTPClientPolicy,org.apache.cxf.transports.http.configuration.HTTPClientPolicy)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:boolean compatible(org.apache.cxf.transports.http.configuration.HTTPServerPolicy,org.apache.cxf.transports.http.configuration.HTTPServerPolicy)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPServerPolicy intersect(org.apache.cxf.transports.http.configuration.HTTPServerPolicy,org.apache.cxf.transports.http.configuration.HTTPServerPolicy)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:boolean equals(org.apache.cxf.transports.http.configuration.HTTPServerPolicy,org.apache.cxf.transports.http.configuration.HTTPServerPolicy)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPClientPolicy getClient(java.util.Collection)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPServerPolicy getServer(java.util.Collection)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:void <clinit>()",
            "org.apache.cxf.transport.http.policy.HTTPClientAssertionBuilder$HTTPClientPolicyAssertion:void <init>(org.apache.cxf.transport.http.policy.HTTPClientAssertionBuilder)",
            "org.apache.cxf.transport.http.policy.HTTPClientAssertionBuilder$HTTPClientPolicyAssertion:boolean equal(org.apache.neethi.PolicyComponent)",
            "org.apache.cxf.transport.http.HTTPConduit:void initializeConfig()",
            "org.apache.cxf.transport.http.HTTPConduit:org.apache.cxf.transports.http.configuration.HTTPClientPolicy getClient(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:void assertMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:boolean canAssert(javax.xml.namespace.QName)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void initConfig()",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void assertMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:boolean canAssert(javax.xml.namespace.QName)"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.AbstractHTTPTransportFactory:org.apache.cxf.transport.Conduit getConduit(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.transport.http.HTTPConduit$InterposedMessageObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:void <init>(org.apache.cxf.Bus,org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.transport.http.HTTPConduit:java.util.logging.Logger getLogger()",
            "org.apache.cxf.transport.http.HTTPConduit:void finalizeConfig()",
            "org.apache.cxf.transport.http.HTTPConduit:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:void close(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:void makeTrustDecision(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:void logProtocolHeaders(java.util.logging.Level,org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:void setURLRequestHeaders(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:void setUpDecoupledDestination()",
            "org.apache.cxf.transport.http.HTTPConduit:void releaseDecoupledDestination()",
            "org.apache.cxf.transport.http.HTTPConduit:java.io.InputStream getPartialResponse(java.net.HttpURLConnection,int)",
            "org.apache.cxf.transport.http.HTTPConduit:void setHeadersByAuthorizationPolicy(org.apache.cxf.message.Message,java.net.URL,java.util.Map)",
            "org.apache.cxf.transport.http.HTTPConduit:void setHeadersByClientPolicy(org.apache.cxf.message.Message,java.util.Map)",
            "org.apache.cxf.transport.http.HTTPConduit:void setTlsClientParameters(org.apache.cxf.configuration.jsse.TLSClientParameters)",
            "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection redirectRetransmit(java.net.HttpURLConnection,org.apache.cxf.message.Message,org.apache.cxf.io.CacheAndWriteOutputStream)",
            "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection authorizationRetransmit(java.net.HttpURLConnection,org.apache.cxf.message.Message,org.apache.cxf.io.CacheAndWriteOutputStream)",
            "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection retransmit(java.net.HttpURLConnection,java.net.URL,org.apache.cxf.message.Message,org.apache.cxf.io.CacheAndWriteOutputStream)",
            "org.apache.cxf.transport.http.HTTPConduit:void setBasicAuthHeader(java.lang.String,java.lang.String,java.util.Map)",
            "org.apache.cxf.transport.http.HTTPConduit:void setProxyBasicAuthHeader(java.lang.String,java.lang.String,java.util.Map)",
            "org.apache.cxf.transport.http.HTTPConduit:java.util.logging.Logger access$200()",
            "org.apache.cxf.transport.http.HTTPConduit:void <clinit>()",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream$1:void run()",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleHeadersTrustCaching()",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleRetransmits()",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponseInternal()"
        ]
    },
    "org.apache.cxf.transport.http.AbstractHTTPDestination:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void <init>(org.apache.cxf.Bus,org.apache.cxf.transport.ConduitInitiator,org.apache.cxf.service.model.EndpointInfo,boolean)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void setHeaders(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void setupMessage(org.apache.cxf.message.Message,javax.servlet.ServletConfig,javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:org.apache.cxf.service.model.EndpointInfo getAddressValue(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:boolean markPartialResponse(org.apache.cxf.message.Message,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:boolean isPartialResponse(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void setPolicies(java.util.Map)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:java.io.OutputStream flushHeaders(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:java.lang.String getId(java.util.Map)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void <clinit>()",
            "org.apache.cxf.transport.servlet.ServletTransportFactory:org.apache.cxf.transport.Destination getDestination(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.servlet.ServletDestination:java.util.logging.Logger getLogger()",
            "org.apache.cxf.transport.servlet.ServletDestination:void <clinit>()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:java.util.logging.Logger getLogger()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void retrieveEngine()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void finalizeConfig()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void activate()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void deactivate()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void doService(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void serviceRequest(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:org.apache.cxf.message.MessageImpl retrieveFromContinuation(javax.servlet.http.HttpServletRequest)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void <clinit>()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPTransportFactory:org.apache.cxf.transport.http_jetty.JettyHTTPDestination createDestination(org.apache.cxf.service.model.EndpointInfo)"
        ]
    },
    "org.apache.cxf.transport.http.gzip.GZIPOutInterceptor:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.gzip.GZIPOutInterceptor$GZipThresholdOutputStream:void thresholdNotReached()",
            "org.apache.cxf.transport.http.gzip.GZIPOutInterceptor$GZipThresholdOutputStream:void thresholdReached()",
            "org.apache.cxf.transport.http.gzip.GZIPFeature:void initializeProvider(org.apache.cxf.interceptor.InterceptorProvider,org.apache.cxf.Bus)",
            "org.apache.cxf.transport.http.gzip.GZIPFeature:void <clinit>()",
            "org.apache.cxf.transport.http.gzip.GZIPOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.gzip.GZIPOutInterceptor:org.apache.cxf.transport.http.gzip.GZIPOutInterceptor$UseGzip gzipPermitted(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.gzip.GZIPOutInterceptor:java.util.logging.Logger access$000()",
            "org.apache.cxf.transport.http.gzip.GZIPOutInterceptor:void access$100(org.apache.cxf.message.Message,java.lang.String,java.lang.String)",
            "org.apache.cxf.transport.http.gzip.GZIPOutInterceptor:void <clinit>()"
        ]
    },
    "org.apache.cxf.transport.http.gzip.GZIPInInterceptor:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.gzip.GZIPFeature:void <clinit>()",
            "org.apache.cxf.transport.http.gzip.GZIPInInterceptor$GZIPInEndingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.gzip.GZIPInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.gzip.GZIPInInterceptor:void <clinit>()"
        ]
    },
    "org.apache.cxf.transport.servlet.ServletController:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.servlet.ServletController:void invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.servlet.ServletController:void invokeDestination(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.cxf.transport.servlet.ServletDestination)",
            "org.apache.cxf.transport.servlet.ServletController:void <clinit>()",
            "org.apache.cxf.transport.servlet.AbstractCXFServlet:org.apache.cxf.transport.servlet.ServletController createServletController(javax.servlet.ServletConfig)"
        ]
    },
    "org.apache.cxf.transport.servlet.CXFNonSpringServlet:java.util.logging.Logger getLogger()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.servlet.CXFServlet:java.util.logging.Logger getLogger()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.servlet.ServletDestination:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.servlet.ServletTransportFactory:org.apache.cxf.transport.Destination getDestination(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.servlet.ServletDestination:java.util.logging.Logger getLogger()",
            "org.apache.cxf.transport.servlet.ServletDestination:void <clinit>()"
        ]
    },
    "org.apache.cxf.transport.servlet.AbstractCXFServlet:java.util.logging.Logger getLogger()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.servlet.AbstractCXFServlet:void <clinit>()"
        ]
    },
    "org.apache.cxf.transport.https.HttpsURLConnectionFactory:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.AbstractHTTPTransportFactory:org.apache.cxf.transport.http.HttpURLConnectionFactory getConnectionFactory(org.apache.cxf.transport.http.HTTPConduit,java.lang.String)",
            "org.apache.cxf.transport.https.HttpsURLConnectionFactory:void <init>(org.apache.cxf.configuration.jsse.TLSClientParameters)",
            "org.apache.cxf.transport.https.HttpsURLConnectionFactory:void decorateWithTLS(java.net.HttpURLConnection)",
            "org.apache.cxf.transport.https.HttpsURLConnectionFactory:void addLogHandler(java.util.logging.Handler)",
            "org.apache.cxf.transport.https.HttpsURLConnectionFactory:java.lang.String[] getUnSupported()",
            "org.apache.cxf.transport.https.HttpsURLConnectionFactory:java.lang.String[] getDerivative()",
            "org.apache.cxf.transport.https.HttpsURLConnectionFactory:void <clinit>()"
        ]
    },
    "org.apache.cxf.transport.https.SSLUtils:java.lang.String getKeystore(java.lang.String,java.util.logging.Logger)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.https.SSLUtils:java.lang.String getKeystoreType(java.lang.String,java.util.logging.Logger)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.https.SSLUtils:java.lang.String getKeystorePassword(java.lang.String,java.util.logging.Logger)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.https.SSLUtils:java.lang.String getKeyPassword(java.lang.String,java.util.logging.Logger)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.https.SSLUtils:java.lang.String getKeystoreAlgorithm(java.lang.String,java.util.logging.Logger)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.https.SSLUtils:java.lang.String getTrustStoreAlgorithm(java.lang.String,java.util.logging.Logger)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.https.SSLUtils:java.lang.String[] getCiphersFromList(java.util.List,java.util.logging.Logger)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.https.SSLUtils:java.lang.String[] getCiphersuites(java.util.List,java.lang.String[],org.apache.cxf.configuration.security.FiltersType,java.util.logging.Logger,boolean)"
        ]
    },
    "org.apache.cxf.transport.https.SSLUtils:java.lang.String getTrustStore(java.lang.String,java.util.logging.Logger)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.https.SSLUtils:java.lang.String getTrustStoreType(java.lang.String,java.util.logging.Logger)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.https.SSLUtils:java.lang.String getSecureSocketProtocol(java.lang.String,java.util.logging.Logger)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.https.SSLUtils:boolean getRequireClientAuthentication(boolean,java.lang.Boolean,java.util.logging.Logger)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.https.SSLUtils:boolean getWantClientAuthentication(boolean,java.lang.Boolean,java.util.logging.Logger)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.https.SSLUtils:void logUnSupportedPolicy(boolean,boolean,java.lang.String,java.util.logging.Logger)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.https.SSLUtils:void logUnSupportedPolicies(java.lang.Object,boolean,java.lang.String[],java.util.logging.Logger)"
        ]
    },
    "org.apache.cxf.transport.https.SSLSocketFactoryWrapper:java.net.Socket enableCipherSuites(java.net.Socket,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.https.SSLSocketFactoryWrapper:java.net.Socket createSocket()",
            "org.apache.cxf.transport.https.SSLSocketFactoryWrapper:java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean)",
            "org.apache.cxf.transport.https.SSLSocketFactoryWrapper:java.net.Socket createSocket(java.lang.String,int)",
            "org.apache.cxf.transport.https.SSLSocketFactoryWrapper:java.net.Socket createSocket(java.lang.String,int,java.net.InetAddress,int)",
            "org.apache.cxf.transport.https.SSLSocketFactoryWrapper:java.net.Socket createSocket(java.net.InetAddress,int)",
            "org.apache.cxf.transport.https.SSLSocketFactoryWrapper:java.net.Socket createSocket(java.net.InetAddress,int,java.net.InetAddress,int)"
        ]
    },
    "org.apache.cxf.transport.https.SSLSocketFactoryWrapper:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.https.HttpsURLConnectionFactory:void decorateWithTLS(java.net.HttpURLConnection)",
            "org.apache.cxf.transport.https.SSLSocketFactoryWrapper:java.net.Socket enableCipherSuites(java.net.Socket,java.lang.Object[])",
            "org.apache.cxf.transport.https.SSLSocketFactoryWrapper:void addLogHandler(java.util.logging.Handler)",
            "org.apache.cxf.transport.https.SSLSocketFactoryWrapper:void <clinit>()"
        ]
    },
    "org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.https_jetty.JettySslConnectorFactory:org.mortbay.jetty.AbstractConnector createConnector(int)",
            "org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector:javax.net.ssl.SSLServerSocketFactory createFactory()",
            "org.apache.cxf.transport.https_jetty.CXFJettySslSocketConnector:void <clinit>()"
        ]
    },
    "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:java.util.logging.Logger getLogger()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void retrieveEngine()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void finalizeConfig()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void activate()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void deactivate()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void doService(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void serviceRequest(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:org.apache.cxf.message.MessageImpl retrieveFromContinuation(javax.servlet.http.HttpServletRequest)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void <clinit>()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPTransportFactory:org.apache.cxf.transport.http_jetty.JettyHTTPDestination createDestination(org.apache.cxf.service.model.EndpointInfo)"
        ]
    },
    "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine:void shutdown()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine:void addServant(java.net.URL,org.apache.cxf.transport.http_jetty.JettyHTTPHandler)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine:void setReuseAddress(org.mortbay.jetty.Connector)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine:void removeServant(java.net.URL)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine:void retrieveListenerFactory()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine:void <clinit>()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine$1:org.mortbay.jetty.AbstractConnector createConnector(int)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void setTLSServerParametersForPort(int,org.apache.cxf.configuration.jsse.TLSServerParameters)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine createJettyHTTPServerEngine(int,java.lang.String)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void postShutdown()"
        ]
    },
    "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.JettyHTTPTransportFactory:org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory getJettyHTTPServerEngineFactory()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void setEnginesList(java.util.List)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void setTLSServerParametersForPort(int,org.apache.cxf.configuration.jsse.TLSServerParameters)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine retrieveJettyHTTPServerEngine(int)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine createJettyHTTPServerEngine(int,java.lang.String)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void destroyForPort(int)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void postShutdown()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void <clinit>()"
        ]
    },
    "org.apache.cxf.transport.jms.JMSOldConfigHolder:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.jms.JMSOldConfigHolder:org.apache.cxf.transport.jms.JMSConfiguration createJMSConfigurationFromEndpointInfo(org.apache.cxf.Bus,org.apache.cxf.service.model.EndpointInfo,boolean)",
            "org.apache.cxf.transport.jms.JMSOldConfigHolder:java.util.Properties getInitialContextEnv(org.apache.cxf.transport.jms.AddressType)",
            "org.apache.cxf.transport.jms.JMSOldConfigHolder:void <clinit>()",
            "org.apache.cxf.transport.jms.JMSTransportFactory:org.apache.cxf.transport.Conduit getConduit(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.transport.jms.JMSTransportFactory:org.apache.cxf.transport.Destination getDestination(org.apache.cxf.service.model.EndpointInfo)"
        ]
    },
    "org.apache.cxf.transport.jms.JMSFactory:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.jms.JMSFactory:org.springframework.jms.listener.DefaultMessageListenerContainer createJmsListener(org.apache.cxf.transport.jms.JMSConfiguration,javax.jms.MessageListener,java.lang.String,java.lang.String,boolean)",
            "org.apache.cxf.transport.jms.JMSFactory:void <clinit>()",
            "org.apache.cxf.transport.jms.JMSConfiguration:javax.jms.ConnectionFactory getOrCreateWrappedConnectionFactory()",
            "org.apache.cxf.transport.jms.JMSDestination:void activate()",
            "org.apache.cxf.transport.jms.JMSDestination:void sendExchange(org.apache.cxf.message.Exchange,java.lang.Object)",
            "org.apache.cxf.transport.jms.JMSConduit:void sendExchange(org.apache.cxf.message.Exchange,java.lang.Object)"
        ]
    },
    "org.apache.cxf.transport.jms.JMSOutputStream:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.jms.JMSOutputStream:java.lang.Object retrieveRequestFromStream(boolean)",
            "org.apache.cxf.transport.jms.JMSOutputStream:void <clinit>()",
            "org.apache.cxf.transport.jms.JMSDestination$BackChannelConduit:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.jms.JMSConduit:void prepare(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.jms.JMSDestination:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.jms.JMSDestination$2:javax.jms.Message createMessage(javax.jms.Session)",
            "org.apache.cxf.transport.jms.JMSTransportFactory:org.apache.cxf.transport.Destination getDestination(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.jms.JMSDestination$1:java.lang.Object doInJms(javax.jms.Session)",
            "org.apache.cxf.transport.jms.JMSDestination:void <init>(org.apache.cxf.Bus,org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.transport.jms.JMSConfiguration)",
            "org.apache.cxf.transport.jms.JMSDestination:void activate()",
            "org.apache.cxf.transport.jms.JMSDestination:java.util.logging.Logger getLogger()",
            "org.apache.cxf.transport.jms.JMSDestination:java.util.logging.Logger access$100()",
            "org.apache.cxf.transport.jms.JMSDestination:void <clinit>()",
            "org.apache.cxf.transport.jms.JMSDestination$BackChannelConduit:java.util.logging.Logger getLogger()"
        ]
    },
    "org.apache.cxf.transport.jms.JMSUtils:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.jms.JMSDestination$2:javax.jms.Message createMessage(javax.jms.Session)",
            "org.apache.cxf.transport.jms.JMSConduit$1:javax.jms.Message createMessage(javax.jms.Session)",
            "org.apache.cxf.transport.jms.JMSDestination:void onMessage(javax.jms.Message)",
            "org.apache.cxf.transport.jms.JMSUtils:void populateIncomingContext(javax.jms.Message,org.apache.cxf.message.Message,java.lang.String)",
            "org.apache.cxf.transport.jms.JMSUtils:java.lang.String getEncoding(java.lang.String)",
            "org.apache.cxf.transport.jms.JMSUtils:javax.jms.Message buildJMSMessageFromCXFMessage(org.apache.cxf.message.Message,java.lang.Object,java.lang.String,javax.jms.Session,javax.jms.Destination,java.lang.String)",
            "org.apache.cxf.transport.jms.JMSUtils:java.lang.String createCorrelationId(java.lang.String,long)",
            "org.apache.cxf.transport.jms.JMSUtils:void <clinit>()",
            "org.apache.cxf.transport.jms.JMSConduit:void sendExchange(org.apache.cxf.message.Exchange,java.lang.Object)",
            "org.apache.cxf.transport.jms.JMSConduit:void onMessage(javax.jms.Message)"
        ]
    },
    "org.apache.cxf.transport.jms.JMSConfigFeature:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.jms.JMSConfigFeature:void initialize(org.apache.cxf.endpoint.Client,org.apache.cxf.Bus)",
            "org.apache.cxf.transport.jms.JMSConfigFeature:void initialize(org.apache.cxf.endpoint.Server,org.apache.cxf.Bus)",
            "org.apache.cxf.transport.jms.JMSConfigFeature:void checkJmsConfig()",
            "org.apache.cxf.transport.jms.JMSConfigFeature:void <clinit>()"
        ]
    },
    "org.apache.cxf.transport.jms.JMSConduit:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.jms.JMSTransportFactory:org.apache.cxf.transport.Conduit getConduit(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.transport.jms.JMSConduit$JMSBusLifeCycleListener:void preShutdown()",
            "org.apache.cxf.transport.jms.JMSConduit$1:javax.jms.Message createMessage(javax.jms.Session)",
            "org.apache.cxf.transport.jms.JMSConduit:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.jms.JMSConduit:void sendExchange(org.apache.cxf.message.Exchange,java.lang.Object)",
            "org.apache.cxf.transport.jms.JMSConduit:void onMessage(javax.jms.Message)",
            "org.apache.cxf.transport.jms.JMSConduit:void close()",
            "org.apache.cxf.transport.jms.JMSConduit:java.util.logging.Logger getLogger()",
            "org.apache.cxf.transport.jms.JMSConduit:void <clinit>()"
        ]
    },
    "org.apache.cxf.BusFactory:org.apache.cxf.BusFactory newInstance(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.BusFactory:org.apache.cxf.BusFactory newInstance()"
        ]
    },
    "org.apache.cxf.BusFactory:java.lang.String getBusFactoryClass(java.lang.ClassLoader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.BusFactory:org.apache.cxf.BusFactory newInstance(java.lang.String)"
        ]
    },
    "org.apache.cxf.BusFactory:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.management.interceptor.AbstractMessageResponseTimeInterceptor:void increaseCounter(org.apache.cxf.message.Exchange,org.apache.cxf.management.counters.MessageHandlingTimeRecorder)",
            "org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.MultipleEndpointObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.ChainInitiationObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.servlet.CXFNonSpringServlet:void loadBusNoConfig(javax.servlet.ServletConfig)",
            "org.apache.cxf.transport.servlet.CXFServlet:void updateContext(javax.servlet.ServletConfig,org.springframework.context.ApplicationContext)",
            "org.apache.cxf.transport.servlet.AbstractCXFServlet:void init(javax.servlet.ServletConfig)",
            "org.apache.cxf.transport.servlet.AbstractCXFServlet:void invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser$SpringJettyHTTPServerEngine:void setApplicationContext(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineFactoryBeanDefinitionParser$SpringJettyHTTPServerEngineFactory:void setApplicationContext(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void doService(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.jms.continuations.JMSContinuation:void doResume()",
            "org.apache.cxf.transport.jms.JMSDestination:void onMessage(javax.jms.Message)",
            "org.apache.cxf.BusFactory:org.apache.cxf.Bus getDefaultBus()",
            "org.apache.cxf.BusFactory:org.apache.cxf.Bus getDefaultBus(boolean)",
            "org.apache.cxf.BusFactory:void setDefaultBus(org.apache.cxf.Bus)",
            "org.apache.cxf.BusFactory:void setThreadDefaultBus(org.apache.cxf.Bus)",
            "org.apache.cxf.BusFactory:org.apache.cxf.Bus getThreadDefaultBus()",
            "org.apache.cxf.BusFactory:org.apache.cxf.Bus getThreadDefaultBus(boolean)",
            "org.apache.cxf.BusFactory:boolean possiblySetDefaultBus(org.apache.cxf.Bus)",
            "org.apache.cxf.BusFactory:org.apache.cxf.BusFactory newInstance()",
            "org.apache.cxf.BusFactory:org.apache.cxf.BusFactory newInstance(java.lang.String)",
            "org.apache.cxf.BusFactory:java.lang.String getBusFactoryClass(java.lang.ClassLoader)",
            "org.apache.cxf.BusFactory:void <clinit>()",
            "org.apache.cxf.endpoint.EndpointImpl:void <init>(org.apache.cxf.Bus,org.apache.cxf.service.Service,org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.endpoint.ClientImpl:void <init>(java.net.URL)",
            "org.apache.cxf.endpoint.ClientImpl:void <init>(java.net.URL,javax.xml.namespace.QName)",
            "org.apache.cxf.endpoint.ClientImpl:void invoke(org.apache.cxf.endpoint.ClientCallback,org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[])",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.ClientImpl:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.AbstractEndpointFactory:org.apache.cxf.Bus getBus()",
            "org.apache.cxf.databinding.AbstractDataBinding:org.apache.cxf.Bus getBus()",
            "org.apache.cxf.tools.common.toolspec.AbstractToolContainer:org.apache.cxf.Bus getBus()",
            "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus finishCreatingBus(org.apache.cxf.bus.spring.BusApplicationContext)",
            "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus createBus(java.lang.String[],boolean)",
            "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.bus.spring.BusApplicationContext createApplicationContext(java.lang.String[],boolean)",
            "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus createBus(java.net.URL[],boolean)",
            "org.apache.cxf.bus.spring.SpringBusFactory:void <clinit>()",
            "org.apache.cxf.bus.CXFBusImpl:void shutdown(boolean)",
            "org.apache.cxf.frontend.spring.ServerFactoryBeanDefinitionParser$SpringServerFactoryBean:void setApplicationContext(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.frontend.spring.ClientProxyFactoryBeanDefinitionParser$SpringClientProxyFactoryBean:void setApplicationContext(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.jaxws.spring.EndpointDefinitionParser$SpringEndpointImpl:void setApplicationContext(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.jaxws.spring.NamespaceHandler$SpringServerFactoryBean:void setApplicationContext(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.jaxws.spring.JaxWsProxyFactoryBeanDefinitionParser$JAXWSSpringClientProxyFactoryBean:void setApplicationContext(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.jaxws.EndpointImpl:void <init>(java.lang.Object)",
            "org.apache.cxf.jaxws.spi.ProviderImpl:javax.xml.ws.spi.ServiceDelegate createServiceDelegate(java.net.URL,javax.xml.namespace.QName,java.lang.Class)",
            "org.apache.cxf.jaxws.spi.ProviderImpl:javax.xml.ws.Endpoint createEndpoint(java.lang.String,java.lang.Object)",
            "org.apache.cxf.jaxws.spi.ProviderImpl:javax.xml.ws.wsaddressing.W3CEndpointReference createW3CEndpointReference(java.lang.String,javax.xml.namespace.QName,javax.xml.namespace.QName,java.util.List,java.lang.String,java.util.List)"
        ]
    },
    "org.apache.cxf.endpoint.UpfrontConduitSelector:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.UpfrontConduitSelector:java.util.logging.Logger getLogger()",
            "org.apache.cxf.endpoint.UpfrontConduitSelector:void <clinit>()",
            "org.apache.cxf.endpoint.ClientImpl:org.apache.cxf.endpoint.ConduitSelector getConduitSelector(org.apache.cxf.endpoint.ConduitSelector)"
        ]
    },
    "org.apache.cxf.endpoint.DeferredConduitSelector:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.DeferredConduitSelector:java.util.logging.Logger getLogger()",
            "org.apache.cxf.endpoint.DeferredConduitSelector:void <clinit>()"
        ]
    },
    "org.apache.cxf.endpoint.EndpointImpl:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.SimpleEndpointImplFactory:org.apache.cxf.endpoint.EndpointImpl newEndpointImpl(org.apache.cxf.Bus,org.apache.cxf.service.Service,org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.endpoint.EndpointImpl:void createBinding(org.apache.cxf.service.model.BindingInfo)",
            "org.apache.cxf.endpoint.EndpointImpl:void <clinit>()",
            "org.apache.cxf.endpoint.ClientImpl:void <init>(org.apache.cxf.Bus,java.net.URL,javax.xml.namespace.QName,javax.xml.namespace.QName,org.apache.cxf.endpoint.EndpointImplFactory)",
            "org.apache.cxf.ws.security.trust.STSClient:void createClient()",
            "org.apache.cxf.ws.security.trust.STSUtils:org.apache.cxf.endpoint.Endpoint createSTSEndpoint(org.apache.cxf.Bus,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.neethi.Policy,javax.xml.namespace.QName)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.endpoint.Endpoint createEndpoint(org.apache.cxf.service.model.EndpointInfo)"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:void waitResponse(org.apache.cxf.message.Exchange)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] processResult(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,java.util.Map)"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(javax.xml.namespace.QName,java.lang.Object[])",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invokeWrapped(javax.xml.namespace.QName,java.lang.Object[])",
            "org.apache.cxf.endpoint.ClientImpl:void invoke(org.apache.cxf.endpoint.ClientCallback,javax.xml.namespace.QName,java.lang.Object[])",
            "org.apache.cxf.endpoint.ClientImpl:void invokeWrapped(org.apache.cxf.endpoint.ClientCallback,javax.xml.namespace.QName,java.lang.Object[])",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] processResult(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,java.util.Map)",
            "org.apache.cxf.endpoint.ClientImpl:void setContext(java.util.Map,org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ClientImpl:void waitResponse(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.ClientImpl:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ClientImpl:org.apache.cxf.phase.PhaseInterceptorChain setupInterceptorChain(org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.endpoint.ClientImpl:void <clinit>()",
            "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:org.apache.cxf.endpoint.Client createClient(java.lang.String,javax.xml.namespace.QName,java.lang.ClassLoader,javax.xml.namespace.QName,java.util.List)",
            "org.apache.cxf.ws.security.trust.STSClient:void createClient()",
            "org.apache.cxf.frontend.ClientFactoryBean:void createClient(org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.jaxws.ServiceImpl:javax.xml.ws.Dispatch createDispatch(javax.xml.namespace.QName,java.lang.Class,javax.xml.ws.Service$Mode,javax.xml.ws.WebServiceFeature[])",
            "org.apache.cxf.jaxws.ServiceImpl:javax.xml.ws.Dispatch createDispatch(javax.xml.namespace.QName,javax.xml.bind.JAXBContext,javax.xml.ws.Service$Mode,javax.xml.ws.WebServiceFeature[])"
        ]
    },
    "org.apache.cxf.endpoint.ServerImpl:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ServerImpl:void initDestination(org.apache.cxf.transport.DestinationFactory)",
            "org.apache.cxf.endpoint.ServerImpl:void start()",
            "org.apache.cxf.endpoint.ServerImpl:void stop()",
            "org.apache.cxf.endpoint.ServerImpl:void <clinit>()",
            "org.apache.cxf.frontend.ServerFactoryBean:org.apache.cxf.endpoint.Server create()"
        ]
    },
    "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:org.apache.cxf.endpoint.dynamic.DynamicClientFactory newInstance(org.apache.cxf.Bus)",
            "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:org.apache.cxf.endpoint.dynamic.DynamicClientFactory newInstance()",
            "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:org.apache.cxf.endpoint.Client createClient(java.lang.String,javax.xml.namespace.QName,java.lang.ClassLoader,javax.xml.namespace.QName,java.util.List)",
            "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:void outputDebug(org.apache.cxf.jaxb.JAXBUtils$JCodeModel)",
            "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:void addSchemas(java.lang.String,java.util.Collection,org.apache.cxf.jaxb.JAXBUtils$SchemaCompiler)",
            "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:void setupClasspath(java.lang.StringBuilder,java.lang.ClassLoader)",
            "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:java.net.URL composeUrl(java.lang.String)",
            "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:void <clinit>()"
        ]
    },
    "org.apache.cxf.endpoint.dynamic.TypeClassInitializer:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:org.apache.cxf.endpoint.Client createClient(java.lang.String,javax.xml.namespace.QName,java.lang.ClassLoader,javax.xml.namespace.QName,java.util.List)",
            "org.apache.cxf.endpoint.dynamic.TypeClassInitializer:void begin(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.endpoint.dynamic.TypeClassInitializer:void <clinit>()"
        ]
    },
    "org.apache.cxf.ws.addressing.AddressingBuilder:org.apache.cxf.ws.addressing.AddressingBuilder getAddressingBuilder()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.addressing.AddressingBuilder:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.AddressingBuilder:org.apache.cxf.ws.addressing.AddressingBuilder getAddressingBuilder()",
            "org.apache.cxf.ws.addressing.AddressingBuilder:void <clinit>()"
        ]
    },
    "org.apache.cxf.ws.addressing.ContextUtils:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.ContextUtils:void storeMAPs(org.apache.cxf.ws.addressing.AddressingProperties,org.apache.cxf.message.Message,boolean)",
            "org.apache.cxf.ws.addressing.ContextUtils:void storeMAPs(org.apache.cxf.ws.addressing.AddressingProperties,org.apache.cxf.message.Message,boolean,boolean)",
            "org.apache.cxf.ws.addressing.ContextUtils:void storeMAPs(org.apache.cxf.ws.addressing.AddressingProperties,org.apache.cxf.message.Message,boolean,boolean,boolean)",
            "org.apache.cxf.ws.addressing.ContextUtils:org.apache.cxf.ws.addressing.AddressingPropertiesImpl retrieveMAPs(org.apache.cxf.message.Message,boolean,boolean)",
            "org.apache.cxf.ws.addressing.ContextUtils:org.apache.cxf.ws.addressing.AddressingPropertiesImpl retrieveMAPs(org.apache.cxf.message.Message,boolean,boolean,boolean)",
            "org.apache.cxf.ws.addressing.ContextUtils:org.apache.cxf.ws.addressing.AttributedURIType getAttributedURI(java.lang.String)",
            "org.apache.cxf.ws.addressing.ContextUtils:org.apache.cxf.ws.addressing.RelatesToType getRelatesTo(java.lang.String)",
            "org.apache.cxf.ws.addressing.ContextUtils:void rebaseResponse(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.ws.addressing.AddressingProperties,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.addressing.ContextUtils:void propogateReceivedMAPs(org.apache.cxf.ws.addressing.AddressingProperties,org.apache.cxf.message.Exchange)",
            "org.apache.cxf.ws.addressing.ContextUtils:void propogateReceivedMAPs(org.apache.cxf.ws.addressing.AddressingProperties,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.addressing.ContextUtils:void ensurePartialResponseMAPs(org.apache.cxf.message.Message,java.lang.String)",
            "org.apache.cxf.ws.addressing.ContextUtils:javax.xml.bind.JAXBContext getJAXBContext()",
            "org.apache.cxf.ws.addressing.ContextUtils:void setJAXBContext(javax.xml.bind.JAXBContext)",
            "org.apache.cxf.ws.addressing.ContextUtils:org.apache.cxf.ws.addressing.AttributedURIType getAction(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.addressing.ContextUtils:java.lang.String getActionFromServiceModel(org.apache.cxf.message.Message,java.lang.Exception)",
            "org.apache.cxf.ws.addressing.ContextUtils:java.lang.String getActionFromMessageAttributes(org.apache.cxf.service.model.MessageInfo)",
            "org.apache.cxf.ws.addressing.ContextUtils:org.apache.cxf.ws.addressing.EndpointReferenceType getNoneEndpointReference()",
            "org.apache.cxf.ws.addressing.ContextUtils:void applyReferenceParam(org.apache.cxf.ws.addressing.EndpointReferenceType,javax.xml.bind.JAXBElement)",
            "org.apache.cxf.ws.addressing.ContextUtils:void <clinit>()",
            "org.apache.cxf.ws.addressing.MAPAggregator:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.addressing.MAPAggregator:boolean usingAddressing(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.addressing.MAPAggregator:boolean mediate(org.apache.cxf.message.Message,boolean)",
            "org.apache.cxf.ws.addressing.MAPAggregator:void aggregate(org.apache.cxf.message.Message,boolean)",
            "org.apache.cxf.ws.addressing.MAPAggregator:org.apache.cxf.ws.addressing.AddressingPropertiesImpl assembleGeneric(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.addressing.MAPAggregator:java.lang.String getActionFromInputMessage(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.ws.addressing.MAPAggregator:java.lang.String getActionFromOutputMessage(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.ws.addressing.MAPAggregator:java.lang.String getActionFromFaultMessage(org.apache.cxf.service.model.OperationInfo,java.lang.String)",
            "org.apache.cxf.ws.addressing.MAPAggregator:java.lang.String getActionUri(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.addressing.MAPAggregator:void addRoleSpecific(org.apache.cxf.ws.addressing.AddressingPropertiesImpl,org.apache.cxf.message.Message,boolean,boolean)",
            "org.apache.cxf.ws.addressing.MAPAggregator:org.apache.cxf.ws.addressing.AddressingPropertiesImpl getMAPs(org.apache.cxf.message.Message,boolean,boolean)",
            "org.apache.cxf.ws.addressing.MAPAggregator:boolean validateIncomingMAPs(org.apache.cxf.ws.addressing.AddressingProperties,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.AttributedURIType convert(org.apache.cxf.ws.addressing.v200408.AttributedURI)",
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.AttributedURIType convert(org.apache.cxf.ws.addressing.v200403.AttributedURI)",
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.EndpointReferenceType convert(org.apache.cxf.ws.addressing.v200408.EndpointReferenceType)",
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.EndpointReferenceType convert(org.apache.cxf.ws.addressing.v200403.EndpointReferenceType)",
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.ReferenceParametersType convert(org.apache.cxf.ws.addressing.v200408.ReferenceParametersType)",
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.RelatesToType convert(org.apache.cxf.ws.addressing.v200408.Relationship)",
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.RelatesToType convert(org.apache.cxf.ws.addressing.v200403.Relationship)",
            "org.apache.cxf.ws.addressing.VersionTransformer:javax.xml.bind.JAXBContext getExposedJAXBContext(java.lang.String)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void handleFault(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void mediate(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void decodeReferenceParameters(java.util.Set,org.apache.cxf.ws.addressing.AddressingPropertiesImpl,javax.xml.bind.Unmarshaller)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void applyMAPValidation(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void cacheExchange(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.addressing.AddressingProperties)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void restoreExchange(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.addressing.AddressingProperties)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void markPartialResponse(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.addressing.AddressingProperties)",
            "org.apache.cxf.ws.rm.SourceSequence:void setTarget(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.ws.rm.RMInInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.RMContextUtils:java.lang.String generateUUID()",
            "org.apache.cxf.ws.rm.RMContextUtils:org.apache.cxf.ws.addressing.AddressingPropertiesImpl retrieveMAPs(org.apache.cxf.message.Message,boolean,boolean)",
            "org.apache.cxf.ws.rm.RMContextUtils:void storeMAPs(org.apache.cxf.ws.addressing.AddressingProperties,org.apache.cxf.message.Message,boolean,boolean)",
            "org.apache.cxf.ws.rm.RMOutInterceptor:void handle(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.ws.addressing.MAPAggregator:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.MAPAggregator:boolean hasUsingAddressing(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.addressing.MAPAggregator:org.apache.cxf.ws.addressing.AddressingPropertiesImpl getMAPs(org.apache.cxf.message.Message,boolean,boolean)",
            "org.apache.cxf.ws.addressing.MAPAggregator:boolean validateIncomingMAPs(org.apache.cxf.ws.addressing.AddressingProperties,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.addressing.MAPAggregator:void <clinit>()",
            "org.apache.cxf.ws.addressing.policy.AddressingPolicyInterceptorProvider:void <clinit>()",
            "org.apache.cxf.ws.addressing.WSAddressingFeature:void <init>()",
            "org.apache.cxf.ws.rm.WrappedEndpoint:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.ws.rm.WrappedEndpoint:java.lang.Object put(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.cxf.ws.addressing.soap.MAPCodec:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.policy.AddressingPolicyInterceptorProvider:void <clinit>()",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void encode(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.addressing.AddressingPropertiesImpl)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void encodeReferenceParameters(org.apache.cxf.ws.addressing.AddressingProperties,org.w3c.dom.Element,javax.xml.bind.Marshaller)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void encodeAsExposed(org.apache.cxf.ws.addressing.AddressingPropertiesImpl,org.apache.cxf.binding.soap.SoapMessage,java.lang.Object,javax.xml.namespace.QName,java.lang.Class,org.w3c.dom.Element,javax.xml.bind.Marshaller)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:org.apache.cxf.ws.addressing.AddressingProperties unmarshalMAPs(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:java.lang.Object decodeAsNative(java.lang.String,java.lang.Class,org.w3c.dom.Element,javax.xml.bind.Unmarshaller)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void propogateAction(org.apache.cxf.ws.addressing.AttributedURIType,org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void restoreExchange(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.addressing.AddressingProperties)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void <clinit>()",
            "org.apache.cxf.ws.addressing.WSAddressingFeature:void <init>()"
        ]
    },
    "org.apache.cxf.ws.addressing.soap.VersionTransformer:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void <init>()",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:java.util.Set getUnderstoodHeaders()",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void encode(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.addressing.AddressingPropertiesImpl)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:org.apache.cxf.ws.addressing.AddressingProperties unmarshalMAPs(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.addressing.soap.VersionTransformer:void encodeAsExposed(java.lang.String,java.lang.Object,java.lang.String,java.lang.Class,org.w3c.dom.Element,javax.xml.bind.Marshaller)",
            "org.apache.cxf.ws.addressing.soap.VersionTransformer:java.lang.Object decodeAsNative(java.lang.String,java.lang.Class,org.w3c.dom.Element,javax.xml.bind.Unmarshaller)",
            "org.apache.cxf.ws.addressing.soap.VersionTransformer:void <clinit>()"
        ]
    },
    "org.apache.cxf.ws.policy.builder.jaxb.JaxbAssertionBuilder:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.builder.jaxb.JaxbAssertionBuilder:java.lang.Object getData(org.w3c.dom.Element)",
            "org.apache.cxf.ws.policy.builder.jaxb.JaxbAssertionBuilder:void <clinit>()"
        ]
    },
    "org.apache.cxf.ws.policy.ServerPolicyOutFaultInterceptor:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.ServerPolicyOutFaultInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.policy.ServerPolicyOutFaultInterceptor:void <clinit>()",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:void removeBusInterceptors()",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:void addBusInterceptors()"
        ]
    },
    "org.apache.cxf.ws.policy.PolicyInInterceptor:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.PolicyInInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.policy.PolicyInInterceptor:void <clinit>()",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:void removeBusInterceptors()",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:void addBusInterceptors()"
        ]
    },
    "org.apache.cxf.ws.policy.PolicyOutInterceptor:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.PolicyOutInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.policy.PolicyOutInterceptor:void <clinit>()",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:void removeBusInterceptors()",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:void addBusInterceptors()"
        ]
    },
    "org.apache.cxf.ws.policy.PolicyEngineImpl:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.PolicyEngineImpl:boolean supportsAlternative(java.util.Collection,org.apache.cxf.ws.policy.Assertor)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:void <clinit>()"
        ]
    },
    "org.apache.cxf.ws.policy.PolicyVerificationInInterceptor:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.PolicyInInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.policy.PolicyVerificationInInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.policy.PolicyVerificationInInterceptor:void <clinit>()"
        ]
    },
    "org.apache.cxf.ws.policy.PolicyVerificationOutInterceptor:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.PolicyOutInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.policy.PolicyVerificationOutInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.policy.PolicyVerificationOutInterceptor:void <clinit>()"
        ]
    },
    "org.apache.cxf.ws.policy.EffectivePolicyImpl:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.PolicyInInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.policy.PolicyOutInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:org.apache.cxf.ws.policy.EffectivePolicyImpl createOutPolicyInfo()",
            "org.apache.cxf.ws.policy.EffectivePolicyImpl:void chooseAlternative(org.apache.cxf.ws.policy.PolicyEngineImpl,org.apache.cxf.ws.policy.Assertor)",
            "org.apache.cxf.ws.policy.EffectivePolicyImpl:void <clinit>()"
        ]
    },
    "org.apache.cxf.ws.policy.PolicyVerificationInFaultInterceptor:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.PolicyEngineImpl:void removeBusInterceptors()",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:void addBusInterceptors()",
            "org.apache.cxf.ws.policy.PolicyVerificationInFaultInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.policy.PolicyVerificationInFaultInterceptor:void <clinit>()"
        ]
    },
    "org.apache.cxf.ws.policy.AssertionBuilderRegistryImpl:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.AssertionBuilderRegistryImpl:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.policy.AssertionBuilderRegistryImpl:void <clinit>()"
        ]
    },
    "org.apache.cxf.ws.policy.ClientPolicyInFaultInterceptor:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.PolicyEngineImpl:void removeBusInterceptors()",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:void addBusInterceptors()",
            "org.apache.cxf.ws.policy.ClientPolicyInFaultInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.policy.ClientPolicyInFaultInterceptor:void <clinit>()"
        ]
    },
    "org.apache.cxf.ws.security.policy.model.AlgorithmSuite:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.policy.builders.AlgorithmSuiteBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.model.AlgorithmSuite:void setAlgorithmSuite(java.lang.String)",
            "org.apache.cxf.ws.security.policy.model.AlgorithmSuite:void <clinit>()",
            "org.apache.cxf.ws.security.trust.STSClient:boolean validateSecurityToken(org.apache.cxf.ws.security.tokenstore.SecurityToken,java.lang.String)",
            "org.apache.cxf.ws.security.trust.STSClient:void cancelSecurityToken(org.apache.cxf.ws.security.tokenstore.SecurityToken)"
        ]
    },
    "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor$STSInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor:void <clinit>()",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationTokenInterceptorProvider:void <init>()"
        ]
    },
    "org.apache.cxf.ws.security.policy.interceptors.SecureConversationTokenInterceptorProvider:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.policy.WSSecurityPolicyLoader:void registerProviders()",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor$SecureConversationCancelInterceptor:void doCancel(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.ws.security.policy.model.SecureConversationToken)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationOutInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationOutInterceptor:void renewToken(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.ws.security.tokenstore.SecurityToken,org.apache.cxf.ws.security.policy.model.SecureConversationToken)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationOutInterceptor:org.apache.cxf.ws.security.tokenstore.SecurityToken issueToken(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.ws.security.policy.model.SecureConversationToken)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor$STSInvoker:void doIssue(org.w3c.dom.Element,org.apache.cxf.message.Exchange,org.apache.cxf.staxutils.W3CDOMStreamWriter,java.lang.String,java.lang.String)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationInInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationTokenInterceptorProvider:java.lang.String setupClient(org.apache.cxf.ws.security.trust.STSClient,org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.ws.security.policy.model.SecureConversationToken,boolean)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationTokenInterceptorProvider:void <clinit>()"
        ]
    },
    "org.apache.cxf.ws.security.trust.STSClient:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.policy.interceptors.IssuedTokenInterceptorProvider:org.apache.cxf.ws.security.trust.STSClient getClient(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationTokenInterceptorProvider:org.apache.cxf.ws.security.trust.STSClient getClient(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.trust.STSClient:void cancelSecurityToken(org.apache.cxf.ws.security.tokenstore.SecurityToken)",
            "org.apache.cxf.ws.security.trust.STSClient:java.security.cert.X509Certificate getCert(org.apache.ws.security.components.crypto.Crypto)",
            "org.apache.cxf.ws.security.trust.STSClient:org.apache.cxf.ws.security.tokenstore.SecurityToken createSecurityToken(org.w3c.dom.Element,byte[])",
            "org.apache.cxf.ws.security.trust.STSClient:org.apache.ws.security.components.crypto.Crypto createCrypto(boolean)",
            "org.apache.cxf.ws.security.trust.STSClient:void <clinit>()"
        ]
    },
    "org.apache.cxf.ws.security.wss4j.WSS4JOutInterceptor:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.wss4j.WSS4JOutInterceptor:java.util.logging.Logger access$000()",
            "org.apache.cxf.ws.security.wss4j.WSS4JOutInterceptor:java.util.logging.Logger access$100()",
            "org.apache.cxf.ws.security.wss4j.WSS4JOutInterceptor:void <clinit>()",
            "org.apache.cxf.ws.security.wss4j.WSS4JOutInterceptor$WSS4JOutInterceptorInternal:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)"
        ]
    },
    "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void policyNotAsserted(org.apache.cxf.ws.policy.PolicyAssertion,java.lang.Exception)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void policyNotAsserted(org.apache.cxf.ws.policy.PolicyAssertion,java.lang.String)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void policyAsserted(org.apache.cxf.ws.policy.PolicyAssertion)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void setEncryptionUser(org.apache.ws.security.message.WSSecEncryptedKey,org.apache.cxf.ws.security.policy.model.TokenWrapper,boolean,org.apache.ws.security.components.crypto.Crypto)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:void <clinit>()"
        ]
    },
    "org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor:java.lang.String getAction(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.binding.soap.SoapVersion)",
            "org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor:org.apache.ws.security.WSSecurityEngine getSecurityEngine()",
            "org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor:org.apache.ws.security.WSSecurityEngine createSecurityEngine(java.util.Map)",
            "org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor:void <clinit>()"
        ]
    },
    "org.apache.cxf.ws.rm.AbstractRMInterceptor:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.AbstractRMInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.AbstractRMInterceptor:void <clinit>()",
            "org.apache.cxf.ws.rm.feature.RMFeature:void <init>()",
            "org.apache.cxf.ws.rm.policy.RMPolicyInterceptorProvider:void <init>(org.apache.cxf.Bus)",
            "org.apache.cxf.ws.rm.RMInInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.RMInInterceptor:void <clinit>()",
            "org.apache.cxf.ws.rm.RMOutInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.RMOutInterceptor:void addAcknowledgements(org.apache.cxf.ws.rm.Destination,org.apache.cxf.ws.rm.RMProperties,org.apache.cxf.ws.rm.Identifier,org.apache.cxf.ws.addressing.v200408.AttributedURI)",
            "org.apache.cxf.ws.rm.RMOutInterceptor:void <clinit>()"
        ]
    },
    "org.apache.cxf.ws.rm.Servant:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.Servant:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object)",
            "org.apache.cxf.ws.rm.Servant:org.apache.cxf.ws.rm.CreateSequenceResponseType createSequence(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.Servant:void createSequenceResponse(org.apache.cxf.ws.rm.CreateSequenceResponseType)",
            "org.apache.cxf.ws.rm.Servant:void terminateSequence(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.Servant:void <clinit>()",
            "org.apache.cxf.ws.rm.RMEndpoint:void <init>(org.apache.cxf.ws.rm.RMManager,org.apache.cxf.endpoint.Endpoint)"
        ]
    },
    "org.apache.cxf.ws.rm.DestinationSequence:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.Servant:org.apache.cxf.ws.rm.CreateSequenceResponseType createSequence(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.Servant:void createSequenceResponse(org.apache.cxf.ws.rm.CreateSequenceResponseType)",
            "org.apache.cxf.ws.rm.DestinationSequence$SequenceTermination:void run()",
            "org.apache.cxf.ws.rm.DestinationSequence:void acknowledge(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.DestinationSequence:void applyDeliveryAssurance(java.math.BigInteger)",
            "org.apache.cxf.ws.rm.DestinationSequence:void scheduleAcknowledgement(long)",
            "org.apache.cxf.ws.rm.DestinationSequence:void scheduleDeferredAcknowledgement(long)",
            "org.apache.cxf.ws.rm.DestinationSequence:java.util.logging.Logger access$000()",
            "org.apache.cxf.ws.rm.DestinationSequence:void <clinit>()",
            "org.apache.cxf.ws.rm.DestinationSequence$DeferredAcknowledgment:void run()",
            "org.apache.cxf.ws.rm.persistence.jdbc.RMTxStore:java.util.Collection getDestinationSequences(java.lang.String)"
        ]
    },
    "org.apache.cxf.ws.rm.SourceSequence:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.Servant:org.apache.cxf.ws.rm.CreateSequenceResponseType createSequence(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.Servant:void createSequenceResponse(org.apache.cxf.ws.rm.CreateSequenceResponseType)",
            "org.apache.cxf.ws.rm.SourceSequence:java.math.BigInteger nextMessageNumber(org.apache.cxf.ws.rm.Identifier,java.math.BigInteger,boolean)",
            "org.apache.cxf.ws.rm.SourceSequence:void checkLastMessage(org.apache.cxf.ws.rm.Identifier,java.math.BigInteger)",
            "org.apache.cxf.ws.rm.SourceSequence:void <clinit>()",
            "org.apache.cxf.ws.rm.persistence.jdbc.RMTxStore:java.util.Collection getSourceSequences(java.lang.String)"
        ]
    },
    "org.apache.cxf.ws.rm.RMInInterceptor:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.feature.RMFeature:void <init>()",
            "org.apache.cxf.ws.rm.policy.RMPolicyInterceptorProvider:void <init>(org.apache.cxf.Bus)",
            "org.apache.cxf.ws.rm.RMInInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.RMInInterceptor:void <clinit>()"
        ]
    },
    "org.apache.cxf.ws.rm.RetransmissionCallback:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.RetransmissionCallback:void onClose(org.apache.cxf.io.CachedOutputStream)",
            "org.apache.cxf.ws.rm.RetransmissionCallback:void <clinit>()",
            "org.apache.cxf.ws.rm.RetransmissionInterceptor:void handle(org.apache.cxf.message.Message,boolean)"
        ]
    },
    "org.apache.cxf.ws.rm.RMOutInterceptor:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.feature.RMFeature:void <init>()",
            "org.apache.cxf.ws.rm.policy.RMPolicyInterceptorProvider:void <init>(org.apache.cxf.Bus)",
            "org.apache.cxf.ws.rm.RMOutInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.RMOutInterceptor:void addAcknowledgements(org.apache.cxf.ws.rm.Destination,org.apache.cxf.ws.rm.RMProperties,org.apache.cxf.ws.rm.Identifier,org.apache.cxf.ws.addressing.v200408.AttributedURI)",
            "org.apache.cxf.ws.rm.RMOutInterceptor:void <clinit>()"
        ]
    },
    "org.apache.cxf.ws.rm.RMManager:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.RMManager:void clientCreated(org.apache.cxf.endpoint.Client)",
            "org.apache.cxf.ws.rm.RMManager:org.apache.cxf.ws.rm.RMEndpoint getReliableEndpoint(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.RMManager:void shutdown()",
            "org.apache.cxf.ws.rm.RMManager:void recoverReliableEndpoint(org.apache.cxf.endpoint.Endpoint,org.apache.cxf.transport.Conduit)",
            "org.apache.cxf.ws.rm.RMManager:void <clinit>()"
        ]
    },
    "org.apache.cxf.ws.rm.Proxy:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.Proxy$RMClient:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.Proxy:void acknowledge(org.apache.cxf.ws.rm.DestinationSequence)",
            "org.apache.cxf.ws.rm.Proxy:void createSequenceResponse(org.apache.cxf.ws.rm.CreateSequenceResponseType)",
            "org.apache.cxf.ws.rm.Proxy:org.apache.cxf.ws.rm.CreateSequenceResponseType createSequence(org.apache.cxf.ws.addressing.v200408.EndpointReferenceType,org.apache.cxf.ws.addressing.RelatesToType,boolean)",
            "org.apache.cxf.ws.rm.Proxy:void lastMessage(org.apache.cxf.ws.rm.SourceSequence)",
            "org.apache.cxf.ws.rm.Proxy:void ackRequested(org.apache.cxf.ws.rm.SourceSequence)",
            "org.apache.cxf.ws.rm.Proxy:java.lang.Object invoke(org.apache.cxf.service.model.OperationInfo,java.lang.Object[],java.util.Map)",
            "org.apache.cxf.ws.rm.Proxy:void <clinit>()",
            "org.apache.cxf.ws.rm.RMEndpoint:void <init>(org.apache.cxf.ws.rm.RMManager,org.apache.cxf.endpoint.Endpoint)"
        ]
    },
    "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.RMManager:void initialise()",
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl$2:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl$3:void resend(org.apache.cxf.message.Message,boolean)",
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl$ResendCandidate:void <init>(org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl$ResendCandidate:void initiate(boolean)",
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl$ResendCandidate:void run()",
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl$ResendCandidate:void schedule()",
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl:void purgeAcknowledged(org.apache.cxf.ws.rm.SourceSequence)",
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl:void start()",
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl:void stop(org.apache.cxf.ws.rm.SourceSequence)",
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl:org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl$ResendCandidate cacheUnacknowledged(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl:void serverResend(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl:void resend(org.apache.cxf.transport.Conduit,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl:java.util.logging.Logger access$000()",
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl:void <clinit>()"
        ]
    },
    "org.apache.cxf.ws.rm.soap.SoapFaultFactory:org.apache.cxf.interceptor.Fault createSoap12Fault(org.apache.cxf.ws.rm.SequenceFault)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.soap.SoapFaultFactory:org.apache.cxf.interceptor.Fault createFault(org.apache.cxf.ws.rm.SequenceFault)"
        ]
    },
    "org.apache.cxf.ws.rm.soap.SoapFaultFactory:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.RMManager:org.apache.cxf.ws.rm.BindingFaultFactory getBindingFaultFactory(org.apache.cxf.binding.Binding)",
            "org.apache.cxf.ws.rm.soap.SoapFaultFactory:org.apache.cxf.interceptor.Fault createSoap12Fault(org.apache.cxf.ws.rm.SequenceFault)",
            "org.apache.cxf.ws.rm.soap.SoapFaultFactory:void setDetail(org.apache.cxf.binding.soap.SoapFault,java.lang.Object)",
            "org.apache.cxf.ws.rm.soap.SoapFaultFactory:java.lang.String toString(org.apache.cxf.interceptor.Fault)",
            "org.apache.cxf.ws.rm.soap.SoapFaultFactory:void <clinit>()"
        ]
    },
    "org.apache.cxf.ws.rm.soap.RMSoapInterceptor:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.feature.RMFeature:void <init>()",
            "org.apache.cxf.ws.rm.policy.RMPolicyInterceptorProvider:void <init>(org.apache.cxf.Bus)",
            "org.apache.cxf.ws.rm.soap.RMSoapInterceptor:void encode(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.rm.soap.RMSoapInterceptor:void encode(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.rm.RMProperties)",
            "org.apache.cxf.ws.rm.soap.RMSoapInterceptor:void encodeFault(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.rm.SequenceFault)",
            "org.apache.cxf.ws.rm.soap.RMSoapInterceptor:org.apache.cxf.ws.rm.RMProperties unmarshalRMProperties(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.rm.soap.RMSoapInterceptor:javax.xml.bind.JAXBContext getJAXBContext()",
            "org.apache.cxf.ws.rm.soap.RMSoapInterceptor:void encodeProperty(java.lang.Object,javax.xml.namespace.QName,java.lang.Class,org.w3c.dom.Element,javax.xml.bind.Marshaller)",
            "org.apache.cxf.ws.rm.soap.RMSoapInterceptor:java.lang.Object decodeProperty(java.lang.Class,org.w3c.dom.Element,javax.xml.bind.Unmarshaller)",
            "org.apache.cxf.ws.rm.soap.RMSoapInterceptor:void updateServiceModelInfo(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.rm.soap.RMSoapInterceptor:void <clinit>()"
        ]
    },
    "org.apache.cxf.ws.rm.SequenceMonitor:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.DestinationSequence:void <init>(org.apache.cxf.ws.rm.Identifier,org.apache.cxf.ws.addressing.v200408.EndpointReferenceType,java.math.BigInteger,org.apache.cxf.ws.rm.SequenceAcknowledgement)",
            "org.apache.cxf.ws.rm.SequenceMonitor:void setMonitorInterval(long)",
            "org.apache.cxf.ws.rm.SequenceMonitor:void <clinit>()"
        ]
    },
    "org.apache.cxf.ws.rm.RMEndpoint:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.RMManager:org.apache.cxf.ws.rm.RMEndpoint createReliableEndpoint(org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.ws.rm.RMEndpoint:org.apache.cxf.service.model.BindingInfo getBindingInfo()",
            "org.apache.cxf.ws.rm.RMEndpoint:void createService()",
            "org.apache.cxf.ws.rm.RMEndpoint:javax.xml.validation.Schema getSchema()",
            "org.apache.cxf.ws.rm.RMEndpoint:void createEndpoint()",
            "org.apache.cxf.ws.rm.RMEndpoint:void buildInterfaceInfo(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.ws.rm.RMEndpoint:void buildCreateSequenceOperationInfo(org.apache.cxf.service.model.InterfaceInfo)",
            "org.apache.cxf.ws.rm.RMEndpoint:void buildTerminateSequenceOperationInfo(org.apache.cxf.service.model.InterfaceInfo)",
            "org.apache.cxf.ws.rm.RMEndpoint:void buildBindingInfo(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.ws.rm.RMEndpoint:void shutdown()",
            "org.apache.cxf.ws.rm.RMEndpoint:void <clinit>()"
        ]
    },
    "org.apache.cxf.ws.rm.persistence.jdbc.RMTxStore:void abort()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.persistence.jdbc.RMTxStore:void createDestinationSequence(org.apache.cxf.ws.rm.DestinationSequence)",
            "org.apache.cxf.ws.rm.persistence.jdbc.RMTxStore:void createSourceSequence(org.apache.cxf.ws.rm.SourceSequence)",
            "org.apache.cxf.ws.rm.persistence.jdbc.RMTxStore:void removeDestinationSequence(org.apache.cxf.ws.rm.Identifier)",
            "org.apache.cxf.ws.rm.persistence.jdbc.RMTxStore:void removeSourceSequence(org.apache.cxf.ws.rm.Identifier)",
            "org.apache.cxf.ws.rm.persistence.jdbc.RMTxStore:void persistIncoming(org.apache.cxf.ws.rm.DestinationSequence,org.apache.cxf.ws.rm.persistence.RMMessage)",
            "org.apache.cxf.ws.rm.persistence.jdbc.RMTxStore:void persistOutgoing(org.apache.cxf.ws.rm.SourceSequence,org.apache.cxf.ws.rm.persistence.RMMessage)",
            "org.apache.cxf.ws.rm.persistence.jdbc.RMTxStore:void removeMessages(org.apache.cxf.ws.rm.Identifier,java.util.Collection,boolean)"
        ]
    },
    "org.apache.cxf.ws.rm.persistence.jdbc.RMTxStore:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.persistence.jdbc.RMTxStore:void createDestinationSequence(org.apache.cxf.ws.rm.DestinationSequence)",
            "org.apache.cxf.ws.rm.persistence.jdbc.RMTxStore:void createSourceSequence(org.apache.cxf.ws.rm.SourceSequence)",
            "org.apache.cxf.ws.rm.persistence.jdbc.RMTxStore:java.util.Collection getDestinationSequences(java.lang.String)",
            "org.apache.cxf.ws.rm.persistence.jdbc.RMTxStore:java.util.Collection getSourceSequences(java.lang.String)",
            "org.apache.cxf.ws.rm.persistence.jdbc.RMTxStore:java.util.Collection getMessages(org.apache.cxf.ws.rm.Identifier,boolean)",
            "org.apache.cxf.ws.rm.persistence.jdbc.RMTxStore:void abort()",
            "org.apache.cxf.ws.rm.persistence.jdbc.RMTxStore:void storeMessage(org.apache.cxf.ws.rm.Identifier,org.apache.cxf.ws.rm.persistence.RMMessage,boolean)",
            "org.apache.cxf.ws.rm.persistence.jdbc.RMTxStore:void createTables()",
            "org.apache.cxf.ws.rm.persistence.jdbc.RMTxStore:void init()",
            "org.apache.cxf.ws.rm.persistence.jdbc.RMTxStore:void deleteDatabaseFiles()",
            "org.apache.cxf.ws.rm.persistence.jdbc.RMTxStore:void deleteDatabaseFiles(java.lang.String,boolean)",
            "org.apache.cxf.ws.rm.persistence.jdbc.RMTxStore:void recursiveDelete(java.io.File,boolean)",
            "org.apache.cxf.ws.rm.persistence.jdbc.RMTxStore:void <clinit>()"
        ]
    },
    "org.apache.cxf.phase.PhaseInterceptorChain:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:org.apache.cxf.interceptor.InterceptorChain getOutInterceptorChain(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.MultipleEndpointObserver:org.apache.cxf.phase.PhaseInterceptorChain createChain()",
            "org.apache.cxf.phase.PhaseInterceptorChain:org.apache.cxf.message.Message getCurrentMessage()",
            "org.apache.cxf.phase.PhaseInterceptorChain:org.apache.cxf.phase.PhaseInterceptorChain cloneChain()",
            "org.apache.cxf.phase.PhaseInterceptorChain:void add(org.apache.cxf.interceptor.Interceptor,boolean)",
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void unwind(org.apache.cxf.message.Message)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void outputChainToLog(boolean)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void <clinit>()",
            "org.apache.cxf.phase.PhaseChainCache:org.apache.cxf.phase.PhaseInterceptorChain getChain(java.util.SortedSet,java.util.List[])"
        ]
    },
    "org.apache.cxf.workqueue.WorkQueueManagerImpl:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.workqueue.WorkQueueManagerImpl:void register()",
            "org.apache.cxf.workqueue.WorkQueueManagerImpl:void run()",
            "org.apache.cxf.workqueue.WorkQueueManagerImpl:void <clinit>()"
        ]
    },
    "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.workqueue.WorkQueueManagerImpl:org.apache.cxf.workqueue.AutomaticWorkQueue createAutomaticWorkQueue()",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void <init>(int,int,int,int,long,java.lang.String)",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void register()",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void <clinit>()"
        ]
    },
    "org.apache.cxf.databinding.source.XMLStreamDataWriter:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.source.XMLStreamDataWriter:void write(java.lang.Object,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.databinding.source.XMLStreamDataWriter:void <clinit>()",
            "org.apache.cxf.databinding.source.SourceDataBinding:void <init>()"
        ]
    },
    "org.apache.cxf.databinding.source.XMLStreamDataReader:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.source.XMLStreamDataReader:java.lang.Object read(javax.xml.namespace.QName,javax.xml.stream.XMLStreamReader,java.lang.Class)",
            "org.apache.cxf.databinding.source.XMLStreamDataReader:java.lang.Object read(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.databinding.source.XMLStreamDataReader:void <clinit>()",
            "org.apache.cxf.databinding.source.SourceDataBinding:void <init>()"
        ]
    },
    "org.apache.cxf.databinding.source.NodeDataReader:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.source.NodeDataReader:java.lang.Object read(javax.xml.namespace.QName,org.w3c.dom.Node,java.lang.Class)",
            "org.apache.cxf.databinding.source.NodeDataReader:void <clinit>()",
            "org.apache.cxf.databinding.source.SourceDataBinding:void <init>()"
        ]
    },
    "org.apache.cxf.databinding.source.NodeDataWriter:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.source.NodeDataWriter:void write(java.lang.Object,org.w3c.dom.Node)",
            "org.apache.cxf.databinding.source.NodeDataWriter:void <clinit>()",
            "org.apache.cxf.databinding.source.SourceDataBinding:void <init>()"
        ]
    },
    "org.apache.cxf.databinding.stax.StaxDataBinding$XMLStreamDataWriter:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.stax.StaxDataBinding:void <init>()",
            "org.apache.cxf.databinding.stax.StaxDataBinding$XMLStreamDataWriter:void write(java.lang.Object,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.databinding.stax.StaxDataBinding$XMLStreamDataWriter:void <clinit>()"
        ]
    },
    "org.apache.cxf.databinding.stax.StaxDataBindingInterceptor:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.stax.StaxDataBindingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.databinding.stax.StaxDataBindingInterceptor:void <clinit>()",
            "org.apache.cxf.databinding.stax.StaxDataBindingFeature:void removeDatabindingInterceptor(java.util.List)"
        ]
    },
    "org.apache.cxf.wsdl.JAXBExtensionHelper:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl.JAXBExtensionHelper:void addExtensions(javax.wsdl.extensions.ExtensionRegistry,java.lang.String,java.lang.String)",
            "org.apache.cxf.wsdl.JAXBExtensionHelper:void addExtensions(javax.wsdl.extensions.ExtensionRegistry,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.wsdl.JAXBExtensionHelper:void addExtensions(javax.wsdl.extensions.ExtensionRegistry,java.lang.Class,java.lang.Class)",
            "org.apache.cxf.wsdl.JAXBExtensionHelper:void addExtensions(javax.wsdl.extensions.ExtensionRegistry,java.lang.Class,java.lang.Class,java.lang.String)",
            "org.apache.cxf.wsdl.JAXBExtensionHelper:void <clinit>()",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void registerInitialExtensions(java.lang.String)"
        ]
    },
    "org.apache.cxf.wsdl.EndpointReferenceUtils:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:void setSchemaInMessage(org.apache.cxf.service.Service,org.apache.cxf.message.Message,org.apache.cxf.databinding.DataReader)",
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:void setSchemaOutMessage(org.apache.cxf.service.Service,org.apache.cxf.message.Message,org.apache.cxf.databinding.DataWriter)",
            "org.apache.cxf.transport.AbstractDestination$AbstractBackChannelConduit:void <init>(org.apache.cxf.transport.AbstractDestination)",
            "org.apache.cxf.transport.http.HTTPConduit:void setUpDecoupledDestination()",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:org.apache.cxf.ws.addressing.EndpointReferenceType getAddressWithId(java.lang.String)",
            "org.apache.cxf.transport.AbstractMultiplexDestination:org.apache.cxf.ws.addressing.EndpointReferenceType getAddressWithId(java.lang.String)",
            "org.apache.cxf.transport.AbstractObservable:org.apache.cxf.ws.addressing.EndpointReferenceType getTargetReference(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)",
            "org.apache.cxf.transport.jms.JMSDestination:org.apache.cxf.transport.Conduit getInbuiltBackChannel(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.addressing.ContextUtils:void ensurePartialResponseMAPs(org.apache.cxf.message.Message,java.lang.String)",
            "org.apache.cxf.ws.addressing.ContextUtils:void <clinit>()",
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.v200408.EndpointReferenceType convert(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.v200403.EndpointReferenceType convertTo200403(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.EndpointReferenceType convert(org.apache.cxf.ws.addressing.v200408.EndpointReferenceType)",
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.EndpointReferenceType convert(org.apache.cxf.ws.addressing.v200403.EndpointReferenceType)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:org.apache.cxf.ws.addressing.AddressingProperties unmarshalMAPs(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils$SchemaLSResourceResolver:org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.transform.Transformer getTransformer()",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:void setServiceAndPortName(org.apache.cxf.ws.addressing.EndpointReferenceType,javax.xml.namespace.QName,java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.bind.JAXBElement getServiceNameType(javax.xml.namespace.QName,java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.namespace.QName getServiceName(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.namespace.QName getPortQName(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:void setInterfaceName(org.apache.cxf.ws.addressing.EndpointReferenceType,javax.xml.namespace.QName)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.namespace.QName getInterfaceName(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:java.lang.String findNamespaceHack(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:void setWSDLLocation(org.apache.cxf.ws.addressing.EndpointReferenceType,java.lang.String[])",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:java.lang.String getWSDLLocation(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:void setMetadata(org.apache.cxf.ws.addressing.EndpointReferenceType,java.util.List)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.wsdl.Definition getWSDLDefinition(org.apache.cxf.wsdl.WSDLManager,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.validation.Schema createSchema(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.validation.Schema getSchema(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.wsdl.Port getPort(org.apache.cxf.wsdl.WSDLManager,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:void setAddress(org.apache.cxf.ws.addressing.EndpointReferenceType,java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:org.apache.cxf.ws.addressing.EndpointReferenceType getEndpointReference(java.net.URL,javax.xml.namespace.QName,java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:org.apache.cxf.ws.addressing.EndpointReferenceType duplicate(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:org.apache.cxf.ws.addressing.EndpointReferenceType getEndpointReference(java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:org.apache.cxf.ws.addressing.EndpointReferenceType getEndpointReference(org.apache.cxf.ws.addressing.AttributedURIType)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:org.apache.cxf.ws.addressing.EndpointReferenceType getAnonymousEndpointReference()",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:org.apache.cxf.ws.addressing.EndpointReferenceType getEndpointReferenceWithId(javax.xml.namespace.QName,java.lang.String,java.lang.String,org.apache.cxf.Bus)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.transform.Source convertToXML(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:org.apache.cxf.transport.MultiplexDestination getMatchingMultiplexDestination(javax.xml.namespace.QName,java.lang.String,org.apache.cxf.Bus)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:java.util.logging.Logger access$000()",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:void <clinit>()",
            "org.apache.cxf.service.model.EndpointInfo:void setAddress(java.lang.String)",
            "org.apache.cxf.jaxws.ServiceImpl:java.lang.Object getPort(org.apache.cxf.ws.addressing.EndpointReferenceType,java.lang.Class,javax.xml.ws.WebServiceFeature[])",
            "org.apache.cxf.jaxws.ServiceImpl:javax.xml.ws.Dispatch createDispatch(javax.xml.ws.EndpointReference,java.lang.Class,javax.xml.ws.Service$Mode,javax.xml.ws.WebServiceFeature[])",
            "org.apache.cxf.jaxws.ServiceImpl:javax.xml.ws.Dispatch createDispatch(javax.xml.ws.EndpointReference,javax.xml.bind.JAXBContext,javax.xml.ws.Service$Mode,javax.xml.ws.WebServiceFeature[])"
        ]
    },
    "org.apache.cxf.service.invoker.AbstractInvoker:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.invoker.FactoryInvoker:java.lang.Object getServiceObject(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.service.invoker.FactoryInvoker:void <clinit>()",
            "org.apache.cxf.service.invoker.AbstractInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object)",
            "org.apache.cxf.service.invoker.AbstractInvoker:void checkSuspendedInvocation(org.apache.cxf.message.Exchange,java.lang.Object,java.lang.reflect.Method,java.util.List,java.lang.Throwable)",
            "org.apache.cxf.service.invoker.AbstractInvoker:org.apache.cxf.interceptor.Fault createFault(java.lang.Throwable,java.lang.reflect.Method,java.util.List,boolean)",
            "org.apache.cxf.service.invoker.AbstractInvoker:java.lang.Object performInvocation(org.apache.cxf.message.Exchange,java.lang.Object,java.lang.reflect.Method,java.lang.Object[])",
            "org.apache.cxf.service.invoker.AbstractInvoker:java.lang.reflect.Method matchMethod(java.lang.reflect.Method,java.lang.Object)",
            "org.apache.cxf.service.invoker.AbstractInvoker:void <clinit>()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.invoker.Invoker createInvoker()",
            "org.apache.cxf.frontend.ServerFactoryBean:org.apache.cxf.service.invoker.Invoker createInvoker()"
        ]
    },
    "org.apache.cxf.service.model.InterfaceInfo:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.trust.STSUtils:org.apache.cxf.endpoint.Endpoint createSTSEndpoint(org.apache.cxf.Bus,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.neethi.Policy,javax.xml.namespace.QName)",
            "org.apache.cxf.ws.rm.RMEndpoint:void buildInterfaceInfo(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.service.model.InterfaceInfo:org.apache.cxf.service.model.OperationInfo addOperation(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.InterfaceInfo:void <clinit>()",
            "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.InterfaceInfo createInterface(javax.xml.namespace.QName)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.InterfaceInfo createInterface(org.apache.cxf.service.model.ServiceInfo)"
        ]
    },
    "org.apache.cxf.service.model.BindingInfo:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.model.BindingInfo:void addOperation(org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.service.model.BindingInfo:void removeOperation(org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.service.model.BindingInfo:void <clinit>()",
            "org.apache.cxf.binding.AbstractBindingFactory:org.apache.cxf.service.model.BindingInfo createBindingInfo(org.apache.cxf.service.model.ServiceInfo,java.lang.String,java.lang.Object)",
            "org.apache.cxf.binding.xml.XMLBindingFactory:org.apache.cxf.service.model.BindingInfo createBindingInfo(org.apache.cxf.service.model.ServiceInfo,java.lang.String,java.lang.Object)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.BindingInfo buildBinding(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding)"
        ]
    },
    "org.apache.cxf.service.model.OperationInfo:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.model.InterfaceInfo:org.apache.cxf.service.model.OperationInfo addOperation(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.OperationInfo:org.apache.cxf.service.model.FaultInfo addFault(javax.xml.namespace.QName,javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.OperationInfo:boolean equals(java.lang.Object)",
            "org.apache.cxf.service.model.OperationInfo:void <clinit>()"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean$1:boolean handleError(org.w3c.dom.DOMError)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void fillInSchemaCrossreferences()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromWSDL(java.lang.String)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromClass()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void validateServiceModel()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void validateSchemas(org.apache.cxf.common.xmlschema.XmlSchemaValidationManager,org.apache.cxf.common.xmlschema.SchemaCollection)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.model.InterfaceInfo getInterfaceInfo()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeWSDLOperations()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeWSDLOperation(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void checkForElement(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createBareMessage(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.OperationInfo,boolean)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.Class createArrayClass(java.lang.reflect.GenericArrayType)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.Class getClass(java.lang.reflect.Type)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeParameter(org.apache.cxf.service.model.MessagePartInfo,java.lang.Class,java.lang.reflect.Type)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void checkServiceClassAnnotations(java.lang.Class)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.String getWsdlURL()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.util.logging.Logger access$000()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void <clinit>()",
            "org.apache.cxf.frontend.ClientFactoryBean:void <init>()",
            "org.apache.cxf.frontend.ServerFactoryBean:void <init>()",
            "org.apache.cxf.simple.SimpleServiceBuilder:void <init>()",
            "org.apache.cxf.jaxws.JaxwsServiceBuilder:void <init>()",
            "org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean:void initializeWSDLOperationsForProvider()",
            "org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean:void <clinit>()",
            "org.apache.cxf.jaxws.ServiceImpl:org.apache.cxf.service.factory.AbstractServiceFactoryBean createDispatchService(org.apache.cxf.databinding.DataBinding)",
            "org.apache.cxf.jaxws.JaxWsServerFactoryBean:void <init>()",
            "org.apache.cxf.jaxws.JaxWsClientFactoryBean:void <init>()"
        ]
    },
    "org.apache.cxf.binding.soap.interceptor.ReadHeadersInterceptor:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.soap.SoapBindingFactory:org.apache.cxf.binding.Binding createBinding(org.apache.cxf.service.model.BindingInfo)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:void addListener(org.apache.cxf.transport.Destination,org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.binding.soap.interceptor.ReadHeadersInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.ReadHeadersInterceptor:void <clinit>()"
        ]
    },
    "org.apache.cxf.binding.soap.interceptor.RPCOutInterceptor:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.soap.SoapBindingFactory:org.apache.cxf.binding.Binding createBinding(org.apache.cxf.service.model.BindingInfo)",
            "org.apache.cxf.binding.soap.interceptor.RPCOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.soap.interceptor.RPCOutInterceptor:void <clinit>()"
        ]
    },
    "org.apache.cxf.binding.soap.interceptor.Soap12FaultOutInterceptor:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.soap.SoapBindingFactory:org.apache.cxf.binding.Binding createBinding(org.apache.cxf.service.model.BindingInfo)",
            "org.apache.cxf.binding.soap.interceptor.Soap12FaultOutInterceptor$Soap12FaultOutInterceptorInternal:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.Soap12FaultOutInterceptor$Soap12FaultOutInterceptorInternal:java.lang.String getLangCode()",
            "org.apache.cxf.binding.soap.interceptor.Soap12FaultOutInterceptor:java.util.logging.Logger access$000()",
            "org.apache.cxf.binding.soap.interceptor.Soap12FaultOutInterceptor:void <clinit>()"
        ]
    },
    "org.apache.cxf.binding.soap.interceptor.CheckFaultInterceptor:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.soap.SoapBindingFactory:org.apache.cxf.binding.Binding createBinding(org.apache.cxf.service.model.BindingInfo)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:void addListener(org.apache.cxf.transport.Destination,org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.binding.soap.interceptor.CheckFaultInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.CheckFaultInterceptor:void <clinit>()"
        ]
    },
    "org.apache.cxf.binding.soap.interceptor.RPCInInterceptor:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.soap.SoapBindingFactory:org.apache.cxf.binding.Binding createBinding(org.apache.cxf.service.model.BindingInfo)",
            "org.apache.cxf.binding.soap.interceptor.RPCInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.soap.interceptor.RPCInInterceptor:void <clinit>()"
        ]
    },
    "org.apache.cxf.binding.soap.interceptor.MustUnderstandInterceptor:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.soap.SoapBindingFactory:org.apache.cxf.binding.Binding createBinding(org.apache.cxf.service.model.BindingInfo)",
            "org.apache.cxf.binding.soap.interceptor.MustUnderstandInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.MustUnderstandInterceptor:java.util.ResourceBundle access$000()",
            "org.apache.cxf.binding.soap.interceptor.MustUnderstandInterceptor:void <clinit>()",
            "org.apache.cxf.binding.soap.interceptor.MustUnderstandInterceptor$UltimateReceiverMustUnderstandInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)"
        ]
    },
    "org.apache.cxf.binding.xml.interceptor.XMLMessageInInterceptor:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.xml.interceptor.XMLMessageInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.binding.xml.interceptor.XMLMessageInInterceptor:org.apache.cxf.service.model.BindingOperationInfo getBindingOperationInfo(boolean,javax.xml.namespace.QName,org.apache.cxf.service.model.BindingInfo,javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.binding.xml.interceptor.XMLMessageInInterceptor:void <clinit>()",
            "org.apache.cxf.binding.xml.XMLBindingFactory:org.apache.cxf.binding.Binding createBinding(org.apache.cxf.service.model.BindingInfo)"
        ]
    },
    "org.apache.cxf.clustering.AbstractStaticFailoverStrategy:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.clustering.AbstractStaticFailoverStrategy:java.util.List getAlternateEndpoints(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.clustering.AbstractStaticFailoverStrategy:org.apache.cxf.endpoint.Endpoint selectAlternateEndpoint(java.util.List)",
            "org.apache.cxf.clustering.AbstractStaticFailoverStrategy:void <clinit>()"
        ]
    },
    "org.apache.cxf.clustering.FailoverTargetSelector:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.clustering.FailoverTargetSelector:java.util.logging.Logger getLogger()",
            "org.apache.cxf.clustering.FailoverTargetSelector:void <clinit>()",
            "org.apache.cxf.clustering.FailoverFeature:void initialize(org.apache.cxf.endpoint.Client,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.tools.common.dom.ExtendedDocumentBuilder:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.tools.common.dom.ExtendedDocumentBuilder:void setValidating(boolean)",
            "org.apache.cxf.tools.common.dom.ExtendedDocumentBuilder:javax.xml.parsers.DocumentBuilder getParser()",
            "org.apache.cxf.tools.common.dom.ExtendedDocumentBuilder:org.w3c.dom.Document parse(java.io.InputStream)",
            "org.apache.cxf.tools.common.dom.ExtendedDocumentBuilder:void <clinit>()",
            "org.apache.cxf.tools.common.toolspec.ToolSpec:void <init>()",
            "org.apache.cxf.tools.common.toolspec.ToolSpec:void <init>(java.io.InputStream,boolean)",
            "org.apache.cxf.tools.common.toolspec.ToolSpec:void <init>(org.w3c.dom.Document)"
        ]
    },
    "org.apache.cxf.tools.common.dom.SchemaValidatingSAXParser:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.tools.common.dom.SchemaValidatingSAXParser:void <init>()",
            "org.apache.cxf.tools.common.dom.SchemaValidatingSAXParser:void setValidating(boolean)",
            "org.apache.cxf.tools.common.dom.SchemaValidatingSAXParser:void <clinit>()"
        ]
    },
    "org.apache.cxf.tools.common.AbstractCXFToolContainer:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.tools.common.AbstractCXFToolContainer:void <clinit>()"
        ]
    },
    "org.apache.cxf.tools.common.ClassUtils:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.tools.common.ClassUtils:void compile(org.apache.cxf.tools.common.ToolContext)",
            "org.apache.cxf.tools.common.ClassUtils:void copyXmlFile(java.io.File,java.io.File)",
            "org.apache.cxf.tools.common.ClassUtils:void <clinit>()"
        ]
    },
    "org.apache.cxf.tools.common.VelocityGenerator:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.tools.common.VelocityGenerator:void initVelocity(boolean)",
            "org.apache.cxf.tools.common.VelocityGenerator:void doWrite(java.lang.String,java.io.Writer)",
            "org.apache.cxf.tools.common.VelocityGenerator:java.io.File parseOutputName(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.tools.common.VelocityGenerator:void <clinit>()"
        ]
    },
    "org.apache.cxf.tools.common.toolspec.ToolSpec:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.tools.common.toolspec.ToolSpec:void <init>(java.io.InputStream,boolean)",
            "org.apache.cxf.tools.common.toolspec.ToolSpec:org.apache.cxf.tools.common.toolspec.Tool getHandler()",
            "org.apache.cxf.tools.common.toolspec.ToolSpec:org.apache.cxf.tools.common.toolspec.Tool getHandler(java.lang.ClassLoader)",
            "org.apache.cxf.tools.common.toolspec.ToolSpec:java.lang.String getParameterDefault(java.lang.String)",
            "org.apache.cxf.tools.common.toolspec.ToolSpec:void <clinit>()",
            "org.apache.cxf.tools.common.toolspec.ToolRunner:void runTool(java.lang.Class,java.io.InputStream,boolean,java.lang.String[],boolean,org.apache.cxf.tools.common.ToolContext)"
        ]
    },
    "org.apache.cxf.tools.common.toolspec.ToolSupport:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.tools.common.toolspec.ToolSupport:void init()",
            "org.apache.cxf.tools.common.toolspec.ToolSupport:void performFunction()",
            "org.apache.cxf.tools.common.toolspec.ToolSupport:void destroy()",
            "org.apache.cxf.tools.common.toolspec.ToolSupport:void <clinit>()"
        ]
    },
    "org.apache.cxf.tools.common.toolspec.parser.CommandDocument:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.tools.common.toolspec.parser.CommandDocument:java.lang.String getParameter(java.lang.String)",
            "org.apache.cxf.tools.common.toolspec.parser.CommandDocument:java.lang.String[] getParameters(java.lang.String)",
            "org.apache.cxf.tools.common.toolspec.parser.CommandDocument:void <clinit>()",
            "org.apache.cxf.tools.common.toolspec.parser.CommandLineParser:org.apache.cxf.tools.common.toolspec.parser.CommandDocument parseArguments(java.lang.String[])"
        ]
    },
    "org.apache.cxf.tools.common.toolspec.parser.TokenInputStream:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.tools.common.toolspec.parser.TokenInputStream:java.lang.String read()",
            "org.apache.cxf.tools.common.toolspec.parser.TokenInputStream:java.lang.String peek()",
            "org.apache.cxf.tools.common.toolspec.parser.TokenInputStream:void <clinit>()",
            "org.apache.cxf.tools.common.toolspec.parser.CommandLineParser:org.apache.cxf.tools.common.toolspec.parser.CommandDocument parseArguments(java.lang.String[])"
        ]
    },
    "org.apache.cxf.tools.common.toolspec.parser.Form:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.tools.common.toolspec.parser.Form:boolean accept(org.apache.cxf.tools.common.toolspec.parser.TokenInputStream,org.w3c.dom.Element,org.apache.cxf.tools.common.toolspec.parser.ErrorVisitor)",
            "org.apache.cxf.tools.common.toolspec.parser.Form:void <clinit>()",
            "org.apache.cxf.tools.common.toolspec.parser.CommandLineParser:org.apache.cxf.tools.common.toolspec.parser.CommandDocument parseArguments(java.lang.String[])"
        ]
    },
    "org.apache.cxf.tools.common.toolspec.parser.Option:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.tools.common.toolspec.parser.Form:void getOptions(org.w3c.dom.Element)",
            "org.apache.cxf.tools.common.toolspec.parser.Option:boolean accept(org.apache.cxf.tools.common.toolspec.parser.TokenInputStream,org.w3c.dom.Element,org.apache.cxf.tools.common.toolspec.parser.ErrorVisitor)",
            "org.apache.cxf.tools.common.toolspec.parser.Option:boolean isSatisfied(org.apache.cxf.tools.common.toolspec.parser.ErrorVisitor)",
            "org.apache.cxf.tools.common.toolspec.parser.Option:void <clinit>()",
            "org.apache.cxf.tools.common.toolspec.parser.OptionGroup:void <init>(org.w3c.dom.Element)"
        ]
    },
    "org.apache.cxf.tools.common.toolspec.parser.OptionGroup:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.tools.common.toolspec.parser.Form:void <init>(org.w3c.dom.Element)",
            "org.apache.cxf.tools.common.toolspec.parser.OptionGroup:boolean accept(org.apache.cxf.tools.common.toolspec.parser.TokenInputStream,org.w3c.dom.Element,org.apache.cxf.tools.common.toolspec.parser.ErrorVisitor)",
            "org.apache.cxf.tools.common.toolspec.parser.OptionGroup:void <clinit>()"
        ]
    },
    "org.apache.cxf.tools.common.toolspec.parser.ErrorVisitor:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.tools.common.AbstractCXFToolContainer:void <init>(java.lang.String,org.apache.cxf.tools.common.toolspec.ToolSpec)",
            "org.apache.cxf.tools.common.toolspec.parser.ErrorVisitor:void add(org.apache.cxf.tools.common.toolspec.parser.CommandLineError)",
            "org.apache.cxf.tools.common.toolspec.parser.ErrorVisitor:void <clinit>()",
            "org.apache.cxf.tools.common.toolspec.parser.CommandLineParser:org.apache.cxf.tools.common.toolspec.parser.CommandDocument parseArguments(java.lang.String[])"
        ]
    },
    "org.apache.cxf.tools.common.toolspec.parser.CommandLineParser:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.tools.common.toolspec.parser.CommandLineParser:org.apache.cxf.tools.common.toolspec.parser.CommandDocument parseArguments(java.lang.String)",
            "org.apache.cxf.tools.common.toolspec.parser.CommandLineParser:org.apache.cxf.tools.common.toolspec.parser.CommandDocument parseArguments(java.lang.String[])",
            "org.apache.cxf.tools.common.toolspec.parser.CommandLineParser:void throwUsage(org.apache.cxf.tools.common.toolspec.parser.ErrorVisitor)",
            "org.apache.cxf.tools.common.toolspec.parser.CommandLineParser:void <clinit>()",
            "org.apache.cxf.tools.common.toolspec.AbstractToolContainer:void parseCommandLine()"
        ]
    },
    "org.apache.cxf.tools.common.toolspec.parser.Argument:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.tools.common.toolspec.parser.Form:void <init>(org.w3c.dom.Element)",
            "org.apache.cxf.tools.common.toolspec.parser.Argument:boolean accept(org.apache.cxf.tools.common.toolspec.parser.TokenInputStream,org.w3c.dom.Element,org.apache.cxf.tools.common.toolspec.parser.ErrorVisitor)",
            "org.apache.cxf.tools.common.toolspec.parser.Argument:void <clinit>()"
        ]
    },
    "org.apache.cxf.tools.common.toolspec.AbstractToolContainer:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.tools.common.AbstractCXFToolContainer:void <clinit>()",
            "org.apache.cxf.tools.common.toolspec.AbstractToolContainer:void init()",
            "org.apache.cxf.tools.common.toolspec.AbstractToolContainer:org.apache.cxf.Bus getBus()",
            "org.apache.cxf.tools.common.toolspec.AbstractToolContainer:void <clinit>()"
        ]
    },
    "org.apache.cxf.tools.common.toolspec.ToolRunner:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.tools.common.toolspec.ToolRunner:void runTool(java.lang.Class,java.io.InputStream,boolean,java.lang.String[])",
            "org.apache.cxf.tools.common.toolspec.ToolRunner:void runTool(java.lang.Class,java.io.InputStream,boolean,java.lang.String[],org.apache.cxf.tools.common.ToolContext)",
            "org.apache.cxf.tools.common.toolspec.ToolRunner:void runTool(java.lang.Class,java.io.InputStream,boolean,java.lang.String[],boolean)",
            "org.apache.cxf.tools.common.toolspec.ToolRunner:void runTool(java.lang.Class,java.io.InputStream,boolean,java.lang.String[],boolean,org.apache.cxf.tools.common.ToolContext)",
            "org.apache.cxf.tools.common.toolspec.ToolRunner:void <clinit>()"
        ]
    },
    "org.apache.cxf.tools.util.FileWriterUtil:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.tools.common.VelocityGenerator:java.io.File parseOutputName(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.tools.util.FileWriterUtil:void <init>(java.lang.String)",
            "org.apache.cxf.tools.util.FileWriterUtil:java.io.Writer getWriter(java.lang.String,java.lang.String)",
            "org.apache.cxf.tools.util.FileWriterUtil:void <clinit>()"
        ]
    },
    "org.apache.cxf.tools.util.AnnotationUtil:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.tools.util.AnnotationUtil:java.net.URLClassLoader getClassLoader(java.lang.ClassLoader)",
            "org.apache.cxf.tools.util.AnnotationUtil:java.lang.Class loadClass(java.lang.String,java.lang.ClassLoader)",
            "org.apache.cxf.tools.util.AnnotationUtil:javax.jws.WebParam getWebParam(java.lang.reflect.Method,java.lang.String)",
            "org.apache.cxf.tools.util.AnnotationUtil:void <clinit>()"
        ]
    },
    "org.apache.cxf.catalog.OASISCatalogManager:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.WSDLQueryHandler:void writeResponse(java.lang.String,java.lang.String,org.apache.cxf.service.model.EndpointInfo,java.io.OutputStream)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updateDefinition(javax.wsdl.Definition,java.util.Map,java.util.Map,java.lang.String,org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updateSchemaImports(javax.wsdl.extensions.schema.Schema,java.util.Map,java.lang.String)",
            "org.apache.cxf.catalog.CatalogXmlSchemaURIResolver:void <init>(org.apache.cxf.Bus)",
            "org.apache.cxf.catalog.CatalogWSDLLocator:void <init>(java.lang.String,org.apache.cxf.Bus)",
            "org.apache.cxf.catalog.OASISCatalogManager:void <init>()",
            "org.apache.cxf.catalog.OASISCatalogManager:java.lang.Object getResolver()",
            "org.apache.cxf.catalog.OASISCatalogManager:void loadContextCatalogs(java.lang.String)",
            "org.apache.cxf.catalog.OASISCatalogManager:org.apache.cxf.catalog.OASISCatalogManager getContextCatalog()",
            "org.apache.cxf.catalog.OASISCatalogManager:org.apache.cxf.catalog.OASISCatalogManager getCatalogManager(org.apache.cxf.Bus)",
            "org.apache.cxf.catalog.OASISCatalogManager:void <clinit>()"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void parseWSDL(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void parseImports(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void registerWSDLExtensibilityPlugins(javax.wsdl.extensions.ExtensionRegistry)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void <clinit>()"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLManagerImpl:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void registerInitialExtensions(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void <clinit>()"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLServiceBuilder:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.attachment.wsdl11.Wsdl11AttachmentPolicyProvider:org.apache.cxf.service.model.Extensible getMessageTypeInfo(javax.xml.namespace.QName,org.apache.cxf.service.model.DescriptionInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeWSDLOperation(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean initializeClassInfo(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,java.util.List)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:void addMessageFromBinding(javax.wsdl.extensions.ExtensibilityElement,org.apache.cxf.service.model.BindingOperationInfo,boolean)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:javax.wsdl.Definition build(java.util.Map)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:javax.wsdl.PortType buildPortType(org.apache.cxf.service.model.InterfaceInfo,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildPortTypeOperation(javax.wsdl.PortType,java.util.Collection,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition,javax.xml.namespace.QName,javax.xml.namespace.QName,org.apache.cxf.service.model.DescriptionInfo)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildMockServices(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.ServiceInfo buildMockService(javax.wsdl.Definition,javax.wsdl.PortType)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:java.util.List buildServices(javax.wsdl.Definition,javax.wsdl.Service,javax.xml.namespace.QName,org.apache.cxf.service.model.DescriptionInfo)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.EndpointInfo buildEndpoint(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.BindingInfo,javax.wsdl.Port)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:org.apache.cxf.service.model.BindingInfo buildBinding(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.Binding)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildInterface(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.PortType)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildInterfaceOperation(org.apache.cxf.service.model.InterfaceInfo,javax.wsdl.Operation)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void checkForWrapped(org.apache.cxf.service.model.OperationInfo,boolean)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildMessage(org.apache.cxf.service.model.AbstractMessageContainer,javax.wsdl.Message)",
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void <clinit>()",
            "org.apache.cxf.wsdl11.WSDLServiceFactory:org.apache.cxf.service.Service create()",
            "org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean:void initializeWSDLOperation(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method)"
        ]
    },
    "org.apache.cxf.wsdl11.WSDLServiceFactory:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:void <init>(org.apache.cxf.Bus,java.net.URL,javax.xml.namespace.QName,javax.xml.namespace.QName,org.apache.cxf.endpoint.EndpointImplFactory)",
            "org.apache.cxf.ws.security.trust.STSClient:void createClient()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void buildServiceFromWSDL(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLServiceFactory:void <init>(org.apache.cxf.Bus,java.net.URL)",
            "org.apache.cxf.wsdl11.WSDLServiceFactory:void <init>(org.apache.cxf.Bus,java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLServiceFactory:void <init>(org.apache.cxf.Bus,java.lang.String,javax.xml.namespace.QName)",
            "org.apache.cxf.wsdl11.WSDLServiceFactory:org.apache.cxf.service.Service create()",
            "org.apache.cxf.wsdl11.WSDLServiceFactory:void <clinit>()",
            "org.apache.cxf.jaxws.ServiceImpl:void initializePorts()",
            "org.apache.cxf.jaxws.ServiceImpl:org.apache.cxf.service.factory.AbstractServiceFactoryBean createDispatchService(org.apache.cxf.databinding.DataBinding)"
        ]
    },
    "org.apache.cxf.bus.spring.BusApplicationContext:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.BusApplicationContext:org.springframework.core.io.Resource[] getConfigResources()",
            "org.apache.cxf.bus.spring.BusApplicationContext:void <clinit>()",
            "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.bus.spring.BusApplicationContext createApplicationContext(java.lang.String[],boolean)",
            "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus createBus(java.net.URL[],boolean)"
        ]
    },
    "org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser$SpringJettyHTTPServerEngine:void setApplicationContext(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineFactoryBeanDefinitionParser$SpringJettyHTTPServerEngineFactory:void setApplicationContext(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor:void postProcessBeanFactory(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)",
            "org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor:void updateBusReferencesInContext(org.apache.cxf.Bus,org.springframework.context.ApplicationContext)",
            "org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor:void <clinit>()",
            "org.apache.cxf.frontend.spring.ServerFactoryBeanDefinitionParser$SpringServerFactoryBean:void setApplicationContext(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.frontend.spring.ClientProxyFactoryBeanDefinitionParser$SpringClientProxyFactoryBean:void setApplicationContext(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.jaxws.spring.EndpointDefinitionParser$SpringEndpointImpl:void setApplicationContext(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.jaxws.spring.NamespaceHandler$SpringServerFactoryBean:void setApplicationContext(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.jaxws.spring.JaxWsProxyFactoryBeanDefinitionParser$JAXWSSpringClientProxyFactoryBean:void setApplicationContext(org.springframework.context.ApplicationContext)"
        ]
    },
    "org.apache.cxf.bus.spring.BusEntityResolver:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.BusApplicationContext:void setEntityResolvers(org.springframework.beans.factory.xml.XmlBeanDefinitionReader)",
            "org.apache.cxf.bus.spring.BusEntityResolver:org.xml.sax.InputSource resolveEntity(java.lang.String,java.lang.String)",
            "org.apache.cxf.bus.spring.BusEntityResolver:void <clinit>()"
        ]
    },
    "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.bus.spring.BusApplicationContext createApplicationContext(java.lang.String[],boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus createBus(java.lang.String[],boolean)"
        ]
    },
    "org.apache.cxf.bus.spring.SpringBusFactory:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.servlet.CXFServlet:void updateContext(javax.servlet.ServletConfig,org.springframework.context.ApplicationContext)",
            "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus finishCreatingBus(org.apache.cxf.bus.spring.BusApplicationContext)",
            "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus createBus(java.lang.String[],boolean)",
            "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.bus.spring.BusApplicationContext createApplicationContext(java.lang.String[],boolean)",
            "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus createBus(java.net.URL[],boolean)",
            "org.apache.cxf.bus.spring.SpringBusFactory:void <clinit>()"
        ]
    },
    "org.apache.cxf.frontend.ClientProxy:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.frontend.ClientProxyFactoryBean:org.apache.cxf.frontend.ClientProxy clientClientProxy(org.apache.cxf.endpoint.Client)",
            "org.apache.cxf.frontend.ClientProxy:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])",
            "org.apache.cxf.frontend.ClientProxy:void <clinit>()",
            "org.apache.cxf.jaxws.JaxWsProxyFactoryBean:org.apache.cxf.frontend.ClientProxy clientClientProxy(org.apache.cxf.endpoint.Client)",
            "org.apache.cxf.jaxws.JaxWsClientProxy:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])",
            "org.apache.cxf.jaxws.JaxWsClientProxy:void <clinit>()",
            "org.apache.cxf.jaxws.DispatchImpl:void checkError()",
            "org.apache.cxf.jaxws.DispatchImpl:java.lang.RuntimeException mapException(java.lang.Exception)"
        ]
    },
    "org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory:org.apache.cxf.endpoint.Endpoint createEndpoint()",
            "org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory:void initializeAnnotationInterceptors(org.apache.cxf.endpoint.Endpoint,java.lang.Class)",
            "org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory:org.apache.cxf.service.model.BindingInfo createBindingInfo()",
            "org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory:void <clinit>()",
            "org.apache.cxf.frontend.ServerFactoryBean:void initializeServiceFactory()",
            "org.apache.cxf.frontend.ServerFactoryBean:void <clinit>()"
        ]
    },
    "org.apache.cxf.frontend.ServerFactoryBean:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.frontend.ServerFactoryBean:void initializeServiceFactory()",
            "org.apache.cxf.frontend.ServerFactoryBean:void <clinit>()"
        ]
    },
    "org.apache.cxf.aegis.AegisXMLStreamDataReader:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.AegisXMLStreamDataReader:void setupReaderPosition(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.aegis.AegisXMLStreamDataReader:java.lang.Object read(javax.xml.stream.XMLStreamReader,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.AegisXMLStreamDataReader:void <clinit>()",
            "org.apache.cxf.aegis.AegisElementDataReader:void <init>(org.apache.cxf.aegis.AegisContext)",
            "org.apache.cxf.aegis.databinding.XMLStreamDataReader:void <init>(org.apache.cxf.aegis.databinding.AegisDatabinding,org.apache.cxf.Bus)",
            "org.apache.cxf.aegis.AegisContext:org.apache.cxf.aegis.AegisReader createXMLStreamReader()"
        ]
    },
    "org.apache.cxf.aegis.databinding.XMLStreamDataWriter:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.databinding.XMLStreamDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.aegis.databinding.XMLStreamDataWriter:void <clinit>()",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:org.apache.cxf.databinding.DataWriter createWriter(java.lang.Class)"
        ]
    },
    "org.apache.cxf.aegis.databinding.ElementDataWriter:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.databinding.ElementDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,org.w3c.dom.Element)",
            "org.apache.cxf.aegis.databinding.ElementDataWriter:void <clinit>()",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:org.apache.cxf.databinding.DataWriter createWriter(java.lang.Class)"
        ]
    },
    "org.apache.cxf.aegis.databinding.AegisDatabinding:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void initialize(org.apache.cxf.service.Service)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void <clinit>()"
        ]
    },
    "org.apache.cxf.aegis.AegisXMLStreamDataWriter:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.AegisXMLStreamDataWriter:void write(java.lang.Object,javax.xml.namespace.QName,boolean,javax.xml.stream.XMLStreamWriter,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.AegisXMLStreamDataWriter:void <clinit>()",
            "org.apache.cxf.aegis.AegisContext:org.apache.cxf.aegis.AegisWriter createXMLStreamWriter()",
            "org.apache.cxf.aegis.AegisElementDataWriter:void <init>(org.apache.cxf.aegis.AegisContext)"
        ]
    },
    "org.apache.cxf.aegis.type.basic.XMLBeanTypeInfo:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.basic.XMLBeanTypeInfo:void mapProperty(java.beans.PropertyDescriptor)",
            "org.apache.cxf.aegis.type.basic.XMLBeanTypeInfo:void <clinit>()",
            "org.apache.cxf.aegis.type.XMLTypeCreator:org.apache.cxf.aegis.type.Type createDefaultType(org.apache.cxf.aegis.type.AbstractTypeCreator$TypeClassInfo)"
        ]
    },
    "org.apache.cxf.aegis.type.basic.ArrayType:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.AbstractTypeCreator:org.apache.cxf.aegis.type.Type createArrayType(org.apache.cxf.aegis.type.AbstractTypeCreator$TypeClassInfo)",
            "org.apache.cxf.aegis.type.basic.ArrayType:org.apache.cxf.aegis.type.Type getComponentType()",
            "org.apache.cxf.aegis.type.basic.ArrayType:void <clinit>()"
        ]
    },
    "org.apache.cxf.aegis.type.encoded.SoapArrayType:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.encoded.ArrayTypeInfo:void <init>(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.type.TypeMapping)",
            "org.apache.cxf.aegis.type.encoded.SoapArrayType:java.util.List readCollection(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.encoded.ArrayTypeInfo,int)",
            "org.apache.cxf.aegis.type.encoded.SoapArrayType:org.apache.cxf.aegis.type.Type getComponentType()",
            "org.apache.cxf.aegis.type.encoded.SoapArrayType:void <clinit>()"
        ]
    },
    "org.apache.cxf.aegis.type.TypeUtil:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.AegisXMLStreamDataReader:java.lang.Object read(javax.xml.stream.XMLStreamReader,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.databinding.XMLStreamDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.aegis.databinding.ElementDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,org.w3c.dom.Element)",
            "org.apache.cxf.aegis.AegisXMLStreamDataWriter:void write(java.lang.Object,javax.xml.namespace.QName,boolean,javax.xml.stream.XMLStreamWriter,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.basic.BeanType:org.apache.cxf.aegis.type.Type getElementType(javax.xml.namespace.QName,org.apache.cxf.aegis.type.basic.BeanTypeInfo,org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.BeanType:void writeObjectInternal(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,boolean)",
            "org.apache.cxf.aegis.type.basic.ArrayType:java.util.Collection readCollection(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.ArrayType:void writeValue(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type,java.lang.String,java.lang.String)",
            "org.apache.cxf.aegis.type.encoded.SoapArrayType:java.util.List readCollection(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.encoded.ArrayTypeInfo,int)",
            "org.apache.cxf.aegis.type.encoded.SoapArrayType:void writeValue(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.TypeUtil:org.apache.cxf.aegis.type.Type getReadType(javax.xml.stream.XMLStreamReader,org.apache.cxf.aegis.AegisContext,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.TypeUtil:org.apache.cxf.aegis.type.Type getReadTypeStandalone(javax.xml.stream.XMLStreamReader,org.apache.cxf.aegis.AegisContext,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.TypeUtil:org.apache.cxf.aegis.type.Type getWriteTypeStandalone(org.apache.cxf.aegis.AegisContext,java.lang.Object,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.TypeUtil:void <clinit>()",
            "org.apache.cxf.aegis.type.collection.MapType:void writeEntry(org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context,org.apache.cxf.aegis.type.Type,org.apache.cxf.aegis.type.Type,java.util.Map$Entry)"
        ]
    },
    "org.apache.cxf.aegis.type.DefaultTypeMapping:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.AegisContext:void initialize()",
            "org.apache.cxf.aegis.type.DefaultTypeMapping:void register(org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.DefaultTypeMapping:void fillStandardMappings(org.apache.cxf.aegis.type.TypeMapping,boolean,boolean,boolean)",
            "org.apache.cxf.aegis.type.DefaultTypeMapping:void registerJDOMTypes(org.apache.cxf.aegis.type.TypeMapping,boolean)",
            "org.apache.cxf.aegis.type.DefaultTypeMapping:org.apache.cxf.aegis.type.DefaultTypeMapping createSoap11TypeMapping(boolean,boolean)",
            "org.apache.cxf.aegis.type.DefaultTypeMapping:org.apache.cxf.aegis.type.DefaultTypeMapping createSoap11TypeMapping(boolean,boolean,boolean)",
            "org.apache.cxf.aegis.type.DefaultTypeMapping:org.apache.cxf.aegis.type.DefaultTypeMapping createDefaultTypeMapping(boolean,boolean)",
            "org.apache.cxf.aegis.type.DefaultTypeMapping:org.apache.cxf.aegis.type.DefaultTypeMapping createDefaultTypeMapping(boolean,boolean,boolean)",
            "org.apache.cxf.aegis.type.DefaultTypeMapping:void <clinit>()"
        ]
    },
    "org.apache.cxf.jaxws.handler.AnnotationHandlerChainBuilder:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.JaxWsProxyFactoryBean:void buildHandlerChain(org.apache.cxf.jaxws.JaxWsClientProxy)",
            "org.apache.cxf.jaxws.handler.AnnotationHandlerChainBuilder:java.util.List buildHandlerChainFromClass(java.lang.Class,java.util.List,javax.xml.namespace.QName,javax.xml.namespace.QName,java.lang.String)",
            "org.apache.cxf.jaxws.handler.AnnotationHandlerChainBuilder:void processHandlerChainElement(org.w3c.dom.Element,java.util.List,javax.xml.namespace.QName,javax.xml.namespace.QName,java.lang.String)",
            "org.apache.cxf.jaxws.handler.AnnotationHandlerChainBuilder:boolean patternMatches(org.w3c.dom.Element,javax.xml.namespace.QName)",
            "org.apache.cxf.jaxws.handler.AnnotationHandlerChainBuilder:void processHandlerElement(org.w3c.dom.Element,java.util.List)",
            "org.apache.cxf.jaxws.handler.AnnotationHandlerChainBuilder:javax.xml.bind.JAXBContext getContextForPortComponentHandlerType()",
            "org.apache.cxf.jaxws.handler.AnnotationHandlerChainBuilder:org.apache.cxf.jaxws.handler.AnnotationHandlerChainBuilder$HandlerChainAnnotation findHandlerChainAnnotation(java.lang.Class,boolean)",
            "org.apache.cxf.jaxws.handler.AnnotationHandlerChainBuilder:java.util.ResourceBundle access$000()",
            "org.apache.cxf.jaxws.handler.AnnotationHandlerChainBuilder:void <clinit>()",
            "org.apache.cxf.jaxws.handler.HandlerResolverImpl:java.util.List getHandlersFromAnnotation(java.lang.Class,javax.xml.ws.handler.PortInfo)",
            "org.apache.cxf.jaxws.handler.AnnotationHandlerChainBuilder$HandlerChainAnnotation:void validate()",
            "org.apache.cxf.jaxws.JaxWsServerFactoryBean:void buildHandlerChain()"
        ]
    },
    "org.apache.cxf.jaxws.handler.HandlerChainInvoker:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.handler.HandlerChainInvoker:void <init>(java.util.List,boolean)",
            "org.apache.cxf.jaxws.handler.HandlerChainInvoker:void mepComplete(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.handler.HandlerChainInvoker:boolean invokeHandlerChain(java.util.List,javax.xml.ws.handler.MessageContext)",
            "org.apache.cxf.jaxws.handler.HandlerChainInvoker:boolean invokeHandlerChainHandleFault(java.util.List,javax.xml.ws.handler.MessageContext)",
            "org.apache.cxf.jaxws.handler.HandlerChainInvoker:boolean invokeHandleFault(java.util.List,javax.xml.ws.handler.MessageContext)",
            "org.apache.cxf.jaxws.handler.HandlerChainInvoker:boolean invokeHandleMessage(java.util.List,javax.xml.ws.handler.MessageContext)",
            "org.apache.cxf.jaxws.handler.HandlerChainInvoker:boolean invokeReversedHandleFault(javax.xml.ws.handler.MessageContext)",
            "org.apache.cxf.jaxws.handler.HandlerChainInvoker:boolean invokeThisHandler(javax.xml.ws.handler.Handler)",
            "org.apache.cxf.jaxws.handler.HandlerChainInvoker:void <clinit>()",
            "org.apache.cxf.jaxws.handler.AbstractJAXWSHandlerInterceptor:org.apache.cxf.jaxws.handler.HandlerChainInvoker getInvoker(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxws.handler.InitParamResourceResolver:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.handler.InitParamResourceResolver:java.lang.Object convertToType(java.lang.String,java.lang.Class)",
            "org.apache.cxf.jaxws.handler.InitParamResourceResolver:void <clinit>()",
            "org.apache.cxf.jaxws.handler.HandlerChainBuilder:void initializeViaInjection(javax.xml.ws.handler.Handler,java.util.Map)"
        ]
    },
    "org.apache.cxf.jaxws.handler.HandlerChainBuilder:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.JaxWsProxyFactoryBean:void buildHandlerChain(org.apache.cxf.jaxws.JaxWsClientProxy)",
            "org.apache.cxf.jaxws.handler.AnnotationHandlerChainBuilder:java.util.List buildHandlerChainFromClass(java.lang.Class,java.util.List,javax.xml.namespace.QName,javax.xml.namespace.QName,java.lang.String)",
            "org.apache.cxf.jaxws.handler.AnnotationHandlerChainBuilder:void processHandlerChainElement(org.w3c.dom.Element,java.util.List,javax.xml.namespace.QName,javax.xml.namespace.QName,java.lang.String)",
            "org.apache.cxf.jaxws.handler.AnnotationHandlerChainBuilder:boolean patternMatches(org.w3c.dom.Element,javax.xml.namespace.QName)",
            "org.apache.cxf.jaxws.handler.AnnotationHandlerChainBuilder:void processHandlerElement(org.w3c.dom.Element,java.util.List)",
            "org.apache.cxf.jaxws.handler.AnnotationHandlerChainBuilder:javax.xml.bind.JAXBContext getContextForPortComponentHandlerType()",
            "org.apache.cxf.jaxws.handler.AnnotationHandlerChainBuilder:org.apache.cxf.jaxws.handler.AnnotationHandlerChainBuilder$HandlerChainAnnotation findHandlerChainAnnotation(java.lang.Class,boolean)",
            "org.apache.cxf.jaxws.handler.AnnotationHandlerChainBuilder:java.util.ResourceBundle access$000()",
            "org.apache.cxf.jaxws.handler.AnnotationHandlerChainBuilder:void <clinit>()",
            "org.apache.cxf.jaxws.handler.HandlerResolverImpl:java.util.List getHandlersFromAnnotation(java.lang.Class,javax.xml.ws.handler.PortInfo)",
            "org.apache.cxf.jaxws.handler.AnnotationHandlerChainBuilder$HandlerChainAnnotation:void validate()",
            "org.apache.cxf.jaxws.handler.HandlerChainBuilder:java.util.List buildHandlerChain(org.apache.cxf.jaxws.javaee.PortComponentHandlerType,java.lang.ClassLoader)",
            "org.apache.cxf.jaxws.handler.HandlerChainBuilder:void initializeViaInitMethod(javax.xml.ws.handler.Handler,java.util.Map,java.lang.reflect.Method)",
            "org.apache.cxf.jaxws.handler.HandlerChainBuilder:void <clinit>()",
            "org.apache.cxf.jaxws.JaxWsServerFactoryBean:void buildHandlerChain()"
        ]
    },
    "org.apache.cxf.jaxws.handler.logical.LogicalMessageImpl:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.handler.logical.LogicalMessageContextImpl:javax.xml.ws.LogicalMessage getMessage()",
            "org.apache.cxf.jaxws.handler.logical.LogicalMessageImpl:javax.xml.transform.Source handleDispatchProviderCase(javax.xml.ws.Service$Mode)",
            "org.apache.cxf.jaxws.handler.logical.LogicalMessageImpl:void setPayload(javax.xml.transform.Source)",
            "org.apache.cxf.jaxws.handler.logical.LogicalMessageImpl:void <clinit>()"
        ]
    },
    "org.apache.cxf.jaxws.EndpointUtils:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.EndpointUtils:boolean hasWebServiceAnnotation(java.lang.Class)",
            "org.apache.cxf.jaxws.EndpointUtils:boolean isValidImplementor(java.lang.Object)",
            "org.apache.cxf.jaxws.EndpointUtils:void <clinit>()",
            "org.apache.cxf.jaxws.spi.ProviderImpl:javax.xml.ws.Endpoint createEndpoint(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.cxf.jaxws.support.ServiceDelegateAccessor:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.support.ServiceDelegateAccessor:org.apache.cxf.jaxws.ServiceImpl get(javax.xml.ws.Service)",
            "org.apache.cxf.jaxws.support.ServiceDelegateAccessor:void <clinit>()"
        ]
    },
    "org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.JaxwsServiceBuilder:void <init>()",
            "org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean:void initializeWSDLOperationsForProvider()",
            "org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean:void <clinit>()",
            "org.apache.cxf.jaxws.ServiceImpl:org.apache.cxf.service.factory.AbstractServiceFactoryBean createDispatchService(org.apache.cxf.databinding.DataBinding)",
            "org.apache.cxf.jaxws.JaxWsServerFactoryBean:void <init>()",
            "org.apache.cxf.jaxws.JaxWsClientFactoryBean:void <init>()"
        ]
    },
    "org.apache.cxf.jaxws.support.JaxWsServiceConfiguration:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean:void initConfiguration(org.apache.cxf.jaxws.support.JaxWsImplementorInfo)",
            "org.apache.cxf.jaxws.support.JaxWsServiceConfiguration:java.lang.Class getResponseWrapper(java.lang.reflect.Method)",
            "org.apache.cxf.jaxws.support.JaxWsServiceConfiguration:java.lang.Class getRequestWrapper(java.lang.reflect.Method)",
            "org.apache.cxf.jaxws.support.JaxWsServiceConfiguration:java.lang.Boolean isWrapped(java.lang.reflect.Method)",
            "org.apache.cxf.jaxws.support.JaxWsServiceConfiguration:void <clinit>()"
        ]
    },
    "org.apache.cxf.jaxws.support.JaxWsImplementorInfo:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean:void setServiceClass(java.lang.Class)",
            "org.apache.cxf.jaxws.support.JaxWsImplementorInfo:void initialize()",
            "org.apache.cxf.jaxws.support.JaxWsImplementorInfo:void <clinit>()",
            "org.apache.cxf.jaxws.EndpointImpl:org.apache.cxf.endpoint.ServerImpl getServer(java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxws.EndpointReferenceBuilder:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.EndpointReferenceBuilder:javax.xml.ws.EndpointReference getEndpointReference()",
            "org.apache.cxf.jaxws.EndpointReferenceBuilder:void <clinit>()",
            "org.apache.cxf.jaxws.JaxWsClientProxy:void <init>(org.apache.cxf.endpoint.Client,javax.xml.ws.Binding)",
            "org.apache.cxf.jaxws.DispatchImpl:void <init>(org.apache.cxf.endpoint.Client,javax.xml.ws.Service$Mode,javax.xml.bind.JAXBContext,java.lang.Class)"
        ]
    },
    "org.apache.cxf.jaxws.JaxWsClientProxy:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.JaxWsProxyFactoryBean:org.apache.cxf.frontend.ClientProxy clientClientProxy(org.apache.cxf.endpoint.Client)",
            "org.apache.cxf.jaxws.JaxWsClientProxy:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])",
            "org.apache.cxf.jaxws.JaxWsClientProxy:void <clinit>()",
            "org.apache.cxf.jaxws.DispatchImpl:void checkError()",
            "org.apache.cxf.jaxws.DispatchImpl:java.lang.RuntimeException mapException(java.lang.Exception)"
        ]
    },
    "org.apache.cxf.jaxws.ServiceImpl:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.ServiceImpl:void <init>(org.apache.cxf.Bus,java.net.URL,javax.xml.namespace.QName,java.lang.Class)",
            "org.apache.cxf.jaxws.ServiceImpl:org.apache.cxf.jaxws.support.JaxWsClientEndpointImpl getJaxwsEndpoint(javax.xml.namespace.QName,org.apache.cxf.service.factory.AbstractServiceFactoryBean,javax.xml.ws.WebServiceFeature[])",
            "org.apache.cxf.jaxws.ServiceImpl:java.lang.Object getPort(javax.xml.namespace.QName,java.lang.Class,javax.xml.ws.WebServiceFeature[])",
            "org.apache.cxf.jaxws.ServiceImpl:java.lang.Object createPort(javax.xml.namespace.QName,org.apache.cxf.ws.addressing.EndpointReferenceType,java.lang.Class,javax.xml.ws.WebServiceFeature[])",
            "org.apache.cxf.jaxws.ServiceImpl:javax.xml.namespace.QName getPortTypeName(java.lang.Class)",
            "org.apache.cxf.jaxws.ServiceImpl:void <clinit>()",
            "org.apache.cxf.jaxws.spi.ProviderImpl:javax.xml.ws.spi.ServiceDelegate createServiceDelegate(java.net.URL,javax.xml.namespace.QName,java.lang.Class)"
        ]
    },
    "org.apache.cxf.jaxws.EndpointImpl:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.EndpointImpl:void checkPublishPermission()",
            "org.apache.cxf.jaxws.EndpointImpl:javax.xml.ws.EndpointReference getEndpointReference(org.w3c.dom.Element[])",
            "org.apache.cxf.jaxws.EndpointImpl:javax.xml.ws.EndpointReference getEndpointReference(java.lang.Class,org.w3c.dom.Element[])",
            "org.apache.cxf.jaxws.EndpointImpl:void <clinit>()",
            "org.apache.cxf.jaxws.spi.ProviderImpl:javax.xml.ws.Endpoint createEndpoint(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.cxf.jaxws.spi.ProviderImpl:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.spi.ProviderImpl:javax.xml.ws.Endpoint createEndpoint(java.lang.String,java.lang.Object)",
            "org.apache.cxf.jaxws.spi.ProviderImpl:javax.xml.ws.wsaddressing.W3CEndpointReference createW3CEndpointReference(java.lang.String,javax.xml.namespace.QName,javax.xml.namespace.QName,java.util.List,java.lang.String,java.util.List)",
            "org.apache.cxf.jaxws.spi.ProviderImpl:javax.xml.ws.EndpointReference readEndpointReference(javax.xml.transform.Source)",
            "org.apache.cxf.jaxws.spi.ProviderImpl:javax.xml.bind.JAXBContext getJAXBContext()",
            "org.apache.cxf.jaxws.spi.ProviderImpl:void <clinit>()"
        ]
    },
    "org.apache.cxf.jaxws.DispatchImpl:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.ServiceImpl:javax.xml.ws.Dispatch createDispatch(javax.xml.namespace.QName,java.lang.Class,javax.xml.ws.Service$Mode,javax.xml.ws.WebServiceFeature[])",
            "org.apache.cxf.jaxws.ServiceImpl:javax.xml.ws.Dispatch createDispatch(javax.xml.namespace.QName,javax.xml.bind.JAXBContext,javax.xml.ws.Service$Mode,javax.xml.ws.WebServiceFeature[])",
            "org.apache.cxf.jaxws.DispatchImpl:void <init>(org.apache.cxf.endpoint.Client,javax.xml.ws.Service$Mode,javax.xml.bind.JAXBContext,java.lang.Class)",
            "org.apache.cxf.jaxws.DispatchImpl:void <clinit>()"
        ]
    },
    "org.apache.cxf.jaxws.interceptors.WebFaultOutInterceptor:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean:void initializeFaultInterceptors()",
            "org.apache.cxf.jaxws.interceptors.WebFaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.interceptors.WebFaultOutInterceptor:java.lang.Object createFaultInfoBean(javax.xml.ws.WebFault,java.lang.Throwable)",
            "org.apache.cxf.jaxws.interceptors.WebFaultOutInterceptor:void <clinit>()"
        ]
    },
    "org.apache.cxf.jaxws.interceptors.HolderOutInterceptor:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.JaxWsProxyFactoryBean:java.lang.Object create()",
            "org.apache.cxf.jaxws.support.JaxWsEndpointImpl:void <init>(org.apache.cxf.Bus,org.apache.cxf.service.Service,org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.jaxws.support.JaxWsImplementorInfo,java.util.List,java.util.List,boolean)",
            "org.apache.cxf.jaxws.interceptors.HolderOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.interceptors.HolderOutInterceptor:void <clinit>()"
        ]
    },
    "org.apache.cxf.jaxws.interceptors.WrapperClassInInterceptor:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.JaxWsProxyFactoryBean:java.lang.Object create()",
            "org.apache.cxf.jaxws.support.JaxWsEndpointImpl:void <init>(org.apache.cxf.Bus,org.apache.cxf.service.Service,org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.jaxws.support.JaxWsImplementorInfo,java.util.List,java.util.List,boolean)",
            "org.apache.cxf.jaxws.interceptors.WrapperClassInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.interceptors.WrapperClassInInterceptor:void <clinit>()"
        ]
    },
    "org.apache.cxf.jaxws.interceptors.SwAOutInterceptor:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.support.JaxWsEndpointImpl:void <init>(org.apache.cxf.Bus,org.apache.cxf.service.Service,org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.jaxws.support.JaxWsImplementorInfo,java.util.List,java.util.List,boolean)",
            "org.apache.cxf.jaxws.interceptors.SwAOutInterceptor:boolean callSWARefMethod(javax.xml.bind.JAXBContext)",
            "org.apache.cxf.jaxws.interceptors.SwAOutInterceptor:void processAttachments(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.binding.soap.model.SoapBodyInfo)",
            "org.apache.cxf.jaxws.interceptors.SwAOutInterceptor:void <clinit>()"
        ]
    },
    "org.apache.cxf.jaxws.binding.soap.SOAPBindingImpl:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.support.JaxWsEndpointImpl:void createJaxwsBinding()",
            "org.apache.cxf.jaxws.EndpointReferenceBuilder:javax.xml.ws.EndpointReference getEndpointReference()",
            "org.apache.cxf.jaxws.binding.soap.SOAPBindingImpl:void setRoles(java.util.Set)",
            "org.apache.cxf.jaxws.binding.soap.SOAPBindingImpl:javax.xml.soap.MessageFactory getMessageFactory()",
            "org.apache.cxf.jaxws.binding.soap.SOAPBindingImpl:javax.xml.soap.SOAPFactory getSOAPFactory()",
            "org.apache.cxf.jaxws.binding.soap.SOAPBindingImpl:void <clinit>()"
        ]
    },
    "org.apache.cxf.jaxws.JAXWSMethodDispatcher:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean:void initConfiguration(org.apache.cxf.jaxws.support.JaxWsImplementorInfo)",
            "org.apache.cxf.jaxws.JAXWSMethodDispatcher:void bind(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method[])",
            "org.apache.cxf.jaxws.JAXWSMethodDispatcher:void <clinit>()"
        ]
    },
    "org.apache.cxf.jaxws.context.WebServiceContextImpl:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.handler.HandlerChainInvoker:boolean invokeHandlerChain(java.util.List,javax.xml.ws.handler.MessageContext)",
            "org.apache.cxf.jaxws.handler.HandlerChainInvoker:boolean invokeHandlerChainHandleFault(java.util.List,javax.xml.ws.handler.MessageContext)",
            "org.apache.cxf.jaxws.JAXWSMethodInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object,java.lang.reflect.Method,java.util.List)",
            "org.apache.cxf.jaxws.context.WebServiceContextResourceResolver:java.lang.Object resolve(java.lang.String,java.lang.Class)",
            "org.apache.cxf.jaxws.context.WebServiceContextImpl:void <init>(javax.xml.ws.handler.MessageContext)",
            "org.apache.cxf.jaxws.context.WebServiceContextImpl:javax.xml.ws.handler.MessageContext getMessageContext()",
            "org.apache.cxf.jaxws.context.WebServiceContextImpl:javax.xml.ws.EndpointReference getEndpointReference(java.lang.Class,org.w3c.dom.Element[])",
            "org.apache.cxf.jaxws.context.WebServiceContextImpl:void setMessageContext(javax.xml.ws.handler.MessageContext)",
            "org.apache.cxf.jaxws.context.WebServiceContextImpl:void clear()",
            "org.apache.cxf.jaxws.context.WebServiceContextImpl:void <clinit>()"
        ]
    },
    "org.apache.cxf.xmlbeans.DataWriterImpl:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.xmlbeans.DataWriterImpl:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.xmlbeans.DataWriterImpl:void <clinit>()",
            "org.apache.cxf.xmlbeans.XmlBeansDataBinding:org.apache.cxf.databinding.DataWriter createWriter(java.lang.Class)",
            "org.apache.cxf.xmlbeans.NodeDataWriterImpl:void <init>()"
        ]
    },
    "org.apache.cxf.xmlbeans.XmlBeansDataBinding:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.xmlbeans.XmlBeansDataBinding:java.lang.Class[] getSupportedReaderFormats()",
            "org.apache.cxf.xmlbeans.XmlBeansDataBinding:java.lang.Class[] getSupportedWriterFormats()",
            "org.apache.cxf.xmlbeans.XmlBeansDataBinding:void initialize(org.apache.cxf.service.Service)",
            "org.apache.cxf.xmlbeans.XmlBeansDataBinding:void <clinit>()"
        ]
    },
    "org.apache.cxf.xmlbeans.DataReaderImpl:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.xmlbeans.XmlBeansDataBinding:org.apache.cxf.databinding.DataReader createReader(java.lang.Class)",
            "org.apache.cxf.xmlbeans.DataReaderImpl:java.lang.Object read(org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.xmlbeans.DataReaderImpl:void <clinit>()"
        ]
    },
    "org.apache.cxf.configuration.spring.AbstractFactoryBeanDefinitionParser:void doParse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxws.spring.EndpointDefinitionParser:void doParse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.policy.builder.jaxb.JaxbAssertionBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.AssertionBuilderRegistryImpl:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)"
        ]
    },
    "org.apache.cxf.phase.PhaseInterceptorChain:void updateIterator()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)",
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doInterceptStartingAfter(org.apache.cxf.message.Message,java.lang.String)",
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doInterceptStartingAt(org.apache.cxf.message.Message,java.lang.String)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void reset()"
        ]
    },
    "org.apache.cxf.phase.PhaseInterceptorChain:void insertInterceptor(int,org.apache.cxf.phase.PhaseInterceptor,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:void add(org.apache.cxf.interceptor.Interceptor,boolean)"
        ]
    },
    "org.apache.cxf.tools.common.toolspec.parser.Form:boolean hasInfoOption(org.apache.cxf.tools.common.toolspec.parser.TokenInputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.tools.common.toolspec.parser.Form:boolean accept(org.apache.cxf.tools.common.toolspec.parser.TokenInputStream,org.w3c.dom.Element,org.apache.cxf.tools.common.toolspec.parser.ErrorVisitor)"
        ]
    },
    "org.apache.cxf.tools.common.toolspec.parser.Option:java.lang.String readArgumentValue(org.apache.cxf.tools.common.toolspec.parser.TokenInputStream,java.lang.String,org.apache.cxf.tools.common.toolspec.parser.ErrorVisitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.tools.common.toolspec.parser.Option:boolean accept(org.apache.cxf.tools.common.toolspec.parser.TokenInputStream,org.w3c.dom.Element,org.apache.cxf.tools.common.toolspec.parser.ErrorVisitor)"
        ]
    },
    "org.apache.cxf.tools.common.toolspec.parser.Argument:void addElement(org.apache.cxf.tools.common.toolspec.parser.TokenInputStream,org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.tools.common.toolspec.parser.Argument:boolean accept(org.apache.cxf.tools.common.toolspec.parser.TokenInputStream,org.w3c.dom.Element,org.apache.cxf.tools.common.toolspec.parser.ErrorVisitor)"
        ]
    },
    "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus createBus(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus createBus()"
        ]
    },
    "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus createBus(java.net.URL)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxb.JAXBContextInitializer:void inspectTypeAdapter(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.JAXBContextInitializer:void checkForAdapter(java.lang.Class,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.jaxb.JAXBContextInitializer:void addClass(java.lang.Class)"
        ]
    },
    "org.apache.cxf.jaxb.JAXBContextInitializer:void walkReferences(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.JAXBContextInitializer:void addClass(java.lang.Class)",
            "org.apache.cxf.jaxb.JAXBContextInitializer:void walkReferences(java.lang.Class)"
        ]
    },
    "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JOutInterceptor:void handleFault(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:void unwind(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.jms.JMSDestination:void <init>(org.apache.cxf.Bus,org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.transport.jms.JMSConfiguration)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.jms.JMSTransportFactory:org.apache.cxf.transport.Destination getDestination(org.apache.cxf.service.model.EndpointInfo)"
        ]
    },
    "org.apache.cxf.aegis.type.DefaultTypeMapping:org.apache.cxf.aegis.type.DefaultTypeMapping createSoap11TypeMapping(boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.aegis.type.DefaultTypeMapping:org.apache.cxf.aegis.type.DefaultTypeMapping createDefaultTypeMapping(boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.policy.builder.primitive.NestedPrimitiveAssertionBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.AssertionBuilderRegistryImpl:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)"
        ]
    },
    "org.apache.cxf.jaxws.EndpointImpl:void <init>(org.apache.cxf.Bus,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.spring.EndpointDefinitionParser$SpringEndpointImpl:void <init>(java.lang.Object)",
            "org.apache.cxf.jaxws.spring.EndpointDefinitionParser$SpringEndpointImpl:void <init>(org.apache.cxf.Bus,java.lang.Object)",
            "org.apache.cxf.jaxws.EndpointImpl:void <init>(java.lang.Object)"
        ]
    },
    "org.apache.cxf.databinding.AbstractDataBinding:org.apache.cxf.Bus getBus()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.databinding.AegisDatabinding:org.apache.cxf.databinding.DataReader createReader(java.lang.Class)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:org.apache.cxf.databinding.DataWriter createWriter(java.lang.Class)"
        ]
    },
    "org.apache.cxf.BusFactory:org.apache.cxf.Bus getThreadDefaultBus()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.management.interceptor.AbstractMessageResponseTimeInterceptor:void increaseCounter(org.apache.cxf.message.Exchange,org.apache.cxf.management.counters.MessageHandlingTimeRecorder)",
            "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser$SpringJettyHTTPServerEngine:void setApplicationContext(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineFactoryBeanDefinitionParser$SpringJettyHTTPServerEngineFactory:void setApplicationContext(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.endpoint.EndpointImpl:void <init>(org.apache.cxf.Bus,org.apache.cxf.service.Service,org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.endpoint.ClientImpl:void <init>(java.net.URL)",
            "org.apache.cxf.endpoint.ClientImpl:void <init>(java.net.URL,javax.xml.namespace.QName)",
            "org.apache.cxf.endpoint.AbstractEndpointFactory:org.apache.cxf.Bus getBus()",
            "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:org.apache.cxf.endpoint.dynamic.DynamicClientFactory newInstance()",
            "org.apache.cxf.frontend.spring.ServerFactoryBeanDefinitionParser$SpringServerFactoryBean:void setApplicationContext(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.frontend.spring.ClientProxyFactoryBeanDefinitionParser$SpringClientProxyFactoryBean:void setApplicationContext(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.jaxws.spring.EndpointDefinitionParser$SpringEndpointImpl:void setApplicationContext(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.jaxws.spring.NamespaceHandler$SpringServerFactoryBean:void setApplicationContext(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.jaxws.spring.JaxWsProxyFactoryBeanDefinitionParser$JAXWSSpringClientProxyFactoryBean:void setApplicationContext(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.jaxws.endpoint.dynamic.JaxWsDynamicClientFactory:org.apache.cxf.jaxws.endpoint.dynamic.JaxWsDynamicClientFactory newInstance()",
            "org.apache.cxf.jaxws.EndpointImpl:void <init>(java.lang.Object)",
            "org.apache.cxf.jaxws.spi.ProviderImpl:javax.xml.ws.spi.ServiceDelegate createServiceDelegate(java.net.URL,javax.xml.namespace.QName,java.lang.Class)",
            "org.apache.cxf.jaxws.spi.ProviderImpl:javax.xml.ws.Endpoint createEndpoint(java.lang.String,java.lang.Object)",
            "org.apache.cxf.jaxws.spi.ProviderImpl:javax.xml.ws.wsaddressing.W3CEndpointReference createW3CEndpointReference(java.lang.String,javax.xml.namespace.QName,javax.xml.namespace.QName,java.util.List,java.lang.String,java.util.List)"
        ]
    },
    "org.apache.cxf.aegis.type.basic.CharacterAsStringType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.AegisXMLStreamDataReader:java.lang.Object read(javax.xml.stream.XMLStreamReader,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.basic.ObjectType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.BeanType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.ArrayType:java.util.Collection readCollection(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.encoded.SoapRefType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.collection.MapType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)"
        ]
    },
    "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser:void doParse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.helpers.XMLUtils:java.lang.String toString(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.XMLUtils:void printDOM(java.lang.String,org.w3c.dom.Node)",
            "org.apache.cxf.jaxws.handler.AnnotationHandlerChainBuilder:java.util.List buildHandlerChainFromClass(java.lang.Class,java.util.List,javax.xml.namespace.QName,javax.xml.namespace.QName,java.lang.String)",
            "org.apache.cxf.jaxws.handler.AnnotationHandlerChainBuilder:void processHandlerChainElement(org.w3c.dom.Element,java.util.List,javax.xml.namespace.QName,javax.xml.namespace.QName,java.lang.String)",
            "org.apache.cxf.jaxws.handler.AnnotationHandlerChainBuilder:boolean patternMatches(org.w3c.dom.Element,javax.xml.namespace.QName)"
        ]
    },
    "org.apache.cxf.tools.common.toolspec.ToolSpec:void <init>(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.tools.common.VelocityGenerator:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.tools.common.toolspec.ToolRunner:void runTool(java.lang.Class,java.io.InputStream,boolean,java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.rm.RMContextUtils:void storeMAPs(org.apache.cxf.ws.addressing.AddressingProperties,org.apache.cxf.message.Message,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.Servant:org.apache.cxf.ws.rm.CreateSequenceResponseType createSequence(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.RMManager:void recoverReliableEndpoint(org.apache.cxf.endpoint.Endpoint,org.apache.cxf.transport.Conduit)"
        ]
    },
    "org.apache.cxf.ws.addressing.ContextUtils:void propogateReceivedMAPs(org.apache.cxf.ws.addressing.AddressingProperties,org.apache.cxf.message.Exchange)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.MAPAggregator:boolean mediate(org.apache.cxf.message.Message,boolean)"
        ]
    },
    "org.apache.cxf.ws.rm.RMContextUtils:org.apache.cxf.ws.addressing.AddressingPropertiesImpl retrieveMAPs(org.apache.cxf.message.Message,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.Servant:org.apache.cxf.ws.rm.CreateSequenceResponseType createSequence(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.RMInInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.RetransmissionCallback:void onClose(org.apache.cxf.io.CachedOutputStream)",
            "org.apache.cxf.ws.rm.RMOutInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.Destination:void ackImmediately(org.apache.cxf.ws.rm.DestinationSequence,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.RMManager:org.apache.cxf.ws.rm.RMEndpoint getReliableEndpoint(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.RMManager:org.apache.cxf.ws.rm.SourceSequence getSequence(org.apache.cxf.ws.rm.Identifier,org.apache.cxf.message.Message,org.apache.cxf.ws.addressing.AddressingProperties)",
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl:void serverResend(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.soap.RMSoapInterceptor:void updateServiceModelInfo(org.apache.cxf.binding.soap.SoapMessage)"
        ]
    },
    "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.workqueue.WorkQueueManagerImpl:org.apache.cxf.workqueue.AutomaticWorkQueue createAutomaticWorkQueue()"
        ]
    },
    "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void <init>(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void <init>()"
        ]
    },
    "org.apache.cxf.catalog.OASISCatalogManager:org.apache.cxf.catalog.OASISCatalogManager getContextCatalog()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.catalog.OASISCatalogManager:org.apache.cxf.catalog.OASISCatalogManager getCatalogManager(org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.common.xmlschema.XmlSchemaUtils:java.util.List getContentElements(org.apache.ws.commons.schema.XmlSchemaComplexType,org.apache.cxf.common.xmlschema.SchemaCollection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:java.util.List getContentElements(org.apache.ws.commons.schema.XmlSchemaComplexType,org.apache.cxf.common.xmlschema.SchemaCollection)"
        ]
    },
    "org.apache.cxf.common.xmlschema.SchemaCollection:void addCrossImportsType(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addOneSchemaCrossImports(org.apache.ws.commons.schema.XmlSchema)",
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addElementCrossImportsElement(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaObject)"
        ]
    },
    "org.apache.cxf.transport.servlet.ServletController:java.lang.String getBaseURL(javax.servlet.http.HttpServletRequest)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.servlet.ServletController:void updateDests(javax.servlet.http.HttpServletRequest)"
        ]
    },
    "org.apache.cxf.helpers.XMLUtils:void printDOM(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.helpers.XMLUtils:void printDOM(java.lang.String,org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.XMLUtils:void printDOM(org.w3c.dom.Node)"
        ]
    },
    "org.apache.cxf.helpers.XMLUtils:org.w3c.dom.Element createElementNS(org.w3c.dom.Node,javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.helpers.XMLUtils:org.w3c.dom.Element createElementNS(org.w3c.dom.Document,javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildTypes(java.util.Collection,java.util.Map,javax.wsdl.Definition)"
        ]
    },
    "org.apache.cxf.helpers.XMLUtils:org.w3c.dom.Text createTextNode(org.w3c.dom.Node,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.tools.util.JAXBUtils:org.w3c.dom.Node innerJaxbPackageBinding(org.w3c.dom.Element,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxws.handler.AnnotationHandlerChainBuilder:boolean patternMatches(org.w3c.dom.Element,javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.handler.AnnotationHandlerChainBuilder:void processHandlerChainElement(org.w3c.dom.Element,java.util.List,javax.xml.namespace.QName,javax.xml.namespace.QName,java.lang.String)"
        ]
    },
    "org.apache.cxf.common.xmlschema.XmlSchemaUtils:void addImportIfNeeded(org.apache.ws.commons.schema.XmlSchema,javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addOneSchemaCrossImports(org.apache.ws.commons.schema.XmlSchema)",
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addElementCrossImportsElement(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaObject)",
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addCrossImportsType(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaType)",
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addCrossImportsAttributeList(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaObjectCollection)",
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addCrossImports(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaContentModel)"
        ]
    },
    "org.apache.cxf.common.xmlschema.XmlSchemaUtils:org.apache.ws.commons.schema.XmlSchemaElement findElementByRefName(org.apache.cxf.common.xmlschema.SchemaCollection,javax.xml.namespace.QName,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:org.apache.ws.commons.schema.XmlSchemaType getElementType(org.apache.cxf.common.xmlschema.SchemaCollection,java.lang.String,org.apache.ws.commons.schema.XmlSchemaElement,org.apache.ws.commons.schema.XmlSchemaType)"
        ]
    },
    "org.apache.cxf.common.xmlschema.XmlSchemaUtils:java.util.List getContentAttributes(org.apache.ws.commons.schema.XmlSchemaComplexType,org.apache.cxf.common.xmlschema.SchemaCollection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:java.util.List getContentAttributes(org.apache.ws.commons.schema.XmlSchemaComplexType,org.apache.cxf.common.xmlschema.SchemaCollection)"
        ]
    },
    "org.apache.cxf.common.xmlschema.XmlSchemaUtils:boolean isAttributeNameQualified(org.apache.ws.commons.schema.XmlSchemaAttribute,org.apache.ws.commons.schema.XmlSchema)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:boolean isAttributeQualified(org.apache.ws.commons.schema.XmlSchemaAttribute,boolean,org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchema)"
        ]
    },
    "org.apache.cxf.common.xmlschema.XmlSchemaUtils:boolean isAttributeQualified(org.apache.ws.commons.schema.XmlSchemaAttribute,boolean,org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchema)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.xmlschema.XmlSchemaUtils:boolean isElementNameQualified(org.apache.ws.commons.schema.XmlSchemaElement,org.apache.ws.commons.schema.XmlSchema)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:boolean isElementQualified(org.apache.ws.commons.schema.XmlSchemaElement,boolean,org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchema)"
        ]
    },
    "org.apache.cxf.common.xmlschema.XmlSchemaUtils:boolean isElementQualified(org.apache.ws.commons.schema.XmlSchemaElement,boolean,org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchema)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.xmlschema.SchemaCollection:void addOneSchemaCrossImports(org.apache.ws.commons.schema.XmlSchema)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addCrossImports()"
        ]
    },
    "org.apache.cxf.common.xmlschema.SchemaCollection:void addElementCrossImportsElement(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaObject)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addOneSchemaCrossImports(org.apache.ws.commons.schema.XmlSchema)",
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addCrossImportsSequence(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaSequence)"
        ]
    },
    "org.apache.cxf.common.xmlschema.SchemaCollection:void addCrossImportsAttributeList(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaObjectCollection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addCrossImportsType(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaType)",
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addCrossImports(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaContentModel)"
        ]
    },
    "org.apache.cxf.common.xmlschema.SchemaCollection:void addCrossImports(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaContentModel)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addCrossImportsType(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaType)"
        ]
    },
    "org.apache.cxf.aegis.databinding.AegisDatabinding:boolean schemaImportsXmime(org.apache.ws.commons.schema.XmlSchema)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void createSchemas(org.apache.cxf.service.Service,java.util.Set)"
        ]
    },
    "org.apache.cxf.aegis.AegisContext:boolean schemaImportsUtilityTypes(org.apache.ws.commons.schema.XmlSchema)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void createSchemas(org.apache.cxf.service.Service,java.util.Set)"
        ]
    },
    "org.apache.cxf.aegis.AegisContext:void addUtilityTypesToSchema(org.apache.ws.commons.schema.XmlSchema)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.basic.BeanType:void writeSchema(org.apache.ws.commons.schema.XmlSchema)"
        ]
    },
    "org.apache.cxf.aegis.type.basic.BeanType:void addXmimeToSchema(org.apache.ws.commons.schema.XmlSchema)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.type.basic.BeanType:void writeSchema(org.apache.ws.commons.schema.XmlSchema)"
        ]
    },
    "org.apache.cxf.aegis.type.TypeUtil:void setAttributeAttributes(javax.xml.namespace.QName,org.apache.cxf.aegis.type.Type,org.apache.ws.commons.schema.XmlSchema)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.commands.JavaHelper:java.lang.String getJavaCommand()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.util.Base64Utility:byte[] decodeChunk(char[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.Base64Utility:byte[] decode(java.lang.String)",
            "org.apache.cxf.common.util.Base64Utility:void decode(char[],int,int,java.io.OutputStream)",
            "org.apache.cxf.common.util.Base64Utility:void decode(java.lang.String,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.common.util.Base64Utility:byte[] decode(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void setHeaders(org.apache.cxf.message.Message)",
            "org.apache.cxf.aegis.type.basic.ObjectType:java.lang.Object reconstituteJavaObject(org.apache.cxf.aegis.xml.MessageReader)"
        ]
    },
    "org.apache.cxf.common.util.Base64Utility:java.lang.String encode(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.resource.URIResolver:void tryFileSystem(java.lang.String,java.lang.String)",
            "org.apache.cxf.transport.http.HTTPConduit:void setBasicAuthHeader(java.lang.String,java.lang.String,java.util.Map)",
            "org.apache.cxf.transport.http.HTTPConduit:void setProxyBasicAuthHeader(java.lang.String,java.lang.String,java.util.Map)",
            "org.apache.cxf.transport.http.HttpBasicAuthSupplier:java.lang.String getAuthorizationForRealm(org.apache.cxf.transport.http.HTTPConduit,java.net.URL,org.apache.cxf.message.Message,java.lang.String,java.lang.String)",
            "org.apache.cxf.transport.http.HttpBasicAuthSupplier:java.lang.String getPreemptiveAuthorization(org.apache.cxf.transport.http.HTTPConduit,java.net.URL,org.apache.cxf.message.Message)",
            "org.apache.cxf.aegis.type.basic.Base64Type:void writeObject(java.lang.Object,org.apache.cxf.aegis.xml.MessageWriter,org.apache.cxf.aegis.Context)"
        ]
    },
    "org.apache.cxf.common.util.Base64Utility:char[] encodeChunk(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.Base64Utility:java.lang.String encode(byte[])",
            "org.apache.cxf.common.util.Base64Utility:void encodeChunk(byte[],int,int,java.io.OutputStream)",
            "org.apache.cxf.common.util.Base64Utility:void encode(byte[],int,int,java.io.Writer)"
        ]
    },
    "org.apache.cxf.common.util.Base64Utility:void encode(byte[],int,int,java.io.Writer)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.util.Base64Utility:int processEncodeme(char[],byte[],int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.Base64Utility:byte[] decodeChunk(char[],int,int)"
        ]
    },
    "org.apache.cxf.transport.http.HttpBasicAuthSupplier:java.lang.String getAuthorizationForRealm(org.apache.cxf.transport.http.HTTPConduit,java.net.URL,org.apache.cxf.message.Message,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.http.HttpBasicAuthSupplier:java.lang.String getPreemptiveAuthorization(org.apache.cxf.transport.http.HTTPConduit,java.net.URL,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.injection.ResourceInjector:void <init>(org.apache.cxf.resource.ResourceManager,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.injection.ResourceInjector:void <init>(org.apache.cxf.resource.ResourceManager)",
            "org.apache.cxf.bus.spring.Jsr250BeanPostProcessor:java.lang.Object postProcessAfterInitialization(java.lang.Object,java.lang.String)",
            "org.apache.cxf.bus.spring.Jsr250BeanPostProcessor:java.lang.Object postProcessBeforeInitialization(java.lang.Object,java.lang.String)",
            "org.apache.cxf.bus.spring.Jsr250BeanPostProcessor:void postProcessBeforeDestruction(java.lang.Object,java.lang.String)",
            "org.apache.cxf.jaxws.handler.HandlerChainBuilder:void initializeViaInjection(javax.xml.ws.handler.Handler,java.util.Map)"
        ]
    },
    "org.apache.cxf.common.injection.ResourceInjector:java.lang.reflect.Field findFieldForResource(javax.'annotation'.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.injection.ResourceInjector:void injectResourceClassLevel(java.lang.Class,javax.'annotation'.Resource)"
        ]
    },
    "org.apache.cxf.common.injection.ResourceInjector:java.lang.String getResourceName(javax.'annotation'.Resource,java.lang.reflect.Method)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.injection.ResourceInjector:void visitMethod(java.lang.reflect.Method,java.lang.'annotation'.Annotation)"
        ]
    },
    "org.apache.cxf.common.injection.ResourceInjector:java.lang.Class getResourceType(javax.'annotation'.Resource,java.lang.reflect.Field)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.injection.ResourceInjector:void injectResourceClassLevel(java.lang.Class,javax.'annotation'.Resource)",
            "org.apache.cxf.common.injection.ResourceInjector:void visitField(java.lang.reflect.Field,java.lang.'annotation'.Annotation)"
        ]
    },
    "org.apache.cxf.common.injection.ResourceInjector:java.lang.String getFieldNameForResource(javax.'annotation'.Resource,java.lang.reflect.Field)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.injection.ResourceInjector:void visitField(java.lang.reflect.Field,java.lang.'annotation'.Annotation)"
        ]
    },
    "org.apache.cxf.common.annotation.AnnotationProcessor:void <init>(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.injection.ResourceInjector:void inject(java.lang.Object,java.lang.Class)"
        ]
    },
    "org.apache.cxf.resource.ExtendedURIResolver:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.TransportURIResolver:void <init>(org.apache.cxf.Bus)",
            "org.apache.cxf.ws.policy.attachment.reference.RemoteReferenceResolver:org.apache.neethi.Policy resolveReference(java.lang.String)",
            "org.apache.cxf.ws.policy.attachment.external.Wsdl11XPointerDomainExpression:void evaluate(java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils$SchemaLSResourceResolver:void <init>(java.util.Map)",
            "org.apache.cxf.catalog.CatalogXmlSchemaURIResolver:void <init>(org.apache.cxf.catalog.OASISCatalogManager)",
            "org.apache.cxf.catalog.CatalogWSDLLocator:void <init>(java.lang.String)",
            "org.apache.cxf.catalog.CatalogWSDLLocator:void <init>(java.lang.String,org.apache.cxf.catalog.OASISCatalogManager)"
        ]
    },
    "org.apache.cxf.ws.rm.manager.DestinationPolicyType:javax.xml.datatype.Duration getSequenceExpiration()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.Servant:org.apache.cxf.ws.rm.CreateSequenceResponseType createSequence(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.ws.rm.manager.SourcePolicyType:javax.xml.datatype.Duration getSequenceExpiration()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.Proxy:org.apache.cxf.ws.rm.CreateSequenceResponseType createSequence(org.apache.cxf.ws.addressing.v200408.EndpointReferenceType,org.apache.cxf.ws.addressing.RelatesToType,boolean)"
        ]
    },
    "org.apache.cxf.ws.rm.manager.SourcePolicyType:javax.xml.datatype.Duration getOfferedSequenceExpiration()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.Proxy:org.apache.cxf.ws.rm.CreateSequenceResponseType createSequence(org.apache.cxf.ws.addressing.v200408.EndpointReferenceType,org.apache.cxf.ws.addressing.RelatesToType,boolean)"
        ]
    },
    "org.apache.cxf.ws.rm.SourceSequence:void setExpires(org.apache.cxf.ws.rm.Expires)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.Servant:org.apache.cxf.ws.rm.CreateSequenceResponseType createSequence(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.Servant:void createSequenceResponse(org.apache.cxf.ws.rm.CreateSequenceResponseType)"
        ]
    },
    "org.apache.cxf.jaxb.JAXBDataBinding:java.lang.Class[] getSupportedWriterFormats()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.FaultOutInterceptor:boolean isDOMSupported(org.apache.cxf.databinding.DataBinding)"
        ]
    },
    "org.apache.cxf.jaxb.JAXBDataBinding:java.lang.Class[] getSupportedReaderFormats()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.ClientFaultConverter:boolean isDOMSupported(org.apache.cxf.databinding.DataBinding)",
            "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:boolean supportsDataReader(org.apache.cxf.message.Message,java.lang.Class)"
        ]
    },
    "org.apache.cxf.jaxb.JAXBDataBase:javax.xml.bind.attachment.AttachmentUnmarshaller getAttachmentUnmarshaller()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.io.DataReaderImpl:javax.xml.bind.Unmarshaller createUnmarshaller()",
            "org.apache.cxf.jaxb.io.DataReaderImpl:java.lang.Object read(org.apache.cxf.service.model.MessagePartInfo,java.lang.Object)"
        ]
    },
    "org.apache.cxf.jaxb.JAXBEncoderDecoder:void writeArrayObject(javax.xml.bind.Marshaller,java.lang.Object,javax.xml.namespace.QName,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.JAXBEncoderDecoder:void marshall(javax.xml.bind.Marshaller,java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,java.lang.Object)",
            "org.apache.cxf.jaxb.JAXBEncoderDecoder:void marshallException(javax.xml.bind.Marshaller,java.lang.Exception,org.apache.cxf.service.model.MessagePartInfo,java.lang.Object)"
        ]
    },
    "org.apache.cxf.jaxb.JAXBEncoderDecoder:void writeObject(javax.xml.bind.Marshaller,java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.JAXBEncoderDecoder:void marshall(javax.xml.bind.Marshaller,java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,java.lang.Object)",
            "org.apache.cxf.jaxb.JAXBEncoderDecoder:void marshallException(javax.xml.bind.Marshaller,java.lang.Exception,org.apache.cxf.service.model.MessagePartInfo,java.lang.Object)",
            "org.apache.cxf.jaxb.JAXBEncoderDecoder:void writeArrayObject(javax.xml.bind.Marshaller,java.lang.Object,javax.xml.namespace.QName,java.lang.Object)",
            "org.apache.cxf.jaxb.JAXBEncoderDecoder:void marshallNullElement(javax.xml.bind.Marshaller,java.lang.Object,org.apache.cxf.service.model.MessagePartInfo)"
        ]
    },
    "org.apache.cxf.jaxb.JAXBEncoderDecoder:javax.xml.stream.XMLStreamWriter getStreamWriter(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.JAXBEncoderDecoder:void marshallException(javax.xml.bind.Marshaller,java.lang.Exception,org.apache.cxf.service.model.MessagePartInfo,java.lang.Object)"
        ]
    },
    "org.apache.cxf.jaxb.JAXBEncoderDecoder:void marshallNullElement(javax.xml.bind.Marshaller,java.lang.Object,org.apache.cxf.service.model.MessagePartInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.io.DataWriterImpl:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,java.lang.Object)"
        ]
    },
    "org.apache.cxf.jaxb.JAXBEncoderDecoder:java.lang.Class getClassFromType(java.lang.reflect.Type)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.JAXBEncoderDecoder:java.lang.Class getClassFromType(java.lang.reflect.Type)",
            "org.apache.cxf.jaxws.support.JaxWsImplementorInfo:java.lang.Class getProviderParameterType()"
        ]
    },
    "org.apache.cxf.jaxws.support.JaxWsImplementorInfo:java.lang.Class getProviderParameterType()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.support.JaxWsEndpointImpl:void <init>(org.apache.cxf.Bus,org.apache.cxf.service.Service,org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.jaxws.support.JaxWsImplementorInfo,java.util.List,java.util.List,boolean)"
        ]
    },
    "org.apache.cxf.jaxb.JAXBSchemaInitializer:java.lang.Class getArrayComponentType(java.lang.reflect.Type)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.JAXBEncoderDecoder:java.lang.Exception unmarshallException(javax.xml.bind.Unmarshaller,java.lang.Object,org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.jaxb.JAXBSchemaInitializer:java.lang.Class getArrayComponentType(java.lang.reflect.Type)"
        ]
    },
    "org.apache.cxf.jaxb.JAXBSchemaInitializer:org.apache.cxf.jaxb.JAXBBeanInfo getBeanInfo(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.JAXBSchemaInitializer:org.apache.cxf.jaxb.JAXBBeanInfo getBeanInfo(java.lang.reflect.Type)",
            "org.apache.cxf.jaxb.JAXBSchemaInitializer:void begin(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.jaxb.JAXBSchemaInitializer:org.apache.cxf.jaxb.JAXBBeanInfo findFromTypeAdapter(java.lang.Class)",
            "org.apache.cxf.jaxb.JAXBSchemaInitializer:void checkForExistence(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.jaxb.JAXBSchemaInitializer:void end(org.apache.cxf.service.model.FaultInfo)"
        ]
    },
    "org.apache.cxf.jaxb.JAXBDataBinding:org.apache.cxf.databinding.DataWriter createWriter(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.FaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:org.apache.cxf.databinding.DataWriter getDataWriter(org.apache.cxf.message.Message,org.apache.cxf.service.Service,java.lang.Class)",
            "org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor:void writeSoapEnvelopeStart(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor:org.apache.cxf.databinding.DataWriter getDataWriter(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.interceptors.WebFaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxb.JAXBDataBinding:org.apache.cxf.databinding.DataReader createReader(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.ClientFaultConverter:void processFaultDetail(org.apache.cxf.interceptor.Fault,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:org.apache.cxf.databinding.DataReader getDataReader(org.apache.cxf.message.Message,java.lang.Class)",
            "org.apache.cxf.binding.soap.interceptor.ReadHeadersInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.saaj.SAAJInInterceptor:void replaceHeaders(javax.xml.soap.SOAPMessage,org.apache.cxf.binding.soap.SoapMessage)"
        ]
    },
    "org.apache.cxf.management.jmx.MBServerConnectorFactory:int getURLLocalHostPort(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.management.jmx.MBServerConnectorFactory:void createConnector()"
        ]
    },
    "org.apache.cxf.management.jmx.MBServerConnectorFactory:org.apache.cxf.management.jmx.MBServerConnectorFactory getInstance()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.management.jmx.InstrumentationManagerImpl:void init()"
        ]
    },
    "org.apache.cxf.management.jmx.MBServerConnectorFactory:void setMBeanServer(javax.management.MBeanServer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.management.jmx.InstrumentationManagerImpl:void init()"
        ]
    },
    "org.apache.cxf.management.jmx.MBServerConnectorFactory:void setServiceUrl(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.management.jmx.InstrumentationManagerImpl:void init()"
        ]
    },
    "org.apache.cxf.management.jmx.MBServerConnectorFactory:void setEnvironment(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.management.jmx.MBServerConnectorFactory:void setThreaded(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.management.jmx.InstrumentationManagerImpl:void init()"
        ]
    },
    "org.apache.cxf.management.jmx.MBServerConnectorFactory:void setDaemon(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.management.jmx.InstrumentationManagerImpl:void init()"
        ]
    },
    "org.apache.cxf.management.jmx.MBServerConnectorFactory:javax.management.remote.JMXConnectorServer access$000()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.management.jmx.MBServerConnectorFactory$1:void run()"
        ]
    },
    "org.apache.cxf.management.jmx.MBServerConnectorFactory:java.util.logging.Logger access$100()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.management.jmx.MBServerConnectorFactory$1:void run()"
        ]
    },
    "org.apache.cxf.management.utils.ManagementConsole:void connectToMBserver()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.management.utils.ManagementConsole:void doManagement()"
        ]
    },
    "org.apache.cxf.configuration.spring.JAXBBeanFactory:java.lang.Object createJAXBBean(javax.xml.bind.JAXBContext,java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLInputFactory getXMLInputFactory()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamReader createFilteredReader(javax.xml.stream.XMLStreamReader,javax.xml.stream.StreamFilter)",
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamReader createXMLStreamReader(java.io.InputStream,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamReader createXMLStreamReader(java.io.InputStream)",
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamReader createXMLStreamReader(java.lang.String,java.io.InputStream)",
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamReader createXMLStreamReader(javax.xml.transform.Source)",
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamReader createXMLStreamReader(java.io.Reader)",
            "org.apache.cxf.interceptor.StaxInInterceptor:javax.xml.stream.XMLInputFactory getXMLInputFactory(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLInputFactory getXMLInputFactory(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLInputFactory getXMLInputFactory()"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLOutputFactory getXMLOutputFactory()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamWriter createXMLStreamWriter(java.io.Writer)",
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamWriter createXMLStreamWriter(java.io.OutputStream,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamWriter createXMLStreamWriter(javax.xml.transform.Result)",
            "org.apache.cxf.interceptor.StaxOutInterceptor:javax.xml.stream.XMLOutputFactory getXMLOutputFactory(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamWriter createXMLStreamWriter(java.io.Writer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void mapElementToJaxbProperty(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder,java.lang.String,java.lang.Class)",
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:org.springframework.beans.factory.support.AbstractBeanDefinition mapElementToJaxbBean(org.w3c.dom.Element,java.lang.Class,java.lang.Class,java.lang.String,java.lang.Object[])",
            "org.apache.cxf.transport.http.spring.HttpConduitBeanDefinitionParser:void mapTLSClientParameters(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder)",
            "org.apache.cxf.jaxws.interceptors.SwAOutInterceptor:javax.activation.DataSource createDataSource(javax.xml.transform.Source,java.lang.String)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamWriter createXMLStreamWriter(java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.JAXBEncoderDecoder:javax.xml.stream.XMLStreamWriter getStreamWriter(java.lang.Object)",
            "org.apache.cxf.databinding.source.XMLStreamDataReader:java.io.InputStream getInputStream(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.binding.soap.saaj.SAAJOutInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.jaxws.spi.ProviderImpl:javax.xml.ws.wsaddressing.W3CEndpointReference createW3CEndpointReference(java.lang.String,javax.xml.namespace.QName,javax.xml.namespace.QName,java.util.List,java.lang.String,java.util.List)",
            "org.apache.cxf.jaxws.interceptors.MessageModeInInterceptor:void doFromSoapMessage(org.apache.cxf.message.Message,java.lang.Object)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamWriter createXMLStreamWriter(java.io.OutputStream,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamWriter createXMLStreamWriter(java.io.OutputStream)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void writeResponse(java.lang.String,java.lang.String,org.apache.cxf.service.model.EndpointInfo,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamWriter createXMLStreamWriter(javax.xml.transform.Result)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamReader createFilteredReader(javax.xml.stream.XMLStreamReader,javax.xml.stream.StreamFilter)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.staxutils.StaxUtils:boolean isDeclared(org.w3c.dom.Element,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:org.w3c.dom.Element startElement(org.w3c.dom.Node,javax.xml.stream.XMLStreamReader,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:boolean isDeclared(org.w3c.dom.Element,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamReader createXMLStreamReader(java.io.InputStream,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.xml.stax.ElementReader:void <init>(java.io.InputStream)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamReader createXMLStreamReader(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.source.XMLStreamDataWriter:void write(java.lang.Object,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.binding.soap.interceptor.ReadHeadersInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.tools.util.ToolsStaxUtils:java.util.List getTags(java.io.File)",
            "org.apache.cxf.tools.util.ToolsStaxUtils:org.apache.cxf.tools.common.Tag getTagTree(java.io.InputStream,java.util.List)",
            "org.apache.cxf.aegis.util.jdom.StaxBuilder:org.jdom.Document build(java.io.InputStream)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamReader createXMLStreamReader(java.lang.String,java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamReader createXMLStreamReader(javax.xml.transform.Source)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:void copy(javax.xml.transform.Source,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor:void doResults(org.apache.cxf.binding.soap.SoapMessage,java.lang.String,javax.xml.soap.SOAPMessage,java.util.Vector)",
            "org.apache.cxf.binding.soap.saaj.SAAJInInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerInterceptor:javax.xml.stream.XMLStreamReader createXMLStreamReaderFromSOAPMessage(javax.xml.soap.SOAPMessage)",
            "org.apache.cxf.jaxws.handler.soap.SOAPHandlerFaultInInterceptor:javax.xml.stream.XMLStreamReader createXMLStreamReaderFromSOAPMessage(javax.xml.soap.SOAPMessage)",
            "org.apache.cxf.jaxws.handler.logical.LogicalMessageImpl:javax.xml.transform.Source getPayload()",
            "org.apache.cxf.jaxws.handler.logical.LogicalMessageImpl:void setPayload(javax.xml.transform.Source)",
            "org.apache.cxf.jaxws.spi.ProviderImpl:javax.xml.ws.EndpointReference readEndpointReference(javax.xml.transform.Source)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamReader createXMLStreamReader(java.io.Reader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:java.lang.Object unmarshalFactoryString(java.lang.String,java.lang.Class)",
            "org.apache.cxf.configuration.spring.JAXBBeanFactory:java.lang.Object createJAXBBean(javax.xml.bind.JAXBContext,java.lang.String,java.lang.Class)",
            "org.apache.cxf.configuration.jsse.spring.TLSClientParametersConfig:java.lang.Object createTLSClientParameters(java.lang.String)",
            "org.apache.cxf.aegis.util.jdom.StaxBuilder:org.jdom.Document build(java.io.Reader)"
        ]
    },
    "org.apache.cxf.wsdl.JAXBExtensionHelper:javax.wsdl.extensions.ExtensibilityElement unmarshall(java.lang.Class,javax.xml.namespace.QName,org.w3c.dom.Element,javax.wsdl.Definition,javax.wsdl.extensions.ExtensionRegistry)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxws.spi.ProviderImpl:javax.xml.ws.EndpointReference readEndpointReference(javax.xml.transform.Source)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.binding.xml.XMLBindingFactory:org.apache.cxf.binding.Binding createBinding(org.apache.cxf.service.model.BindingInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.EndpointImpl:void createBinding(org.apache.cxf.service.model.BindingInfo)"
        ]
    },
    "org.apache.cxf.interceptor.LoggingOutInterceptor:java.util.logging.Logger access$200()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.LoggingOutInterceptor$LoggingCallback:void onClose(org.apache.cxf.io.CachedOutputStream)"
        ]
    },
    "org.apache.cxf.feature.LoggingFeature:void initializeProvider(org.apache.cxf.interceptor.InterceptorProvider,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.feature.AbstractFeature:void initialize(org.apache.cxf.endpoint.Server,org.apache.cxf.Bus)",
            "org.apache.cxf.feature.AbstractFeature:void initialize(org.apache.cxf.endpoint.Client,org.apache.cxf.Bus)",
            "org.apache.cxf.feature.AbstractFeature:void initialize(org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.feature.LoggingFeature:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.feature.LoggingFeature:void initializeProvider(org.apache.cxf.interceptor.InterceptorProvider,org.apache.cxf.Bus)",
            "org.apache.cxf.feature.LoggingFeature:void <clinit>()"
        ]
    },
    "org.apache.cxf.service.factory.AbstractServiceFactoryBean:void initializeDefaultInterceptors()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeDefaultInterceptors()"
        ]
    },
    "org.apache.cxf.interceptor.FaultOutInterceptor:java.lang.Object getFaultBean(java.lang.Throwable,org.apache.cxf.service.model.FaultInfo,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.FaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeFaultInterceptors()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeDefaultInterceptors()"
        ]
    },
    "org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean:void initializeFaultInterceptors()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeDefaultInterceptors()"
        ]
    },
    "org.apache.cxf.interceptor.AttachmentInInterceptor:java.util.List getSupportedTypes()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.AttachmentInInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.PrettyLoggingOutInterceptor:java.util.logging.Logger access$100()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.PrettyLoggingOutInterceptor$LoggingCallback:void onClose(org.apache.cxf.io.CachedOutputStream)"
        ]
    },
    "org.apache.cxf.transport.http.policy.HTTPServerAssertionBuilder:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.http.policy.HTTPServerAssertionBuilder:org.apache.cxf.ws.policy.PolicyAssertion buildCompatible(org.apache.cxf.ws.policy.PolicyAssertion,org.apache.cxf.ws.policy.PolicyAssertion)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.Intersector:boolean compatibleAssertions(org.apache.cxf.ws.policy.PolicyAssertion,org.apache.cxf.ws.policy.PolicyAssertion)",
            "org.apache.cxf.ws.policy.Intersector:org.apache.cxf.ws.policy.PolicyAssertion intersect(org.apache.cxf.ws.policy.PolicyAssertion,org.apache.cxf.ws.policy.PolicyAssertion)"
        ]
    },
    "org.apache.cxf.transport.http.policy.HTTPClientAssertionBuilder:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.http.policy.HTTPClientAssertionBuilder:org.apache.cxf.ws.policy.PolicyAssertion buildCompatible(org.apache.cxf.ws.policy.PolicyAssertion,org.apache.cxf.ws.policy.PolicyAssertion)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.Intersector:boolean compatibleAssertions(org.apache.cxf.ws.policy.PolicyAssertion,org.apache.cxf.ws.policy.PolicyAssertion)",
            "org.apache.cxf.ws.policy.Intersector:org.apache.cxf.ws.policy.PolicyAssertion intersect(org.apache.cxf.ws.policy.PolicyAssertion,org.apache.cxf.ws.policy.PolicyAssertion)"
        ]
    },
    "org.apache.cxf.transport.http.policy.HTTPServerAssertionBuilder$HTTPServerPolicyAssertion:void <init>(org.apache.cxf.transport.http.policy.HTTPServerAssertionBuilder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.policy.HTTPServerAssertionBuilder:org.apache.cxf.ws.policy.builder.jaxb.JaxbAssertion buildAssertion()",
            "org.apache.cxf.transport.http.policy.HTTPServerAssertionBuilder$HTTPServerPolicyAssertion:org.apache.cxf.ws.policy.PolicyAssertion cloneMandatory()"
        ]
    },
    "org.apache.cxf.transport.http.policy.HTTPServerAssertionBuilder$HTTPServerPolicyAssertion:boolean equal(org.apache.neethi.PolicyComponent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.builder.primitive.PrimitiveAssertion:boolean isAsserted(org.apache.cxf.ws.policy.AssertionInfoMap)",
            "org.apache.cxf.ws.policy.builder.jaxb.JaxbAssertionBuilder:org.apache.cxf.ws.policy.PolicyAssertion buildCompatible(org.apache.cxf.ws.policy.PolicyAssertion,org.apache.cxf.ws.policy.PolicyAssertion)",
            "org.apache.cxf.ws.policy.util.PolicyComparator:boolean compare(org.apache.neethi.Assertion,org.apache.neethi.Assertion)",
            "org.apache.cxf.ws.policy.PolicyUtils:boolean contains(java.util.Collection,org.apache.neethi.Assertion)"
        ]
    },
    "org.apache.cxf.transport.http.policy.PolicyUtils:boolean compatible(org.apache.cxf.transports.http.configuration.HTTPClientPolicy,org.apache.cxf.transports.http.configuration.HTTPClientPolicy)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPClientPolicy getClient(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPClientPolicy)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:void assertClientPolicy(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPClientPolicy)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPClientPolicy intersect(org.apache.cxf.transports.http.configuration.HTTPClientPolicy,org.apache.cxf.transports.http.configuration.HTTPClientPolicy)"
        ]
    },
    "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPClientPolicy intersect(org.apache.cxf.transports.http.configuration.HTTPClientPolicy,org.apache.cxf.transports.http.configuration.HTTPClientPolicy)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.policy.HTTPClientAssertionBuilder:org.apache.cxf.ws.policy.PolicyAssertion buildCompatible(org.apache.cxf.ws.policy.PolicyAssertion,org.apache.cxf.ws.policy.PolicyAssertion)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPClientPolicy getClient(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPClientPolicy)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPClientPolicy getClient(org.apache.cxf.ws.policy.PolicyEngine,org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.transport.Conduit)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:void assertClientPolicy(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPClientPolicy)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPClientPolicy getClient(java.util.Collection)"
        ]
    },
    "org.apache.cxf.transport.http.policy.PolicyUtils:boolean equals(org.apache.cxf.transports.http.configuration.HTTPClientPolicy,org.apache.cxf.transports.http.configuration.HTTPClientPolicy)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.policy.HTTPClientAssertionBuilder$HTTPClientPolicyAssertion:boolean equal(org.apache.neethi.PolicyComponent)"
        ]
    },
    "org.apache.cxf.transport.http.policy.PolicyUtils:boolean compatible(org.apache.cxf.transports.http.configuration.HTTPServerPolicy,org.apache.cxf.transports.http.configuration.HTTPServerPolicy)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPServerPolicy getServer(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPServerPolicy)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPServerPolicy intersect(org.apache.cxf.transports.http.configuration.HTTPServerPolicy,org.apache.cxf.transports.http.configuration.HTTPServerPolicy)"
        ]
    },
    "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPServerPolicy intersect(org.apache.cxf.transports.http.configuration.HTTPServerPolicy,org.apache.cxf.transports.http.configuration.HTTPServerPolicy)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.policy.HTTPServerAssertionBuilder:org.apache.cxf.ws.policy.PolicyAssertion buildCompatible(org.apache.cxf.ws.policy.PolicyAssertion,org.apache.cxf.ws.policy.PolicyAssertion)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPServerPolicy getServer(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPServerPolicy)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPServerPolicy getServer(org.apache.cxf.ws.policy.PolicyEngine,org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.transport.Destination)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:org.apache.cxf.transports.http.configuration.HTTPServerPolicy getServer(java.util.Collection)"
        ]
    },
    "org.apache.cxf.transport.http.policy.PolicyUtils:boolean equals(org.apache.cxf.transports.http.configuration.HTTPServerPolicy,org.apache.cxf.transports.http.configuration.HTTPServerPolicy)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.policy.HTTPServerAssertionBuilder$HTTPServerPolicyAssertion:boolean equal(org.apache.neethi.PolicyComponent)",
            "org.apache.cxf.transport.http.policy.PolicyUtils:void assertServerPolicy(org.apache.cxf.message.Message,org.apache.cxf.transports.http.configuration.HTTPServerPolicy)"
        ]
    },
    "org.apache.cxf.transport.http.policy.HTTPClientAssertionBuilder$HTTPClientPolicyAssertion:void <init>(org.apache.cxf.transport.http.policy.HTTPClientAssertionBuilder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.policy.HTTPClientAssertionBuilder:org.apache.cxf.ws.policy.builder.jaxb.JaxbAssertion buildAssertion()",
            "org.apache.cxf.transport.http.policy.HTTPClientAssertionBuilder$HTTPClientPolicyAssertion:org.apache.cxf.ws.policy.PolicyAssertion cloneMandatory()"
        ]
    },
    "org.apache.cxf.transport.http.policy.HTTPClientAssertionBuilder$HTTPClientPolicyAssertion:boolean equal(org.apache.neethi.PolicyComponent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.builder.primitive.PrimitiveAssertion:boolean isAsserted(org.apache.cxf.ws.policy.AssertionInfoMap)",
            "org.apache.cxf.ws.policy.builder.jaxb.JaxbAssertionBuilder:org.apache.cxf.ws.policy.PolicyAssertion buildCompatible(org.apache.cxf.ws.policy.PolicyAssertion,org.apache.cxf.ws.policy.PolicyAssertion)",
            "org.apache.cxf.ws.policy.util.PolicyComparator:boolean compare(org.apache.neethi.Assertion,org.apache.neethi.Assertion)",
            "org.apache.cxf.ws.policy.PolicyUtils:boolean contains(java.util.Collection,org.apache.neethi.Assertion)"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit:boolean canAssert(javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.PolicyEngineImpl:boolean supportsAlternative(java.util.Collection,org.apache.cxf.ws.policy.Assertor)"
        ]
    },
    "org.apache.cxf.transport.http.AbstractHTTPDestination:boolean canAssert(javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.PolicyEngineImpl:boolean supportsAlternative(java.util.Collection,org.apache.cxf.ws.policy.Assertor)"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit:java.util.logging.Logger getLogger()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.AbstractObservable:void setMessageObserver(org.apache.cxf.transport.MessageObserver)"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit:java.io.InputStream getPartialResponse(java.net.HttpURLConnection,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponseInternal()"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit:java.util.logging.Logger access$200()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleRetransmits()",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponseInternal()"
        ]
    },
    "org.apache.cxf.transport.http.AbstractHTTPDestination:org.apache.cxf.service.model.EndpointInfo getAddressValue(org.apache.cxf.service.model.EndpointInfo)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.http.AbstractHTTPDestination:boolean markPartialResponse(org.apache.cxf.message.Message,org.apache.cxf.ws.addressing.EndpointReferenceType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.AbstractDestination:org.apache.cxf.transport.Conduit getBackChannel(org.apache.cxf.message.Message,org.apache.cxf.message.Message,org.apache.cxf.ws.addressing.EndpointReferenceType)"
        ]
    },
    "org.apache.cxf.transport.http.AbstractHTTPDestination:boolean isPartialResponse(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.AbstractHTTPDestination:java.io.OutputStream flushHeaders(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.servlet.ServletDestination:java.util.logging.Logger getLogger()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.AbstractDestination$AbstractBackChannelConduit:java.util.logging.Logger getLogger()",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:java.lang.String getId(java.util.Map)",
            "org.apache.cxf.transport.AbstractObservable:void setMessageObserver(org.apache.cxf.transport.MessageObserver)"
        ]
    },
    "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:java.util.logging.Logger getLogger()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.AbstractDestination$AbstractBackChannelConduit:java.util.logging.Logger getLogger()",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:java.lang.String getId(java.util.Map)",
            "org.apache.cxf.transport.AbstractObservable:void setMessageObserver(org.apache.cxf.transport.MessageObserver)"
        ]
    },
    "org.apache.cxf.transport.http.gzip.GZIPFeature:void initializeProvider(org.apache.cxf.interceptor.InterceptorProvider,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.feature.AbstractFeature:void initialize(org.apache.cxf.endpoint.Server,org.apache.cxf.Bus)",
            "org.apache.cxf.feature.AbstractFeature:void initialize(org.apache.cxf.endpoint.Client,org.apache.cxf.Bus)",
            "org.apache.cxf.feature.AbstractFeature:void initialize(org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.transport.http.gzip.GZIPFeature:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.gzip.GZIPFeature:void initializeProvider(org.apache.cxf.interceptor.InterceptorProvider,org.apache.cxf.Bus)",
            "org.apache.cxf.transport.http.gzip.GZIPFeature:void <clinit>()"
        ]
    },
    "org.apache.cxf.transport.http.gzip.GZIPOutInterceptor:java.util.logging.Logger access$000()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.gzip.GZIPOutInterceptor$GZipThresholdOutputStream:void thresholdNotReached()",
            "org.apache.cxf.transport.http.gzip.GZIPOutInterceptor$GZipThresholdOutputStream:void thresholdReached()"
        ]
    },
    "org.apache.cxf.transport.servlet.AbstractCXFServlet:org.apache.cxf.transport.servlet.ServletController createServletController(javax.servlet.ServletConfig)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.servlet.AbstractCXFServlet:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.servlet.AbstractCXFServlet:void init(javax.servlet.ServletConfig)",
            "org.apache.cxf.transport.servlet.AbstractCXFServlet:void replaceDestinationFactory()",
            "org.apache.cxf.transport.servlet.AbstractCXFServlet:void destroy()",
            "org.apache.cxf.transport.servlet.AbstractCXFServlet:void <clinit>()"
        ]
    },
    "org.apache.cxf.transport.http.AbstractHTTPTransportFactory:org.apache.cxf.transport.http.HttpURLConnectionFactory getConnectionFactory(org.apache.cxf.transport.http.HTTPConduit,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.AbstractHTTPTransportFactory:org.apache.cxf.transport.http.HttpURLConnectionFactory getConnectionFactory(org.apache.cxf.transport.http.HTTPConduit)",
            "org.apache.cxf.transport.http.HTTPConduit:void retrieveConnectionFactory(java.lang.String)"
        ]
    },
    "org.apache.cxf.transport.https.HttpsURLConnectionFactory:void <init>(org.apache.cxf.configuration.jsse.TLSClientParameters)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.AbstractHTTPTransportFactory:org.apache.cxf.transport.http.HttpURLConnectionFactory getConnectionFactory(org.apache.cxf.transport.http.HTTPConduit,java.lang.String)"
        ]
    },
    "org.apache.cxf.transport.https.HttpsURLConnectionFactory:void addLogHandler(java.util.logging.Handler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.https.HttpsURLConnectionFactory:java.lang.String[] getUnSupported()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.https.HttpsURLConnectionFactory:java.lang.String[] getDerivative()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.https.SSLUtils:void logUnSupportedPolicies(java.lang.Object,boolean,java.lang.String[],java.util.logging.Logger)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.https.SSLSocketFactoryWrapper:java.net.Socket createSocket()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.https.SSLSocketFactoryWrapper:java.net.Socket createSocket()"
        ]
    },
    "org.apache.cxf.transport.https.SSLSocketFactoryWrapper:java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.https.SSLSocketFactoryWrapper:java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean)"
        ]
    },
    "org.apache.cxf.transport.https.SSLSocketFactoryWrapper:java.net.Socket createSocket(java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.https.SSLSocketFactoryWrapper:java.net.Socket createSocket(java.lang.String,int)"
        ]
    },
    "org.apache.cxf.transport.https.SSLSocketFactoryWrapper:java.net.Socket createSocket(java.lang.String,int,java.net.InetAddress,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.https.SSLSocketFactoryWrapper:java.net.Socket createSocket(java.lang.String,int,java.net.InetAddress,int)"
        ]
    },
    "org.apache.cxf.transport.https.SSLSocketFactoryWrapper:java.net.Socket createSocket(java.net.InetAddress,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.https.SSLSocketFactoryWrapper:java.net.Socket createSocket(java.net.InetAddress,int)"
        ]
    },
    "org.apache.cxf.transport.https.SSLSocketFactoryWrapper:java.net.Socket createSocket(java.net.InetAddress,int,java.net.InetAddress,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.https.SSLSocketFactoryWrapper:java.net.Socket createSocket(java.net.InetAddress,int,java.net.InetAddress,int)"
        ]
    },
    "org.apache.cxf.transport.https.SSLSocketFactoryWrapper:void addLogHandler(java.util.logging.Handler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.https_jetty.JettySslConnectorFactory:org.mortbay.jetty.AbstractConnector createConnector(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine:void addServant(java.net.URL,org.apache.cxf.transport.http_jetty.JettyHTTPHandler)"
        ]
    },
    "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine$1:org.mortbay.jetty.AbstractConnector createConnector(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine:void addServant(java.net.URL,org.apache.cxf.transport.http_jetty.JettyHTTPHandler)"
        ]
    },
    "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void setBus(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineFactoryBeanDefinitionParser$SpringJettyHTTPServerEngineFactory:void setApplicationContext(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPTransportFactory:org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory getJettyHTTPServerEngineFactory()"
        ]
    },
    "org.apache.cxf.transport.jms.JMSConfiguration:javax.jms.ConnectionFactory getOrCreateWrappedConnectionFactory()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.jms.JMSFactory:org.springframework.jms.core.JmsTemplate createJmsTemplate(org.apache.cxf.transport.jms.JMSConfiguration,org.apache.cxf.transport.jms.JMSMessageHeadersType)",
            "org.apache.cxf.transport.jms.JMSFactory:org.springframework.jms.listener.DefaultMessageListenerContainer createJmsListener(org.apache.cxf.transport.jms.JMSConfiguration,javax.jms.MessageListener,java.lang.String,java.lang.String,boolean)",
            "org.apache.cxf.transport.jms.JMSConfiguration:void ensureProperlyConfigured(org.apache.cxf.common.i18n.Message)"
        ]
    },
    "org.apache.cxf.transport.jms.JMSDestination$1:java.lang.Object doInJms(javax.jms.Session)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.jms.JMSDestination:java.util.logging.Logger getLogger()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.AbstractDestination$AbstractBackChannelConduit:java.util.logging.Logger getLogger()",
            "org.apache.cxf.transport.AbstractObservable:void setMessageObserver(org.apache.cxf.transport.MessageObserver)",
            "org.apache.cxf.transport.jms.JMSDestination:void activate()",
            "org.apache.cxf.transport.jms.JMSDestination:void shutdown()",
            "org.apache.cxf.transport.jms.JMSDestination:void onMessage(javax.jms.Message)",
            "org.apache.cxf.transport.jms.JMSDestination:void sendExchange(org.apache.cxf.message.Exchange,java.lang.Object)"
        ]
    },
    "org.apache.cxf.transport.jms.JMSDestination:java.util.logging.Logger access$100()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.jms.JMSDestination$2:javax.jms.Message createMessage(javax.jms.Session)",
            "org.apache.cxf.transport.jms.JMSDestination$BackChannelConduit:java.util.logging.Logger getLogger()"
        ]
    },
    "org.apache.cxf.transport.jms.JMSDestination$BackChannelConduit:java.util.logging.Logger getLogger()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.AbstractObservable:void setMessageObserver(org.apache.cxf.transport.MessageObserver)"
        ]
    },
    "org.apache.cxf.transport.jms.JMSUtils:java.lang.String createCorrelationId(java.lang.String,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.jms.JMSConduit:void sendExchange(org.apache.cxf.message.Exchange,java.lang.Object)"
        ]
    },
    "org.apache.cxf.transport.jms.JMSConfigFeature:void checkJmsConfig()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.jms.JMSConfigFeature:void initialize(org.apache.cxf.endpoint.Client,org.apache.cxf.Bus)",
            "org.apache.cxf.transport.jms.JMSConfigFeature:void initialize(org.apache.cxf.endpoint.Server,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.transport.jms.JMSConduit:java.util.logging.Logger getLogger()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.AbstractObservable:void setMessageObserver(org.apache.cxf.transport.MessageObserver)",
            "org.apache.cxf.transport.jms.JMSConduit:void onMessage(javax.jms.Message)"
        ]
    },
    "org.apache.cxf.BusFactory:org.apache.cxf.BusFactory newInstance()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.servlet.CXFNonSpringServlet:void loadBusNoConfig(javax.servlet.ServletConfig)",
            "org.apache.cxf.BusFactory:org.apache.cxf.Bus getDefaultBus(boolean)"
        ]
    },
    "org.apache.cxf.BusFactory:void setDefaultBus(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.CXFBusImpl:void shutdown(boolean)"
        ]
    },
    "org.apache.cxf.BusFactory:void setThreadDefaultBus(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.MultipleEndpointObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.ChainInitiationObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.servlet.AbstractCXFServlet:void init(javax.servlet.ServletConfig)",
            "org.apache.cxf.transport.servlet.AbstractCXFServlet:void invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void doService(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.jms.continuations.JMSContinuation:void doResume()",
            "org.apache.cxf.transport.jms.JMSDestination:void onMessage(javax.jms.Message)",
            "org.apache.cxf.BusFactory:void setDefaultBus(org.apache.cxf.Bus)",
            "org.apache.cxf.endpoint.ClientImpl:void invoke(org.apache.cxf.endpoint.ClientCallback,org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[])",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.ClientImpl:void onMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.BusFactory:boolean possiblySetDefaultBus(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus finishCreatingBus(org.apache.cxf.bus.spring.BusApplicationContext)",
            "org.apache.cxf.bus.CXFBusFactory:org.apache.cxf.Bus createBus(java.util.Map,java.util.Map)",
            "org.apache.cxf.bus.CXFBusImpl:void <init>(java.util.Map)"
        ]
    },
    "org.apache.cxf.endpoint.AbstractEndpointFactory:org.apache.cxf.Bus getBus()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.frontend.spring.ServerFactoryBeanDefinitionParser$SpringServerFactoryBean:void setApplicationContext(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.frontend.ClientFactoryBean:void createClient(org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.frontend.ClientFactoryBean:void applyFeatures()",
            "org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory:org.apache.cxf.endpoint.Endpoint createEndpoint()",
            "org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory:void modifyTransportIdPerAddress(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory:void initializeServiceFactory()",
            "org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory:org.apache.cxf.service.model.EndpointInfo createEndpointInfo()",
            "org.apache.cxf.frontend.ServerFactoryBean:org.apache.cxf.endpoint.Server create()",
            "org.apache.cxf.frontend.ServerFactoryBean:void initializeServiceFactory()",
            "org.apache.cxf.frontend.ServerFactoryBean:void applyFeatures()",
            "org.apache.cxf.jaxws.spring.NamespaceHandler$SpringServerFactoryBean:void setApplicationContext(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.jaxws.JaxWsServerFactoryBean:void injectResources(java.lang.Object)"
        ]
    },
    "org.apache.cxf.jaxws.EndpointImpl:void <init>(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.endpoint.UpfrontConduitSelector:java.util.logging.Logger getLogger()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.AbstractConduitSelector:org.apache.cxf.transport.Conduit getSelectedConduit(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:org.apache.cxf.endpoint.ConduitSelector getConduitSelector(org.apache.cxf.endpoint.ConduitSelector)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:void <init>(org.apache.cxf.Bus,org.apache.cxf.endpoint.Endpoint,org.apache.cxf.endpoint.ConduitSelector)",
            "org.apache.cxf.endpoint.ClientImpl:org.apache.cxf.endpoint.ConduitSelector getConduitSelector()"
        ]
    },
    "org.apache.cxf.endpoint.DeferredConduitSelector:java.util.logging.Logger getLogger()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.AbstractConduitSelector:org.apache.cxf.transport.Conduit getSelectedConduit(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:org.apache.cxf.endpoint.dynamic.DynamicClientFactory newInstance(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:org.apache.cxf.endpoint.dynamic.DynamicClientFactory newInstance()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:void setupClasspath(java.lang.StringBuilder,java.lang.ClassLoader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:org.apache.cxf.endpoint.Client createClient(java.lang.String,javax.xml.namespace.QName,java.lang.ClassLoader,javax.xml.namespace.QName,java.util.List)"
        ]
    },
    "org.apache.cxf.ws.addressing.ContextUtils:org.apache.cxf.ws.addressing.AttributedURIType getAttributedURI(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.ContextUtils:void ensurePartialResponseMAPs(org.apache.cxf.message.Message,java.lang.String)",
            "org.apache.cxf.ws.addressing.ContextUtils:org.apache.cxf.ws.addressing.AttributedURIType getAction(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.addressing.MAPAggregator:org.apache.cxf.ws.addressing.AddressingPropertiesImpl assembleGeneric(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.addressing.MAPAggregator:void addRoleSpecific(org.apache.cxf.ws.addressing.AddressingPropertiesImpl,org.apache.cxf.message.Message,boolean,boolean)"
        ]
    },
    "org.apache.cxf.ws.addressing.ContextUtils:org.apache.cxf.ws.addressing.RelatesToType getRelatesTo(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.MAPAggregator:void addRoleSpecific(org.apache.cxf.ws.addressing.AddressingPropertiesImpl,org.apache.cxf.message.Message,boolean,boolean)"
        ]
    },
    "org.apache.cxf.ws.addressing.ContextUtils:javax.xml.bind.JAXBContext getJAXBContext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.VersionTransformer:javax.xml.bind.JAXBContext getExposedJAXBContext(java.lang.String)"
        ]
    },
    "org.apache.cxf.ws.addressing.ContextUtils:void setJAXBContext(javax.xml.bind.JAXBContext)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.addressing.ContextUtils:org.apache.cxf.ws.addressing.EndpointReferenceType getNoneEndpointReference()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.MAPAggregator:void addRoleSpecific(org.apache.cxf.ws.addressing.AddressingPropertiesImpl,org.apache.cxf.message.Message,boolean,boolean)"
        ]
    },
    "org.apache.cxf.ws.addressing.ContextUtils:void applyReferenceParam(org.apache.cxf.ws.addressing.EndpointReferenceType,javax.xml.bind.JAXBElement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void decodeReferenceParameters(java.util.Set,org.apache.cxf.ws.addressing.AddressingPropertiesImpl,javax.xml.bind.Unmarshaller)"
        ]
    },
    "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.ReferenceParametersType convert(org.apache.cxf.ws.addressing.v200408.ReferenceParametersType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.EndpointReferenceType convert(org.apache.cxf.ws.addressing.v200408.EndpointReferenceType)"
        ]
    },
    "org.apache.cxf.ws.addressing.VersionTransformer:javax.xml.bind.JAXBContext getExposedJAXBContext(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void encode(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.addressing.AddressingPropertiesImpl)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:org.apache.cxf.ws.addressing.AddressingProperties unmarshalMAPs(org.apache.cxf.binding.soap.SoapMessage)"
        ]
    },
    "org.apache.cxf.ws.addressing.soap.MAPCodec:void applyMAPValidation(org.apache.cxf.binding.soap.SoapMessage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void encode(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.addressing.AddressingPropertiesImpl)"
        ]
    },
    "org.apache.cxf.ws.addressing.soap.MAPCodec:void markPartialResponse(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.addressing.AddressingProperties)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void mediate(org.apache.cxf.binding.soap.SoapMessage)"
        ]
    },
    "org.apache.cxf.ws.rm.SourceSequence:void setTarget(org.apache.cxf.ws.addressing.EndpointReferenceType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.Servant:org.apache.cxf.ws.rm.CreateSequenceResponseType createSequence(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.RMManager:org.apache.cxf.ws.rm.SourceSequence getSequence(org.apache.cxf.ws.rm.Identifier,org.apache.cxf.message.Message,org.apache.cxf.ws.addressing.AddressingProperties)"
        ]
    },
    "org.apache.cxf.ws.rm.RMContextUtils:java.lang.String generateUUID()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.RMManager$DefaultSequenceIdentifierGenerator:org.apache.cxf.ws.rm.Identifier generateSequenceIdentifier()"
        ]
    },
    "org.apache.cxf.ws.addressing.policy.AddressingPolicyInterceptorProvider:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.policy.AddressingPolicyInterceptorProvider:void <init>()",
            "org.apache.cxf.ws.addressing.policy.AddressingPolicyInterceptorProvider:void <clinit>()"
        ]
    },
    "org.apache.cxf.ws.addressing.WSAddressingFeature:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.support.JaxWsEndpointImpl:void extractWsdlExtensibilities(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.jaxws.support.JaxWsEndpointImpl:void resolveFeatures()"
        ]
    },
    "org.apache.cxf.ws.rm.WrappedEndpoint:java.lang.Object get(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.MapNamespaceContext:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.helpers.HttpHeaderHelper:java.util.List getHeader(java.util.Map,java.lang.String)",
            "org.apache.cxf.helpers.HttpHeaderHelper:java.lang.String getHeaderKey(java.lang.String)",
            "org.apache.cxf.helpers.HttpHeaderHelper:java.lang.String mapCharset(java.lang.String)",
            "org.apache.cxf.helpers.XMLUtils:javax.xml.transform.TransformerFactory getTransformerFactory()",
            "org.apache.cxf.helpers.XMLUtils:javax.xml.parsers.DocumentBuilderFactory getDocumentBuilderFactory()",
            "org.apache.cxf.helpers.XMLUtils:javax.xml.namespace.QName getNamespace(java.util.Map,java.lang.String,java.lang.String)",
            "org.apache.cxf.common.xmlschema.FixedExtensionDeserializer:void deserialize(org.apache.ws.commons.schema.XmlSchemaObject,javax.xml.namespace.QName,org.w3c.dom.Node)",
            "org.apache.cxf.common.logging.Log4jLogger:void setLevel(java.util.logging.Level)",
            "org.apache.cxf.common.logging.Log4jLogger:void internalLogFormatted(java.lang.String,java.util.logging.LogRecord)",
            "org.apache.cxf.common.logging.Log4jLogger$HandlerWrapper:org.apache.log4j.Priority getThreshold()",
            "org.apache.cxf.common.util.ClassReader:void readAttributes()",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.common.util.ASMHelper:java.lang.String getClassCode(java.lang.Class)",
            "org.apache.cxf.common.util.ASMHelper:org.apache.cxf.common.util.ASMHelper$TypeHelperClassLoader getTypeHelperClassLoader(java.lang.Class)",
            "org.apache.cxf.common.util.ASMHelper$TypeHelperClassLoader:java.lang.Class lookupDefinedClass(java.lang.String)",
            "org.apache.cxf.common.util.CacheMap:void updateMainDataMap()",
            "org.apache.cxf.common.util.CacheMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.common.util.ParamReader:java.lang.String[] getParameterNames(java.lang.reflect.Member,java.lang.Class[])",
            "org.apache.cxf.common.util.ParamReader:org.apache.cxf.common.util.ParamReader$MethodInfo getMethodInfo()",
            "org.apache.cxf.common.util.TwoStageMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.resource.PropertiesResolver:java.lang.Object resolve(java.lang.String,java.lang.Class)",
            "org.apache.cxf.resource.URIResolver:void tryRemote(java.lang.String)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.util.List getBeanListForId(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void mapElementToJaxbProperty(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder,java.lang.String,java.lang.Class)",
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:java.lang.Object unmarshalFactoryString(java.lang.String,java.lang.Class)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void initWildcardDefinitionMap()",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureWithWildCard(java.lang.String,java.lang.Object)",
            "org.apache.cxf.jaxb.NamespaceMapper:java.lang.String getPreferredPrefix(java.lang.String,java.lang.String,boolean)",
            "org.apache.cxf.jaxb.JAXBUtils:java.lang.String builtInTypeToJavaType(java.lang.String)",
            "org.apache.cxf.jaxb.JAXBUtils:java.lang.Class holderClass(java.lang.String)",
            "org.apache.cxf.jaxb.JAXBDataBinding:org.apache.cxf.jaxb.JAXBDataBinding$CachedContextAndSchemas createJAXBContextAndSchemas(java.util.Set,java.lang.String)",
            "org.apache.cxf.jaxb.JAXBDataBinding:void scanPackages(java.util.Set)",
            "org.apache.cxf.jaxb.JAXBDataBinding$1:javax.xml.transform.Result createOutput(java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxb.WrapperHelperCompiler:boolean addCreateWrapperObject(java.lang.String,java.lang.Class)",
            "org.apache.cxf.jaxb.WrapperHelperCompiler:void createObjectWrapper(org.objectweb.asm.MethodVisitor,java.lang.Class)",
            "org.apache.cxf.management.counters.CounterRepository:org.apache.cxf.management.counters.Counter getCounter(javax.management.ObjectName)",
            "org.apache.cxf.staxutils.AbstractDOMStreamReader:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.staxutils.W3CDOMStreamWriter:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.message.MessageImpl:java.lang.Object getContent(java.lang.Class)",
            "org.apache.cxf.message.MessageImpl:java.lang.Object getContextualProperty(java.lang.String)",
            "org.apache.cxf.headers.HeaderManagerImpl:org.apache.cxf.headers.HeaderProcessor getHeaderProcessor(java.lang.String)",
            "org.apache.cxf.interceptor.StaxOutInterceptor:javax.xml.stream.XMLOutputFactory getXMLOutputFactory(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:java.util.Map keepInOrder(java.util.Map,org.apache.cxf.service.model.OperationInfo,java.util.List)",
            "org.apache.cxf.interceptor.URIMappingInterceptor:org.apache.cxf.message.MessageContentsList getParameters(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.interceptor.ClientOutFaultObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxInInterceptor:javax.xml.stream.XMLInputFactory getXMLInputFactory(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.FIStaxOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.ConduitInitiatorManagerImpl:org.apache.cxf.transport.ConduitInitiator getConduitInitiator(java.lang.String)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void writeResponse(java.lang.String,java.lang.String,org.apache.cxf.service.model.EndpointInfo,java.io.OutputStream)",
            "org.apache.cxf.transport.http.DigestAuthSupplier:java.lang.String getPreemptiveAuthorization(org.apache.cxf.transport.http.HTTPConduit,java.net.URL,org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:void transferProtocolHeadersToURLConnection(org.apache.cxf.message.Message,java.net.URLConnection)",
            "org.apache.cxf.transport.http.HTTPConduit:void logProtocolHeaders(java.util.logging.Level,org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:java.lang.String extractAuthorizationRealm(java.util.Map)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void copyRequestHeaders(org.apache.cxf.message.Message,java.util.Map)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void copyResponseHeaders(org.apache.cxf.message.Message,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:java.lang.String getId(java.util.Map)",
            "org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream:void handleResponseInternal()",
            "org.apache.cxf.transport.http.gzip.GZIPOutInterceptor:void addHeader(org.apache.cxf.message.Message,java.lang.String,java.lang.String)",
            "org.apache.cxf.transport.AbstractMultiplexDestination:java.lang.String getId(java.util.Map)",
            "org.apache.cxf.transport.DestinationFactoryManagerImpl:org.apache.cxf.transport.DestinationFactory getDestinationFactory(java.lang.String)",
            "org.apache.cxf.transport.servlet.ServletContextResourceResolver:java.io.InputStream getAsStream(java.lang.String)",
            "org.apache.cxf.transport.servlet.ServletContextResourceResolver:java.lang.Object resolve(java.lang.String,java.lang.Class)",
            "org.apache.cxf.transport.servlet.ServletTransportFactory:org.apache.cxf.transport.servlet.ServletDestination getDestinationForPath(java.lang.String)",
            "org.apache.cxf.transport.servlet.AbstractCXFServlet:void init(javax.servlet.ServletConfig)",
            "org.apache.cxf.transport.http_jetty.spring.JettyHTTPServerEngineBeanDefinitionParser$SpringJettyHTTPServerEngine:void finalizeConfig()",
            "org.apache.cxf.transport.http_jetty.JettyHTTPTransportFactory:org.apache.cxf.transport.Destination getDestination(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPTransportFactory:org.apache.cxf.transport.http_jetty.JettyHTTPDestination createDestination(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine retrieveJettyHTTPServerEngine(int)",
            "org.apache.cxf.transport.jms.JMSUtils:void addContentTypeToProtocolHeader(org.apache.cxf.message.Message)",
            "org.apache.cxf.NSManager:java.lang.String getPrefixFromNS(java.lang.String)",
            "org.apache.cxf.extension.RegistryImpl:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.endpoint.ClientImpl:java.util.Map getRequestContext()",
            "org.apache.cxf.endpoint.ClientImpl:java.util.Map getResponseContext()",
            "org.apache.cxf.endpoint.ClientImpl:boolean isThreadLocalRequestContext()",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.ClientImpl:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.addressing.ContextUtils:java.lang.String getActionFromServiceModel(org.apache.cxf.message.Message,java.lang.Exception)",
            "org.apache.cxf.ws.addressing.ContextUtils:java.lang.String getAction(org.apache.cxf.service.model.Extensible)",
            "org.apache.cxf.ws.addressing.MAPAggregator:boolean hasUsingAddressing(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.addressing.MAPAggregator:boolean validateIncomingMAPs(org.apache.cxf.ws.addressing.AddressingProperties,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void propogateAction(org.apache.cxf.ws.addressing.AttributedURIType,org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void restoreExchange(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.addressing.AddressingProperties)",
            "org.apache.cxf.ws.policy.PolicyRegistryImpl:org.apache.neethi.Policy lookup(java.lang.String)",
            "org.apache.cxf.ws.security.policy.interceptors.HttpsTokenInterceptorProvider$HttpsTokenInInterceptor:void assertHttps(java.util.Collection,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.policy.interceptors.HttpsTokenInterceptorProvider$HttpsTokenOutInterceptor:void assertHttps(java.util.Collection,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.trust.STSClient:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:org.apache.cxf.ws.security.tokenstore.SecurityToken getToken(java.lang.String)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:org.apache.ws.security.components.crypto.Crypto getCrypto(org.apache.cxf.ws.security.policy.model.TokenWrapper,java.lang.String,java.lang.String)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:java.util.Properties getProps(java.lang.Object,org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor:void <init>(java.util.Map)",
            "org.apache.cxf.ws.security.wss4j.AbstractWSS4JInterceptor:java.lang.Object getOption(java.lang.String)",
            "org.apache.cxf.ws.security.wss4j.AbstractWSS4JInterceptor:org.apache.ws.security.components.crypto.Crypto loadSignatureCrypto(org.apache.ws.security.handler.RequestData)",
            "org.apache.cxf.ws.security.wss4j.AbstractWSS4JInterceptor:org.apache.ws.security.components.crypto.Crypto loadDecryptionCrypto(org.apache.ws.security.handler.RequestData)",
            "org.apache.cxf.ws.security.wss4j.AbstractWSS4JInterceptor:org.apache.ws.security.components.crypto.Crypto loadEncryptionCrypto(org.apache.ws.security.handler.RequestData)",
            "org.apache.cxf.ws.rm.Source:org.apache.cxf.ws.rm.SourceSequence getSequence(org.apache.cxf.ws.rm.Identifier)",
            "org.apache.cxf.ws.rm.Source:org.apache.cxf.ws.rm.SourceSequence getAssociatedSequence(org.apache.cxf.ws.rm.Identifier)",
            "org.apache.cxf.ws.rm.RMOutInterceptor:void handle(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.Destination:org.apache.cxf.ws.rm.DestinationSequence getSequence(org.apache.cxf.ws.rm.Identifier)",
            "org.apache.cxf.ws.rm.RMManager:org.apache.cxf.ws.rm.RMEndpoint getReliableEndpoint(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.RMManager:void shutdownReliableEndpoint(org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl:java.util.List getSequenceCandidates(java.lang.String)",
            "org.apache.cxf.ws.rm.WrappedEndpoint:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void add(org.apache.cxf.interceptor.Interceptor,boolean)",
            "org.apache.cxf.workqueue.WorkQueueManagerImpl:org.apache.cxf.workqueue.AutomaticWorkQueue getNamedWorkQueue(java.lang.String)",
            "org.apache.cxf.databinding.AbstractDataBinding:void updateSchemaLocation(org.w3c.dom.Element)",
            "org.apache.cxf.databinding.source.mime.MimeSerializer:void serialize(org.apache.ws.commons.schema.XmlSchemaObject,java.lang.Class,org.w3c.dom.Node)",
            "org.apache.cxf.wsdl.AbstractWSDLPlugin:java.lang.String getOption(java.util.Map,java.lang.String)",
            "org.apache.cxf.wsdl.AbstractWSDLPlugin:java.lang.Object getOption(java.util.Map,java.lang.String,java.lang.Class)",
            "org.apache.cxf.wsdl.AbstractWSDLPlugin:java.lang.Object getOption(java.util.Map,java.lang.Class)",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:int getIndentLevel(java.lang.Class)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:java.lang.String getWSDLLocation(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:java.lang.String getEndpointReferenceId(java.util.Map)",
            "org.apache.cxf.service.model.BindingOperationInfo:org.apache.cxf.service.model.BindingFaultInfo getFault(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.AbstractMessageContainer:void addMessagePart(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePart(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:java.lang.Object getExtensionAttribute(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperationForWrapperElement(org.apache.cxf.message.Exchange,javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.service.model.InterfaceInfo:org.apache.cxf.service.model.OperationInfo getOperation(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.MessageInfo getMessage(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.MessageInfo:java.util.List getOrderedParts(java.util.List)",
            "org.apache.cxf.service.model.BindingInfo:org.apache.cxf.service.model.BindingOperationInfo getOperation(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.OperationInfo:org.apache.cxf.service.model.FaultInfo getFault(javax.xml.namespace.QName)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void addImport(org.apache.ws.commons.schema.XmlSchema,java.lang.String)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isWrapped(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isRPC(java.lang.reflect.Method)",
            "org.apache.cxf.binding.BindingFactoryManagerImpl:org.apache.cxf.binding.BindingFactory getBindingFactory(java.lang.String)",
            "org.apache.cxf.binding.soap.SoapBindingFactory:void addListener(org.apache.cxf.transport.Destination,org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.binding.soap.interceptor.SoapActionInInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.SoapVersionFactory:org.apache.cxf.binding.soap.SoapVersion getSoapVersion(java.lang.String)",
            "org.apache.cxf.clustering.AbstractStaticFailoverStrategy:java.util.List getAlternateEndpoints(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.clustering.FailoverTargetSelector:void complete(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.clustering.FailoverTargetSelector:void overrideAddressProperty(java.util.Map)",
            "org.apache.cxf.tools.common.Tag:boolean equals(java.lang.Object)",
            "org.apache.cxf.tools.common.ToolContext:void addParameters(java.util.Map)",
            "org.apache.cxf.tools.common.ToolContext:java.lang.Object get(java.lang.String)",
            "org.apache.cxf.tools.common.ToolContext:java.lang.String mapNamespaceToPackageName(java.lang.String)",
            "org.apache.cxf.tools.common.ToolContext:java.lang.String getExcludePackageName(java.lang.String)",
            "org.apache.cxf.tools.common.VelocityGenerator:void doWrite(java.lang.String,java.io.Writer)",
            "org.apache.cxf.tools.common.ProcessorTestBase:boolean assertXmlEquals(java.io.File,java.io.File,java.util.List)",
            "org.apache.cxf.tools.common.ProcessorTestBase:void assertAttributesEquals(javax.xml.namespace.QName,java.util.Map,java.util.Map,java.util.Collection)",
            "org.apache.cxf.tools.common.model.JavaType:java.lang.String getDefaultTypeValue()",
            "org.apache.cxf.tools.common.model.JavaMethod:boolean isEquiv(java.lang.String,java.lang.String)",
            "org.apache.cxf.tools.common.model.JavaParameter:org.apache.cxf.tools.common.model.JAnnotation getAnnotation(java.lang.String)",
            "org.apache.cxf.tools.util.BuiltInTypesJavaMappingUtil:java.lang.String getJType(java.lang.String,java.lang.String)",
            "org.apache.cxf.tools.util.SOAPBindingUtil:java.lang.String getBindingAnnotation(java.lang.String)",
            "org.apache.cxf.tools.util.PropertyUtil:java.lang.String getProperty(java.lang.String)",
            "org.apache.cxf.tools.util.ClassCollector:java.lang.String getTypesFullClassName(java.lang.String,java.lang.String)",
            "org.apache.cxf.wsdl11.SchemaUtil:void extractSchema(javax.wsdl.Definition,org.apache.cxf.common.xmlschema.SchemaCollection,java.util.List)",
            "org.apache.cxf.wsdl11.SchemaUtil:void addSchema(java.lang.String,javax.wsdl.extensions.schema.Schema)",
            "org.apache.cxf.wsdl11.SchemaUtil:boolean isSchemaParsed(java.lang.String,java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:java.util.Collection getImports(javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addExtensibilityAttributes(javax.wsdl.extensions.AttributeExtensible,java.util.Map)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(java.net.URL)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(org.w3c.dom.Element)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:org.apache.cxf.service.model.ServiceSchemaInfo getSchemasForDefinition(javax.wsdl.Definition)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void activateViaNS(java.lang.String)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void processExtension(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadAndRegister(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:java.lang.Object getExtension(java.lang.String,java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void <init>(java.util.Map,java.util.Map)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:java.lang.String getBusId(java.util.Map)",
            "org.apache.cxf.bus.CXFBusImpl:java.lang.Object getExtension(java.lang.Class)",
            "org.apache.cxf.attachment.AttachmentImpl:java.lang.String getHeader(java.lang.String)",
            "org.apache.cxf.frontend.ClientFactoryBean:void applyExtraClass()",
            "org.apache.cxf.frontend.ClientFactoryBean:void applyProperties(org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.frontend.SimpleMethodDispatcher:org.apache.cxf.service.model.BindingOperationInfo getBindingOperation(java.lang.reflect.Method,org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.frontend.SimpleMethodDispatcher:java.lang.reflect.Method getMethod(org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.frontend.SimpleMethodDispatcher:java.lang.reflect.Method getPrimaryMethod(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory:org.apache.cxf.endpoint.Endpoint createEndpoint()",
            "org.apache.cxf.frontend.ServerFactoryBean:void applyExtraClass()",
            "org.apache.cxf.aegis.Context:java.lang.Object getProperty(java.lang.Class)",
            "org.apache.cxf.aegis.util.jdom.StaxBuilder:void buildTree(org.jdom.JDOMFactory,javax.xml.stream.XMLStreamReader,org.jdom.Document)",
            "org.apache.cxf.aegis.util.jdom.StaxBuilder:int resolveAttrType(java.lang.String)",
            "org.apache.cxf.aegis.util.stax.JDOMStreamWriter:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.aegis.util.stax.JDOMStreamReader:java.lang.String getDeclaredURI(java.lang.String)",
            "org.apache.cxf.aegis.databinding.XMLStreamDataWriter:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.aegis.databinding.ElementDataWriter:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:org.apache.cxf.aegis.type.Type getType(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.aegis.type.basic.XMLBeanTypeInfo:org.apache.cxf.aegis.type.basic.BeanTypePropertyInfo getPropertyInfo(javax.xml.namespace.QName)",
            "org.apache.cxf.aegis.type.basic.BeanType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.aegis.type.basic.InterfaceInvocationHandler:java.lang.Object readProperty(java.lang.Object)",
            "org.apache.cxf.aegis.type.basic.BeanTypeInfo:org.apache.cxf.aegis.type.Type getType(javax.xml.namespace.QName)",
            "org.apache.cxf.aegis.type.basic.BeanTypeInfo:javax.xml.namespace.QName getMappedTypeName(javax.xml.namespace.QName)",
            "org.apache.cxf.aegis.type.basic.BeanTypeInfo:java.lang.String getPropertyNameFromMappedName(javax.xml.namespace.QName)",
            "org.apache.cxf.aegis.type.encoded.MarshalRegistry:java.lang.String getInstanceId(java.lang.Object)",
            "org.apache.cxf.aegis.type.XMLTypeCreator:org.w3c.dom.Document getDocument(java.lang.Class)",
            "org.apache.cxf.aegis.type.DefaultTypeMapping:org.apache.cxf.aegis.type.Type getType(java.lang.Class)",
            "org.apache.cxf.aegis.type.DefaultTypeMapping:org.apache.cxf.aegis.type.Type getType(javax.xml.namespace.QName)",
            "org.apache.cxf.aegis.type.DefaultTypeMapping:javax.xml.namespace.QName getTypeQName(java.lang.Class)",
            "org.apache.cxf.jaxws.handler.HandlerResolverImpl:java.util.List getHandlerChain(javax.xml.ws.handler.PortInfo)",
            "org.apache.cxf.jaxws.handler.InitParamResourceResolver:java.lang.Object resolve(java.lang.String,java.lang.Class)",
            "org.apache.cxf.jaxws.support.JaxWsServiceConfiguration:javax.jws.WebParam getWebParam(java.lang.reflect.Method,int)",
            "org.apache.cxf.jaxws.support.JaxWsServiceConfiguration:java.lang.Class getResponseWrapper(java.lang.reflect.Method)",
            "org.apache.cxf.jaxws.support.JaxWsServiceConfiguration:java.lang.Class getRequestWrapper(java.lang.reflect.Method)",
            "org.apache.cxf.jaxws.JaxWsClientProxy:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])",
            "org.apache.cxf.jaxws.ServiceImpl:java.lang.Object createPort(javax.xml.namespace.QName,org.apache.cxf.ws.addressing.EndpointReferenceType,java.lang.Class,javax.xml.ws.WebServiceFeature[])",
            "org.apache.cxf.jaxws.ServiceImpl:org.apache.cxf.jaxws.handler.PortInfoImpl getPortInfo(javax.xml.namespace.QName)",
            "org.apache.cxf.jaxws.EndpointImpl:void checkProperties()",
            "org.apache.cxf.jaxws.DispatchImpl:java.lang.Object invoke(java.lang.Object,boolean)",
            "org.apache.cxf.jaxws.DispatchImpl:java.util.concurrent.Future invokeAsync(java.lang.Object,javax.xml.ws.AsyncHandler)",
            "org.apache.cxf.jaxws.interceptors.SwAOutInterceptor:boolean callSWARefMethod(javax.xml.bind.JAXBContext)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:void <init>(java.util.Map,org.apache.cxf.message.Exchange,javax.xml.ws.handler.MessageContext$Scope)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:void copyScoped(java.util.Map)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:java.lang.String mapKey(java.lang.String)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:java.lang.String mapKeyReverse(java.lang.String)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:java.lang.Object put(java.lang.String,java.lang.Object,javax.xml.ws.handler.MessageContext$Scope)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:javax.xml.ws.handler.MessageContext$Scope getScope(java.lang.String)",
            "org.apache.cxf.jaxws.AbstractJAXWSMethodInvoker:void updateWebServiceContext(org.apache.cxf.message.Exchange,javax.xml.ws.handler.MessageContext)",
            "org.apache.cxf.xmlbeans.XmlBeansSchemaInitializer:org.apache.ws.commons.schema.XmlSchema getSchema(org.apache.xmlbeans.SchemaTypeSystem,java.lang.String)",
            "org.apache.cxf.xmlbeans.XmlBeansSchemaInitializer:void mapClass(org.apache.cxf.service.model.MessagePartInfo,java.lang.Class)",
            "org.apache.cxf.xmlbeans.tools.XMLBeansSchemaTypeUtils:java.lang.String getNaturalJavaClassName(org.apache.xmlbeans.SchemaType)"
        ]
    },
    "org.apache.cxf.ws.rm.WrappedEndpoint:java.lang.Object put(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.WrappedEndpoint:java.lang.Object put(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cxf.ws.addressing.soap.MAPCodec:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.policy.AddressingPolicyInterceptorProvider:void <clinit>()",
            "org.apache.cxf.ws.addressing.WSAddressingFeature:void <init>()"
        ]
    },
    "org.apache.cxf.ws.addressing.soap.MAPCodec:java.util.Set getUnderstoodHeaders()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.soap.interceptor.MustUnderstandInterceptor:void initServiceSideInfo(java.util.Set,org.apache.cxf.binding.soap.SoapMessage,java.util.Set)"
        ]
    },
    "org.apache.cxf.ws.policy.PolicyEngineImpl:void removeBusInterceptors()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.PolicyEngineImpl:void setEnabled(boolean)"
        ]
    },
    "org.apache.cxf.ws.policy.PolicyEngineImpl:org.apache.cxf.ws.policy.EffectivePolicyImpl createOutPolicyInfo()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.PolicyEngineImpl:org.apache.cxf.ws.policy.EffectivePolicy getEffectiveClientRequestPolicy(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.transport.Conduit)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:org.apache.cxf.ws.policy.EffectivePolicy getEffectiveServerResponsePolicy(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.transport.Destination)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:org.apache.cxf.ws.policy.EffectivePolicy getEffectiveServerFaultPolicy(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.service.model.BindingFaultInfo,org.apache.cxf.transport.Destination)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:org.apache.cxf.ws.policy.EffectivePolicy getEffectiveServerRequestPolicy(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:org.apache.cxf.ws.policy.EffectivePolicy getEffectiveClientResponsePolicy(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.ws.policy.PolicyEngineImpl:org.apache.cxf.ws.policy.EffectivePolicy getEffectiveClientFaultPolicy(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.service.model.BindingFaultInfo)"
        ]
    },
    "org.apache.cxf.ws.security.policy.builders.AlgorithmSuiteBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.AssertionBuilderRegistryImpl:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.security.policy.builders.TransportBindingBuilder:void processAlternative(org.w3c.dom.Element,org.apache.cxf.ws.security.policy.model.TransportBinding,org.apache.cxf.ws.security.policy.SPConstants)"
        ]
    },
    "org.apache.cxf.ws.security.policy.model.AlgorithmSuite:void setAlgorithmSuite(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.policy.builders.AlgorithmSuiteBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)"
        ]
    },
    "org.apache.cxf.ws.security.policy.interceptors.SecureConversationTokenInterceptorProvider:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.policy.WSSecurityPolicyLoader:void registerProviders()"
        ]
    },
    "org.apache.cxf.ws.security.wss4j.WSS4JOutInterceptor:java.util.logging.Logger access$000()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.wss4j.WSS4JOutInterceptor$WSS4JOutInterceptorInternal:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)"
        ]
    },
    "org.apache.cxf.ws.security.wss4j.WSS4JOutInterceptor:java.util.logging.Logger access$100()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.wss4j.WSS4JOutInterceptor$WSS4JOutInterceptorInternal:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)"
        ]
    },
    "org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor:org.apache.ws.security.WSSecurityEngine getSecurityEngine()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)"
        ]
    },
    "org.apache.cxf.ws.rm.feature.RMFeature:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.rm.policy.RMPolicyInterceptorProvider:void <init>(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.rm.RMEndpoint:void <init>(org.apache.cxf.ws.rm.RMManager,org.apache.cxf.endpoint.Endpoint)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.RMManager:org.apache.cxf.ws.rm.RMEndpoint createReliableEndpoint(org.apache.cxf.endpoint.Endpoint)"
        ]
    },
    "org.apache.cxf.ws.rm.DestinationSequence:java.util.logging.Logger access$000()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.DestinationSequence$SequenceTermination:void run()",
            "org.apache.cxf.ws.rm.DestinationSequence$DeferredAcknowledgment:void run()"
        ]
    },
    "org.apache.cxf.ws.rm.RMManager:void initialise()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl:java.util.logging.Logger access$000()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl$2:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl$3:void resend(org.apache.cxf.message.Message,boolean)",
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl$ResendCandidate:void initiate(boolean)",
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl$ResendCandidate:void schedule()"
        ]
    },
    "org.apache.cxf.ws.rm.soap.SoapFaultFactory:org.apache.cxf.interceptor.Fault createFault(org.apache.cxf.ws.rm.SequenceFault)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.AbstractRMInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.ws.rm.RMManager:org.apache.cxf.ws.rm.BindingFaultFactory getBindingFaultFactory(org.apache.cxf.binding.Binding)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.AbstractRMInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.ws.rm.soap.SoapFaultFactory:void setDetail(org.apache.cxf.binding.soap.SoapFault,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.soap.SoapFaultFactory:org.apache.cxf.interceptor.Fault createSoap12Fault(org.apache.cxf.ws.rm.SequenceFault)"
        ]
    },
    "org.apache.cxf.ws.rm.soap.SoapFaultFactory:java.lang.String toString(org.apache.cxf.interceptor.Fault)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.AbstractRMInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.ws.rm.soap.RMSoapInterceptor:javax.xml.bind.JAXBContext getJAXBContext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.soap.RMSoapInterceptor:void encode(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.rm.RMProperties)",
            "org.apache.cxf.ws.rm.soap.RMSoapInterceptor:void encodeFault(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.rm.SequenceFault)",
            "org.apache.cxf.ws.rm.soap.RMSoapInterceptor:org.apache.cxf.ws.rm.RMProperties unmarshalRMProperties(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.rm.soap.RMSoapInterceptor:java.lang.Object decodeProperty(java.lang.Class,org.w3c.dom.Element,javax.xml.bind.Unmarshaller)"
        ]
    },
    "org.apache.cxf.ws.rm.soap.RMSoapInterceptor:java.lang.Object decodeProperty(java.lang.Class,org.w3c.dom.Element,javax.xml.bind.Unmarshaller)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.soap.RMSoapInterceptor:org.apache.cxf.ws.rm.RMProperties unmarshalRMProperties(org.apache.cxf.binding.soap.SoapMessage)"
        ]
    },
    "org.apache.cxf.ws.rm.DestinationSequence:void <init>(org.apache.cxf.ws.rm.Identifier,org.apache.cxf.ws.addressing.v200408.EndpointReferenceType,java.math.BigInteger,org.apache.cxf.ws.rm.SequenceAcknowledgement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.DestinationSequence:void <init>(org.apache.cxf.ws.rm.Identifier,org.apache.cxf.ws.addressing.v200408.EndpointReferenceType,org.apache.cxf.ws.rm.Destination)",
            "org.apache.cxf.ws.rm.persistence.jdbc.RMTxStore:java.util.Collection getDestinationSequences(java.lang.String)"
        ]
    },
    "org.apache.cxf.ws.rm.RMManager:org.apache.cxf.ws.rm.RMEndpoint createReliableEndpoint(org.apache.cxf.endpoint.Endpoint)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.RMManager:org.apache.cxf.ws.rm.RMEndpoint getReliableEndpoint(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.RMManager:void recoverReliableEndpoint(org.apache.cxf.endpoint.Endpoint,org.apache.cxf.transport.Conduit)"
        ]
    },
    "org.apache.cxf.ws.rm.RMEndpoint:javax.xml.validation.Schema getSchema()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.RMEndpoint:void createService()"
        ]
    },
    "org.apache.cxf.ws.rm.persistence.jdbc.RMTxStore:void removeDestinationSequence(org.apache.cxf.ws.rm.Identifier)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.Destination:void removeSequence(org.apache.cxf.ws.rm.DestinationSequence)"
        ]
    },
    "org.apache.cxf.ws.rm.persistence.jdbc.RMTxStore:void removeSourceSequence(org.apache.cxf.ws.rm.Identifier)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.Source:void removeSequence(org.apache.cxf.ws.rm.SourceSequence)"
        ]
    },
    "org.apache.cxf.ws.rm.persistence.jdbc.RMTxStore:void recursiveDelete(java.io.File,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.persistence.jdbc.RMTxStore:void deleteDatabaseFiles(java.lang.String,boolean)",
            "org.apache.cxf.ws.rm.persistence.jdbc.RMTxStore:void recursiveDelete(java.io.File,boolean)"
        ]
    },
    "org.apache.cxf.phase.PhaseInterceptorChain:org.apache.cxf.message.Message getCurrentMessage()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.phase.PhaseInterceptorChain:org.apache.cxf.phase.PhaseInterceptorChain cloneChain()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseChainCache:org.apache.cxf.phase.PhaseInterceptorChain getChain(java.util.SortedSet,java.util.List[])"
        ]
    },
    "org.apache.cxf.transport.AbstractDestination$AbstractBackChannelConduit:void <init>(org.apache.cxf.transport.AbstractDestination)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.AbstractHTTPDestination$BackChannelConduit:void <init>(org.apache.cxf.transport.http.AbstractHTTPDestination,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.cxf.transport.jms.JMSDestination:org.apache.cxf.transport.Conduit getInbuiltBackChannel(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.AbstractDestination:org.apache.cxf.transport.Conduit getBackChannel(org.apache.cxf.message.Message,org.apache.cxf.message.Message,org.apache.cxf.ws.addressing.EndpointReferenceType)"
        ]
    },
    "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.transform.Transformer getTransformer()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl.EndpointReferenceUtils:void setMetadata(org.apache.cxf.ws.addressing.EndpointReferenceType,java.util.List)"
        ]
    },
    "org.apache.cxf.wsdl.EndpointReferenceUtils:void setAddress(org.apache.cxf.ws.addressing.EndpointReferenceType,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.AbstractHTTPDestination:org.apache.cxf.ws.addressing.EndpointReferenceType getAddressWithId(java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:org.apache.cxf.ws.addressing.EndpointReferenceType getEndpointReference(java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:org.apache.cxf.ws.addressing.EndpointReferenceType getAnonymousEndpointReference()",
            "org.apache.cxf.service.model.EndpointInfo:void setAddress(java.lang.String)"
        ]
    },
    "org.apache.cxf.wsdl.EndpointReferenceUtils:org.apache.cxf.ws.addressing.EndpointReferenceType duplicate(org.apache.cxf.ws.addressing.EndpointReferenceType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.AbstractHTTPDestination:org.apache.cxf.ws.addressing.EndpointReferenceType getAddressWithId(java.lang.String)",
            "org.apache.cxf.transport.AbstractMultiplexDestination:org.apache.cxf.ws.addressing.EndpointReferenceType getAddressWithId(java.lang.String)"
        ]
    },
    "org.apache.cxf.wsdl.EndpointReferenceUtils:org.apache.cxf.ws.addressing.EndpointReferenceType getEndpointReference(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:void setUpDecoupledDestination()",
            "org.apache.cxf.ws.addressing.ContextUtils:void <clinit>()",
            "org.apache.cxf.service.model.EndpointInfo:void setAddress(java.lang.String)"
        ]
    },
    "org.apache.cxf.wsdl.EndpointReferenceUtils:org.apache.cxf.ws.addressing.EndpointReferenceType getEndpointReference(org.apache.cxf.ws.addressing.AttributedURIType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.soap.MAPCodec:org.apache.cxf.ws.addressing.AddressingProperties unmarshalMAPs(org.apache.cxf.binding.soap.SoapMessage)"
        ]
    },
    "org.apache.cxf.wsdl.EndpointReferenceUtils:org.apache.cxf.ws.addressing.EndpointReferenceType getAnonymousEndpointReference()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.AbstractDestination$AbstractBackChannelConduit:void <init>(org.apache.cxf.transport.AbstractDestination)",
            "org.apache.cxf.transport.jms.JMSDestination:org.apache.cxf.transport.Conduit getInbuiltBackChannel(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.addressing.ContextUtils:void ensurePartialResponseMAPs(org.apache.cxf.message.Message,java.lang.String)"
        ]
    },
    "org.apache.cxf.wsdl.EndpointReferenceUtils:java.util.logging.Logger access$000()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl.EndpointReferenceUtils$SchemaLSResourceResolver:org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.service.model.EndpointInfo:void setAddress(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.TransportURIResolver:org.xml.sax.InputSource resolve(java.lang.String,java.lang.String)",
            "org.apache.cxf.transport.http.AbstractHTTPTransportFactory$HttpEndpointInfo:void setAddress(java.lang.String)",
            "org.apache.cxf.transport.http.HTTPConduit:org.apache.cxf.transport.Destination getDestination(java.lang.String)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:org.apache.cxf.service.model.EndpointInfo getAddressValue(org.apache.cxf.service.model.EndpointInfo,boolean)",
            "org.apache.cxf.transport.servlet.ServletController:void updateDests(javax.servlet.http.HttpServletRequest)",
            "org.apache.cxf.transport.servlet.ServletController:void invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.servlet.ServletTransportFactory:org.apache.cxf.transport.Destination getDestination(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:java.lang.String updateEndpointAddress(java.lang.String)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void doService(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.ws.security.trust.STSUtils:org.apache.cxf.endpoint.Endpoint createSTSEndpoint(org.apache.cxf.Bus,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.neethi.Policy,javax.xml.namespace.QName)",
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl$1:org.apache.cxf.transport.Conduit selectConduit(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.RMEndpoint:void createEndpoint()",
            "org.apache.cxf.binding.soap.SoapTransportFactory$SoapEndpointInfo:void setAddress(java.lang.String)",
            "org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory:org.apache.cxf.endpoint.Endpoint createEndpoint()",
            "org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory:org.apache.cxf.service.model.EndpointInfo createEndpointInfo()",
            "org.apache.cxf.jaxws.ServiceImpl:org.apache.cxf.service.model.EndpointInfo createEndpointInfo(org.apache.cxf.service.factory.AbstractServiceFactoryBean,javax.xml.namespace.QName,org.apache.cxf.jaxws.handler.PortInfoImpl)",
            "org.apache.cxf.jaxws.EndpointImpl:void doPublish(java.lang.String)"
        ]
    },
    "org.apache.cxf.service.invoker.FactoryInvoker:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.invoker.FactoryInvoker:java.lang.Object getServiceObject(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.service.invoker.FactoryInvoker:void <clinit>()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.invoker.Invoker createInvoker()",
            "org.apache.cxf.frontend.ServerFactoryBean:org.apache.cxf.service.invoker.Invoker createInvoker()"
        ]
    },
    "org.apache.cxf.service.invoker.AbstractInvoker:java.lang.reflect.Method matchMethod(java.lang.reflect.Method,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.invoker.AbstractInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object)"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.invoker.Invoker createInvoker()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.Service create()"
        ]
    },
    "org.apache.cxf.frontend.ServerFactoryBean:org.apache.cxf.service.invoker.Invoker createInvoker()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.frontend.ServerFactoryBean:org.apache.cxf.endpoint.Server create()"
        ]
    },
    "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.InterfaceInfo createInterface(javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl11.WSDLServiceBuilder:void buildInterface(org.apache.cxf.service.model.ServiceInfo,javax.wsdl.PortType)"
        ]
    },
    "org.apache.cxf.binding.AbstractBindingFactory:org.apache.cxf.service.model.BindingInfo createBindingInfo(org.apache.cxf.service.model.ServiceInfo,java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void validateSchemas(org.apache.cxf.common.xmlschema.XmlSchemaValidationManager,org.apache.cxf.common.xmlschema.SchemaCollection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void validateServiceModel()"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.Class createArrayClass(java.lang.reflect.GenericArrayType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.Class createArrayClass(java.lang.reflect.GenericArrayType)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.Class getClass(java.lang.reflect.Type)"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.Class getClass(java.lang.reflect.Type)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.lang.Class createArrayClass(java.lang.reflect.GenericArrayType)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeParameter(org.apache.cxf.service.model.MessagePartInfo,java.lang.Class,java.lang.reflect.Type)"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:java.util.logging.Logger access$000()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean$1:boolean handleError(org.w3c.dom.DOMError)"
        ]
    },
    "org.apache.cxf.binding.soap.interceptor.Soap12FaultOutInterceptor$Soap12FaultOutInterceptorInternal:java.lang.String getLangCode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.soap.interceptor.Soap12FaultOutInterceptor$Soap12FaultOutInterceptorInternal:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)"
        ]
    },
    "org.apache.cxf.binding.soap.interceptor.Soap12FaultOutInterceptor:java.util.logging.Logger access$000()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.soap.interceptor.Soap12FaultOutInterceptor$Soap12FaultOutInterceptorInternal:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.Soap12FaultOutInterceptor$Soap12FaultOutInterceptorInternal:java.lang.String getLangCode()"
        ]
    },
    "org.apache.cxf.binding.soap.interceptor.MustUnderstandInterceptor:java.util.ResourceBundle access$000()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.soap.interceptor.MustUnderstandInterceptor$UltimateReceiverMustUnderstandInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)"
        ]
    },
    "org.apache.cxf.clustering.FailoverTargetSelector:java.util.logging.Logger getLogger()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.AbstractConduitSelector:org.apache.cxf.transport.Conduit getSelectedConduit(org.apache.cxf.message.Message)",
            "org.apache.cxf.clustering.FailoverTargetSelector:void complete(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.clustering.FailoverTargetSelector:void setStrategy(org.apache.cxf.clustering.FailoverStrategy)",
            "org.apache.cxf.clustering.FailoverTargetSelector:org.apache.cxf.clustering.FailoverStrategy getStrategy()",
            "org.apache.cxf.clustering.FailoverTargetSelector:boolean requiresFailover(org.apache.cxf.message.Exchange)"
        ]
    },
    "org.apache.cxf.tools.common.toolspec.ToolSpec:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.tools.common.toolspec.ToolSpec:void <init>(org.w3c.dom.Document)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.tools.common.VelocityGenerator:java.io.File parseOutputName(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.tools.common.VelocityGenerator:java.io.File parseOutputName(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.tools.common.toolspec.ToolSpec:org.apache.cxf.tools.common.toolspec.Tool getHandler()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.tools.common.toolspec.ToolSpec:org.apache.cxf.tools.common.toolspec.Tool getHandler(java.lang.ClassLoader)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.tools.common.toolspec.parser.Form:void getOptions(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.tools.common.toolspec.parser.Form:void <init>(org.w3c.dom.Element)"
        ]
    },
    "org.apache.cxf.tools.common.AbstractCXFToolContainer:void <init>(java.lang.String,org.apache.cxf.tools.common.toolspec.ToolSpec)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.tools.util.FileWriterUtil:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.tools.common.VelocityGenerator:java.io.File parseOutputName(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.tools.util.FileWriterUtil:java.io.Writer getWriter(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.tools.util.AnnotationUtil:java.net.URLClassLoader getClassLoader(java.lang.ClassLoader)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.tools.util.AnnotationUtil:java.lang.Class loadClass(java.lang.String,java.lang.ClassLoader)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.tools.util.AnnotationUtil:javax.jws.WebParam getWebParam(java.lang.reflect.Method,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.catalog.OASISCatalogManager:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.catalog.OASISCatalogManager:org.apache.cxf.catalog.OASISCatalogManager getContextCatalog()"
        ]
    },
    "org.apache.cxf.catalog.OASISCatalogManager:java.lang.Object getResolver()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.catalog.OASISCatalogManager:void <init>()"
        ]
    },
    "org.apache.cxf.bus.spring.BusApplicationContext:void setEntityResolvers(org.springframework.beans.factory.xml.XmlBeanDefinitionReader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.BusApplicationContext:void initBeanDefinitionReader(org.springframework.beans.factory.xml.XmlBeanDefinitionReader)"
        ]
    },
    "org.apache.cxf.frontend.ClientProxyFactoryBean:org.apache.cxf.frontend.ClientProxy clientClientProxy(org.apache.cxf.endpoint.Client)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.frontend.ClientProxyFactoryBean:java.lang.Object create()"
        ]
    },
    "org.apache.cxf.aegis.AegisElementDataReader:void <init>(org.apache.cxf.aegis.AegisContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.databinding.ElementDataReader:void <init>(org.apache.cxf.aegis.databinding.AegisDatabinding)",
            "org.apache.cxf.aegis.AegisContext:org.apache.cxf.aegis.AegisReader createDomElementReader()"
        ]
    },
    "org.apache.cxf.aegis.AegisContext:org.apache.cxf.aegis.AegisReader createXMLStreamReader()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.aegis.AegisContext:org.apache.cxf.aegis.AegisWriter createXMLStreamWriter()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.aegis.AegisElementDataWriter:void <init>(org.apache.cxf.aegis.AegisContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.AegisContext:org.apache.cxf.aegis.AegisWriter createDomElementWriter()"
        ]
    },
    "org.apache.cxf.jaxws.handler.AnnotationHandlerChainBuilder:javax.xml.bind.JAXBContext getContextForPortComponentHandlerType()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.handler.AnnotationHandlerChainBuilder:void processHandlerElement(org.w3c.dom.Element,java.util.List)"
        ]
    },
    "org.apache.cxf.jaxws.handler.AnnotationHandlerChainBuilder:java.util.ResourceBundle access$000()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.handler.AnnotationHandlerChainBuilder$HandlerChainAnnotation:void validate()"
        ]
    },
    "org.apache.cxf.jaxws.handler.AnnotationHandlerChainBuilder$HandlerChainAnnotation:void validate()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.handler.AnnotationHandlerChainBuilder:java.util.List buildHandlerChainFromClass(java.lang.Class,java.util.List,javax.xml.namespace.QName,javax.xml.namespace.QName,java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxws.handler.logical.LogicalMessageContextImpl:javax.xml.ws.LogicalMessage getMessage()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.handler.logical.LogicalHandlerInInterceptor:javax.xml.namespace.QName getOpQName(org.apache.cxf.message.Exchange,java.lang.Object)"
        ]
    },
    "org.apache.cxf.jaxws.EndpointUtils:boolean hasWebServiceAnnotation(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.EndpointUtils:boolean hasWebServiceAnnotation(java.lang.Class)",
            "org.apache.cxf.jaxws.EndpointUtils:boolean isValidImplementor(java.lang.Object)"
        ]
    },
    "org.apache.cxf.jaxws.EndpointReferenceBuilder:javax.xml.ws.EndpointReference getEndpointReference()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.EndpointReferenceBuilder:javax.xml.ws.EndpointReference getEndpointReference(java.lang.Class)",
            "org.apache.cxf.jaxws.JaxWsClientProxy:javax.xml.ws.EndpointReference getEndpointReference()",
            "org.apache.cxf.jaxws.DispatchImpl:javax.xml.ws.EndpointReference getEndpointReference()"
        ]
    },
    "org.apache.cxf.jaxws.ServiceImpl:javax.xml.namespace.QName getPortTypeName(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.ServiceImpl:java.lang.Object createPort(javax.xml.namespace.QName,org.apache.cxf.ws.addressing.EndpointReferenceType,java.lang.Class,javax.xml.ws.WebServiceFeature[])"
        ]
    },
    "org.apache.cxf.jaxws.EndpointImpl:void checkPublishPermission()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.EndpointImpl:void publish(java.lang.Object)",
            "org.apache.cxf.jaxws.EndpointImpl:void doPublish(java.lang.String)"
        ]
    },
    "org.apache.cxf.jaxws.spi.ProviderImpl:javax.xml.bind.JAXBContext getJAXBContext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.spi.ProviderImpl:javax.xml.ws.wsaddressing.W3CEndpointReference createW3CEndpointReference(java.lang.String,javax.xml.namespace.QName,javax.xml.namespace.QName,java.util.List,java.lang.String,java.util.List)",
            "org.apache.cxf.jaxws.spi.ProviderImpl:javax.xml.ws.EndpointReference readEndpointReference(javax.xml.transform.Source)"
        ]
    },
    "org.apache.cxf.jaxws.binding.soap.SOAPBindingImpl:void setRoles(java.util.Set)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxws.binding.soap.SOAPBindingImpl:javax.xml.soap.MessageFactory getMessageFactory()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.JaxWsClientProxy:javax.xml.soap.SOAPFault createSoapFault(javax.xml.ws.soap.SOAPBinding,java.lang.Exception)"
        ]
    },
    "org.apache.cxf.jaxws.binding.soap.SOAPBindingImpl:javax.xml.soap.SOAPFactory getSOAPFactory()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.JaxWsClientProxy:javax.xml.soap.SOAPFault createSoapFault(javax.xml.ws.soap.SOAPBinding,java.lang.Exception)"
        ]
    },
    "org.apache.cxf.jaxws.context.WebServiceContextResourceResolver:java.lang.Object resolve(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.resource.DefaultResourceManager:java.lang.Object findResource(java.lang.String,java.lang.Class,boolean,java.util.List)"
        ]
    },
    "org.apache.cxf.jaxws.context.WebServiceContextImpl:void <init>(javax.xml.ws.handler.MessageContext)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxws.context.WebServiceContextImpl:javax.xml.ws.handler.MessageContext getMessageContext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.context.WebServiceContextImpl:java.security.Principal getUserPrincipal()",
            "org.apache.cxf.jaxws.context.WebServiceContextImpl:boolean isUserInRole(java.lang.String)",
            "org.apache.cxf.jaxws.context.WebServiceContextImpl:javax.xml.ws.EndpointReference getEndpointReference(org.w3c.dom.Element[])"
        ]
    },
    "org.apache.cxf.jaxws.context.WebServiceContextImpl:javax.xml.ws.EndpointReference getEndpointReference(java.lang.Class,org.w3c.dom.Element[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxws.context.WebServiceContextImpl:void setMessageContext(javax.xml.ws.handler.MessageContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.handler.HandlerChainInvoker:boolean invokeHandlerChain(java.util.List,javax.xml.ws.handler.MessageContext)",
            "org.apache.cxf.jaxws.handler.HandlerChainInvoker:boolean invokeHandlerChainHandleFault(java.util.List,javax.xml.ws.handler.MessageContext)",
            "org.apache.cxf.jaxws.JAXWSMethodInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object,java.lang.reflect.Method,java.util.List)",
            "org.apache.cxf.jaxws.context.WebServiceContextImpl:void <init>(javax.xml.ws.handler.MessageContext)"
        ]
    },
    "org.apache.cxf.jaxws.context.WebServiceContextImpl:void clear()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.handler.HandlerChainInvoker:boolean invokeHandlerChain(java.util.List,javax.xml.ws.handler.MessageContext)",
            "org.apache.cxf.jaxws.handler.HandlerChainInvoker:boolean invokeHandlerChainHandleFault(java.util.List,javax.xml.ws.handler.MessageContext)",
            "org.apache.cxf.jaxws.JAXWSMethodInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object,java.lang.reflect.Method,java.util.List)"
        ]
    },
    "org.apache.cxf.xmlbeans.XmlBeansDataBinding:org.apache.cxf.databinding.DataWriter createWriter(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.FaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:org.apache.cxf.databinding.DataWriter getDataWriter(org.apache.cxf.message.Message,org.apache.cxf.service.Service,java.lang.Class)",
            "org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor:void writeSoapEnvelopeStart(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.interceptor.SoapOutInterceptor:org.apache.cxf.databinding.DataWriter getDataWriter(org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.interceptors.WebFaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.xmlbeans.NodeDataWriterImpl:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.xmlbeans.XmlBeansDataBinding:org.apache.cxf.databinding.DataWriter createWriter(java.lang.Class)"
        ]
    },
    "org.apache.cxf.xmlbeans.XmlBeansDataBinding:java.lang.Class[] getSupportedReaderFormats()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.ClientFaultConverter:boolean isDOMSupported(org.apache.cxf.databinding.DataBinding)",
            "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:boolean supportsDataReader(org.apache.cxf.message.Message,java.lang.Class)"
        ]
    },
    "org.apache.cxf.xmlbeans.XmlBeansDataBinding:java.lang.Class[] getSupportedWriterFormats()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.FaultOutInterceptor:boolean isDOMSupported(org.apache.cxf.databinding.DataBinding)"
        ]
    },
    "org.apache.cxf.xmlbeans.XmlBeansDataBinding:org.apache.cxf.databinding.DataReader createReader(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.ClientFaultConverter:void processFaultDetail(org.apache.cxf.interceptor.Fault,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:org.apache.cxf.databinding.DataReader getDataReader(org.apache.cxf.message.Message,java.lang.Class)",
            "org.apache.cxf.binding.soap.interceptor.ReadHeadersInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.saaj.SAAJInInterceptor:void replaceHeaders(javax.xml.soap.SOAPMessage,org.apache.cxf.binding.soap.SoapMessage)"
        ]
    },
    "org.apache.cxf.phase.PhaseInterceptorChain:void reset()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.ContextUtils:void rebaseResponse(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.ws.addressing.AddressingProperties,org.apache.cxf.message.Message)",
            "org.apache.cxf.jaxws.handler.logical.LogicalHandlerFaultOutInterceptor$LogicalHandlerFaultOutEndingInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus createBus()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.servlet.CXFNonSpringServlet:void loadBusNoConfig(javax.servlet.ServletConfig)",
            "org.apache.cxf.transport.servlet.CXFServlet:void updateContext(javax.servlet.ServletConfig,org.springframework.context.ApplicationContext)",
            "org.apache.cxf.BusFactory:org.apache.cxf.Bus getDefaultBus(boolean)"
        ]
    },
    "org.apache.cxf.jaxb.JAXBContextInitializer:void checkForAdapter(java.lang.Class,java.lang.'annotation'.Annotation[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.JAXBContextInitializer:void begin(org.apache.cxf.service.model.MessagePartInfo)"
        ]
    },
    "org.apache.cxf.jaxws.spring.EndpointDefinitionParser$SpringEndpointImpl:void <init>(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxws.spring.EndpointDefinitionParser$SpringEndpointImpl:void <init>(org.apache.cxf.Bus,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxws.endpoint.dynamic.JaxWsDynamicClientFactory:org.apache.cxf.jaxws.endpoint.dynamic.JaxWsDynamicClientFactory newInstance()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.xmlschema.SchemaCollection:void addCrossImports()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void createSchemas(org.apache.cxf.service.Service,java.util.Set)"
        ]
    },
    "org.apache.cxf.common.xmlschema.SchemaCollection:void addCrossImportsSequence(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaSequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addCrossImportsType(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaType)",
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addCrossImports(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaContentModel)"
        ]
    },
    "org.apache.cxf.common.injection.ResourceInjector:void <init>(org.apache.cxf.resource.ResourceManager)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.invoker.PerRequestFactory:java.lang.Object create(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadAndRegister(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.jaxws.JaxWsProxyFactoryBean:void buildHandlerChain(org.apache.cxf.jaxws.JaxWsClientProxy)",
            "org.apache.cxf.jaxws.handler.HandlerResolverImpl:void configHandler(javax.xml.ws.handler.Handler)",
            "org.apache.cxf.jaxws.JaxWsServerFactoryBean:void injectResources(java.lang.Object)"
        ]
    },
    "org.apache.cxf.transport.TransportURIResolver:void <init>(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.catalog.CatalogXmlSchemaURIResolver:void <init>(org.apache.cxf.Bus)",
            "org.apache.cxf.catalog.CatalogWSDLLocator:void <init>(java.lang.String,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.wsdl.EndpointReferenceUtils$SchemaLSResourceResolver:void <init>(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl.EndpointReferenceUtils$SchemaLSResourceResolver:void <init>(java.util.Map,org.apache.cxf.wsdl.EndpointReferenceUtils$1)"
        ]
    },
    "org.apache.cxf.catalog.CatalogXmlSchemaURIResolver:void <init>(org.apache.cxf.catalog.OASISCatalogManager)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.catalog.CatalogXmlSchemaURIResolver:void <init>(org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.catalog.CatalogWSDLLocator:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.catalog.CatalogWSDLLocator:void <init>(java.lang.String,org.apache.cxf.catalog.OASISCatalogManager)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.interceptor.FaultOutInterceptor:boolean isDOMSupported(org.apache.cxf.databinding.DataBinding)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.FaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.ClientFaultConverter:boolean isDOMSupported(org.apache.cxf.databinding.DataBinding)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.ClientFaultConverter:void processFaultDetail(org.apache.cxf.interceptor.Fault,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:boolean supportsDataReader(org.apache.cxf.message.Message,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.soap.interceptor.SoapHeaderInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.jaxb.JAXBSchemaInitializer:org.apache.cxf.jaxb.JAXBBeanInfo getBeanInfo(java.lang.reflect.Type)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.JAXBSchemaInitializer:org.apache.cxf.jaxb.JAXBBeanInfo getBeanInfo(java.lang.reflect.Type)",
            "org.apache.cxf.jaxb.JAXBSchemaInitializer:void buildExceptionType(org.apache.cxf.service.model.MessagePartInfo,java.lang.Class)"
        ]
    },
    "org.apache.cxf.jaxb.JAXBSchemaInitializer:org.apache.cxf.jaxb.JAXBBeanInfo findFromTypeAdapter(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.JAXBSchemaInitializer:void begin(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.jaxb.JAXBSchemaInitializer:javax.xml.bind.'annotation'.adapters.XmlJavaTypeAdapter findFromTypeAdapter(java.lang.Class,java.lang.'annotation'.Annotation[])"
        ]
    },
    "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void initializeDefaultInterceptors()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:org.apache.cxf.service.Service create()"
        ]
    },
    "org.apache.cxf.transport.http.policy.HTTPServerAssertionBuilder:org.apache.cxf.ws.policy.builder.jaxb.JaxbAssertion buildAssertion()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.policy.HTTPServerAssertionBuilder:org.apache.cxf.ws.policy.PolicyAssertion buildCompatible(org.apache.cxf.ws.policy.PolicyAssertion,org.apache.cxf.ws.policy.PolicyAssertion)",
            "org.apache.cxf.ws.policy.builder.jaxb.JaxbAssertionBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.policy.builder.jaxb.JaxbAssertionBuilder:org.apache.cxf.ws.policy.PolicyAssertion buildCompatible(org.apache.cxf.ws.policy.PolicyAssertion,org.apache.cxf.ws.policy.PolicyAssertion)"
        ]
    },
    "org.apache.cxf.transport.http.policy.HTTPServerAssertionBuilder$HTTPServerPolicyAssertion:org.apache.cxf.ws.policy.PolicyAssertion cloneMandatory()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.builder.primitive.PrimitiveAssertion:org.apache.neethi.PolicyComponent normalize()"
        ]
    },
    "org.apache.cxf.transport.http.policy.HTTPClientAssertionBuilder:org.apache.cxf.ws.policy.builder.jaxb.JaxbAssertion buildAssertion()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.builder.jaxb.JaxbAssertionBuilder:org.apache.cxf.ws.policy.PolicyAssertion build(org.w3c.dom.Element)",
            "org.apache.cxf.ws.policy.builder.jaxb.JaxbAssertionBuilder:org.apache.cxf.ws.policy.PolicyAssertion buildCompatible(org.apache.cxf.ws.policy.PolicyAssertion,org.apache.cxf.ws.policy.PolicyAssertion)"
        ]
    },
    "org.apache.cxf.transport.http.policy.HTTPClientAssertionBuilder$HTTPClientPolicyAssertion:org.apache.cxf.ws.policy.PolicyAssertion cloneMandatory()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.policy.builder.primitive.PrimitiveAssertion:org.apache.neethi.PolicyComponent normalize()"
        ]
    },
    "org.apache.cxf.transport.AbstractDestination$AbstractBackChannelConduit:java.util.logging.Logger getLogger()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.AbstractObservable:void setMessageObserver(org.apache.cxf.transport.MessageObserver)"
        ]
    },
    "org.apache.cxf.transport.http.AbstractHTTPTransportFactory:org.apache.cxf.transport.http.HttpURLConnectionFactory getConnectionFactory(org.apache.cxf.transport.http.HTTPConduit)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:void retrieveConnectionFactory()"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit:void retrieveConnectionFactory(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:org.apache.cxf.transport.http.HttpURLConnectionFactory getConnectionFactory(java.net.URL)"
        ]
    },
    "org.apache.cxf.transport.jms.JMSFactory:org.springframework.jms.core.JmsTemplate createJmsTemplate(org.apache.cxf.transport.jms.JMSConfiguration,org.apache.cxf.transport.jms.JMSMessageHeadersType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.jms.JMSFactory:org.springframework.jms.listener.DefaultMessageListenerContainer createJmsListener(org.apache.cxf.transport.jms.JMSConfiguration,javax.jms.MessageListener,java.lang.String,java.lang.String,boolean)",
            "org.apache.cxf.transport.jms.JMSDestination:void sendExchange(org.apache.cxf.message.Exchange,java.lang.Object)",
            "org.apache.cxf.transport.jms.JMSConduit:void sendExchange(org.apache.cxf.message.Exchange,java.lang.Object)"
        ]
    },
    "org.apache.cxf.transport.jms.JMSConfiguration:void ensureProperlyConfigured(org.apache.cxf.common.i18n.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.jms.JMSDestination:void activate()",
            "org.apache.cxf.transport.jms.JMSConduit:void prepare(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.bus.CXFBusImpl:void <init>(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void <init>(java.util.Map,java.util.Map)",
            "org.apache.cxf.bus.CXFBusImpl:void <init>()"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:org.apache.cxf.endpoint.ConduitSelector getConduitSelector()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:void <init>(org.apache.cxf.Bus,java.net.URL,javax.xml.namespace.QName,javax.xml.namespace.QName,org.apache.cxf.endpoint.EndpointImplFactory)",
            "org.apache.cxf.endpoint.ClientImpl:org.apache.cxf.endpoint.Endpoint getEndpoint()",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] processResult(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,java.util.Map)",
            "org.apache.cxf.endpoint.ClientImpl:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ClientImpl:org.apache.cxf.transport.Conduit getConduit()",
            "org.apache.cxf.endpoint.ClientImpl:void prepareConduitSelector(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ClientImpl:void setEndpoint(org.apache.cxf.endpoint.Endpoint)"
        ]
    },
    "org.apache.cxf.ws.rm.RMManager$DefaultSequenceIdentifierGenerator:org.apache.cxf.ws.rm.Identifier generateSequenceIdentifier()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.AbstractEndpoint:org.apache.cxf.ws.rm.Identifier generateSequenceIdentifier()"
        ]
    },
    "org.apache.cxf.ws.addressing.policy.AddressingPolicyInterceptorProvider:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.rm.WrappedEndpoint:java.lang.Object put(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.MapNamespaceContext:void addNamespace(java.lang.String,java.lang.String)",
            "org.apache.cxf.helpers.HttpHeaderHelper:java.lang.String mapCharset(java.lang.String)",
            "org.apache.cxf.helpers.HttpHeaderHelper:void <clinit>()",
            "org.apache.cxf.helpers.XMLUtils:javax.xml.transform.TransformerFactory getTransformerFactory()",
            "org.apache.cxf.helpers.XMLUtils:javax.xml.parsers.DocumentBuilderFactory getDocumentBuilderFactory()",
            "org.apache.cxf.common.xmlschema.FixedExtensionDeserializer:void deserialize(org.apache.ws.commons.schema.XmlSchemaObject,javax.xml.namespace.QName,org.w3c.dom.Node)",
            "org.apache.cxf.common.logging.Log4jLogger:void <clinit>()",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.common.util.ASMHelper:org.apache.cxf.common.util.ASMHelper$TypeHelperClassLoader getTypeHelperClassLoader(java.lang.Class)",
            "org.apache.cxf.common.util.ASMHelper:void <clinit>()",
            "org.apache.cxf.common.util.ASMHelper$TypeHelperClassLoader:java.lang.Class defineClass(java.lang.String,byte[])",
            "org.apache.cxf.common.util.CacheMap:void updateMainDataMap()",
            "org.apache.cxf.common.util.CacheMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.common.util.CacheMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.common.util.ParamReader:void readCode()",
            "org.apache.cxf.common.util.TwoStageMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.resource.URIResolver:void tryRemote(java.lang.String)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.util.List getBeanListForId(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractSpringBeanMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void mapElementToJaxbProperty(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder,java.lang.String,java.lang.Class)",
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:java.lang.Object unmarshalFactoryString(java.lang.String,java.lang.Class)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void initWildcardDefinitionMap()",
            "org.apache.cxf.jaxb.JAXBUtils:void <clinit>()",
            "org.apache.cxf.jaxb.JAXBDataBinding:void initialize(org.apache.cxf.service.Service)",
            "org.apache.cxf.jaxb.JAXBDataBinding:org.apache.cxf.jaxb.JAXBDataBinding$CachedContextAndSchemas createJAXBContextAndSchemas(java.util.Set,java.lang.String)",
            "org.apache.cxf.jaxb.JAXBDataBinding:void addToObjectFactoryCache(java.lang.Package,java.lang.Class)",
            "org.apache.cxf.jaxb.JAXBDataBinding$1:void <init>(org.apache.cxf.jaxb.JAXBDataBinding,java.util.List)",
            "org.apache.cxf.management.jmx.export.runtime.ModelMBeanInfoSupporter:void addModelMBeanMethod(java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String,java.lang.String,javax.management.Descriptor)",
            "org.apache.cxf.management.jmx.export.runtime.ModelMBeanInfoSupporter:void addModelMBeanNotification(java.lang.String[],java.lang.String,java.lang.String,javax.management.Descriptor)",
            "org.apache.cxf.management.jmx.export.runtime.ModelMBeanInfoSupporter:void addModelMBeanAttribute(java.lang.String,java.lang.String,boolean,boolean,boolean,java.lang.String,javax.management.Descriptor)",
            "org.apache.cxf.management.jmx.export.runtime.ModelMBeanInfoSupporter:void addModelMBeanConstructor(java.lang.reflect.Constructor,java.lang.String,javax.management.Descriptor)",
            "org.apache.cxf.management.counters.CounterRepository:void increaseCounter(javax.management.ObjectName,org.apache.cxf.management.counters.MessageHandlingTimeRecorder)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startPrefixMapping(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:void addNs(java.lang.String,java.lang.String)",
            "org.apache.cxf.message.MessageImpl:void setContent(java.lang.Class,java.lang.Object)",
            "org.apache.cxf.headers.HeaderManagerImpl:void registerHeaderProcessor(org.apache.cxf.headers.HeaderProcessor)",
            "org.apache.cxf.interceptor.StaxOutInterceptor:javax.xml.stream.XMLOutputFactory getXMLOutputFactory(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.FIStaxInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxInInterceptor:javax.xml.stream.XMLInputFactory getXMLInputFactory(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.FIStaxOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.ConduitInitiatorManagerImpl:void registerConduitInitiator(java.lang.String,org.apache.cxf.transport.ConduitInitiator)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void writeResponse(java.lang.String,java.lang.String,org.apache.cxf.service.model.EndpointInfo,java.io.OutputStream)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updateDefinition(javax.wsdl.Definition,java.util.Map,java.util.Map,java.lang.String,org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.http.WSDLQueryHandler:void updateSchemaImports(javax.wsdl.extensions.schema.Schema,java.util.Map,java.lang.String)",
            "org.apache.cxf.transport.http.Cookie:void handleSetCookie(java.util.Map,java.util.List)",
            "org.apache.cxf.transport.http.DigestAuthSupplier:java.lang.String getAuthorizationForRealm(org.apache.cxf.transport.http.HTTPConduit,java.net.URL,org.apache.cxf.message.Message,java.lang.String,java.lang.String)",
            "org.apache.cxf.transport.http.HTTPConduit:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:void setHeadersByAuthorizationPolicy(org.apache.cxf.message.Message,java.net.URL,java.util.Map)",
            "org.apache.cxf.transport.http.HTTPConduit:void setHeadersByClientPolicy(org.apache.cxf.message.Message,java.util.Map)",
            "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection authorizationRetransmit(java.net.HttpURLConnection,org.apache.cxf.message.Message,org.apache.cxf.io.CacheAndWriteOutputStream)",
            "org.apache.cxf.transport.http.HTTPConduit:void setBasicAuthHeader(java.lang.String,java.lang.String,java.util.Map)",
            "org.apache.cxf.transport.http.HTTPConduit:void setProxyBasicAuthHeader(java.lang.String,java.lang.String,java.util.Map)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void copyRequestHeaders(org.apache.cxf.message.Message,java.util.Map)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void setPolicies(java.util.Map)",
            "org.apache.cxf.transport.http.gzip.GZIPOutInterceptor:void addHeader(org.apache.cxf.message.Message,java.lang.String,java.lang.String)",
            "org.apache.cxf.transport.DestinationFactoryManagerImpl:void registerDestinationFactory(java.lang.String,org.apache.cxf.transport.DestinationFactory)",
            "org.apache.cxf.transport.servlet.ServletContextResourceResolver:java.lang.Object resolve(java.lang.String,java.lang.Class)",
            "org.apache.cxf.transport.servlet.ServletTransportFactory:org.apache.cxf.transport.Destination getDestination(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.servlet.AbstractCXFServlet:void init(javax.servlet.ServletConfig)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPTransportFactory:org.apache.cxf.transport.http_jetty.JettyHTTPDestination createDestination(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void setEnginesList(java.util.List)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:void setTLSServerParametersForPort(int,org.apache.cxf.configuration.jsse.TLSServerParameters)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPServerEngineFactory:org.apache.cxf.transport.http_jetty.JettyHTTPServerEngine createJettyHTTPServerEngine(int,java.lang.String)",
            "org.apache.cxf.transport.jms.JMSUtils:void addContentTypeToProtocolHeader(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.jms.JMSConduit:void sendExchange(org.apache.cxf.message.Exchange,java.lang.Object)",
            "org.apache.cxf.NSManager:void resolveConstants(java.lang.Class)",
            "org.apache.cxf.extension.RegistryImpl:void register(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.endpoint.ClientImpl:java.util.Map getRequestContext()",
            "org.apache.cxf.endpoint.ClientImpl:java.util.Map getResponseContext()",
            "org.apache.cxf.endpoint.ClientImpl:void setThreadLocalRequestContext(boolean)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map)",
            "org.apache.cxf.endpoint.ClientImpl$EchoContext:java.lang.Object put(java.lang.String,java.lang.Object)",
            "org.apache.cxf.ws.addressing.ContextUtils:java.lang.String getActionFromMessageAttributes(org.apache.cxf.service.model.MessageInfo)",
            "org.apache.cxf.ws.addressing.MAPAggregator:boolean hasUsingAddressing(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.addressing.MAPAggregator:boolean validateIncomingMAPs(org.apache.cxf.ws.addressing.AddressingProperties,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.addressing.soap.MAPCodec:void cacheExchange(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.addressing.AddressingProperties)",
            "org.apache.cxf.ws.policy.PolicyRegistryImpl:void register(java.lang.String,org.apache.neethi.Policy)",
            "org.apache.cxf.ws.security.policy.model.ContentEncryptedElements:void addDeclaredNamespaces(java.lang.String,java.lang.String)",
            "org.apache.cxf.ws.security.policy.model.SignedEncryptedElements:void addDeclaredNamespaces(java.lang.String,java.lang.String)",
            "org.apache.cxf.ws.security.policy.model.RequiredElements:void addDeclaredNamespaces(java.lang.String,java.lang.String)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationOutInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationOutInterceptor:void renewToken(org.apache.cxf.binding.soap.SoapMessage,org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.ws.security.tokenstore.SecurityToken,org.apache.cxf.ws.security.policy.model.SecureConversationToken)",
            "org.apache.cxf.ws.security.policy.interceptors.IssuedTokenInterceptorProvider$IssuedTokenOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.security.policy.interceptors.SecureConversationTokenInterceptorProvider:void mapSecurityProps(org.apache.cxf.message.Message,java.util.Map)",
            "org.apache.cxf.ws.security.trust.STSClient:org.apache.cxf.ws.security.tokenstore.SecurityToken requestSecurityToken(java.lang.String,java.lang.String,java.lang.String,org.apache.cxf.ws.security.tokenstore.SecurityToken)",
            "org.apache.cxf.ws.security.trust.STSClient:boolean validateSecurityToken(org.apache.cxf.ws.security.tokenstore.SecurityToken,java.lang.String)",
            "org.apache.cxf.ws.security.trust.STSClient:void cancelSecurityToken(org.apache.cxf.ws.security.tokenstore.SecurityToken)",
            "org.apache.cxf.ws.security.tokenstore.MemoryTokenStore:void add(org.apache.cxf.ws.security.tokenstore.SecurityToken)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:java.util.Map handleSupportingTokens(org.apache.cxf.ws.security.policy.model.SupportingToken,boolean,java.util.Map)",
            "org.apache.cxf.ws.security.wss4j.policyhandlers.AbstractBindingBuilder:org.apache.ws.security.components.crypto.Crypto getCrypto(org.apache.cxf.ws.security.policy.model.TokenWrapper,java.lang.String,java.lang.String)",
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:java.util.Properties getProps(java.lang.Object,org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.wss4j.AbstractWSS4JInterceptor:void setProperty(java.lang.String,java.lang.String)",
            "org.apache.cxf.ws.security.wss4j.AbstractWSS4JInterceptor:org.apache.ws.security.components.crypto.Crypto loadSignatureCrypto(org.apache.ws.security.handler.RequestData)",
            "org.apache.cxf.ws.security.wss4j.AbstractWSS4JInterceptor:org.apache.ws.security.components.crypto.Crypto loadDecryptionCrypto(org.apache.ws.security.handler.RequestData)",
            "org.apache.cxf.ws.security.wss4j.AbstractWSS4JInterceptor:org.apache.ws.security.components.crypto.Crypto loadEncryptionCrypto(org.apache.ws.security.handler.RequestData)",
            "org.apache.cxf.ws.rm.Source:void addSequence(org.apache.cxf.ws.rm.SourceSequence,boolean)",
            "org.apache.cxf.ws.rm.Source:void setCurrent(org.apache.cxf.ws.rm.Identifier,org.apache.cxf.ws.rm.SourceSequence)",
            "org.apache.cxf.ws.rm.Destination:void addSequence(org.apache.cxf.ws.rm.DestinationSequence,boolean)",
            "org.apache.cxf.ws.rm.RMManager:org.apache.cxf.ws.rm.RMEndpoint getReliableEndpoint(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.RMManager:void recoverReliableEndpoint(org.apache.cxf.endpoint.Endpoint,org.apache.cxf.transport.Conduit)",
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl:org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl$ResendCandidate cacheUnacknowledged(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.WrappedEndpoint:java.lang.Object put(java.lang.String,java.lang.Object)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void <init>(java.util.SortedSet)",
            "org.apache.cxf.workqueue.WorkQueueManagerImpl:void addNamedWorkQueue(java.lang.String,org.apache.cxf.workqueue.AutomaticWorkQueue)",
            "org.apache.cxf.databinding.AbstractDataBinding:void <init>()",
            "org.apache.cxf.wsdl.PrettyPrintXMLStreamWriter:void <clinit>()",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.bind.JAXBElement getServiceNameType(javax.xml.namespace.QName,java.lang.String)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:void setInterfaceName(org.apache.cxf.ws.addressing.EndpointReferenceType,javax.xml.namespace.QName)",
            "org.apache.cxf.wsdl.EndpointReferenceUtils:void setWSDLLocation(org.apache.cxf.ws.addressing.EndpointReferenceType,java.lang.String[])",
            "org.apache.cxf.service.model.BindingOperationInfo:void <init>(org.apache.cxf.service.model.BindingInfo,org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:void addMessagePart(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:void setProperty(java.lang.String,java.lang.Object)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:void addExtensionAttribute(javax.xml.namespace.QName,java.lang.Object)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperationForWrapperElement(org.apache.cxf.message.Exchange,javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.service.model.InterfaceInfo:void addOperation(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.ServiceInfo:void initMessagesMap()",
            "org.apache.cxf.service.model.BindingInfo:void addOperation(org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.service.model.OperationInfo:void addFault(org.apache.cxf.service.model.FaultInfo)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:void createEndpoints()",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isWrapped(java.lang.reflect.Method)",
            "org.apache.cxf.service.factory.ReflectionServiceFactoryBean:boolean isRPC(java.lang.reflect.Method)",
            "org.apache.cxf.binding.BindingFactoryManagerImpl:void registerBindingFactory(java.lang.String,org.apache.cxf.binding.BindingFactory)",
            "org.apache.cxf.binding.soap.interceptor.SoapPreProtocolOutInterceptor:void setSoapAction(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.binding.soap.SoapVersionFactory:void register(org.apache.cxf.binding.soap.SoapVersion)",
            "org.apache.cxf.clustering.FailoverTargetSelector:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.clustering.FailoverTargetSelector:void overrideAddressProperty(java.util.Map)",
            "org.apache.cxf.tools.common.ToolContext:void put(java.lang.String,java.lang.Object)",
            "org.apache.cxf.tools.common.ToolContext:void addNamespacePackageMap(java.lang.String,java.lang.String)",
            "org.apache.cxf.tools.common.ToolContext:void addExcludeNamespacePackageMap(java.lang.String,java.lang.String)",
            "org.apache.cxf.tools.common.VelocityGenerator:void setCommonAttributes()",
            "org.apache.cxf.tools.common.VelocityGenerator:void setAttributes(java.lang.String,java.lang.Object)",
            "org.apache.cxf.tools.common.model.JavaModel:void addInterface(java.lang.String,org.apache.cxf.tools.common.model.JavaInterface)",
            "org.apache.cxf.tools.common.model.JavaModel:void addExceptionClass(java.lang.String,org.apache.cxf.tools.common.model.JavaExceptionClass)",
            "org.apache.cxf.tools.common.model.JavaModel:void addServiceClass(java.lang.String,org.apache.cxf.tools.common.model.JavaServiceClass)",
            "org.apache.cxf.tools.common.model.JavaType:void <clinit>()",
            "org.apache.cxf.tools.common.model.JavaMethod:void addAnnotation(java.lang.String,org.apache.cxf.tools.common.model.JAnnotation)",
            "org.apache.cxf.tools.common.model.JavaMethod:void <clinit>()",
            "org.apache.cxf.tools.common.model.JavaParameter:void addAnnotation(java.lang.String,org.apache.cxf.tools.common.model.JAnnotation)",
            "org.apache.cxf.tools.util.ToolsStaxUtils:java.util.List getTags(java.io.File)",
            "org.apache.cxf.tools.util.ToolsStaxUtils:org.apache.cxf.tools.common.Tag getTagTree(java.io.InputStream,java.util.List)",
            "org.apache.cxf.tools.util.BuiltInTypesJavaMappingUtil:void <clinit>()",
            "org.apache.cxf.tools.util.SOAPBindingUtil:void <clinit>()",
            "org.apache.cxf.tools.util.PropertyUtil:void load(java.io.InputStream,java.lang.String)",
            "org.apache.cxf.tools.util.ClassCollector:void addSeiClassName(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.tools.util.ClassCollector:void addTypesClassName(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.tools.util.ClassCollector:void addServerClassName(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.tools.util.ClassCollector:void addImplClassName(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.tools.util.ClassCollector:void addClientClassName(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.tools.util.ClassCollector:void addServiceClassName(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.tools.util.ClassCollector:void addExceptionClassName(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.catalog.CatalogXmlSchemaURIResolver:org.xml.sax.InputSource resolveEntity(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.wsdl11.SchemaUtil:void addSchema(java.lang.String,javax.wsdl.extensions.schema.Schema)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void parseWSDL(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLDefinitionBuilder:void registerWSDLExtensibilityPlugins(javax.wsdl.extensions.ExtensionRegistry)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void buildTypes(java.util.Collection,java.util.Map,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:void addNamespace(java.lang.String,java.lang.String,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.ServiceWSDLBuilder:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(java.net.URL)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition getDefinition(org.w3c.dom.Element)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void addDefinition(java.lang.Object,javax.wsdl.Definition)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:javax.wsdl.Definition loadDefinition(java.lang.String)",
            "org.apache.cxf.wsdl11.WSDLManagerImpl:void putSchemasForDefinition(javax.wsdl.Definition,org.apache.cxf.service.model.ServiceSchemaInfo)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void processExtension(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadAndRegister(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void <init>(java.util.Map,java.util.Map)",
            "org.apache.cxf.bus.CXFBusImpl:void setExtension(java.lang.Object,java.lang.Class)",
            "org.apache.cxf.attachment.AttachmentImpl:void setHeader(java.lang.String,java.lang.String)",
            "org.apache.cxf.attachment.AttachmentUtil:java.util.Map getDHMap(java.util.Collection)",
            "org.apache.cxf.frontend.ClientProxyFactoryBean:java.lang.Object create()",
            "org.apache.cxf.frontend.SimpleMethodDispatcher:void bind(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method[])",
            "org.apache.cxf.frontend.SimpleMethodDispatcher:org.apache.cxf.service.model.BindingOperationInfo getBindingOperation(java.lang.reflect.Method,org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory:org.apache.cxf.endpoint.Endpoint createEndpoint()",
            "org.apache.cxf.aegis.Context:void setProperty(java.lang.Object)",
            "org.apache.cxf.aegis.util.jdom.StaxBuilder:void <clinit>()",
            "org.apache.cxf.aegis.util.stax.JDOMStreamReader:void declare(org.jdom.Namespace)",
            "org.apache.cxf.aegis.databinding.XMLStreamDataWriter:void setProperty(java.lang.String,java.lang.Object)",
            "org.apache.cxf.aegis.databinding.ElementDataWriter:void setProperty(java.lang.String,java.lang.Object)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:void initializeMessage(org.apache.cxf.service.Service,org.apache.cxf.aegis.type.TypeMapping,org.apache.cxf.service.model.AbstractMessageContainer,int,java.util.Set)",
            "org.apache.cxf.aegis.databinding.AegisDatabinding:org.apache.cxf.aegis.type.Type getParameterType(org.apache.cxf.service.Service,org.apache.cxf.aegis.type.TypeMapping,org.apache.cxf.service.model.MessagePartInfo,int)",
            "org.apache.cxf.aegis.type.basic.XMLBeanTypeInfo:org.apache.cxf.aegis.type.basic.BeanTypePropertyInfo ensurePropertyInfo(javax.xml.namespace.QName)",
            "org.apache.cxf.aegis.type.basic.InterfaceInvocationHandler:void writeProperty(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.aegis.type.basic.BeanTypeInfo:void mapType(javax.xml.namespace.QName,org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.basic.BeanTypeInfo:void mapAttribute(java.lang.String,javax.xml.namespace.QName)",
            "org.apache.cxf.aegis.type.basic.BeanTypeInfo:void mapElement(java.lang.String,javax.xml.namespace.QName)",
            "org.apache.cxf.aegis.type.basic.BeanTypeInfo:void mapTypeName(javax.xml.namespace.QName,javax.xml.namespace.QName)",
            "org.apache.cxf.aegis.type.encoded.MarshalRegistry:java.lang.String getInstanceId(java.lang.Object)",
            "org.apache.cxf.aegis.type.XMLTypeCreator:org.w3c.dom.Document getDocument(java.lang.Class)",
            "org.apache.cxf.aegis.type.DefaultTypeMapping:void register(org.apache.cxf.aegis.type.Type)",
            "org.apache.cxf.aegis.type.collection.MapType:java.lang.Object readObject(org.apache.cxf.aegis.xml.MessageReader,org.apache.cxf.aegis.Context)",
            "org.apache.cxf.jaxws.handler.HandlerResolverImpl:java.util.List getHandlerChain(javax.xml.ws.handler.PortInfo)",
            "org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean:void initSchemaLocations()",
            "org.apache.cxf.jaxws.support.JaxWsServiceConfiguration:javax.jws.WebParam getWebParam(java.lang.reflect.Method,int)",
            "org.apache.cxf.jaxws.support.JaxWsServiceConfiguration:java.lang.Class getResponseWrapper(java.lang.reflect.Method)",
            "org.apache.cxf.jaxws.support.JaxWsServiceConfiguration:java.lang.Class getRequestWrapper(java.lang.reflect.Method)",
            "org.apache.cxf.jaxws.JaxWsClientProxy:void setupEndpointAddressContext(org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.jaxws.JaxWsClientProxy:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])",
            "org.apache.cxf.jaxws.ServiceImpl:void addPort(javax.xml.namespace.QName,java.lang.String,java.lang.String)",
            "org.apache.cxf.jaxws.DispatchImpl:java.lang.Object invoke(java.lang.Object,boolean)",
            "org.apache.cxf.jaxws.interceptors.SwAOutInterceptor:boolean callSWARefMethod(javax.xml.bind.JAXBContext)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:void <init>(java.util.Map,org.apache.cxf.message.Exchange,javax.xml.ws.handler.MessageContext$Scope)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:void copyScoped(java.util.Map)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:java.lang.Object createAttachments(org.apache.cxf.message.Message,java.lang.String)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:java.lang.Object put(java.lang.String,java.lang.Object,javax.xml.ws.handler.MessageContext$Scope)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:void setScope(java.lang.String,javax.xml.ws.handler.MessageContext$Scope)",
            "org.apache.cxf.jaxws.context.WrappedMessageContext:void <clinit>()",
            "org.apache.cxf.xmlbeans.XmlBeansSchemaInitializer:org.apache.ws.commons.schema.XmlSchema getSchema(org.apache.xmlbeans.SchemaTypeSystem,java.lang.String)",
            "org.apache.cxf.xmlbeans.XmlBeansSchemaInitializer:void <clinit>()",
            "org.apache.cxf.xmlbeans.tools.XMLBeansSchemaTypeUtils:void <clinit>()",
            "org.apache.cxf.xmlbeans.tools.XMLBeansToolingDataBinding:void <clinit>()"
        ]
    },
    "org.apache.cxf.ws.rm.DestinationSequence:void <init>(org.apache.cxf.ws.rm.Identifier,org.apache.cxf.ws.addressing.v200408.EndpointReferenceType,org.apache.cxf.ws.rm.Destination)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.Servant:org.apache.cxf.ws.rm.CreateSequenceResponseType createSequence(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.Servant:void createSequenceResponse(org.apache.cxf.ws.rm.CreateSequenceResponseType)"
        ]
    },
    "org.apache.cxf.transport.http.AbstractHTTPDestination$BackChannelConduit:void <init>(org.apache.cxf.transport.http.AbstractHTTPDestination,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.AbstractHTTPDestination:org.apache.cxf.transport.Conduit getInbuiltBackChannel(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.http.AbstractHTTPTransportFactory$HttpEndpointInfo:void setAddress(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.TransportURIResolver:org.xml.sax.InputSource resolve(java.lang.String,java.lang.String)",
            "org.apache.cxf.transport.http.AbstractHTTPTransportFactory:org.apache.cxf.service.model.EndpointInfo createEndpointInfo(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.BindingInfo,javax.wsdl.Port)",
            "org.apache.cxf.transport.http.HTTPConduit:org.apache.cxf.transport.Destination getDestination(java.lang.String)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:org.apache.cxf.service.model.EndpointInfo getAddressValue(org.apache.cxf.service.model.EndpointInfo,boolean)",
            "org.apache.cxf.transport.servlet.ServletController:void updateDests(javax.servlet.http.HttpServletRequest)",
            "org.apache.cxf.transport.servlet.ServletController:void invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.servlet.ServletTransportFactory:org.apache.cxf.transport.Destination getDestination(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:java.lang.String updateEndpointAddress(java.lang.String)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void doService(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.ws.security.trust.STSUtils:org.apache.cxf.endpoint.Endpoint createSTSEndpoint(org.apache.cxf.Bus,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.neethi.Policy,javax.xml.namespace.QName)",
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl$1:org.apache.cxf.transport.Conduit selectConduit(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.RMEndpoint:void createEndpoint()",
            "org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory:org.apache.cxf.endpoint.Endpoint createEndpoint()",
            "org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory:org.apache.cxf.service.model.EndpointInfo createEndpointInfo()",
            "org.apache.cxf.jaxws.ServiceImpl:org.apache.cxf.service.model.EndpointInfo createEndpointInfo(org.apache.cxf.service.factory.AbstractServiceFactoryBean,javax.xml.namespace.QName,org.apache.cxf.jaxws.handler.PortInfoImpl)",
            "org.apache.cxf.jaxws.EndpointImpl:void doPublish(java.lang.String)"
        ]
    },
    "org.apache.cxf.transport.http.AbstractHTTPDestination:org.apache.cxf.service.model.EndpointInfo getAddressValue(org.apache.cxf.service.model.EndpointInfo,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.AbstractHTTPDestination:void <init>(org.apache.cxf.Bus,org.apache.cxf.transport.ConduitInitiator,org.apache.cxf.service.model.EndpointInfo,boolean)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:org.apache.cxf.service.model.EndpointInfo getAddressValue(org.apache.cxf.service.model.EndpointInfo)"
        ]
    },
    "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:java.lang.String updateEndpointAddress(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void doService(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.cxf.binding.soap.SoapTransportFactory$SoapEndpointInfo:void setAddress(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.TransportURIResolver:org.xml.sax.InputSource resolve(java.lang.String,java.lang.String)",
            "org.apache.cxf.transport.http.HTTPConduit:org.apache.cxf.transport.Destination getDestination(java.lang.String)",
            "org.apache.cxf.transport.http.AbstractHTTPDestination:org.apache.cxf.service.model.EndpointInfo getAddressValue(org.apache.cxf.service.model.EndpointInfo,boolean)",
            "org.apache.cxf.transport.servlet.ServletController:void updateDests(javax.servlet.http.HttpServletRequest)",
            "org.apache.cxf.transport.servlet.ServletController:void invoke(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.transport.servlet.ServletTransportFactory:org.apache.cxf.transport.Destination getDestination(org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:java.lang.String updateEndpointAddress(java.lang.String)",
            "org.apache.cxf.transport.http_jetty.JettyHTTPDestination:void doService(javax.servlet.ServletContext,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.cxf.ws.security.trust.STSUtils:org.apache.cxf.endpoint.Endpoint createSTSEndpoint(org.apache.cxf.Bus,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.neethi.Policy,javax.xml.namespace.QName)",
            "org.apache.cxf.ws.rm.soap.RetransmissionQueueImpl$1:org.apache.cxf.transport.Conduit selectConduit(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.RMEndpoint:void createEndpoint()",
            "org.apache.cxf.binding.soap.SoapTransportFactory:org.apache.cxf.service.model.EndpointInfo createEndpointInfo(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.BindingInfo,javax.wsdl.Port)",
            "org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory:org.apache.cxf.endpoint.Endpoint createEndpoint()",
            "org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory:org.apache.cxf.service.model.EndpointInfo createEndpointInfo()",
            "org.apache.cxf.jaxws.ServiceImpl:org.apache.cxf.service.model.EndpointInfo createEndpointInfo(org.apache.cxf.service.factory.AbstractServiceFactoryBean,javax.xml.namespace.QName,org.apache.cxf.jaxws.handler.PortInfoImpl)",
            "org.apache.cxf.jaxws.EndpointImpl:void doPublish(java.lang.String)"
        ]
    },
    "org.apache.cxf.tools.common.VelocityGenerator:java.io.File parseOutputName(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.spring.BusApplicationContext:void initBeanDefinitionReader(org.springframework.beans.factory.xml.XmlBeanDefinitionReader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.BusApplicationContext:void loadBeanDefinitions(org.springframework.beans.factory.support.DefaultListableBeanFactory)"
        ]
    },
    "org.apache.cxf.aegis.AegisContext:org.apache.cxf.aegis.AegisReader createDomElementReader()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.aegis.AegisContext:org.apache.cxf.aegis.AegisWriter createDomElementWriter()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxws.EndpointReferenceBuilder:javax.xml.ws.EndpointReference getEndpointReference(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.JaxWsClientProxy:javax.xml.ws.EndpointReference getEndpointReference(java.lang.Class)",
            "org.apache.cxf.jaxws.DispatchImpl:javax.xml.ws.EndpointReference getEndpointReference(java.lang.Class)"
        ]
    },
    "org.apache.cxf.jaxws.JaxWsClientProxy:javax.xml.ws.EndpointReference getEndpointReference()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxws.DispatchImpl:javax.xml.ws.EndpointReference getEndpointReference()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxws.EndpointImpl:void publish(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxws.context.WebServiceContextImpl:javax.xml.ws.EndpointReference getEndpointReference(org.w3c.dom.Element[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.context.WebServiceContextImpl:javax.xml.ws.EndpointReference getEndpointReference(java.lang.Class,org.w3c.dom.Element[])"
        ]
    },
    "org.apache.cxf.wsdl.EndpointReferenceUtils$SchemaLSResourceResolver:void <init>(java.util.Map,org.apache.cxf.wsdl.EndpointReferenceUtils$1)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.wsdl.EndpointReferenceUtils:javax.xml.validation.Schema createSchema(org.apache.cxf.service.model.ServiceInfo)"
        ]
    },
    "org.apache.cxf.jaxb.JAXBSchemaInitializer:javax.xml.bind.'annotation'.adapters.XmlJavaTypeAdapter findFromTypeAdapter(java.lang.Class,java.lang.'annotation'.Annotation[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxb.JAXBSchemaInitializer:void begin(org.apache.cxf.service.model.MessagePartInfo)"
        ]
    },
    "org.apache.cxf.ws.policy.builder.primitive.PrimitiveAssertion:org.apache.neethi.PolicyComponent normalize()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.http.HTTPConduit:void retrieveConnectionFactory()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:void finalizeConfig()",
            "org.apache.cxf.transport.http.HTTPConduit:void setTlsClientParameters(org.apache.cxf.configuration.jsse.TLSClientParameters)"
        ]
    },
    "org.apache.cxf.transport.http.HTTPConduit:org.apache.cxf.transport.http.HttpURLConnectionFactory getConnectionFactory(java.net.URL)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.http.HTTPConduit:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:void makeTrustDecision(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.http.HTTPConduit:java.net.HttpURLConnection retransmit(java.net.HttpURLConnection,java.net.URL,org.apache.cxf.message.Message,org.apache.cxf.io.CacheAndWriteOutputStream)"
        ]
    },
    "org.apache.cxf.bus.CXFBusImpl:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.endpoint.ClientImpl:org.apache.cxf.endpoint.Endpoint getEndpoint()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(java.lang.String,java.lang.Object[])",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(javax.xml.namespace.QName,java.lang.Object[])",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invokeWrapped(java.lang.String,java.lang.Object[])",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invokeWrapped(javax.xml.namespace.QName,java.lang.Object[])",
            "org.apache.cxf.endpoint.ClientImpl:void invoke(org.apache.cxf.endpoint.ClientCallback,java.lang.String,java.lang.Object[])",
            "org.apache.cxf.endpoint.ClientImpl:void invoke(org.apache.cxf.endpoint.ClientCallback,javax.xml.namespace.QName,java.lang.Object[])",
            "org.apache.cxf.endpoint.ClientImpl:void invokeWrapped(org.apache.cxf.endpoint.ClientCallback,java.lang.String,java.lang.Object[])",
            "org.apache.cxf.endpoint.ClientImpl:void invokeWrapped(org.apache.cxf.endpoint.ClientCallback,javax.xml.namespace.QName,java.lang.Object[])",
            "org.apache.cxf.endpoint.ClientImpl:void invoke(org.apache.cxf.endpoint.ClientCallback,org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[])",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.dynamic.DynamicClientFactory:org.apache.cxf.endpoint.Client createClient(java.lang.String,javax.xml.namespace.QName,java.lang.ClassLoader,javax.xml.namespace.QName,java.util.List)",
            "org.apache.cxf.ws.policy.WSPolicyFeature:void initialize(org.apache.cxf.endpoint.Client,org.apache.cxf.Bus)",
            "org.apache.cxf.ws.security.trust.STSClient:org.apache.cxf.service.model.BindingOperationInfo findOperation(java.lang.String)",
            "org.apache.cxf.ws.security.trust.STSClient:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.ws.rm.RMManager:void clientCreated(org.apache.cxf.endpoint.Client)",
            "org.apache.cxf.ws.rm.RMManager:void clientDestroyed(org.apache.cxf.endpoint.Client)",
            "org.apache.cxf.databinding.stax.StaxDataBindingFeature:void initialize(org.apache.cxf.endpoint.Client,org.apache.cxf.Bus)",
            "org.apache.cxf.clustering.FailoverFeature:void initialize(org.apache.cxf.endpoint.Client,org.apache.cxf.Bus)",
            "org.apache.cxf.frontend.ClientProxy:void <init>(org.apache.cxf.endpoint.Client)",
            "org.apache.cxf.jaxws.JaxWsProxyFactoryBean:org.apache.cxf.frontend.ClientProxy clientClientProxy(org.apache.cxf.endpoint.Client)",
            "org.apache.cxf.jaxws.JaxWsClientProxy:void <init>(org.apache.cxf.endpoint.Client,javax.xml.ws.Binding)",
            "org.apache.cxf.jaxws.JaxWsClientProxy:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])",
            "org.apache.cxf.jaxws.JaxWsClientProxy:boolean addressChanged(java.lang.String)",
            "org.apache.cxf.jaxws.JaxWsClientProxy:java.lang.Object invokeAsync(java.lang.reflect.Method,org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[])",
            "org.apache.cxf.jaxws.ServiceImpl:java.lang.Object createPort(javax.xml.namespace.QName,org.apache.cxf.ws.addressing.EndpointReferenceType,java.lang.Class,javax.xml.ws.WebServiceFeature[])",
            "org.apache.cxf.jaxws.ServiceImpl:javax.xml.ws.Dispatch createDispatch(javax.xml.namespace.QName,java.lang.Class,javax.xml.ws.Service$Mode,javax.xml.ws.WebServiceFeature[])",
            "org.apache.cxf.jaxws.ServiceImpl:javax.xml.ws.Dispatch createDispatch(javax.xml.namespace.QName,javax.xml.bind.JAXBContext,javax.xml.ws.Service$Mode,javax.xml.ws.WebServiceFeature[])",
            "org.apache.cxf.jaxws.DispatchImpl:void <init>(org.apache.cxf.endpoint.Client,javax.xml.ws.Service$Mode,javax.xml.bind.JAXBContext,java.lang.Class)",
            "org.apache.cxf.jaxws.DispatchImpl:void addInvokeOperation(boolean)",
            "org.apache.cxf.jaxws.DispatchImpl:java.util.concurrent.Future invokeAsync(java.lang.Object,javax.xml.ws.AsyncHandler)"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:void setEndpoint(org.apache.cxf.endpoint.Endpoint)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.rm.AbstractEndpoint:org.apache.cxf.ws.rm.Identifier generateSequenceIdentifier()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.rm.Servant:org.apache.cxf.ws.rm.CreateSequenceResponseType createSequence(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.rm.Proxy:org.apache.cxf.ws.rm.CreateSequenceResponseType createSequence(org.apache.cxf.ws.addressing.v200408.EndpointReferenceType,org.apache.cxf.ws.addressing.RelatesToType,boolean)"
        ]
    },
    "org.apache.cxf.transport.http.AbstractHTTPDestination:org.apache.cxf.transport.Conduit getInbuiltBackChannel(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.AbstractDestination:org.apache.cxf.transport.Conduit getBackChannel(org.apache.cxf.message.Message,org.apache.cxf.message.Message,org.apache.cxf.ws.addressing.EndpointReferenceType)"
        ]
    },
    "org.apache.cxf.bus.spring.BusApplicationContext:void loadBeanDefinitions(org.springframework.beans.factory.support.DefaultListableBeanFactory)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxws.JaxWsClientProxy:javax.xml.ws.EndpointReference getEndpointReference(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.jaxws.DispatchImpl:javax.xml.ws.EndpointReference getEndpointReference(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.frontend.ClientProxy:void <init>(org.apache.cxf.endpoint.Client)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.frontend.ClientProxyFactoryBean:org.apache.cxf.frontend.ClientProxy clientClientProxy(org.apache.cxf.endpoint.Client)",
            "org.apache.cxf.jaxws.JaxWsClientProxy:void <init>(org.apache.cxf.endpoint.Client,javax.xml.ws.Binding)"
        ]
    },
    "org.apache.cxf.jaxws.JaxWsClientProxy:boolean addressChanged(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.jaxws.JaxWsClientProxy:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])"
        ]
    }
}
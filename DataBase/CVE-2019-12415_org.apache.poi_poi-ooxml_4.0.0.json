{
    "org.apache.poi.xssf.streaming.SheetDataWriter:void writeCell(int,org.apache.poi.ss.usermodel.Cell)": {
        "isVulRoot": true,
        "vulCaller": [
            "org.apache.poi.xssf.streaming.SheetDataWriter:void writeRow(int,org.apache.poi.xssf.streaming.SXSSFRow)"
        ]
    },
    "org.apache.poi.xssf.streaming.SXSSFCell:java.lang.String getStringCellValue()": {
        "isVulRoot": true,
        "vulCaller": [
            "org.apache.poi.xssf.streaming.SXSSFCell:org.apache.poi.ss.usermodel.RichTextString getRichStringCellValue()",
            "org.apache.poi.xssf.streaming.SXSSFCell:boolean convertCellValueToBoolean()",
            "org.apache.poi.xssf.streaming.SXSSFCell:java.lang.String convertCellValueToString(org.apache.poi.ss.usermodel.CellType)",
            "org.apache.poi.xssf.streaming.SheetDataWriter:void writeCell(int,org.apache.poi.ss.usermodel.Cell)",
            "org.apache.poi.xssf.usermodel.XSSFCell:void copyCellFrom(org.apache.poi.ss.usermodel.Cell,org.apache.poi.ss.usermodel.CellCopyPolicy)",
            "org.apache.poi.xssf.usermodel.XSSFPivotCacheDefinition:void createCacheFields(org.apache.poi.ss.usermodel.Sheet)"
        ]
    },
    "org.apache.poi.xssf.streaming.SXSSFCell:void ensureRichTextStringType()": {
        "isVulRoot": true,
        "vulCaller": [
            "org.apache.poi.xssf.streaming.SXSSFCell:void setCellValue(org.apache.poi.ss.usermodel.RichTextString)"
        ]
    },
    "org.apache.poi.xssf.streaming.SXSSFCell:void setCellValue(java.lang.String)": {
        "isVulRoot": true,
        "vulCaller": []
    },
    "org.apache.poi.xssf.streaming.SXSSFCell:void setCellValue(org.apache.poi.ss.usermodel.RichTextString)": {
        "isVulRoot": true,
        "vulCaller": []
    },
    "org.apache.poi.xssf.streaming.SheetDataWriter:void writeRow(int,org.apache.poi.xssf.streaming.SXSSFRow)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.poi.xssf.streaming.SXSSFSheet:void flushOneRow()"
        ]
    },
    "org.apache.poi.xssf.streaming.SXSSFCell:org.apache.poi.ss.usermodel.RichTextString getRichStringCellValue()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.poi.xssf.extractor.XSSFExcelExtractor:void handleStringCell(java.lang.StringBuilder,org.apache.poi.ss.usermodel.Cell)",
            "org.apache.poi.xssf.streaming.SXSSFCell:java.lang.String toString()",
            "org.apache.poi.xssf.streaming.SXSSFEvaluationCell:java.lang.String getStringCellValue()"
        ]
    },
    "org.apache.poi.xssf.streaming.SXSSFCell:boolean convertCellValueToBoolean()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.poi.xssf.streaming.SXSSFCell:void setType(org.apache.poi.ss.usermodel.CellType)"
        ]
    },
    "org.apache.poi.xssf.streaming.SXSSFCell:java.lang.String convertCellValueToString(org.apache.poi.ss.usermodel.CellType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.poi.xssf.streaming.SXSSFCell:java.lang.String convertCellValueToString()",
            "org.apache.poi.xssf.streaming.SXSSFCell:java.lang.String convertCellValueToString(org.apache.poi.ss.usermodel.CellType)"
        ]
    },
    "org.apache.poi.xssf.usermodel.XSSFCell:void copyCellFrom(org.apache.poi.ss.usermodel.Cell,org.apache.poi.ss.usermodel.CellCopyPolicy)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.poi.xssf.usermodel.XSSFRow:void copyRowFrom(org.apache.poi.ss.usermodel.Row,org.apache.poi.ss.usermodel.CellCopyPolicy)"
        ]
    },
    "org.apache.poi.xssf.usermodel.XSSFPivotCacheDefinition:void createCacheFields(org.apache.poi.ss.usermodel.Sheet)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.poi.xssf.usermodel.XSSFSheet:org.apache.poi.xssf.usermodel.XSSFPivotTable createPivotTable(org.apache.poi.ss.util.CellReference,org.apache.poi.ss.usermodel.Sheet,org.apache.poi.xssf.usermodel.XSSFPivotTable$PivotTableReferenceConfigurator)"
        ]
    },
    "org.apache.poi.xssf.streaming.SXSSFSheet:void flushOneRow()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.poi.xssf.streaming.SXSSFSheet:void flushRows(int)"
        ]
    },
    "org.apache.poi.xssf.extractor.XSSFExcelExtractor:void handleStringCell(java.lang.StringBuilder,org.apache.poi.ss.usermodel.Cell)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.poi.xssf.extractor.XSSFExcelExtractor:java.lang.String getText()"
        ]
    },
    "org.apache.poi.xssf.streaming.SXSSFCell:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.poi.openxml4j.opc.internal.ContentType:boolean equals(java.lang.Object)",
            "org.apache.poi.xddf.usermodel.chart.XDDFChart:void fillSheet(org.apache.poi.xssf.usermodel.XSSFSheet,org.apache.poi.xddf.usermodel.chart.XDDFDataSource,org.apache.poi.xddf.usermodel.chart.XDDFNumericalDataSource)",
            "org.apache.poi.xddf.usermodel.chart.XDDFChartData$Series:void fillStringCache(org.openxmlformats.schemas.drawingml.x2006.chart.CTStrData,int,org.apache.poi.xddf.usermodel.chart.XDDFDataSource)",
            "org.apache.poi.xddf.usermodel.chart.XDDFChartData$Series:void fillNumCache(org.openxmlformats.schemas.drawingml.x2006.chart.CTNumData,int,org.apache.poi.xddf.usermodel.chart.XDDFNumericalDataSource)",
            "org.apache.poi.xslf.usermodel.XSLFTextParagraph:void setBulletStyle(java.lang.Object[])",
            "org.apache.poi.xssf.usermodel.charts.XSSFChartUtil:void fillStringCache(org.openxmlformats.schemas.drawingml.x2006.chart.CTStrData,org.apache.poi.ss.usermodel.charts.ChartDataSource)",
            "org.apache.poi.xssf.usermodel.helpers.XSSFRowColShifter:void updateConditionalFormatting(org.apache.poi.ss.usermodel.Sheet,org.apache.poi.ss.formula.FormulaShifter)",
            "org.apache.poi.xssf.usermodel.XSSFConditionalFormatting:org.apache.poi.ss.util.CellRangeAddress[] getFormattingRanges()",
            "org.apache.poi.xssf.usermodel.XSSFSheet:java.util.Map getIgnoredErrors()"
        ]
    },
    "org.apache.poi.xssf.streaming.SXSSFEvaluationCell:java.lang.String getStringCellValue()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.poi.xssf.streaming.SXSSFCell:void setType(org.apache.poi.ss.usermodel.CellType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.poi.xssf.streaming.SXSSFCell:void <init>(org.apache.poi.xssf.streaming.SXSSFRow,org.apache.poi.ss.usermodel.CellType)",
            "org.apache.poi.xssf.streaming.SXSSFCell:void setCellFormula(java.lang.String)",
            "org.apache.poi.xssf.streaming.SXSSFCell:void ensureType(org.apache.poi.ss.usermodel.CellType)",
            "org.apache.poi.xssf.streaming.SXSSFCell:void ensureTypeOrFormulaType(org.apache.poi.ss.usermodel.CellType)"
        ]
    },
    "org.apache.poi.xssf.streaming.SXSSFCell:java.lang.String convertCellValueToString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.poi.xssf.streaming.SXSSFCell:void setType(org.apache.poi.ss.usermodel.CellType)"
        ]
    },
    "org.apache.poi.xssf.usermodel.XSSFRow:void copyRowFrom(org.apache.poi.ss.usermodel.Row,org.apache.poi.ss.usermodel.CellCopyPolicy)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.poi.xssf.usermodel.XSSFSheet:void copyRows(java.util.List,int,org.apache.poi.ss.usermodel.CellCopyPolicy)"
        ]
    },
    "org.apache.poi.xssf.usermodel.XSSFSheet:org.apache.poi.xssf.usermodel.XSSFPivotTable createPivotTable(org.apache.poi.ss.util.CellReference,org.apache.poi.ss.usermodel.Sheet,org.apache.poi.xssf.usermodel.XSSFPivotTable$PivotTableReferenceConfigurator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.poi.xssf.usermodel.XSSFSheet:org.apache.poi.xssf.usermodel.XSSFPivotTable createPivotTable(org.apache.poi.ss.util.AreaReference,org.apache.poi.ss.util.CellReference,org.apache.poi.ss.usermodel.Sheet)",
            "org.apache.poi.xssf.usermodel.XSSFSheet:org.apache.poi.xssf.usermodel.XSSFPivotTable createPivotTable(org.apache.poi.ss.usermodel.Name,org.apache.poi.ss.util.CellReference,org.apache.poi.ss.usermodel.Sheet)",
            "org.apache.poi.xssf.usermodel.XSSFSheet:org.apache.poi.xssf.usermodel.XSSFPivotTable createPivotTable(org.apache.poi.ss.usermodel.Table,org.apache.poi.ss.util.CellReference)"
        ]
    },
    "org.apache.poi.xssf.streaming.SXSSFSheet:void flushRows(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.poi.xssf.streaming.SXSSFSheet:java.io.InputStream getWorksheetXMLInputStream()",
            "org.apache.poi.xssf.streaming.SXSSFSheet:org.apache.poi.xssf.streaming.SXSSFRow createRow(int)",
            "org.apache.poi.xssf.streaming.SXSSFSheet:void flushRows()"
        ]
    },
    "org.apache.poi.xssf.extractor.XSSFExcelExtractor:java.lang.String getText()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.poi.ooxml.extractor.CommandLineTextExtractor:void main(java.lang.String[])",
            "org.apache.poi.xssf.extractor.XSSFExcelExtractor:void main(java.lang.String[])"
        ]
    },
    "org.apache.poi.openxml4j.opc.internal.ContentType:boolean equals(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.poi.xddf.usermodel.chart.XDDFChart:void fillSheet(org.apache.poi.xssf.usermodel.XSSFSheet,org.apache.poi.xddf.usermodel.chart.XDDFDataSource,org.apache.poi.xddf.usermodel.chart.XDDFNumericalDataSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.poi.xddf.usermodel.chart.XDDFChart:void plot(org.apache.poi.xddf.usermodel.chart.XDDFChartData)"
        ]
    },
    "org.apache.poi.xddf.usermodel.chart.XDDFChartData$Series:void fillStringCache(org.openxmlformats.schemas.drawingml.x2006.chart.CTStrData,int,org.apache.poi.xddf.usermodel.chart.XDDFDataSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.poi.xddf.usermodel.chart.XDDFChartData$Series:void plot()"
        ]
    },
    "org.apache.poi.xddf.usermodel.chart.XDDFChartData$Series:void fillNumCache(org.openxmlformats.schemas.drawingml.x2006.chart.CTNumData,int,org.apache.poi.xddf.usermodel.chart.XDDFNumericalDataSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.poi.xddf.usermodel.chart.XDDFChartData$Series:void plot()"
        ]
    },
    "org.apache.poi.xslf.usermodel.XSLFTextParagraph:void setBulletStyle(java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.poi.xssf.usermodel.charts.XSSFChartUtil:void fillStringCache(org.openxmlformats.schemas.drawingml.x2006.chart.CTStrData,org.apache.poi.ss.usermodel.charts.ChartDataSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.poi.xssf.usermodel.charts.XSSFChartUtil:void buildStrRef(org.openxmlformats.schemas.drawingml.x2006.chart.CTStrRef,org.apache.poi.ss.usermodel.charts.ChartDataSource)",
            "org.apache.poi.xssf.usermodel.charts.XSSFChartUtil:void buildStrLit(org.openxmlformats.schemas.drawingml.x2006.chart.CTStrData,org.apache.poi.ss.usermodel.charts.ChartDataSource)"
        ]
    },
    "org.apache.poi.xssf.usermodel.helpers.XSSFRowColShifter:void updateConditionalFormatting(org.apache.poi.ss.usermodel.Sheet,org.apache.poi.ss.formula.FormulaShifter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.poi.xssf.usermodel.helpers.XSSFColumnShifter:void updateConditionalFormatting(org.apache.poi.ss.formula.FormulaShifter)",
            "org.apache.poi.xssf.usermodel.helpers.XSSFRowShifter:void updateConditionalFormatting(org.apache.poi.ss.formula.FormulaShifter)"
        ]
    },
    "org.apache.poi.xssf.usermodel.XSSFConditionalFormatting:org.apache.poi.ss.util.CellRangeAddress[] getFormattingRanges()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.poi.xssf.usermodel.XSSFSheet:java.util.Map getIgnoredErrors()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.poi.xssf.streaming.SXSSFCell:void <init>(org.apache.poi.xssf.streaming.SXSSFRow,org.apache.poi.ss.usermodel.CellType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.poi.xssf.streaming.SXSSFRow:org.apache.poi.xssf.streaming.SXSSFCell createCell(int,org.apache.poi.ss.usermodel.CellType)"
        ]
    },
    "org.apache.poi.xssf.streaming.SXSSFCell:void setCellFormula(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.poi.xssf.usermodel.XSSFRangeCopier:void adjustCellReferencesInsideFormula(org.apache.poi.ss.usermodel.Cell,org.apache.poi.ss.usermodel.Sheet,int,int)"
        ]
    },
    "org.apache.poi.xssf.streaming.SXSSFCell:void ensureType(org.apache.poi.ss.usermodel.CellType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.poi.xssf.streaming.SXSSFCell:void setCellType(org.apache.poi.ss.usermodel.CellType)"
        ]
    },
    "org.apache.poi.xssf.streaming.SXSSFCell:void ensureTypeOrFormulaType(org.apache.poi.ss.usermodel.CellType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.poi.xssf.streaming.SXSSFCell:void setCellValue(double)",
            "org.apache.poi.xssf.streaming.SXSSFCell:void setCellValue(java.lang.String)",
            "org.apache.poi.xssf.streaming.SXSSFCell:void setCellValue(boolean)",
            "org.apache.poi.xssf.streaming.SXSSFCell:void setCellErrorValue(byte)"
        ]
    },
    "org.apache.poi.xssf.usermodel.XSSFSheet:void copyRows(java.util.List,int,org.apache.poi.ss.usermodel.CellCopyPolicy)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.poi.xssf.usermodel.XSSFSheet:void copyRows(int,int,int,org.apache.poi.ss.usermodel.CellCopyPolicy)"
        ]
    },
    "org.apache.poi.xssf.usermodel.XSSFSheet:org.apache.poi.xssf.usermodel.XSSFPivotTable createPivotTable(org.apache.poi.ss.util.AreaReference,org.apache.poi.ss.util.CellReference,org.apache.poi.ss.usermodel.Sheet)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.poi.xssf.usermodel.XSSFSheet:org.apache.poi.xssf.usermodel.XSSFPivotTable createPivotTable(org.apache.poi.ss.util.AreaReference,org.apache.poi.ss.util.CellReference)"
        ]
    },
    "org.apache.poi.xssf.usermodel.XSSFSheet:org.apache.poi.xssf.usermodel.XSSFPivotTable createPivotTable(org.apache.poi.ss.usermodel.Name,org.apache.poi.ss.util.CellReference,org.apache.poi.ss.usermodel.Sheet)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.poi.xssf.usermodel.XSSFSheet:org.apache.poi.xssf.usermodel.XSSFPivotTable createPivotTable(org.apache.poi.ss.usermodel.Name,org.apache.poi.ss.util.CellReference)"
        ]
    },
    "org.apache.poi.xssf.usermodel.XSSFSheet:org.apache.poi.xssf.usermodel.XSSFPivotTable createPivotTable(org.apache.poi.ss.usermodel.Table,org.apache.poi.ss.util.CellReference)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.poi.xssf.streaming.SXSSFSheet:java.io.InputStream getWorksheetXMLInputStream()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.poi.xssf.streaming.SXSSFWorkbook:void injectData(org.apache.poi.openxml4j.util.ZipEntrySource,java.io.OutputStream)"
        ]
    },
    "org.apache.poi.xssf.streaming.SXSSFSheet:org.apache.poi.xssf.streaming.SXSSFRow createRow(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.poi.xssf.streaming.SXSSFSheet:void collapseRow(int)",
            "org.apache.poi.xssf.streaming.SXSSFSheet:org.apache.poi.ss.usermodel.Row createRow(int)"
        ]
    },
    "org.apache.poi.xssf.streaming.SXSSFSheet:void flushRows()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.poi.xssf.streaming.SXSSFSheet:boolean dispose()",
            "org.apache.poi.xssf.streaming.SXSSFWorkbook:void flushSheets()"
        ]
    },
    "org.apache.poi.ooxml.extractor.CommandLineTextExtractor:void main(java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.poi.xssf.extractor.XSSFExcelExtractor:void main(java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.poi.xddf.usermodel.chart.XDDFChart:void plot(org.apache.poi.xddf.usermodel.chart.XDDFChartData)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.poi.xddf.usermodel.chart.XDDFChartData$Series:void plot()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.poi.xddf.usermodel.chart.XDDFChart:void plot(org.apache.poi.xddf.usermodel.chart.XDDFChartData)"
        ]
    },
    "org.apache.poi.xssf.usermodel.charts.XSSFChartUtil:void buildStrRef(org.openxmlformats.schemas.drawingml.x2006.chart.CTStrRef,org.apache.poi.ss.usermodel.charts.ChartDataSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.poi.xssf.usermodel.charts.XSSFChartUtil:void buildAxDataSource(org.openxmlformats.schemas.drawingml.x2006.chart.CTAxDataSource,org.apache.poi.ss.usermodel.charts.ChartDataSource)"
        ]
    },
    "org.apache.poi.xssf.usermodel.charts.XSSFChartUtil:void buildStrLit(org.openxmlformats.schemas.drawingml.x2006.chart.CTStrData,org.apache.poi.ss.usermodel.charts.ChartDataSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.poi.xssf.usermodel.charts.XSSFChartUtil:void buildAxDataSource(org.openxmlformats.schemas.drawingml.x2006.chart.CTAxDataSource,org.apache.poi.ss.usermodel.charts.ChartDataSource)"
        ]
    },
    "org.apache.poi.xssf.usermodel.helpers.XSSFColumnShifter:void updateConditionalFormatting(org.apache.poi.ss.formula.FormulaShifter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.poi.xssf.usermodel.XSSFSheet:void shiftColumns(int,int,int)"
        ]
    },
    "org.apache.poi.xssf.usermodel.helpers.XSSFRowShifter:void updateConditionalFormatting(org.apache.poi.ss.formula.FormulaShifter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.poi.xssf.usermodel.XSSFSheet:void shiftRows(int,int,int,boolean,boolean)"
        ]
    },
    "org.apache.poi.xssf.streaming.SXSSFRow:org.apache.poi.xssf.streaming.SXSSFCell createCell(int,org.apache.poi.ss.usermodel.CellType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.poi.xssf.streaming.SXSSFRow:org.apache.poi.xssf.streaming.SXSSFCell createCell(int)",
            "org.apache.poi.xssf.streaming.SXSSFRow:org.apache.poi.xssf.streaming.SXSSFCell getCell(int,org.apache.poi.ss.usermodel.Row$MissingCellPolicy)",
            "org.apache.poi.xssf.streaming.SXSSFRow:org.apache.poi.ss.usermodel.Cell createCell(int,org.apache.poi.ss.usermodel.CellType)"
        ]
    },
    "org.apache.poi.xssf.usermodel.XSSFRangeCopier:void adjustCellReferencesInsideFormula(org.apache.poi.ss.usermodel.Cell,org.apache.poi.ss.usermodel.Sheet,int,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.poi.xssf.streaming.SXSSFCell:void setCellType(org.apache.poi.ss.usermodel.CellType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.poi.xssf.streaming.SXSSFCell:void setCellValue(java.util.Date)",
            "org.apache.poi.xssf.streaming.SXSSFCell:void setCellValue(java.util.Calendar)",
            "org.apache.poi.xssf.streaming.SXSSFCell:void setCellValue(org.apache.poi.ss.usermodel.RichTextString)",
            "org.apache.poi.xssf.streaming.SXSSFCell:void setCellValue(java.lang.String)",
            "org.apache.poi.xssf.usermodel.XSSFPivotCacheDefinition:void createCacheFields(org.apache.poi.ss.usermodel.Sheet)",
            "org.apache.poi.xssf.usermodel.XSSFPivotTable:void addDataField(org.apache.poi.ss.usermodel.DataConsolidateFunction,int,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.poi.xssf.streaming.SXSSFCell:void setCellValue(double)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.poi.xssf.streaming.SXSSFCell:void setCellValue(java.util.Date)",
            "org.apache.poi.xssf.streaming.SXSSFCell:void setCellValue(java.util.Calendar)"
        ]
    },
    "org.apache.poi.xssf.streaming.SXSSFCell:void setCellValue(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.poi.xssf.streaming.SXSSFCell:void setCellErrorValue(byte)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.poi.xssf.streaming.SXSSFCell:void setCellValue(double)"
        ]
    },
    "org.apache.poi.xssf.usermodel.XSSFSheet:void copyRows(int,int,int,org.apache.poi.ss.usermodel.CellCopyPolicy)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.poi.xssf.usermodel.XSSFSheet:org.apache.poi.xssf.usermodel.XSSFPivotTable createPivotTable(org.apache.poi.ss.util.AreaReference,org.apache.poi.ss.util.CellReference)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.poi.xssf.usermodel.XSSFSheet:org.apache.poi.xssf.usermodel.XSSFPivotTable createPivotTable(org.apache.poi.ss.usermodel.Name,org.apache.poi.ss.util.CellReference)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.poi.xssf.streaming.SXSSFWorkbook:void injectData(org.apache.poi.openxml4j.util.ZipEntrySource,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.poi.poifs.crypt.temp.SXSSFWorkbookWithCustomZipEntrySource:void write(java.io.OutputStream)",
            "org.apache.poi.xssf.streaming.SXSSFWorkbook:void write(java.io.OutputStream)"
        ]
    },
    "org.apache.poi.xssf.streaming.SXSSFSheet:void collapseRow(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.poi.xssf.streaming.SXSSFSheet:void setRowGroupCollapsed(int,boolean)"
        ]
    },
    "org.apache.poi.xssf.streaming.SXSSFSheet:org.apache.poi.ss.usermodel.Row createRow(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.poi.xssf.streaming.SXSSFSheet:boolean dispose()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.poi.xssf.streaming.SXSSFWorkbook:void removeSheetAt(int)",
            "org.apache.poi.xssf.streaming.SXSSFWorkbook:boolean dispose()"
        ]
    },
    "org.apache.poi.xssf.streaming.SXSSFWorkbook:void flushSheets()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.poi.poifs.crypt.temp.SXSSFWorkbookWithCustomZipEntrySource:void write(java.io.OutputStream)",
            "org.apache.poi.xssf.streaming.SXSSFWorkbook:void write(java.io.OutputStream)"
        ]
    },
    "org.apache.poi.xssf.usermodel.charts.XSSFChartUtil:void buildAxDataSource(org.openxmlformats.schemas.drawingml.x2006.chart.CTAxDataSource,org.apache.poi.ss.usermodel.charts.ChartDataSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.poi.xssf.usermodel.charts.XSSFLineChartData$Series:void addToChart(org.openxmlformats.schemas.drawingml.x2006.chart.CTLineChart)",
            "org.apache.poi.xssf.usermodel.charts.XSSFScatterChartData$Series:void addToChart(org.openxmlformats.schemas.drawingml.x2006.chart.CTScatterChart)"
        ]
    },
    "org.apache.poi.xssf.usermodel.XSSFSheet:void shiftColumns(int,int,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.poi.xssf.usermodel.XSSFSheet:void shiftRows(int,int,int,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.poi.xssf.usermodel.XSSFSheet:void shiftRows(int,int,int)"
        ]
    },
    "org.apache.poi.xssf.streaming.SXSSFRow:org.apache.poi.xssf.streaming.SXSSFCell createCell(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.poi.xssf.streaming.SXSSFRow:org.apache.poi.ss.usermodel.Cell createCell(int)"
        ]
    },
    "org.apache.poi.xssf.streaming.SXSSFRow:org.apache.poi.xssf.streaming.SXSSFCell getCell(int,org.apache.poi.ss.usermodel.Row$MissingCellPolicy)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.poi.xssf.streaming.SXSSFRow:org.apache.poi.xssf.streaming.SXSSFCell getCell(int)",
            "org.apache.poi.xssf.streaming.SXSSFRow:org.apache.poi.ss.usermodel.Cell getCell(int,org.apache.poi.ss.usermodel.Row$MissingCellPolicy)"
        ]
    },
    "org.apache.poi.xssf.streaming.SXSSFRow:org.apache.poi.ss.usermodel.Cell createCell(int,org.apache.poi.ss.usermodel.CellType)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.poi.xssf.streaming.SXSSFCell:void setCellValue(java.util.Date)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.poi.xssf.streaming.SXSSFCell:void setCellValue(java.util.Calendar)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.poi.xssf.usermodel.XSSFPivotTable:void addDataField(org.apache.poi.ss.usermodel.DataConsolidateFunction,int,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.poi.xssf.usermodel.XSSFPivotTable:void addColumnLabel(org.apache.poi.ss.usermodel.DataConsolidateFunction,int,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.poi.poifs.crypt.temp.SXSSFWorkbookWithCustomZipEntrySource:void write(java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.poi.xssf.streaming.SXSSFWorkbook:void write(java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.poi.xssf.streaming.SXSSFSheet:void setRowGroupCollapsed(int,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.poi.xssf.streaming.SXSSFWorkbook:void removeSheetAt(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.poi.xssf.streaming.SXSSFWorkbook:boolean dispose()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.poi.xssf.usermodel.charts.XSSFLineChartData$Series:void addToChart(org.openxmlformats.schemas.drawingml.x2006.chart.CTLineChart)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.poi.xssf.usermodel.charts.XSSFLineChartData:void fillChart(org.apache.poi.ss.usermodel.Chart,org.apache.poi.ss.usermodel.charts.ChartAxis[])"
        ]
    },
    "org.apache.poi.xssf.usermodel.charts.XSSFScatterChartData$Series:void addToChart(org.openxmlformats.schemas.drawingml.x2006.chart.CTScatterChart)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.poi.xssf.usermodel.charts.XSSFScatterChartData:void fillChart(org.apache.poi.ss.usermodel.Chart,org.apache.poi.ss.usermodel.charts.ChartAxis[])"
        ]
    },
    "org.apache.poi.xssf.usermodel.XSSFSheet:void shiftRows(int,int,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.poi.xssf.streaming.SXSSFRow:org.apache.poi.ss.usermodel.Cell createCell(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.poi.xssf.streaming.SXSSFRow:org.apache.poi.xssf.streaming.SXSSFCell getCell(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.poi.xssf.streaming.SXSSFEvaluationSheet:org.apache.poi.ss.formula.EvaluationCell getCell(int,int)",
            "org.apache.poi.xssf.streaming.SXSSFRow:org.apache.poi.ss.usermodel.Cell getCell(int)"
        ]
    },
    "org.apache.poi.xssf.streaming.SXSSFRow:org.apache.poi.ss.usermodel.Cell getCell(int,org.apache.poi.ss.usermodel.Row$MissingCellPolicy)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.poi.xssf.usermodel.XSSFPivotTable:void addColumnLabel(org.apache.poi.ss.usermodel.DataConsolidateFunction,int,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.poi.xssf.usermodel.XSSFPivotTable:void addColumnLabel(org.apache.poi.ss.usermodel.DataConsolidateFunction,int,java.lang.String)",
            "org.apache.poi.xssf.usermodel.XSSFPivotTable:void addColumnLabel(org.apache.poi.ss.usermodel.DataConsolidateFunction,int)"
        ]
    },
    "org.apache.poi.xssf.usermodel.charts.XSSFLineChartData:void fillChart(org.apache.poi.ss.usermodel.Chart,org.apache.poi.ss.usermodel.charts.ChartAxis[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.poi.xssf.usermodel.charts.XSSFScatterChartData:void fillChart(org.apache.poi.ss.usermodel.Chart,org.apache.poi.ss.usermodel.charts.ChartAxis[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.poi.xssf.streaming.SXSSFEvaluationSheet:org.apache.poi.ss.formula.EvaluationCell getCell(int,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.poi.xssf.streaming.SXSSFRow:org.apache.poi.ss.usermodel.Cell getCell(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.poi.xssf.streaming.AutoSizeColumnTracker:void updateColumnWidths(org.apache.poi.ss.usermodel.Row)",
            "org.apache.poi.xssf.usermodel.XSSFPivotCacheDefinition:void createCacheFields(org.apache.poi.ss.usermodel.Sheet)",
            "org.apache.poi.xssf.usermodel.XSSFPivotTable:void addDataField(org.apache.poi.ss.usermodel.DataConsolidateFunction,int,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.poi.xssf.usermodel.XSSFPivotTable:void addColumnLabel(org.apache.poi.ss.usermodel.DataConsolidateFunction,int,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.poi.xssf.usermodel.XSSFPivotTable:void addColumnLabel(org.apache.poi.ss.usermodel.DataConsolidateFunction,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.poi.xssf.streaming.AutoSizeColumnTracker:void updateColumnWidths(org.apache.poi.ss.usermodel.Row)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.poi.xssf.streaming.SXSSFSheet:void flushOneRow()"
        ]
    }
}
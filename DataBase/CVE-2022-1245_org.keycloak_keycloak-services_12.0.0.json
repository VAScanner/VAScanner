{
    "org.keycloak.services.resources.admin.permissions.UserPermissions:boolean isImpersonatable(org.keycloak.models.UserModel)": {
        "isVulRoot": true,
        "vulCaller": [
            "org.keycloak.services.resources.admin.permissions.UserPermissions:boolean canClientImpersonate(org.keycloak.models.ClientModel,org.keycloak.models.UserModel)",
            "org.keycloak.services.resources.admin.permissions.UserPermissions:boolean canImpersonate(org.keycloak.models.UserModel)"
        ]
    },
    "org.keycloak.services.resources.admin.permissions.UserPermissions:boolean canImpersonate(org.keycloak.models.UserModel)": {
        "isVulRoot": true,
        "vulCaller": [
            "org.keycloak.services.resources.admin.permissions.UserPermissions:void requireImpersonate(org.keycloak.models.UserModel)",
            "org.keycloak.services.resources.admin.permissions.UserPermissions:java.util.Map getAccess(org.keycloak.models.UserModel)",
            "org.keycloak.protocol.oidc.endpoints.TokenEndpoint:javax.ws.rs.core.Response tokenExchange()"
        ]
    },
    "org.keycloak.services.resources.admin.permissions.UserPermissions:boolean canClientImpersonate(org.keycloak.models.ClientModel,org.keycloak.models.UserModel)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.protocol.oidc.endpoints.TokenEndpoint:javax.ws.rs.core.Response tokenExchange()"
        ]
    },
    "org.keycloak.services.resources.admin.permissions.UserPermissions:void requireImpersonate(org.keycloak.models.UserModel)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.resources.admin.UserResource:java.util.Map impersonate()"
        ]
    },
    "org.keycloak.services.resources.admin.permissions.UserPermissions:java.util.Map getAccess(org.keycloak.models.UserModel)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.resources.admin.UsersResource:org.keycloak.representations.idm.UserRepresentation lambda$toRepresentation$1(boolean,org.keycloak.models.RealmModel,org.keycloak.services.resources.admin.permissions.UserPermissionEvaluator,org.keycloak.models.UserModel)",
            "org.keycloak.services.resources.admin.UserResource:org.keycloak.representations.idm.UserRepresentation getUser()"
        ]
    },
    "org.keycloak.protocol.oidc.endpoints.TokenEndpoint:javax.ws.rs.core.Response tokenExchange()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.protocol.oidc.endpoints.TokenEndpoint:javax.ws.rs.core.Response processGrantRequest()"
        ]
    },
    "org.keycloak.services.resources.admin.UserResource:java.util.Map impersonate()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.admin.UsersResource:org.keycloak.representations.idm.UserRepresentation lambda$toRepresentation$1(boolean,org.keycloak.models.RealmModel,org.keycloak.services.resources.admin.permissions.UserPermissionEvaluator,org.keycloak.models.UserModel)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.resources.admin.UsersResource$lambda_toRepresentation_1__372:java.lang.Object apply(java.lang.Object)"
        ]
    },
    "org.keycloak.services.resources.admin.UserResource:org.keycloak.representations.idm.UserRepresentation getUser()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.protocol.oidc.endpoints.TokenEndpoint:javax.ws.rs.core.Response processGrantRequest()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.admin.UsersResource$lambda_toRepresentation_1__372:java.lang.Object apply(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.storage.UserStorageManager:boolean lambda$distinctByKey$2(java.util.Set,java.util.function.Function,java.lang.Object)",
            "org.keycloak.storage.AbstractStorageManager:org.keycloak.storage.CacheableStorageProviderModel getStorageProviderModel(org.keycloak.models.RealmModel,java.lang.String)",
            "org.keycloak.utils.ServicesUtils:java.lang.Object lambda$timeBoundOne$1(java.util.concurrent.ExecutorService,long,java.util.function.Function,java.lang.Object)",
            "org.keycloak.utils.ServicesUtils:java.util.stream.Stream lambda$timeBound$0(java.util.concurrent.ExecutorService,long,java.util.function.Function,java.lang.Object)",
            "org.keycloak.authentication.authenticators.x509.UserIdentityExtractor$X500NameRDNExtractor:java.lang.Object extractUserIdentity(java.security.cert.X509Certificate[])",
            "org.keycloak.authentication.authenticators.x509.AbstractX509ClientCertificateAuthenticator$UserIdentityExtractorBuilder:java.lang.String lambda$fromConfig$9(org.keycloak.authentication.authenticators.x509.X509AuthenticatorConfigModel,java.security.cert.X509Certificate[])",
            "org.keycloak.authentication.authenticators.x509.UserIdentityExtractor$PatternMatcher:java.lang.Object extractUserIdentity(java.security.cert.X509Certificate[])",
            "org.keycloak.authorization.admin.ResourceSetService:javax.ws.rs.core.Response findById(java.lang.String,java.util.function.Function)"
        ]
    },
    "org.keycloak.storage.UserStorageManager:boolean lambda$distinctByKey$2(java.util.Set,java.util.function.Function,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.storage.UserStorageManager$lambda_distinctByKey_2__31:boolean test(java.lang.Object)"
        ]
    },
    "org.keycloak.storage.AbstractStorageManager:org.keycloak.storage.CacheableStorageProviderModel getStorageProviderModel(org.keycloak.models.RealmModel,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.storage.UserStorageManager:org.keycloak.models.UserModel importValidation(org.keycloak.models.RealmModel,org.keycloak.models.UserModel)",
            "org.keycloak.storage.AbstractStorageManager:java.lang.Object getStorageProviderInstance(org.keycloak.models.RealmModel,java.lang.String,java.lang.Class,boolean)",
            "org.keycloak.credential.UserCredentialStoreManager:boolean isValid(org.keycloak.models.RealmModel,org.keycloak.models.UserModel,java.util.List)",
            "org.keycloak.credential.UserCredentialStoreManager:boolean updateCredential(org.keycloak.models.RealmModel,org.keycloak.models.UserModel,org.keycloak.credential.CredentialInput)",
            "org.keycloak.credential.UserCredentialStoreManager:void disableCredentialType(org.keycloak.models.RealmModel,org.keycloak.models.UserModel,java.lang.String)",
            "org.keycloak.credential.UserCredentialStoreManager:java.util.stream.Stream getDisableableCredentialTypesStream(org.keycloak.models.RealmModel,org.keycloak.models.UserModel)",
            "org.keycloak.credential.UserCredentialStoreManager:org.keycloak.credential.UserCredentialStoreManager$UserStorageCredentialConfigured isConfiguredThroughUserStorage(org.keycloak.models.RealmModel,org.keycloak.models.UserModel,java.lang.String)"
        ]
    },
    "org.keycloak.utils.ServicesUtils:java.lang.Object lambda$timeBoundOne$1(java.util.concurrent.ExecutorService,long,java.util.function.Function,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.utils.ServicesUtils$lambda_timeBoundOne_1__59:java.lang.Object apply(java.lang.Object)"
        ]
    },
    "org.keycloak.utils.ServicesUtils:java.util.stream.Stream lambda$timeBound$0(java.util.concurrent.ExecutorService,long,java.util.function.Function,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.utils.ServicesUtils$lambda_timeBound_0__58:java.lang.Object apply(java.lang.Object)"
        ]
    },
    "org.keycloak.authentication.authenticators.x509.UserIdentityExtractor$X500NameRDNExtractor:java.lang.Object extractUserIdentity(java.security.cert.X509Certificate[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authentication.authenticators.x509.UserIdentityExtractor$OrExtractor:java.lang.Object extractUserIdentity(java.security.cert.X509Certificate[])",
            "org.keycloak.authentication.authenticators.x509.X509ClientCertificateAuthenticator:void authenticate(org.keycloak.authentication.AuthenticationFlowContext)",
            "org.keycloak.authentication.authenticators.x509.ValidateX509CertificateUsername:void authenticate(org.keycloak.authentication.AuthenticationFlowContext)"
        ]
    },
    "org.keycloak.authentication.authenticators.x509.AbstractX509ClientCertificateAuthenticator$UserIdentityExtractorBuilder:java.lang.String lambda$fromConfig$9(org.keycloak.authentication.authenticators.x509.X509AuthenticatorConfigModel,java.security.cert.X509Certificate[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authentication.authenticators.x509.AbstractX509ClientCertificateAuthenticator$UserIdentityExtractorBuilder$lambda_fromConfig_9__753:java.lang.Object apply(java.lang.Object)"
        ]
    },
    "org.keycloak.authentication.authenticators.x509.UserIdentityExtractor$PatternMatcher:java.lang.Object extractUserIdentity(java.security.cert.X509Certificate[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authentication.authenticators.x509.UserIdentityExtractor$OrExtractor:java.lang.Object extractUserIdentity(java.security.cert.X509Certificate[])",
            "org.keycloak.authentication.authenticators.x509.X509ClientCertificateAuthenticator:void authenticate(org.keycloak.authentication.AuthenticationFlowContext)",
            "org.keycloak.authentication.authenticators.x509.ValidateX509CertificateUsername:void authenticate(org.keycloak.authentication.AuthenticationFlowContext)"
        ]
    },
    "org.keycloak.authorization.admin.ResourceSetService:javax.ws.rs.core.Response findById(java.lang.String,java.util.function.Function)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authorization.admin.ResourceSetService:javax.ws.rs.core.Response findById(java.lang.String)",
            "org.keycloak.authorization.protection.resource.ResourceService:javax.ws.rs.core.Response findById(java.lang.String)"
        ]
    },
    "org.keycloak.storage.UserStorageManager$lambda_distinctByKey_2__31:boolean test(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.resources.admin.permissions.UserPermissions:boolean evaluateHierarchy(java.util.function.Predicate,org.keycloak.models.GroupModel,java.util.Set)",
            "org.keycloak.authentication.actiontoken.TokenUtils:boolean lambda$onlyIf$2(java.util.function.Predicate,org.keycloak.TokenVerifier$Predicate,org.keycloak.representations.JsonWebToken)",
            "org.keycloak.authentication.actiontoken.TokenUtils:boolean lambda$checkThat$1(java.util.function.Predicate,java.lang.String,java.lang.String,org.keycloak.representations.JsonWebToken)"
        ]
    },
    "org.keycloak.storage.UserStorageManager:org.keycloak.models.UserModel importValidation(org.keycloak.models.RealmModel,org.keycloak.models.UserModel)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.storage.UserStorageManager:org.keycloak.models.UserModel getUserById(java.lang.String,org.keycloak.models.RealmModel)",
            "org.keycloak.storage.UserStorageManager:org.keycloak.models.UserModel getUserByUsername(java.lang.String,org.keycloak.models.RealmModel)",
            "org.keycloak.storage.UserStorageManager:org.keycloak.models.UserModel getUserByEmail(java.lang.String,org.keycloak.models.RealmModel)",
            "org.keycloak.storage.UserStorageManager:org.keycloak.models.UserModel getUserByFederatedIdentity(org.keycloak.models.FederatedIdentityModel,org.keycloak.models.RealmModel)",
            "org.keycloak.storage.UserStorageManager:org.keycloak.models.UserModel lambda$importValidation$1(org.keycloak.models.RealmModel,org.keycloak.models.UserModel)"
        ]
    },
    "org.keycloak.storage.AbstractStorageManager:java.lang.Object getStorageProviderInstance(org.keycloak.models.RealmModel,java.lang.String,java.lang.Class,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.storage.AbstractStorageManager:java.lang.Object getStorageProviderInstance(org.keycloak.models.RealmModel,java.lang.String,java.lang.Class)"
        ]
    },
    "org.keycloak.credential.UserCredentialStoreManager:boolean isValid(org.keycloak.models.RealmModel,org.keycloak.models.UserModel,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.credential.UserCredentialStoreManager:boolean isValid(org.keycloak.models.RealmModel,org.keycloak.models.UserModel,org.keycloak.credential.CredentialInput[])"
        ]
    },
    "org.keycloak.credential.UserCredentialStoreManager:boolean updateCredential(org.keycloak.models.RealmModel,org.keycloak.models.UserModel,org.keycloak.credential.CredentialInput)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.credential.UserCredentialStoreManager:void disableCredentialType(org.keycloak.models.RealmModel,org.keycloak.models.UserModel,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.credential.UserCredentialStoreManager:java.util.stream.Stream getDisableableCredentialTypesStream(org.keycloak.models.RealmModel,org.keycloak.models.UserModel)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.credential.UserCredentialStoreManager:org.keycloak.credential.UserCredentialStoreManager$UserStorageCredentialConfigured isConfiguredThroughUserStorage(org.keycloak.models.RealmModel,org.keycloak.models.UserModel,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.credential.UserCredentialStoreManager:boolean isConfiguredFor(org.keycloak.models.RealmModel,org.keycloak.models.UserModel,java.lang.String)",
            "org.keycloak.credential.UserCredentialStoreManager:boolean lambda$getConfiguredUserStorageCredentialTypesStream$15(org.keycloak.models.RealmModel,org.keycloak.models.UserModel,java.lang.String)"
        ]
    },
    "org.keycloak.utils.ServicesUtils$lambda_timeBoundOne_1__59:java.lang.Object apply(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.storage.UserStorageManager:boolean lambda$distinctByKey$2(java.util.Set,java.util.function.Function,java.lang.Object)",
            "org.keycloak.storage.AbstractStorageManager:org.keycloak.storage.CacheableStorageProviderModel getStorageProviderModel(org.keycloak.models.RealmModel,java.lang.String)",
            "org.keycloak.utils.ServicesUtils:java.lang.Object lambda$timeBoundOne$1(java.util.concurrent.ExecutorService,long,java.util.function.Function,java.lang.Object)",
            "org.keycloak.utils.ServicesUtils:java.util.stream.Stream lambda$timeBound$0(java.util.concurrent.ExecutorService,long,java.util.function.Function,java.lang.Object)",
            "org.keycloak.authentication.authenticators.x509.UserIdentityExtractor$X500NameRDNExtractor:java.lang.Object extractUserIdentity(java.security.cert.X509Certificate[])",
            "org.keycloak.authentication.authenticators.x509.AbstractX509ClientCertificateAuthenticator$UserIdentityExtractorBuilder:java.lang.String lambda$fromConfig$9(org.keycloak.authentication.authenticators.x509.X509AuthenticatorConfigModel,java.security.cert.X509Certificate[])",
            "org.keycloak.authentication.authenticators.x509.UserIdentityExtractor$PatternMatcher:java.lang.Object extractUserIdentity(java.security.cert.X509Certificate[])",
            "org.keycloak.authorization.admin.ResourceSetService:javax.ws.rs.core.Response findById(java.lang.String,java.util.function.Function)"
        ]
    },
    "org.keycloak.utils.ServicesUtils$lambda_timeBound_0__58:java.lang.Object apply(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.storage.UserStorageManager:boolean lambda$distinctByKey$2(java.util.Set,java.util.function.Function,java.lang.Object)",
            "org.keycloak.storage.AbstractStorageManager:org.keycloak.storage.CacheableStorageProviderModel getStorageProviderModel(org.keycloak.models.RealmModel,java.lang.String)",
            "org.keycloak.utils.ServicesUtils:java.lang.Object lambda$timeBoundOne$1(java.util.concurrent.ExecutorService,long,java.util.function.Function,java.lang.Object)",
            "org.keycloak.utils.ServicesUtils:java.util.stream.Stream lambda$timeBound$0(java.util.concurrent.ExecutorService,long,java.util.function.Function,java.lang.Object)",
            "org.keycloak.authentication.authenticators.x509.UserIdentityExtractor$X500NameRDNExtractor:java.lang.Object extractUserIdentity(java.security.cert.X509Certificate[])",
            "org.keycloak.authentication.authenticators.x509.AbstractX509ClientCertificateAuthenticator$UserIdentityExtractorBuilder:java.lang.String lambda$fromConfig$9(org.keycloak.authentication.authenticators.x509.X509AuthenticatorConfigModel,java.security.cert.X509Certificate[])",
            "org.keycloak.authentication.authenticators.x509.UserIdentityExtractor$PatternMatcher:java.lang.Object extractUserIdentity(java.security.cert.X509Certificate[])",
            "org.keycloak.authorization.admin.ResourceSetService:javax.ws.rs.core.Response findById(java.lang.String,java.util.function.Function)"
        ]
    },
    "org.keycloak.authentication.authenticators.x509.UserIdentityExtractor$OrExtractor:java.lang.Object extractUserIdentity(java.security.cert.X509Certificate[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authentication.authenticators.x509.UserIdentityExtractor$OrExtractor:java.lang.Object extractUserIdentity(java.security.cert.X509Certificate[])",
            "org.keycloak.authentication.authenticators.x509.X509ClientCertificateAuthenticator:void authenticate(org.keycloak.authentication.AuthenticationFlowContext)",
            "org.keycloak.authentication.authenticators.x509.ValidateX509CertificateUsername:void authenticate(org.keycloak.authentication.AuthenticationFlowContext)"
        ]
    },
    "org.keycloak.authentication.authenticators.x509.X509ClientCertificateAuthenticator:void authenticate(org.keycloak.authentication.AuthenticationFlowContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authentication.DefaultAuthenticationFlow:javax.ws.rs.core.Response processSingleFlowExecutionModel(org.keycloak.models.AuthenticationExecutionModel,boolean)"
        ]
    },
    "org.keycloak.authentication.authenticators.x509.ValidateX509CertificateUsername:void authenticate(org.keycloak.authentication.AuthenticationFlowContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authentication.DefaultAuthenticationFlow:javax.ws.rs.core.Response processSingleFlowExecutionModel(org.keycloak.models.AuthenticationExecutionModel,boolean)"
        ]
    },
    "org.keycloak.authentication.authenticators.x509.AbstractX509ClientCertificateAuthenticator$UserIdentityExtractorBuilder$lambda_fromConfig_9__753:java.lang.Object apply(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.storage.UserStorageManager:boolean lambda$distinctByKey$2(java.util.Set,java.util.function.Function,java.lang.Object)",
            "org.keycloak.storage.AbstractStorageManager:org.keycloak.storage.CacheableStorageProviderModel getStorageProviderModel(org.keycloak.models.RealmModel,java.lang.String)",
            "org.keycloak.utils.ServicesUtils:java.lang.Object lambda$timeBoundOne$1(java.util.concurrent.ExecutorService,long,java.util.function.Function,java.lang.Object)",
            "org.keycloak.utils.ServicesUtils:java.util.stream.Stream lambda$timeBound$0(java.util.concurrent.ExecutorService,long,java.util.function.Function,java.lang.Object)",
            "org.keycloak.authentication.authenticators.x509.UserIdentityExtractor$X500NameRDNExtractor:java.lang.Object extractUserIdentity(java.security.cert.X509Certificate[])",
            "org.keycloak.authentication.authenticators.x509.AbstractX509ClientCertificateAuthenticator$UserIdentityExtractorBuilder:java.lang.String lambda$fromConfig$9(org.keycloak.authentication.authenticators.x509.X509AuthenticatorConfigModel,java.security.cert.X509Certificate[])",
            "org.keycloak.authentication.authenticators.x509.UserIdentityExtractor$PatternMatcher:java.lang.Object extractUserIdentity(java.security.cert.X509Certificate[])",
            "org.keycloak.authorization.admin.ResourceSetService:javax.ws.rs.core.Response findById(java.lang.String,java.util.function.Function)"
        ]
    },
    "org.keycloak.authorization.admin.ResourceSetService:javax.ws.rs.core.Response findById(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.authorization.protection.resource.ResourceService:javax.ws.rs.core.Response findById(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.admin.permissions.UserPermissions:boolean evaluateHierarchy(java.util.function.Predicate,org.keycloak.models.GroupModel,java.util.Set)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.resources.admin.permissions.UserPermissions:boolean evaluateHierarchy(java.util.function.Predicate,org.keycloak.models.GroupModel,java.util.Set)",
            "org.keycloak.services.resources.admin.permissions.UserPermissions:boolean lambda$evaluateHierarchy$0(java.util.function.Predicate,java.util.Set,org.keycloak.models.GroupModel)"
        ]
    },
    "org.keycloak.authentication.actiontoken.TokenUtils:boolean lambda$onlyIf$2(java.util.function.Predicate,org.keycloak.TokenVerifier$Predicate,org.keycloak.representations.JsonWebToken)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authentication.actiontoken.TokenUtils$lambda_onlyIf_2__432:boolean test(org.keycloak.representations.JsonWebToken)"
        ]
    },
    "org.keycloak.authentication.actiontoken.TokenUtils:boolean lambda$checkThat$1(java.util.function.Predicate,java.lang.String,java.lang.String,org.keycloak.representations.JsonWebToken)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authentication.actiontoken.TokenUtils$lambda_checkThat_1__431:boolean test(org.keycloak.representations.JsonWebToken)"
        ]
    },
    "org.keycloak.storage.UserStorageManager:org.keycloak.models.UserModel getUserById(java.lang.String,org.keycloak.models.RealmModel)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.storage.UserStorageManager:org.keycloak.models.UserModel getUserByFederatedIdentity(org.keycloak.models.FederatedIdentityModel,org.keycloak.models.RealmModel)",
            "org.keycloak.storage.UserStorageManager:org.keycloak.models.UserModel lambda$null$15(org.keycloak.models.RealmModel,java.lang.String)",
            "org.keycloak.storage.UserStorageManager:org.keycloak.models.UserModel lambda$null$8(org.keycloak.models.RealmModel,java.lang.String)"
        ]
    },
    "org.keycloak.storage.UserStorageManager:org.keycloak.models.UserModel getUserByUsername(java.lang.String,org.keycloak.models.RealmModel)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.storage.UserStorageManager:org.keycloak.models.UserModel getUserByEmail(java.lang.String,org.keycloak.models.RealmModel)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.storage.UserStorageManager:org.keycloak.models.UserModel getUserByFederatedIdentity(org.keycloak.models.FederatedIdentityModel,org.keycloak.models.RealmModel)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.storage.UserStorageManager:org.keycloak.models.UserModel lambda$importValidation$1(org.keycloak.models.RealmModel,org.keycloak.models.UserModel)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.storage.UserStorageManager$lambda_importValidation_1__28:java.lang.Object apply(java.lang.Object)"
        ]
    },
    "org.keycloak.storage.AbstractStorageManager:java.lang.Object getStorageProviderInstance(org.keycloak.models.RealmModel,java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.storage.GroupStorageManager:org.keycloak.models.GroupModel getGroupById(org.keycloak.models.RealmModel,java.lang.String)",
            "org.keycloak.storage.UserStorageManager:boolean removeUser(org.keycloak.models.RealmModel,org.keycloak.models.UserModel)",
            "org.keycloak.storage.UserStorageManager:org.keycloak.models.UserModel getUserById(java.lang.String,org.keycloak.models.RealmModel)",
            "org.keycloak.storage.UserStorageManager:void onCache(org.keycloak.models.RealmModel,org.keycloak.models.cache.CachedUserModel,org.keycloak.models.UserModel)"
        ]
    },
    "org.keycloak.credential.UserCredentialStoreManager:boolean isValid(org.keycloak.models.RealmModel,org.keycloak.models.UserModel,org.keycloak.credential.CredentialInput[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.credential.UserCredentialStoreManager:boolean isConfiguredFor(org.keycloak.models.RealmModel,org.keycloak.models.UserModel,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.credential.UserCredentialStoreManager:boolean lambda$getConfiguredUserStorageCredentialTypesStream$15(org.keycloak.models.RealmModel,org.keycloak.models.UserModel,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.credential.UserCredentialStoreManager$lambda_getConfiguredUserStorageCredentialTypesStream_15__254:boolean test(java.lang.Object)"
        ]
    },
    "org.keycloak.authentication.DefaultAuthenticationFlow:javax.ws.rs.core.Response processSingleFlowExecutionModel(org.keycloak.models.AuthenticationExecutionModel,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authentication.DefaultAuthenticationFlow:javax.ws.rs.core.Response processAction(java.lang.String)",
            "org.keycloak.authentication.DefaultAuthenticationFlow:javax.ws.rs.core.Response continueAuthenticationAfterSuccessfulAction(org.keycloak.models.AuthenticationExecutionModel)",
            "org.keycloak.authentication.DefaultAuthenticationFlow:javax.ws.rs.core.Response processFlow()"
        ]
    },
    "org.keycloak.services.resources.admin.permissions.UserPermissions:boolean lambda$evaluateHierarchy$0(java.util.function.Predicate,java.util.Set,org.keycloak.models.GroupModel)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.resources.admin.permissions.UserPermissions$lambda_evaluateHierarchy_0__353:boolean test(java.lang.Object)"
        ]
    },
    "org.keycloak.authentication.actiontoken.TokenUtils$lambda_onlyIf_2__432:boolean test(org.keycloak.representations.JsonWebToken)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authentication.actiontoken.TokenUtils:boolean lambda$onlyIf$2(java.util.function.Predicate,org.keycloak.TokenVerifier$Predicate,org.keycloak.representations.JsonWebToken)"
        ]
    },
    "org.keycloak.authentication.actiontoken.TokenUtils$lambda_checkThat_1__431:boolean test(org.keycloak.representations.JsonWebToken)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authentication.actiontoken.TokenUtils:boolean lambda$onlyIf$2(java.util.function.Predicate,org.keycloak.TokenVerifier$Predicate,org.keycloak.representations.JsonWebToken)"
        ]
    },
    "org.keycloak.storage.UserStorageManager:org.keycloak.models.UserModel lambda$null$15(org.keycloak.models.RealmModel,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.storage.UserStorageManager$lambda_null_15__51:java.lang.Object apply(java.lang.Object)"
        ]
    },
    "org.keycloak.storage.UserStorageManager:org.keycloak.models.UserModel lambda$null$8(org.keycloak.models.RealmModel,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.storage.UserStorageManager$lambda_null_8__53:java.lang.Object apply(java.lang.Object)"
        ]
    },
    "org.keycloak.storage.UserStorageManager$lambda_importValidation_1__28:java.lang.Object apply(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.storage.UserStorageManager:boolean lambda$distinctByKey$2(java.util.Set,java.util.function.Function,java.lang.Object)",
            "org.keycloak.storage.AbstractStorageManager:org.keycloak.storage.CacheableStorageProviderModel getStorageProviderModel(org.keycloak.models.RealmModel,java.lang.String)",
            "org.keycloak.utils.ServicesUtils:java.lang.Object lambda$timeBoundOne$1(java.util.concurrent.ExecutorService,long,java.util.function.Function,java.lang.Object)",
            "org.keycloak.utils.ServicesUtils:java.util.stream.Stream lambda$timeBound$0(java.util.concurrent.ExecutorService,long,java.util.function.Function,java.lang.Object)",
            "org.keycloak.authentication.authenticators.x509.UserIdentityExtractor$X500NameRDNExtractor:java.lang.Object extractUserIdentity(java.security.cert.X509Certificate[])",
            "org.keycloak.authentication.authenticators.x509.AbstractX509ClientCertificateAuthenticator$UserIdentityExtractorBuilder:java.lang.String lambda$fromConfig$9(org.keycloak.authentication.authenticators.x509.X509AuthenticatorConfigModel,java.security.cert.X509Certificate[])",
            "org.keycloak.authentication.authenticators.x509.UserIdentityExtractor$PatternMatcher:java.lang.Object extractUserIdentity(java.security.cert.X509Certificate[])",
            "org.keycloak.authorization.admin.ResourceSetService:javax.ws.rs.core.Response findById(java.lang.String,java.util.function.Function)"
        ]
    },
    "org.keycloak.storage.GroupStorageManager:org.keycloak.models.GroupModel getGroupById(org.keycloak.models.RealmModel,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.storage.GroupStorageManager:org.keycloak.models.GroupModel getGroupById(org.keycloak.models.RealmModel,java.lang.String)",
            "org.keycloak.services.resources.admin.UserResource:void removeMembership(java.lang.String)",
            "org.keycloak.services.resources.admin.UserResource:void joinGroup(java.lang.String)"
        ]
    },
    "org.keycloak.storage.UserStorageManager:boolean removeUser(org.keycloak.models.RealmModel,org.keycloak.models.UserModel)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.storage.UserStorageManager:void onCache(org.keycloak.models.RealmModel,org.keycloak.models.cache.CachedUserModel,org.keycloak.models.UserModel)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.storage.UserStorageManager:void onCache(org.keycloak.models.RealmModel,org.keycloak.models.cache.CachedUserModel,org.keycloak.models.UserModel)",
            "org.keycloak.credential.UserCredentialStoreManager:void lambda$onCache$14(org.keycloak.models.RealmModel,org.keycloak.models.cache.CachedUserModel,org.keycloak.models.UserModel,org.keycloak.models.cache.OnUserCache)"
        ]
    },
    "org.keycloak.credential.UserCredentialStoreManager$lambda_getConfiguredUserStorageCredentialTypesStream_15__254:boolean test(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.resources.admin.permissions.UserPermissions:boolean evaluateHierarchy(java.util.function.Predicate,org.keycloak.models.GroupModel,java.util.Set)",
            "org.keycloak.authentication.actiontoken.TokenUtils:boolean lambda$onlyIf$2(java.util.function.Predicate,org.keycloak.TokenVerifier$Predicate,org.keycloak.representations.JsonWebToken)",
            "org.keycloak.authentication.actiontoken.TokenUtils:boolean lambda$checkThat$1(java.util.function.Predicate,java.lang.String,java.lang.String,org.keycloak.representations.JsonWebToken)"
        ]
    },
    "org.keycloak.authentication.DefaultAuthenticationFlow:javax.ws.rs.core.Response processAction(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authentication.DefaultAuthenticationFlow:javax.ws.rs.core.Response processAction(java.lang.String)",
            "org.keycloak.authentication.AuthenticationProcessor:javax.ws.rs.core.Response authenticationAction(java.lang.String)"
        ]
    },
    "org.keycloak.authentication.DefaultAuthenticationFlow:javax.ws.rs.core.Response continueAuthenticationAfterSuccessfulAction(org.keycloak.models.AuthenticationExecutionModel)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authentication.DefaultAuthenticationFlow:javax.ws.rs.core.Response processAction(java.lang.String)"
        ]
    },
    "org.keycloak.authentication.DefaultAuthenticationFlow:javax.ws.rs.core.Response processFlow()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authentication.DefaultAuthenticationFlow:javax.ws.rs.core.Response processAction(java.lang.String)",
            "org.keycloak.authentication.DefaultAuthenticationFlow:javax.ws.rs.core.Response continueAuthenticationAfterSuccessfulAction(org.keycloak.models.AuthenticationExecutionModel)",
            "org.keycloak.authentication.DefaultAuthenticationFlow:javax.ws.rs.core.Response processSingleFlowExecutionModel(org.keycloak.models.AuthenticationExecutionModel,boolean)",
            "org.keycloak.authentication.AuthenticationProcessor:javax.ws.rs.core.Response authenticateClient()",
            "org.keycloak.authentication.AuthenticationProcessor:javax.ws.rs.core.Response authenticateOnly()"
        ]
    },
    "org.keycloak.services.resources.admin.permissions.UserPermissions$lambda_evaluateHierarchy_0__353:boolean test(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.resources.admin.permissions.UserPermissions:boolean evaluateHierarchy(java.util.function.Predicate,org.keycloak.models.GroupModel,java.util.Set)",
            "org.keycloak.authentication.actiontoken.TokenUtils:boolean lambda$onlyIf$2(java.util.function.Predicate,org.keycloak.TokenVerifier$Predicate,org.keycloak.representations.JsonWebToken)",
            "org.keycloak.authentication.actiontoken.TokenUtils:boolean lambda$checkThat$1(java.util.function.Predicate,java.lang.String,java.lang.String,org.keycloak.representations.JsonWebToken)"
        ]
    },
    "org.keycloak.storage.UserStorageManager$lambda_null_15__51:java.lang.Object apply(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.storage.UserStorageManager:boolean lambda$distinctByKey$2(java.util.Set,java.util.function.Function,java.lang.Object)",
            "org.keycloak.storage.AbstractStorageManager:org.keycloak.storage.CacheableStorageProviderModel getStorageProviderModel(org.keycloak.models.RealmModel,java.lang.String)",
            "org.keycloak.utils.ServicesUtils:java.lang.Object lambda$timeBoundOne$1(java.util.concurrent.ExecutorService,long,java.util.function.Function,java.lang.Object)",
            "org.keycloak.utils.ServicesUtils:java.util.stream.Stream lambda$timeBound$0(java.util.concurrent.ExecutorService,long,java.util.function.Function,java.lang.Object)",
            "org.keycloak.authentication.authenticators.x509.UserIdentityExtractor$X500NameRDNExtractor:java.lang.Object extractUserIdentity(java.security.cert.X509Certificate[])",
            "org.keycloak.authentication.authenticators.x509.AbstractX509ClientCertificateAuthenticator$UserIdentityExtractorBuilder:java.lang.String lambda$fromConfig$9(org.keycloak.authentication.authenticators.x509.X509AuthenticatorConfigModel,java.security.cert.X509Certificate[])",
            "org.keycloak.authentication.authenticators.x509.UserIdentityExtractor$PatternMatcher:java.lang.Object extractUserIdentity(java.security.cert.X509Certificate[])",
            "org.keycloak.authorization.admin.ResourceSetService:javax.ws.rs.core.Response findById(java.lang.String,java.util.function.Function)"
        ]
    },
    "org.keycloak.storage.UserStorageManager$lambda_null_8__53:java.lang.Object apply(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.storage.UserStorageManager:boolean lambda$distinctByKey$2(java.util.Set,java.util.function.Function,java.lang.Object)",
            "org.keycloak.storage.AbstractStorageManager:org.keycloak.storage.CacheableStorageProviderModel getStorageProviderModel(org.keycloak.models.RealmModel,java.lang.String)",
            "org.keycloak.utils.ServicesUtils:java.lang.Object lambda$timeBoundOne$1(java.util.concurrent.ExecutorService,long,java.util.function.Function,java.lang.Object)",
            "org.keycloak.utils.ServicesUtils:java.util.stream.Stream lambda$timeBound$0(java.util.concurrent.ExecutorService,long,java.util.function.Function,java.lang.Object)",
            "org.keycloak.authentication.authenticators.x509.UserIdentityExtractor$X500NameRDNExtractor:java.lang.Object extractUserIdentity(java.security.cert.X509Certificate[])",
            "org.keycloak.authentication.authenticators.x509.AbstractX509ClientCertificateAuthenticator$UserIdentityExtractorBuilder:java.lang.String lambda$fromConfig$9(org.keycloak.authentication.authenticators.x509.X509AuthenticatorConfigModel,java.security.cert.X509Certificate[])",
            "org.keycloak.authentication.authenticators.x509.UserIdentityExtractor$PatternMatcher:java.lang.Object extractUserIdentity(java.security.cert.X509Certificate[])",
            "org.keycloak.authorization.admin.ResourceSetService:javax.ws.rs.core.Response findById(java.lang.String,java.util.function.Function)"
        ]
    },
    "org.keycloak.services.resources.admin.UserResource:void removeMembership(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.admin.UserResource:void joinGroup(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.credential.UserCredentialStoreManager:void lambda$onCache$14(org.keycloak.models.RealmModel,org.keycloak.models.cache.CachedUserModel,org.keycloak.models.UserModel,org.keycloak.models.cache.OnUserCache)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.credential.UserCredentialStoreManager$lambda_onCache_14__252:void accept(java.lang.Object)"
        ]
    },
    "org.keycloak.authentication.AuthenticationProcessor:javax.ws.rs.core.Response authenticationAction(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response processFlow(boolean,java.lang.String,org.keycloak.sessions.AuthenticationSessionModel,java.lang.String,org.keycloak.models.AuthenticationFlowModel,java.lang.String,org.keycloak.authentication.AuthenticationProcessor)"
        ]
    },
    "org.keycloak.authentication.AuthenticationProcessor:javax.ws.rs.core.Response authenticateClient()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.clientregistration.ClientRegistrationAuth:boolean authenticateClient(org.keycloak.models.ClientModel)",
            "org.keycloak.protocol.oidc.utils.AuthorizeClientUtil:org.keycloak.protocol.oidc.utils.AuthorizeClientUtil$ClientAuthResult authorizeClient(org.keycloak.models.KeycloakSession,org.keycloak.events.EventBuilder)"
        ]
    },
    "org.keycloak.authentication.AuthenticationProcessor:javax.ws.rs.core.Response authenticateOnly()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.resources.LoginActionsService$1:javax.ws.rs.core.Response authenticateOnly()",
            "org.keycloak.protocol.oidc.endpoints.TokenEndpoint:javax.ws.rs.core.Response resourceOwnerPasswordCredentialsGrant()",
            "org.keycloak.protocol.AuthorizationEndpointBase:javax.ws.rs.core.Response handleBrowserAuthenticationRequest(org.keycloak.sessions.AuthenticationSessionModel,org.keycloak.protocol.LoginProtocol,boolean,boolean)",
            "org.keycloak.authentication.AuthenticationProcessor:javax.ws.rs.core.Response authenticate()"
        ]
    },
    "org.keycloak.credential.UserCredentialStoreManager$lambda_onCache_14__252:void accept(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.storage.openshift.OpenshiftSAClientAdapter:java.lang.Object getConfigOrDefault(java.util.function.Supplier,java.util.function.Consumer,java.util.function.Supplier)",
            "org.keycloak.services.filters.AbstractRequestFilter:void filter(org.keycloak.common.ClientConnection,java.util.function.Consumer)",
            "org.keycloak.services.resources.IdentityBrokerService:void setDiffAttrToConsumer(java.lang.String,java.lang.String,java.util.function.Consumer)",
            "org.keycloak.services.resources.LoginActionsServiceChecks:void checkIsUserValid(org.keycloak.models.KeycloakSession,org.keycloak.models.RealmModel,java.lang.String,java.util.function.Consumer)",
            "org.keycloak.utils.ServicesUtils:void lambda$consumeWithTimeBound$2(java.util.concurrent.ExecutorService,long,java.util.function.Consumer,java.lang.Object)",
            "org.keycloak.broker.saml.mappers.UserAttributeMapper:void setIfNotEmpty(java.util.function.Consumer,java.util.List)",
            "org.keycloak.broker.saml.mappers.UserAttributeMapper:void setIfNotEmptyAndDifferent(java.util.function.Consumer,java.util.function.Supplier,java.util.List)",
            "org.keycloak.broker.oidc.mappers.UserAttributeMapper:void setIfNotEmpty(java.util.function.Consumer,java.util.List)"
        ]
    },
    "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response processFlow(boolean,java.lang.String,org.keycloak.sessions.AuthenticationSessionModel,java.lang.String,org.keycloak.models.AuthenticationFlowModel,java.lang.String,org.keycloak.authentication.AuthenticationProcessor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response processAuthentication(boolean,java.lang.String,org.keycloak.sessions.AuthenticationSessionModel,java.lang.String)",
            "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response processResetCredentials(boolean,java.lang.String,org.keycloak.sessions.AuthenticationSessionModel,java.lang.String)",
            "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response processRegistration(boolean,java.lang.String,org.keycloak.sessions.AuthenticationSessionModel,java.lang.String)",
            "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response brokerLoginFlow(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.keycloak.services.resources.LoginActionsService$processFlow__94:javax.ws.rs.core.Response processFlow(boolean,java.lang.String,org.keycloak.sessions.AuthenticationSessionModel,java.lang.String,org.keycloak.models.AuthenticationFlowModel,java.lang.String,org.keycloak.authentication.AuthenticationProcessor)"
        ]
    },
    "org.keycloak.services.clientregistration.ClientRegistrationAuth:boolean authenticateClient(org.keycloak.models.ClientModel)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.clientregistration.ClientRegistrationAuth:void requireView(org.keycloak.models.ClientModel)"
        ]
    },
    "org.keycloak.protocol.oidc.utils.AuthorizeClientUtil:org.keycloak.protocol.oidc.utils.AuthorizeClientUtil$ClientAuthResult authorizeClient(org.keycloak.models.KeycloakSession,org.keycloak.events.EventBuilder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.resources.ClientsManagementService:org.keycloak.models.ClientModel authorizeClient()",
            "org.keycloak.protocol.oidc.endpoints.TokenIntrospectionEndpoint:void authorizeClient()",
            "org.keycloak.protocol.oidc.endpoints.TokenEndpoint:void checkClient()",
            "org.keycloak.protocol.oidc.endpoints.LogoutEndpoint:org.keycloak.models.ClientModel authorizeClient()",
            "org.keycloak.protocol.oidc.endpoints.TokenRevocationEndpoint:void checkClient()",
            "org.keycloak.protocol.openshift.OpenShiftTokenReviewEndpoint:void authorizeClient()"
        ]
    },
    "org.keycloak.services.resources.LoginActionsService$1:javax.ws.rs.core.Response authenticateOnly()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.protocol.oidc.endpoints.TokenEndpoint:javax.ws.rs.core.Response resourceOwnerPasswordCredentialsGrant()",
            "org.keycloak.protocol.AuthorizationEndpointBase:javax.ws.rs.core.Response handleBrowserAuthenticationRequest(org.keycloak.sessions.AuthenticationSessionModel,org.keycloak.protocol.LoginProtocol,boolean,boolean)",
            "org.keycloak.authentication.AuthenticationProcessor:javax.ws.rs.core.Response authenticate()"
        ]
    },
    "org.keycloak.protocol.oidc.endpoints.TokenEndpoint:javax.ws.rs.core.Response resourceOwnerPasswordCredentialsGrant()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.protocol.oidc.endpoints.TokenEndpoint:javax.ws.rs.core.Response processGrantRequest()"
        ]
    },
    "org.keycloak.protocol.AuthorizationEndpointBase:javax.ws.rs.core.Response handleBrowserAuthenticationRequest(org.keycloak.sessions.AuthenticationSessionModel,org.keycloak.protocol.LoginProtocol,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.protocol.saml.SamlService:javax.ws.rs.core.Response newBrowserAuthentication(org.keycloak.sessions.AuthenticationSessionModel,boolean,boolean,org.keycloak.protocol.saml.SamlProtocol)",
            "org.keycloak.protocol.oidc.endpoints.AuthorizationEndpoint:javax.ws.rs.core.Response buildAuthorizationCodeAuthorizationResponse()",
            "org.keycloak.protocol.docker.DockerEndpoint:javax.ws.rs.core.Response build()"
        ]
    },
    "org.keycloak.authentication.AuthenticationProcessor:javax.ws.rs.core.Response authenticate()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.resources.IdentityBrokerService:javax.ws.rs.core.Response browserAuthentication(org.keycloak.sessions.AuthenticationSessionModel,java.lang.String)",
            "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response processFlow(boolean,java.lang.String,org.keycloak.sessions.AuthenticationSessionModel,java.lang.String,org.keycloak.models.AuthenticationFlowModel,java.lang.String,org.keycloak.authentication.AuthenticationProcessor)",
            "org.keycloak.protocol.oidc.endpoints.AuthorizationEndpoint:javax.ws.rs.core.Response buildRegister()",
            "org.keycloak.protocol.oidc.endpoints.AuthorizationEndpoint:javax.ws.rs.core.Response buildForgotCredential()",
            "org.keycloak.protocol.AuthorizationEndpointBase:javax.ws.rs.core.Response handleBrowserAuthenticationRequest(org.keycloak.sessions.AuthenticationSessionModel,org.keycloak.protocol.LoginProtocol,boolean,boolean)",
            "org.keycloak.authentication.DefaultAuthenticationFlow:javax.ws.rs.core.Response processResult(org.keycloak.authentication.AuthenticationProcessor$Result,boolean)",
            "org.keycloak.authentication.AuthenticationProcessor:javax.ws.rs.core.Response handleBrowserException(java.lang.Exception)",
            "org.keycloak.authentication.AuthenticationProcessor:javax.ws.rs.core.Response authenticationAction(java.lang.String)"
        ]
    },
    "org.keycloak.storage.openshift.OpenshiftSAClientAdapter:java.lang.Object getConfigOrDefault(java.util.function.Supplier,java.util.function.Consumer,java.util.function.Supplier)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.storage.openshift.OpenshiftSAClientAdapter:java.util.Set getRedirectUris()",
            "org.keycloak.storage.openshift.OpenshiftSAClientAdapter:java.lang.Object getConfigOrDefault(java.util.function.Supplier,java.util.function.Consumer,java.lang.Object)"
        ]
    },
    "org.keycloak.services.filters.AbstractRequestFilter:void filter(org.keycloak.common.ClientConnection,java.util.function.Consumer)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.IdentityBrokerService:void setDiffAttrToConsumer(java.lang.String,java.lang.String,java.util.function.Consumer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.resources.IdentityBrokerService:void setBasicUserAttributes(org.keycloak.broker.provider.BrokeredIdentityContext,org.keycloak.models.UserModel)"
        ]
    },
    "org.keycloak.services.resources.LoginActionsServiceChecks:void checkIsUserValid(org.keycloak.models.KeycloakSession,org.keycloak.models.RealmModel,java.lang.String,java.util.function.Consumer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.resources.LoginActionsServiceChecks:void checkIsUserValid(org.keycloak.representations.JsonWebToken,org.keycloak.authentication.actiontoken.ActionTokenContext)"
        ]
    },
    "org.keycloak.utils.ServicesUtils:void lambda$consumeWithTimeBound$2(java.util.concurrent.ExecutorService,long,java.util.function.Consumer,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.utils.ServicesUtils$lambda_consumeWithTimeBound_2__60:void accept(java.lang.Object)"
        ]
    },
    "org.keycloak.broker.saml.mappers.UserAttributeMapper:void setIfNotEmpty(java.util.function.Consumer,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.broker.saml.mappers.UserAttributeMapper:void preprocessFederatedIdentity(org.keycloak.models.KeycloakSession,org.keycloak.models.RealmModel,org.keycloak.models.IdentityProviderMapperModel,org.keycloak.broker.provider.BrokeredIdentityContext)"
        ]
    },
    "org.keycloak.broker.saml.mappers.UserAttributeMapper:void setIfNotEmptyAndDifferent(java.util.function.Consumer,java.util.function.Supplier,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.broker.saml.mappers.UserAttributeMapper:void updateBrokeredUser(org.keycloak.models.KeycloakSession,org.keycloak.models.RealmModel,org.keycloak.models.UserModel,org.keycloak.models.IdentityProviderMapperModel,org.keycloak.broker.provider.BrokeredIdentityContext)"
        ]
    },
    "org.keycloak.broker.oidc.mappers.UserAttributeMapper:void setIfNotEmpty(java.util.function.Consumer,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.broker.oidc.mappers.UserAttributeMapper:void preprocessFederatedIdentity(org.keycloak.models.KeycloakSession,org.keycloak.models.RealmModel,org.keycloak.models.IdentityProviderMapperModel,org.keycloak.broker.provider.BrokeredIdentityContext)",
            "org.keycloak.broker.oidc.mappers.UserAttributeMapper:void updateBrokeredUser(org.keycloak.models.KeycloakSession,org.keycloak.models.RealmModel,org.keycloak.models.UserModel,org.keycloak.models.IdentityProviderMapperModel,org.keycloak.broker.provider.BrokeredIdentityContext)"
        ]
    },
    "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response processAuthentication(boolean,java.lang.String,org.keycloak.sessions.AuthenticationSessionModel,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response authenticate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response processFlowFromPath(java.lang.String,org.keycloak.sessions.AuthenticationSessionModel,java.lang.String)"
        ]
    },
    "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response processResetCredentials(boolean,java.lang.String,org.keycloak.sessions.AuthenticationSessionModel,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response resetCredentialsGET(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response resetCredentials(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response processFlowFromPath(java.lang.String,org.keycloak.sessions.AuthenticationSessionModel,java.lang.String)"
        ]
    },
    "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response processRegistration(boolean,java.lang.String,org.keycloak.sessions.AuthenticationSessionModel,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response processFlowFromPath(java.lang.String,org.keycloak.sessions.AuthenticationSessionModel,java.lang.String)",
            "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response registerRequest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)"
        ]
    },
    "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response brokerLoginFlow(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response firstBrokerLoginGet(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response firstBrokerLoginPost(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response postBrokerLoginGet(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response postBrokerLoginPost(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.keycloak.services.resources.LoginActionsService$brokerLoginFlow__95:javax.ws.rs.core.Response brokerLoginFlow(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.keycloak.services.resources.LoginActionsService$processFlow__94:javax.ws.rs.core.Response processFlow(boolean,java.lang.String,org.keycloak.sessions.AuthenticationSessionModel,java.lang.String,org.keycloak.models.AuthenticationFlowModel,java.lang.String,org.keycloak.authentication.AuthenticationProcessor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authentication.actiontoken.ActionTokenContext:javax.ws.rs.core.Response processFlow(boolean,java.lang.String,org.keycloak.models.AuthenticationFlowModel,java.lang.String,org.keycloak.authentication.AuthenticationProcessor)"
        ]
    },
    "org.keycloak.services.clientregistration.ClientRegistrationAuth:void requireView(org.keycloak.models.ClientModel)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.clientregistration.AbstractClientRegistrationProvider:org.keycloak.representations.idm.ClientRepresentation get(org.keycloak.models.ClientModel)",
            "org.keycloak.services.clientregistration.AdapterInstallationClientRegistrationProvider:javax.ws.rs.core.Response get(java.lang.String)"
        ]
    },
    "org.keycloak.services.resources.ClientsManagementService:org.keycloak.models.ClientModel authorizeClient()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.resources.ClientsManagementService:javax.ws.rs.core.Response registerNode(java.lang.String,javax.ws.rs.core.MultivaluedMap)",
            "org.keycloak.services.resources.ClientsManagementService:javax.ws.rs.core.Response unregisterNode(java.lang.String,javax.ws.rs.core.MultivaluedMap)"
        ]
    },
    "org.keycloak.protocol.oidc.endpoints.TokenIntrospectionEndpoint:void authorizeClient()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.protocol.oidc.endpoints.TokenIntrospectionEndpoint:javax.ws.rs.core.Response introspect()"
        ]
    },
    "org.keycloak.protocol.oidc.endpoints.TokenEndpoint:void checkClient()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.protocol.oidc.endpoints.TokenEndpoint:javax.ws.rs.core.Response processGrantRequest()",
            "org.keycloak.protocol.oidc.endpoints.TokenEndpoint:javax.ws.rs.core.Response permissionGrant()"
        ]
    },
    "org.keycloak.protocol.oidc.endpoints.LogoutEndpoint:org.keycloak.models.ClientModel authorizeClient()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.protocol.oidc.endpoints.LogoutEndpoint:javax.ws.rs.core.Response logoutToken()"
        ]
    },
    "org.keycloak.protocol.oidc.endpoints.TokenRevocationEndpoint:void checkClient()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.protocol.oidc.endpoints.TokenRevocationEndpoint:javax.ws.rs.core.Response revoke()"
        ]
    },
    "org.keycloak.protocol.openshift.OpenShiftTokenReviewEndpoint:void authorizeClient()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.protocol.openshift.OpenShiftTokenReviewEndpoint:javax.ws.rs.core.Response tokenReview(java.lang.String,org.keycloak.protocol.openshift.OpenShiftTokenReviewRequestRepresentation)"
        ]
    },
    "org.keycloak.protocol.saml.SamlService:javax.ws.rs.core.Response newBrowserAuthentication(org.keycloak.sessions.AuthenticationSessionModel,boolean,boolean,org.keycloak.protocol.saml.SamlProtocol)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.protocol.saml.profile.ecp.SamlEcpProfileService:javax.ws.rs.core.Response newBrowserAuthentication(org.keycloak.sessions.AuthenticationSessionModel,boolean,boolean,org.keycloak.protocol.saml.SamlProtocol)",
            "org.keycloak.protocol.saml.SamlService:javax.ws.rs.core.Response newBrowserAuthentication(org.keycloak.sessions.AuthenticationSessionModel,boolean,boolean)"
        ]
    },
    "org.keycloak.protocol.oidc.endpoints.AuthorizationEndpoint:javax.ws.rs.core.Response buildAuthorizationCodeAuthorizationResponse()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.protocol.oidc.endpoints.AuthorizationEndpoint:javax.ws.rs.core.Response process(javax.ws.rs.core.MultivaluedMap)"
        ]
    },
    "org.keycloak.protocol.docker.DockerEndpoint:javax.ws.rs.core.Response build()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.IdentityBrokerService:javax.ws.rs.core.Response browserAuthentication(org.keycloak.sessions.AuthenticationSessionModel,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.resources.IdentityBrokerService:javax.ws.rs.core.Response cancelled(java.lang.String)",
            "org.keycloak.services.resources.IdentityBrokerService:javax.ws.rs.core.Response error(java.lang.String,java.lang.String)"
        ]
    },
    "org.keycloak.protocol.oidc.endpoints.AuthorizationEndpoint:javax.ws.rs.core.Response buildRegister()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.protocol.oidc.endpoints.AuthorizationEndpoint:javax.ws.rs.core.Response process(javax.ws.rs.core.MultivaluedMap)"
        ]
    },
    "org.keycloak.protocol.oidc.endpoints.AuthorizationEndpoint:javax.ws.rs.core.Response buildForgotCredential()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.protocol.oidc.endpoints.AuthorizationEndpoint:javax.ws.rs.core.Response process(javax.ws.rs.core.MultivaluedMap)"
        ]
    },
    "org.keycloak.authentication.DefaultAuthenticationFlow:javax.ws.rs.core.Response processResult(org.keycloak.authentication.AuthenticationProcessor$Result,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authentication.DefaultAuthenticationFlow:javax.ws.rs.core.Response processAction(java.lang.String)",
            "org.keycloak.authentication.DefaultAuthenticationFlow:javax.ws.rs.core.Response processSingleFlowExecutionModel(org.keycloak.models.AuthenticationExecutionModel,boolean)"
        ]
    },
    "org.keycloak.authentication.AuthenticationProcessor:javax.ws.rs.core.Response handleBrowserException(java.lang.Exception)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.resources.IdentityBrokerService:javax.ws.rs.core.Response browserAuthentication(org.keycloak.sessions.AuthenticationSessionModel,java.lang.String)",
            "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response processFlow(boolean,java.lang.String,org.keycloak.sessions.AuthenticationSessionModel,java.lang.String,org.keycloak.models.AuthenticationFlowModel,java.lang.String,org.keycloak.authentication.AuthenticationProcessor)",
            "org.keycloak.protocol.AuthorizationEndpointBase:javax.ws.rs.core.Response handleBrowserAuthenticationRequest(org.keycloak.sessions.AuthenticationSessionModel,org.keycloak.protocol.LoginProtocol,boolean,boolean)"
        ]
    },
    "org.keycloak.storage.openshift.OpenshiftSAClientAdapter:java.util.Set getRedirectUris()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.storage.openshift.OpenshiftSAClientAdapter:java.lang.Object getConfigOrDefault(java.util.function.Supplier,java.util.function.Consumer,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.storage.openshift.OpenshiftSAClientAdapter:java.lang.String getDescription()",
            "org.keycloak.storage.openshift.OpenshiftSAClientAdapter:boolean isEnabled()",
            "org.keycloak.storage.openshift.OpenshiftSAClientAdapter:boolean isAlwaysDisplayInConsole()",
            "org.keycloak.storage.openshift.OpenshiftSAClientAdapter:java.util.Set getWebOrigins()"
        ]
    },
    "org.keycloak.services.resources.IdentityBrokerService:void setBasicUserAttributes(org.keycloak.broker.provider.BrokeredIdentityContext,org.keycloak.models.UserModel)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.resources.IdentityBrokerService:void updateFederatedIdentity(org.keycloak.broker.provider.BrokeredIdentityContext,org.keycloak.models.UserModel)"
        ]
    },
    "org.keycloak.services.resources.LoginActionsServiceChecks:void checkIsUserValid(org.keycloak.representations.JsonWebToken,org.keycloak.authentication.actiontoken.ActionTokenContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response handleActionToken(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.keycloak.utils.ServicesUtils$lambda_consumeWithTimeBound_2__60:void accept(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.storage.openshift.OpenshiftSAClientAdapter:java.lang.Object getConfigOrDefault(java.util.function.Supplier,java.util.function.Consumer,java.util.function.Supplier)",
            "org.keycloak.services.filters.AbstractRequestFilter:void filter(org.keycloak.common.ClientConnection,java.util.function.Consumer)",
            "org.keycloak.services.resources.IdentityBrokerService:void setDiffAttrToConsumer(java.lang.String,java.lang.String,java.util.function.Consumer)",
            "org.keycloak.services.resources.LoginActionsServiceChecks:void checkIsUserValid(org.keycloak.models.KeycloakSession,org.keycloak.models.RealmModel,java.lang.String,java.util.function.Consumer)",
            "org.keycloak.utils.ServicesUtils:void lambda$consumeWithTimeBound$2(java.util.concurrent.ExecutorService,long,java.util.function.Consumer,java.lang.Object)",
            "org.keycloak.broker.saml.mappers.UserAttributeMapper:void setIfNotEmpty(java.util.function.Consumer,java.util.List)",
            "org.keycloak.broker.saml.mappers.UserAttributeMapper:void setIfNotEmptyAndDifferent(java.util.function.Consumer,java.util.function.Supplier,java.util.List)",
            "org.keycloak.broker.oidc.mappers.UserAttributeMapper:void setIfNotEmpty(java.util.function.Consumer,java.util.List)"
        ]
    },
    "org.keycloak.broker.saml.mappers.UserAttributeMapper:void preprocessFederatedIdentity(org.keycloak.models.KeycloakSession,org.keycloak.models.RealmModel,org.keycloak.models.IdentityProviderMapperModel,org.keycloak.broker.provider.BrokeredIdentityContext)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.broker.saml.mappers.UserAttributeMapper:void updateBrokeredUser(org.keycloak.models.KeycloakSession,org.keycloak.models.RealmModel,org.keycloak.models.UserModel,org.keycloak.models.IdentityProviderMapperModel,org.keycloak.broker.provider.BrokeredIdentityContext)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.broker.oidc.mappers.UserAttributeMapper:void preprocessFederatedIdentity(org.keycloak.models.KeycloakSession,org.keycloak.models.RealmModel,org.keycloak.models.IdentityProviderMapperModel,org.keycloak.broker.provider.BrokeredIdentityContext)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.broker.oidc.mappers.UserAttributeMapper:void updateBrokeredUser(org.keycloak.models.KeycloakSession,org.keycloak.models.RealmModel,org.keycloak.models.UserModel,org.keycloak.models.IdentityProviderMapperModel,org.keycloak.broker.provider.BrokeredIdentityContext)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response authenticate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response authenticateForm(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response processFlowFromPath(java.lang.String,org.keycloak.sessions.AuthenticationSessionModel,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response handleActionToken(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response resetCredentialsGET(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response resetCredentials(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response resetCredentialsPOST(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response resetCredentialsGET(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response registerRequest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response registerPage(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response processRegister(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response firstBrokerLoginGet(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response firstBrokerLoginPost(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response postBrokerLoginGet(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response postBrokerLoginPost(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.LoginActionsService$brokerLoginFlow__95:javax.ws.rs.core.Response brokerLoginFlow(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authentication.actiontoken.ActionTokenContext:javax.ws.rs.core.Response brokerFlow(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.keycloak.authentication.actiontoken.ActionTokenContext:javax.ws.rs.core.Response processFlow(boolean,java.lang.String,org.keycloak.models.AuthenticationFlowModel,java.lang.String,org.keycloak.authentication.AuthenticationProcessor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authentication.actiontoken.resetcred.ResetCredentialsActionTokenHandler:javax.ws.rs.core.Response handleToken(org.keycloak.authentication.actiontoken.resetcred.ResetCredentialsActionToken,org.keycloak.authentication.actiontoken.ActionTokenContext)"
        ]
    },
    "org.keycloak.services.clientregistration.AbstractClientRegistrationProvider:org.keycloak.representations.idm.ClientRepresentation get(org.keycloak.models.ClientModel)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.clientregistration.oidc.OIDCClientRegistrationProvider:javax.ws.rs.core.Response getOIDC(java.lang.String)",
            "org.keycloak.services.clientregistration.DefaultClientRegistrationProvider:javax.ws.rs.core.Response getDefault(java.lang.String)"
        ]
    },
    "org.keycloak.services.clientregistration.AdapterInstallationClientRegistrationProvider:javax.ws.rs.core.Response get(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.ClientsManagementService:javax.ws.rs.core.Response registerNode(java.lang.String,javax.ws.rs.core.MultivaluedMap)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.ClientsManagementService:javax.ws.rs.core.Response unregisterNode(java.lang.String,javax.ws.rs.core.MultivaluedMap)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.protocol.oidc.endpoints.TokenIntrospectionEndpoint:javax.ws.rs.core.Response introspect()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.protocol.oidc.endpoints.TokenEndpoint:javax.ws.rs.core.Response permissionGrant()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.protocol.oidc.endpoints.TokenEndpoint:javax.ws.rs.core.Response processGrantRequest()"
        ]
    },
    "org.keycloak.protocol.oidc.endpoints.LogoutEndpoint:javax.ws.rs.core.Response logoutToken()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.protocol.oidc.endpoints.TokenRevocationEndpoint:javax.ws.rs.core.Response revoke()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.protocol.openshift.OpenShiftTokenReviewEndpoint:javax.ws.rs.core.Response tokenReview(java.lang.String,org.keycloak.protocol.openshift.OpenShiftTokenReviewRequestRepresentation)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.protocol.openshift.OpenShiftTokenReviewEndpoint:javax.ws.rs.core.Response tokenReview(org.keycloak.protocol.openshift.OpenShiftTokenReviewRequestRepresentation)"
        ]
    },
    "org.keycloak.protocol.saml.profile.ecp.SamlEcpProfileService:javax.ws.rs.core.Response newBrowserAuthentication(org.keycloak.sessions.AuthenticationSessionModel,boolean,boolean,org.keycloak.protocol.saml.SamlProtocol)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.protocol.saml.SamlService:javax.ws.rs.core.Response newBrowserAuthentication(org.keycloak.sessions.AuthenticationSessionModel,boolean,boolean)"
        ]
    },
    "org.keycloak.protocol.saml.SamlService:javax.ws.rs.core.Response newBrowserAuthentication(org.keycloak.sessions.AuthenticationSessionModel,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.protocol.saml.SamlService:javax.ws.rs.core.Response idpInitiatedSSO(java.lang.String,java.lang.String)",
            "org.keycloak.protocol.saml.SamlService$BindingProtocol:javax.ws.rs.core.Response loginRequest(java.lang.String,org.keycloak.dom.saml.v2.protocol.AuthnRequestType,org.keycloak.models.ClientModel)"
        ]
    },
    "org.keycloak.protocol.oidc.endpoints.AuthorizationEndpoint:javax.ws.rs.core.Response process(javax.ws.rs.core.MultivaluedMap)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.protocol.oidc.endpoints.AuthorizationEndpoint:javax.ws.rs.core.Response buildPost()",
            "org.keycloak.protocol.oidc.endpoints.AuthorizationEndpoint:javax.ws.rs.core.Response buildGet()"
        ]
    },
    "org.keycloak.services.resources.IdentityBrokerService:javax.ws.rs.core.Response cancelled(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.social.twitter.TwitterIdentityProvider$Endpoint:javax.ws.rs.core.Response authResponse(java.lang.String,java.lang.String,java.lang.String)",
            "org.keycloak.broker.oidc.AbstractOAuth2IdentityProvider$Endpoint:javax.ws.rs.core.Response authResponse(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.keycloak.services.resources.IdentityBrokerService:javax.ws.rs.core.Response error(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.broker.saml.SAMLEndpoint$Binding:javax.ws.rs.core.Response handleLoginResponse(java.lang.String,org.keycloak.saml.processing.core.saml.v2.common.SAMLDocumentHolder,org.keycloak.dom.saml.v2.protocol.ResponseType,java.lang.String,java.lang.String)",
            "org.keycloak.broker.oidc.AbstractOAuth2IdentityProvider$Endpoint:javax.ws.rs.core.Response authResponse(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.keycloak.storage.openshift.OpenshiftSAClientAdapter:java.lang.String getDescription()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.storage.openshift.OpenshiftSAClientAdapter:boolean isEnabled()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.storage.openshift.OpenshiftSAClientAdapter:boolean isAlwaysDisplayInConsole()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.storage.openshift.OpenshiftSAClientAdapter:java.util.Set getWebOrigins()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.IdentityBrokerService:void updateFederatedIdentity(org.keycloak.broker.provider.BrokeredIdentityContext,org.keycloak.models.UserModel)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.resources.IdentityBrokerService:javax.ws.rs.core.Response authenticated(org.keycloak.broker.provider.BrokeredIdentityContext)",
            "org.keycloak.services.resources.IdentityBrokerService:javax.ws.rs.core.Response afterFirstBrokerLogin(org.keycloak.services.managers.ClientSessionCode)"
        ]
    },
    "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response handleActionToken(java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response resetCredentialsPOST(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response executeActionToken(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response authenticateForm(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response resetCredentialsPOST(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response registerPage(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response processRegister(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.authentication.actiontoken.ActionTokenContext:javax.ws.rs.core.Response brokerFlow(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authentication.actiontoken.idpverifyemail.IdpVerifyAccountLinkActionTokenHandler:javax.ws.rs.core.Response handleToken(org.keycloak.authentication.actiontoken.idpverifyemail.IdpVerifyAccountLinkActionToken,org.keycloak.authentication.actiontoken.ActionTokenContext)"
        ]
    },
    "org.keycloak.authentication.actiontoken.resetcred.ResetCredentialsActionTokenHandler:javax.ws.rs.core.Response handleToken(org.keycloak.authentication.actiontoken.resetcred.ResetCredentialsActionToken,org.keycloak.authentication.actiontoken.ActionTokenContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authentication.actiontoken.resetcred.ResetCredentialsActionTokenHandler:javax.ws.rs.core.Response handleToken(org.keycloak.representations.JsonWebToken,org.keycloak.authentication.actiontoken.ActionTokenContext)"
        ]
    },
    "org.keycloak.services.clientregistration.oidc.OIDCClientRegistrationProvider:javax.ws.rs.core.Response getOIDC(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.clientregistration.DefaultClientRegistrationProvider:javax.ws.rs.core.Response getDefault(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.protocol.openshift.OpenShiftTokenReviewEndpoint:javax.ws.rs.core.Response tokenReview(org.keycloak.protocol.openshift.OpenShiftTokenReviewRequestRepresentation)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.protocol.saml.SamlService:javax.ws.rs.core.Response idpInitiatedSSO(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.protocol.saml.SamlService$BindingProtocol:javax.ws.rs.core.Response loginRequest(java.lang.String,org.keycloak.dom.saml.v2.protocol.AuthnRequestType,org.keycloak.models.ClientModel)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.protocol.saml.profile.ecp.SamlEcpProfileService$1:javax.ws.rs.core.Response loginRequest(java.lang.String,org.keycloak.dom.saml.v2.protocol.AuthnRequestType,org.keycloak.models.ClientModel)",
            "org.keycloak.protocol.saml.SamlService$BindingProtocol:javax.ws.rs.core.Response handleSamlRequest(java.lang.String,java.lang.String)"
        ]
    },
    "org.keycloak.protocol.oidc.endpoints.AuthorizationEndpoint:javax.ws.rs.core.Response buildPost()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.protocol.oidc.endpoints.AuthorizationEndpoint:javax.ws.rs.core.Response buildGet()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.social.twitter.TwitterIdentityProvider$Endpoint:javax.ws.rs.core.Response authResponse(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.broker.oidc.AbstractOAuth2IdentityProvider$Endpoint:javax.ws.rs.core.Response authResponse(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.broker.saml.SAMLEndpoint$Binding:javax.ws.rs.core.Response handleLoginResponse(java.lang.String,org.keycloak.saml.processing.core.saml.v2.common.SAMLDocumentHolder,org.keycloak.dom.saml.v2.protocol.ResponseType,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.broker.saml.SAMLEndpoint$Binding:javax.ws.rs.core.Response handleSamlResponse(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.keycloak.services.resources.IdentityBrokerService:javax.ws.rs.core.Response authenticated(org.keycloak.broker.provider.BrokeredIdentityContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.social.twitter.TwitterIdentityProvider$Endpoint:javax.ws.rs.core.Response authResponse(java.lang.String,java.lang.String,java.lang.String)",
            "org.keycloak.broker.saml.SAMLEndpoint$Binding:javax.ws.rs.core.Response handleLoginResponse(java.lang.String,org.keycloak.saml.processing.core.saml.v2.common.SAMLDocumentHolder,org.keycloak.dom.saml.v2.protocol.ResponseType,java.lang.String,java.lang.String)",
            "org.keycloak.broker.oidc.AbstractOAuth2IdentityProvider$Endpoint:javax.ws.rs.core.Response authResponse(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.keycloak.services.resources.IdentityBrokerService:javax.ws.rs.core.Response afterFirstBrokerLogin(org.keycloak.services.managers.ClientSessionCode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.resources.IdentityBrokerService:javax.ws.rs.core.Response afterFirstBrokerLogin(java.lang.String,java.lang.String,java.lang.String)",
            "org.keycloak.services.resources.IdentityBrokerService:javax.ws.rs.core.Response afterPostBrokerLoginFlowSuccess(org.keycloak.sessions.AuthenticationSessionModel,org.keycloak.broker.provider.BrokeredIdentityContext,boolean,org.keycloak.services.managers.ClientSessionCode)"
        ]
    },
    "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response executeActionToken(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.authentication.actiontoken.idpverifyemail.IdpVerifyAccountLinkActionTokenHandler:javax.ws.rs.core.Response handleToken(org.keycloak.authentication.actiontoken.idpverifyemail.IdpVerifyAccountLinkActionToken,org.keycloak.authentication.actiontoken.ActionTokenContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.authentication.actiontoken.idpverifyemail.IdpVerifyAccountLinkActionTokenHandler:javax.ws.rs.core.Response handleToken(org.keycloak.representations.JsonWebToken,org.keycloak.authentication.actiontoken.ActionTokenContext)"
        ]
    },
    "org.keycloak.authentication.actiontoken.resetcred.ResetCredentialsActionTokenHandler:javax.ws.rs.core.Response handleToken(org.keycloak.representations.JsonWebToken,org.keycloak.authentication.actiontoken.ActionTokenContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response handleActionToken(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.keycloak.protocol.saml.profile.ecp.SamlEcpProfileService$1:javax.ws.rs.core.Response loginRequest(java.lang.String,org.keycloak.dom.saml.v2.protocol.AuthnRequestType,org.keycloak.models.ClientModel)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.protocol.saml.SamlService$BindingProtocol:javax.ws.rs.core.Response handleSamlRequest(java.lang.String,java.lang.String)"
        ]
    },
    "org.keycloak.protocol.saml.SamlService$BindingProtocol:javax.ws.rs.core.Response handleSamlRequest(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.protocol.saml.SamlService$BindingProtocol:javax.ws.rs.core.Response execute(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.keycloak.broker.saml.SAMLEndpoint$Binding:javax.ws.rs.core.Response handleSamlResponse(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.broker.saml.SAMLEndpoint$Binding:javax.ws.rs.core.Response execute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.keycloak.services.resources.IdentityBrokerService:javax.ws.rs.core.Response afterFirstBrokerLogin(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.services.resources.IdentityBrokerService:javax.ws.rs.core.Response afterPostBrokerLoginFlowSuccess(org.keycloak.sessions.AuthenticationSessionModel,org.keycloak.broker.provider.BrokeredIdentityContext,boolean,org.keycloak.services.managers.ClientSessionCode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.resources.IdentityBrokerService:javax.ws.rs.core.Response finishOrRedirectToPostBrokerLogin(org.keycloak.sessions.AuthenticationSessionModel,org.keycloak.broker.provider.BrokeredIdentityContext,boolean,org.keycloak.services.managers.ClientSessionCode)",
            "org.keycloak.services.resources.IdentityBrokerService:javax.ws.rs.core.Response afterPostBrokerLoginFlow(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.keycloak.authentication.actiontoken.idpverifyemail.IdpVerifyAccountLinkActionTokenHandler:javax.ws.rs.core.Response handleToken(org.keycloak.representations.JsonWebToken,org.keycloak.authentication.actiontoken.ActionTokenContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.resources.LoginActionsService:javax.ws.rs.core.Response handleActionToken(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.keycloak.protocol.saml.SamlService$BindingProtocol:javax.ws.rs.core.Response execute(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.protocol.saml.profile.ecp.SamlEcpProfileService:javax.ws.rs.core.Response authenticate(java.io.InputStream)",
            "org.keycloak.protocol.saml.SamlService:javax.ws.rs.core.Response redirectBinding(java.lang.String,java.lang.String,java.lang.String)",
            "org.keycloak.protocol.saml.SamlService:javax.ws.rs.core.Response postBinding(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.keycloak.broker.saml.SAMLEndpoint$Binding:javax.ws.rs.core.Response execute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.broker.saml.SAMLEndpoint:javax.ws.rs.core.Response redirectBinding(java.lang.String,java.lang.String,java.lang.String)",
            "org.keycloak.broker.saml.SAMLEndpoint:javax.ws.rs.core.Response postBinding(java.lang.String,java.lang.String,java.lang.String)",
            "org.keycloak.broker.saml.SAMLEndpoint:javax.ws.rs.core.Response redirectBinding(java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.keycloak.broker.saml.SAMLEndpoint:javax.ws.rs.core.Response postBinding(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.keycloak.services.resources.IdentityBrokerService:javax.ws.rs.core.Response finishOrRedirectToPostBrokerLogin(org.keycloak.sessions.AuthenticationSessionModel,org.keycloak.broker.provider.BrokeredIdentityContext,boolean,org.keycloak.services.managers.ClientSessionCode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.services.resources.IdentityBrokerService:javax.ws.rs.core.Response authenticated(org.keycloak.broker.provider.BrokeredIdentityContext)",
            "org.keycloak.services.resources.IdentityBrokerService:javax.ws.rs.core.Response afterFirstBrokerLogin(org.keycloak.services.managers.ClientSessionCode)"
        ]
    },
    "org.keycloak.services.resources.IdentityBrokerService:javax.ws.rs.core.Response afterPostBrokerLoginFlow(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.protocol.saml.profile.ecp.SamlEcpProfileService:javax.ws.rs.core.Response authenticate(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.keycloak.protocol.saml.SamlService:javax.ws.rs.core.Response soapBinding(java.io.InputStream)"
        ]
    },
    "org.keycloak.protocol.saml.SamlService:javax.ws.rs.core.Response redirectBinding(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.protocol.saml.SamlService:javax.ws.rs.core.Response postBinding(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.broker.saml.SAMLEndpoint:javax.ws.rs.core.Response redirectBinding(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.broker.saml.SAMLEndpoint:javax.ws.rs.core.Response postBinding(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.broker.saml.SAMLEndpoint:javax.ws.rs.core.Response redirectBinding(java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.broker.saml.SAMLEndpoint:javax.ws.rs.core.Response postBinding(java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.keycloak.protocol.saml.SamlService:javax.ws.rs.core.Response soapBinding(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    }
}
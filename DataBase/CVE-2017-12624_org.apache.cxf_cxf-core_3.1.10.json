{
    "org.apache.cxf.attachment.AttachmentDeserializer:boolean readLine(java.io.InputStream,java.lang.StringBuilder)": {
        "isVulRoot": true,
        "vulCaller": [
            "org.apache.cxf.attachment.AttachmentDeserializer:java.util.Map loadPartHeaders(java.io.InputStream)"
        ]
    },
    "org.apache.cxf.attachment.AttachmentDeserializer:java.util.Map loadPartHeaders(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.AttachmentDeserializer:void initializeRootMessage()",
            "org.apache.cxf.attachment.AttachmentDeserializer:org.apache.cxf.attachment.AttachmentImpl readNext()"
        ]
    },
    "org.apache.cxf.attachment.AttachmentDeserializer:void initializeRootMessage()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.AttachmentDeserializer:void initializeAttachments()"
        ]
    },
    "org.apache.cxf.attachment.AttachmentDeserializer:org.apache.cxf.attachment.AttachmentImpl readNext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.LazyAttachmentCollection$1:boolean hasNext()",
            "org.apache.cxf.attachment.LazyAttachmentCollection:void loadAll()",
            "org.apache.cxf.attachment.LazyAttachmentCollection:boolean hasNext(boolean)"
        ]
    },
    "org.apache.cxf.attachment.AttachmentDeserializer:void initializeAttachments()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.AttachmentInInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.attachment.LazyAttachmentCollection$1:boolean hasNext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.BusFactory:void clearDefaultBusForAnyThread(org.apache.cxf.Bus)",
            "org.apache.cxf.attachment.AttachmentDeserializer:void cacheStreamedAttachments()",
            "org.apache.cxf.attachment.AttachmentSerializer:void writeHeaders(java.lang.String,java.lang.String,java.util.Map,java.io.Writer)",
            "org.apache.cxf.attachment.AttachmentSerializer:void writeAttachments()",
            "org.apache.cxf.attachment.AttachmentUtil$DHMap$1$1:boolean hasNext()",
            "org.apache.cxf.attachment.AttachmentUtil$DHMap:javax.activation.DataHandler put(java.lang.String,javax.activation.DataHandler)",
            "org.apache.cxf.attachment.AttachmentUtil:java.lang.String getHeaderValue(java.util.List,java.lang.String)",
            "org.apache.cxf.attachment.AttachmentUtil:org.apache.cxf.message.Attachment createAttachment(java.io.InputStream,java.util.Map)",
            "org.apache.cxf.attachment.AttachmentUtil:boolean isTypeSupported(java.lang.String,java.util.List)",
            "org.apache.cxf.attachment.ImageDataContentHandler:void writeTo(java.lang.Object,java.lang.String,java.io.OutputStream)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$1$1:boolean hasNext()",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$2$1:boolean hasNext()",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$3$1:boolean hasNext()",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:boolean containsValue(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:javax.activation.DataHandler get(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:javax.activation.DataHandler remove(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:void putAll(java.util.Map)",
            "org.apache.cxf.attachment.LazyAttachmentCollection:boolean isEmpty()",
            "org.apache.cxf.attachment.LazyDataSource:void load()",
            "org.apache.cxf.binding.AbstractBindingFactory:void registerWithBindingManager()",
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:java.util.List getBeanNamesOfType(java.lang.Class)",
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:java.util.Collection getBeansOfType(java.lang.Class)",
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)",
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:boolean hasConfiguredPropertyValue(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.bus.blueprint.ConfigurerImpl:void initializeWildcardMap()",
            "org.apache.cxf.bus.blueprint.ConfigurerImpl:void configureWithWildCard(java.lang.String,java.lang.Object)",
            "org.apache.cxf.bus.extension.Extension:java.lang.String toString()",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:boolean hasExtensionByName(java.lang.String)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void initialize()",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void initializeFeatures()",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void <init>(java.lang.String[],java.lang.ClassLoader,java.util.Map,org.apache.cxf.resource.ResourceManager,org.apache.cxf.Bus)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void initialize()",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void removeBeansOfNames(java.util.List)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void activateAll()",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void activateAllByType(java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void load(java.lang.String,java.lang.ClassLoader)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:java.util.List getBeanNamesOfType(java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:java.util.Collection getBeansOfType(java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void destroyBeans()",
            "org.apache.cxf.bus.extension.ExtensionRegistry:java.util.Map getRegisteredExtensions()",
            "org.apache.cxf.bus.extension.ExtensionRegistry:void removeExtensions(java.util.List)",
            "org.apache.cxf.bus.extension.ExtensionRegistry:void addExtensions(java.util.List)",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl$1:boolean beanLoaded(java.lang.String,org.apache.cxf.binding.BindingFactory)",
            "org.apache.cxf.bus.managers.CXFBusLifeCycleManager:void initComplete()",
            "org.apache.cxf.bus.managers.ClientLifeCycleManagerImpl:void clientCreated(org.apache.cxf.endpoint.Client)",
            "org.apache.cxf.bus.managers.EndpointResolverRegistryImpl:org.apache.cxf.ws.addressing.EndpointReferenceType resolve(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.bus.managers.EndpointResolverRegistryImpl:org.apache.cxf.ws.addressing.EndpointReferenceType renew(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.bus.managers.EndpointResolverRegistryImpl:org.apache.cxf.ws.addressing.EndpointReferenceType mint(javax.xml.namespace.QName)",
            "org.apache.cxf.bus.managers.EndpointResolverRegistryImpl:org.apache.cxf.ws.addressing.EndpointReferenceType mint(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.bus.managers.ServerLifeCycleManagerImpl:void startServer(org.apache.cxf.endpoint.Server)",
            "org.apache.cxf.bus.managers.ServiceContractResolverRegistryImpl:java.net.URI getContractLocation(javax.xml.namespace.QName)",
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:void shutdown(boolean)",
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:void run()",
            "org.apache.cxf.bus.osgi.CXFExtensionBundleListener:boolean addExtensions(org.osgi.framework.Bundle,java.util.List)",
            "org.apache.cxf.bus.osgi.ManagedWorkQueueList:void addAllToWorkQueueManager(org.apache.cxf.workqueue.WorkQueueManager)",
            "org.apache.cxf.bus.osgi.ManagedWorkQueueList:void shutDown()",
            "org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor:void insertConstructorArg(org.springframework.beans.factory.config.ConstructorArgumentValues,java.lang.Object)",
            "org.apache.cxf.bus.spring.SpringBeanLocator:java.util.Collection getBeansOfType(java.lang.Class)",
            "org.apache.cxf.bus.spring.SpringBeanLocator:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)",
            "org.apache.cxf.bus.spring.SpringBeanLocator:boolean hasConfiguredPropertyValue(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.common.annotation.AnnotationProcessor:void processMethods(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)",
            "org.apache.cxf.common.annotation.AnnotationProcessor:void processFields(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)",
            "org.apache.cxf.common.annotation.AnnotationProcessor:void processClass(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)",
            "org.apache.cxf.common.injection.ResourceInjector:void invokePostConstruct()",
            "org.apache.cxf.common.injection.ResourceInjector:void invokePreDestroy()",
            "org.apache.cxf.common.jaxb.JAXBContextCache:org.apache.cxf.common.jaxb.JAXBContextCache$CachedContextAndSchemas getCachedContextAndSchemas(java.util.Set,java.lang.String,java.util.Map,java.util.Collection,boolean)",
            "org.apache.cxf.common.jaxb.JAXBUtils:java.lang.String makeConventionalIdentifier(java.util.List,org.apache.cxf.common.jaxb.JAXBUtils$IdentifierType)",
            "org.apache.cxf.common.jaxb.JAXBUtils:void logGeneratedClassNames(java.util.logging.Logger,org.apache.cxf.common.jaxb.JAXBUtils$JCodeModel)",
            "org.apache.cxf.common.jaxb.JAXBUtils:java.util.List getGeneratedClassNames(org.apache.cxf.common.jaxb.JAXBUtils$JCodeModel)",
            "org.apache.cxf.common.jaxb.JAXBUtils:void scanPackages(java.util.Set,java.lang.Class[],java.util.Map)",
            "org.apache.cxf.common.security.SimpleGroup$1:boolean hasMoreElements()",
            "org.apache.cxf.common.util.CacheMap:void updateMainDataMap()",
            "org.apache.cxf.common.util.CacheMap:void putAll(java.util.Map)",
            "org.apache.cxf.common.util.CollectionUtils:java.util.Collection diff(java.util.Collection,java.util.Collection)",
            "org.apache.cxf.common.util.CollectionUtils:boolean isEmpty(java.util.Collection)",
            "org.apache.cxf.common.util.Compiler:boolean compileFiles(java.util.List)",
            "org.apache.cxf.common.util.PackageUtils:java.lang.String getSharedPackageName(java.util.List)",
            "org.apache.cxf.common.util.ProxyClassLoader:java.lang.Class findClass(java.lang.String)",
            "org.apache.cxf.common.util.ProxyClassLoader:java.net.URL findResource(java.lang.String)",
            "org.apache.cxf.common.util.ReflectionInvokationHandler$WrapperIterator:boolean hasNext()",
            "org.apache.cxf.common.util.SortedArraySet:boolean addAll(java.util.Collection)",
            "org.apache.cxf.common.util.SortedArraySet:boolean containsAll(java.util.Collection)",
            "org.apache.cxf.common.util.SortedArraySet:boolean removeAll(java.util.Collection)",
            "org.apache.cxf.common.util.SortedArraySet:boolean retainAll(java.util.Collection)",
            "org.apache.cxf.common.util.SpringClasspathScanner:java.util.Map findClassesInternal(java.util.Collection,java.util.List,java.lang.ClassLoader)",
            "org.apache.cxf.common.util.SpringClasspathScanner:java.util.List findResourcesInternal(java.util.Collection,java.lang.String,java.lang.ClassLoader)",
            "org.apache.cxf.common.util.StringUtils:java.lang.String getFirstNotEmpty(java.lang.String,java.lang.String)",
            "org.apache.cxf.common.util.StringUtils:java.lang.String getFirstNotEmpty(java.util.List)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.util.Set entrySet()",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.util.Set keySet()",
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addOneSchemaCrossImports(org.apache.ws.commons.schema.XmlSchema)",
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addCrossImports(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaAll)",
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addCrossImports(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaChoice)",
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addCrossImports(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaSequence)",
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addCrossImportsAttributeList(org.apache.ws.commons.schema.XmlSchema,java.util.List)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:boolean isEumeration(org.apache.ws.commons.schema.XmlSchemaSimpleType)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:java.util.List enumeratorValues(org.apache.ws.commons.schema.XmlSchemaSimpleType)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:boolean schemaImportsNamespace(org.apache.ws.commons.schema.XmlSchema,java.lang.String)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:void addImportIfNeeded(org.apache.ws.commons.schema.XmlSchema,java.lang.String)",
            "org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser:javax.xml.bind.JAXBContext getContext(java.lang.Class)",
            "org.apache.cxf.configuration.blueprint.SimpleBPBeanDefinitionParser:org.osgi.service.blueprint.reflect.Metadata parse(org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext)",
            "org.apache.cxf.configuration.jsse.SSLUtils:java.util.List compileRegexPatterns(java.util.List,boolean,java.util.logging.Logger)",
            "org.apache.cxf.configuration.jsse.SSLUtils:boolean matchesOneOf(java.lang.String,java.util.List)",
            "org.apache.cxf.configuration.jsse.TLSClientParameters:int hashCode()",
            "org.apache.cxf.configuration.jsse.TLSParameterJaxBUtils:java.security.KeyStore createTrustStore(java.io.InputStream,java.lang.String)",
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:javax.xml.bind.JAXBContext getContext(java.lang.Class)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void initWildcardDefinitionMap()",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureBean(java.lang.String,java.lang.Object,boolean)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureWithWildCard(java.lang.String,java.lang.Object)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void addApplicationContext(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.databinding.AbstractDataBinding:void checkNamespaceMap(java.util.Map)",
            "org.apache.cxf.databinding.source.SourceDataBinding:void initialize(org.apache.cxf.service.Service)",
            "org.apache.cxf.databinding.source.XMLStreamDataReader:org.w3c.dom.Element validate(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.databinding.stax.StaxDataBinding:void initialize(org.apache.cxf.service.Service)",
            "org.apache.cxf.databinding.stax.StaxDataBindingFeature:void removeDatabindingInterceptor(java.util.List)",
            "org.apache.cxf.endpoint.AbstractConduitSelector:void close()",
            "org.apache.cxf.endpoint.AbstractConduitSelector:org.apache.cxf.transport.Conduit findCompatibleConduit(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.AbstractEndpointFactory:void addToBeans(java.util.Collection,java.lang.Object)",
            "org.apache.cxf.endpoint.ClientImpl:void destroy()",
            "org.apache.cxf.endpoint.ClientImpl:org.apache.cxf.service.model.EndpointInfo findEndpoint(org.apache.cxf.service.Service,javax.xml.namespace.QName)",
            "org.apache.cxf.endpoint.ClientImpl:void modifyChain(org.apache.cxf.interceptor.InterceptorChain,org.apache.cxf.message.Message,boolean)",
            "org.apache.cxf.endpoint.ServerImpl:void stop()",
            "org.apache.cxf.feature.AbstractFeature:java.lang.Object getActive(java.util.List,java.lang.Class)",
            "org.apache.cxf.feature.validation.SchemaValidationFeature:void initialise(org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.helpers.DOMUtils:java.util.Set convertStringsToQNames(java.util.List)",
            "org.apache.cxf.helpers.MapNamespaceContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:org.apache.cxf.service.model.MessagePartInfo findMessagePart(org.apache.cxf.message.Exchange,java.util.Collection,javax.xml.namespace.QName,boolean,int,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:void writeParts(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.message.MessageContentsList,java.util.List)",
            "org.apache.cxf.interceptor.AnnotationInterceptors:java.util.List getAnnotationInterceptorList(java.lang.Class)",
            "org.apache.cxf.interceptor.ClientFaultConverter:void processFaultDetail(org.apache.cxf.interceptor.Fault,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.ClientFaultConverter:void setStackTrace(org.apache.cxf.interceptor.Fault,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.ClientFaultConverter:java.lang.Throwable getCause(java.util.Iterator,java.lang.String)",
            "org.apache.cxf.interceptor.FaultOutInterceptor:org.apache.cxf.service.model.FaultInfo getFaultForClass(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Class)",
            "org.apache.cxf.interceptor.InFaultChainInitiatorObserver:void addToChain(org.apache.cxf.phase.PhaseInterceptorChain,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.OutFaultChainInitiatorObserver:void addToChain(org.apache.cxf.phase.PhaseInterceptorChain,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:void modifyChain(org.apache.cxf.phase.PhaseInterceptorChain,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.security.AbstractAuthorizingInInterceptor:boolean isUserInRole(org.apache.cxf.security.SecurityContext,java.util.List,boolean)",
            "org.apache.cxf.interceptor.security.DefaultSecurityContext:java.security.Principal findPrincipal(java.lang.String,javax.security.auth.Subject)",
            "org.apache.cxf.interceptor.security.DefaultSecurityContext:boolean isUserInRole(java.lang.String)",
            "org.apache.cxf.interceptor.security.DefaultSecurityContext:java.util.Set getUserRoles()",
            "org.apache.cxf.interceptor.security.JAASLoginInterceptor:javax.security.auth.callback.CallbackHandler getFirstCallbackHandler(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.security.RolePrefixSecurityContextImpl:boolean isUserInRole(java.lang.String)",
            "org.apache.cxf.interceptor.security.RolePrefixSecurityContextImpl:java.security.Principal findPrincipal(javax.security.auth.Subject,java.lang.String,java.lang.String)",
            "org.apache.cxf.interceptor.security.RolePrefixSecurityContextImpl:java.util.Set findRoles(javax.security.auth.Subject,java.lang.String,java.lang.String)",
            "org.apache.cxf.interceptor.security.SecureAnnotationsInterceptor:void setSecuredObject(java.lang.Object)",
            "org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor:boolean isUserInRole(org.apache.cxf.security.SecurityContext,java.util.List,boolean)",
            "org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor:java.util.Map parseRolesMap(java.util.Map)",
            "org.apache.cxf.interceptor.security.callback.CertKeyToUserNameMapper:java.lang.String getUserName(java.security.cert.Certificate)",
            "org.apache.cxf.io.CachedOutputStream:void flush()",
            "org.apache.cxf.io.CachedOutputStream:void lockOutputStream()",
            "org.apache.cxf.io.CachedOutputStream:void close()",
            "org.apache.cxf.io.CachedWriter:void flush()",
            "org.apache.cxf.io.CachedWriter:void lockOutputStream()",
            "org.apache.cxf.io.CachedWriter:void close()",
            "org.apache.cxf.message.ExchangeImpl:void putAll(java.util.Map)",
            "org.apache.cxf.message.MessageImpl:void copyContent(org.apache.cxf.message.Message,org.apache.cxf.message.Message)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void <init>(java.util.SortedSet)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void add(java.util.Collection,boolean)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void add(org.apache.cxf.interceptor.Interceptor,boolean)",
            "org.apache.cxf.resource.DefaultResourceManager:void addResourceResolvers(java.util.Collection)",
            "org.apache.cxf.resource.DefaultResourceManager:java.lang.Object findResource(java.lang.String,java.lang.Class,boolean,java.util.List)",
            "org.apache.cxf.service.ServiceImpl:org.apache.cxf.service.model.EndpointInfo getEndpointInfo(javax.xml.namespace.QName)",
            "org.apache.cxf.service.ServiceModelVisitor:void walk()",
            "org.apache.cxf.service.ServiceModelVisitor:void visitOperation(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.factory.AbstractServiceFactoryBean:void sendEvent(org.apache.cxf.service.factory.FactoryBeanListener$Event,java.lang.Object[])",
            "org.apache.cxf.service.factory.AbstractServiceFactoryBean:void fillDataBindingSchemas()",
            "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void handleEvent(org.apache.cxf.service.factory.FactoryBeanListener$Event,org.apache.cxf.service.factory.AbstractServiceFactoryBean,java.lang.Object[])",
            "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void addBindingOperationDocs(org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void addDocumentation(org.apache.cxf.service.model.OperationInfo,org.apache.cxf.annotations.WSDLDocumentation$Placement,org.apache.cxf.annotations.WSDLDocumentation[])",
            "org.apache.cxf.service.factory.FactoryBeanListenerManager:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.service.factory.SimpleMethodDispatcher:org.apache.cxf.service.model.BindingOperationInfo getBindingOperation(java.lang.reflect.Method,org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.service.model.AbstractMessageContainer:int getMessagePartIndex(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePartByIndex(int)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePart(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePart(int)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:void setDelegate(org.apache.cxf.service.model.AbstractPropertiesHolder,boolean)",
            "org.apache.cxf.service.model.BindingInfo:org.apache.cxf.service.model.BindingOperationInfo buildOperation(javax.xml.namespace.QName,java.lang.String,java.lang.String)",
            "org.apache.cxf.service.model.BindingInfo:org.apache.cxf.service.model.BindingOperationInfo getOperation(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.BindingOperationInfo:void <init>(org.apache.cxf.service.model.BindingInfo,org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.MessageInfo:java.util.Map getMessagePartsMap()",
            "org.apache.cxf.service.model.MessageInfo:java.util.List getOrderedParts(java.util.List)",
            "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.BindingInfo getBinding(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.EndpointInfo getEndpoint(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.ServiceInfo:void initMessagesMap()",
            "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.SchemaInfo getSchema(java.lang.String)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperation(org.apache.cxf.message.Exchange,java.lang.String)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperationForWrapperElement(org.apache.cxf.message.Exchange,javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.SchemaInfo getSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.ServiceModelUtil:java.util.List getOperationInputPartNames(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.EndpointInfo findBestEndpointInfo(javax.xml.namespace.QName,java.util.List)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.util.Iterator getPrefixes(java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElementEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:java.util.Iterator getPrefixes(java.lang.String)",
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void writeEndElement()",
            "org.apache.cxf.staxutils.transform.TransformUtils:void convertToQNamesMap(java.util.Map,org.apache.cxf.staxutils.transform.QNamesMap,java.util.Map)",
            "org.apache.cxf.staxutils.transform.TransformUtils:void convertToMapOfElementProperties(java.util.Map,java.util.Map)",
            "org.apache.cxf.staxutils.transform.TransformUtils:void convertToSetOfQNames(java.util.List,java.util.Set)",
            "org.apache.cxf.staxutils.validation.Stax2ValidationUtils:org.codehaus.stax2.validation.XMLValidationSchema getValidator(org.apache.cxf.endpoint.Endpoint,org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.staxutils.validation.W3CMultiSchemaFactory:org.codehaus.stax2.validation.XMLValidationSchema loadSchemas(java.lang.String,java.util.Map)",
            "org.apache.cxf.transport.AbstractMultiplexDestination:java.lang.String extractStringElementFromAny(javax.xml.namespace.QName,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.transport.ChainInitiationObserver:void addToChain(org.apache.cxf.interceptor.InterceptorChain,org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.TransportFinder:boolean hasPrefix(java.lang.String,java.util.Collection)",
            "org.apache.cxf.transport.TransportFinder:java.lang.Object checkForURI(java.lang.String)",
            "org.apache.cxf.transport.TransportFinder:void registerBean(java.lang.Object)",
            "org.apache.cxf.transport.common.gzip.GZIPInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.common.gzip.GZIPOutInterceptor:org.apache.cxf.transport.common.gzip.GZIPOutInterceptor$UseGzip gzipPermitted(org.apache.cxf.message.Message,boolean)",
            "org.apache.cxf.validation.BeanValidationProvider:void initFactoryConfig(javax.validation.Configuration,org.apache.cxf.validation.ValidationConfiguration)",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void notifyChangeListeners(java.beans.PropertyChangeEvent)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils$SchemaLSResourceResolver:org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:javax.xml.namespace.QName getServiceName(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:java.lang.String getPortName(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:void setPortName(org.apache.cxf.ws.addressing.EndpointReferenceType,java.lang.String)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:javax.xml.namespace.QName getInterfaceName(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:void setMetadata(org.apache.cxf.ws.addressing.EndpointReferenceType,java.util.List)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:javax.xml.validation.Schema createSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.Bus)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:org.apache.cxf.transport.MultiplexDestination getMatchingMultiplexDestination(javax.xml.namespace.QName,java.lang.String,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.attachment.LazyAttachmentCollection:void loadAll()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.LazyAttachmentCollection:int size()",
            "org.apache.cxf.attachment.LazyAttachmentCollection:java.lang.Object[] toArray()",
            "org.apache.cxf.attachment.LazyAttachmentCollection:java.lang.Object[] toArray(java.lang.Object[])"
        ]
    },
    "org.apache.cxf.attachment.LazyAttachmentCollection:boolean hasNext(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.AttachmentDeserializer:void markClosed(org.apache.cxf.attachment.DelegatingInputStream)",
            "org.apache.cxf.attachment.LazyAttachmentCollection:boolean hasNext()"
        ]
    },
    "org.apache.cxf.interceptor.AttachmentInInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.security.DelegatingAuthenticationInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.BusFactory:void clearDefaultBusForAnyThread(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void shutdown(boolean)"
        ]
    },
    "org.apache.cxf.attachment.AttachmentDeserializer:void cacheStreamedAttachments()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.AttachmentDeserializer:org.apache.cxf.attachment.AttachmentImpl readNext()",
            "org.apache.cxf.attachment.AttachmentDeserializer:boolean hasNext()"
        ]
    },
    "org.apache.cxf.attachment.AttachmentSerializer:void writeHeaders(java.lang.String,java.lang.String,java.util.Map,java.io.Writer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.AttachmentSerializer:void writeProlog()",
            "org.apache.cxf.attachment.AttachmentSerializer:void writeAttachments()"
        ]
    },
    "org.apache.cxf.attachment.AttachmentSerializer:void writeAttachments()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.AttachmentOutInterceptor$AttachmentOutEndingInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.attachment.AttachmentUtil$DHMap$1$1:boolean hasNext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.BusFactory:void clearDefaultBusForAnyThread(org.apache.cxf.Bus)",
            "org.apache.cxf.attachment.AttachmentDeserializer:void cacheStreamedAttachments()",
            "org.apache.cxf.attachment.AttachmentSerializer:void writeHeaders(java.lang.String,java.lang.String,java.util.Map,java.io.Writer)",
            "org.apache.cxf.attachment.AttachmentSerializer:void writeAttachments()",
            "org.apache.cxf.attachment.AttachmentUtil$DHMap$1$1:boolean hasNext()",
            "org.apache.cxf.attachment.AttachmentUtil$DHMap:javax.activation.DataHandler put(java.lang.String,javax.activation.DataHandler)",
            "org.apache.cxf.attachment.AttachmentUtil:java.lang.String getHeaderValue(java.util.List,java.lang.String)",
            "org.apache.cxf.attachment.AttachmentUtil:org.apache.cxf.message.Attachment createAttachment(java.io.InputStream,java.util.Map)",
            "org.apache.cxf.attachment.AttachmentUtil:boolean isTypeSupported(java.lang.String,java.util.List)",
            "org.apache.cxf.attachment.ImageDataContentHandler:void writeTo(java.lang.Object,java.lang.String,java.io.OutputStream)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$1$1:boolean hasNext()",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$2$1:boolean hasNext()",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$3$1:boolean hasNext()",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:boolean containsValue(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:javax.activation.DataHandler get(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:javax.activation.DataHandler remove(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:void putAll(java.util.Map)",
            "org.apache.cxf.attachment.LazyAttachmentCollection:boolean isEmpty()",
            "org.apache.cxf.attachment.LazyDataSource:void load()",
            "org.apache.cxf.binding.AbstractBindingFactory:void registerWithBindingManager()",
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:java.util.List getBeanNamesOfType(java.lang.Class)",
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:java.util.Collection getBeansOfType(java.lang.Class)",
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)",
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:boolean hasConfiguredPropertyValue(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.bus.blueprint.ConfigurerImpl:void initializeWildcardMap()",
            "org.apache.cxf.bus.blueprint.ConfigurerImpl:void configureWithWildCard(java.lang.String,java.lang.Object)",
            "org.apache.cxf.bus.extension.Extension:java.lang.String toString()",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:boolean hasExtensionByName(java.lang.String)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void initialize()",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void initializeFeatures()",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void <init>(java.lang.String[],java.lang.ClassLoader,java.util.Map,org.apache.cxf.resource.ResourceManager,org.apache.cxf.Bus)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void initialize()",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void removeBeansOfNames(java.util.List)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void activateAll()",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void activateAllByType(java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void load(java.lang.String,java.lang.ClassLoader)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:java.util.List getBeanNamesOfType(java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:java.util.Collection getBeansOfType(java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void destroyBeans()",
            "org.apache.cxf.bus.extension.ExtensionRegistry:java.util.Map getRegisteredExtensions()",
            "org.apache.cxf.bus.extension.ExtensionRegistry:void removeExtensions(java.util.List)",
            "org.apache.cxf.bus.extension.ExtensionRegistry:void addExtensions(java.util.List)",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl$1:boolean beanLoaded(java.lang.String,org.apache.cxf.binding.BindingFactory)",
            "org.apache.cxf.bus.managers.CXFBusLifeCycleManager:void initComplete()",
            "org.apache.cxf.bus.managers.ClientLifeCycleManagerImpl:void clientCreated(org.apache.cxf.endpoint.Client)",
            "org.apache.cxf.bus.managers.EndpointResolverRegistryImpl:org.apache.cxf.ws.addressing.EndpointReferenceType resolve(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.bus.managers.EndpointResolverRegistryImpl:org.apache.cxf.ws.addressing.EndpointReferenceType renew(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.bus.managers.EndpointResolverRegistryImpl:org.apache.cxf.ws.addressing.EndpointReferenceType mint(javax.xml.namespace.QName)",
            "org.apache.cxf.bus.managers.EndpointResolverRegistryImpl:org.apache.cxf.ws.addressing.EndpointReferenceType mint(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.bus.managers.ServerLifeCycleManagerImpl:void startServer(org.apache.cxf.endpoint.Server)",
            "org.apache.cxf.bus.managers.ServiceContractResolverRegistryImpl:java.net.URI getContractLocation(javax.xml.namespace.QName)",
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:void shutdown(boolean)",
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:void run()",
            "org.apache.cxf.bus.osgi.CXFExtensionBundleListener:boolean addExtensions(org.osgi.framework.Bundle,java.util.List)",
            "org.apache.cxf.bus.osgi.ManagedWorkQueueList:void addAllToWorkQueueManager(org.apache.cxf.workqueue.WorkQueueManager)",
            "org.apache.cxf.bus.osgi.ManagedWorkQueueList:void shutDown()",
            "org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor:void insertConstructorArg(org.springframework.beans.factory.config.ConstructorArgumentValues,java.lang.Object)",
            "org.apache.cxf.bus.spring.SpringBeanLocator:java.util.Collection getBeansOfType(java.lang.Class)",
            "org.apache.cxf.bus.spring.SpringBeanLocator:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)",
            "org.apache.cxf.bus.spring.SpringBeanLocator:boolean hasConfiguredPropertyValue(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.common.annotation.AnnotationProcessor:void processMethods(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)",
            "org.apache.cxf.common.annotation.AnnotationProcessor:void processFields(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)",
            "org.apache.cxf.common.annotation.AnnotationProcessor:void processClass(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)",
            "org.apache.cxf.common.injection.ResourceInjector:void invokePostConstruct()",
            "org.apache.cxf.common.injection.ResourceInjector:void invokePreDestroy()",
            "org.apache.cxf.common.jaxb.JAXBContextCache:org.apache.cxf.common.jaxb.JAXBContextCache$CachedContextAndSchemas getCachedContextAndSchemas(java.util.Set,java.lang.String,java.util.Map,java.util.Collection,boolean)",
            "org.apache.cxf.common.jaxb.JAXBUtils:java.lang.String makeConventionalIdentifier(java.util.List,org.apache.cxf.common.jaxb.JAXBUtils$IdentifierType)",
            "org.apache.cxf.common.jaxb.JAXBUtils:void logGeneratedClassNames(java.util.logging.Logger,org.apache.cxf.common.jaxb.JAXBUtils$JCodeModel)",
            "org.apache.cxf.common.jaxb.JAXBUtils:java.util.List getGeneratedClassNames(org.apache.cxf.common.jaxb.JAXBUtils$JCodeModel)",
            "org.apache.cxf.common.jaxb.JAXBUtils:void scanPackages(java.util.Set,java.lang.Class[],java.util.Map)",
            "org.apache.cxf.common.security.SimpleGroup$1:boolean hasMoreElements()",
            "org.apache.cxf.common.util.CacheMap:void updateMainDataMap()",
            "org.apache.cxf.common.util.CacheMap:void putAll(java.util.Map)",
            "org.apache.cxf.common.util.CollectionUtils:java.util.Collection diff(java.util.Collection,java.util.Collection)",
            "org.apache.cxf.common.util.CollectionUtils:boolean isEmpty(java.util.Collection)",
            "org.apache.cxf.common.util.Compiler:boolean compileFiles(java.util.List)",
            "org.apache.cxf.common.util.PackageUtils:java.lang.String getSharedPackageName(java.util.List)",
            "org.apache.cxf.common.util.ProxyClassLoader:java.lang.Class findClass(java.lang.String)",
            "org.apache.cxf.common.util.ProxyClassLoader:java.net.URL findResource(java.lang.String)",
            "org.apache.cxf.common.util.ReflectionInvokationHandler$WrapperIterator:boolean hasNext()",
            "org.apache.cxf.common.util.SortedArraySet:boolean addAll(java.util.Collection)",
            "org.apache.cxf.common.util.SortedArraySet:boolean containsAll(java.util.Collection)",
            "org.apache.cxf.common.util.SortedArraySet:boolean removeAll(java.util.Collection)",
            "org.apache.cxf.common.util.SortedArraySet:boolean retainAll(java.util.Collection)",
            "org.apache.cxf.common.util.SpringClasspathScanner:java.util.Map findClassesInternal(java.util.Collection,java.util.List,java.lang.ClassLoader)",
            "org.apache.cxf.common.util.SpringClasspathScanner:java.util.List findResourcesInternal(java.util.Collection,java.lang.String,java.lang.ClassLoader)",
            "org.apache.cxf.common.util.StringUtils:java.lang.String getFirstNotEmpty(java.lang.String,java.lang.String)",
            "org.apache.cxf.common.util.StringUtils:java.lang.String getFirstNotEmpty(java.util.List)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.util.Set entrySet()",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.util.Set keySet()",
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addOneSchemaCrossImports(org.apache.ws.commons.schema.XmlSchema)",
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addCrossImports(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaAll)",
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addCrossImports(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaChoice)",
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addCrossImports(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaSequence)",
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addCrossImportsAttributeList(org.apache.ws.commons.schema.XmlSchema,java.util.List)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:boolean isEumeration(org.apache.ws.commons.schema.XmlSchemaSimpleType)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:java.util.List enumeratorValues(org.apache.ws.commons.schema.XmlSchemaSimpleType)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:boolean schemaImportsNamespace(org.apache.ws.commons.schema.XmlSchema,java.lang.String)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:void addImportIfNeeded(org.apache.ws.commons.schema.XmlSchema,java.lang.String)",
            "org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser:javax.xml.bind.JAXBContext getContext(java.lang.Class)",
            "org.apache.cxf.configuration.blueprint.SimpleBPBeanDefinitionParser:org.osgi.service.blueprint.reflect.Metadata parse(org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext)",
            "org.apache.cxf.configuration.jsse.SSLUtils:java.util.List compileRegexPatterns(java.util.List,boolean,java.util.logging.Logger)",
            "org.apache.cxf.configuration.jsse.SSLUtils:boolean matchesOneOf(java.lang.String,java.util.List)",
            "org.apache.cxf.configuration.jsse.TLSClientParameters:int hashCode()",
            "org.apache.cxf.configuration.jsse.TLSParameterJaxBUtils:java.security.KeyStore createTrustStore(java.io.InputStream,java.lang.String)",
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:javax.xml.bind.JAXBContext getContext(java.lang.Class)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void initWildcardDefinitionMap()",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureBean(java.lang.String,java.lang.Object,boolean)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureWithWildCard(java.lang.String,java.lang.Object)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void addApplicationContext(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.databinding.AbstractDataBinding:void checkNamespaceMap(java.util.Map)",
            "org.apache.cxf.databinding.source.SourceDataBinding:void initialize(org.apache.cxf.service.Service)",
            "org.apache.cxf.databinding.source.XMLStreamDataReader:org.w3c.dom.Element validate(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.databinding.stax.StaxDataBinding:void initialize(org.apache.cxf.service.Service)",
            "org.apache.cxf.databinding.stax.StaxDataBindingFeature:void removeDatabindingInterceptor(java.util.List)",
            "org.apache.cxf.endpoint.AbstractConduitSelector:void close()",
            "org.apache.cxf.endpoint.AbstractConduitSelector:org.apache.cxf.transport.Conduit findCompatibleConduit(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.AbstractEndpointFactory:void addToBeans(java.util.Collection,java.lang.Object)",
            "org.apache.cxf.endpoint.ClientImpl:void destroy()",
            "org.apache.cxf.endpoint.ClientImpl:org.apache.cxf.service.model.EndpointInfo findEndpoint(org.apache.cxf.service.Service,javax.xml.namespace.QName)",
            "org.apache.cxf.endpoint.ClientImpl:void modifyChain(org.apache.cxf.interceptor.InterceptorChain,org.apache.cxf.message.Message,boolean)",
            "org.apache.cxf.endpoint.ServerImpl:void stop()",
            "org.apache.cxf.feature.AbstractFeature:java.lang.Object getActive(java.util.List,java.lang.Class)",
            "org.apache.cxf.feature.validation.SchemaValidationFeature:void initialise(org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.helpers.DOMUtils:java.util.Set convertStringsToQNames(java.util.List)",
            "org.apache.cxf.helpers.MapNamespaceContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:org.apache.cxf.service.model.MessagePartInfo findMessagePart(org.apache.cxf.message.Exchange,java.util.Collection,javax.xml.namespace.QName,boolean,int,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:void writeParts(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.message.MessageContentsList,java.util.List)",
            "org.apache.cxf.interceptor.AnnotationInterceptors:java.util.List getAnnotationInterceptorList(java.lang.Class)",
            "org.apache.cxf.interceptor.ClientFaultConverter:void processFaultDetail(org.apache.cxf.interceptor.Fault,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.ClientFaultConverter:void setStackTrace(org.apache.cxf.interceptor.Fault,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.ClientFaultConverter:java.lang.Throwable getCause(java.util.Iterator,java.lang.String)",
            "org.apache.cxf.interceptor.FaultOutInterceptor:org.apache.cxf.service.model.FaultInfo getFaultForClass(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Class)",
            "org.apache.cxf.interceptor.InFaultChainInitiatorObserver:void addToChain(org.apache.cxf.phase.PhaseInterceptorChain,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.OutFaultChainInitiatorObserver:void addToChain(org.apache.cxf.phase.PhaseInterceptorChain,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:void modifyChain(org.apache.cxf.phase.PhaseInterceptorChain,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.security.AbstractAuthorizingInInterceptor:boolean isUserInRole(org.apache.cxf.security.SecurityContext,java.util.List,boolean)",
            "org.apache.cxf.interceptor.security.DefaultSecurityContext:java.security.Principal findPrincipal(java.lang.String,javax.security.auth.Subject)",
            "org.apache.cxf.interceptor.security.DefaultSecurityContext:boolean isUserInRole(java.lang.String)",
            "org.apache.cxf.interceptor.security.DefaultSecurityContext:java.util.Set getUserRoles()",
            "org.apache.cxf.interceptor.security.JAASLoginInterceptor:javax.security.auth.callback.CallbackHandler getFirstCallbackHandler(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.security.RolePrefixSecurityContextImpl:boolean isUserInRole(java.lang.String)",
            "org.apache.cxf.interceptor.security.RolePrefixSecurityContextImpl:java.security.Principal findPrincipal(javax.security.auth.Subject,java.lang.String,java.lang.String)",
            "org.apache.cxf.interceptor.security.RolePrefixSecurityContextImpl:java.util.Set findRoles(javax.security.auth.Subject,java.lang.String,java.lang.String)",
            "org.apache.cxf.interceptor.security.SecureAnnotationsInterceptor:void setSecuredObject(java.lang.Object)",
            "org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor:boolean isUserInRole(org.apache.cxf.security.SecurityContext,java.util.List,boolean)",
            "org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor:java.util.Map parseRolesMap(java.util.Map)",
            "org.apache.cxf.interceptor.security.callback.CertKeyToUserNameMapper:java.lang.String getUserName(java.security.cert.Certificate)",
            "org.apache.cxf.io.CachedOutputStream:void flush()",
            "org.apache.cxf.io.CachedOutputStream:void lockOutputStream()",
            "org.apache.cxf.io.CachedOutputStream:void close()",
            "org.apache.cxf.io.CachedWriter:void flush()",
            "org.apache.cxf.io.CachedWriter:void lockOutputStream()",
            "org.apache.cxf.io.CachedWriter:void close()",
            "org.apache.cxf.message.ExchangeImpl:void putAll(java.util.Map)",
            "org.apache.cxf.message.MessageImpl:void copyContent(org.apache.cxf.message.Message,org.apache.cxf.message.Message)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void <init>(java.util.SortedSet)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void add(java.util.Collection,boolean)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void add(org.apache.cxf.interceptor.Interceptor,boolean)",
            "org.apache.cxf.resource.DefaultResourceManager:void addResourceResolvers(java.util.Collection)",
            "org.apache.cxf.resource.DefaultResourceManager:java.lang.Object findResource(java.lang.String,java.lang.Class,boolean,java.util.List)",
            "org.apache.cxf.service.ServiceImpl:org.apache.cxf.service.model.EndpointInfo getEndpointInfo(javax.xml.namespace.QName)",
            "org.apache.cxf.service.ServiceModelVisitor:void walk()",
            "org.apache.cxf.service.ServiceModelVisitor:void visitOperation(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.factory.AbstractServiceFactoryBean:void sendEvent(org.apache.cxf.service.factory.FactoryBeanListener$Event,java.lang.Object[])",
            "org.apache.cxf.service.factory.AbstractServiceFactoryBean:void fillDataBindingSchemas()",
            "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void handleEvent(org.apache.cxf.service.factory.FactoryBeanListener$Event,org.apache.cxf.service.factory.AbstractServiceFactoryBean,java.lang.Object[])",
            "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void addBindingOperationDocs(org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void addDocumentation(org.apache.cxf.service.model.OperationInfo,org.apache.cxf.annotations.WSDLDocumentation$Placement,org.apache.cxf.annotations.WSDLDocumentation[])",
            "org.apache.cxf.service.factory.FactoryBeanListenerManager:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.service.factory.SimpleMethodDispatcher:org.apache.cxf.service.model.BindingOperationInfo getBindingOperation(java.lang.reflect.Method,org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.service.model.AbstractMessageContainer:int getMessagePartIndex(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePartByIndex(int)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePart(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePart(int)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:void setDelegate(org.apache.cxf.service.model.AbstractPropertiesHolder,boolean)",
            "org.apache.cxf.service.model.BindingInfo:org.apache.cxf.service.model.BindingOperationInfo buildOperation(javax.xml.namespace.QName,java.lang.String,java.lang.String)",
            "org.apache.cxf.service.model.BindingInfo:org.apache.cxf.service.model.BindingOperationInfo getOperation(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.BindingOperationInfo:void <init>(org.apache.cxf.service.model.BindingInfo,org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.MessageInfo:java.util.Map getMessagePartsMap()",
            "org.apache.cxf.service.model.MessageInfo:java.util.List getOrderedParts(java.util.List)",
            "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.BindingInfo getBinding(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.EndpointInfo getEndpoint(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.ServiceInfo:void initMessagesMap()",
            "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.SchemaInfo getSchema(java.lang.String)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperation(org.apache.cxf.message.Exchange,java.lang.String)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperationForWrapperElement(org.apache.cxf.message.Exchange,javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.SchemaInfo getSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.ServiceModelUtil:java.util.List getOperationInputPartNames(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.EndpointInfo findBestEndpointInfo(javax.xml.namespace.QName,java.util.List)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.util.Iterator getPrefixes(java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElementEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:java.util.Iterator getPrefixes(java.lang.String)",
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void writeEndElement()",
            "org.apache.cxf.staxutils.transform.TransformUtils:void convertToQNamesMap(java.util.Map,org.apache.cxf.staxutils.transform.QNamesMap,java.util.Map)",
            "org.apache.cxf.staxutils.transform.TransformUtils:void convertToMapOfElementProperties(java.util.Map,java.util.Map)",
            "org.apache.cxf.staxutils.transform.TransformUtils:void convertToSetOfQNames(java.util.List,java.util.Set)",
            "org.apache.cxf.staxutils.validation.Stax2ValidationUtils:org.codehaus.stax2.validation.XMLValidationSchema getValidator(org.apache.cxf.endpoint.Endpoint,org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.staxutils.validation.W3CMultiSchemaFactory:org.codehaus.stax2.validation.XMLValidationSchema loadSchemas(java.lang.String,java.util.Map)",
            "org.apache.cxf.transport.AbstractMultiplexDestination:java.lang.String extractStringElementFromAny(javax.xml.namespace.QName,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.transport.ChainInitiationObserver:void addToChain(org.apache.cxf.interceptor.InterceptorChain,org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.TransportFinder:boolean hasPrefix(java.lang.String,java.util.Collection)",
            "org.apache.cxf.transport.TransportFinder:java.lang.Object checkForURI(java.lang.String)",
            "org.apache.cxf.transport.TransportFinder:void registerBean(java.lang.Object)",
            "org.apache.cxf.transport.common.gzip.GZIPInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.common.gzip.GZIPOutInterceptor:org.apache.cxf.transport.common.gzip.GZIPOutInterceptor$UseGzip gzipPermitted(org.apache.cxf.message.Message,boolean)",
            "org.apache.cxf.validation.BeanValidationProvider:void initFactoryConfig(javax.validation.Configuration,org.apache.cxf.validation.ValidationConfiguration)",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void notifyChangeListeners(java.beans.PropertyChangeEvent)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils$SchemaLSResourceResolver:org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:javax.xml.namespace.QName getServiceName(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:java.lang.String getPortName(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:void setPortName(org.apache.cxf.ws.addressing.EndpointReferenceType,java.lang.String)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:javax.xml.namespace.QName getInterfaceName(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:void setMetadata(org.apache.cxf.ws.addressing.EndpointReferenceType,java.util.List)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:javax.xml.validation.Schema createSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.Bus)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:org.apache.cxf.transport.MultiplexDestination getMatchingMultiplexDestination(javax.xml.namespace.QName,java.lang.String,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.attachment.AttachmentUtil$DHMap:javax.activation.DataHandler put(java.lang.String,javax.activation.DataHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.AttachmentUtil$DHMap:java.lang.Object put(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cxf.attachment.AttachmentUtil:java.lang.String getHeaderValue(java.util.List,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.AttachmentUtil:java.lang.String getHeader(java.util.Map,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.attachment.AttachmentUtil:org.apache.cxf.message.Attachment createAttachment(java.io.InputStream,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.AttachmentDeserializer:org.apache.cxf.message.Attachment createAttachment(java.util.Map)"
        ]
    },
    "org.apache.cxf.attachment.AttachmentUtil:boolean isTypeSupported(java.lang.String,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.AttachmentDeserializer:void initializeRootMessage()",
            "org.apache.cxf.interceptor.AttachmentInInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.attachment.ImageDataContentHandler:void writeTo(java.lang.Object,java.lang.String,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$1$1:boolean hasNext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.BusFactory:void clearDefaultBusForAnyThread(org.apache.cxf.Bus)",
            "org.apache.cxf.attachment.AttachmentDeserializer:void cacheStreamedAttachments()",
            "org.apache.cxf.attachment.AttachmentSerializer:void writeHeaders(java.lang.String,java.lang.String,java.util.Map,java.io.Writer)",
            "org.apache.cxf.attachment.AttachmentSerializer:void writeAttachments()",
            "org.apache.cxf.attachment.AttachmentUtil$DHMap$1$1:boolean hasNext()",
            "org.apache.cxf.attachment.AttachmentUtil$DHMap:javax.activation.DataHandler put(java.lang.String,javax.activation.DataHandler)",
            "org.apache.cxf.attachment.AttachmentUtil:java.lang.String getHeaderValue(java.util.List,java.lang.String)",
            "org.apache.cxf.attachment.AttachmentUtil:org.apache.cxf.message.Attachment createAttachment(java.io.InputStream,java.util.Map)",
            "org.apache.cxf.attachment.AttachmentUtil:boolean isTypeSupported(java.lang.String,java.util.List)",
            "org.apache.cxf.attachment.ImageDataContentHandler:void writeTo(java.lang.Object,java.lang.String,java.io.OutputStream)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$1$1:boolean hasNext()",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$2$1:boolean hasNext()",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$3$1:boolean hasNext()",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:boolean containsValue(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:javax.activation.DataHandler get(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:javax.activation.DataHandler remove(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:void putAll(java.util.Map)",
            "org.apache.cxf.attachment.LazyAttachmentCollection:boolean isEmpty()",
            "org.apache.cxf.attachment.LazyDataSource:void load()",
            "org.apache.cxf.binding.AbstractBindingFactory:void registerWithBindingManager()",
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:java.util.List getBeanNamesOfType(java.lang.Class)",
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:java.util.Collection getBeansOfType(java.lang.Class)",
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)",
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:boolean hasConfiguredPropertyValue(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.bus.blueprint.ConfigurerImpl:void initializeWildcardMap()",
            "org.apache.cxf.bus.blueprint.ConfigurerImpl:void configureWithWildCard(java.lang.String,java.lang.Object)",
            "org.apache.cxf.bus.extension.Extension:java.lang.String toString()",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:boolean hasExtensionByName(java.lang.String)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void initialize()",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void initializeFeatures()",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void <init>(java.lang.String[],java.lang.ClassLoader,java.util.Map,org.apache.cxf.resource.ResourceManager,org.apache.cxf.Bus)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void initialize()",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void removeBeansOfNames(java.util.List)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void activateAll()",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void activateAllByType(java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void load(java.lang.String,java.lang.ClassLoader)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:java.util.List getBeanNamesOfType(java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:java.util.Collection getBeansOfType(java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void destroyBeans()",
            "org.apache.cxf.bus.extension.ExtensionRegistry:java.util.Map getRegisteredExtensions()",
            "org.apache.cxf.bus.extension.ExtensionRegistry:void removeExtensions(java.util.List)",
            "org.apache.cxf.bus.extension.ExtensionRegistry:void addExtensions(java.util.List)",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl$1:boolean beanLoaded(java.lang.String,org.apache.cxf.binding.BindingFactory)",
            "org.apache.cxf.bus.managers.CXFBusLifeCycleManager:void initComplete()",
            "org.apache.cxf.bus.managers.ClientLifeCycleManagerImpl:void clientCreated(org.apache.cxf.endpoint.Client)",
            "org.apache.cxf.bus.managers.EndpointResolverRegistryImpl:org.apache.cxf.ws.addressing.EndpointReferenceType resolve(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.bus.managers.EndpointResolverRegistryImpl:org.apache.cxf.ws.addressing.EndpointReferenceType renew(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.bus.managers.EndpointResolverRegistryImpl:org.apache.cxf.ws.addressing.EndpointReferenceType mint(javax.xml.namespace.QName)",
            "org.apache.cxf.bus.managers.EndpointResolverRegistryImpl:org.apache.cxf.ws.addressing.EndpointReferenceType mint(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.bus.managers.ServerLifeCycleManagerImpl:void startServer(org.apache.cxf.endpoint.Server)",
            "org.apache.cxf.bus.managers.ServiceContractResolverRegistryImpl:java.net.URI getContractLocation(javax.xml.namespace.QName)",
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:void shutdown(boolean)",
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:void run()",
            "org.apache.cxf.bus.osgi.CXFExtensionBundleListener:boolean addExtensions(org.osgi.framework.Bundle,java.util.List)",
            "org.apache.cxf.bus.osgi.ManagedWorkQueueList:void addAllToWorkQueueManager(org.apache.cxf.workqueue.WorkQueueManager)",
            "org.apache.cxf.bus.osgi.ManagedWorkQueueList:void shutDown()",
            "org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor:void insertConstructorArg(org.springframework.beans.factory.config.ConstructorArgumentValues,java.lang.Object)",
            "org.apache.cxf.bus.spring.SpringBeanLocator:java.util.Collection getBeansOfType(java.lang.Class)",
            "org.apache.cxf.bus.spring.SpringBeanLocator:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)",
            "org.apache.cxf.bus.spring.SpringBeanLocator:boolean hasConfiguredPropertyValue(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.common.annotation.AnnotationProcessor:void processMethods(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)",
            "org.apache.cxf.common.annotation.AnnotationProcessor:void processFields(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)",
            "org.apache.cxf.common.annotation.AnnotationProcessor:void processClass(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)",
            "org.apache.cxf.common.injection.ResourceInjector:void invokePostConstruct()",
            "org.apache.cxf.common.injection.ResourceInjector:void invokePreDestroy()",
            "org.apache.cxf.common.jaxb.JAXBContextCache:org.apache.cxf.common.jaxb.JAXBContextCache$CachedContextAndSchemas getCachedContextAndSchemas(java.util.Set,java.lang.String,java.util.Map,java.util.Collection,boolean)",
            "org.apache.cxf.common.jaxb.JAXBUtils:java.lang.String makeConventionalIdentifier(java.util.List,org.apache.cxf.common.jaxb.JAXBUtils$IdentifierType)",
            "org.apache.cxf.common.jaxb.JAXBUtils:void logGeneratedClassNames(java.util.logging.Logger,org.apache.cxf.common.jaxb.JAXBUtils$JCodeModel)",
            "org.apache.cxf.common.jaxb.JAXBUtils:java.util.List getGeneratedClassNames(org.apache.cxf.common.jaxb.JAXBUtils$JCodeModel)",
            "org.apache.cxf.common.jaxb.JAXBUtils:void scanPackages(java.util.Set,java.lang.Class[],java.util.Map)",
            "org.apache.cxf.common.security.SimpleGroup$1:boolean hasMoreElements()",
            "org.apache.cxf.common.util.CacheMap:void updateMainDataMap()",
            "org.apache.cxf.common.util.CacheMap:void putAll(java.util.Map)",
            "org.apache.cxf.common.util.CollectionUtils:java.util.Collection diff(java.util.Collection,java.util.Collection)",
            "org.apache.cxf.common.util.CollectionUtils:boolean isEmpty(java.util.Collection)",
            "org.apache.cxf.common.util.Compiler:boolean compileFiles(java.util.List)",
            "org.apache.cxf.common.util.PackageUtils:java.lang.String getSharedPackageName(java.util.List)",
            "org.apache.cxf.common.util.ProxyClassLoader:java.lang.Class findClass(java.lang.String)",
            "org.apache.cxf.common.util.ProxyClassLoader:java.net.URL findResource(java.lang.String)",
            "org.apache.cxf.common.util.ReflectionInvokationHandler$WrapperIterator:boolean hasNext()",
            "org.apache.cxf.common.util.SortedArraySet:boolean addAll(java.util.Collection)",
            "org.apache.cxf.common.util.SortedArraySet:boolean containsAll(java.util.Collection)",
            "org.apache.cxf.common.util.SortedArraySet:boolean removeAll(java.util.Collection)",
            "org.apache.cxf.common.util.SortedArraySet:boolean retainAll(java.util.Collection)",
            "org.apache.cxf.common.util.SpringClasspathScanner:java.util.Map findClassesInternal(java.util.Collection,java.util.List,java.lang.ClassLoader)",
            "org.apache.cxf.common.util.SpringClasspathScanner:java.util.List findResourcesInternal(java.util.Collection,java.lang.String,java.lang.ClassLoader)",
            "org.apache.cxf.common.util.StringUtils:java.lang.String getFirstNotEmpty(java.lang.String,java.lang.String)",
            "org.apache.cxf.common.util.StringUtils:java.lang.String getFirstNotEmpty(java.util.List)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.util.Set entrySet()",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.util.Set keySet()",
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addOneSchemaCrossImports(org.apache.ws.commons.schema.XmlSchema)",
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addCrossImports(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaAll)",
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addCrossImports(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaChoice)",
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addCrossImports(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaSequence)",
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addCrossImportsAttributeList(org.apache.ws.commons.schema.XmlSchema,java.util.List)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:boolean isEumeration(org.apache.ws.commons.schema.XmlSchemaSimpleType)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:java.util.List enumeratorValues(org.apache.ws.commons.schema.XmlSchemaSimpleType)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:boolean schemaImportsNamespace(org.apache.ws.commons.schema.XmlSchema,java.lang.String)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:void addImportIfNeeded(org.apache.ws.commons.schema.XmlSchema,java.lang.String)",
            "org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser:javax.xml.bind.JAXBContext getContext(java.lang.Class)",
            "org.apache.cxf.configuration.blueprint.SimpleBPBeanDefinitionParser:org.osgi.service.blueprint.reflect.Metadata parse(org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext)",
            "org.apache.cxf.configuration.jsse.SSLUtils:java.util.List compileRegexPatterns(java.util.List,boolean,java.util.logging.Logger)",
            "org.apache.cxf.configuration.jsse.SSLUtils:boolean matchesOneOf(java.lang.String,java.util.List)",
            "org.apache.cxf.configuration.jsse.TLSClientParameters:int hashCode()",
            "org.apache.cxf.configuration.jsse.TLSParameterJaxBUtils:java.security.KeyStore createTrustStore(java.io.InputStream,java.lang.String)",
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:javax.xml.bind.JAXBContext getContext(java.lang.Class)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void initWildcardDefinitionMap()",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureBean(java.lang.String,java.lang.Object,boolean)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureWithWildCard(java.lang.String,java.lang.Object)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void addApplicationContext(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.databinding.AbstractDataBinding:void checkNamespaceMap(java.util.Map)",
            "org.apache.cxf.databinding.source.SourceDataBinding:void initialize(org.apache.cxf.service.Service)",
            "org.apache.cxf.databinding.source.XMLStreamDataReader:org.w3c.dom.Element validate(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.databinding.stax.StaxDataBinding:void initialize(org.apache.cxf.service.Service)",
            "org.apache.cxf.databinding.stax.StaxDataBindingFeature:void removeDatabindingInterceptor(java.util.List)",
            "org.apache.cxf.endpoint.AbstractConduitSelector:void close()",
            "org.apache.cxf.endpoint.AbstractConduitSelector:org.apache.cxf.transport.Conduit findCompatibleConduit(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.AbstractEndpointFactory:void addToBeans(java.util.Collection,java.lang.Object)",
            "org.apache.cxf.endpoint.ClientImpl:void destroy()",
            "org.apache.cxf.endpoint.ClientImpl:org.apache.cxf.service.model.EndpointInfo findEndpoint(org.apache.cxf.service.Service,javax.xml.namespace.QName)",
            "org.apache.cxf.endpoint.ClientImpl:void modifyChain(org.apache.cxf.interceptor.InterceptorChain,org.apache.cxf.message.Message,boolean)",
            "org.apache.cxf.endpoint.ServerImpl:void stop()",
            "org.apache.cxf.feature.AbstractFeature:java.lang.Object getActive(java.util.List,java.lang.Class)",
            "org.apache.cxf.feature.validation.SchemaValidationFeature:void initialise(org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.helpers.DOMUtils:java.util.Set convertStringsToQNames(java.util.List)",
            "org.apache.cxf.helpers.MapNamespaceContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:org.apache.cxf.service.model.MessagePartInfo findMessagePart(org.apache.cxf.message.Exchange,java.util.Collection,javax.xml.namespace.QName,boolean,int,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:void writeParts(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.message.MessageContentsList,java.util.List)",
            "org.apache.cxf.interceptor.AnnotationInterceptors:java.util.List getAnnotationInterceptorList(java.lang.Class)",
            "org.apache.cxf.interceptor.ClientFaultConverter:void processFaultDetail(org.apache.cxf.interceptor.Fault,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.ClientFaultConverter:void setStackTrace(org.apache.cxf.interceptor.Fault,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.ClientFaultConverter:java.lang.Throwable getCause(java.util.Iterator,java.lang.String)",
            "org.apache.cxf.interceptor.FaultOutInterceptor:org.apache.cxf.service.model.FaultInfo getFaultForClass(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Class)",
            "org.apache.cxf.interceptor.InFaultChainInitiatorObserver:void addToChain(org.apache.cxf.phase.PhaseInterceptorChain,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.OutFaultChainInitiatorObserver:void addToChain(org.apache.cxf.phase.PhaseInterceptorChain,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:void modifyChain(org.apache.cxf.phase.PhaseInterceptorChain,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.security.AbstractAuthorizingInInterceptor:boolean isUserInRole(org.apache.cxf.security.SecurityContext,java.util.List,boolean)",
            "org.apache.cxf.interceptor.security.DefaultSecurityContext:java.security.Principal findPrincipal(java.lang.String,javax.security.auth.Subject)",
            "org.apache.cxf.interceptor.security.DefaultSecurityContext:boolean isUserInRole(java.lang.String)",
            "org.apache.cxf.interceptor.security.DefaultSecurityContext:java.util.Set getUserRoles()",
            "org.apache.cxf.interceptor.security.JAASLoginInterceptor:javax.security.auth.callback.CallbackHandler getFirstCallbackHandler(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.security.RolePrefixSecurityContextImpl:boolean isUserInRole(java.lang.String)",
            "org.apache.cxf.interceptor.security.RolePrefixSecurityContextImpl:java.security.Principal findPrincipal(javax.security.auth.Subject,java.lang.String,java.lang.String)",
            "org.apache.cxf.interceptor.security.RolePrefixSecurityContextImpl:java.util.Set findRoles(javax.security.auth.Subject,java.lang.String,java.lang.String)",
            "org.apache.cxf.interceptor.security.SecureAnnotationsInterceptor:void setSecuredObject(java.lang.Object)",
            "org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor:boolean isUserInRole(org.apache.cxf.security.SecurityContext,java.util.List,boolean)",
            "org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor:java.util.Map parseRolesMap(java.util.Map)",
            "org.apache.cxf.interceptor.security.callback.CertKeyToUserNameMapper:java.lang.String getUserName(java.security.cert.Certificate)",
            "org.apache.cxf.io.CachedOutputStream:void flush()",
            "org.apache.cxf.io.CachedOutputStream:void lockOutputStream()",
            "org.apache.cxf.io.CachedOutputStream:void close()",
            "org.apache.cxf.io.CachedWriter:void flush()",
            "org.apache.cxf.io.CachedWriter:void lockOutputStream()",
            "org.apache.cxf.io.CachedWriter:void close()",
            "org.apache.cxf.message.ExchangeImpl:void putAll(java.util.Map)",
            "org.apache.cxf.message.MessageImpl:void copyContent(org.apache.cxf.message.Message,org.apache.cxf.message.Message)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void <init>(java.util.SortedSet)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void add(java.util.Collection,boolean)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void add(org.apache.cxf.interceptor.Interceptor,boolean)",
            "org.apache.cxf.resource.DefaultResourceManager:void addResourceResolvers(java.util.Collection)",
            "org.apache.cxf.resource.DefaultResourceManager:java.lang.Object findResource(java.lang.String,java.lang.Class,boolean,java.util.List)",
            "org.apache.cxf.service.ServiceImpl:org.apache.cxf.service.model.EndpointInfo getEndpointInfo(javax.xml.namespace.QName)",
            "org.apache.cxf.service.ServiceModelVisitor:void walk()",
            "org.apache.cxf.service.ServiceModelVisitor:void visitOperation(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.factory.AbstractServiceFactoryBean:void sendEvent(org.apache.cxf.service.factory.FactoryBeanListener$Event,java.lang.Object[])",
            "org.apache.cxf.service.factory.AbstractServiceFactoryBean:void fillDataBindingSchemas()",
            "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void handleEvent(org.apache.cxf.service.factory.FactoryBeanListener$Event,org.apache.cxf.service.factory.AbstractServiceFactoryBean,java.lang.Object[])",
            "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void addBindingOperationDocs(org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void addDocumentation(org.apache.cxf.service.model.OperationInfo,org.apache.cxf.annotations.WSDLDocumentation$Placement,org.apache.cxf.annotations.WSDLDocumentation[])",
            "org.apache.cxf.service.factory.FactoryBeanListenerManager:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.service.factory.SimpleMethodDispatcher:org.apache.cxf.service.model.BindingOperationInfo getBindingOperation(java.lang.reflect.Method,org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.service.model.AbstractMessageContainer:int getMessagePartIndex(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePartByIndex(int)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePart(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePart(int)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:void setDelegate(org.apache.cxf.service.model.AbstractPropertiesHolder,boolean)",
            "org.apache.cxf.service.model.BindingInfo:org.apache.cxf.service.model.BindingOperationInfo buildOperation(javax.xml.namespace.QName,java.lang.String,java.lang.String)",
            "org.apache.cxf.service.model.BindingInfo:org.apache.cxf.service.model.BindingOperationInfo getOperation(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.BindingOperationInfo:void <init>(org.apache.cxf.service.model.BindingInfo,org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.MessageInfo:java.util.Map getMessagePartsMap()",
            "org.apache.cxf.service.model.MessageInfo:java.util.List getOrderedParts(java.util.List)",
            "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.BindingInfo getBinding(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.EndpointInfo getEndpoint(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.ServiceInfo:void initMessagesMap()",
            "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.SchemaInfo getSchema(java.lang.String)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperation(org.apache.cxf.message.Exchange,java.lang.String)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperationForWrapperElement(org.apache.cxf.message.Exchange,javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.SchemaInfo getSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.ServiceModelUtil:java.util.List getOperationInputPartNames(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.EndpointInfo findBestEndpointInfo(javax.xml.namespace.QName,java.util.List)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.util.Iterator getPrefixes(java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElementEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:java.util.Iterator getPrefixes(java.lang.String)",
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void writeEndElement()",
            "org.apache.cxf.staxutils.transform.TransformUtils:void convertToQNamesMap(java.util.Map,org.apache.cxf.staxutils.transform.QNamesMap,java.util.Map)",
            "org.apache.cxf.staxutils.transform.TransformUtils:void convertToMapOfElementProperties(java.util.Map,java.util.Map)",
            "org.apache.cxf.staxutils.transform.TransformUtils:void convertToSetOfQNames(java.util.List,java.util.Set)",
            "org.apache.cxf.staxutils.validation.Stax2ValidationUtils:org.codehaus.stax2.validation.XMLValidationSchema getValidator(org.apache.cxf.endpoint.Endpoint,org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.staxutils.validation.W3CMultiSchemaFactory:org.codehaus.stax2.validation.XMLValidationSchema loadSchemas(java.lang.String,java.util.Map)",
            "org.apache.cxf.transport.AbstractMultiplexDestination:java.lang.String extractStringElementFromAny(javax.xml.namespace.QName,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.transport.ChainInitiationObserver:void addToChain(org.apache.cxf.interceptor.InterceptorChain,org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.TransportFinder:boolean hasPrefix(java.lang.String,java.util.Collection)",
            "org.apache.cxf.transport.TransportFinder:java.lang.Object checkForURI(java.lang.String)",
            "org.apache.cxf.transport.TransportFinder:void registerBean(java.lang.Object)",
            "org.apache.cxf.transport.common.gzip.GZIPInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.common.gzip.GZIPOutInterceptor:org.apache.cxf.transport.common.gzip.GZIPOutInterceptor$UseGzip gzipPermitted(org.apache.cxf.message.Message,boolean)",
            "org.apache.cxf.validation.BeanValidationProvider:void initFactoryConfig(javax.validation.Configuration,org.apache.cxf.validation.ValidationConfiguration)",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void notifyChangeListeners(java.beans.PropertyChangeEvent)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils$SchemaLSResourceResolver:org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:javax.xml.namespace.QName getServiceName(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:java.lang.String getPortName(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:void setPortName(org.apache.cxf.ws.addressing.EndpointReferenceType,java.lang.String)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:javax.xml.namespace.QName getInterfaceName(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:void setMetadata(org.apache.cxf.ws.addressing.EndpointReferenceType,java.util.List)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:javax.xml.validation.Schema createSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.Bus)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:org.apache.cxf.transport.MultiplexDestination getMatchingMultiplexDestination(javax.xml.namespace.QName,java.lang.String,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$2$1:boolean hasNext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.BusFactory:void clearDefaultBusForAnyThread(org.apache.cxf.Bus)",
            "org.apache.cxf.attachment.AttachmentDeserializer:void cacheStreamedAttachments()",
            "org.apache.cxf.attachment.AttachmentSerializer:void writeHeaders(java.lang.String,java.lang.String,java.util.Map,java.io.Writer)",
            "org.apache.cxf.attachment.AttachmentSerializer:void writeAttachments()",
            "org.apache.cxf.attachment.AttachmentUtil$DHMap$1$1:boolean hasNext()",
            "org.apache.cxf.attachment.AttachmentUtil$DHMap:javax.activation.DataHandler put(java.lang.String,javax.activation.DataHandler)",
            "org.apache.cxf.attachment.AttachmentUtil:java.lang.String getHeaderValue(java.util.List,java.lang.String)",
            "org.apache.cxf.attachment.AttachmentUtil:org.apache.cxf.message.Attachment createAttachment(java.io.InputStream,java.util.Map)",
            "org.apache.cxf.attachment.AttachmentUtil:boolean isTypeSupported(java.lang.String,java.util.List)",
            "org.apache.cxf.attachment.ImageDataContentHandler:void writeTo(java.lang.Object,java.lang.String,java.io.OutputStream)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$1$1:boolean hasNext()",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$2$1:boolean hasNext()",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$3$1:boolean hasNext()",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:boolean containsValue(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:javax.activation.DataHandler get(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:javax.activation.DataHandler remove(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:void putAll(java.util.Map)",
            "org.apache.cxf.attachment.LazyAttachmentCollection:boolean isEmpty()",
            "org.apache.cxf.attachment.LazyDataSource:void load()",
            "org.apache.cxf.binding.AbstractBindingFactory:void registerWithBindingManager()",
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:java.util.List getBeanNamesOfType(java.lang.Class)",
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:java.util.Collection getBeansOfType(java.lang.Class)",
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)",
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:boolean hasConfiguredPropertyValue(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.bus.blueprint.ConfigurerImpl:void initializeWildcardMap()",
            "org.apache.cxf.bus.blueprint.ConfigurerImpl:void configureWithWildCard(java.lang.String,java.lang.Object)",
            "org.apache.cxf.bus.extension.Extension:java.lang.String toString()",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:boolean hasExtensionByName(java.lang.String)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void initialize()",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void initializeFeatures()",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void <init>(java.lang.String[],java.lang.ClassLoader,java.util.Map,org.apache.cxf.resource.ResourceManager,org.apache.cxf.Bus)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void initialize()",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void removeBeansOfNames(java.util.List)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void activateAll()",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void activateAllByType(java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void load(java.lang.String,java.lang.ClassLoader)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:java.util.List getBeanNamesOfType(java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:java.util.Collection getBeansOfType(java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void destroyBeans()",
            "org.apache.cxf.bus.extension.ExtensionRegistry:java.util.Map getRegisteredExtensions()",
            "org.apache.cxf.bus.extension.ExtensionRegistry:void removeExtensions(java.util.List)",
            "org.apache.cxf.bus.extension.ExtensionRegistry:void addExtensions(java.util.List)",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl$1:boolean beanLoaded(java.lang.String,org.apache.cxf.binding.BindingFactory)",
            "org.apache.cxf.bus.managers.CXFBusLifeCycleManager:void initComplete()",
            "org.apache.cxf.bus.managers.ClientLifeCycleManagerImpl:void clientCreated(org.apache.cxf.endpoint.Client)",
            "org.apache.cxf.bus.managers.EndpointResolverRegistryImpl:org.apache.cxf.ws.addressing.EndpointReferenceType resolve(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.bus.managers.EndpointResolverRegistryImpl:org.apache.cxf.ws.addressing.EndpointReferenceType renew(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.bus.managers.EndpointResolverRegistryImpl:org.apache.cxf.ws.addressing.EndpointReferenceType mint(javax.xml.namespace.QName)",
            "org.apache.cxf.bus.managers.EndpointResolverRegistryImpl:org.apache.cxf.ws.addressing.EndpointReferenceType mint(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.bus.managers.ServerLifeCycleManagerImpl:void startServer(org.apache.cxf.endpoint.Server)",
            "org.apache.cxf.bus.managers.ServiceContractResolverRegistryImpl:java.net.URI getContractLocation(javax.xml.namespace.QName)",
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:void shutdown(boolean)",
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:void run()",
            "org.apache.cxf.bus.osgi.CXFExtensionBundleListener:boolean addExtensions(org.osgi.framework.Bundle,java.util.List)",
            "org.apache.cxf.bus.osgi.ManagedWorkQueueList:void addAllToWorkQueueManager(org.apache.cxf.workqueue.WorkQueueManager)",
            "org.apache.cxf.bus.osgi.ManagedWorkQueueList:void shutDown()",
            "org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor:void insertConstructorArg(org.springframework.beans.factory.config.ConstructorArgumentValues,java.lang.Object)",
            "org.apache.cxf.bus.spring.SpringBeanLocator:java.util.Collection getBeansOfType(java.lang.Class)",
            "org.apache.cxf.bus.spring.SpringBeanLocator:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)",
            "org.apache.cxf.bus.spring.SpringBeanLocator:boolean hasConfiguredPropertyValue(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.common.annotation.AnnotationProcessor:void processMethods(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)",
            "org.apache.cxf.common.annotation.AnnotationProcessor:void processFields(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)",
            "org.apache.cxf.common.annotation.AnnotationProcessor:void processClass(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)",
            "org.apache.cxf.common.injection.ResourceInjector:void invokePostConstruct()",
            "org.apache.cxf.common.injection.ResourceInjector:void invokePreDestroy()",
            "org.apache.cxf.common.jaxb.JAXBContextCache:org.apache.cxf.common.jaxb.JAXBContextCache$CachedContextAndSchemas getCachedContextAndSchemas(java.util.Set,java.lang.String,java.util.Map,java.util.Collection,boolean)",
            "org.apache.cxf.common.jaxb.JAXBUtils:java.lang.String makeConventionalIdentifier(java.util.List,org.apache.cxf.common.jaxb.JAXBUtils$IdentifierType)",
            "org.apache.cxf.common.jaxb.JAXBUtils:void logGeneratedClassNames(java.util.logging.Logger,org.apache.cxf.common.jaxb.JAXBUtils$JCodeModel)",
            "org.apache.cxf.common.jaxb.JAXBUtils:java.util.List getGeneratedClassNames(org.apache.cxf.common.jaxb.JAXBUtils$JCodeModel)",
            "org.apache.cxf.common.jaxb.JAXBUtils:void scanPackages(java.util.Set,java.lang.Class[],java.util.Map)",
            "org.apache.cxf.common.security.SimpleGroup$1:boolean hasMoreElements()",
            "org.apache.cxf.common.util.CacheMap:void updateMainDataMap()",
            "org.apache.cxf.common.util.CacheMap:void putAll(java.util.Map)",
            "org.apache.cxf.common.util.CollectionUtils:java.util.Collection diff(java.util.Collection,java.util.Collection)",
            "org.apache.cxf.common.util.CollectionUtils:boolean isEmpty(java.util.Collection)",
            "org.apache.cxf.common.util.Compiler:boolean compileFiles(java.util.List)",
            "org.apache.cxf.common.util.PackageUtils:java.lang.String getSharedPackageName(java.util.List)",
            "org.apache.cxf.common.util.ProxyClassLoader:java.lang.Class findClass(java.lang.String)",
            "org.apache.cxf.common.util.ProxyClassLoader:java.net.URL findResource(java.lang.String)",
            "org.apache.cxf.common.util.ReflectionInvokationHandler$WrapperIterator:boolean hasNext()",
            "org.apache.cxf.common.util.SortedArraySet:boolean addAll(java.util.Collection)",
            "org.apache.cxf.common.util.SortedArraySet:boolean containsAll(java.util.Collection)",
            "org.apache.cxf.common.util.SortedArraySet:boolean removeAll(java.util.Collection)",
            "org.apache.cxf.common.util.SortedArraySet:boolean retainAll(java.util.Collection)",
            "org.apache.cxf.common.util.SpringClasspathScanner:java.util.Map findClassesInternal(java.util.Collection,java.util.List,java.lang.ClassLoader)",
            "org.apache.cxf.common.util.SpringClasspathScanner:java.util.List findResourcesInternal(java.util.Collection,java.lang.String,java.lang.ClassLoader)",
            "org.apache.cxf.common.util.StringUtils:java.lang.String getFirstNotEmpty(java.lang.String,java.lang.String)",
            "org.apache.cxf.common.util.StringUtils:java.lang.String getFirstNotEmpty(java.util.List)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.util.Set entrySet()",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.util.Set keySet()",
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addOneSchemaCrossImports(org.apache.ws.commons.schema.XmlSchema)",
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addCrossImports(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaAll)",
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addCrossImports(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaChoice)",
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addCrossImports(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaSequence)",
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addCrossImportsAttributeList(org.apache.ws.commons.schema.XmlSchema,java.util.List)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:boolean isEumeration(org.apache.ws.commons.schema.XmlSchemaSimpleType)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:java.util.List enumeratorValues(org.apache.ws.commons.schema.XmlSchemaSimpleType)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:boolean schemaImportsNamespace(org.apache.ws.commons.schema.XmlSchema,java.lang.String)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:void addImportIfNeeded(org.apache.ws.commons.schema.XmlSchema,java.lang.String)",
            "org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser:javax.xml.bind.JAXBContext getContext(java.lang.Class)",
            "org.apache.cxf.configuration.blueprint.SimpleBPBeanDefinitionParser:org.osgi.service.blueprint.reflect.Metadata parse(org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext)",
            "org.apache.cxf.configuration.jsse.SSLUtils:java.util.List compileRegexPatterns(java.util.List,boolean,java.util.logging.Logger)",
            "org.apache.cxf.configuration.jsse.SSLUtils:boolean matchesOneOf(java.lang.String,java.util.List)",
            "org.apache.cxf.configuration.jsse.TLSClientParameters:int hashCode()",
            "org.apache.cxf.configuration.jsse.TLSParameterJaxBUtils:java.security.KeyStore createTrustStore(java.io.InputStream,java.lang.String)",
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:javax.xml.bind.JAXBContext getContext(java.lang.Class)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void initWildcardDefinitionMap()",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureBean(java.lang.String,java.lang.Object,boolean)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureWithWildCard(java.lang.String,java.lang.Object)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void addApplicationContext(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.databinding.AbstractDataBinding:void checkNamespaceMap(java.util.Map)",
            "org.apache.cxf.databinding.source.SourceDataBinding:void initialize(org.apache.cxf.service.Service)",
            "org.apache.cxf.databinding.source.XMLStreamDataReader:org.w3c.dom.Element validate(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.databinding.stax.StaxDataBinding:void initialize(org.apache.cxf.service.Service)",
            "org.apache.cxf.databinding.stax.StaxDataBindingFeature:void removeDatabindingInterceptor(java.util.List)",
            "org.apache.cxf.endpoint.AbstractConduitSelector:void close()",
            "org.apache.cxf.endpoint.AbstractConduitSelector:org.apache.cxf.transport.Conduit findCompatibleConduit(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.AbstractEndpointFactory:void addToBeans(java.util.Collection,java.lang.Object)",
            "org.apache.cxf.endpoint.ClientImpl:void destroy()",
            "org.apache.cxf.endpoint.ClientImpl:org.apache.cxf.service.model.EndpointInfo findEndpoint(org.apache.cxf.service.Service,javax.xml.namespace.QName)",
            "org.apache.cxf.endpoint.ClientImpl:void modifyChain(org.apache.cxf.interceptor.InterceptorChain,org.apache.cxf.message.Message,boolean)",
            "org.apache.cxf.endpoint.ServerImpl:void stop()",
            "org.apache.cxf.feature.AbstractFeature:java.lang.Object getActive(java.util.List,java.lang.Class)",
            "org.apache.cxf.feature.validation.SchemaValidationFeature:void initialise(org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.helpers.DOMUtils:java.util.Set convertStringsToQNames(java.util.List)",
            "org.apache.cxf.helpers.MapNamespaceContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:org.apache.cxf.service.model.MessagePartInfo findMessagePart(org.apache.cxf.message.Exchange,java.util.Collection,javax.xml.namespace.QName,boolean,int,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:void writeParts(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.message.MessageContentsList,java.util.List)",
            "org.apache.cxf.interceptor.AnnotationInterceptors:java.util.List getAnnotationInterceptorList(java.lang.Class)",
            "org.apache.cxf.interceptor.ClientFaultConverter:void processFaultDetail(org.apache.cxf.interceptor.Fault,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.ClientFaultConverter:void setStackTrace(org.apache.cxf.interceptor.Fault,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.ClientFaultConverter:java.lang.Throwable getCause(java.util.Iterator,java.lang.String)",
            "org.apache.cxf.interceptor.FaultOutInterceptor:org.apache.cxf.service.model.FaultInfo getFaultForClass(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Class)",
            "org.apache.cxf.interceptor.InFaultChainInitiatorObserver:void addToChain(org.apache.cxf.phase.PhaseInterceptorChain,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.OutFaultChainInitiatorObserver:void addToChain(org.apache.cxf.phase.PhaseInterceptorChain,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:void modifyChain(org.apache.cxf.phase.PhaseInterceptorChain,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.security.AbstractAuthorizingInInterceptor:boolean isUserInRole(org.apache.cxf.security.SecurityContext,java.util.List,boolean)",
            "org.apache.cxf.interceptor.security.DefaultSecurityContext:java.security.Principal findPrincipal(java.lang.String,javax.security.auth.Subject)",
            "org.apache.cxf.interceptor.security.DefaultSecurityContext:boolean isUserInRole(java.lang.String)",
            "org.apache.cxf.interceptor.security.DefaultSecurityContext:java.util.Set getUserRoles()",
            "org.apache.cxf.interceptor.security.JAASLoginInterceptor:javax.security.auth.callback.CallbackHandler getFirstCallbackHandler(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.security.RolePrefixSecurityContextImpl:boolean isUserInRole(java.lang.String)",
            "org.apache.cxf.interceptor.security.RolePrefixSecurityContextImpl:java.security.Principal findPrincipal(javax.security.auth.Subject,java.lang.String,java.lang.String)",
            "org.apache.cxf.interceptor.security.RolePrefixSecurityContextImpl:java.util.Set findRoles(javax.security.auth.Subject,java.lang.String,java.lang.String)",
            "org.apache.cxf.interceptor.security.SecureAnnotationsInterceptor:void setSecuredObject(java.lang.Object)",
            "org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor:boolean isUserInRole(org.apache.cxf.security.SecurityContext,java.util.List,boolean)",
            "org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor:java.util.Map parseRolesMap(java.util.Map)",
            "org.apache.cxf.interceptor.security.callback.CertKeyToUserNameMapper:java.lang.String getUserName(java.security.cert.Certificate)",
            "org.apache.cxf.io.CachedOutputStream:void flush()",
            "org.apache.cxf.io.CachedOutputStream:void lockOutputStream()",
            "org.apache.cxf.io.CachedOutputStream:void close()",
            "org.apache.cxf.io.CachedWriter:void flush()",
            "org.apache.cxf.io.CachedWriter:void lockOutputStream()",
            "org.apache.cxf.io.CachedWriter:void close()",
            "org.apache.cxf.message.ExchangeImpl:void putAll(java.util.Map)",
            "org.apache.cxf.message.MessageImpl:void copyContent(org.apache.cxf.message.Message,org.apache.cxf.message.Message)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void <init>(java.util.SortedSet)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void add(java.util.Collection,boolean)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void add(org.apache.cxf.interceptor.Interceptor,boolean)",
            "org.apache.cxf.resource.DefaultResourceManager:void addResourceResolvers(java.util.Collection)",
            "org.apache.cxf.resource.DefaultResourceManager:java.lang.Object findResource(java.lang.String,java.lang.Class,boolean,java.util.List)",
            "org.apache.cxf.service.ServiceImpl:org.apache.cxf.service.model.EndpointInfo getEndpointInfo(javax.xml.namespace.QName)",
            "org.apache.cxf.service.ServiceModelVisitor:void walk()",
            "org.apache.cxf.service.ServiceModelVisitor:void visitOperation(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.factory.AbstractServiceFactoryBean:void sendEvent(org.apache.cxf.service.factory.FactoryBeanListener$Event,java.lang.Object[])",
            "org.apache.cxf.service.factory.AbstractServiceFactoryBean:void fillDataBindingSchemas()",
            "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void handleEvent(org.apache.cxf.service.factory.FactoryBeanListener$Event,org.apache.cxf.service.factory.AbstractServiceFactoryBean,java.lang.Object[])",
            "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void addBindingOperationDocs(org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void addDocumentation(org.apache.cxf.service.model.OperationInfo,org.apache.cxf.annotations.WSDLDocumentation$Placement,org.apache.cxf.annotations.WSDLDocumentation[])",
            "org.apache.cxf.service.factory.FactoryBeanListenerManager:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.service.factory.SimpleMethodDispatcher:org.apache.cxf.service.model.BindingOperationInfo getBindingOperation(java.lang.reflect.Method,org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.service.model.AbstractMessageContainer:int getMessagePartIndex(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePartByIndex(int)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePart(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePart(int)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:void setDelegate(org.apache.cxf.service.model.AbstractPropertiesHolder,boolean)",
            "org.apache.cxf.service.model.BindingInfo:org.apache.cxf.service.model.BindingOperationInfo buildOperation(javax.xml.namespace.QName,java.lang.String,java.lang.String)",
            "org.apache.cxf.service.model.BindingInfo:org.apache.cxf.service.model.BindingOperationInfo getOperation(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.BindingOperationInfo:void <init>(org.apache.cxf.service.model.BindingInfo,org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.MessageInfo:java.util.Map getMessagePartsMap()",
            "org.apache.cxf.service.model.MessageInfo:java.util.List getOrderedParts(java.util.List)",
            "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.BindingInfo getBinding(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.EndpointInfo getEndpoint(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.ServiceInfo:void initMessagesMap()",
            "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.SchemaInfo getSchema(java.lang.String)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperation(org.apache.cxf.message.Exchange,java.lang.String)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperationForWrapperElement(org.apache.cxf.message.Exchange,javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.SchemaInfo getSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.ServiceModelUtil:java.util.List getOperationInputPartNames(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.EndpointInfo findBestEndpointInfo(javax.xml.namespace.QName,java.util.List)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.util.Iterator getPrefixes(java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElementEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:java.util.Iterator getPrefixes(java.lang.String)",
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void writeEndElement()",
            "org.apache.cxf.staxutils.transform.TransformUtils:void convertToQNamesMap(java.util.Map,org.apache.cxf.staxutils.transform.QNamesMap,java.util.Map)",
            "org.apache.cxf.staxutils.transform.TransformUtils:void convertToMapOfElementProperties(java.util.Map,java.util.Map)",
            "org.apache.cxf.staxutils.transform.TransformUtils:void convertToSetOfQNames(java.util.List,java.util.Set)",
            "org.apache.cxf.staxutils.validation.Stax2ValidationUtils:org.codehaus.stax2.validation.XMLValidationSchema getValidator(org.apache.cxf.endpoint.Endpoint,org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.staxutils.validation.W3CMultiSchemaFactory:org.codehaus.stax2.validation.XMLValidationSchema loadSchemas(java.lang.String,java.util.Map)",
            "org.apache.cxf.transport.AbstractMultiplexDestination:java.lang.String extractStringElementFromAny(javax.xml.namespace.QName,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.transport.ChainInitiationObserver:void addToChain(org.apache.cxf.interceptor.InterceptorChain,org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.TransportFinder:boolean hasPrefix(java.lang.String,java.util.Collection)",
            "org.apache.cxf.transport.TransportFinder:java.lang.Object checkForURI(java.lang.String)",
            "org.apache.cxf.transport.TransportFinder:void registerBean(java.lang.Object)",
            "org.apache.cxf.transport.common.gzip.GZIPInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.common.gzip.GZIPOutInterceptor:org.apache.cxf.transport.common.gzip.GZIPOutInterceptor$UseGzip gzipPermitted(org.apache.cxf.message.Message,boolean)",
            "org.apache.cxf.validation.BeanValidationProvider:void initFactoryConfig(javax.validation.Configuration,org.apache.cxf.validation.ValidationConfiguration)",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void notifyChangeListeners(java.beans.PropertyChangeEvent)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils$SchemaLSResourceResolver:org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:javax.xml.namespace.QName getServiceName(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:java.lang.String getPortName(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:void setPortName(org.apache.cxf.ws.addressing.EndpointReferenceType,java.lang.String)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:javax.xml.namespace.QName getInterfaceName(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:void setMetadata(org.apache.cxf.ws.addressing.EndpointReferenceType,java.util.List)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:javax.xml.validation.Schema createSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.Bus)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:org.apache.cxf.transport.MultiplexDestination getMatchingMultiplexDestination(javax.xml.namespace.QName,java.lang.String,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$3$1:boolean hasNext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.BusFactory:void clearDefaultBusForAnyThread(org.apache.cxf.Bus)",
            "org.apache.cxf.attachment.AttachmentDeserializer:void cacheStreamedAttachments()",
            "org.apache.cxf.attachment.AttachmentSerializer:void writeHeaders(java.lang.String,java.lang.String,java.util.Map,java.io.Writer)",
            "org.apache.cxf.attachment.AttachmentSerializer:void writeAttachments()",
            "org.apache.cxf.attachment.AttachmentUtil$DHMap$1$1:boolean hasNext()",
            "org.apache.cxf.attachment.AttachmentUtil$DHMap:javax.activation.DataHandler put(java.lang.String,javax.activation.DataHandler)",
            "org.apache.cxf.attachment.AttachmentUtil:java.lang.String getHeaderValue(java.util.List,java.lang.String)",
            "org.apache.cxf.attachment.AttachmentUtil:org.apache.cxf.message.Attachment createAttachment(java.io.InputStream,java.util.Map)",
            "org.apache.cxf.attachment.AttachmentUtil:boolean isTypeSupported(java.lang.String,java.util.List)",
            "org.apache.cxf.attachment.ImageDataContentHandler:void writeTo(java.lang.Object,java.lang.String,java.io.OutputStream)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$1$1:boolean hasNext()",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$2$1:boolean hasNext()",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$3$1:boolean hasNext()",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:boolean containsValue(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:javax.activation.DataHandler get(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:javax.activation.DataHandler remove(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:void putAll(java.util.Map)",
            "org.apache.cxf.attachment.LazyAttachmentCollection:boolean isEmpty()",
            "org.apache.cxf.attachment.LazyDataSource:void load()",
            "org.apache.cxf.binding.AbstractBindingFactory:void registerWithBindingManager()",
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:java.util.List getBeanNamesOfType(java.lang.Class)",
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:java.util.Collection getBeansOfType(java.lang.Class)",
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)",
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:boolean hasConfiguredPropertyValue(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.bus.blueprint.ConfigurerImpl:void initializeWildcardMap()",
            "org.apache.cxf.bus.blueprint.ConfigurerImpl:void configureWithWildCard(java.lang.String,java.lang.Object)",
            "org.apache.cxf.bus.extension.Extension:java.lang.String toString()",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:boolean hasExtensionByName(java.lang.String)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void initialize()",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void initializeFeatures()",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void <init>(java.lang.String[],java.lang.ClassLoader,java.util.Map,org.apache.cxf.resource.ResourceManager,org.apache.cxf.Bus)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void initialize()",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void removeBeansOfNames(java.util.List)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void activateAll()",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void activateAllByType(java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void load(java.lang.String,java.lang.ClassLoader)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:java.util.List getBeanNamesOfType(java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:java.util.Collection getBeansOfType(java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void destroyBeans()",
            "org.apache.cxf.bus.extension.ExtensionRegistry:java.util.Map getRegisteredExtensions()",
            "org.apache.cxf.bus.extension.ExtensionRegistry:void removeExtensions(java.util.List)",
            "org.apache.cxf.bus.extension.ExtensionRegistry:void addExtensions(java.util.List)",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl$1:boolean beanLoaded(java.lang.String,org.apache.cxf.binding.BindingFactory)",
            "org.apache.cxf.bus.managers.CXFBusLifeCycleManager:void initComplete()",
            "org.apache.cxf.bus.managers.ClientLifeCycleManagerImpl:void clientCreated(org.apache.cxf.endpoint.Client)",
            "org.apache.cxf.bus.managers.EndpointResolverRegistryImpl:org.apache.cxf.ws.addressing.EndpointReferenceType resolve(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.bus.managers.EndpointResolverRegistryImpl:org.apache.cxf.ws.addressing.EndpointReferenceType renew(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.bus.managers.EndpointResolverRegistryImpl:org.apache.cxf.ws.addressing.EndpointReferenceType mint(javax.xml.namespace.QName)",
            "org.apache.cxf.bus.managers.EndpointResolverRegistryImpl:org.apache.cxf.ws.addressing.EndpointReferenceType mint(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.bus.managers.ServerLifeCycleManagerImpl:void startServer(org.apache.cxf.endpoint.Server)",
            "org.apache.cxf.bus.managers.ServiceContractResolverRegistryImpl:java.net.URI getContractLocation(javax.xml.namespace.QName)",
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:void shutdown(boolean)",
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:void run()",
            "org.apache.cxf.bus.osgi.CXFExtensionBundleListener:boolean addExtensions(org.osgi.framework.Bundle,java.util.List)",
            "org.apache.cxf.bus.osgi.ManagedWorkQueueList:void addAllToWorkQueueManager(org.apache.cxf.workqueue.WorkQueueManager)",
            "org.apache.cxf.bus.osgi.ManagedWorkQueueList:void shutDown()",
            "org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor:void insertConstructorArg(org.springframework.beans.factory.config.ConstructorArgumentValues,java.lang.Object)",
            "org.apache.cxf.bus.spring.SpringBeanLocator:java.util.Collection getBeansOfType(java.lang.Class)",
            "org.apache.cxf.bus.spring.SpringBeanLocator:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)",
            "org.apache.cxf.bus.spring.SpringBeanLocator:boolean hasConfiguredPropertyValue(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.common.annotation.AnnotationProcessor:void processMethods(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)",
            "org.apache.cxf.common.annotation.AnnotationProcessor:void processFields(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)",
            "org.apache.cxf.common.annotation.AnnotationProcessor:void processClass(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)",
            "org.apache.cxf.common.injection.ResourceInjector:void invokePostConstruct()",
            "org.apache.cxf.common.injection.ResourceInjector:void invokePreDestroy()",
            "org.apache.cxf.common.jaxb.JAXBContextCache:org.apache.cxf.common.jaxb.JAXBContextCache$CachedContextAndSchemas getCachedContextAndSchemas(java.util.Set,java.lang.String,java.util.Map,java.util.Collection,boolean)",
            "org.apache.cxf.common.jaxb.JAXBUtils:java.lang.String makeConventionalIdentifier(java.util.List,org.apache.cxf.common.jaxb.JAXBUtils$IdentifierType)",
            "org.apache.cxf.common.jaxb.JAXBUtils:void logGeneratedClassNames(java.util.logging.Logger,org.apache.cxf.common.jaxb.JAXBUtils$JCodeModel)",
            "org.apache.cxf.common.jaxb.JAXBUtils:java.util.List getGeneratedClassNames(org.apache.cxf.common.jaxb.JAXBUtils$JCodeModel)",
            "org.apache.cxf.common.jaxb.JAXBUtils:void scanPackages(java.util.Set,java.lang.Class[],java.util.Map)",
            "org.apache.cxf.common.security.SimpleGroup$1:boolean hasMoreElements()",
            "org.apache.cxf.common.util.CacheMap:void updateMainDataMap()",
            "org.apache.cxf.common.util.CacheMap:void putAll(java.util.Map)",
            "org.apache.cxf.common.util.CollectionUtils:java.util.Collection diff(java.util.Collection,java.util.Collection)",
            "org.apache.cxf.common.util.CollectionUtils:boolean isEmpty(java.util.Collection)",
            "org.apache.cxf.common.util.Compiler:boolean compileFiles(java.util.List)",
            "org.apache.cxf.common.util.PackageUtils:java.lang.String getSharedPackageName(java.util.List)",
            "org.apache.cxf.common.util.ProxyClassLoader:java.lang.Class findClass(java.lang.String)",
            "org.apache.cxf.common.util.ProxyClassLoader:java.net.URL findResource(java.lang.String)",
            "org.apache.cxf.common.util.ReflectionInvokationHandler$WrapperIterator:boolean hasNext()",
            "org.apache.cxf.common.util.SortedArraySet:boolean addAll(java.util.Collection)",
            "org.apache.cxf.common.util.SortedArraySet:boolean containsAll(java.util.Collection)",
            "org.apache.cxf.common.util.SortedArraySet:boolean removeAll(java.util.Collection)",
            "org.apache.cxf.common.util.SortedArraySet:boolean retainAll(java.util.Collection)",
            "org.apache.cxf.common.util.SpringClasspathScanner:java.util.Map findClassesInternal(java.util.Collection,java.util.List,java.lang.ClassLoader)",
            "org.apache.cxf.common.util.SpringClasspathScanner:java.util.List findResourcesInternal(java.util.Collection,java.lang.String,java.lang.ClassLoader)",
            "org.apache.cxf.common.util.StringUtils:java.lang.String getFirstNotEmpty(java.lang.String,java.lang.String)",
            "org.apache.cxf.common.util.StringUtils:java.lang.String getFirstNotEmpty(java.util.List)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.util.Set entrySet()",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.util.Set keySet()",
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addOneSchemaCrossImports(org.apache.ws.commons.schema.XmlSchema)",
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addCrossImports(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaAll)",
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addCrossImports(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaChoice)",
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addCrossImports(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaSequence)",
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addCrossImportsAttributeList(org.apache.ws.commons.schema.XmlSchema,java.util.List)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:boolean isEumeration(org.apache.ws.commons.schema.XmlSchemaSimpleType)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:java.util.List enumeratorValues(org.apache.ws.commons.schema.XmlSchemaSimpleType)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:boolean schemaImportsNamespace(org.apache.ws.commons.schema.XmlSchema,java.lang.String)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:void addImportIfNeeded(org.apache.ws.commons.schema.XmlSchema,java.lang.String)",
            "org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser:javax.xml.bind.JAXBContext getContext(java.lang.Class)",
            "org.apache.cxf.configuration.blueprint.SimpleBPBeanDefinitionParser:org.osgi.service.blueprint.reflect.Metadata parse(org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext)",
            "org.apache.cxf.configuration.jsse.SSLUtils:java.util.List compileRegexPatterns(java.util.List,boolean,java.util.logging.Logger)",
            "org.apache.cxf.configuration.jsse.SSLUtils:boolean matchesOneOf(java.lang.String,java.util.List)",
            "org.apache.cxf.configuration.jsse.TLSClientParameters:int hashCode()",
            "org.apache.cxf.configuration.jsse.TLSParameterJaxBUtils:java.security.KeyStore createTrustStore(java.io.InputStream,java.lang.String)",
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:javax.xml.bind.JAXBContext getContext(java.lang.Class)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void initWildcardDefinitionMap()",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureBean(java.lang.String,java.lang.Object,boolean)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureWithWildCard(java.lang.String,java.lang.Object)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void addApplicationContext(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.databinding.AbstractDataBinding:void checkNamespaceMap(java.util.Map)",
            "org.apache.cxf.databinding.source.SourceDataBinding:void initialize(org.apache.cxf.service.Service)",
            "org.apache.cxf.databinding.source.XMLStreamDataReader:org.w3c.dom.Element validate(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.databinding.stax.StaxDataBinding:void initialize(org.apache.cxf.service.Service)",
            "org.apache.cxf.databinding.stax.StaxDataBindingFeature:void removeDatabindingInterceptor(java.util.List)",
            "org.apache.cxf.endpoint.AbstractConduitSelector:void close()",
            "org.apache.cxf.endpoint.AbstractConduitSelector:org.apache.cxf.transport.Conduit findCompatibleConduit(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.AbstractEndpointFactory:void addToBeans(java.util.Collection,java.lang.Object)",
            "org.apache.cxf.endpoint.ClientImpl:void destroy()",
            "org.apache.cxf.endpoint.ClientImpl:org.apache.cxf.service.model.EndpointInfo findEndpoint(org.apache.cxf.service.Service,javax.xml.namespace.QName)",
            "org.apache.cxf.endpoint.ClientImpl:void modifyChain(org.apache.cxf.interceptor.InterceptorChain,org.apache.cxf.message.Message,boolean)",
            "org.apache.cxf.endpoint.ServerImpl:void stop()",
            "org.apache.cxf.feature.AbstractFeature:java.lang.Object getActive(java.util.List,java.lang.Class)",
            "org.apache.cxf.feature.validation.SchemaValidationFeature:void initialise(org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.helpers.DOMUtils:java.util.Set convertStringsToQNames(java.util.List)",
            "org.apache.cxf.helpers.MapNamespaceContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:org.apache.cxf.service.model.MessagePartInfo findMessagePart(org.apache.cxf.message.Exchange,java.util.Collection,javax.xml.namespace.QName,boolean,int,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:void writeParts(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.message.MessageContentsList,java.util.List)",
            "org.apache.cxf.interceptor.AnnotationInterceptors:java.util.List getAnnotationInterceptorList(java.lang.Class)",
            "org.apache.cxf.interceptor.ClientFaultConverter:void processFaultDetail(org.apache.cxf.interceptor.Fault,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.ClientFaultConverter:void setStackTrace(org.apache.cxf.interceptor.Fault,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.ClientFaultConverter:java.lang.Throwable getCause(java.util.Iterator,java.lang.String)",
            "org.apache.cxf.interceptor.FaultOutInterceptor:org.apache.cxf.service.model.FaultInfo getFaultForClass(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Class)",
            "org.apache.cxf.interceptor.InFaultChainInitiatorObserver:void addToChain(org.apache.cxf.phase.PhaseInterceptorChain,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.OutFaultChainInitiatorObserver:void addToChain(org.apache.cxf.phase.PhaseInterceptorChain,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:void modifyChain(org.apache.cxf.phase.PhaseInterceptorChain,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.security.AbstractAuthorizingInInterceptor:boolean isUserInRole(org.apache.cxf.security.SecurityContext,java.util.List,boolean)",
            "org.apache.cxf.interceptor.security.DefaultSecurityContext:java.security.Principal findPrincipal(java.lang.String,javax.security.auth.Subject)",
            "org.apache.cxf.interceptor.security.DefaultSecurityContext:boolean isUserInRole(java.lang.String)",
            "org.apache.cxf.interceptor.security.DefaultSecurityContext:java.util.Set getUserRoles()",
            "org.apache.cxf.interceptor.security.JAASLoginInterceptor:javax.security.auth.callback.CallbackHandler getFirstCallbackHandler(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.security.RolePrefixSecurityContextImpl:boolean isUserInRole(java.lang.String)",
            "org.apache.cxf.interceptor.security.RolePrefixSecurityContextImpl:java.security.Principal findPrincipal(javax.security.auth.Subject,java.lang.String,java.lang.String)",
            "org.apache.cxf.interceptor.security.RolePrefixSecurityContextImpl:java.util.Set findRoles(javax.security.auth.Subject,java.lang.String,java.lang.String)",
            "org.apache.cxf.interceptor.security.SecureAnnotationsInterceptor:void setSecuredObject(java.lang.Object)",
            "org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor:boolean isUserInRole(org.apache.cxf.security.SecurityContext,java.util.List,boolean)",
            "org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor:java.util.Map parseRolesMap(java.util.Map)",
            "org.apache.cxf.interceptor.security.callback.CertKeyToUserNameMapper:java.lang.String getUserName(java.security.cert.Certificate)",
            "org.apache.cxf.io.CachedOutputStream:void flush()",
            "org.apache.cxf.io.CachedOutputStream:void lockOutputStream()",
            "org.apache.cxf.io.CachedOutputStream:void close()",
            "org.apache.cxf.io.CachedWriter:void flush()",
            "org.apache.cxf.io.CachedWriter:void lockOutputStream()",
            "org.apache.cxf.io.CachedWriter:void close()",
            "org.apache.cxf.message.ExchangeImpl:void putAll(java.util.Map)",
            "org.apache.cxf.message.MessageImpl:void copyContent(org.apache.cxf.message.Message,org.apache.cxf.message.Message)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void <init>(java.util.SortedSet)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void add(java.util.Collection,boolean)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void add(org.apache.cxf.interceptor.Interceptor,boolean)",
            "org.apache.cxf.resource.DefaultResourceManager:void addResourceResolvers(java.util.Collection)",
            "org.apache.cxf.resource.DefaultResourceManager:java.lang.Object findResource(java.lang.String,java.lang.Class,boolean,java.util.List)",
            "org.apache.cxf.service.ServiceImpl:org.apache.cxf.service.model.EndpointInfo getEndpointInfo(javax.xml.namespace.QName)",
            "org.apache.cxf.service.ServiceModelVisitor:void walk()",
            "org.apache.cxf.service.ServiceModelVisitor:void visitOperation(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.factory.AbstractServiceFactoryBean:void sendEvent(org.apache.cxf.service.factory.FactoryBeanListener$Event,java.lang.Object[])",
            "org.apache.cxf.service.factory.AbstractServiceFactoryBean:void fillDataBindingSchemas()",
            "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void handleEvent(org.apache.cxf.service.factory.FactoryBeanListener$Event,org.apache.cxf.service.factory.AbstractServiceFactoryBean,java.lang.Object[])",
            "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void addBindingOperationDocs(org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void addDocumentation(org.apache.cxf.service.model.OperationInfo,org.apache.cxf.annotations.WSDLDocumentation$Placement,org.apache.cxf.annotations.WSDLDocumentation[])",
            "org.apache.cxf.service.factory.FactoryBeanListenerManager:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.service.factory.SimpleMethodDispatcher:org.apache.cxf.service.model.BindingOperationInfo getBindingOperation(java.lang.reflect.Method,org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.service.model.AbstractMessageContainer:int getMessagePartIndex(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePartByIndex(int)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePart(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePart(int)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:void setDelegate(org.apache.cxf.service.model.AbstractPropertiesHolder,boolean)",
            "org.apache.cxf.service.model.BindingInfo:org.apache.cxf.service.model.BindingOperationInfo buildOperation(javax.xml.namespace.QName,java.lang.String,java.lang.String)",
            "org.apache.cxf.service.model.BindingInfo:org.apache.cxf.service.model.BindingOperationInfo getOperation(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.BindingOperationInfo:void <init>(org.apache.cxf.service.model.BindingInfo,org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.MessageInfo:java.util.Map getMessagePartsMap()",
            "org.apache.cxf.service.model.MessageInfo:java.util.List getOrderedParts(java.util.List)",
            "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.BindingInfo getBinding(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.EndpointInfo getEndpoint(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.ServiceInfo:void initMessagesMap()",
            "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.SchemaInfo getSchema(java.lang.String)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperation(org.apache.cxf.message.Exchange,java.lang.String)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperationForWrapperElement(org.apache.cxf.message.Exchange,javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.SchemaInfo getSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.ServiceModelUtil:java.util.List getOperationInputPartNames(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.EndpointInfo findBestEndpointInfo(javax.xml.namespace.QName,java.util.List)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.util.Iterator getPrefixes(java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElementEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:java.util.Iterator getPrefixes(java.lang.String)",
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void writeEndElement()",
            "org.apache.cxf.staxutils.transform.TransformUtils:void convertToQNamesMap(java.util.Map,org.apache.cxf.staxutils.transform.QNamesMap,java.util.Map)",
            "org.apache.cxf.staxutils.transform.TransformUtils:void convertToMapOfElementProperties(java.util.Map,java.util.Map)",
            "org.apache.cxf.staxutils.transform.TransformUtils:void convertToSetOfQNames(java.util.List,java.util.Set)",
            "org.apache.cxf.staxutils.validation.Stax2ValidationUtils:org.codehaus.stax2.validation.XMLValidationSchema getValidator(org.apache.cxf.endpoint.Endpoint,org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.staxutils.validation.W3CMultiSchemaFactory:org.codehaus.stax2.validation.XMLValidationSchema loadSchemas(java.lang.String,java.util.Map)",
            "org.apache.cxf.transport.AbstractMultiplexDestination:java.lang.String extractStringElementFromAny(javax.xml.namespace.QName,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.transport.ChainInitiationObserver:void addToChain(org.apache.cxf.interceptor.InterceptorChain,org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.TransportFinder:boolean hasPrefix(java.lang.String,java.util.Collection)",
            "org.apache.cxf.transport.TransportFinder:java.lang.Object checkForURI(java.lang.String)",
            "org.apache.cxf.transport.TransportFinder:void registerBean(java.lang.Object)",
            "org.apache.cxf.transport.common.gzip.GZIPInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.common.gzip.GZIPOutInterceptor:org.apache.cxf.transport.common.gzip.GZIPOutInterceptor$UseGzip gzipPermitted(org.apache.cxf.message.Message,boolean)",
            "org.apache.cxf.validation.BeanValidationProvider:void initFactoryConfig(javax.validation.Configuration,org.apache.cxf.validation.ValidationConfiguration)",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void notifyChangeListeners(java.beans.PropertyChangeEvent)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils$SchemaLSResourceResolver:org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:javax.xml.namespace.QName getServiceName(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:java.lang.String getPortName(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:void setPortName(org.apache.cxf.ws.addressing.EndpointReferenceType,java.lang.String)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:javax.xml.namespace.QName getInterfaceName(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:void setMetadata(org.apache.cxf.ws.addressing.EndpointReferenceType,java.util.List)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:javax.xml.validation.Schema createSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.Bus)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:org.apache.cxf.transport.MultiplexDestination getMatchingMultiplexDestination(javax.xml.namespace.QName,java.lang.String,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:boolean containsKey(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void <init>(java.lang.String[],java.lang.ClassLoader,java.util.Map,org.apache.cxf.resource.ResourceManager,org.apache.cxf.Bus)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:boolean hasBeanOfName(java.lang.String)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void load(java.lang.String,java.lang.ClassLoader)",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl$1:boolean beanLoaded(java.lang.String,org.apache.cxf.binding.BindingFactory)",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl$1:boolean loadBean(java.lang.String,java.lang.Class)",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl$2:boolean beanLoaded(java.lang.String,org.apache.cxf.binding.BindingFactory)",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl$3:boolean beanLoaded(java.lang.String,org.apache.cxf.binding.BindingFactory)",
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.bus.osgi.ManagedWorkQueueList:void updated(java.lang.String,java.util.Dictionary)",
            "org.apache.cxf.common.jaxb.JAXBContextCache:javax.xml.bind.JAXBContext createContext(java.util.Set,java.util.Map,java.util.Collection)",
            "org.apache.cxf.common.jaxb.JAXBUtils$1:javax.xml.transform.Result createOutput(java.lang.String,java.lang.String)",
            "org.apache.cxf.common.util.CacheMap:void updateMainDataMap()",
            "org.apache.cxf.common.util.CacheMap:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.common.xmlschema.SchemaCollection:boolean crossImportsAdded(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaType)",
            "org.apache.cxf.endpoint.ClientImpl:java.util.Map getRequestContext()",
            "org.apache.cxf.endpoint.ClientImpl:java.util.Map getResponseContext()",
            "org.apache.cxf.interceptor.security.DelegatingAuthenticationInterceptor:java.lang.String getAuthenticationScheme(org.apache.cxf.message.Message)",
            "org.apache.cxf.service.model.AbstractMessageContainer:void addMessagePart(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:boolean hasProperty(java.lang.String)",
            "org.apache.cxf.service.model.BindingInfo:void addOperation(org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.service.model.InterfaceInfo:org.apache.cxf.service.model.OperationInfo addOperation(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.OperationInfo:org.apache.cxf.service.model.FaultInfo addFault(javax.xml.namespace.QName,javax.xml.namespace.QName)",
            "org.apache.cxf.transport.TransportFinder$2:boolean beanLoaded(java.lang.String,java.lang.Object)",
            "org.apache.cxf.transport.TransportFinder$4:boolean beanLoaded(java.lang.String,java.lang.Object)",
            "org.apache.cxf.transport.TransportFinder$5:boolean beanLoaded(java.lang.String,java.lang.Object)",
            "org.apache.cxf.transport.TransportFinder:void registerBean(java.lang.Object)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils$SchemaLSResourceResolver:org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:boolean containsValue(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.CacheMap:boolean containsValue(java.lang.Object)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:boolean containsValue(java.lang.Object)"
        ]
    },
    "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:javax.activation.DataHandler get(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:java.lang.Object get(java.lang.Object)"
        ]
    },
    "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:javax.activation.DataHandler remove(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:java.lang.Object remove(java.lang.Object)"
        ]
    },
    "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:void putAll(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void <init>(java.util.Map,java.util.Map,java.lang.ClassLoader)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void setProperties(java.util.Map)",
            "org.apache.cxf.endpoint.ClientImpl$EchoContext:void putAll(java.util.Map)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] processResult(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,java.util.Map)",
            "org.apache.cxf.feature.validation.DefaultSchemaValidationTypeProvider:void <init>(java.util.Map)",
            "org.apache.cxf.helpers.MapNamespaceContext:void addNamespaces(java.util.Map)",
            "org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor:void setMethodRolesMap(java.util.Map)",
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.RelatesToType convert(org.apache.cxf.ws.addressing.v200408.Relationship)",
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.RelatesToType convert(org.apache.cxf.ws.addressing.v200403.Relationship)",
            "org.apache.cxf.ws.addressing.VersionTransformer:void putAll(java.util.Map,java.util.Map)"
        ]
    },
    "org.apache.cxf.attachment.LazyAttachmentCollection:boolean isEmpty()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:boolean isEmpty()",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadAndRegister(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.osgi.OSGiBeanLocator:java.util.Collection getBeansOfType(java.lang.Class)",
            "org.apache.cxf.common.jaxb.JAXBContextCache:org.apache.cxf.common.jaxb.JAXBContextCache$CachedContextAndSchemas getCachedContextAndSchemas(java.util.Set,java.lang.String,java.util.Map,java.util.Collection,boolean)",
            "org.apache.cxf.common.jaxb.JAXBContextCache:javax.xml.bind.JAXBContext createContext(java.util.Set,java.util.Map,java.util.Collection)",
            "org.apache.cxf.common.util.SpringClasspathScanner:java.util.Map findClassesInternal(java.util.Collection,java.util.List,java.lang.ClassLoader)",
            "org.apache.cxf.common.util.SpringClasspathScanner:java.util.List findResourcesInternal(java.util.Collection,java.lang.String,java.lang.ClassLoader)",
            "org.apache.cxf.interceptor.AttachmentOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.service.model.BindingOperationInfo:void <init>(org.apache.cxf.service.model.BindingInfo,org.apache.cxf.service.model.OperationInfo)"
        ]
    },
    "org.apache.cxf.attachment.LazyDataSource:void load()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.LazyDataSource:java.lang.String getContentType()",
            "org.apache.cxf.attachment.LazyDataSource:java.io.InputStream getInputStream()",
            "org.apache.cxf.attachment.LazyDataSource:java.lang.String getName()",
            "org.apache.cxf.attachment.LazyDataSource:java.io.OutputStream getOutputStream()",
            "org.apache.cxf.attachment.LazyDataSource:javax.activation.DataSource getDataSource()"
        ]
    },
    "org.apache.cxf.binding.AbstractBindingFactory:void registerWithBindingManager()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.AbstractBindingFactory:void <init>(org.apache.cxf.Bus)",
            "org.apache.cxf.binding.AbstractBindingFactory:void <init>(org.apache.cxf.Bus,java.util.Collection)",
            "org.apache.cxf.binding.AbstractBindingFactory:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.binding.AbstractBindingFactory:void setActivationNamespaces(java.util.Collection)"
        ]
    },
    "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:java.util.List getBeanNamesOfType(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:java.util.List getBeanNamesOfType(java.lang.Class)",
            "org.apache.cxf.bus.osgi.OSGiBeanLocator:java.util.List getBeanNamesOfType(java.lang.Class)",
            "org.apache.cxf.bus.spring.SpringBeanLocator:java.util.List getBeanNamesOfType(java.lang.Class)"
        ]
    },
    "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:java.util.Collection getBeansOfType(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:java.util.Collection getBeansOfType(java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:java.lang.Object getExtension(java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void initialize()",
            "org.apache.cxf.bus.managers.CXFBusLifeCycleManager:void initComplete()",
            "org.apache.cxf.bus.managers.ClientLifeCycleManagerImpl:void <init>(org.apache.cxf.Bus)",
            "org.apache.cxf.bus.managers.ServerLifeCycleManagerImpl:void <init>(org.apache.cxf.Bus)",
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.bus.osgi.OSGiBeanLocator:java.util.Collection getBeansOfType(java.lang.Class)",
            "org.apache.cxf.bus.resource.ResourceManagerImpl:void onFirstResolve()",
            "org.apache.cxf.bus.spring.SpringBeanLocator:java.util.Collection getBeansOfType(java.lang.Class)",
            "org.apache.cxf.service.factory.FactoryBeanListenerManager:void setBus(org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl:org.apache.cxf.binding.BindingFactory loadAll(java.lang.String)",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl:org.apache.cxf.binding.BindingFactory loadDefaultNamespace(java.lang.String)",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl:org.apache.cxf.binding.BindingFactory loadActivationNamespace(java.lang.String)",
            "org.apache.cxf.bus.osgi.OSGiBeanLocator:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)",
            "org.apache.cxf.bus.spring.SpringBeanLocator:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)",
            "org.apache.cxf.transport.TransportFinder:void loadAll()",
            "org.apache.cxf.transport.TransportFinder:java.lang.Object loadActivationNamespaces(java.lang.String)",
            "org.apache.cxf.transport.TransportFinder:java.lang.Object loadDefaultURIs(java.lang.String)",
            "org.apache.cxf.transport.TransportFinder:java.lang.Object loadDefaultNamespace(java.lang.String)",
            "org.apache.cxf.transport.TransportFinder:java.lang.Object loadNoDefaultNamespace(java.lang.String)"
        ]
    },
    "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:boolean hasConfiguredPropertyValue(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:boolean hasConfiguredPropertyValue(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl$3:boolean loadBean(java.lang.String,java.lang.Class)",
            "org.apache.cxf.bus.osgi.OSGiBeanLocator:boolean hasConfiguredPropertyValue(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.bus.spring.SpringBeanLocator:boolean hasConfiguredPropertyValue(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.transport.TransportFinder$2:boolean loadBean(java.lang.String,java.lang.Class)"
        ]
    },
    "org.apache.cxf.bus.blueprint.ConfigurerImpl:void initializeWildcardMap()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.blueprint.ConfigurerImpl:void <init>(org.osgi.service.blueprint.container.BlueprintContainer)"
        ]
    },
    "org.apache.cxf.bus.blueprint.ConfigurerImpl:void configureWithWildCard(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.blueprint.ConfigurerImpl:void configureBean(java.lang.String,java.lang.Object,boolean)"
        ]
    },
    "org.apache.cxf.bus.extension.Extension:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.logging.Log4jLogger$HandlerWrapper:void append(org.apache.log4j.spi.LoggingEvent)",
            "org.apache.cxf.common.util.PackageUtils:java.lang.String combine(java.util.List,char)",
            "org.apache.cxf.common.util.PropertyUtils:boolean isTrue(java.lang.Object)",
            "org.apache.cxf.common.util.PropertyUtils:boolean isFalse(java.lang.Object)",
            "org.apache.cxf.common.util.PropertyUtils:java.lang.Long getLong(org.apache.cxf.message.Message,java.lang.String)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:java.util.List enumeratorValues(org.apache.ws.commons.schema.XmlSchemaSimpleType)",
            "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String[] getCiphersuitesToInclude(java.util.List,org.apache.cxf.configuration.security.FiltersType,java.lang.String[],java.lang.String[],java.util.logging.Logger)",
            "org.apache.cxf.endpoint.ClientImpl:boolean isThreadLocalRequestContext()",
            "org.apache.cxf.helpers.ServiceUtils:org.apache.cxf.annotations.SchemaValidation$SchemaValidationType getSchemaValidationType(java.lang.Object)"
        ]
    },
    "org.apache.cxf.bus.extension.ExtensionManagerBus:boolean hasExtensionByName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.extension.ExtensionManagerBus:void initialize()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.CXFBusFactory:org.apache.cxf.Bus createBus(java.util.Map,java.util.Map)",
            "org.apache.cxf.bus.spring.SpringBus:void setApplicationContext(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.bus.spring.SpringBus:void onApplicationEvent(org.springframework.context.ApplicationEvent)"
        ]
    },
    "org.apache.cxf.bus.extension.ExtensionManagerBus:void initializeFeatures()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void doInitializeInternal()",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void setFeatures(java.util.Collection)"
        ]
    },
    "org.apache.cxf.bus.extension.ExtensionManagerImpl:void <init>(java.lang.String[],java.lang.ClassLoader,java.util.Map,org.apache.cxf.resource.ResourceManager,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void <init>(java.util.Map,java.util.Map,java.lang.ClassLoader)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void <init>(java.lang.ClassLoader,java.util.Map,org.apache.cxf.resource.ResourceManager,org.apache.cxf.Bus)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void <init>(java.lang.String,java.lang.ClassLoader,java.util.Map,org.apache.cxf.resource.ResourceManager,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.bus.extension.ExtensionManagerImpl:void initialize()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void doInitializeInternal()"
        ]
    },
    "org.apache.cxf.bus.extension.ExtensionManagerImpl:void removeBeansOfNames(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:void <init>(org.apache.cxf.configuration.ConfiguredBeanLocator,org.osgi.service.blueprint.container.BlueprintContainer,org.osgi.framework.BundleContext)",
            "org.apache.cxf.bus.spring.SpringBeanLocator:void <init>(org.springframework.context.ApplicationContext,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.bus.extension.ExtensionManagerImpl:void activateAll()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.extension.ExtensionManagerImpl:void activateAllByType(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void <init>(java.util.Map,java.util.Map,java.lang.ClassLoader)"
        ]
    },
    "org.apache.cxf.bus.extension.ExtensionManagerImpl:void load(java.lang.String,java.lang.ClassLoader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void load(java.lang.String)"
        ]
    },
    "org.apache.cxf.bus.extension.ExtensionManagerImpl:java.util.List getBeanNamesOfType(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:java.util.List getBeanNamesOfType(java.lang.Class)",
            "org.apache.cxf.bus.osgi.OSGiBeanLocator:java.util.List getBeanNamesOfType(java.lang.Class)",
            "org.apache.cxf.bus.spring.SpringBeanLocator:java.util.List getBeanNamesOfType(java.lang.Class)"
        ]
    },
    "org.apache.cxf.bus.extension.ExtensionManagerImpl:java.util.Collection getBeansOfType(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:java.util.Collection getBeansOfType(java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:java.lang.Object getExtension(java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void initialize()",
            "org.apache.cxf.bus.managers.CXFBusLifeCycleManager:void initComplete()",
            "org.apache.cxf.bus.managers.ClientLifeCycleManagerImpl:void <init>(org.apache.cxf.Bus)",
            "org.apache.cxf.bus.managers.ServerLifeCycleManagerImpl:void <init>(org.apache.cxf.Bus)",
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.bus.osgi.OSGiBeanLocator:java.util.Collection getBeansOfType(java.lang.Class)",
            "org.apache.cxf.bus.resource.ResourceManagerImpl:void onFirstResolve()",
            "org.apache.cxf.bus.spring.SpringBeanLocator:java.util.Collection getBeansOfType(java.lang.Class)",
            "org.apache.cxf.service.factory.FactoryBeanListenerManager:void setBus(org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.bus.extension.ExtensionManagerImpl:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl:org.apache.cxf.binding.BindingFactory loadAll(java.lang.String)",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl:org.apache.cxf.binding.BindingFactory loadDefaultNamespace(java.lang.String)",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl:org.apache.cxf.binding.BindingFactory loadActivationNamespace(java.lang.String)",
            "org.apache.cxf.bus.osgi.OSGiBeanLocator:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)",
            "org.apache.cxf.bus.spring.SpringBeanLocator:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)",
            "org.apache.cxf.transport.TransportFinder:void loadAll()",
            "org.apache.cxf.transport.TransportFinder:java.lang.Object loadActivationNamespaces(java.lang.String)",
            "org.apache.cxf.transport.TransportFinder:java.lang.Object loadDefaultURIs(java.lang.String)",
            "org.apache.cxf.transport.TransportFinder:java.lang.Object loadDefaultNamespace(java.lang.String)",
            "org.apache.cxf.transport.TransportFinder:java.lang.Object loadNoDefaultNamespace(java.lang.String)"
        ]
    },
    "org.apache.cxf.bus.extension.ExtensionManagerImpl:void destroyBeans()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void destroyBeans()"
        ]
    },
    "org.apache.cxf.bus.extension.ExtensionRegistry:java.util.Map getRegisteredExtensions()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void <init>(java.lang.String[],java.lang.ClassLoader,java.util.Map,org.apache.cxf.resource.ResourceManager,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.bus.extension.ExtensionRegistry:void removeExtensions(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.osgi.CXFActivator:void stop(org.osgi.framework.BundleContext)",
            "org.apache.cxf.bus.osgi.CXFExtensionBundleListener:void unregister(long)"
        ]
    },
    "org.apache.cxf.bus.extension.ExtensionRegistry:void addExtensions(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.osgi.CXFActivator:void start(org.osgi.framework.BundleContext)",
            "org.apache.cxf.bus.osgi.CXFExtensionBundleListener:boolean addExtensions(org.osgi.framework.Bundle,java.util.List)"
        ]
    },
    "org.apache.cxf.bus.managers.BindingFactoryManagerImpl$1:boolean beanLoaded(java.lang.String,org.apache.cxf.binding.BindingFactory)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl$1:boolean beanLoaded(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.cxf.bus.managers.CXFBusLifeCycleManager:void initComplete()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void initialize()",
            "org.apache.cxf.bus.managers.CXFBusLifeCycleManager:void registerLifeCycleListener(org.apache.cxf.buslifecycle.BusLifeCycleListener)",
            "org.apache.cxf.bus.managers.CXFBusLifeCycleManager:void initComplete()"
        ]
    },
    "org.apache.cxf.bus.managers.ClientLifeCycleManagerImpl:void clientCreated(org.apache.cxf.endpoint.Client)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:void notifyLifecycleManager()"
        ]
    },
    "org.apache.cxf.bus.managers.EndpointResolverRegistryImpl:org.apache.cxf.ws.addressing.EndpointReferenceType resolve(org.apache.cxf.ws.addressing.EndpointReferenceType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:org.apache.cxf.ws.addressing.EndpointReferenceType resolve(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.bus.managers.EndpointResolverRegistryImpl:org.apache.cxf.ws.addressing.EndpointReferenceType renew(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.ws.addressing.EndpointReferenceType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:org.apache.cxf.ws.addressing.EndpointReferenceType renew(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.bus.managers.EndpointResolverRegistryImpl:org.apache.cxf.ws.addressing.EndpointReferenceType mint(javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:org.apache.cxf.ws.addressing.EndpointReferenceType mint(javax.xml.namespace.QName,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.bus.managers.EndpointResolverRegistryImpl:org.apache.cxf.ws.addressing.EndpointReferenceType mint(org.apache.cxf.ws.addressing.EndpointReferenceType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:org.apache.cxf.ws.addressing.EndpointReferenceType mint(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.bus.managers.ServerLifeCycleManagerImpl:void startServer(org.apache.cxf.endpoint.Server)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ServerImpl:void start()"
        ]
    },
    "org.apache.cxf.bus.managers.ServiceContractResolverRegistryImpl:java.net.URI getContractLocation(javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.managers.WorkQueueManagerImpl:void setBus(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:void <init>(org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.bus.managers.WorkQueueManagerImpl:void shutdown(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl$WQLifecycleListener:void preShutdown()",
            "org.apache.cxf.bus.managers.WorkQueueManagerImplMBeanWrapper:void shutdown(boolean)"
        ]
    },
    "org.apache.cxf.bus.managers.WorkQueueManagerImpl:void run()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.osgi.CXFExtensionBundleListener:boolean addExtensions(org.osgi.framework.Bundle,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.osgi.CXFExtensionBundleListener:void register(org.osgi.framework.Bundle)"
        ]
    },
    "org.apache.cxf.bus.osgi.ManagedWorkQueueList:void addAllToWorkQueueManager(org.apache.cxf.workqueue.WorkQueueManager)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.osgi.OSGIBusListener:void initComplete()"
        ]
    },
    "org.apache.cxf.bus.osgi.ManagedWorkQueueList:void shutDown()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.osgi.CXFActivator:void stop(org.osgi.framework.BundleContext)"
        ]
    },
    "org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor:void insertConstructorArg(org.springframework.beans.factory.config.ConstructorArgumentValues,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor:void postProcessBeanFactory(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)"
        ]
    },
    "org.apache.cxf.bus.spring.SpringBeanLocator:java.util.Collection getBeansOfType(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:java.util.Collection getBeansOfType(java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:java.lang.Object getExtension(java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void initialize()",
            "org.apache.cxf.bus.managers.CXFBusLifeCycleManager:void initComplete()",
            "org.apache.cxf.bus.managers.ClientLifeCycleManagerImpl:void <init>(org.apache.cxf.Bus)",
            "org.apache.cxf.bus.managers.ServerLifeCycleManagerImpl:void <init>(org.apache.cxf.Bus)",
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.bus.osgi.OSGiBeanLocator:java.util.Collection getBeansOfType(java.lang.Class)",
            "org.apache.cxf.bus.resource.ResourceManagerImpl:void onFirstResolve()",
            "org.apache.cxf.bus.spring.SpringBeanLocator:java.util.Collection getBeansOfType(java.lang.Class)",
            "org.apache.cxf.service.factory.FactoryBeanListenerManager:void setBus(org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.bus.spring.SpringBeanLocator:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl:org.apache.cxf.binding.BindingFactory loadAll(java.lang.String)",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl:org.apache.cxf.binding.BindingFactory loadDefaultNamespace(java.lang.String)",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl:org.apache.cxf.binding.BindingFactory loadActivationNamespace(java.lang.String)",
            "org.apache.cxf.bus.osgi.OSGiBeanLocator:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)",
            "org.apache.cxf.bus.spring.SpringBeanLocator:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)",
            "org.apache.cxf.transport.TransportFinder:void loadAll()",
            "org.apache.cxf.transport.TransportFinder:java.lang.Object loadActivationNamespaces(java.lang.String)",
            "org.apache.cxf.transport.TransportFinder:java.lang.Object loadDefaultURIs(java.lang.String)",
            "org.apache.cxf.transport.TransportFinder:java.lang.Object loadDefaultNamespace(java.lang.String)",
            "org.apache.cxf.transport.TransportFinder:java.lang.Object loadNoDefaultNamespace(java.lang.String)"
        ]
    },
    "org.apache.cxf.bus.spring.SpringBeanLocator:boolean hasConfiguredPropertyValue(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:boolean hasConfiguredPropertyValue(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl$3:boolean loadBean(java.lang.String,java.lang.Class)",
            "org.apache.cxf.bus.osgi.OSGiBeanLocator:boolean hasConfiguredPropertyValue(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.bus.spring.SpringBeanLocator:boolean hasConfiguredPropertyValue(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.transport.TransportFinder$2:boolean loadBean(java.lang.String,java.lang.Class)"
        ]
    },
    "org.apache.cxf.common.annotation.AnnotationProcessor:void processMethods(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.annotation.AnnotationProcessor:void accept(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)",
            "org.apache.cxf.common.annotation.AnnotationProcessor:void processMethods(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)"
        ]
    },
    "org.apache.cxf.common.annotation.AnnotationProcessor:void processFields(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.annotation.AnnotationProcessor:void accept(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)",
            "org.apache.cxf.common.annotation.AnnotationProcessor:void processFields(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)"
        ]
    },
    "org.apache.cxf.common.annotation.AnnotationProcessor:void processClass(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.annotation.AnnotationProcessor:void accept(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)",
            "org.apache.cxf.common.annotation.AnnotationProcessor:void processClass(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)"
        ]
    },
    "org.apache.cxf.common.injection.ResourceInjector:void invokePostConstruct()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.injection.ResourceInjector:void construct(java.lang.Object)",
            "org.apache.cxf.common.injection.ResourceInjector:void construct(java.lang.Object,java.lang.Class)"
        ]
    },
    "org.apache.cxf.common.injection.ResourceInjector:void invokePreDestroy()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.injection.ResourceInjector:void destroy(java.lang.Object)"
        ]
    },
    "org.apache.cxf.common.jaxb.JAXBContextCache:org.apache.cxf.common.jaxb.JAXBContextCache$CachedContextAndSchemas getCachedContextAndSchemas(java.util.Set,java.lang.String,java.util.Map,java.util.Collection,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.jaxb.JAXBContextCache:org.apache.cxf.common.jaxb.JAXBContextCache$CachedContextAndSchemas getCachedContextAndSchemas(java.lang.Class[])",
            "org.apache.cxf.common.jaxb.JAXBContextCache:org.apache.cxf.common.jaxb.JAXBContextCache$CachedContextAndSchemas getCachedContextAndSchemas(java.lang.String,java.util.Map,java.lang.ClassLoader)",
            "org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser:javax.xml.bind.JAXBContext getContext(java.lang.Class)",
            "org.apache.cxf.configuration.jsse.TLSClientParametersConfig:javax.xml.bind.JAXBContext getContext()",
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:javax.xml.bind.JAXBContext getContext(java.lang.Class)",
            "org.apache.cxf.ws.addressing.ContextUtils:javax.xml.bind.JAXBContext getJAXBContext()",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:javax.xml.bind.JAXBContext createContextForEPR()"
        ]
    },
    "org.apache.cxf.common.jaxb.JAXBUtils:java.lang.String makeConventionalIdentifier(java.util.List,org.apache.cxf.common.jaxb.JAXBUtils$IdentifierType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.jaxb.JAXBUtils:java.lang.String nameToIdentifier(java.lang.String,org.apache.cxf.common.jaxb.JAXBUtils$IdentifierType)"
        ]
    },
    "org.apache.cxf.common.jaxb.JAXBUtils:void logGeneratedClassNames(java.util.logging.Logger,org.apache.cxf.common.jaxb.JAXBUtils$JCodeModel)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.jaxb.JAXBUtils:java.util.List getGeneratedClassNames(org.apache.cxf.common.jaxb.JAXBUtils$JCodeModel)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.jaxb.JAXBUtils:void scanPackages(java.util.Set,java.lang.Class[],java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.jaxb.JAXBUtils:void scanPackages(java.util.Set,java.util.Map)"
        ]
    },
    "org.apache.cxf.common.security.SimpleGroup$1:boolean hasMoreElements()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void load(java.lang.String,java.lang.ClassLoader)",
            "org.apache.cxf.bus.osgi.CXFExtensionBundleListener:void register(org.osgi.framework.Bundle)",
            "org.apache.cxf.catalog.OASISCatalogManager:void loadCatalogs(java.lang.ClassLoader,java.lang.String)",
            "org.apache.cxf.common.classloader.ClassLoaderUtils:java.util.List getResources(java.lang.String,java.lang.Class)",
            "org.apache.cxf.common.logging.Log4jLogger:java.util.logging.Handler[] getHandlers()",
            "org.apache.cxf.common.util.PropertiesLoaderUtils:java.util.Properties loadAllProperties(java.lang.String,java.lang.ClassLoader,java.util.logging.Logger,java.util.logging.Level,java.lang.String)",
            "org.apache.cxf.interceptor.security.DefaultSecurityContext:boolean checkGroup(java.security.acl.Group,java.lang.String)"
        ]
    },
    "org.apache.cxf.common.util.CacheMap:void updateMainDataMap()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.CacheMap:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.common.util.CacheMap:java.util.Set entrySet()",
            "org.apache.cxf.common.util.CacheMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.common.util.CacheMap:java.util.Set keySet()",
            "org.apache.cxf.common.util.CacheMap:int size()",
            "org.apache.cxf.common.util.CacheMap:java.util.Collection values()",
            "org.apache.cxf.common.util.CacheMap:java.lang.String toString()"
        ]
    },
    "org.apache.cxf.common.util.CacheMap:void putAll(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void <init>(java.util.Map,java.util.Map,java.lang.ClassLoader)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void setProperties(java.util.Map)",
            "org.apache.cxf.endpoint.ClientImpl$EchoContext:void putAll(java.util.Map)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] processResult(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,java.util.Map)",
            "org.apache.cxf.feature.validation.DefaultSchemaValidationTypeProvider:void <init>(java.util.Map)",
            "org.apache.cxf.helpers.MapNamespaceContext:void addNamespaces(java.util.Map)",
            "org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor:void setMethodRolesMap(java.util.Map)",
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.RelatesToType convert(org.apache.cxf.ws.addressing.v200408.Relationship)",
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.RelatesToType convert(org.apache.cxf.ws.addressing.v200403.Relationship)",
            "org.apache.cxf.ws.addressing.VersionTransformer:void putAll(java.util.Map,java.util.Map)"
        ]
    },
    "org.apache.cxf.common.util.CollectionUtils:java.util.Collection diff(java.util.Collection,java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.util.CollectionUtils:boolean isEmpty(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.util.Compiler:boolean compileFiles(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.util.PackageUtils:java.lang.String getSharedPackageName(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.util.ProxyClassLoader:java.lang.Class findClass(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.util.ProxyClassLoader:java.net.URL findResource(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.util.ReflectionInvokationHandler$WrapperIterator:boolean hasNext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.BusFactory:void clearDefaultBusForAnyThread(org.apache.cxf.Bus)",
            "org.apache.cxf.attachment.AttachmentDeserializer:void cacheStreamedAttachments()",
            "org.apache.cxf.attachment.AttachmentSerializer:void writeHeaders(java.lang.String,java.lang.String,java.util.Map,java.io.Writer)",
            "org.apache.cxf.attachment.AttachmentSerializer:void writeAttachments()",
            "org.apache.cxf.attachment.AttachmentUtil$DHMap$1$1:boolean hasNext()",
            "org.apache.cxf.attachment.AttachmentUtil$DHMap:javax.activation.DataHandler put(java.lang.String,javax.activation.DataHandler)",
            "org.apache.cxf.attachment.AttachmentUtil:java.lang.String getHeaderValue(java.util.List,java.lang.String)",
            "org.apache.cxf.attachment.AttachmentUtil:org.apache.cxf.message.Attachment createAttachment(java.io.InputStream,java.util.Map)",
            "org.apache.cxf.attachment.AttachmentUtil:boolean isTypeSupported(java.lang.String,java.util.List)",
            "org.apache.cxf.attachment.ImageDataContentHandler:void writeTo(java.lang.Object,java.lang.String,java.io.OutputStream)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$1$1:boolean hasNext()",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$2$1:boolean hasNext()",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$3$1:boolean hasNext()",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:boolean containsValue(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:javax.activation.DataHandler get(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:javax.activation.DataHandler remove(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:void putAll(java.util.Map)",
            "org.apache.cxf.attachment.LazyAttachmentCollection:boolean isEmpty()",
            "org.apache.cxf.attachment.LazyDataSource:void load()",
            "org.apache.cxf.binding.AbstractBindingFactory:void registerWithBindingManager()",
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:java.util.List getBeanNamesOfType(java.lang.Class)",
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:java.util.Collection getBeansOfType(java.lang.Class)",
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)",
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:boolean hasConfiguredPropertyValue(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.bus.blueprint.ConfigurerImpl:void initializeWildcardMap()",
            "org.apache.cxf.bus.blueprint.ConfigurerImpl:void configureWithWildCard(java.lang.String,java.lang.Object)",
            "org.apache.cxf.bus.extension.Extension:java.lang.String toString()",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:boolean hasExtensionByName(java.lang.String)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void initialize()",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void initializeFeatures()",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void <init>(java.lang.String[],java.lang.ClassLoader,java.util.Map,org.apache.cxf.resource.ResourceManager,org.apache.cxf.Bus)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void initialize()",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void removeBeansOfNames(java.util.List)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void activateAll()",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void activateAllByType(java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void load(java.lang.String,java.lang.ClassLoader)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:java.util.List getBeanNamesOfType(java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:java.util.Collection getBeansOfType(java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void destroyBeans()",
            "org.apache.cxf.bus.extension.ExtensionRegistry:java.util.Map getRegisteredExtensions()",
            "org.apache.cxf.bus.extension.ExtensionRegistry:void removeExtensions(java.util.List)",
            "org.apache.cxf.bus.extension.ExtensionRegistry:void addExtensions(java.util.List)",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl$1:boolean beanLoaded(java.lang.String,org.apache.cxf.binding.BindingFactory)",
            "org.apache.cxf.bus.managers.CXFBusLifeCycleManager:void initComplete()",
            "org.apache.cxf.bus.managers.ClientLifeCycleManagerImpl:void clientCreated(org.apache.cxf.endpoint.Client)",
            "org.apache.cxf.bus.managers.EndpointResolverRegistryImpl:org.apache.cxf.ws.addressing.EndpointReferenceType resolve(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.bus.managers.EndpointResolverRegistryImpl:org.apache.cxf.ws.addressing.EndpointReferenceType renew(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.bus.managers.EndpointResolverRegistryImpl:org.apache.cxf.ws.addressing.EndpointReferenceType mint(javax.xml.namespace.QName)",
            "org.apache.cxf.bus.managers.EndpointResolverRegistryImpl:org.apache.cxf.ws.addressing.EndpointReferenceType mint(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.bus.managers.ServerLifeCycleManagerImpl:void startServer(org.apache.cxf.endpoint.Server)",
            "org.apache.cxf.bus.managers.ServiceContractResolverRegistryImpl:java.net.URI getContractLocation(javax.xml.namespace.QName)",
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:void shutdown(boolean)",
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:void run()",
            "org.apache.cxf.bus.osgi.CXFExtensionBundleListener:boolean addExtensions(org.osgi.framework.Bundle,java.util.List)",
            "org.apache.cxf.bus.osgi.ManagedWorkQueueList:void addAllToWorkQueueManager(org.apache.cxf.workqueue.WorkQueueManager)",
            "org.apache.cxf.bus.osgi.ManagedWorkQueueList:void shutDown()",
            "org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor:void insertConstructorArg(org.springframework.beans.factory.config.ConstructorArgumentValues,java.lang.Object)",
            "org.apache.cxf.bus.spring.SpringBeanLocator:java.util.Collection getBeansOfType(java.lang.Class)",
            "org.apache.cxf.bus.spring.SpringBeanLocator:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)",
            "org.apache.cxf.bus.spring.SpringBeanLocator:boolean hasConfiguredPropertyValue(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.common.annotation.AnnotationProcessor:void processMethods(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)",
            "org.apache.cxf.common.annotation.AnnotationProcessor:void processFields(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)",
            "org.apache.cxf.common.annotation.AnnotationProcessor:void processClass(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)",
            "org.apache.cxf.common.injection.ResourceInjector:void invokePostConstruct()",
            "org.apache.cxf.common.injection.ResourceInjector:void invokePreDestroy()",
            "org.apache.cxf.common.jaxb.JAXBContextCache:org.apache.cxf.common.jaxb.JAXBContextCache$CachedContextAndSchemas getCachedContextAndSchemas(java.util.Set,java.lang.String,java.util.Map,java.util.Collection,boolean)",
            "org.apache.cxf.common.jaxb.JAXBUtils:java.lang.String makeConventionalIdentifier(java.util.List,org.apache.cxf.common.jaxb.JAXBUtils$IdentifierType)",
            "org.apache.cxf.common.jaxb.JAXBUtils:void logGeneratedClassNames(java.util.logging.Logger,org.apache.cxf.common.jaxb.JAXBUtils$JCodeModel)",
            "org.apache.cxf.common.jaxb.JAXBUtils:java.util.List getGeneratedClassNames(org.apache.cxf.common.jaxb.JAXBUtils$JCodeModel)",
            "org.apache.cxf.common.jaxb.JAXBUtils:void scanPackages(java.util.Set,java.lang.Class[],java.util.Map)",
            "org.apache.cxf.common.security.SimpleGroup$1:boolean hasMoreElements()",
            "org.apache.cxf.common.util.CacheMap:void updateMainDataMap()",
            "org.apache.cxf.common.util.CacheMap:void putAll(java.util.Map)",
            "org.apache.cxf.common.util.CollectionUtils:java.util.Collection diff(java.util.Collection,java.util.Collection)",
            "org.apache.cxf.common.util.CollectionUtils:boolean isEmpty(java.util.Collection)",
            "org.apache.cxf.common.util.Compiler:boolean compileFiles(java.util.List)",
            "org.apache.cxf.common.util.PackageUtils:java.lang.String getSharedPackageName(java.util.List)",
            "org.apache.cxf.common.util.ProxyClassLoader:java.lang.Class findClass(java.lang.String)",
            "org.apache.cxf.common.util.ProxyClassLoader:java.net.URL findResource(java.lang.String)",
            "org.apache.cxf.common.util.ReflectionInvokationHandler$WrapperIterator:boolean hasNext()",
            "org.apache.cxf.common.util.SortedArraySet:boolean addAll(java.util.Collection)",
            "org.apache.cxf.common.util.SortedArraySet:boolean containsAll(java.util.Collection)",
            "org.apache.cxf.common.util.SortedArraySet:boolean removeAll(java.util.Collection)",
            "org.apache.cxf.common.util.SortedArraySet:boolean retainAll(java.util.Collection)",
            "org.apache.cxf.common.util.SpringClasspathScanner:java.util.Map findClassesInternal(java.util.Collection,java.util.List,java.lang.ClassLoader)",
            "org.apache.cxf.common.util.SpringClasspathScanner:java.util.List findResourcesInternal(java.util.Collection,java.lang.String,java.lang.ClassLoader)",
            "org.apache.cxf.common.util.StringUtils:java.lang.String getFirstNotEmpty(java.lang.String,java.lang.String)",
            "org.apache.cxf.common.util.StringUtils:java.lang.String getFirstNotEmpty(java.util.List)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.util.Set entrySet()",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.util.Set keySet()",
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addOneSchemaCrossImports(org.apache.ws.commons.schema.XmlSchema)",
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addCrossImports(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaAll)",
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addCrossImports(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaChoice)",
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addCrossImports(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaSequence)",
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addCrossImportsAttributeList(org.apache.ws.commons.schema.XmlSchema,java.util.List)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:boolean isEumeration(org.apache.ws.commons.schema.XmlSchemaSimpleType)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:java.util.List enumeratorValues(org.apache.ws.commons.schema.XmlSchemaSimpleType)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:boolean schemaImportsNamespace(org.apache.ws.commons.schema.XmlSchema,java.lang.String)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:void addImportIfNeeded(org.apache.ws.commons.schema.XmlSchema,java.lang.String)",
            "org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser:javax.xml.bind.JAXBContext getContext(java.lang.Class)",
            "org.apache.cxf.configuration.blueprint.SimpleBPBeanDefinitionParser:org.osgi.service.blueprint.reflect.Metadata parse(org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext)",
            "org.apache.cxf.configuration.jsse.SSLUtils:java.util.List compileRegexPatterns(java.util.List,boolean,java.util.logging.Logger)",
            "org.apache.cxf.configuration.jsse.SSLUtils:boolean matchesOneOf(java.lang.String,java.util.List)",
            "org.apache.cxf.configuration.jsse.TLSClientParameters:int hashCode()",
            "org.apache.cxf.configuration.jsse.TLSParameterJaxBUtils:java.security.KeyStore createTrustStore(java.io.InputStream,java.lang.String)",
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:javax.xml.bind.JAXBContext getContext(java.lang.Class)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void initWildcardDefinitionMap()",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureBean(java.lang.String,java.lang.Object,boolean)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureWithWildCard(java.lang.String,java.lang.Object)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void addApplicationContext(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.databinding.AbstractDataBinding:void checkNamespaceMap(java.util.Map)",
            "org.apache.cxf.databinding.source.SourceDataBinding:void initialize(org.apache.cxf.service.Service)",
            "org.apache.cxf.databinding.source.XMLStreamDataReader:org.w3c.dom.Element validate(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.databinding.stax.StaxDataBinding:void initialize(org.apache.cxf.service.Service)",
            "org.apache.cxf.databinding.stax.StaxDataBindingFeature:void removeDatabindingInterceptor(java.util.List)",
            "org.apache.cxf.endpoint.AbstractConduitSelector:void close()",
            "org.apache.cxf.endpoint.AbstractConduitSelector:org.apache.cxf.transport.Conduit findCompatibleConduit(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.AbstractEndpointFactory:void addToBeans(java.util.Collection,java.lang.Object)",
            "org.apache.cxf.endpoint.ClientImpl:void destroy()",
            "org.apache.cxf.endpoint.ClientImpl:org.apache.cxf.service.model.EndpointInfo findEndpoint(org.apache.cxf.service.Service,javax.xml.namespace.QName)",
            "org.apache.cxf.endpoint.ClientImpl:void modifyChain(org.apache.cxf.interceptor.InterceptorChain,org.apache.cxf.message.Message,boolean)",
            "org.apache.cxf.endpoint.ServerImpl:void stop()",
            "org.apache.cxf.feature.AbstractFeature:java.lang.Object getActive(java.util.List,java.lang.Class)",
            "org.apache.cxf.feature.validation.SchemaValidationFeature:void initialise(org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.helpers.DOMUtils:java.util.Set convertStringsToQNames(java.util.List)",
            "org.apache.cxf.helpers.MapNamespaceContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:org.apache.cxf.service.model.MessagePartInfo findMessagePart(org.apache.cxf.message.Exchange,java.util.Collection,javax.xml.namespace.QName,boolean,int,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:void writeParts(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.message.MessageContentsList,java.util.List)",
            "org.apache.cxf.interceptor.AnnotationInterceptors:java.util.List getAnnotationInterceptorList(java.lang.Class)",
            "org.apache.cxf.interceptor.ClientFaultConverter:void processFaultDetail(org.apache.cxf.interceptor.Fault,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.ClientFaultConverter:void setStackTrace(org.apache.cxf.interceptor.Fault,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.ClientFaultConverter:java.lang.Throwable getCause(java.util.Iterator,java.lang.String)",
            "org.apache.cxf.interceptor.FaultOutInterceptor:org.apache.cxf.service.model.FaultInfo getFaultForClass(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Class)",
            "org.apache.cxf.interceptor.InFaultChainInitiatorObserver:void addToChain(org.apache.cxf.phase.PhaseInterceptorChain,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.OutFaultChainInitiatorObserver:void addToChain(org.apache.cxf.phase.PhaseInterceptorChain,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:void modifyChain(org.apache.cxf.phase.PhaseInterceptorChain,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.security.AbstractAuthorizingInInterceptor:boolean isUserInRole(org.apache.cxf.security.SecurityContext,java.util.List,boolean)",
            "org.apache.cxf.interceptor.security.DefaultSecurityContext:java.security.Principal findPrincipal(java.lang.String,javax.security.auth.Subject)",
            "org.apache.cxf.interceptor.security.DefaultSecurityContext:boolean isUserInRole(java.lang.String)",
            "org.apache.cxf.interceptor.security.DefaultSecurityContext:java.util.Set getUserRoles()",
            "org.apache.cxf.interceptor.security.JAASLoginInterceptor:javax.security.auth.callback.CallbackHandler getFirstCallbackHandler(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.security.RolePrefixSecurityContextImpl:boolean isUserInRole(java.lang.String)",
            "org.apache.cxf.interceptor.security.RolePrefixSecurityContextImpl:java.security.Principal findPrincipal(javax.security.auth.Subject,java.lang.String,java.lang.String)",
            "org.apache.cxf.interceptor.security.RolePrefixSecurityContextImpl:java.util.Set findRoles(javax.security.auth.Subject,java.lang.String,java.lang.String)",
            "org.apache.cxf.interceptor.security.SecureAnnotationsInterceptor:void setSecuredObject(java.lang.Object)",
            "org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor:boolean isUserInRole(org.apache.cxf.security.SecurityContext,java.util.List,boolean)",
            "org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor:java.util.Map parseRolesMap(java.util.Map)",
            "org.apache.cxf.interceptor.security.callback.CertKeyToUserNameMapper:java.lang.String getUserName(java.security.cert.Certificate)",
            "org.apache.cxf.io.CachedOutputStream:void flush()",
            "org.apache.cxf.io.CachedOutputStream:void lockOutputStream()",
            "org.apache.cxf.io.CachedOutputStream:void close()",
            "org.apache.cxf.io.CachedWriter:void flush()",
            "org.apache.cxf.io.CachedWriter:void lockOutputStream()",
            "org.apache.cxf.io.CachedWriter:void close()",
            "org.apache.cxf.message.ExchangeImpl:void putAll(java.util.Map)",
            "org.apache.cxf.message.MessageImpl:void copyContent(org.apache.cxf.message.Message,org.apache.cxf.message.Message)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void <init>(java.util.SortedSet)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void add(java.util.Collection,boolean)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void add(org.apache.cxf.interceptor.Interceptor,boolean)",
            "org.apache.cxf.resource.DefaultResourceManager:void addResourceResolvers(java.util.Collection)",
            "org.apache.cxf.resource.DefaultResourceManager:java.lang.Object findResource(java.lang.String,java.lang.Class,boolean,java.util.List)",
            "org.apache.cxf.service.ServiceImpl:org.apache.cxf.service.model.EndpointInfo getEndpointInfo(javax.xml.namespace.QName)",
            "org.apache.cxf.service.ServiceModelVisitor:void walk()",
            "org.apache.cxf.service.ServiceModelVisitor:void visitOperation(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.factory.AbstractServiceFactoryBean:void sendEvent(org.apache.cxf.service.factory.FactoryBeanListener$Event,java.lang.Object[])",
            "org.apache.cxf.service.factory.AbstractServiceFactoryBean:void fillDataBindingSchemas()",
            "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void handleEvent(org.apache.cxf.service.factory.FactoryBeanListener$Event,org.apache.cxf.service.factory.AbstractServiceFactoryBean,java.lang.Object[])",
            "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void addBindingOperationDocs(org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void addDocumentation(org.apache.cxf.service.model.OperationInfo,org.apache.cxf.annotations.WSDLDocumentation$Placement,org.apache.cxf.annotations.WSDLDocumentation[])",
            "org.apache.cxf.service.factory.FactoryBeanListenerManager:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.service.factory.SimpleMethodDispatcher:org.apache.cxf.service.model.BindingOperationInfo getBindingOperation(java.lang.reflect.Method,org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.service.model.AbstractMessageContainer:int getMessagePartIndex(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePartByIndex(int)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePart(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePart(int)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:void setDelegate(org.apache.cxf.service.model.AbstractPropertiesHolder,boolean)",
            "org.apache.cxf.service.model.BindingInfo:org.apache.cxf.service.model.BindingOperationInfo buildOperation(javax.xml.namespace.QName,java.lang.String,java.lang.String)",
            "org.apache.cxf.service.model.BindingInfo:org.apache.cxf.service.model.BindingOperationInfo getOperation(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.BindingOperationInfo:void <init>(org.apache.cxf.service.model.BindingInfo,org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.MessageInfo:java.util.Map getMessagePartsMap()",
            "org.apache.cxf.service.model.MessageInfo:java.util.List getOrderedParts(java.util.List)",
            "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.BindingInfo getBinding(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.EndpointInfo getEndpoint(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.ServiceInfo:void initMessagesMap()",
            "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.SchemaInfo getSchema(java.lang.String)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperation(org.apache.cxf.message.Exchange,java.lang.String)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperationForWrapperElement(org.apache.cxf.message.Exchange,javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.SchemaInfo getSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.ServiceModelUtil:java.util.List getOperationInputPartNames(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.EndpointInfo findBestEndpointInfo(javax.xml.namespace.QName,java.util.List)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.util.Iterator getPrefixes(java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElementEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:java.util.Iterator getPrefixes(java.lang.String)",
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void writeEndElement()",
            "org.apache.cxf.staxutils.transform.TransformUtils:void convertToQNamesMap(java.util.Map,org.apache.cxf.staxutils.transform.QNamesMap,java.util.Map)",
            "org.apache.cxf.staxutils.transform.TransformUtils:void convertToMapOfElementProperties(java.util.Map,java.util.Map)",
            "org.apache.cxf.staxutils.transform.TransformUtils:void convertToSetOfQNames(java.util.List,java.util.Set)",
            "org.apache.cxf.staxutils.validation.Stax2ValidationUtils:org.codehaus.stax2.validation.XMLValidationSchema getValidator(org.apache.cxf.endpoint.Endpoint,org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.staxutils.validation.W3CMultiSchemaFactory:org.codehaus.stax2.validation.XMLValidationSchema loadSchemas(java.lang.String,java.util.Map)",
            "org.apache.cxf.transport.AbstractMultiplexDestination:java.lang.String extractStringElementFromAny(javax.xml.namespace.QName,org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.transport.ChainInitiationObserver:void addToChain(org.apache.cxf.interceptor.InterceptorChain,org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.TransportFinder:boolean hasPrefix(java.lang.String,java.util.Collection)",
            "org.apache.cxf.transport.TransportFinder:java.lang.Object checkForURI(java.lang.String)",
            "org.apache.cxf.transport.TransportFinder:void registerBean(java.lang.Object)",
            "org.apache.cxf.transport.common.gzip.GZIPInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.common.gzip.GZIPOutInterceptor:org.apache.cxf.transport.common.gzip.GZIPOutInterceptor$UseGzip gzipPermitted(org.apache.cxf.message.Message,boolean)",
            "org.apache.cxf.validation.BeanValidationProvider:void initFactoryConfig(javax.validation.Configuration,org.apache.cxf.validation.ValidationConfiguration)",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void notifyChangeListeners(java.beans.PropertyChangeEvent)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils$SchemaLSResourceResolver:org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:javax.xml.namespace.QName getServiceName(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:java.lang.String getPortName(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:void setPortName(org.apache.cxf.ws.addressing.EndpointReferenceType,java.lang.String)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:javax.xml.namespace.QName getInterfaceName(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:void setMetadata(org.apache.cxf.ws.addressing.EndpointReferenceType,java.util.List)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:javax.xml.validation.Schema createSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.Bus)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:org.apache.cxf.transport.MultiplexDestination getMatchingMultiplexDestination(javax.xml.namespace.QName,java.lang.String,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.common.util.SortedArraySet:boolean addAll(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void setFeatures(java.util.Collection)",
            "org.apache.cxf.common.jaxb.JAXBUtils:void scanPackages(java.util.Set,java.lang.Class[],java.util.Map)",
            "org.apache.cxf.interceptor.security.SecureAnnotationsInterceptor:void <clinit>()",
            "org.apache.cxf.phase.AbstractPhaseInterceptor:void setBefore(java.util.Collection)",
            "org.apache.cxf.phase.AbstractPhaseInterceptor:void setAfter(java.util.Collection)",
            "org.apache.cxf.phase.AbstractPhaseInterceptor:void addBefore(java.util.Collection)",
            "org.apache.cxf.phase.AbstractPhaseInterceptor:void addAfter(java.util.Collection)"
        ]
    },
    "org.apache.cxf.common.util.SortedArraySet:boolean containsAll(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.jaxb.JAXBContextCache:org.apache.cxf.common.jaxb.JAXBContextCache$CachedContextAndSchemas getCachedContextAndSchemas(java.util.Set,java.lang.String,java.util.Map,java.util.Collection,boolean)"
        ]
    },
    "org.apache.cxf.common.util.SortedArraySet:boolean removeAll(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.util.SortedArraySet:boolean retainAll(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.util.SpringClasspathScanner:java.util.Map findClassesInternal(java.util.Collection,java.util.List,java.lang.ClassLoader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.ClasspathScanner:java.util.Map findClasses(java.util.Collection,java.util.List,java.lang.ClassLoader)"
        ]
    },
    "org.apache.cxf.common.util.SpringClasspathScanner:java.util.List findResourcesInternal(java.util.Collection,java.lang.String,java.lang.ClassLoader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.ClasspathScanner:java.util.List findResources(java.util.Collection,java.lang.String,java.lang.ClassLoader)"
        ]
    },
    "org.apache.cxf.common.util.StringUtils:java.lang.String getFirstNotEmpty(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.util.StringUtils:java.lang.String getFirstNotEmpty(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.util.WeakIdentityHashMap:java.util.Set entrySet()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.AttachmentSerializer:void writeHeaders(java.lang.String,java.lang.String,java.util.Map,java.io.Writer)",
            "org.apache.cxf.attachment.AttachmentUtil:org.apache.cxf.message.Attachment createAttachment(java.io.InputStream,java.util.Map)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:void putAll(java.util.Map)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void <init>(java.lang.String[],java.lang.ClassLoader,java.util.Map,org.apache.cxf.resource.ResourceManager,org.apache.cxf.Bus)",
            "org.apache.cxf.common.jaxb.JAXBContextCache:org.apache.cxf.common.jaxb.JAXBContextCache$CachedContextAndSchemas getCachedContextAndSchemas(java.util.Set,java.lang.String,java.util.Map,java.util.Collection,boolean)",
            "org.apache.cxf.common.util.CacheMap:void updateMainDataMap()",
            "org.apache.cxf.common.util.CacheMap:java.util.Set entrySet()",
            "org.apache.cxf.common.util.CacheMap:void putAll(java.util.Map)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.util.Set entrySet()",
            "org.apache.cxf.databinding.AbstractDataBinding:void checkNamespaceMap(java.util.Map)",
            "org.apache.cxf.helpers.MapNamespaceContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor:java.util.Map parseRolesMap(java.util.Map)",
            "org.apache.cxf.message.ExchangeImpl:void putAll(java.util.Map)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:void setDelegate(org.apache.cxf.service.model.AbstractPropertiesHolder,boolean)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.util.Iterator getPrefixes(java.lang.String)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:java.util.Iterator getPrefixes(java.lang.String)",
            "org.apache.cxf.staxutils.transform.TransformUtils:void convertToQNamesMap(java.util.Map,org.apache.cxf.staxutils.transform.QNamesMap,java.util.Map)",
            "org.apache.cxf.staxutils.transform.TransformUtils:void convertToMapOfElementProperties(java.util.Map,java.util.Map)",
            "org.apache.cxf.validation.BeanValidationProvider:void initFactoryConfig(javax.validation.Configuration,org.apache.cxf.validation.ValidationConfiguration)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils$SchemaLSResourceResolver:org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.common.util.WeakIdentityHashMap:java.util.Set keySet()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.AttachmentImpl:java.util.Iterator getHeaderNames()",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:boolean hasExtensionByName(java.lang.String)",
            "org.apache.cxf.common.util.CacheMap:java.util.Set keySet()",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.util.Set keySet()",
            "org.apache.cxf.message.MessageImpl:java.util.Set getContextualPropertyKeys()",
            "org.apache.cxf.transport.common.gzip.GZIPInInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.common.xmlschema.SchemaCollection:void addOneSchemaCrossImports(org.apache.ws.commons.schema.XmlSchema)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addCrossImports()"
        ]
    },
    "org.apache.cxf.common.xmlschema.SchemaCollection:void addCrossImports(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaAll)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addCrossImportsType(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaType)",
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addCrossImports(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaContentModel)"
        ]
    },
    "org.apache.cxf.common.xmlschema.SchemaCollection:void addCrossImports(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaChoice)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addCrossImportsType(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaType)",
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addCrossImports(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaContentModel)"
        ]
    },
    "org.apache.cxf.common.xmlschema.SchemaCollection:void addCrossImports(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaSequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addCrossImportsType(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaType)",
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addCrossImports(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaContentModel)"
        ]
    },
    "org.apache.cxf.common.xmlschema.SchemaCollection:void addCrossImportsAttributeList(org.apache.ws.commons.schema.XmlSchema,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addCrossImportsType(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaType)",
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addCrossImports(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaContentModel)"
        ]
    },
    "org.apache.cxf.common.xmlschema.XmlSchemaUtils:boolean isEumeration(org.apache.ws.commons.schema.XmlSchemaSimpleType)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.xmlschema.XmlSchemaUtils:java.util.List enumeratorValues(org.apache.ws.commons.schema.XmlSchemaSimpleType)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.xmlschema.XmlSchemaUtils:boolean schemaImportsNamespace(org.apache.ws.commons.schema.XmlSchema,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.xmlschema.XmlSchemaUtils:void addImportIfNeeded(org.apache.ws.commons.schema.XmlSchema,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:void addImportIfNeeded(org.apache.ws.commons.schema.XmlSchema,javax.xml.namespace.QName)"
        ]
    },
    "org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser:javax.xml.bind.JAXBContext getContext(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser:void mapElementToJaxbProperty(org.apache.aries.blueprint.ParserContext,org.apache.aries.blueprint.mutable.MutableBeanMetadata,org.w3c.dom.Element,java.lang.String,java.lang.Class)"
        ]
    },
    "org.apache.cxf.configuration.blueprint.SimpleBPBeanDefinitionParser:org.osgi.service.blueprint.reflect.Metadata parse(org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.internal.CXFAPINamespaceHandler:org.osgi.service.blueprint.reflect.Metadata parse(org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext)"
        ]
    },
    "org.apache.cxf.configuration.jsse.SSLUtils:java.util.List compileRegexPatterns(java.util.List,boolean,java.util.logging.Logger)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String[] getFilteredCiphersuites(org.apache.cxf.configuration.security.FiltersType,java.lang.String[],java.util.logging.Logger,boolean)"
        ]
    },
    "org.apache.cxf.configuration.jsse.SSLUtils:boolean matchesOneOf(java.lang.String,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String[] getFilteredCiphersuites(org.apache.cxf.configuration.security.FiltersType,java.lang.String[],java.util.logging.Logger,boolean)"
        ]
    },
    "org.apache.cxf.configuration.jsse.TLSClientParameters:int hashCode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.jsse.TLSClientParameters:int hash(int,java.lang.Object)"
        ]
    },
    "org.apache.cxf.configuration.jsse.TLSParameterJaxBUtils:java.security.KeyStore createTrustStore(java.io.InputStream,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.jsse.TLSParameterJaxBUtils:java.security.KeyStore getKeyStore(org.apache.cxf.configuration.security.CertStoreType)"
        ]
    },
    "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:javax.xml.bind.JAXBContext getContext(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void mapElementToJaxbProperty(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder,java.lang.String,java.lang.Class)",
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:org.springframework.beans.factory.support.AbstractBeanDefinition mapElementToJaxbBean(org.w3c.dom.Element,java.lang.Class,java.lang.Class,java.lang.Class,java.lang.String,java.lang.Object[])"
        ]
    },
    "org.apache.cxf.configuration.spring.ConfigurerImpl:void initWildcardDefinitionMap()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void addApplicationContext(org.springframework.context.ApplicationContext)"
        ]
    },
    "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureBean(java.lang.String,java.lang.Object,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureBean(java.lang.Object)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureBean(java.lang.String,java.lang.Object)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureWithWildCard(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureWithWildCard(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureBean(java.lang.String,java.lang.Object,boolean)"
        ]
    },
    "org.apache.cxf.configuration.spring.ConfigurerImpl:void addApplicationContext(org.springframework.context.ApplicationContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void setApplicationContext(org.springframework.context.ApplicationContext)"
        ]
    },
    "org.apache.cxf.databinding.AbstractDataBinding:void checkNamespaceMap(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.AbstractDataBinding:void setNamespaceMap(java.util.Map)"
        ]
    },
    "org.apache.cxf.databinding.source.SourceDataBinding:void initialize(org.apache.cxf.service.Service)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.AbstractServiceFactoryBean:void initializeDataBindings()"
        ]
    },
    "org.apache.cxf.databinding.source.XMLStreamDataReader:org.w3c.dom.Element validate(javax.xml.stream.XMLStreamReader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.source.XMLStreamDataReader:java.lang.Object read(javax.xml.namespace.QName,javax.xml.stream.XMLStreamReader,java.lang.Class)"
        ]
    },
    "org.apache.cxf.databinding.stax.StaxDataBinding:void initialize(org.apache.cxf.service.Service)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.AbstractServiceFactoryBean:void initializeDataBindings()"
        ]
    },
    "org.apache.cxf.databinding.stax.StaxDataBindingFeature:void removeDatabindingInterceptor(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.stax.StaxDataBindingFeature:void initialize(org.apache.cxf.endpoint.Client,org.apache.cxf.Bus)",
            "org.apache.cxf.databinding.stax.StaxDataBindingFeature:void initialize(org.apache.cxf.endpoint.Server,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.endpoint.AbstractConduitSelector:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.jaxb.JAXBUtils:void closeUnmarshaller(javax.xml.bind.Unmarshaller)",
            "org.apache.cxf.endpoint.ClientImpl:void destroy()",
            "org.apache.cxf.endpoint.ServerImpl:void stop()"
        ]
    },
    "org.apache.cxf.endpoint.AbstractConduitSelector:org.apache.cxf.transport.Conduit findCompatibleConduit(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.AbstractConduitSelector:org.apache.cxf.transport.Conduit getSelectedConduit(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.AbstractConduitSelector:org.apache.cxf.transport.Conduit createConduit(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.transport.ConduitInitiator)"
        ]
    },
    "org.apache.cxf.endpoint.AbstractEndpointFactory:void addToBeans(java.util.Collection,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.AbstractEndpointFactory:void addToBeans(java.util.Collection,java.lang.Object)"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:void destroy()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.endpoint.ClientImpl:org.apache.cxf.service.model.EndpointInfo findEndpoint(org.apache.cxf.service.Service,javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:void <init>(org.apache.cxf.Bus,org.apache.cxf.service.Service,javax.xml.namespace.QName,org.apache.cxf.endpoint.EndpointImplFactory)"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:void modifyChain(org.apache.cxf.interceptor.InterceptorChain,org.apache.cxf.message.Message,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] doInvoke(org.apache.cxf.endpoint.ClientCallback,org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.ClientImpl:void onMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.endpoint.ServerImpl:void stop()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ManagedEndpoint:void stop()",
            "org.apache.cxf.endpoint.ServerImpl:void destroy()"
        ]
    },
    "org.apache.cxf.feature.AbstractFeature:java.lang.Object getActive(java.util.List,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.feature.validation.SchemaValidationFeature:void initialise(org.apache.cxf.endpoint.Endpoint)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.feature.validation.SchemaValidationFeature:void initialize(org.apache.cxf.endpoint.Server,org.apache.cxf.Bus)",
            "org.apache.cxf.feature.validation.SchemaValidationFeature:void initialize(org.apache.cxf.endpoint.Client,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.helpers.DOMUtils:java.util.Set convertStringsToQNames(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void <init>(javax.xml.stream.XMLStreamWriter,java.util.Map,java.util.Map,java.util.List,java.util.Map,boolean,java.lang.String)"
        ]
    },
    "org.apache.cxf.helpers.MapNamespaceContext:java.lang.String getPrefix(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.staxutils.W3CDOMStreamWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.W3CDOMStreamWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.W3CDOMStreamWriter:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.staxutils.W3CNamespaceContext:java.lang.String getPrefix(org.w3c.dom.Element,java.lang.String)",
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:java.lang.String getPrefix(java.lang.String)"
        ]
    },
    "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:org.apache.cxf.service.model.MessagePartInfo findMessagePart(org.apache.cxf.message.Exchange,java.util.Collection,javax.xml.namespace.QName,boolean,int,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:void writeParts(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.message.MessageContentsList,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.interceptor.AnnotationInterceptors:java.util.List getAnnotationInterceptorList(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.AnnotationInterceptors:java.util.List getInFaultInterceptors()",
            "org.apache.cxf.interceptor.AnnotationInterceptors:java.util.List getInInterceptors()",
            "org.apache.cxf.interceptor.AnnotationInterceptors:java.util.List getOutFaultInterceptors()",
            "org.apache.cxf.interceptor.AnnotationInterceptors:java.util.List getOutInterceptors()"
        ]
    },
    "org.apache.cxf.interceptor.ClientFaultConverter:void processFaultDetail(org.apache.cxf.interceptor.Fault,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.ClientFaultConverter:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.ClientFaultConverter:void setStackTrace(org.apache.cxf.interceptor.Fault,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.ClientFaultConverter:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.ClientFaultConverter:java.lang.Throwable getCause(java.util.Iterator,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.ClientFaultConverter:void setStackTrace(org.apache.cxf.interceptor.Fault,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.ClientFaultConverter:java.lang.Throwable getCause(java.util.Iterator,java.lang.String)"
        ]
    },
    "org.apache.cxf.interceptor.FaultOutInterceptor:org.apache.cxf.service.model.FaultInfo getFaultForClass(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.FaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.InFaultChainInitiatorObserver:void addToChain(org.apache.cxf.phase.PhaseInterceptorChain,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.InFaultChainInitiatorObserver:void initializeInterceptors(org.apache.cxf.message.Exchange,org.apache.cxf.phase.PhaseInterceptorChain)"
        ]
    },
    "org.apache.cxf.interceptor.OutFaultChainInitiatorObserver:void addToChain(org.apache.cxf.phase.PhaseInterceptorChain,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.OutFaultChainInitiatorObserver:void initializeInterceptors(org.apache.cxf.message.Exchange,org.apache.cxf.phase.PhaseInterceptorChain)"
        ]
    },
    "org.apache.cxf.interceptor.OutgoingChainInterceptor:void modifyChain(org.apache.cxf.phase.PhaseInterceptorChain,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:void modifyChain(org.apache.cxf.phase.PhaseInterceptorChain,org.apache.cxf.message.Exchange)"
        ]
    },
    "org.apache.cxf.interceptor.security.AbstractAuthorizingInInterceptor:boolean isUserInRole(org.apache.cxf.security.SecurityContext,java.util.List,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor:boolean isUserInRole(org.apache.cxf.security.SecurityContext,java.util.List,boolean)"
        ]
    },
    "org.apache.cxf.interceptor.security.DefaultSecurityContext:java.security.Principal findPrincipal(java.lang.String,javax.security.auth.Subject)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.security.DefaultSecurityContext:void <init>(javax.security.auth.Subject)",
            "org.apache.cxf.interceptor.security.DefaultSecurityContext:void <init>(java.lang.String,javax.security.auth.Subject)",
            "org.apache.cxf.interceptor.security.DefaultSecurityContext:void <init>(java.security.Principal,javax.security.auth.Subject)"
        ]
    },
    "org.apache.cxf.interceptor.security.DefaultSecurityContext:boolean isUserInRole(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.security.AbstractAuthorizingInInterceptor:boolean isUserInRole(org.apache.cxf.security.SecurityContext,java.util.List,boolean)"
        ]
    },
    "org.apache.cxf.interceptor.security.DefaultSecurityContext:java.util.Set getUserRoles()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.interceptor.security.JAASLoginInterceptor:javax.security.auth.callback.CallbackHandler getFirstCallbackHandler(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.security.JAASLoginInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.security.RolePrefixSecurityContextImpl:boolean isUserInRole(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.security.AbstractAuthorizingInInterceptor:boolean isUserInRole(org.apache.cxf.security.SecurityContext,java.util.List,boolean)"
        ]
    },
    "org.apache.cxf.interceptor.security.RolePrefixSecurityContextImpl:java.security.Principal findPrincipal(javax.security.auth.Subject,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.security.RolePrefixSecurityContextImpl:void <init>(javax.security.auth.Subject,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.interceptor.security.RolePrefixSecurityContextImpl:java.util.Set findRoles(javax.security.auth.Subject,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.security.RolePrefixSecurityContextImpl:void <init>(javax.security.auth.Subject,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.interceptor.security.SecureAnnotationsInterceptor:void setSecuredObject(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor:boolean isUserInRole(org.apache.cxf.security.SecurityContext,java.util.List,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.security.AbstractAuthorizingInInterceptor:boolean authorize(org.apache.cxf.security.SecurityContext,java.lang.reflect.Method)",
            "org.apache.cxf.interceptor.security.OperationInfoAuthorizingInterceptor:boolean authorize(org.apache.cxf.security.SecurityContext,java.lang.String)"
        ]
    },
    "org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor:java.util.Map parseRolesMap(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor:void setMethodRolesMap(java.util.Map)",
            "org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor:void setUserRolesMap(java.util.Map)"
        ]
    },
    "org.apache.cxf.interceptor.security.callback.CertKeyToUserNameMapper:java.lang.String getUserName(java.security.cert.Certificate)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.security.callback.CallbackHandlerTlsCert:javax.security.auth.callback.CallbackHandler create(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.io.CachedOutputStream:void flush()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.AttachmentSerializer:void writeAttachments()",
            "org.apache.cxf.interceptor.LoggingInInterceptor:void logInputStream(org.apache.cxf.message.Message,java.io.InputStream,org.apache.cxf.interceptor.LoggingMessage,java.lang.String,java.lang.String)",
            "org.apache.cxf.io.AbstractWrappedOutputStream:void flush()",
            "org.apache.cxf.io.CacheAndWriteOutputStream:void closeFlowthroughStream()",
            "org.apache.cxf.io.CacheAndWriteOutputStream:void postClose()",
            "org.apache.cxf.io.CachedOutputStream:void flush()",
            "org.apache.cxf.io.CachedOutputStream:void lockOutputStream()",
            "org.apache.cxf.io.CachedOutputStream:void close()",
            "org.apache.cxf.io.CachedOutputStream:byte[] getBytes()",
            "org.apache.cxf.io.CachedOutputStream:void writeCacheTo(java.io.OutputStream)",
            "org.apache.cxf.io.CachedOutputStream:void writeCacheTo(java.lang.StringBuilder,java.lang.String,long)",
            "org.apache.cxf.io.CachedOutputStream:void writeCacheTo(java.lang.StringBuilder,java.lang.String)",
            "org.apache.cxf.io.CachedOutputStream:java.io.InputStream getInputStream()",
            "org.apache.cxf.io.WriteOnCloseOutputStream:void doClose()"
        ]
    },
    "org.apache.cxf.io.CachedOutputStream:void lockOutputStream()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.AttachmentDataSource:void cache(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.LoggingOutInterceptor$LoggingCallback:void onClose(org.apache.cxf.io.CachedOutputStream)"
        ]
    },
    "org.apache.cxf.io.CachedOutputStream:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.AttachmentDataSource:void cache(org.apache.cxf.message.Message)",
            "org.apache.cxf.attachment.AttachmentDeserializer:void cache(org.apache.cxf.attachment.DelegatingInputStream)",
            "org.apache.cxf.common.jaxb.JAXBUtils:void closeUnmarshaller(javax.xml.bind.Unmarshaller)",
            "org.apache.cxf.databinding.source.NodeDataReader:java.lang.Object read(javax.xml.namespace.QName,org.w3c.dom.Node,java.lang.Class)",
            "org.apache.cxf.databinding.source.XMLStreamDataReader:java.io.InputStream getInputStream(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.endpoint.ClientImpl:void destroy()",
            "org.apache.cxf.endpoint.ServerImpl:void stop()",
            "org.apache.cxf.feature.transform.XSLTInInterceptor:void transformXReader(org.apache.cxf.message.Message,javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.feature.transform.XSLTOutInterceptor$XSLTCachedOutputStreamCallback:void onClose(org.apache.cxf.io.CachedOutputStream)",
            "org.apache.cxf.feature.transform.XSLTUtils:java.io.InputStream transform(javax.xml.transform.Templates,java.io.InputStream)",
            "org.apache.cxf.interceptor.LoggingInInterceptor:void logInputStream(org.apache.cxf.message.Message,java.io.InputStream,org.apache.cxf.interceptor.LoggingMessage,java.lang.String,java.lang.String)",
            "org.apache.cxf.io.AbstractWrappedOutputStream:void close()",
            "org.apache.cxf.io.CacheAndWriteOutputStream:void closeFlowthroughStream()",
            "org.apache.cxf.io.CacheAndWriteOutputStream:void postClose()",
            "org.apache.cxf.io.CachedOutputStream:void close()",
            "org.apache.cxf.io.CachedOutputStream:void resetOut(java.io.OutputStream,boolean)",
            "org.apache.cxf.io.CachedOutputStream:void createFileOutputStream()",
            "org.apache.cxf.io.CachedOutputStream:boolean maybeDeleteTempFile(java.lang.Object)",
            "org.apache.cxf.io.CachedWriter:java.io.OutputStreamWriter createOutputStreamWriter(java.io.File)",
            "org.apache.cxf.io.DelegatingInputStream:void cacheInput()",
            "org.apache.cxf.transport.AbstractConduit:void close(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.io.CachedWriter:void flush()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.io.CachedWriter:void flush()",
            "org.apache.cxf.io.CachedWriter:void lockOutputStream()",
            "org.apache.cxf.io.CachedWriter:void close()",
            "org.apache.cxf.io.CachedWriter:char[] getChars()",
            "org.apache.cxf.io.CachedWriter:void writeCacheTo(java.io.Writer)",
            "org.apache.cxf.io.CachedWriter:void writeCacheTo(java.lang.StringBuilder,long)",
            "org.apache.cxf.io.CachedWriter:void writeCacheTo(java.lang.StringBuilder)",
            "org.apache.cxf.io.CachedWriter:java.io.Reader getReader()"
        ]
    },
    "org.apache.cxf.io.CachedWriter:void lockOutputStream()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.io.CachedWriter:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.jaxb.JAXBUtils:void closeUnmarshaller(javax.xml.bind.Unmarshaller)",
            "org.apache.cxf.endpoint.ClientImpl:void destroy()",
            "org.apache.cxf.endpoint.ServerImpl:void stop()",
            "org.apache.cxf.feature.transform.XSLTOutInterceptor$XSLTCachedWriter:void doClose()",
            "org.apache.cxf.feature.transform.XSLTOutInterceptor$XSLTStreamWriter:void close()",
            "org.apache.cxf.feature.transform.XSLTUtils:java.io.Reader transform(javax.xml.transform.Templates,java.io.Reader)",
            "org.apache.cxf.io.CachedWriter:void close()",
            "org.apache.cxf.io.CachedWriter:void resetOut(java.io.Writer,boolean)",
            "org.apache.cxf.io.CachedWriter:void createFileOutputStream()",
            "org.apache.cxf.io.CachedWriter:void maybeDeleteTempFile(java.lang.Object)"
        ]
    },
    "org.apache.cxf.message.ExchangeImpl:void putAll(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void <init>(java.util.Map,java.util.Map,java.lang.ClassLoader)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void setProperties(java.util.Map)",
            "org.apache.cxf.endpoint.ClientImpl$EchoContext:void putAll(java.util.Map)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] doInvoke(org.apache.cxf.endpoint.ClientCallback,org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] processResult(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,java.util.Map)",
            "org.apache.cxf.feature.validation.DefaultSchemaValidationTypeProvider:void <init>(java.util.Map)",
            "org.apache.cxf.helpers.MapNamespaceContext:void addNamespaces(java.util.Map)",
            "org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor:void setMethodRolesMap(java.util.Map)",
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.RelatesToType convert(org.apache.cxf.ws.addressing.v200408.Relationship)",
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.RelatesToType convert(org.apache.cxf.ws.addressing.v200403.Relationship)",
            "org.apache.cxf.ws.addressing.VersionTransformer:void putAll(java.util.Map,java.util.Map)"
        ]
    },
    "org.apache.cxf.message.MessageImpl:void copyContent(org.apache.cxf.message.Message,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.phase.PhaseInterceptorChain:void <init>(java.util.SortedSet)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:org.apache.cxf.interceptor.InterceptorChain getOutInterceptorChain(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.phase.PhaseChainCache:org.apache.cxf.phase.PhaseInterceptorChain getChain(java.util.concurrent.atomic.AtomicReference,java.util.SortedSet,java.util.List[])",
            "org.apache.cxf.transport.MultipleEndpointObserver:org.apache.cxf.phase.PhaseInterceptorChain createChain()"
        ]
    },
    "org.apache.cxf.phase.PhaseInterceptorChain:void add(java.util.Collection,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:void add(java.util.Collection)"
        ]
    },
    "org.apache.cxf.phase.PhaseInterceptorChain:void add(org.apache.cxf.interceptor.Interceptor,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:void add(java.util.Collection,boolean)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void add(org.apache.cxf.interceptor.Interceptor)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void add(org.apache.cxf.interceptor.Interceptor,boolean)"
        ]
    },
    "org.apache.cxf.resource.DefaultResourceManager:void addResourceResolvers(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.resource.ResourceManagerImpl:void onFirstResolve()",
            "org.apache.cxf.resource.DefaultResourceManager:void <init>(java.util.List)"
        ]
    },
    "org.apache.cxf.resource.DefaultResourceManager:java.lang.Object findResource(java.lang.String,java.lang.Class,boolean,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.resource.DefaultResourceManager:java.lang.Object resolveResource(java.lang.String,java.lang.Class)",
            "org.apache.cxf.resource.DefaultResourceManager:java.lang.Object resolveResource(java.lang.String,java.lang.Class,java.util.List)",
            "org.apache.cxf.resource.DefaultResourceManager:java.io.InputStream getResourceAsStream(java.lang.String)"
        ]
    },
    "org.apache.cxf.service.ServiceImpl:org.apache.cxf.service.model.EndpointInfo getEndpointInfo(javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:org.apache.cxf.service.model.EndpointInfo findEndpoint(org.apache.cxf.service.Service,javax.xml.namespace.QName)",
            "org.apache.cxf.endpoint.EndpointImpl:void <init>(org.apache.cxf.Bus,org.apache.cxf.service.Service,javax.xml.namespace.QName)"
        ]
    },
    "org.apache.cxf.service.ServiceModelVisitor:void walk()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.source.SourceDataBinding:void initialize(org.apache.cxf.service.Service)",
            "org.apache.cxf.databinding.stax.StaxDataBinding:void initialize(org.apache.cxf.service.Service)"
        ]
    },
    "org.apache.cxf.service.ServiceModelVisitor:void visitOperation(org.apache.cxf.service.model.OperationInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.ServiceModelVisitor:void walk()",
            "org.apache.cxf.service.ServiceModelVisitor:void visitOperation(org.apache.cxf.service.model.OperationInfo)"
        ]
    },
    "org.apache.cxf.service.factory.AbstractServiceFactoryBean:void sendEvent(org.apache.cxf.service.factory.FactoryBeanListener$Event,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.service.factory.AbstractServiceFactoryBean:void fillDataBindingSchemas()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.AbstractServiceFactoryBean:void initializeDataBindings()"
        ]
    },
    "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void handleEvent(org.apache.cxf.service.factory.FactoryBeanListener$Event,org.apache.cxf.service.factory.AbstractServiceFactoryBean,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.AbstractServiceFactoryBean:void sendEvent(org.apache.cxf.service.factory.FactoryBeanListener$Event,java.lang.Object[])"
        ]
    },
    "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void addBindingOperationDocs(org.apache.cxf.endpoint.Endpoint)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void handleEvent(org.apache.cxf.service.factory.FactoryBeanListener$Event,org.apache.cxf.service.factory.AbstractServiceFactoryBean,java.lang.Object[])"
        ]
    },
    "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void addDocumentation(org.apache.cxf.service.model.OperationInfo,org.apache.cxf.annotations.WSDLDocumentation$Placement,org.apache.cxf.annotations.WSDLDocumentation[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void handleEvent(org.apache.cxf.service.factory.FactoryBeanListener$Event,org.apache.cxf.service.factory.AbstractServiceFactoryBean,java.lang.Object[])"
        ]
    },
    "org.apache.cxf.service.factory.FactoryBeanListenerManager:void setBus(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.FactoryBeanListenerManager:void <init>(org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.service.factory.SimpleMethodDispatcher:org.apache.cxf.service.model.BindingOperationInfo getBindingOperation(java.lang.reflect.Method,org.apache.cxf.endpoint.Endpoint)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.service.model.AbstractMessageContainer:int getMessagePartIndex(org.apache.cxf.service.model.MessagePartInfo)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePartByIndex(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePart(javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.model.AbstractMessageContainer:void removeMessagePart(javax.xml.namespace.QName)"
        ]
    },
    "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePart(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.service.model.AbstractPropertiesHolder:void setDelegate(org.apache.cxf.service.model.AbstractPropertiesHolder,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.model.OperationInfo:void setOutput(java.lang.String,org.apache.cxf.service.model.MessageInfo)",
            "org.apache.cxf.service.model.OperationInfo:void setInput(java.lang.String,org.apache.cxf.service.model.MessageInfo)",
            "org.apache.cxf.service.model.UnwrappedOperationInfo:void <init>(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.UnwrappedOperationInfo:void setOutput(java.lang.String,org.apache.cxf.service.model.MessageInfo)",
            "org.apache.cxf.service.model.UnwrappedOperationInfo:void setInput(java.lang.String,org.apache.cxf.service.model.MessageInfo)"
        ]
    },
    "org.apache.cxf.service.model.BindingInfo:org.apache.cxf.service.model.BindingOperationInfo buildOperation(javax.xml.namespace.QName,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.service.model.BindingInfo:org.apache.cxf.service.model.BindingOperationInfo getOperation(org.apache.cxf.service.model.OperationInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:org.apache.cxf.service.model.MessagePartInfo findMessagePart(org.apache.cxf.message.Exchange,java.util.Collection,javax.xml.namespace.QName,boolean,int,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.service.model.BindingOperationInfo:void <init>(org.apache.cxf.service.model.BindingInfo,org.apache.cxf.service.model.OperationInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.model.BindingInfo:org.apache.cxf.service.model.BindingOperationInfo buildOperation(javax.xml.namespace.QName,java.lang.String,java.lang.String)",
            "org.apache.cxf.service.model.BindingOperationInfo:void <init>(org.apache.cxf.service.model.BindingInfo,org.apache.cxf.service.model.OperationInfo,org.apache.cxf.service.model.BindingOperationInfo)"
        ]
    },
    "org.apache.cxf.service.model.MessageInfo:java.util.Map getMessagePartsMap()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.model.MessageInfo:java.util.List getOrderedParts(java.util.List)"
        ]
    },
    "org.apache.cxf.service.model.MessageInfo:java.util.List getOrderedParts(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.BindingInfo getBinding(javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.model.ServiceInfo:void addBinding(org.apache.cxf.service.model.BindingInfo)"
        ]
    },
    "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.EndpointInfo getEndpoint(javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.ServiceImpl:org.apache.cxf.service.model.EndpointInfo getEndpointInfo(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.ServiceInfo:void addEndpoint(org.apache.cxf.service.model.EndpointInfo)"
        ]
    },
    "org.apache.cxf.service.model.ServiceInfo:void initMessagesMap()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.model.ServiceInfo:java.util.Map getMessages()",
            "org.apache.cxf.service.model.ServiceInfo:void refresh()"
        ]
    },
    "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.SchemaInfo getSchema(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.AbstractDataBinding:org.apache.ws.commons.schema.XmlSchema addSchemaDocument(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.common.xmlschema.SchemaCollection,org.w3c.dom.Document,java.lang.String,java.util.Collection)"
        ]
    },
    "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperation(org.apache.cxf.message.Exchange,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:org.apache.cxf.service.model.BindingOperationInfo getBindingOperationInfo(org.apache.cxf.message.Exchange,javax.xml.namespace.QName,boolean)"
        ]
    },
    "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperationForWrapperElement(org.apache.cxf.message.Exchange,javax.xml.namespace.QName,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.SchemaInfo getSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.MessagePartInfo)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.service.model.ServiceModelUtil:java.util.List getOperationInputPartNames(org.apache.cxf.service.model.OperationInfo)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.EndpointInfo findBestEndpointInfo(javax.xml.namespace.QName,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.lang.String getPrefix(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.util.Iterator getPrefixes(java.lang.String)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.staxutils.W3CDOMStreamWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.W3CDOMStreamWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.W3CDOMStreamWriter:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.staxutils.W3CNamespaceContext:java.lang.String getPrefix(org.w3c.dom.Element,java.lang.String)",
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:java.lang.String getPrefix(java.lang.String)"
        ]
    },
    "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.util.Iterator getPrefixes(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:void copy(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter,boolean,boolean)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:void writeStartElementEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:void writeEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)"
        ]
    },
    "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxSource:void parse()"
        ]
    },
    "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:java.lang.String getNamespaceURI(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:java.lang.String getUniquePrefix(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.W3CNamespaceContext:java.lang.String getNamespaceURI(org.w3c.dom.Element,java.lang.String)",
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:java.lang.String findUniquePrefix(java.lang.String)",
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:java.util.Iterator getPrefixes(java.lang.String)",
            "org.apache.cxf.staxutils.transform.InTransformReader:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void write(javax.xml.namespace.QName,boolean)"
        ]
    },
    "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:java.lang.String getPrefix(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.staxutils.W3CDOMStreamWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.W3CDOMStreamWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.W3CDOMStreamWriter:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.staxutils.W3CNamespaceContext:java.lang.String getPrefix(org.w3c.dom.Element,java.lang.String)",
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:java.lang.String findUniquePrefix(java.lang.String)",
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.staxutils.transform.InTransformReader:int next()",
            "org.apache.cxf.staxutils.transform.InTransformReader:java.lang.String getPrefix()",
            "org.apache.cxf.staxutils.transform.InTransformReader:java.lang.String getNamespacePrefix(int)",
            "org.apache.cxf.staxutils.transform.InTransformReader:java.lang.String getAttributePrefix(int)",
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void writeNamespace(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void writeDefaultNamespace(java.lang.String)",
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void write(javax.xml.namespace.QName,boolean)"
        ]
    },
    "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:java.util.Iterator getPrefixes(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)"
        ]
    },
    "org.apache.cxf.staxutils.transform.OutTransformWriter:void writeEndElement()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeEndElement()",
            "org.apache.cxf.staxutils.PrettyPrintXMLStreamWriter:void writeEndElement()",
            "org.apache.cxf.staxutils.StaxUtils:void copy(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void writeAttributeAsElement(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.staxutils.transform.TransformUtils:void convertToQNamesMap(java.util.Map,org.apache.cxf.staxutils.transform.QNamesMap,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.transform.InTransformReader:void <init>(javax.xml.stream.XMLStreamReader,java.util.Map,java.util.Map,java.util.List,java.util.Map,boolean)",
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void <init>(javax.xml.stream.XMLStreamWriter,java.util.Map,java.util.Map,java.util.List,java.util.Map,boolean,java.lang.String)"
        ]
    },
    "org.apache.cxf.staxutils.transform.TransformUtils:void convertToMapOfElementProperties(java.util.Map,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.transform.InTransformReader:void <init>(javax.xml.stream.XMLStreamReader,java.util.Map,java.util.Map,java.util.List,java.util.Map,boolean)",
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void <init>(javax.xml.stream.XMLStreamWriter,java.util.Map,java.util.Map,java.util.List,java.util.Map,boolean,java.lang.String)"
        ]
    },
    "org.apache.cxf.staxutils.transform.TransformUtils:void convertToSetOfQNames(java.util.List,java.util.Set)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.transform.InTransformReader:void <init>(javax.xml.stream.XMLStreamReader,java.util.Map,java.util.Map,java.util.List,java.util.Map,boolean)"
        ]
    },
    "org.apache.cxf.staxutils.validation.Stax2ValidationUtils:org.codehaus.stax2.validation.XMLValidationSchema getValidator(org.apache.cxf.endpoint.Endpoint,org.apache.cxf.service.model.ServiceInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.validation.Stax2ValidationUtils:boolean setupValidation(javax.xml.stream.XMLStreamReader,org.apache.cxf.endpoint.Endpoint,org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.staxutils.validation.Stax2ValidationUtils:boolean setupValidation(javax.xml.stream.XMLStreamWriter,org.apache.cxf.endpoint.Endpoint,org.apache.cxf.service.model.ServiceInfo)"
        ]
    },
    "org.apache.cxf.staxutils.validation.W3CMultiSchemaFactory:org.codehaus.stax2.validation.XMLValidationSchema loadSchemas(java.lang.String,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.validation.Stax2ValidationUtils:org.codehaus.stax2.validation.XMLValidationSchema getValidator(org.apache.cxf.endpoint.Endpoint,org.apache.cxf.service.model.ServiceInfo)"
        ]
    },
    "org.apache.cxf.transport.AbstractMultiplexDestination:java.lang.String extractStringElementFromAny(javax.xml.namespace.QName,org.apache.cxf.ws.addressing.EndpointReferenceType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.AbstractMultiplexDestination:java.lang.String getId(java.util.Map)"
        ]
    },
    "org.apache.cxf.transport.ChainInitiationObserver:void addToChain(org.apache.cxf.interceptor.InterceptorChain,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.ChainInitiationObserver:void onMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.TransportFinder:boolean hasPrefix(java.lang.String,java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.TransportFinder:java.lang.Object checkForURI(java.lang.String)",
            "org.apache.cxf.transport.TransportFinder:boolean access$100(org.apache.cxf.transport.TransportFinder,java.lang.String,java.util.Collection)"
        ]
    },
    "org.apache.cxf.transport.TransportFinder:java.lang.Object checkForURI(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.TransportFinder:java.lang.Object findTransportForURI(java.lang.String)"
        ]
    },
    "org.apache.cxf.transport.TransportFinder:void registerBean(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.TransportFinder:void access$000(org.apache.cxf.transport.TransportFinder,java.lang.Object)"
        ]
    },
    "org.apache.cxf.transport.common.gzip.GZIPInInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.security.DelegatingAuthenticationInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.common.gzip.GZIPOutInterceptor:org.apache.cxf.transport.common.gzip.GZIPOutInterceptor$UseGzip gzipPermitted(org.apache.cxf.message.Message,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.common.gzip.GZIPOutInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.validation.BeanValidationProvider:void initFactoryConfig(javax.validation.Configuration,org.apache.cxf.validation.ValidationConfiguration)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.validation.BeanValidationProvider:void <init>(org.apache.cxf.validation.ValidationConfiguration)",
            "org.apache.cxf.validation.BeanValidationProvider:void <init>(javax.validation.ValidationProviderResolver,java.lang.Class,org.apache.cxf.validation.ValidationConfiguration)"
        ]
    },
    "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void notifyChangeListeners(java.beans.PropertyChangeEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void setHighWaterMark(int)",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void setLowWaterMark(int)",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void setInitialSize(int)",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void setQueueSize(int)",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void setDequeueTimeout(long)"
        ]
    },
    "org.apache.cxf.ws.addressing.EndpointReferenceUtils$SchemaLSResourceResolver:org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.addressing.EndpointReferenceUtils:javax.xml.namespace.QName getServiceName(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:javax.xml.namespace.QName getPortQName(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)",
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.v200408.EndpointReferenceType convert(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.v200403.EndpointReferenceType convertTo200403(org.apache.cxf.ws.addressing.EndpointReferenceType)"
        ]
    },
    "org.apache.cxf.ws.addressing.EndpointReferenceUtils:java.lang.String getPortName(org.apache.cxf.ws.addressing.EndpointReferenceType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:javax.xml.namespace.QName getPortQName(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)",
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.v200408.EndpointReferenceType convert(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.v200403.EndpointReferenceType convertTo200403(org.apache.cxf.ws.addressing.EndpointReferenceType)"
        ]
    },
    "org.apache.cxf.ws.addressing.EndpointReferenceUtils:void setPortName(org.apache.cxf.ws.addressing.EndpointReferenceType,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.addressing.EndpointReferenceUtils:javax.xml.namespace.QName getInterfaceName(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.addressing.EndpointReferenceUtils:void setMetadata(org.apache.cxf.ws.addressing.EndpointReferenceType,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.addressing.EndpointReferenceUtils:javax.xml.validation.Schema createSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:javax.xml.validation.Schema getSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.ws.addressing.EndpointReferenceUtils:org.apache.cxf.transport.MultiplexDestination getMatchingMultiplexDestination(javax.xml.namespace.QName,java.lang.String,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:org.apache.cxf.ws.addressing.EndpointReferenceType getEndpointReferenceWithId(javax.xml.namespace.QName,java.lang.String,java.lang.String,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.attachment.LazyAttachmentCollection:int size()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.AttachmentUtil$DHMap$1:int size()",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$1:int size()",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$2:int size()",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$3:int size()",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:int size()",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:java.lang.Object getExtension(java.lang.Class)",
            "org.apache.cxf.common.util.CollectionUtils:java.util.Collection diff(java.util.Collection,java.util.Collection)",
            "org.apache.cxf.common.util.CollectionUtils:boolean isEmpty(java.util.Collection)",
            "org.apache.cxf.service.invoker.PooledFactory:void <init>(java.util.Collection)",
            "org.apache.cxf.service.model.BindingOperationInfo:void <init>(org.apache.cxf.service.model.BindingInfo,org.apache.cxf.service.model.OperationInfo)"
        ]
    },
    "org.apache.cxf.attachment.LazyAttachmentCollection:java.lang.Object[] toArray()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.attachment.LazyAttachmentCollection:java.lang.Object[] toArray(java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:javax.xml.validation.Schema createSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.attachment.AttachmentDeserializer:void markClosed(org.apache.cxf.attachment.DelegatingInputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.DelegatingInputStream:void close()"
        ]
    },
    "org.apache.cxf.attachment.LazyAttachmentCollection:boolean hasNext()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.interceptor.security.DelegatingAuthenticationInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.security.DelegatingAuthenticationInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] doInvoke(org.apache.cxf.endpoint.ClientCallback,org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.ClientImpl:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.security.JAASLoginInterceptor$1:java.lang.Void run()",
            "org.apache.cxf.phase.PhaseInterceptorChain:void resume()",
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doInterceptStartingAfter(org.apache.cxf.message.Message,java.lang.String)",
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doInterceptStartingAt(org.apache.cxf.message.Message,java.lang.String)",
            "org.apache.cxf.transport.ChainInitiationObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.MultipleEndpointObserver:void onMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.bus.extension.ExtensionManagerBus:void shutdown(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.ManagedBus:void shutdown(boolean)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void shutdown()"
        ]
    },
    "org.apache.cxf.attachment.AttachmentDeserializer:boolean hasNext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.LazyAttachmentCollection:boolean hasNext(boolean)"
        ]
    },
    "org.apache.cxf.attachment.AttachmentSerializer:void writeProlog()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.AttachmentOutInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.AttachmentOutInterceptor$AttachmentOutEndingInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.security.DelegatingAuthenticationInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.attachment.AttachmentUtil$DHMap:java.lang.Object put(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.BusFactory:org.apache.cxf.BusFactory$BusHolder getThreadBusHolder(boolean)",
            "org.apache.cxf.attachment.AttachmentDeserializer:void addHeaderLine(java.util.Map,java.lang.StringBuilder)",
            "org.apache.cxf.attachment.AttachmentImpl:void setHeader(java.lang.String,java.lang.String)",
            "org.apache.cxf.attachment.AttachmentSerializer:void writeAttachments()",
            "org.apache.cxf.attachment.ContentDisposition:void <init>(java.lang.String)",
            "org.apache.cxf.bus.blueprint.ConfigurerImpl:void initializeWildcardMap()",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void <init>(java.util.Map,java.util.Map,java.lang.ClassLoader)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:java.lang.Object getExtension(java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void setExtension(java.lang.Object,java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void setProperty(java.lang.String,java.lang.Object)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void <init>(java.lang.String[],java.lang.ClassLoader,java.util.Map,org.apache.cxf.resource.ResourceManager,org.apache.cxf.Bus)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void add(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void load(java.lang.String,java.lang.ClassLoader)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadAndRegister(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl:void registerBindingFactory(java.lang.String,org.apache.cxf.binding.BindingFactory)",
            "org.apache.cxf.bus.managers.ConduitInitiatorManagerImpl:void registerConduitInitiator(java.lang.String,org.apache.cxf.transport.ConduitInitiator)",
            "org.apache.cxf.bus.managers.DestinationFactoryManagerImpl:void registerDestinationFactory(java.lang.String,org.apache.cxf.transport.DestinationFactory)",
            "org.apache.cxf.bus.managers.HeaderManagerImpl:void registerHeaderProcessor(org.apache.cxf.headers.HeaderProcessor)",
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:void addNamedWorkQueue(java.lang.String,org.apache.cxf.workqueue.AutomaticWorkQueue)",
            "org.apache.cxf.bus.osgi.ManagedWorkQueueList:void updated(java.lang.String,java.util.Dictionary)",
            "org.apache.cxf.catalog.CatalogXmlSchemaURIResolver:org.xml.sax.InputSource resolveEntity(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.common.jaxb.JAXBContextCache:org.apache.cxf.common.jaxb.JAXBContextCache$CachedContextAndSchemas getCachedContextAndSchemas(java.util.Set,java.lang.String,java.util.Map,java.util.Collection,boolean)",
            "org.apache.cxf.common.jaxb.JAXBContextCache:javax.xml.bind.JAXBContext createContext(java.util.Set,java.util.Map,java.util.Collection)",
            "org.apache.cxf.common.jaxb.JAXBUtils:void addToObjectFactoryCache(java.lang.Package,java.lang.Class,java.util.Map)",
            "org.apache.cxf.common.jaxb.JAXBUtils:void <clinit>()",
            "org.apache.cxf.common.jaxb.SchemaCollectionContextProxy:void defaultRegister(java.lang.Class,javax.xml.namespace.QName)",
            "org.apache.cxf.common.logging.Log4jLogger:void <clinit>()",
            "org.apache.cxf.common.util.ASMHelper$Opcodes:void <clinit>()",
            "org.apache.cxf.common.util.ASMHelper:org.apache.cxf.common.util.ASMHelper$TypeHelperClassLoader getTypeHelperClassLoader(java.lang.ClassLoader)",
            "org.apache.cxf.common.util.ASMHelper:org.apache.cxf.common.util.ASMHelper$TypeHelperClassLoader getTypeHelperClassLoader(java.lang.Class)",
            "org.apache.cxf.common.util.ASMHelper:void <clinit>()",
            "org.apache.cxf.common.util.CacheMap:void updateMainDataMap()",
            "org.apache.cxf.common.util.CacheMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.common.util.CacheMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.common.util.PrimitiveUtils:void <clinit>()",
            "org.apache.cxf.common.util.StringUtils:void <clinit>()",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.common.util.XmlSchemaPrimitiveUtils:void registerPrimitiveClasses(java.lang.String,java.lang.Class[])",
            "org.apache.cxf.common.xmlschema.SchemaCollection:boolean crossImportsAdded(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaType)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void initWildcardDefinitionMap()",
            "org.apache.cxf.databinding.AbstractDataBinding:void <init>()",
            "org.apache.cxf.endpoint.ClientImpl$EchoContext:java.lang.Object put(java.lang.String,java.lang.Object)",
            "org.apache.cxf.endpoint.ClientImpl:java.util.Map getRequestContext()",
            "org.apache.cxf.endpoint.ClientImpl:java.util.Map getResponseContext()",
            "org.apache.cxf.endpoint.ClientImpl:void setThreadLocalRequestContext(boolean)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] doInvoke(org.apache.cxf.endpoint.ClientCallback,org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] processResult(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,java.util.Map)",
            "org.apache.cxf.endpoint.ClientImpl:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.extension.RegistryImpl:void register(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.helpers.DOMUtils:javax.xml.parsers.DocumentBuilder getDocumentBuilder()",
            "org.apache.cxf.helpers.HttpHeaderHelper:void <clinit>()",
            "org.apache.cxf.helpers.MapNamespaceContext:void addNamespace(java.lang.String,java.lang.String)",
            "org.apache.cxf.interceptor.FIStaxOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxInInterceptor:javax.xml.stream.XMLInputFactory getXMLInputFactory(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxOutInterceptor:javax.xml.stream.XMLOutputFactory getXMLOutputFactory(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.security.SecureAnnotationsInterceptor:void findRoles(java.lang.Class,java.util.Map)",
            "org.apache.cxf.message.MessageImpl:java.lang.Object put(java.lang.String,java.lang.Object)",
            "org.apache.cxf.message.MessageImpl:void setContextualProperty(java.lang.String,java.lang.Object)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void <init>(java.util.SortedSet)",
            "org.apache.cxf.resource.URIResolver:void tryRemote(java.lang.String)",
            "org.apache.cxf.service.factory.SimpleMethodDispatcher:void bind(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method[])",
            "org.apache.cxf.service.factory.SimpleMethodDispatcher:org.apache.cxf.service.model.BindingOperationInfo getBindingOperation(java.lang.reflect.Method,org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.service.model.AbstractMessageContainer:void addMessagePart(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:void setProperty(java.lang.String,java.lang.Object)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:void addExtensionAttribute(javax.xml.namespace.QName,java.lang.Object)",
            "org.apache.cxf.service.model.BindingInfo:void addOperation(org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.service.model.BindingOperationInfo:void <init>(org.apache.cxf.service.model.BindingInfo,org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.InterfaceInfo:void addOperation(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.OperationInfo:void addFault(org.apache.cxf.service.model.FaultInfo)",
            "org.apache.cxf.service.model.ServiceInfo:void initMessagesMap()",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperationForWrapperElement(org.apache.cxf.message.Exchange,javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:void addNs(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startPrefixMapping(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:void addPrefix(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.staxutils.transform.TransformUtils:void convertToQNamesMap(java.util.Map,org.apache.cxf.staxutils.transform.QNamesMap,java.util.Map)",
            "org.apache.cxf.staxutils.transform.TransformUtils:void convertToMapOfElementProperties(java.util.Map,java.util.Map)",
            "org.apache.cxf.transport.TransportFinder:void registerBean(java.lang.Object)",
            "org.apache.cxf.transport.common.gzip.GZIPOutInterceptor:void addHeader(org.apache.cxf.message.Message,java.lang.String,java.lang.String)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:javax.xml.bind.JAXBElement getServiceNameType(javax.xml.namespace.QName,java.lang.String)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:void setInterfaceName(org.apache.cxf.ws.addressing.EndpointReferenceType,javax.xml.namespace.QName)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:void setWSDLLocation(org.apache.cxf.ws.addressing.EndpointReferenceType,java.lang.String[])"
        ]
    },
    "org.apache.cxf.attachment.AttachmentUtil:java.lang.String getHeader(java.util.Map,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.AttachmentDeserializer:void initializeRootMessage()"
        ]
    },
    "org.apache.cxf.attachment.AttachmentDeserializer:org.apache.cxf.message.Attachment createAttachment(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.AttachmentDeserializer:org.apache.cxf.attachment.AttachmentImpl readNext()"
        ]
    },
    "org.apache.cxf.bus.extension.ExtensionManagerImpl:boolean hasBeanOfName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:boolean hasBeanOfName(java.lang.String)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:boolean hasExtensionByName(java.lang.String)",
            "org.apache.cxf.bus.osgi.OSGiBeanLocator:boolean hasBeanOfName(java.lang.String)",
            "org.apache.cxf.bus.spring.SpringBeanLocator:boolean hasBeanOfName(java.lang.String)"
        ]
    },
    "org.apache.cxf.bus.managers.BindingFactoryManagerImpl$1:boolean loadBean(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)",
            "org.apache.cxf.bus.spring.SpringBeanLocator:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)"
        ]
    },
    "org.apache.cxf.bus.managers.BindingFactoryManagerImpl$2:boolean beanLoaded(java.lang.String,org.apache.cxf.binding.BindingFactory)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl$2:boolean beanLoaded(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.cxf.bus.managers.BindingFactoryManagerImpl$3:boolean beanLoaded(java.lang.String,org.apache.cxf.binding.BindingFactory)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl$3:boolean beanLoaded(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.cxf.bus.osgi.ManagedWorkQueueList:void updated(java.lang.String,java.util.Dictionary)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.jaxb.JAXBContextCache:javax.xml.bind.JAXBContext createContext(java.util.Set,java.util.Map,java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.jaxb.JAXBContextCache:org.apache.cxf.common.jaxb.JAXBContextCache$CachedContextAndSchemas getCachedContextAndSchemas(java.util.Set,java.lang.String,java.util.Map,java.util.Collection,boolean)"
        ]
    },
    "org.apache.cxf.common.jaxb.JAXBUtils$1:javax.xml.transform.Result createOutput(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.util.CacheMap:boolean containsKey(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void <init>(java.lang.String[],java.lang.ClassLoader,java.util.Map,org.apache.cxf.resource.ResourceManager,org.apache.cxf.Bus)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:boolean hasBeanOfName(java.lang.String)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void load(java.lang.String,java.lang.ClassLoader)",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl$1:boolean beanLoaded(java.lang.String,org.apache.cxf.binding.BindingFactory)",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl$1:boolean loadBean(java.lang.String,java.lang.Class)",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl$2:boolean beanLoaded(java.lang.String,org.apache.cxf.binding.BindingFactory)",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl$3:boolean beanLoaded(java.lang.String,org.apache.cxf.binding.BindingFactory)",
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.bus.osgi.ManagedWorkQueueList:void updated(java.lang.String,java.util.Dictionary)",
            "org.apache.cxf.common.jaxb.JAXBContextCache:javax.xml.bind.JAXBContext createContext(java.util.Set,java.util.Map,java.util.Collection)",
            "org.apache.cxf.common.jaxb.JAXBUtils$1:javax.xml.transform.Result createOutput(java.lang.String,java.lang.String)",
            "org.apache.cxf.common.util.CacheMap:void updateMainDataMap()",
            "org.apache.cxf.common.util.CacheMap:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.common.xmlschema.SchemaCollection:boolean crossImportsAdded(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaType)",
            "org.apache.cxf.endpoint.ClientImpl:java.util.Map getRequestContext()",
            "org.apache.cxf.endpoint.ClientImpl:java.util.Map getResponseContext()",
            "org.apache.cxf.interceptor.security.DelegatingAuthenticationInterceptor:java.lang.String getAuthenticationScheme(org.apache.cxf.message.Message)",
            "org.apache.cxf.service.model.AbstractMessageContainer:void addMessagePart(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:boolean hasProperty(java.lang.String)",
            "org.apache.cxf.service.model.BindingInfo:void addOperation(org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.service.model.InterfaceInfo:org.apache.cxf.service.model.OperationInfo addOperation(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.OperationInfo:org.apache.cxf.service.model.FaultInfo addFault(javax.xml.namespace.QName,javax.xml.namespace.QName)",
            "org.apache.cxf.transport.TransportFinder$2:boolean beanLoaded(java.lang.String,java.lang.Object)",
            "org.apache.cxf.transport.TransportFinder$4:boolean beanLoaded(java.lang.String,java.lang.Object)",
            "org.apache.cxf.transport.TransportFinder$5:boolean beanLoaded(java.lang.String,java.lang.Object)",
            "org.apache.cxf.transport.TransportFinder:void registerBean(java.lang.Object)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils$SchemaLSResourceResolver:org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.common.util.WeakIdentityHashMap:boolean containsKey(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void <init>(java.lang.String[],java.lang.ClassLoader,java.util.Map,org.apache.cxf.resource.ResourceManager,org.apache.cxf.Bus)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:boolean hasBeanOfName(java.lang.String)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void load(java.lang.String,java.lang.ClassLoader)",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl$1:boolean beanLoaded(java.lang.String,org.apache.cxf.binding.BindingFactory)",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl$1:boolean loadBean(java.lang.String,java.lang.Class)",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl$2:boolean beanLoaded(java.lang.String,org.apache.cxf.binding.BindingFactory)",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl$3:boolean beanLoaded(java.lang.String,org.apache.cxf.binding.BindingFactory)",
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.bus.osgi.ManagedWorkQueueList:void updated(java.lang.String,java.util.Dictionary)",
            "org.apache.cxf.common.jaxb.JAXBContextCache:javax.xml.bind.JAXBContext createContext(java.util.Set,java.util.Map,java.util.Collection)",
            "org.apache.cxf.common.jaxb.JAXBUtils$1:javax.xml.transform.Result createOutput(java.lang.String,java.lang.String)",
            "org.apache.cxf.common.util.CacheMap:void updateMainDataMap()",
            "org.apache.cxf.common.util.CacheMap:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.common.xmlschema.SchemaCollection:boolean crossImportsAdded(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaType)",
            "org.apache.cxf.endpoint.ClientImpl:java.util.Map getRequestContext()",
            "org.apache.cxf.endpoint.ClientImpl:java.util.Map getResponseContext()",
            "org.apache.cxf.interceptor.security.DelegatingAuthenticationInterceptor:java.lang.String getAuthenticationScheme(org.apache.cxf.message.Message)",
            "org.apache.cxf.service.model.AbstractMessageContainer:void addMessagePart(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:boolean hasProperty(java.lang.String)",
            "org.apache.cxf.service.model.BindingInfo:void addOperation(org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.service.model.InterfaceInfo:org.apache.cxf.service.model.OperationInfo addOperation(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.OperationInfo:org.apache.cxf.service.model.FaultInfo addFault(javax.xml.namespace.QName,javax.xml.namespace.QName)",
            "org.apache.cxf.transport.TransportFinder$2:boolean beanLoaded(java.lang.String,java.lang.Object)",
            "org.apache.cxf.transport.TransportFinder$4:boolean beanLoaded(java.lang.String,java.lang.Object)",
            "org.apache.cxf.transport.TransportFinder$5:boolean beanLoaded(java.lang.String,java.lang.Object)",
            "org.apache.cxf.transport.TransportFinder:void registerBean(java.lang.Object)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils$SchemaLSResourceResolver:org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.common.xmlschema.SchemaCollection:boolean crossImportsAdded(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addElementCrossImportsElement(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaElement)"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:java.util.Map getRequestContext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] doInvoke(org.apache.cxf.endpoint.ClientCallback,org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.ClientImpl:org.apache.cxf.transport.Conduit getConduit()"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:java.util.Map getResponseContext()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.interceptor.security.DelegatingAuthenticationInterceptor:java.lang.String getAuthenticationScheme(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.security.DelegatingAuthenticationInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.service.model.AbstractMessageContainer:void addMessagePart(org.apache.cxf.service.model.MessagePartInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo addMessagePart(javax.xml.namespace.QName)"
        ]
    },
    "org.apache.cxf.service.model.AbstractPropertiesHolder:boolean hasProperty(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.model.AbstractPropertiesHolder:boolean hasProperty(java.lang.String)",
            "org.apache.cxf.transport.ChainInitiationObserver:void setExchangeProperties(org.apache.cxf.message.Exchange,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:javax.xml.validation.Schema getSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.service.model.BindingInfo:void addOperation(org.apache.cxf.service.model.BindingOperationInfo)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.service.model.InterfaceInfo:org.apache.cxf.service.model.OperationInfo addOperation(javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.service.model.OperationInfo:org.apache.cxf.service.model.FaultInfo addFault(javax.xml.namespace.QName,javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.model.UnwrappedOperationInfo:org.apache.cxf.service.model.FaultInfo addFault(javax.xml.namespace.QName,javax.xml.namespace.QName)"
        ]
    },
    "org.apache.cxf.transport.TransportFinder$2:boolean beanLoaded(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)",
            "org.apache.cxf.bus.spring.SpringBeanLocator:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)"
        ]
    },
    "org.apache.cxf.transport.TransportFinder$4:boolean beanLoaded(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)",
            "org.apache.cxf.bus.spring.SpringBeanLocator:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)"
        ]
    },
    "org.apache.cxf.transport.TransportFinder$5:boolean beanLoaded(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)",
            "org.apache.cxf.bus.spring.SpringBeanLocator:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)"
        ]
    },
    "org.apache.cxf.common.util.CacheMap:boolean containsValue(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.CacheMap:boolean containsValue(java.lang.Object)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:boolean containsValue(java.lang.Object)"
        ]
    },
    "org.apache.cxf.common.util.WeakIdentityHashMap:boolean containsValue(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.CacheMap:boolean containsValue(java.lang.Object)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:boolean containsValue(java.lang.Object)"
        ]
    },
    "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:java.lang.Object get(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.BusFactory:org.apache.cxf.BusFactory$BusHolder getThreadBusHolder(boolean)",
            "org.apache.cxf.BusFactory:void setThreadDefaultBus(org.apache.cxf.Bus)",
            "org.apache.cxf.BusFactory:org.apache.cxf.Bus getAndSetThreadDefaultBus(org.apache.cxf.Bus)",
            "org.apache.cxf.BusFactory:org.apache.cxf.Bus getThreadDefaultBus(boolean)",
            "org.apache.cxf.attachment.AttachmentDeserializer:void addHeaderLine(java.util.Map,java.lang.StringBuilder)",
            "org.apache.cxf.attachment.AttachmentImpl:java.lang.String getHeader(java.lang.String)",
            "org.apache.cxf.attachment.AttachmentSerializer:java.lang.String getHeaderValue(java.lang.String,java.lang.String)",
            "org.apache.cxf.attachment.AttachmentUtil:java.lang.String getHeader(java.util.Map,java.lang.String)",
            "org.apache.cxf.attachment.AttachmentUtil:java.lang.String getHeader(java.util.Map,java.lang.String,java.lang.String)",
            "org.apache.cxf.attachment.ContentDisposition:java.lang.String getFilename()",
            "org.apache.cxf.attachment.ContentDisposition:java.lang.String getParameter(java.lang.String)",
            "org.apache.cxf.bus.ManagedBus:javax.management.ObjectName getObjectName()",
            "org.apache.cxf.bus.blueprint.ConfigurerImpl:void initializeWildcardMap()",
            "org.apache.cxf.bus.blueprint.ConfigurerImpl:void configureWithWildCard(java.lang.String,java.lang.Object)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:java.lang.Object getExtension(java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:boolean hasExtensionByName(java.lang.String)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:org.apache.cxf.configuration.ConfiguredBeanLocator createConfiguredBeanLocator()",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:java.lang.String getBusId(java.util.Map)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadAndRegister(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:java.lang.Object getExtension(java.lang.String,java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:java.lang.Object getBeanOfType(java.lang.String,java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:java.util.Collection getBeansOfType(java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:boolean hasConfiguredPropertyValue(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl:org.apache.cxf.binding.BindingFactory getBindingFactory(java.lang.String)",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl:org.apache.cxf.binding.BindingFactory loadAll(java.lang.String)",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl:org.apache.cxf.binding.BindingFactory loadDefaultNamespace(java.lang.String)",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl:org.apache.cxf.binding.BindingFactory loadActivationNamespace(java.lang.String)",
            "org.apache.cxf.bus.managers.ConduitInitiatorManagerImpl:org.apache.cxf.transport.ConduitInitiator getConduitInitiator(java.lang.String)",
            "org.apache.cxf.bus.managers.DestinationFactoryManagerImpl:org.apache.cxf.transport.DestinationFactory getDestinationFactory(java.lang.String)",
            "org.apache.cxf.bus.managers.HeaderManagerImpl:org.apache.cxf.headers.HeaderProcessor getHeaderProcessor(java.lang.String)",
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:org.apache.cxf.workqueue.AutomaticWorkQueue getNamedWorkQueue(java.lang.String)",
            "org.apache.cxf.bus.osgi.ManagedWorkQueueList:void updated(java.lang.String,java.util.Dictionary)",
            "org.apache.cxf.bus.spring.BusEntityResolver:org.xml.sax.InputSource resolveEntity(java.lang.String,java.lang.String)",
            "org.apache.cxf.common.jaxb.JAXBContextCache:org.apache.cxf.common.jaxb.JAXBContextCache$CachedContextAndSchemas getCachedContextAndSchemas(java.util.Set,java.lang.String,java.util.Map,java.util.Collection,boolean)",
            "org.apache.cxf.common.jaxb.JAXBContextCache:javax.xml.bind.JAXBContext createContext(java.util.Set,java.util.Map,java.util.Collection)",
            "org.apache.cxf.common.jaxb.JAXBUtils$1:javax.xml.transform.Result createOutput(java.lang.String,java.lang.String)",
            "org.apache.cxf.common.jaxb.JAXBUtils:java.lang.String builtInTypeToJavaType(java.lang.String)",
            "org.apache.cxf.common.jaxb.JAXBUtils:java.lang.Class holderClass(java.lang.String)",
            "org.apache.cxf.common.jaxb.JAXBUtils:void scanPackages(java.util.Set,java.lang.Class[],java.util.Map)",
            "org.apache.cxf.common.jaxb.NamespaceMapper:java.lang.String getPreferredPrefix(java.lang.String,java.lang.String,boolean)",
            "org.apache.cxf.common.jaxb.SchemaCollectionContextProxy:javax.xml.namespace.QName getTypeQName(java.lang.Class,java.lang.String)",
            "org.apache.cxf.common.logging.Log4jLogger$HandlerWrapper:org.apache.log4j.Priority getThreshold()",
            "org.apache.cxf.common.logging.Log4jLogger:void setLevel(java.util.logging.Level)",
            "org.apache.cxf.common.logging.Log4jLogger:void internalLogFormatted(java.lang.String,java.util.logging.LogRecord)",
            "org.apache.cxf.common.util.ASMHelper:java.lang.String getClassCode(java.lang.Class)",
            "org.apache.cxf.common.util.ASMHelper:org.apache.cxf.common.util.ASMHelper$TypeHelperClassLoader getTypeHelperClassLoader(java.lang.ClassLoader)",
            "org.apache.cxf.common.util.ASMHelper:org.apache.cxf.common.util.ASMHelper$TypeHelperClassLoader getTypeHelperClassLoader(java.lang.Class)",
            "org.apache.cxf.common.util.CacheMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.common.util.PrimitiveUtils:boolean canPrimitiveTypeBeAutoboxed(java.lang.Class,java.lang.Class)",
            "org.apache.cxf.common.util.PropertyUtils:boolean isTrue(java.util.Map,java.lang.String)",
            "org.apache.cxf.common.util.PropertyUtils:boolean isFalse(java.util.Map,java.lang.String)",
            "org.apache.cxf.common.util.StringUtils:java.lang.String[] split(java.lang.String,java.lang.String)",
            "org.apache.cxf.common.util.StringUtils:java.lang.String[] split(java.lang.String,java.lang.String,int)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.common.util.XmlSchemaPrimitiveUtils:java.lang.String getSchemaRepresentation(java.lang.Class,java.lang.String)",
            "org.apache.cxf.common.xmlschema.SchemaCollection:boolean crossImportsAdded(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaType)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void initWildcardDefinitionMap()",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureWithWildCard(java.lang.String,java.lang.Object)",
            "org.apache.cxf.databinding.AbstractDataBinding:void updateSchemaLocation(org.w3c.dom.Element)",
            "org.apache.cxf.databinding.source.mime.MimeSerializer:void serialize(org.apache.ws.commons.schema.XmlSchemaObject,java.lang.Class,org.w3c.dom.Node)",
            "org.apache.cxf.endpoint.ClientImpl$1:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ClientImpl:java.util.Map getRequestContext()",
            "org.apache.cxf.endpoint.ClientImpl:java.util.Map getResponseContext()",
            "org.apache.cxf.endpoint.ClientImpl:boolean isThreadLocalRequestContext()",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] doInvoke(org.apache.cxf.endpoint.ClientCallback,org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.ClientImpl:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.extension.RegistryImpl:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.feature.validation.DefaultSchemaValidationTypeProvider:org.apache.cxf.annotations.SchemaValidation$SchemaValidationType getSchemaValidationType(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.helpers.DOMUtils:javax.xml.parsers.DocumentBuilder getDocumentBuilder()",
            "org.apache.cxf.helpers.HttpHeaderHelper:java.util.List getHeader(java.util.Map,java.lang.String)",
            "org.apache.cxf.helpers.HttpHeaderHelper:java.lang.String getHeaderKey(java.lang.String)",
            "org.apache.cxf.helpers.MapNamespaceContext:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.interceptor.ClientOutFaultObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.FIStaxOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxInInterceptor:javax.xml.stream.XMLInputFactory getXMLInputFactory(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxOutInterceptor:javax.xml.stream.XMLOutputFactory getXMLOutputFactory(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.security.DelegatingAuthenticationInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.security.DelegatingAuthenticationInterceptor:java.lang.String getAuthenticationScheme(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.security.OperationInfoAuthorizingInterceptor:java.util.List getExpectedRoles(java.lang.String)",
            "org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor:boolean isUserInRole(org.apache.cxf.security.SecurityContext,java.util.List,boolean)",
            "org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor:java.util.List getExpectedRoles(java.lang.reflect.Method)",
            "org.apache.cxf.message.MessageImpl:java.lang.Object getContextualProperty(java.lang.String)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void add(org.apache.cxf.interceptor.Interceptor,boolean)",
            "org.apache.cxf.resource.PropertiesResolver:java.lang.Object resolve(java.lang.String,java.lang.Class)",
            "org.apache.cxf.resource.URIResolver:void tryRemote(java.lang.String)",
            "org.apache.cxf.service.factory.SimpleMethodDispatcher:org.apache.cxf.service.model.BindingOperationInfo getBindingOperation(java.lang.reflect.Method,org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.service.factory.SimpleMethodDispatcher:java.lang.reflect.Method getMethod(org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.service.factory.SimpleMethodDispatcher:java.lang.reflect.Method getPrimaryMethod(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:void addMessagePart(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePart(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:java.lang.Object getExtensionAttribute(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.BindingInfo:org.apache.cxf.service.model.BindingOperationInfo getOperation(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.BindingOperationInfo:org.apache.cxf.service.model.BindingFaultInfo getFault(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.InterfaceInfo:org.apache.cxf.service.model.OperationInfo getOperation(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.MessageInfo:java.util.List getOrderedParts(java.util.List)",
            "org.apache.cxf.service.model.OperationInfo:org.apache.cxf.service.model.FaultInfo getFault(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.MessageInfo getMessage(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperationForWrapperElement(org.apache.cxf.message.Exchange,javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.staxutils.PropertiesExpandingStreamReader:java.lang.String expandProperty(java.lang.String)",
            "org.apache.cxf.staxutils.W3CDOMStreamWriter:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.staxutils.transform.InTransformReader:java.lang.String getNamespaceURI(int)",
            "org.apache.cxf.staxutils.transform.InTransformReader:java.lang.String getNamespacePrefix(int)",
            "org.apache.cxf.staxutils.transform.InTransformReader:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.staxutils.transform.InTransformReader:java.lang.String getAttributePrefix(int)",
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void writeNamespace(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void writeDefaultNamespace(java.lang.String)",
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void setDefaultNamespace(java.lang.String)",
            "org.apache.cxf.staxutils.validation.ResolvingGrammarReaderController:org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.transport.AbstractMultiplexDestination:java.lang.String getId(java.util.Map)",
            "org.apache.cxf.transport.TransportFinder:java.lang.Object findTransportForNamespace(java.lang.String)",
            "org.apache.cxf.transport.TransportFinder:java.lang.Object loadActivationNamespaces(java.lang.String)",
            "org.apache.cxf.transport.TransportFinder:java.lang.Object loadDefaultNamespace(java.lang.String)",
            "org.apache.cxf.transport.TransportFinder:java.lang.Object loadNoDefaultNamespace(java.lang.String)",
            "org.apache.cxf.transport.common.gzip.GZIPInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.common.gzip.GZIPOutInterceptor:org.apache.cxf.transport.common.gzip.GZIPOutInterceptor$UseGzip gzipPermitted(org.apache.cxf.message.Message,boolean)",
            "org.apache.cxf.transport.common.gzip.GZIPOutInterceptor:void addHeader(org.apache.cxf.message.Message,java.lang.String,java.lang.String)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils$SchemaLSResourceResolver:org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:java.lang.String getWSDLLocation(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:java.lang.String getEndpointReferenceId(java.util.Map)"
        ]
    },
    "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:java.lang.Object remove(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void setExtension(java.lang.Object,java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void setProperty(java.lang.String,java.lang.Object)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void removeBeansOfNames(java.util.List)",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl:void unregisterBindingFactory(java.lang.String)",
            "org.apache.cxf.bus.managers.ConduitInitiatorManagerImpl:void deregisterConduitInitiator(java.lang.String)",
            "org.apache.cxf.bus.managers.DestinationFactoryManagerImpl:void deregisterDestinationFactory(java.lang.String)",
            "org.apache.cxf.bus.osgi.ManagedWorkQueueList:void deleted(java.lang.String)",
            "org.apache.cxf.common.jaxb.JAXBContextCache:org.apache.cxf.common.jaxb.JAXBContextCache$CachedContextAndSchemas getCachedContextAndSchemas(java.util.Set,java.lang.String,java.util.Map,java.util.Collection,boolean)",
            "org.apache.cxf.common.jaxb.JAXBContextCache:javax.xml.bind.JAXBContext createContext(java.util.Set,java.util.Map,java.util.Collection)",
            "org.apache.cxf.common.util.CacheMap:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:void reap()",
            "org.apache.cxf.endpoint.ClientImpl$EchoContext:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] processResult(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,java.util.Map)",
            "org.apache.cxf.extension.RegistryImpl:void unregister(java.lang.Object)",
            "org.apache.cxf.service.model.AbstractMessageContainer:void removeMessagePart(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:java.lang.Object removeProperty(java.lang.String)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:void setProperty(java.lang.String,java.lang.Object)",
            "org.apache.cxf.service.model.BindingInfo:void removeOperation(org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.service.model.InterfaceInfo:void removeOperation(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.OperationInfo:void removeFault(javax.xml.namespace.QName)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cxf.staxutils.transform.InTransformReader:int next()",
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.transport.common.gzip.GZIPInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils$SchemaLSResourceResolver:org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.bus.extension.ExtensionManagerBus:void <init>(java.util.Map,java.util.Map,java.lang.ClassLoader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.blueprint.BlueprintBus:void <init>()",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void <init>(java.util.Map,java.util.Map)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void <init>(java.util.Map)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void <init>()"
        ]
    },
    "org.apache.cxf.bus.extension.ExtensionManagerBus:void setProperties(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.BusDefinitionParser$BusConfig:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.bus.spring.BusDefinitionParser$BusConfig:void setProperties(java.util.Map)"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl$EchoContext:void putAll(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void <init>(java.util.Map,java.util.Map,java.lang.ClassLoader)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void setProperties(java.util.Map)",
            "org.apache.cxf.common.jaxb.JAXBContextCache:org.apache.cxf.common.jaxb.JAXBContextCache$CachedContextAndSchemas getCachedContextAndSchemas(java.util.Set,java.lang.String,java.util.Map,java.util.Collection,boolean)",
            "org.apache.cxf.endpoint.ClientImpl$EchoContext:void putAll(java.util.Map)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] processResult(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,java.util.Map)",
            "org.apache.cxf.feature.validation.DefaultSchemaValidationTypeProvider:void <init>(java.util.Map)",
            "org.apache.cxf.helpers.MapNamespaceContext:void addNamespaces(java.util.Map)",
            "org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor:void setMethodRolesMap(java.util.Map)",
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.RelatesToType convert(org.apache.cxf.ws.addressing.v200408.Relationship)",
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.RelatesToType convert(org.apache.cxf.ws.addressing.v200403.Relationship)",
            "org.apache.cxf.ws.addressing.VersionTransformer:void putAll(java.util.Map,java.util.Map)"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] processResult(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] doInvoke(org.apache.cxf.endpoint.ClientCallback,org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.ClientImpl:void onMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.feature.validation.DefaultSchemaValidationTypeProvider:void <init>(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.helpers.MapNamespaceContext:void addNamespaces(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor:void setMethodRolesMap(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.security.SecureAnnotationsInterceptor:void setSecuredObject(java.lang.Object)"
        ]
    },
    "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.RelatesToType convert(org.apache.cxf.ws.addressing.v200408.Relationship)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.RelatesToType convert(org.apache.cxf.ws.addressing.v200403.Relationship)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.addressing.VersionTransformer:void putAll(java.util.Map,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.v200408.AttributedURI convert(org.apache.cxf.ws.addressing.AttributedURIType)",
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.v200403.AttributedURI convertTo200403(org.apache.cxf.ws.addressing.AttributedURIType)",
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.AttributedURIType convert(org.apache.cxf.ws.addressing.v200408.AttributedURI)",
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.AttributedURIType convert(org.apache.cxf.ws.addressing.v200403.AttributedURI)",
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.v200408.EndpointReferenceType convert(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.v200403.EndpointReferenceType convertTo200403(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.EndpointReferenceType convert(org.apache.cxf.ws.addressing.v200408.EndpointReferenceType)",
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.EndpointReferenceType convert(org.apache.cxf.ws.addressing.v200403.EndpointReferenceType)",
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.v200408.Relationship convert(org.apache.cxf.ws.addressing.RelatesToType)",
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.v200403.Relationship convertTo200403(org.apache.cxf.ws.addressing.RelatesToType)"
        ]
    },
    "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:boolean isEmpty()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.blueprint.ConfigurerImpl:void configureWithWildCard(java.lang.String,java.lang.Object)",
            "org.apache.cxf.common.util.CacheMap:boolean isEmpty()",
            "org.apache.cxf.common.util.WeakIdentityHashMap:boolean isEmpty()",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureWithWildCard(java.lang.String,java.lang.Object)",
            "org.apache.cxf.interceptor.security.SecureAnnotationsInterceptor:void findRoles(java.lang.Class,java.util.Map)",
            "org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor:boolean isUserInRole(org.apache.cxf.security.SecurityContext,java.util.List,boolean)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getFirstMessagePart()",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadAndRegister(org.apache.cxf.bus.extension.Extension)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void initialize()",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void activateAll()",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void activateAllByType(java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:java.lang.Object getExtension(java.lang.String,java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:java.lang.Object getBeanOfType(java.lang.String,java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:java.util.Collection getBeansOfType(java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)"
        ]
    },
    "org.apache.cxf.bus.osgi.OSGiBeanLocator:java.util.Collection getBeansOfType(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:java.util.Collection getBeansOfType(java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:java.lang.Object getExtension(java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void initialize()",
            "org.apache.cxf.bus.managers.CXFBusLifeCycleManager:void initComplete()",
            "org.apache.cxf.bus.managers.ClientLifeCycleManagerImpl:void <init>(org.apache.cxf.Bus)",
            "org.apache.cxf.bus.managers.ServerLifeCycleManagerImpl:void <init>(org.apache.cxf.Bus)",
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.bus.osgi.OSGiBeanLocator:java.util.Collection getBeansOfType(java.lang.Class)",
            "org.apache.cxf.bus.resource.ResourceManagerImpl:void onFirstResolve()",
            "org.apache.cxf.bus.spring.SpringBeanLocator:java.util.Collection getBeansOfType(java.lang.Class)",
            "org.apache.cxf.service.factory.FactoryBeanListenerManager:void setBus(org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.interceptor.AttachmentOutInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.security.DelegatingAuthenticationInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.attachment.LazyDataSource:java.lang.String getContentType()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.LazyDataSource:java.lang.String getContentType()"
        ]
    },
    "org.apache.cxf.attachment.LazyDataSource:java.io.InputStream getInputStream()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.AttachmentDeserializer:void cacheStreamedAttachments()",
            "org.apache.cxf.attachment.ImageDataContentHandler:java.lang.Object getContent(javax.activation.DataSource)",
            "org.apache.cxf.attachment.LazyDataSource:java.io.InputStream getInputStream()",
            "org.apache.cxf.databinding.source.XMLStreamDataWriter:void write(java.lang.Object,javax.xml.stream.XMLStreamWriter)"
        ]
    },
    "org.apache.cxf.attachment.LazyDataSource:java.lang.String getName()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.LazyDataSource:java.lang.String getName()"
        ]
    },
    "org.apache.cxf.attachment.LazyDataSource:java.io.OutputStream getOutputStream()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.LazyDataSource:java.io.OutputStream getOutputStream()"
        ]
    },
    "org.apache.cxf.attachment.LazyDataSource:javax.activation.DataSource getDataSource()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.binding.AbstractBindingFactory:void <init>(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.binding.AbstractBindingFactory:void <init>(org.apache.cxf.Bus,java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.binding.AbstractBindingFactory:void setBus(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.binding.AbstractBindingFactory:void setActivationNamespaces(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.osgi.OSGiBeanLocator:java.util.List getBeanNamesOfType(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:java.util.List getBeanNamesOfType(java.lang.Class)",
            "org.apache.cxf.bus.osgi.OSGiBeanLocator:java.util.List getBeanNamesOfType(java.lang.Class)",
            "org.apache.cxf.bus.spring.SpringBeanLocator:java.util.List getBeanNamesOfType(java.lang.Class)"
        ]
    },
    "org.apache.cxf.bus.spring.SpringBeanLocator:java.util.List getBeanNamesOfType(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:java.util.List getBeanNamesOfType(java.lang.Class)",
            "org.apache.cxf.bus.osgi.OSGiBeanLocator:java.util.List getBeanNamesOfType(java.lang.Class)",
            "org.apache.cxf.bus.spring.SpringBeanLocator:java.util.List getBeanNamesOfType(java.lang.Class)"
        ]
    },
    "org.apache.cxf.bus.extension.ExtensionManagerBus:java.lang.Object getExtension(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.AbstractBindingFactory:void registerWithBindingManager()",
            "org.apache.cxf.bus.blueprint.BlueprintBus:void setBundleContext(org.osgi.framework.BundleContext)",
            "org.apache.cxf.bus.blueprint.BlueprintBus:void setBlueprintContainer(org.osgi.service.blueprint.container.BlueprintContainer)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void <init>(java.util.Map,java.util.Map,java.lang.ClassLoader)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void initialize()",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void shutdown(boolean)",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl:org.apache.cxf.binding.BindingFactory loadAll(java.lang.String)",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl:org.apache.cxf.binding.BindingFactory loadDefaultNamespace(java.lang.String)",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl:org.apache.cxf.binding.BindingFactory loadActivationNamespace(java.lang.String)",
            "org.apache.cxf.bus.managers.CXFBusLifeCycleManager:void initComplete()",
            "org.apache.cxf.bus.managers.ClientLifeCycleManagerImpl:void <init>(org.apache.cxf.Bus)",
            "org.apache.cxf.bus.managers.ServerLifeCycleManagerImpl:void <init>(org.apache.cxf.Bus)",
            "org.apache.cxf.bus.managers.ServerRegistryImpl:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.bus.osgi.OSGIBusListener:void <init>(org.apache.cxf.Bus,java.lang.Object[])",
            "org.apache.cxf.bus.osgi.OSGIBusListener:void registerConfiguredBeanLocator()",
            "org.apache.cxf.bus.osgi.OSGIBusListener:void initComplete()",
            "org.apache.cxf.bus.osgi.OSGIBusListener:void registerServerLifecycleListeners()",
            "org.apache.cxf.bus.osgi.OSGIBusListener:void registerClientLifeCycleListeners()",
            "org.apache.cxf.bus.osgi.OSGIBusListener:boolean isExcluded(org.osgi.framework.ServiceReference)",
            "org.apache.cxf.bus.osgi.OSGIBusListener:void registerBusAsService()",
            "org.apache.cxf.bus.resource.ResourceManagerImpl:void onFirstResolve()",
            "org.apache.cxf.bus.spring.Jsr250BeanPostProcessor:org.apache.cxf.resource.ResourceManager getResourceManager(java.lang.Object)",
            "org.apache.cxf.bus.spring.SpringBeanLocator:void <init>(org.springframework.context.ApplicationContext,org.apache.cxf.Bus)",
            "org.apache.cxf.bus.spring.SpringBus:void setApplicationContext(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.bus.spring.SpringBus:java.lang.String getId()",
            "org.apache.cxf.bus.spring.SpringBusFactory:void registerApplicationContextLifeCycleListener(org.apache.cxf.Bus,org.springframework.context.ConfigurableApplicationContext)",
            "org.apache.cxf.catalog.OASISCatalogManager:org.apache.cxf.catalog.OASISCatalogManager getCatalogManager(org.apache.cxf.Bus)",
            "org.apache.cxf.configuration.jsse.TLSParameterJaxBUtils:java.io.InputStream getResourceAsStream(java.lang.String)",
            "org.apache.cxf.endpoint.AbstractConduitSelector:org.apache.cxf.transport.Conduit getSelectedConduit(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ClientImpl:void destroy()",
            "org.apache.cxf.endpoint.ClientImpl:void notifyLifecycleManager()",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] doInvoke(org.apache.cxf.endpoint.ClientCallback,org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.ClientImpl:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ClientImpl:org.apache.cxf.phase.PhaseInterceptorChain setupInterceptorChain(org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.endpoint.EndpointImpl:void createBinding(org.apache.cxf.service.model.BindingInfo)",
            "org.apache.cxf.endpoint.ManagedEndpoint:void start()",
            "org.apache.cxf.endpoint.ManagedEndpoint:void stopServer(org.apache.cxf.endpoint.Server)",
            "org.apache.cxf.endpoint.ServerImpl:void initDestination(org.apache.cxf.transport.DestinationFactory)",
            "org.apache.cxf.endpoint.ServerImpl:void start()",
            "org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver:void <init>(org.apache.cxf.Bus)",
            "org.apache.cxf.interceptor.ClientOutFaultObserver:java.util.SortedSet getPhases()",
            "org.apache.cxf.interceptor.InFaultChainInitiatorObserver:java.util.SortedSet getPhases()",
            "org.apache.cxf.interceptor.OneWayProcessorInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.OutFaultChainInitiatorObserver:java.util.SortedSet getPhases()",
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:org.apache.cxf.interceptor.InterceptorChain getOutInterceptorChain(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:org.apache.cxf.phase.PhaseInterceptorChain getChain(org.apache.cxf.message.Exchange,org.apache.cxf.phase.PhaseChainCache)",
            "org.apache.cxf.service.factory.AbstractServiceFactoryBean:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.service.factory.AbstractServiceFactoryBean:void fillDataBindingSchemas()",
            "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void addEndpointProperties(org.apache.cxf.endpoint.Endpoint,org.apache.cxf.Bus,org.apache.cxf.annotations.EndpointProperty[])",
            "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void setDataBinding(org.apache.cxf.service.factory.AbstractServiceFactoryBean,org.apache.cxf.annotations.DataBinding)",
            "org.apache.cxf.service.factory.FactoryBeanListenerManager:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.service.invoker.PerRequestFactory:java.lang.Object create(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.service.invoker.spring.SpringBeanFactory:java.lang.Object create(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.transport.ChainInitiationObserver:void <init>(org.apache.cxf.endpoint.Endpoint,org.apache.cxf.Bus)",
            "org.apache.cxf.transport.ChainInitiationObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.MultipleEndpointObserver:void <init>(org.apache.cxf.Bus)",
            "org.apache.cxf.transport.MultipleEndpointObserver:org.apache.cxf.phase.PhaseInterceptorChain createChain()",
            "org.apache.cxf.transport.TransportFinder:void <init>(org.apache.cxf.Bus,java.util.Map,java.util.Set,java.lang.Class)",
            "org.apache.cxf.transport.TransportURIResolver:org.xml.sax.InputSource resolve(java.lang.String,java.lang.String)",
            "org.apache.cxf.ws.addressing.ContextUtils$1:org.apache.cxf.transport.Conduit getBackChannel(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils$SchemaLSResourceResolver:org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:org.apache.cxf.ws.addressing.EndpointReferenceType resolve(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:org.apache.cxf.ws.addressing.EndpointReferenceType renew(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:org.apache.cxf.ws.addressing.EndpointReferenceType mint(javax.xml.namespace.QName,org.apache.cxf.Bus)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:org.apache.cxf.ws.addressing.EndpointReferenceType mint(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:org.apache.cxf.transport.MultiplexDestination getMatchingMultiplexDestination(javax.xml.namespace.QName,java.lang.String,org.apache.cxf.Bus)",
            "org.apache.cxf.ws.addressing.MAPAggregator:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.addressing.WSAddressingFeature:void initializeProvider(org.apache.cxf.interceptor.InterceptorProvider,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.bus.managers.ClientLifeCycleManagerImpl:void <init>(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.managers.ServerLifeCycleManagerImpl:void <init>(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.resource.ResourceManagerImpl:void onFirstResolve()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.resource.DefaultResourceManager:java.lang.Object findResource(java.lang.String,java.lang.Class,boolean,java.util.List)"
        ]
    },
    "org.apache.cxf.bus.managers.BindingFactoryManagerImpl:org.apache.cxf.binding.BindingFactory loadAll(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl:org.apache.cxf.binding.BindingFactory getBindingFactory(java.lang.String)"
        ]
    },
    "org.apache.cxf.bus.managers.BindingFactoryManagerImpl:org.apache.cxf.binding.BindingFactory loadDefaultNamespace(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl:org.apache.cxf.binding.BindingFactory getBindingFactory(java.lang.String)"
        ]
    },
    "org.apache.cxf.bus.managers.BindingFactoryManagerImpl:org.apache.cxf.binding.BindingFactory loadActivationNamespace(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl:org.apache.cxf.binding.BindingFactory getBindingFactory(java.lang.String)"
        ]
    },
    "org.apache.cxf.bus.osgi.OSGiBeanLocator:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl:org.apache.cxf.binding.BindingFactory loadAll(java.lang.String)",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl:org.apache.cxf.binding.BindingFactory loadDefaultNamespace(java.lang.String)",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl:org.apache.cxf.binding.BindingFactory loadActivationNamespace(java.lang.String)",
            "org.apache.cxf.bus.osgi.OSGiBeanLocator:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)",
            "org.apache.cxf.bus.spring.SpringBeanLocator:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)",
            "org.apache.cxf.transport.TransportFinder:void loadAll()",
            "org.apache.cxf.transport.TransportFinder:java.lang.Object loadActivationNamespaces(java.lang.String)",
            "org.apache.cxf.transport.TransportFinder:java.lang.Object loadDefaultURIs(java.lang.String)",
            "org.apache.cxf.transport.TransportFinder:java.lang.Object loadDefaultNamespace(java.lang.String)",
            "org.apache.cxf.transport.TransportFinder:java.lang.Object loadNoDefaultNamespace(java.lang.String)"
        ]
    },
    "org.apache.cxf.transport.TransportFinder:void loadAll()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.TransportFinder:java.lang.Object findTransportForNamespace(java.lang.String)",
            "org.apache.cxf.transport.TransportFinder:java.lang.Object findTransportForURI(java.lang.String)"
        ]
    },
    "org.apache.cxf.transport.TransportFinder:java.lang.Object loadActivationNamespaces(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.TransportFinder:java.lang.Object findTransportForNamespace(java.lang.String)"
        ]
    },
    "org.apache.cxf.transport.TransportFinder:java.lang.Object loadDefaultURIs(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.TransportFinder:java.lang.Object findTransportForURI(java.lang.String)"
        ]
    },
    "org.apache.cxf.transport.TransportFinder:java.lang.Object loadDefaultNamespace(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.TransportFinder:java.lang.Object findTransportForNamespace(java.lang.String)"
        ]
    },
    "org.apache.cxf.transport.TransportFinder:java.lang.Object loadNoDefaultNamespace(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.TransportFinder:java.lang.Object findTransportForNamespace(java.lang.String)"
        ]
    },
    "org.apache.cxf.bus.managers.BindingFactoryManagerImpl$3:boolean loadBean(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)",
            "org.apache.cxf.bus.spring.SpringBeanLocator:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)"
        ]
    },
    "org.apache.cxf.bus.osgi.OSGiBeanLocator:boolean hasConfiguredPropertyValue(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:boolean hasConfiguredPropertyValue(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl$3:boolean loadBean(java.lang.String,java.lang.Class)",
            "org.apache.cxf.bus.osgi.OSGiBeanLocator:boolean hasConfiguredPropertyValue(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.bus.spring.SpringBeanLocator:boolean hasConfiguredPropertyValue(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.transport.TransportFinder$2:boolean loadBean(java.lang.String,java.lang.Class)"
        ]
    },
    "org.apache.cxf.transport.TransportFinder$2:boolean loadBean(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)",
            "org.apache.cxf.bus.spring.SpringBeanLocator:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)"
        ]
    },
    "org.apache.cxf.bus.blueprint.ConfigurerImpl:void <init>(org.osgi.service.blueprint.container.BlueprintContainer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.blueprint.BlueprintBus:void setBlueprintContainer(org.osgi.service.blueprint.container.BlueprintContainer)"
        ]
    },
    "org.apache.cxf.bus.blueprint.ConfigurerImpl:void configureBean(java.lang.String,java.lang.Object,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.blueprint.ConfigurerImpl:void configureBean(java.lang.Object)",
            "org.apache.cxf.bus.blueprint.ConfigurerImpl:void configureBean(java.lang.String,java.lang.Object)",
            "org.apache.cxf.bus.blueprint.ConfigurerImpl:void configureWithWildCard(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.cxf.common.logging.Log4jLogger$HandlerWrapper:void append(org.apache.log4j.spi.LoggingEvent)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.util.PackageUtils:java.lang.String combine(java.util.List,char)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.PackageUtils:java.lang.String getPackageNameByNameSpaceURI(java.lang.String)"
        ]
    },
    "org.apache.cxf.common.util.PropertyUtils:boolean isTrue(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.osgi.OSGiBeanLocator:void <init>(org.apache.cxf.configuration.ConfiguredBeanLocator,org.osgi.framework.BundleContext)",
            "org.apache.cxf.bus.osgi.OSGiBeanLocator:java.util.List getBeansFromOsgiService(java.lang.Class)",
            "org.apache.cxf.common.util.PropertyUtils:boolean isTrue(java.util.Map,java.lang.String)",
            "org.apache.cxf.message.MessageUtils:boolean isTrue(java.lang.Object)",
            "org.apache.cxf.message.MessageUtils:boolean getContextualBoolean(org.apache.cxf.message.Message,java.lang.String,boolean)"
        ]
    },
    "org.apache.cxf.common.util.PropertyUtils:boolean isFalse(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.PropertyUtils:boolean isFalse(java.util.Map,java.lang.String)",
            "org.apache.cxf.interceptor.AbstractLoggingInterceptor:boolean isLoggingDisabledNow(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.common.util.PropertyUtils:java.lang.Long getLong(org.apache.cxf.message.Message,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:void waitResponse(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamReader configureReader(javax.xml.stream.XMLStreamReader,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String[] getCiphersuitesToInclude(java.util.List,org.apache.cxf.configuration.security.FiltersType,java.lang.String[],java.lang.String[],java.util.logging.Logger)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.endpoint.ClientImpl:boolean isThreadLocalRequestContext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:java.util.Map getRequestContext()"
        ]
    },
    "org.apache.cxf.helpers.ServiceUtils:org.apache.cxf.annotations.SchemaValidation$SchemaValidationType getSchemaValidationType(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.ServiceUtils:org.apache.cxf.annotations.SchemaValidation$SchemaValidationType getOverrideSchemaValidationType(org.apache.cxf.message.Message)",
            "org.apache.cxf.helpers.ServiceUtils:org.apache.cxf.annotations.SchemaValidation$SchemaValidationType getSchemaValidationTypeFromModel(org.apache.cxf.service.model.AbstractPropertiesHolder)"
        ]
    },
    "org.apache.cxf.bus.CXFBusFactory:org.apache.cxf.Bus createBus(java.util.Map,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.CXFBusFactory:org.apache.cxf.Bus createBus(java.util.Map)"
        ]
    },
    "org.apache.cxf.bus.spring.SpringBus:void setApplicationContext(org.springframework.context.ApplicationContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor:org.apache.cxf.Bus getBusForName(java.lang.String,org.springframework.context.ApplicationContext,boolean)"
        ]
    },
    "org.apache.cxf.bus.spring.SpringBus:void onApplicationEvent(org.springframework.context.ApplicationEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.SpringBus$1:void onApplicationEvent(org.springframework.context.ApplicationEvent)"
        ]
    },
    "org.apache.cxf.bus.extension.ExtensionManagerBus:void doInitializeInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void initialize()"
        ]
    },
    "org.apache.cxf.bus.extension.ExtensionManagerBus:void setFeatures(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.BusDefinitionParser$BusConfig:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.bus.spring.BusDefinitionParser$BusConfig:void setFeatures(java.util.Collection)"
        ]
    },
    "org.apache.cxf.bus.extension.ExtensionManagerImpl:void <init>(java.lang.ClassLoader,java.util.Map,org.apache.cxf.resource.ResourceManager,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.extension.ExtensionManagerImpl:void <init>(java.lang.String,java.lang.ClassLoader,java.util.Map,org.apache.cxf.resource.ResourceManager,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:void <init>(org.apache.cxf.configuration.ConfiguredBeanLocator,org.osgi.service.blueprint.container.BlueprintContainer,org.osgi.framework.BundleContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.blueprint.BlueprintBus:void setBlueprintContainer(org.osgi.service.blueprint.container.BlueprintContainer)"
        ]
    },
    "org.apache.cxf.bus.spring.SpringBeanLocator:void <init>(org.springframework.context.ApplicationContext,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.SpringBeanLocator:void <init>(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.bus.spring.SpringBus:void setApplicationContext(org.springframework.context.ApplicationContext)"
        ]
    },
    "org.apache.cxf.bus.extension.ExtensionManagerImpl:void load(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void load(java.lang.String[])"
        ]
    },
    "org.apache.cxf.bus.extension.ExtensionManagerBus:void destroyBeans()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void shutdown(boolean)",
            "org.apache.cxf.bus.spring.SpringBus:void destroyBeans()"
        ]
    },
    "org.apache.cxf.bus.osgi.CXFActivator:void stop(org.osgi.framework.BundleContext)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.osgi.CXFExtensionBundleListener:void unregister(long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.osgi.CXFExtensionBundleListener:void bundleChanged(org.osgi.framework.BundleEvent)",
            "org.apache.cxf.bus.osgi.CXFExtensionBundleListener:void shutdown()"
        ]
    },
    "org.apache.cxf.bus.osgi.CXFActivator:void start(org.osgi.framework.BundleContext)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.managers.BindingFactoryManagerImpl$1:boolean beanLoaded(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)",
            "org.apache.cxf.bus.spring.SpringBeanLocator:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)"
        ]
    },
    "org.apache.cxf.bus.managers.CXFBusLifeCycleManager:void registerLifeCycleListener(org.apache.cxf.buslifecycle.BusLifeCycleListener)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.managers.ServerRegistryImpl:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.bus.osgi.OSGIBusListener:void <init>(org.apache.cxf.Bus,java.lang.Object[])",
            "org.apache.cxf.bus.spring.SpringBusFactory:void registerApplicationContextLifeCycleListener(org.apache.cxf.Bus,org.springframework.context.ConfigurableApplicationContext)"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:void notifyLifecycleManager()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:void <init>(org.apache.cxf.Bus,org.apache.cxf.endpoint.Endpoint,org.apache.cxf.endpoint.ConduitSelector)",
            "org.apache.cxf.endpoint.ClientImpl:void <init>(org.apache.cxf.Bus,org.apache.cxf.service.Service,javax.xml.namespace.QName,org.apache.cxf.endpoint.EndpointImplFactory)"
        ]
    },
    "org.apache.cxf.ws.addressing.EndpointReferenceUtils:org.apache.cxf.ws.addressing.EndpointReferenceType resolve(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.addressing.EndpointReferenceUtils:org.apache.cxf.ws.addressing.EndpointReferenceType renew(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.addressing.EndpointReferenceUtils:org.apache.cxf.ws.addressing.EndpointReferenceType mint(javax.xml.namespace.QName,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.addressing.EndpointReferenceUtils:org.apache.cxf.ws.addressing.EndpointReferenceType mint(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.AbstractMultiplexDestination:org.apache.cxf.ws.addressing.EndpointReferenceType getAddressWithId(java.lang.String)"
        ]
    },
    "org.apache.cxf.endpoint.ServerImpl:void start()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ManagedEndpoint:void start()"
        ]
    },
    "org.apache.cxf.bus.managers.WorkQueueManagerImpl:void <init>(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.managers.WorkQueueManagerImpl$WQLifecycleListener:void preShutdown()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.managers.CXFBusLifeCycleManager:void preShutdown()"
        ]
    },
    "org.apache.cxf.bus.managers.WorkQueueManagerImplMBeanWrapper:void shutdown(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.osgi.CXFExtensionBundleListener:void register(org.osgi.framework.Bundle)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.osgi.CXFExtensionBundleListener:void registerExistingBundles(org.osgi.framework.BundleContext)",
            "org.apache.cxf.bus.osgi.CXFExtensionBundleListener:void bundleChanged(org.osgi.framework.BundleEvent)"
        ]
    },
    "org.apache.cxf.bus.osgi.OSGIBusListener:void initComplete()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.managers.CXFBusLifeCycleManager:void registerLifeCycleListener(org.apache.cxf.buslifecycle.BusLifeCycleListener)",
            "org.apache.cxf.bus.managers.CXFBusLifeCycleManager:void initComplete()"
        ]
    },
    "org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor:void postProcessBeanFactory(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor:org.apache.cxf.Bus addDefaultBus(org.springframework.context.ApplicationContext)"
        ]
    },
    "org.apache.cxf.common.annotation.AnnotationProcessor:void accept(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.annotation.AnnotationProcessor:void accept(org.apache.cxf.common.'annotation'.AnnotationVisitor)",
            "org.apache.cxf.common.injection.ResourceInjector:void inject(java.lang.Object,java.lang.Class)"
        ]
    },
    "org.apache.cxf.common.injection.ResourceInjector:void construct(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadAndRegister(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.spring.Jsr250BeanPostProcessor:java.lang.Object postProcessAfterInitialization(java.lang.Object,java.lang.String)",
            "org.apache.cxf.service.invoker.PerRequestFactory:java.lang.Object create(org.apache.cxf.message.Exchange)"
        ]
    },
    "org.apache.cxf.common.injection.ResourceInjector:void construct(java.lang.Object,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.injection.ResourceInjector:void destroy(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void destroyBeans()",
            "org.apache.cxf.bus.spring.Jsr250BeanPostProcessor:void postProcessBeforeDestruction(java.lang.Object,java.lang.String)"
        ]
    },
    "org.apache.cxf.common.jaxb.JAXBContextCache:org.apache.cxf.common.jaxb.JAXBContextCache$CachedContextAndSchemas getCachedContextAndSchemas(java.lang.Class[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.jaxb.JAXBContextCache:org.apache.cxf.common.jaxb.JAXBContextCache$CachedContextAndSchemas getCachedContextAndSchemas(java.lang.String,java.util.Map,java.lang.ClassLoader)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.configuration.jsse.TLSClientParametersConfig:javax.xml.bind.JAXBContext getContext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.jsse.TLSClientParametersConfig:java.lang.Object createTLSClientParameters(java.lang.String)"
        ]
    },
    "org.apache.cxf.ws.addressing.ContextUtils:javax.xml.bind.JAXBContext getJAXBContext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.VersionTransformer:javax.xml.bind.JAXBContext getExposedJAXBContext(java.lang.String)"
        ]
    },
    "org.apache.cxf.ws.addressing.EndpointReferenceUtils:javax.xml.bind.JAXBContext createContextForEPR()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:javax.xml.bind.JAXBContext getJAXBContextForEPR()"
        ]
    },
    "org.apache.cxf.common.jaxb.JAXBUtils:java.lang.String nameToIdentifier(java.lang.String,org.apache.cxf.common.jaxb.JAXBUtils$IdentifierType)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.jaxb.JAXBUtils:void scanPackages(java.util.Set,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.jaxb.JAXBContextCache:void scanPackages(java.util.Set)"
        ]
    },
    "org.apache.cxf.catalog.OASISCatalogManager:void loadCatalogs(java.lang.ClassLoader,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.catalog.OASISCatalogManager:void loadContextCatalogs(java.lang.String)"
        ]
    },
    "org.apache.cxf.common.classloader.ClassLoaderUtils:java.util.List getResources(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.classloader.ClassLoaderUtils:java.util.List getResources(java.lang.String,java.lang.Class)"
        ]
    },
    "org.apache.cxf.common.logging.Log4jLogger:java.util.logging.Handler[] getHandlers()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:void run()"
        ]
    },
    "org.apache.cxf.common.util.PropertiesLoaderUtils:java.util.Properties loadAllProperties(java.lang.String,java.lang.ClassLoader,java.util.logging.Logger,java.util.logging.Level,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.PropertiesLoaderUtils:java.util.Properties loadAllProperties(java.lang.String,java.lang.ClassLoader)"
        ]
    },
    "org.apache.cxf.interceptor.security.DefaultSecurityContext:boolean checkGroup(java.security.acl.Group,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.security.DefaultSecurityContext:boolean isUserInRole(java.lang.String)",
            "org.apache.cxf.interceptor.security.DefaultSecurityContext:boolean checkGroup(java.security.acl.Group,java.lang.String)"
        ]
    },
    "org.apache.cxf.common.util.CacheMap:java.util.Set entrySet()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.AttachmentSerializer:void writeHeaders(java.lang.String,java.lang.String,java.util.Map,java.io.Writer)",
            "org.apache.cxf.attachment.AttachmentUtil:org.apache.cxf.message.Attachment createAttachment(java.io.InputStream,java.util.Map)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:void putAll(java.util.Map)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void <init>(java.lang.String[],java.lang.ClassLoader,java.util.Map,org.apache.cxf.resource.ResourceManager,org.apache.cxf.Bus)",
            "org.apache.cxf.common.jaxb.JAXBContextCache:org.apache.cxf.common.jaxb.JAXBContextCache$CachedContextAndSchemas getCachedContextAndSchemas(java.util.Set,java.lang.String,java.util.Map,java.util.Collection,boolean)",
            "org.apache.cxf.common.util.CacheMap:void updateMainDataMap()",
            "org.apache.cxf.common.util.CacheMap:java.util.Set entrySet()",
            "org.apache.cxf.common.util.CacheMap:void putAll(java.util.Map)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.util.Set entrySet()",
            "org.apache.cxf.databinding.AbstractDataBinding:void checkNamespaceMap(java.util.Map)",
            "org.apache.cxf.helpers.MapNamespaceContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor:java.util.Map parseRolesMap(java.util.Map)",
            "org.apache.cxf.message.ExchangeImpl:void putAll(java.util.Map)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:void setDelegate(org.apache.cxf.service.model.AbstractPropertiesHolder,boolean)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.util.Iterator getPrefixes(java.lang.String)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:java.util.Iterator getPrefixes(java.lang.String)",
            "org.apache.cxf.staxutils.transform.TransformUtils:void convertToQNamesMap(java.util.Map,org.apache.cxf.staxutils.transform.QNamesMap,java.util.Map)",
            "org.apache.cxf.staxutils.transform.TransformUtils:void convertToMapOfElementProperties(java.util.Map,java.util.Map)",
            "org.apache.cxf.validation.BeanValidationProvider:void initFactoryConfig(javax.validation.Configuration,org.apache.cxf.validation.ValidationConfiguration)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils$SchemaLSResourceResolver:org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.common.util.CacheMap:java.lang.Object get(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.BusFactory:org.apache.cxf.BusFactory$BusHolder getThreadBusHolder(boolean)",
            "org.apache.cxf.BusFactory:void setThreadDefaultBus(org.apache.cxf.Bus)",
            "org.apache.cxf.BusFactory:org.apache.cxf.Bus getAndSetThreadDefaultBus(org.apache.cxf.Bus)",
            "org.apache.cxf.BusFactory:org.apache.cxf.Bus getThreadDefaultBus(boolean)",
            "org.apache.cxf.attachment.AttachmentDeserializer:void addHeaderLine(java.util.Map,java.lang.StringBuilder)",
            "org.apache.cxf.attachment.AttachmentImpl:java.lang.String getHeader(java.lang.String)",
            "org.apache.cxf.attachment.AttachmentSerializer:java.lang.String getHeaderValue(java.lang.String,java.lang.String)",
            "org.apache.cxf.attachment.AttachmentUtil:java.lang.String getHeader(java.util.Map,java.lang.String)",
            "org.apache.cxf.attachment.AttachmentUtil:java.lang.String getHeader(java.util.Map,java.lang.String,java.lang.String)",
            "org.apache.cxf.attachment.ContentDisposition:java.lang.String getFilename()",
            "org.apache.cxf.attachment.ContentDisposition:java.lang.String getParameter(java.lang.String)",
            "org.apache.cxf.bus.ManagedBus:javax.management.ObjectName getObjectName()",
            "org.apache.cxf.bus.blueprint.ConfigurerImpl:void initializeWildcardMap()",
            "org.apache.cxf.bus.blueprint.ConfigurerImpl:void configureWithWildCard(java.lang.String,java.lang.Object)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:java.lang.Object getExtension(java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:boolean hasExtensionByName(java.lang.String)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:org.apache.cxf.configuration.ConfiguredBeanLocator createConfiguredBeanLocator()",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:java.lang.String getBusId(java.util.Map)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadAndRegister(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:java.lang.Object getExtension(java.lang.String,java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:java.lang.Object getBeanOfType(java.lang.String,java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:java.util.Collection getBeansOfType(java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:boolean hasConfiguredPropertyValue(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl:org.apache.cxf.binding.BindingFactory getBindingFactory(java.lang.String)",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl:org.apache.cxf.binding.BindingFactory loadAll(java.lang.String)",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl:org.apache.cxf.binding.BindingFactory loadDefaultNamespace(java.lang.String)",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl:org.apache.cxf.binding.BindingFactory loadActivationNamespace(java.lang.String)",
            "org.apache.cxf.bus.managers.ConduitInitiatorManagerImpl:org.apache.cxf.transport.ConduitInitiator getConduitInitiator(java.lang.String)",
            "org.apache.cxf.bus.managers.DestinationFactoryManagerImpl:org.apache.cxf.transport.DestinationFactory getDestinationFactory(java.lang.String)",
            "org.apache.cxf.bus.managers.HeaderManagerImpl:org.apache.cxf.headers.HeaderProcessor getHeaderProcessor(java.lang.String)",
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:org.apache.cxf.workqueue.AutomaticWorkQueue getNamedWorkQueue(java.lang.String)",
            "org.apache.cxf.bus.osgi.ManagedWorkQueueList:void updated(java.lang.String,java.util.Dictionary)",
            "org.apache.cxf.bus.spring.BusEntityResolver:org.xml.sax.InputSource resolveEntity(java.lang.String,java.lang.String)",
            "org.apache.cxf.common.jaxb.JAXBContextCache:org.apache.cxf.common.jaxb.JAXBContextCache$CachedContextAndSchemas getCachedContextAndSchemas(java.util.Set,java.lang.String,java.util.Map,java.util.Collection,boolean)",
            "org.apache.cxf.common.jaxb.JAXBContextCache:javax.xml.bind.JAXBContext createContext(java.util.Set,java.util.Map,java.util.Collection)",
            "org.apache.cxf.common.jaxb.JAXBUtils$1:javax.xml.transform.Result createOutput(java.lang.String,java.lang.String)",
            "org.apache.cxf.common.jaxb.JAXBUtils:java.lang.String builtInTypeToJavaType(java.lang.String)",
            "org.apache.cxf.common.jaxb.JAXBUtils:java.lang.Class holderClass(java.lang.String)",
            "org.apache.cxf.common.jaxb.JAXBUtils:void scanPackages(java.util.Set,java.lang.Class[],java.util.Map)",
            "org.apache.cxf.common.jaxb.NamespaceMapper:java.lang.String getPreferredPrefix(java.lang.String,java.lang.String,boolean)",
            "org.apache.cxf.common.jaxb.SchemaCollectionContextProxy:javax.xml.namespace.QName getTypeQName(java.lang.Class,java.lang.String)",
            "org.apache.cxf.common.logging.Log4jLogger$HandlerWrapper:org.apache.log4j.Priority getThreshold()",
            "org.apache.cxf.common.logging.Log4jLogger:void setLevel(java.util.logging.Level)",
            "org.apache.cxf.common.logging.Log4jLogger:void internalLogFormatted(java.lang.String,java.util.logging.LogRecord)",
            "org.apache.cxf.common.util.ASMHelper:java.lang.String getClassCode(java.lang.Class)",
            "org.apache.cxf.common.util.ASMHelper:org.apache.cxf.common.util.ASMHelper$TypeHelperClassLoader getTypeHelperClassLoader(java.lang.ClassLoader)",
            "org.apache.cxf.common.util.ASMHelper:org.apache.cxf.common.util.ASMHelper$TypeHelperClassLoader getTypeHelperClassLoader(java.lang.Class)",
            "org.apache.cxf.common.util.CacheMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.common.util.PrimitiveUtils:boolean canPrimitiveTypeBeAutoboxed(java.lang.Class,java.lang.Class)",
            "org.apache.cxf.common.util.PropertyUtils:boolean isTrue(java.util.Map,java.lang.String)",
            "org.apache.cxf.common.util.PropertyUtils:boolean isFalse(java.util.Map,java.lang.String)",
            "org.apache.cxf.common.util.StringUtils:java.lang.String[] split(java.lang.String,java.lang.String)",
            "org.apache.cxf.common.util.StringUtils:java.lang.String[] split(java.lang.String,java.lang.String,int)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.common.util.XmlSchemaPrimitiveUtils:java.lang.String getSchemaRepresentation(java.lang.Class,java.lang.String)",
            "org.apache.cxf.common.xmlschema.SchemaCollection:boolean crossImportsAdded(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaType)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void initWildcardDefinitionMap()",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureWithWildCard(java.lang.String,java.lang.Object)",
            "org.apache.cxf.databinding.AbstractDataBinding:void updateSchemaLocation(org.w3c.dom.Element)",
            "org.apache.cxf.databinding.source.mime.MimeSerializer:void serialize(org.apache.ws.commons.schema.XmlSchemaObject,java.lang.Class,org.w3c.dom.Node)",
            "org.apache.cxf.endpoint.ClientImpl$1:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ClientImpl:java.util.Map getRequestContext()",
            "org.apache.cxf.endpoint.ClientImpl:java.util.Map getResponseContext()",
            "org.apache.cxf.endpoint.ClientImpl:boolean isThreadLocalRequestContext()",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] doInvoke(org.apache.cxf.endpoint.ClientCallback,org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.ClientImpl:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.extension.RegistryImpl:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.feature.validation.DefaultSchemaValidationTypeProvider:org.apache.cxf.annotations.SchemaValidation$SchemaValidationType getSchemaValidationType(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.helpers.DOMUtils:javax.xml.parsers.DocumentBuilder getDocumentBuilder()",
            "org.apache.cxf.helpers.HttpHeaderHelper:java.util.List getHeader(java.util.Map,java.lang.String)",
            "org.apache.cxf.helpers.HttpHeaderHelper:java.lang.String getHeaderKey(java.lang.String)",
            "org.apache.cxf.helpers.MapNamespaceContext:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.interceptor.ClientOutFaultObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.FIStaxOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxInInterceptor:javax.xml.stream.XMLInputFactory getXMLInputFactory(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxOutInterceptor:javax.xml.stream.XMLOutputFactory getXMLOutputFactory(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.security.DelegatingAuthenticationInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.security.DelegatingAuthenticationInterceptor:java.lang.String getAuthenticationScheme(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.security.OperationInfoAuthorizingInterceptor:java.util.List getExpectedRoles(java.lang.String)",
            "org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor:boolean isUserInRole(org.apache.cxf.security.SecurityContext,java.util.List,boolean)",
            "org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor:java.util.List getExpectedRoles(java.lang.reflect.Method)",
            "org.apache.cxf.message.MessageImpl:java.lang.Object getContextualProperty(java.lang.String)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void add(org.apache.cxf.interceptor.Interceptor,boolean)",
            "org.apache.cxf.resource.PropertiesResolver:java.lang.Object resolve(java.lang.String,java.lang.Class)",
            "org.apache.cxf.resource.URIResolver:void tryRemote(java.lang.String)",
            "org.apache.cxf.service.factory.SimpleMethodDispatcher:org.apache.cxf.service.model.BindingOperationInfo getBindingOperation(java.lang.reflect.Method,org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.service.factory.SimpleMethodDispatcher:java.lang.reflect.Method getMethod(org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.service.factory.SimpleMethodDispatcher:java.lang.reflect.Method getPrimaryMethod(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:void addMessagePart(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePart(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:java.lang.Object getExtensionAttribute(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.BindingInfo:org.apache.cxf.service.model.BindingOperationInfo getOperation(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.BindingOperationInfo:org.apache.cxf.service.model.BindingFaultInfo getFault(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.InterfaceInfo:org.apache.cxf.service.model.OperationInfo getOperation(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.MessageInfo:java.util.List getOrderedParts(java.util.List)",
            "org.apache.cxf.service.model.OperationInfo:org.apache.cxf.service.model.FaultInfo getFault(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.MessageInfo getMessage(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperationForWrapperElement(org.apache.cxf.message.Exchange,javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.staxutils.PropertiesExpandingStreamReader:java.lang.String expandProperty(java.lang.String)",
            "org.apache.cxf.staxutils.W3CDOMStreamWriter:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.staxutils.transform.InTransformReader:java.lang.String getNamespaceURI(int)",
            "org.apache.cxf.staxutils.transform.InTransformReader:java.lang.String getNamespacePrefix(int)",
            "org.apache.cxf.staxutils.transform.InTransformReader:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.staxutils.transform.InTransformReader:java.lang.String getAttributePrefix(int)",
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void writeNamespace(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void writeDefaultNamespace(java.lang.String)",
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void setDefaultNamespace(java.lang.String)",
            "org.apache.cxf.staxutils.validation.ResolvingGrammarReaderController:org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.transport.AbstractMultiplexDestination:java.lang.String getId(java.util.Map)",
            "org.apache.cxf.transport.TransportFinder:java.lang.Object findTransportForNamespace(java.lang.String)",
            "org.apache.cxf.transport.TransportFinder:java.lang.Object loadActivationNamespaces(java.lang.String)",
            "org.apache.cxf.transport.TransportFinder:java.lang.Object loadDefaultNamespace(java.lang.String)",
            "org.apache.cxf.transport.TransportFinder:java.lang.Object loadNoDefaultNamespace(java.lang.String)",
            "org.apache.cxf.transport.common.gzip.GZIPInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.common.gzip.GZIPOutInterceptor:org.apache.cxf.transport.common.gzip.GZIPOutInterceptor$UseGzip gzipPermitted(org.apache.cxf.message.Message,boolean)",
            "org.apache.cxf.transport.common.gzip.GZIPOutInterceptor:void addHeader(org.apache.cxf.message.Message,java.lang.String,java.lang.String)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils$SchemaLSResourceResolver:org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:java.lang.String getWSDLLocation(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:java.lang.String getEndpointReferenceId(java.util.Map)"
        ]
    },
    "org.apache.cxf.common.util.CacheMap:java.util.Set keySet()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.AttachmentImpl:java.util.Iterator getHeaderNames()",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:boolean hasExtensionByName(java.lang.String)",
            "org.apache.cxf.common.util.CacheMap:java.util.Set keySet()",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.util.Set keySet()",
            "org.apache.cxf.message.MessageImpl:java.util.Set getContextualPropertyKeys()",
            "org.apache.cxf.transport.common.gzip.GZIPInInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.common.util.CacheMap:int size()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.CacheMap:int size()",
            "org.apache.cxf.common.util.WeakIdentityHashMap:int size()",
            "org.apache.cxf.message.MessageImpl$1:void putAll(java.util.Map)",
            "org.apache.cxf.service.model.AbstractMessageContainer:void addMessagePart(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo addOutOfBandMessagePart(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.AbstractMessageContainer:int getMessagePartsNumber()",
            "org.apache.cxf.service.model.AbstractMessageContainer:int size()",
            "org.apache.cxf.service.model.OperationInfo:boolean hasFaults()",
            "org.apache.cxf.staxutils.transform.InTransformReader:void <init>(javax.xml.stream.XMLStreamReader,java.util.Map,java.util.Map,java.util.List,java.util.Map,boolean)",
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void <init>(javax.xml.stream.XMLStreamWriter,java.util.Map,java.util.Map,java.util.List,java.util.Map,boolean,java.lang.String)"
        ]
    },
    "org.apache.cxf.common.util.CacheMap:java.util.Collection values()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.BusFactory:void clearDefaultBusForAnyThread(org.apache.cxf.Bus)",
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:void shutdown(boolean)",
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:void run()",
            "org.apache.cxf.bus.osgi.ManagedWorkQueueList:void addAllToWorkQueueManager(org.apache.cxf.workqueue.WorkQueueManager)",
            "org.apache.cxf.bus.osgi.ManagedWorkQueueList:void shutDown()",
            "org.apache.cxf.common.util.CacheMap:java.util.Collection values()",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.util.Collection values()",
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addOneSchemaCrossImports(org.apache.ws.commons.schema.XmlSchema)",
            "org.apache.cxf.service.model.AbstractMessageContainer:int getMessagePartIndex(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePartByIndex(int)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePart(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.AbstractMessageContainer:java.util.List getMessageParts()",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getFirstMessagePart()",
            "org.apache.cxf.service.model.BindingInfo:java.util.Collection getOperations()",
            "org.apache.cxf.service.model.BindingInfo:org.apache.cxf.service.model.BindingOperationInfo getOperation(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.BindingOperationInfo:java.util.Collection getFaults()",
            "org.apache.cxf.service.model.InterfaceInfo:java.util.Collection getOperations()",
            "org.apache.cxf.service.model.OperationInfo:java.util.Collection getFaults()",
            "org.apache.cxf.staxutils.validation.W3CMultiSchemaFactory:org.codehaus.stax2.validation.XMLValidationSchema loadSchemas(java.lang.String,java.util.Map)",
            "org.apache.cxf.transport.TransportFinder:java.lang.Object checkForURI(java.lang.String)"
        ]
    },
    "org.apache.cxf.common.util.CacheMap:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.logging.Log4jLogger$HandlerWrapper:void append(org.apache.log4j.spi.LoggingEvent)",
            "org.apache.cxf.common.util.CacheMap:java.lang.String toString()",
            "org.apache.cxf.common.util.PackageUtils:java.lang.String combine(java.util.List,char)",
            "org.apache.cxf.common.util.PropertyUtils:boolean isTrue(java.lang.Object)",
            "org.apache.cxf.common.util.PropertyUtils:boolean isFalse(java.lang.Object)",
            "org.apache.cxf.common.util.PropertyUtils:java.lang.Long getLong(org.apache.cxf.message.Message,java.lang.String)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:java.util.List enumeratorValues(org.apache.ws.commons.schema.XmlSchemaSimpleType)",
            "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String[] getCiphersuitesToInclude(java.util.List,org.apache.cxf.configuration.security.FiltersType,java.lang.String[],java.lang.String[],java.util.logging.Logger)",
            "org.apache.cxf.endpoint.ClientImpl:boolean isThreadLocalRequestContext()",
            "org.apache.cxf.helpers.ServiceUtils:org.apache.cxf.annotations.SchemaValidation$SchemaValidationType getSchemaValidationType(java.lang.Object)"
        ]
    },
    "org.apache.cxf.interceptor.security.SecureAnnotationsInterceptor:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.security.SecureAnnotationsInterceptor:void setSecuredObject(java.lang.Object)",
            "org.apache.cxf.interceptor.security.SecureAnnotationsInterceptor:void findRoles(java.lang.Class,java.util.Map)",
            "org.apache.cxf.interceptor.security.SecureAnnotationsInterceptor:void <clinit>()"
        ]
    },
    "org.apache.cxf.phase.AbstractPhaseInterceptor:void setBefore(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.phase.AbstractPhaseInterceptor:void setAfter(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.phase.AbstractPhaseInterceptor:void addBefore(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.security.DepthRestrictingStreamInterceptor:void <init>(java.lang.String,java.util.List,java.util.List)",
            "org.apache.cxf.interceptor.transform.TransformInInterceptor:void <init>(java.lang.String,java.util.List,java.util.List)"
        ]
    },
    "org.apache.cxf.phase.AbstractPhaseInterceptor:void addAfter(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.security.DepthRestrictingStreamInterceptor:void <init>(java.lang.String,java.util.List)",
            "org.apache.cxf.interceptor.transform.TransformInInterceptor:void <init>(java.lang.String,java.util.List)"
        ]
    },
    "org.apache.cxf.common.util.ClasspathScanner:java.util.Map findClasses(java.util.Collection,java.util.List,java.lang.ClassLoader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.ClasspathScanner:java.util.Map findClasses(java.util.Collection,java.util.List)"
        ]
    },
    "org.apache.cxf.common.util.ClasspathScanner:java.util.List findResources(java.util.Collection,java.lang.String,java.lang.ClassLoader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.ClasspathScanner:java.util.List findResources(java.lang.String,java.lang.String,java.lang.ClassLoader)",
            "org.apache.cxf.common.util.ClasspathScanner:java.util.List findResources(java.util.Collection,java.lang.String)"
        ]
    },
    "org.apache.cxf.attachment.AttachmentImpl:java.util.Iterator getHeaderNames()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.AttachmentSerializer:void writeAttachments()"
        ]
    },
    "org.apache.cxf.message.MessageImpl:java.util.Set getContextualPropertyKeys()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.message.AbstractWrappedMessage:java.util.Set getContextualPropertyKeys()"
        ]
    },
    "org.apache.cxf.common.xmlschema.SchemaCollection:void addCrossImports()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.xmlschema.SchemaCollection:void addCrossImportsType(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addOneSchemaCrossImports(org.apache.ws.commons.schema.XmlSchema)",
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addElementCrossImportsElement(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaElement)"
        ]
    },
    "org.apache.cxf.common.xmlschema.SchemaCollection:void addCrossImports(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaContentModel)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addCrossImportsType(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaType)"
        ]
    },
    "org.apache.cxf.common.xmlschema.XmlSchemaUtils:void addImportIfNeeded(org.apache.ws.commons.schema.XmlSchema,javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addOneSchemaCrossImports(org.apache.ws.commons.schema.XmlSchema)",
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addElementCrossImportsElement(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaElement)",
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addCrossImportsType(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaType)",
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addCrossImportsAttributeList(org.apache.ws.commons.schema.XmlSchema,java.util.List)",
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addCrossImports(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaContentModel)"
        ]
    },
    "org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser:void mapElementToJaxbProperty(org.apache.aries.blueprint.ParserContext,org.apache.aries.blueprint.mutable.MutableBeanMetadata,org.w3c.dom.Element,java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser:void mapElementToJaxbProperty(org.apache.aries.blueprint.ParserContext,org.apache.aries.blueprint.mutable.MutableBeanMetadata,org.w3c.dom.Element,javax.xml.namespace.QName,java.lang.String,java.lang.Class)"
        ]
    },
    "org.apache.cxf.internal.CXFAPINamespaceHandler:org.osgi.service.blueprint.reflect.Metadata parse(org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String[] getFilteredCiphersuites(org.apache.cxf.configuration.security.FiltersType,java.lang.String[],java.util.logging.Logger,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String[] getCiphersuitesToInclude(java.util.List,org.apache.cxf.configuration.security.FiltersType,java.lang.String[],java.lang.String[],java.util.logging.Logger)"
        ]
    },
    "org.apache.cxf.configuration.jsse.TLSClientParameters:int hash(int,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.jsse.TLSClientParameters:int hashCode()",
            "org.apache.cxf.configuration.jsse.TLSClientParameters:int hash(int,java.lang.Object[])"
        ]
    },
    "org.apache.cxf.configuration.jsse.TLSParameterJaxBUtils:java.security.KeyStore getKeyStore(org.apache.cxf.configuration.security.CertStoreType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.jsse.TLSParameterJaxBUtils:javax.net.ssl.TrustManager[] getTrustManagers(org.apache.cxf.configuration.security.TrustManagersType)"
        ]
    },
    "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void mapElementToJaxbProperty(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder,java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void mapElementToJaxbProperty(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder,javax.xml.namespace.QName,java.lang.String,java.lang.Class)"
        ]
    },
    "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:org.springframework.beans.factory.support.AbstractBeanDefinition mapElementToJaxbBean(org.w3c.dom.Element,java.lang.Class,java.lang.Class,java.lang.Class,java.lang.String,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void mapElementToJaxbPropertyFactory(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder,java.lang.String,java.lang.Class,java.lang.Class,java.lang.String,java.lang.Object[])",
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:org.springframework.beans.factory.support.AbstractBeanDefinition mapElementToJaxbBean(org.w3c.dom.Element,java.lang.Class,java.lang.Class,java.lang.String,java.lang.Object[])"
        ]
    },
    "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureBean(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadAndRegister(org.apache.cxf.bus.extension.Extension)"
        ]
    },
    "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureBean(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.configuration.spring.ConfigurerImpl:void setApplicationContext(org.springframework.context.ApplicationContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void <init>(org.springframework.context.ApplicationContext)"
        ]
    },
    "org.apache.cxf.databinding.AbstractDataBinding:void setNamespaceMap(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.service.factory.AbstractServiceFactoryBean:void initializeDataBindings()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.databinding.source.XMLStreamDataReader:java.lang.Object read(javax.xml.namespace.QName,javax.xml.stream.XMLStreamReader,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.source.XMLStreamDataReader:java.lang.Object read(org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.databinding.source.XMLStreamDataReader:java.lang.Object read(javax.xml.namespace.QName,java.lang.Object,java.lang.Class)"
        ]
    },
    "org.apache.cxf.databinding.stax.StaxDataBindingFeature:void initialize(org.apache.cxf.endpoint.Client,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.feature.WrappedFeature:void initialize(org.apache.cxf.endpoint.Client,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.databinding.stax.StaxDataBindingFeature:void initialize(org.apache.cxf.endpoint.Server,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.feature.WrappedFeature:void initialize(org.apache.cxf.endpoint.Server,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.common.jaxb.JAXBUtils:void closeUnmarshaller(javax.xml.bind.Unmarshaller)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.jaxb.JAXBUtils:java.lang.Object unmarshall(javax.xml.bind.JAXBContext,org.w3c.dom.Element)",
            "org.apache.cxf.common.jaxb.JAXBUtils:javax.xml.bind.JAXBElement unmarshall(javax.xml.bind.JAXBContext,org.w3c.dom.Element,java.lang.Class)",
            "org.apache.cxf.common.jaxb.JAXBUtils:java.lang.Object unmarshall(javax.xml.bind.JAXBContext,javax.xml.transform.Source)",
            "org.apache.cxf.common.jaxb.JAXBUtils:javax.xml.bind.JAXBElement unmarshall(javax.xml.bind.JAXBContext,javax.xml.stream.XMLStreamReader,java.lang.Class)",
            "org.apache.cxf.common.jaxb.JAXBUtils:java.lang.Object unmarshall(javax.xml.bind.JAXBContext,javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser:void mapElementToJaxbProperty(org.apache.aries.blueprint.ParserContext,org.apache.aries.blueprint.mutable.MutableBeanMetadata,org.w3c.dom.Element,java.lang.String,java.lang.Class)",
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void mapElementToJaxbProperty(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder,java.lang.String,java.lang.Class)",
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:java.lang.Object unmarshalFactoryString(java.lang.String,javax.xml.bind.JAXBContext,java.lang.Class)",
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.EndpointReferenceType parseEndpointReference(org.w3c.dom.Element)"
        ]
    },
    "org.apache.cxf.endpoint.AbstractConduitSelector:org.apache.cxf.transport.Conduit getSelectedConduit(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.AbstractConduitSelector:void complete(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.DeferredConduitSelector:org.apache.cxf.transport.Conduit selectConduit(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.UpfrontConduitSelector:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.UpfrontConduitSelector:org.apache.cxf.transport.Conduit selectConduit(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.endpoint.AbstractConduitSelector:org.apache.cxf.transport.Conduit createConduit(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.transport.ConduitInitiator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.AbstractConduitSelector:org.apache.cxf.transport.Conduit getSelectedConduit(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:void <init>(org.apache.cxf.Bus,org.apache.cxf.service.Service,javax.xml.namespace.QName,org.apache.cxf.endpoint.EndpointImplFactory)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] doInvoke(org.apache.cxf.endpoint.ClientCallback,org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:void invoke(org.apache.cxf.endpoint.ClientCallback,org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:void onMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl$2$1:void run()",
            "org.apache.cxf.endpoint.ClientImpl$2:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void wrapExceptionAsFault(org.apache.cxf.message.Message,java.lang.RuntimeException)"
        ]
    },
    "org.apache.cxf.endpoint.ManagedEndpoint:void stop()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.endpoint.ServerImpl:void destroy()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.managers.ServerRegistryImpl:void preShutdown()",
            "org.apache.cxf.endpoint.ManagedEndpoint:void destroy()"
        ]
    },
    "org.apache.cxf.feature.validation.SchemaValidationFeature:void initialize(org.apache.cxf.endpoint.Server,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.feature.WrappedFeature:void initialize(org.apache.cxf.endpoint.Server,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.feature.validation.SchemaValidationFeature:void initialize(org.apache.cxf.endpoint.Client,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.feature.WrappedFeature:void initialize(org.apache.cxf.endpoint.Client,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.staxutils.transform.OutTransformWriter:void <init>(javax.xml.stream.XMLStreamWriter,java.util.Map,java.util.Map,java.util.List,java.util.Map,boolean,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void <init>(javax.xml.stream.XMLStreamWriter,java.util.Map)",
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void <init>(javax.xml.stream.XMLStreamWriter,java.util.Map,java.util.Map,java.util.List,boolean,java.lang.String)",
            "org.apache.cxf.staxutils.transform.TransformUtils:javax.xml.stream.XMLStreamWriter createTransformWriterIfNeeded(javax.xml.stream.XMLStreamWriter,java.io.OutputStream,java.util.Map,java.util.List,java.util.Map,boolean,java.lang.String)",
            "org.apache.cxf.staxutils.transform.TransformUtils:javax.xml.stream.XMLStreamWriter createTransformWriterIfNeeded(javax.xml.stream.XMLStreamWriter,java.io.OutputStream,java.util.Map,java.util.List,java.util.Map,java.util.Map,boolean,java.lang.String)"
        ]
    },
    "org.apache.cxf.staxutils.W3CDOMStreamWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.OverlayW3CDOMStreamWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.PrettyPrintXMLStreamWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamWriter,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElementEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cxf.staxutils.W3CDOMStreamWriter:void writeEmptyElement(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.staxutils.W3CDOMStreamWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.PrettyPrintXMLStreamWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeAttributeEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.cxf.staxutils.W3CDOMStreamWriter:java.lang.String getPrefix(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.staxutils.PrettyPrintXMLStreamWriter:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:java.lang.String getUniquePrefix(javax.xml.stream.XMLStreamWriter,java.lang.String,boolean)"
        ]
    },
    "org.apache.cxf.staxutils.W3CNamespaceContext:java.lang.String getPrefix(org.w3c.dom.Element,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.W3CNamespaceContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.staxutils.W3CNamespaceContext:java.lang.String getPrefix(org.w3c.dom.Element,java.lang.String)"
        ]
    },
    "org.apache.cxf.interceptor.AnnotationInterceptors:java.util.List getInFaultInterceptors()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.AbstractEndpointFactory:boolean initializeAnnotationInterceptors(org.apache.cxf.interceptor.AnnotationInterceptors,org.apache.cxf.endpoint.Endpoint)"
        ]
    },
    "org.apache.cxf.interceptor.AnnotationInterceptors:java.util.List getInInterceptors()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.AbstractEndpointFactory:boolean initializeAnnotationInterceptors(org.apache.cxf.interceptor.AnnotationInterceptors,org.apache.cxf.endpoint.Endpoint)"
        ]
    },
    "org.apache.cxf.interceptor.AnnotationInterceptors:java.util.List getOutFaultInterceptors()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.AbstractEndpointFactory:boolean initializeAnnotationInterceptors(org.apache.cxf.interceptor.AnnotationInterceptors,org.apache.cxf.endpoint.Endpoint)"
        ]
    },
    "org.apache.cxf.interceptor.AnnotationInterceptors:java.util.List getOutInterceptors()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.AbstractEndpointFactory:boolean initializeAnnotationInterceptors(org.apache.cxf.interceptor.AnnotationInterceptors,org.apache.cxf.endpoint.Endpoint)"
        ]
    },
    "org.apache.cxf.interceptor.ClientFaultConverter:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.security.DelegatingAuthenticationInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.FaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.security.DelegatingAuthenticationInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.InFaultChainInitiatorObserver:void initializeInterceptors(org.apache.cxf.message.Exchange,org.apache.cxf.phase.PhaseInterceptorChain)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver:void onMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.OutFaultChainInitiatorObserver:void initializeInterceptors(org.apache.cxf.message.Exchange,org.apache.cxf.phase.PhaseInterceptorChain)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver:void onMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.OutgoingChainInterceptor:void modifyChain(org.apache.cxf.phase.PhaseInterceptorChain,org.apache.cxf.message.Exchange)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:org.apache.cxf.interceptor.InterceptorChain getOutInterceptorChain(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:org.apache.cxf.phase.PhaseInterceptorChain getChain(org.apache.cxf.message.Exchange,org.apache.cxf.phase.PhaseChainCache)"
        ]
    },
    "org.apache.cxf.interceptor.security.DefaultSecurityContext:void <init>(javax.security.auth.Subject)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.interceptor.security.DefaultSecurityContext:void <init>(java.lang.String,javax.security.auth.Subject)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.security.JAASLoginInterceptor:org.apache.cxf.security.SecurityContext createSecurityContext(java.lang.String,javax.security.auth.Subject)"
        ]
    },
    "org.apache.cxf.interceptor.security.DefaultSecurityContext:void <init>(java.security.Principal,javax.security.auth.Subject)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.security.AbstractSecurityContextInInterceptor:org.apache.cxf.security.SecurityContext createSecurityContext(java.security.Principal,javax.security.auth.Subject)"
        ]
    },
    "org.apache.cxf.interceptor.security.JAASLoginInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.security.DelegatingAuthenticationInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.security.RolePrefixSecurityContextImpl:void <init>(javax.security.auth.Subject,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.security.JAASLoginInterceptor:org.apache.cxf.security.SecurityContext createSecurityContext(java.lang.String,javax.security.auth.Subject)",
            "org.apache.cxf.interceptor.security.RolePrefixSecurityContextImpl:void <init>(javax.security.auth.Subject,java.lang.String)"
        ]
    },
    "org.apache.cxf.interceptor.security.AbstractAuthorizingInInterceptor:boolean authorize(org.apache.cxf.security.SecurityContext,java.lang.reflect.Method)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.security.AbstractAuthorizingInInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.security.OperationInfoAuthorizingInterceptor:boolean authorize(org.apache.cxf.security.SecurityContext,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.security.OperationInfoAuthorizingInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor:void setUserRolesMap(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.interceptor.security.callback.CallbackHandlerTlsCert:javax.security.auth.callback.CallbackHandler create(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.security.JAASLoginInterceptor:javax.security.auth.callback.CallbackHandler getFirstCallbackHandler(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.LoggingInInterceptor:void logInputStream(org.apache.cxf.message.Message,java.io.InputStream,org.apache.cxf.interceptor.LoggingMessage,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.LoggingInInterceptor:void logging(java.util.logging.Logger,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.io.AbstractWrappedOutputStream:void flush()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.AttachmentSerializer:void writeAttachments()",
            "org.apache.cxf.io.AbstractWrappedOutputStream:void flush()",
            "org.apache.cxf.io.CacheAndWriteOutputStream:void closeFlowthroughStream()",
            "org.apache.cxf.io.CacheAndWriteOutputStream:void postClose()",
            "org.apache.cxf.io.CachedOutputStream:void flush()",
            "org.apache.cxf.io.CachedOutputStream:void lockOutputStream()",
            "org.apache.cxf.io.CachedOutputStream:void close()",
            "org.apache.cxf.io.WriteOnCloseOutputStream:void doClose()"
        ]
    },
    "org.apache.cxf.io.CacheAndWriteOutputStream:void closeFlowthroughStream()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.io.CacheAndWriteOutputStream:void postClose()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.io.CachedOutputStream:void close()",
            "org.apache.cxf.io.CachedOutputStream:boolean maybeDeleteTempFile(java.lang.Object)"
        ]
    },
    "org.apache.cxf.io.CachedOutputStream:byte[] getBytes()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.io.CachedOutputStream:void writeCacheTo(java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.io.CachedOutputStream:void writeCacheTo(java.lang.StringBuilder,java.lang.String,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.AbstractLoggingInterceptor:void writePayload(java.lang.StringBuilder,org.apache.cxf.io.CachedOutputStream,java.lang.String,java.lang.String)",
            "org.apache.cxf.io.CachedOutputStream:void writeCacheTo(java.lang.StringBuilder,long)"
        ]
    },
    "org.apache.cxf.io.CachedOutputStream:void writeCacheTo(java.lang.StringBuilder,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.io.CachedOutputStream:void writeCacheTo(java.lang.StringBuilder,java.lang.String,long)",
            "org.apache.cxf.io.CachedOutputStream:void writeCacheTo(java.lang.StringBuilder)"
        ]
    },
    "org.apache.cxf.io.CachedOutputStream:java.io.InputStream getInputStream()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.AttachmentDataSource:void cache(org.apache.cxf.message.Message)",
            "org.apache.cxf.attachment.AttachmentDataSource:java.io.InputStream getInputStream()",
            "org.apache.cxf.attachment.AttachmentDeserializer:void cache(org.apache.cxf.attachment.DelegatingInputStream)",
            "org.apache.cxf.databinding.source.NodeDataReader:java.lang.Object read(javax.xml.namespace.QName,org.w3c.dom.Node,java.lang.Class)",
            "org.apache.cxf.databinding.source.XMLStreamDataReader:java.io.InputStream getInputStream(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.feature.transform.XSLTInInterceptor:void transformXReader(org.apache.cxf.message.Message,javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.feature.transform.XSLTOutInterceptor$XSLTCachedOutputStreamCallback:void onClose(org.apache.cxf.io.CachedOutputStream)",
            "org.apache.cxf.feature.transform.XSLTUtils:java.io.InputStream transform(javax.xml.transform.Templates,java.io.InputStream)",
            "org.apache.cxf.interceptor.AbstractLoggingInterceptor:void writePayload(java.lang.StringBuilder,org.apache.cxf.io.CachedOutputStream,java.lang.String,java.lang.String)",
            "org.apache.cxf.interceptor.LoggingInInterceptor:void logInputStream(org.apache.cxf.message.Message,java.io.InputStream,org.apache.cxf.interceptor.LoggingMessage,java.lang.String,java.lang.String)",
            "org.apache.cxf.io.CachedOutputStream:void resetOut(java.io.OutputStream,boolean)",
            "org.apache.cxf.io.DelegatingInputStream:void cacheInput()"
        ]
    },
    "org.apache.cxf.io.WriteOnCloseOutputStream:void doClose()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.io.CachedOutputStream:void lockOutputStream()",
            "org.apache.cxf.io.CachedOutputStream:void close()"
        ]
    },
    "org.apache.cxf.attachment.AttachmentDataSource:void cache(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.AttachmentDataSource:void hold(org.apache.cxf.message.Message)",
            "org.apache.cxf.attachment.AttachmentDeserializer:void cacheStreamedAttachments()"
        ]
    },
    "org.apache.cxf.interceptor.LoggingOutInterceptor$LoggingCallback:void onClose(org.apache.cxf.io.CachedOutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.io.CachedOutputStream:void lockOutputStream()",
            "org.apache.cxf.io.CachedOutputStream:void close()"
        ]
    },
    "org.apache.cxf.attachment.AttachmentDeserializer:void cache(org.apache.cxf.attachment.DelegatingInputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.AttachmentDeserializer:void cacheStreamedAttachments()"
        ]
    },
    "org.apache.cxf.databinding.source.NodeDataReader:java.lang.Object read(javax.xml.namespace.QName,org.w3c.dom.Node,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.source.NodeDataReader:java.lang.Object read(javax.xml.namespace.QName,java.lang.Object,java.lang.Class)"
        ]
    },
    "org.apache.cxf.databinding.source.XMLStreamDataReader:java.io.InputStream getInputStream(javax.xml.stream.XMLStreamReader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.source.XMLStreamDataReader:java.lang.Object read(javax.xml.namespace.QName,javax.xml.stream.XMLStreamReader,java.lang.Class)"
        ]
    },
    "org.apache.cxf.feature.transform.XSLTInInterceptor:void transformXReader(org.apache.cxf.message.Message,javax.xml.stream.XMLStreamReader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.feature.transform.XSLTInInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.feature.transform.XSLTOutInterceptor$XSLTCachedOutputStreamCallback:void onClose(org.apache.cxf.io.CachedOutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.io.CachedOutputStream:void lockOutputStream()",
            "org.apache.cxf.io.CachedOutputStream:void close()"
        ]
    },
    "org.apache.cxf.feature.transform.XSLTUtils:java.io.InputStream transform(javax.xml.transform.Templates,java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.feature.transform.XSLTInInterceptor:void transformXReader(org.apache.cxf.message.Message,javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.feature.transform.XSLTInInterceptor:void transformIS(org.apache.cxf.message.Message,java.io.InputStream)",
            "org.apache.cxf.feature.transform.XSLTOutInterceptor$XSLTCachedOutputStreamCallback:void onClose(org.apache.cxf.io.CachedOutputStream)"
        ]
    },
    "org.apache.cxf.io.AbstractWrappedOutputStream:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.jaxb.JAXBUtils:void closeUnmarshaller(javax.xml.bind.Unmarshaller)",
            "org.apache.cxf.endpoint.ClientImpl:void destroy()",
            "org.apache.cxf.endpoint.ServerImpl:void stop()",
            "org.apache.cxf.feature.transform.XSLTOutInterceptor$XSLTCachedOutputStreamCallback:void onClose(org.apache.cxf.io.CachedOutputStream)",
            "org.apache.cxf.io.AbstractThresholdOutputStream:void close()",
            "org.apache.cxf.io.AbstractWrappedOutputStream:void close()",
            "org.apache.cxf.io.CacheAndWriteOutputStream:void closeFlowthroughStream()",
            "org.apache.cxf.io.CacheAndWriteOutputStream:void postClose()",
            "org.apache.cxf.io.CachedOutputStream:void close()",
            "org.apache.cxf.io.CachedOutputStream:void resetOut(java.io.OutputStream,boolean)",
            "org.apache.cxf.io.CachedOutputStream:void createFileOutputStream()",
            "org.apache.cxf.io.CachedOutputStream:boolean maybeDeleteTempFile(java.lang.Object)",
            "org.apache.cxf.io.CachedWriter:java.io.OutputStreamWriter createOutputStreamWriter(java.io.File)",
            "org.apache.cxf.transport.AbstractConduit:void close(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.io.CachedOutputStream:void resetOut(java.io.OutputStream,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.LoggingOutInterceptor$LoggingCallback:void onClose(org.apache.cxf.io.CachedOutputStream)",
            "org.apache.cxf.io.WriteOnCloseOutputStream:void doClose()"
        ]
    },
    "org.apache.cxf.io.CachedOutputStream:void createFileOutputStream()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.io.CachedOutputStream:void enforceLimits()"
        ]
    },
    "org.apache.cxf.io.CachedOutputStream:boolean maybeDeleteTempFile(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.io.CachedOutputStream:void close()",
            "org.apache.cxf.io.CachedOutputStream:boolean access$000(org.apache.cxf.io.CachedOutputStream,java.lang.Object)"
        ]
    },
    "org.apache.cxf.io.CachedWriter:java.io.OutputStreamWriter createOutputStreamWriter(java.io.File)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.io.CachedWriter:void createFileOutputStream()"
        ]
    },
    "org.apache.cxf.io.DelegatingInputStream:void cacheInput()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.OneWayProcessorInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.AbstractConduit:void close(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.io.CachedWriter:char[] getChars()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.io.CachedWriter:void writeCacheTo(java.io.Writer)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.io.CachedWriter:void writeCacheTo(java.lang.StringBuilder,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.LoggingInInterceptor:void logReader(org.apache.cxf.message.Message,java.io.Reader,org.apache.cxf.interceptor.LoggingMessage)"
        ]
    },
    "org.apache.cxf.io.CachedWriter:void writeCacheTo(java.lang.StringBuilder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.io.CachedWriter:void writeCacheTo(java.lang.StringBuilder,long)",
            "org.apache.cxf.io.CachedWriter:java.lang.String toString()"
        ]
    },
    "org.apache.cxf.io.CachedWriter:java.io.Reader getReader()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.feature.transform.XSLTOutInterceptor$XSLTCachedWriter:void doClose()",
            "org.apache.cxf.feature.transform.XSLTOutInterceptor$XSLTStreamWriter:void close()",
            "org.apache.cxf.feature.transform.XSLTUtils:java.io.Reader transform(javax.xml.transform.Templates,java.io.Reader)",
            "org.apache.cxf.interceptor.LoggingInInterceptor:void logReader(org.apache.cxf.message.Message,java.io.Reader,org.apache.cxf.interceptor.LoggingMessage)",
            "org.apache.cxf.io.CachedWriter:void resetOut(java.io.Writer,boolean)"
        ]
    },
    "org.apache.cxf.feature.transform.XSLTOutInterceptor$XSLTCachedWriter:void doClose()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.io.CachedWriter:void lockOutputStream()",
            "org.apache.cxf.io.CachedWriter:void close()"
        ]
    },
    "org.apache.cxf.feature.transform.XSLTOutInterceptor$XSLTStreamWriter:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void close()",
            "org.apache.cxf.staxutils.PrettyPrintXMLStreamWriter:void close()",
            "org.apache.cxf.staxutils.StaxUtils:void copy(javax.xml.stream.XMLStreamReader,java.io.OutputStream)",
            "org.apache.cxf.staxutils.StaxUtils:void writeTo(org.w3c.dom.Node,java.io.Writer,int)",
            "org.apache.cxf.staxutils.StaxUtils:void close(javax.xml.stream.XMLStreamWriter)"
        ]
    },
    "org.apache.cxf.feature.transform.XSLTUtils:java.io.Reader transform(javax.xml.transform.Templates,java.io.Reader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.feature.transform.XSLTInInterceptor:void transformReader(org.apache.cxf.message.Message,java.io.Reader)",
            "org.apache.cxf.feature.transform.XSLTOutInterceptor$XSLTCachedWriter:void doClose()",
            "org.apache.cxf.feature.transform.XSLTOutInterceptor$XSLTStreamWriter:void close()"
        ]
    },
    "org.apache.cxf.io.CachedWriter:void resetOut(java.io.Writer,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.io.CachedWriter:void createFileOutputStream()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.io.CachedWriter:void enforceLimits()"
        ]
    },
    "org.apache.cxf.io.CachedWriter:void maybeDeleteTempFile(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.io.CachedWriter:void close()",
            "org.apache.cxf.io.CachedWriter:void access$000(org.apache.cxf.io.CachedWriter,java.lang.Object)"
        ]
    },
    "org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver:void onMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:void wrapExceptionAsFault(org.apache.cxf.message.Message,java.lang.RuntimeException)"
        ]
    },
    "org.apache.cxf.interceptor.OutgoingChainInterceptor:org.apache.cxf.interceptor.InterceptorChain getOutInterceptorChain(org.apache.cxf.message.Exchange)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.phase.PhaseChainCache:org.apache.cxf.phase.PhaseInterceptorChain getChain(java.util.concurrent.atomic.AtomicReference,java.util.SortedSet,java.util.List[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseChainCache:org.apache.cxf.phase.PhaseInterceptorChain get(java.util.SortedSet,java.util.List)",
            "org.apache.cxf.phase.PhaseChainCache:org.apache.cxf.phase.PhaseInterceptorChain get(java.util.SortedSet,java.util.List,java.util.List)",
            "org.apache.cxf.phase.PhaseChainCache:org.apache.cxf.phase.PhaseInterceptorChain get(java.util.SortedSet,java.util.List,java.util.List,java.util.List)",
            "org.apache.cxf.phase.PhaseChainCache:org.apache.cxf.phase.PhaseInterceptorChain get(java.util.SortedSet,java.util.List,java.util.List,java.util.List,java.util.List)",
            "org.apache.cxf.phase.PhaseChainCache:org.apache.cxf.phase.PhaseInterceptorChain get(java.util.SortedSet,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List)"
        ]
    },
    "org.apache.cxf.transport.MultipleEndpointObserver:org.apache.cxf.phase.PhaseInterceptorChain createChain()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.MultipleEndpointObserver:void onMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.phase.PhaseInterceptorChain:void add(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:void modifyChain(org.apache.cxf.interceptor.InterceptorChain,org.apache.cxf.message.Message,boolean)",
            "org.apache.cxf.interceptor.InFaultChainInitiatorObserver:void initializeInterceptors(org.apache.cxf.message.Exchange,org.apache.cxf.phase.PhaseInterceptorChain)",
            "org.apache.cxf.interceptor.InFaultChainInitiatorObserver:void addToChain(org.apache.cxf.phase.PhaseInterceptorChain,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.OutFaultChainInitiatorObserver:void initializeInterceptors(org.apache.cxf.message.Exchange,org.apache.cxf.phase.PhaseInterceptorChain)",
            "org.apache.cxf.interceptor.OutFaultChainInitiatorObserver:void addToChain(org.apache.cxf.phase.PhaseInterceptorChain,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:org.apache.cxf.interceptor.InterceptorChain getOutInterceptorChain(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:void modifyChain(org.apache.cxf.phase.PhaseInterceptorChain,org.apache.cxf.message.Message)",
            "org.apache.cxf.phase.PhaseChainCache:org.apache.cxf.phase.PhaseInterceptorChain getChain(java.util.concurrent.atomic.AtomicReference,java.util.SortedSet,java.util.List[])",
            "org.apache.cxf.transport.ChainInitiationObserver:void addToChain(org.apache.cxf.interceptor.InterceptorChain,org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.MultipleEndpointObserver:void onMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.phase.PhaseInterceptorChain:void add(org.apache.cxf.interceptor.Interceptor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.source.XMLStreamDataReader:javax.xml.stream.XMLStreamReader resetForStreaming(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.interceptor.AttachmentOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.FIStaxInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.FIStaxOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.MessageSenderInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.transform.TransformOutInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.resource.DefaultResourceManager:void <init>(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.resource.DefaultResourceManager:java.lang.Object resolveResource(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.AbstractServiceFactoryBean:void fillDataBindingSchemas()",
            "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void setDataBinding(org.apache.cxf.service.factory.AbstractServiceFactoryBean,org.apache.cxf.annotations.DataBinding)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils$SchemaLSResourceResolver:org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.resource.DefaultResourceManager:java.lang.Object resolveResource(java.lang.String,java.lang.Class,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.injection.ResourceInjector:java.lang.Object resolveResource(java.lang.String,java.lang.Class)"
        ]
    },
    "org.apache.cxf.resource.DefaultResourceManager:java.io.InputStream getResourceAsStream(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.jsse.TLSParameterJaxBUtils:java.io.InputStream getResourceAsStream(java.lang.String)"
        ]
    },
    "org.apache.cxf.endpoint.EndpointImpl:void <init>(org.apache.cxf.Bus,org.apache.cxf.service.Service,javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.service.factory.FactoryBeanListenerManager:void <init>(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.service.model.AbstractMessageContainer:void removeMessagePart(javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.service.model.OperationInfo:void setOutput(java.lang.String,org.apache.cxf.service.model.MessageInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.model.UnwrappedOperationInfo:void setOutput(java.lang.String,org.apache.cxf.service.model.MessageInfo)"
        ]
    },
    "org.apache.cxf.service.model.OperationInfo:void setInput(java.lang.String,org.apache.cxf.service.model.MessageInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.model.UnwrappedOperationInfo:void setInput(java.lang.String,org.apache.cxf.service.model.MessageInfo)"
        ]
    },
    "org.apache.cxf.service.model.UnwrappedOperationInfo:void <init>(org.apache.cxf.service.model.OperationInfo)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.service.model.UnwrappedOperationInfo:void setOutput(java.lang.String,org.apache.cxf.service.model.MessageInfo)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.service.model.UnwrappedOperationInfo:void setInput(java.lang.String,org.apache.cxf.service.model.MessageInfo)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.service.model.BindingOperationInfo:void <init>(org.apache.cxf.service.model.BindingInfo,org.apache.cxf.service.model.OperationInfo,org.apache.cxf.service.model.BindingOperationInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.model.BindingOperationInfo:void <init>(org.apache.cxf.service.model.BindingInfo,org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.BindingOperationInfo:void updateUnwrappedOperation()"
        ]
    },
    "org.apache.cxf.service.model.ServiceInfo:void addBinding(org.apache.cxf.service.model.BindingInfo)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.service.model.ServiceInfo:void addEndpoint(org.apache.cxf.service.model.EndpointInfo)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.service.model.ServiceInfo:java.util.Map getMessages()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.MessageInfo getMessage(javax.xml.namespace.QName)"
        ]
    },
    "org.apache.cxf.service.model.ServiceInfo:void refresh()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.databinding.AbstractDataBinding:org.apache.ws.commons.schema.XmlSchema addSchemaDocument(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.common.xmlschema.SchemaCollection,org.w3c.dom.Document,java.lang.String,java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.AbstractDataBinding:org.apache.ws.commons.schema.XmlSchema addSchemaDocument(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.common.xmlschema.SchemaCollection,org.w3c.dom.Document,java.lang.String)"
        ]
    },
    "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:org.apache.cxf.service.model.BindingOperationInfo getBindingOperationInfo(org.apache.cxf.message.Exchange,javax.xml.namespace.QName,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.staxutils.CachingXmlEventWriter:java.lang.String getPrefix(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.staxutils.PrettyPrintXMLStreamWriter:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:java.lang.String getUniquePrefix(javax.xml.stream.XMLStreamWriter,java.lang.String,boolean)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:void copy(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:void copy(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void copy(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter,boolean)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:void writeNode(org.w3c.dom.Node,javax.xml.stream.XMLStreamWriter,boolean)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:void writeEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:void writeParts(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.message.MessageContentsList,java.util.List)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElementEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)"
        ]
    },
    "org.apache.cxf.staxutils.StaxSource:void parse()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxSource:void parse(org.xml.sax.InputSource)",
            "org.apache.cxf.staxutils.StaxSource:void parse(java.lang.String)"
        ]
    },
    "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.lang.String getNamespaceURI(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:java.lang.String getUniquePrefix(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.W3CNamespaceContext:java.lang.String getNamespaceURI(org.w3c.dom.Element,java.lang.String)",
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:java.lang.String getNamespaceURI(java.lang.String)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:java.lang.String getUniquePrefix(javax.xml.stream.XMLStreamWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:java.lang.String getUniquePrefix(javax.xml.stream.XMLStreamWriter,java.lang.String,boolean)"
        ]
    },
    "org.apache.cxf.staxutils.W3CNamespaceContext:java.lang.String getNamespaceURI(org.w3c.dom.Element,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.W3CNamespaceContext:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.staxutils.W3CNamespaceContext:java.lang.String getNamespaceURI(org.w3c.dom.Element,java.lang.String)"
        ]
    },
    "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:java.lang.String findUniquePrefix(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.transform.InTransformReader:int next()",
            "org.apache.cxf.staxutils.transform.InTransformReader:java.lang.String getAttributePrefix(int)",
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void writeNamespace(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void write(javax.xml.namespace.QName,boolean)"
        ]
    },
    "org.apache.cxf.staxutils.transform.InTransformReader:java.lang.String getNamespaceURI(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DepthXMLStreamReader:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.namespace.QName readQName(javax.xml.stream.XMLStreamReader)"
        ]
    },
    "org.apache.cxf.staxutils.transform.OutTransformWriter:void write(javax.xml.namespace.QName,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void writeEndElement()"
        ]
    },
    "org.apache.cxf.staxutils.transform.InTransformReader:int next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.source.XMLStreamDataReader:javax.xml.transform.dom.DOMSource read(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.staxutils.DepthXMLStreamReader:java.lang.String getElementText()",
            "org.apache.cxf.staxutils.DepthXMLStreamReader:int next()",
            "org.apache.cxf.staxutils.DepthXMLStreamReader:int nextTag()",
            "org.apache.cxf.staxutils.StaxSource:void parse()",
            "org.apache.cxf.staxutils.StaxUtils:void nextEvent(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.staxutils.StaxUtils:boolean toNextText(org.apache.cxf.staxutils.DepthXMLStreamReader)",
            "org.apache.cxf.staxutils.StaxUtils:boolean toNextTag(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.staxutils.StaxUtils:boolean toNextTag(org.apache.cxf.staxutils.DepthXMLStreamReader,javax.xml.namespace.QName)",
            "org.apache.cxf.staxutils.StaxUtils:boolean skipToStartOfElement(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.staxutils.StaxUtils:boolean toNextElement(org.apache.cxf.staxutils.DepthXMLStreamReader)",
            "org.apache.cxf.staxutils.StaxUtils:boolean skipToStartOfElement(org.apache.cxf.staxutils.DepthXMLStreamReader)",
            "org.apache.cxf.staxutils.StaxUtils:void copy(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void readDocElements(org.w3c.dom.Document,org.w3c.dom.Node,javax.xml.stream.XMLStreamReader,boolean,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void readDocElements(org.w3c.dom.Document,org.w3c.dom.Node,javax.xml.stream.XMLStreamReader,org.apache.cxf.staxutils.StaxUtils$StreamToDOMContext)",
            "org.apache.cxf.staxutils.transform.InTransformReader:int next()"
        ]
    },
    "org.apache.cxf.staxutils.transform.InTransformReader:java.lang.String getPrefix()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DepthXMLStreamReader:java.lang.String getPrefix()",
            "org.apache.cxf.staxutils.StaxSource:void parse()",
            "org.apache.cxf.staxutils.StaxSource:java.lang.String getQualifiedName()",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void readDocElements(org.w3c.dom.Document,org.w3c.dom.Node,javax.xml.stream.XMLStreamReader,boolean,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void readDocElements(org.w3c.dom.Document,org.w3c.dom.Node,javax.xml.stream.XMLStreamReader,org.apache.cxf.staxutils.StaxUtils$StreamToDOMContext)",
            "org.apache.cxf.staxutils.transform.InTransformReader:java.lang.String getNamespacePrefix(int)"
        ]
    },
    "org.apache.cxf.staxutils.transform.InTransformReader:java.lang.String getNamespacePrefix(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DepthXMLStreamReader:java.lang.String getNamespacePrefix(int)",
            "org.apache.cxf.staxutils.StaxSource:void parse()",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void readDocElements(org.w3c.dom.Document,org.w3c.dom.Node,javax.xml.stream.XMLStreamReader,boolean,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void readDocElements(org.w3c.dom.Document,org.w3c.dom.Node,javax.xml.stream.XMLStreamReader,org.apache.cxf.staxutils.StaxUtils$StreamToDOMContext)"
        ]
    },
    "org.apache.cxf.staxutils.transform.InTransformReader:java.lang.String getAttributePrefix(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DepthXMLStreamReader:java.lang.String getAttributePrefix(int)",
            "org.apache.cxf.staxutils.StaxSource:org.xml.sax.Attributes getAttributes()",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void readDocElements(org.w3c.dom.Document,org.w3c.dom.Node,javax.xml.stream.XMLStreamReader,boolean,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void readDocElements(org.w3c.dom.Document,org.w3c.dom.Node,javax.xml.stream.XMLStreamReader,org.apache.cxf.staxutils.StaxUtils$StreamToDOMContext)"
        ]
    },
    "org.apache.cxf.staxutils.transform.OutTransformWriter:void writeNamespace(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeNamespace(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.PrettyPrintXMLStreamWriter:void writeNamespace(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamWriter,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:java.lang.String getUniquePrefix(javax.xml.stream.XMLStreamWriter,java.lang.String,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void write(javax.xml.namespace.QName,boolean)"
        ]
    },
    "org.apache.cxf.staxutils.transform.OutTransformWriter:void writeDefaultNamespace(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeDefaultNamespace(java.lang.String)",
            "org.apache.cxf.staxutils.PrettyPrintXMLStreamWriter:void writeDefaultNamespace(java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamWriter,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void writeNamespace(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.staxutils.transform.OutTransformWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.PrettyPrintXMLStreamWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamWriter,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElementEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void writeStartElement(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void writeStartElement(java.lang.String)"
        ]
    },
    "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeEndElement()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeEndElement()",
            "org.apache.cxf.staxutils.PrettyPrintXMLStreamWriter:void writeEndElement()",
            "org.apache.cxf.staxutils.StaxUtils:void copy(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void writeEndElement()"
        ]
    },
    "org.apache.cxf.staxutils.PrettyPrintXMLStreamWriter:void writeEndElement()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeEndElement()",
            "org.apache.cxf.staxutils.PrettyPrintXMLStreamWriter:void writeEndElement()",
            "org.apache.cxf.staxutils.StaxUtils:void copy(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void endElement(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.staxutils.StreamWriterContentHandler:void endElement(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxSource:void parse()"
        ]
    },
    "org.apache.cxf.staxutils.transform.OutTransformWriter:void writeAttributeAsElement(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void writeAttribute(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.staxutils.transform.InTransformReader:void <init>(javax.xml.stream.XMLStreamReader,java.util.Map,java.util.Map,java.util.List,java.util.Map,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.transform.InTransformReader:void <init>(javax.xml.stream.XMLStreamReader,java.util.Map,java.util.Map,boolean)",
            "org.apache.cxf.staxutils.transform.TransformUtils:javax.xml.stream.XMLStreamReader createTransformReaderIfNeeded(javax.xml.stream.XMLStreamReader,java.io.InputStream,java.util.List,java.util.Map,java.util.Map,java.util.Map,boolean)"
        ]
    },
    "org.apache.cxf.staxutils.validation.Stax2ValidationUtils:boolean setupValidation(javax.xml.stream.XMLStreamReader,org.apache.cxf.endpoint.Endpoint,org.apache.cxf.service.model.ServiceInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.validation.WoodstoxValidationImpl:void setupValidation(javax.xml.stream.XMLStreamReader,org.apache.cxf.endpoint.Endpoint,org.apache.cxf.service.model.ServiceInfo)"
        ]
    },
    "org.apache.cxf.staxutils.validation.Stax2ValidationUtils:boolean setupValidation(javax.xml.stream.XMLStreamWriter,org.apache.cxf.endpoint.Endpoint,org.apache.cxf.service.model.ServiceInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.validation.WoodstoxValidationImpl:void setupValidation(javax.xml.stream.XMLStreamWriter,org.apache.cxf.endpoint.Endpoint,org.apache.cxf.service.model.ServiceInfo)"
        ]
    },
    "org.apache.cxf.transport.AbstractMultiplexDestination:java.lang.String getId(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.ChainInitiationObserver:void onMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:void wrapExceptionAsFault(org.apache.cxf.message.Message,java.lang.RuntimeException)"
        ]
    },
    "org.apache.cxf.transport.TransportFinder:boolean access$100(org.apache.cxf.transport.TransportFinder,java.lang.String,java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.TransportFinder$3:boolean loadBean(java.lang.String,java.lang.Class)",
            "org.apache.cxf.transport.TransportFinder$URIBeanLoaderListener:boolean beanLoaded(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.cxf.transport.TransportFinder:java.lang.Object findTransportForURI(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.managers.ConduitInitiatorManagerImpl:org.apache.cxf.transport.ConduitInitiator getConduitInitiatorForUri(java.lang.String)",
            "org.apache.cxf.bus.managers.DestinationFactoryManagerImpl:org.apache.cxf.transport.DestinationFactory getDestinationFactoryForUri(java.lang.String)"
        ]
    },
    "org.apache.cxf.transport.TransportFinder:void access$000(org.apache.cxf.transport.TransportFinder,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.TransportFinder$1:boolean beanLoaded(java.lang.String,java.lang.Object)",
            "org.apache.cxf.transport.TransportFinder$2:boolean beanLoaded(java.lang.String,java.lang.Object)",
            "org.apache.cxf.transport.TransportFinder$4:boolean beanLoaded(java.lang.String,java.lang.Object)",
            "org.apache.cxf.transport.TransportFinder$5:boolean beanLoaded(java.lang.String,java.lang.Object)",
            "org.apache.cxf.transport.TransportFinder$URIBeanLoaderListener:boolean beanLoaded(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.cxf.transport.common.gzip.GZIPOutInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.security.DelegatingAuthenticationInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.validation.BeanValidationProvider:void <init>(org.apache.cxf.validation.ValidationConfiguration)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.validation.BeanValidationProvider:void <init>(javax.validation.ParameterNameProvider)"
        ]
    },
    "org.apache.cxf.validation.BeanValidationProvider:void <init>(javax.validation.ValidationProviderResolver,java.lang.Class,org.apache.cxf.validation.ValidationConfiguration)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.validation.BeanValidationProvider:void <init>(javax.validation.ValidationProviderResolver,java.lang.Class)"
        ]
    },
    "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void setHighWaterMark(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.managers.WorkQueueImplMBeanWrapper:void setHighWaterMark(int)"
        ]
    },
    "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void setLowWaterMark(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.managers.WorkQueueImplMBeanWrapper:void setLowWaterMark(int)"
        ]
    },
    "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void setInitialSize(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void setQueueSize(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void setDequeueTimeout(long)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.addressing.EndpointReferenceUtils:javax.xml.namespace.QName getPortQName(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.v200408.EndpointReferenceType convert(org.apache.cxf.ws.addressing.EndpointReferenceType)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.v200403.EndpointReferenceType convertTo200403(org.apache.cxf.ws.addressing.EndpointReferenceType)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.addressing.EndpointReferenceUtils:javax.xml.validation.Schema getSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:void setDataReaderValidation(org.apache.cxf.service.Service,org.apache.cxf.message.Message,org.apache.cxf.databinding.DataReader)",
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:void setDataWriterValidation(org.apache.cxf.service.Service,org.apache.cxf.message.Message,org.apache.cxf.databinding.DataWriter)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:javax.xml.validation.Schema getSchema(org.apache.cxf.service.model.ServiceInfo)"
        ]
    },
    "org.apache.cxf.ws.addressing.EndpointReferenceUtils:org.apache.cxf.ws.addressing.EndpointReferenceType getEndpointReferenceWithId(javax.xml.namespace.QName,java.lang.String,java.lang.String,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.attachment.AttachmentUtil$DHMap$1:int size()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.AttachmentUtil$DHMap$1:int size()",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:java.lang.Object getExtension(java.lang.Class)",
            "org.apache.cxf.common.jaxb.JAXBContextCache$1:javax.xml.bind.JAXBContext run()",
            "org.apache.cxf.common.jaxb.JAXBContextCache$2:javax.xml.bind.JAXBContext run()",
            "org.apache.cxf.common.jaxb.JAXBContextCache:javax.xml.bind.JAXBContext createContext(java.util.Set,java.util.Map,java.util.Collection)",
            "org.apache.cxf.common.util.CollectionUtils:java.util.Collection diff(java.util.Collection,java.util.Collection)",
            "org.apache.cxf.common.util.CollectionUtils:boolean isEmpty(java.util.Collection)",
            "org.apache.cxf.interceptor.security.AbstractSecurityContextInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.security.AbstractSecurityContextInInterceptor:java.security.Principal getPrincipal(java.security.Principal,javax.security.auth.Subject)",
            "org.apache.cxf.service.invoker.PooledFactory:void <init>(java.util.Collection)",
            "org.apache.cxf.service.model.BindingOperationInfo:void <init>(org.apache.cxf.service.model.BindingInfo,org.apache.cxf.service.model.OperationInfo)"
        ]
    },
    "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$1:int size()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.AttachmentUtil$DHMap$1:int size()",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:java.lang.Object getExtension(java.lang.Class)",
            "org.apache.cxf.common.jaxb.JAXBContextCache$1:javax.xml.bind.JAXBContext run()",
            "org.apache.cxf.common.jaxb.JAXBContextCache$2:javax.xml.bind.JAXBContext run()",
            "org.apache.cxf.common.jaxb.JAXBContextCache:javax.xml.bind.JAXBContext createContext(java.util.Set,java.util.Map,java.util.Collection)",
            "org.apache.cxf.common.util.CollectionUtils:java.util.Collection diff(java.util.Collection,java.util.Collection)",
            "org.apache.cxf.common.util.CollectionUtils:boolean isEmpty(java.util.Collection)",
            "org.apache.cxf.interceptor.security.AbstractSecurityContextInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.security.AbstractSecurityContextInInterceptor:java.security.Principal getPrincipal(java.security.Principal,javax.security.auth.Subject)",
            "org.apache.cxf.service.invoker.PooledFactory:void <init>(java.util.Collection)",
            "org.apache.cxf.service.model.BindingOperationInfo:void <init>(org.apache.cxf.service.model.BindingInfo,org.apache.cxf.service.model.OperationInfo)"
        ]
    },
    "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$2:int size()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.AttachmentUtil$DHMap$1:int size()",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:java.lang.Object getExtension(java.lang.Class)",
            "org.apache.cxf.common.jaxb.JAXBContextCache$1:javax.xml.bind.JAXBContext run()",
            "org.apache.cxf.common.jaxb.JAXBContextCache$2:javax.xml.bind.JAXBContext run()",
            "org.apache.cxf.common.jaxb.JAXBContextCache:javax.xml.bind.JAXBContext createContext(java.util.Set,java.util.Map,java.util.Collection)",
            "org.apache.cxf.common.util.CollectionUtils:java.util.Collection diff(java.util.Collection,java.util.Collection)",
            "org.apache.cxf.common.util.CollectionUtils:boolean isEmpty(java.util.Collection)",
            "org.apache.cxf.interceptor.security.AbstractSecurityContextInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.security.AbstractSecurityContextInInterceptor:java.security.Principal getPrincipal(java.security.Principal,javax.security.auth.Subject)",
            "org.apache.cxf.service.invoker.PooledFactory:void <init>(java.util.Collection)",
            "org.apache.cxf.service.model.BindingOperationInfo:void <init>(org.apache.cxf.service.model.BindingInfo,org.apache.cxf.service.model.OperationInfo)"
        ]
    },
    "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap$3:int size()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.AttachmentUtil$DHMap$1:int size()",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:java.lang.Object getExtension(java.lang.Class)",
            "org.apache.cxf.common.util.CollectionUtils:java.util.Collection diff(java.util.Collection,java.util.Collection)",
            "org.apache.cxf.common.util.CollectionUtils:boolean isEmpty(java.util.Collection)",
            "org.apache.cxf.service.invoker.PooledFactory:void <init>(java.util.Collection)",
            "org.apache.cxf.service.model.BindingOperationInfo:void <init>(org.apache.cxf.service.model.BindingInfo,org.apache.cxf.service.model.OperationInfo)"
        ]
    },
    "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:int size()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.CacheMap:int size()",
            "org.apache.cxf.common.util.WeakIdentityHashMap:int size()",
            "org.apache.cxf.message.MessageImpl$1:void putAll(java.util.Map)",
            "org.apache.cxf.service.model.AbstractMessageContainer:void addMessagePart(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo addOutOfBandMessagePart(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.AbstractMessageContainer:int getMessagePartsNumber()",
            "org.apache.cxf.service.model.AbstractMessageContainer:int size()",
            "org.apache.cxf.service.model.OperationInfo:boolean hasFaults()",
            "org.apache.cxf.staxutils.transform.InTransformReader:void <init>(javax.xml.stream.XMLStreamReader,java.util.Map,java.util.Map,java.util.List,java.util.Map,boolean)",
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void <init>(javax.xml.stream.XMLStreamWriter,java.util.Map,java.util.Map,java.util.List,java.util.Map,boolean,java.lang.String)"
        ]
    },
    "org.apache.cxf.service.invoker.PooledFactory:void <init>(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.attachment.DelegatingInputStream:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.AttachmentDataSource:void cache(org.apache.cxf.message.Message)",
            "org.apache.cxf.attachment.AttachmentDeserializer:void cache(org.apache.cxf.attachment.DelegatingInputStream)",
            "org.apache.cxf.attachment.DelegatingInputStream:void close()",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void load(java.lang.String,java.lang.ClassLoader)",
            "org.apache.cxf.bus.extension.TextExtensionFragmentParser:java.util.List getExtensions(java.net.URL)",
            "org.apache.cxf.bus.spring.BusApplicationContext:org.springframework.core.io.Resource[] getConfigResources()",
            "org.apache.cxf.bus.spring.BusApplicationContextResourceResolver:java.lang.Object resolve(java.lang.String,java.lang.Class)",
            "org.apache.cxf.catalog.OASISCatalogManager$1:java.lang.String getResolvedEntity(java.lang.String,java.lang.String)",
            "org.apache.cxf.common.jaxb.JAXBContextCache:void addPackage(java.util.Set,java.lang.String,java.lang.ClassLoader)",
            "org.apache.cxf.common.jaxb.JAXBUtils:void closeUnmarshaller(javax.xml.bind.Unmarshaller)",
            "org.apache.cxf.common.jaxb.JAXBUtils:void scanPackages(java.util.Set,java.lang.Class[],java.util.Map)",
            "org.apache.cxf.common.util.PropertiesLoaderUtils:java.util.Properties loadAllProperties(java.lang.String,java.lang.ClassLoader,java.util.logging.Logger,java.util.logging.Level,java.lang.String)",
            "org.apache.cxf.databinding.source.XMLStreamDataReader$2:void close()",
            "org.apache.cxf.endpoint.ClientImpl:void destroy()",
            "org.apache.cxf.endpoint.ServerImpl:void stop()",
            "org.apache.cxf.feature.transform.XSLTInInterceptor:void transformIS(org.apache.cxf.message.Message,java.io.InputStream)",
            "org.apache.cxf.feature.transform.XSLTUtils:java.io.InputStream transform(javax.xml.transform.Templates,java.io.InputStream)",
            "org.apache.cxf.helpers.IOUtils:int copyAndCloseInput(java.io.InputStream,java.io.OutputStream)",
            "org.apache.cxf.helpers.IOUtils:int copyAndCloseInput(java.io.InputStream,java.io.OutputStream,int)",
            "org.apache.cxf.helpers.IOUtils:java.io.ByteArrayInputStream loadIntoBAIS(java.io.InputStream)",
            "org.apache.cxf.helpers.IOUtils:byte[] readBytesFromStream(java.io.InputStream)",
            "org.apache.cxf.interceptor.AbstractLoggingInterceptor:void writePayload(java.lang.StringBuilder,org.apache.cxf.io.CachedOutputStream,java.lang.String,java.lang.String)",
            "org.apache.cxf.interceptor.OneWayProcessorInterceptor:void handleFault(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:void closeInput(org.apache.cxf.message.Message)",
            "org.apache.cxf.io.CachedOutputStream:byte[] getBytes()",
            "org.apache.cxf.io.CachedOutputStream:void writeCacheTo(java.lang.StringBuilder,java.lang.String,long)",
            "org.apache.cxf.io.CachedOutputStream:void writeCacheTo(java.lang.StringBuilder,java.lang.String)",
            "org.apache.cxf.io.DelegatingInputStream:void cacheInput()",
            "org.apache.cxf.resource.ExtendedURIResolver:void close()",
            "org.apache.cxf.resource.URIResolver:void tryRemote(java.lang.String)",
            "org.apache.cxf.transport.AbstractConduit:void close(org.apache.cxf.message.Message)",
            "org.apache.cxf.version.Version:void loadProperties()",
            "org.apache.cxf.ws.addressing.ContextUtils$1$1:void onMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.OutgoingChainInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.security.DelegatingAuthenticationInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.security.JAASLoginInterceptor$1:java.lang.Void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.security.JAASLoginInterceptor$1:java.lang.Object run()"
        ]
    },
    "org.apache.cxf.phase.PhaseInterceptorChain:void resume()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.OneWayProcessorInterceptor$1:void run()",
            "org.apache.cxf.interceptor.OneWayProcessorInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.ChainInitiationObserver:void onMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.phase.PhaseInterceptorChain:boolean doInterceptStartingAfter(org.apache.cxf.message.Message,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:void onMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.phase.PhaseInterceptorChain:boolean doInterceptStartingAt(org.apache.cxf.message.Message,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:void onMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.MultipleEndpointObserver:void onMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:void wrapExceptionAsFault(org.apache.cxf.message.Message,java.lang.RuntimeException)"
        ]
    },
    "org.apache.cxf.bus.ManagedBus:void shutdown(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.extension.ExtensionManagerBus:void shutdown()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.SpringBus:void onApplicationEvent(org.springframework.context.ApplicationEvent)"
        ]
    },
    "org.apache.cxf.BusFactory:org.apache.cxf.BusFactory$BusHolder getThreadBusHolder(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.BusFactory:void setDefaultBus(org.apache.cxf.Bus)",
            "org.apache.cxf.BusFactory:void setThreadDefaultBus(org.apache.cxf.Bus)",
            "org.apache.cxf.BusFactory:org.apache.cxf.Bus getAndSetThreadDefaultBus(org.apache.cxf.Bus)",
            "org.apache.cxf.BusFactory:org.apache.cxf.Bus getThreadDefaultBus(boolean)",
            "org.apache.cxf.BusFactory:org.apache.cxf.Bus createThreadBus()",
            "org.apache.cxf.BusFactory:boolean possiblySetDefaultBus(org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.attachment.AttachmentDeserializer:void addHeaderLine(java.util.Map,java.lang.StringBuilder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.AttachmentDeserializer:java.util.Map loadPartHeaders(java.io.InputStream)"
        ]
    },
    "org.apache.cxf.attachment.AttachmentImpl:void setHeader(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.AttachmentUtil:org.apache.cxf.message.Attachment createAttachment(java.io.InputStream,java.util.Map)",
            "org.apache.cxf.attachment.AttachmentUtil:org.apache.cxf.message.Attachment createMtomAttachmentFromDH(boolean,javax.activation.DataHandler,java.lang.String,int)"
        ]
    },
    "org.apache.cxf.attachment.ContentDisposition:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.AttachmentUtil:java.lang.String getContentDispositionFileName(java.lang.String)"
        ]
    },
    "org.apache.cxf.bus.extension.ExtensionManagerBus:void setExtension(java.lang.Object,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.blueprint.BlueprintBus:void setBundleContext(org.osgi.framework.BundleContext)",
            "org.apache.cxf.bus.blueprint.BlueprintBus:void setBlueprintContainer(org.osgi.service.blueprint.container.BlueprintContainer)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:org.apache.cxf.configuration.ConfiguredBeanLocator createConfiguredBeanLocator()",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.bus.managers.CXFBusLifeCycleManager:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.bus.managers.ConduitInitiatorManagerImpl:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.bus.managers.DestinationFactoryManagerImpl:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.bus.managers.EndpointResolverRegistryImpl:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.bus.managers.HeaderManagerImpl:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.bus.managers.ServerRegistryImpl:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.bus.managers.ServiceContractResolverRegistryImpl:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.bus.osgi.OSGIBusListener:void registerConfiguredBeanLocator()",
            "org.apache.cxf.bus.resource.ResourceManagerImpl:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.bus.spring.BusExtensionPostProcessor:void registerExt(java.lang.Object,java.lang.Class)",
            "org.apache.cxf.bus.spring.SpringBeanLocator:java.lang.Object getBundleContext(org.springframework.context.ApplicationContext,org.apache.cxf.Bus)",
            "org.apache.cxf.bus.spring.SpringBus:void setApplicationContext(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus finishCreatingBus(org.springframework.context.ConfigurableApplicationContext)",
            "org.apache.cxf.catalog.OASISCatalogManager:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.catalog.OASISCatalogManager:org.apache.cxf.catalog.OASISCatalogManager getCatalogManager(org.apache.cxf.Bus)",
            "org.apache.cxf.service.factory.FactoryBeanListenerManager:void setBus(org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.bus.extension.ExtensionManagerBus:void setProperty(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.AbstractEndpointFactory:boolean checkPrivateEndpoint(org.apache.cxf.endpoint.Endpoint)"
        ]
    },
    "org.apache.cxf.bus.extension.ExtensionManagerImpl:void add(org.apache.cxf.bus.extension.Extension)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.managers.BindingFactoryManagerImpl:void registerBindingFactory(java.lang.String,org.apache.cxf.binding.BindingFactory)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.AbstractBindingFactory:void registerWithBindingManager()",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl$1:boolean beanLoaded(java.lang.String,org.apache.cxf.binding.BindingFactory)"
        ]
    },
    "org.apache.cxf.bus.managers.ConduitInitiatorManagerImpl:void registerConduitInitiator(java.lang.String,org.apache.cxf.transport.ConduitInitiator)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.managers.DestinationFactoryManagerImpl:void registerDestinationFactory(java.lang.String,org.apache.cxf.transport.DestinationFactory)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.managers.HeaderManagerImpl:void registerHeaderProcessor(org.apache.cxf.headers.HeaderProcessor)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.managers.WorkQueueManagerImpl:void addNamedWorkQueue(java.lang.String,org.apache.cxf.workqueue.AutomaticWorkQueue)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:org.apache.cxf.workqueue.AutomaticWorkQueue createAutomaticWorkQueue()",
            "org.apache.cxf.bus.osgi.ManagedWorkQueueList:void addAllToWorkQueueManager(org.apache.cxf.workqueue.WorkQueueManager)"
        ]
    },
    "org.apache.cxf.catalog.CatalogXmlSchemaURIResolver:org.xml.sax.InputSource resolveEntity(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.jaxb.JAXBUtils:void addToObjectFactoryCache(java.lang.Package,java.lang.Class,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.jaxb.JAXBUtils:void scanPackages(java.util.Set,java.lang.Class[],java.util.Map)"
        ]
    },
    "org.apache.cxf.common.jaxb.JAXBUtils:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.jaxb.JAXBContextCache:void scanPackages(java.util.Set)",
            "org.apache.cxf.common.jaxb.JAXBContextCache:boolean addJaxbObjectFactory(javax.xml.bind.JAXBException,java.util.Set)",
            "org.apache.cxf.common.jaxb.JAXBUtils:java.lang.Object unmarshall(javax.xml.bind.JAXBContext,org.w3c.dom.Element)",
            "org.apache.cxf.common.jaxb.JAXBUtils:javax.xml.bind.JAXBElement unmarshall(javax.xml.bind.JAXBContext,org.w3c.dom.Element,java.lang.Class)",
            "org.apache.cxf.common.jaxb.JAXBUtils:java.lang.Object unmarshall(javax.xml.bind.JAXBContext,javax.xml.transform.Source)",
            "org.apache.cxf.common.jaxb.JAXBUtils:javax.xml.bind.JAXBElement unmarshall(javax.xml.bind.JAXBContext,javax.xml.stream.XMLStreamReader,java.lang.Class)",
            "org.apache.cxf.common.jaxb.JAXBUtils:java.lang.Object unmarshall(javax.xml.bind.JAXBContext,javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.common.jaxb.JAXBUtils:java.lang.String builtInTypeToJavaType(java.lang.String)",
            "org.apache.cxf.common.jaxb.JAXBUtils:java.lang.Class holderClass(java.lang.String)",
            "org.apache.cxf.common.jaxb.JAXBUtils:java.lang.String namespaceURIToPackage(java.lang.String)",
            "org.apache.cxf.common.jaxb.JAXBUtils:java.lang.String nameSpaceURIToPackage(java.net.URI)",
            "org.apache.cxf.common.jaxb.JAXBUtils:java.lang.String normalizePackageNamePart(java.lang.String)",
            "org.apache.cxf.common.jaxb.JAXBUtils:java.lang.String nameToIdentifier(java.lang.String,org.apache.cxf.common.jaxb.JAXBUtils$IdentifierType)",
            "org.apache.cxf.common.jaxb.JAXBUtils:void splitWord(java.util.List,int)",
            "org.apache.cxf.common.jaxb.JAXBUtils:java.lang.ClassLoader getXJCClassLoader()",
            "org.apache.cxf.common.jaxb.JAXBUtils:java.lang.Object setNamespaceMapper(java.util.Map,javax.xml.bind.Marshaller)",
            "org.apache.cxf.common.jaxb.JAXBUtils:org.apache.cxf.common.jaxb.JAXBUtils$BridgeWrapper createBridge(java.util.Set,javax.xml.namespace.QName,java.lang.Class,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.common.jaxb.JAXBUtils:org.apache.cxf.common.jaxb.JAXBUtils$SchemaCompiler createSchemaCompiler()",
            "org.apache.cxf.common.jaxb.JAXBUtils:org.apache.cxf.common.jaxb.JAXBUtils$SchemaCompiler createSchemaCompilerWithDefaultAllocator(java.util.Set)",
            "org.apache.cxf.common.jaxb.JAXBUtils:java.lang.Object createFileCodeWriter(java.io.File)",
            "org.apache.cxf.common.jaxb.JAXBUtils:java.lang.Object createFileCodeWriter(java.io.File,java.lang.String)",
            "org.apache.cxf.common.jaxb.JAXBUtils:void scanPackages(java.util.Set,java.util.Map)",
            "org.apache.cxf.common.jaxb.JAXBUtils:void scanPackages(java.util.Set,java.lang.Class[],java.util.Map)",
            "org.apache.cxf.common.jaxb.JAXBUtils:java.lang.Object createNamespaceWrapper(java.lang.Class,java.util.Map)",
            "org.apache.cxf.common.jaxb.JAXBUtils:org.apache.cxf.common.jaxb.JAXBContextProxy createJAXBContextProxy(javax.xml.bind.JAXBContext)",
            "org.apache.cxf.common.jaxb.JAXBUtils:void <clinit>()",
            "org.apache.cxf.common.jaxb.SchemaCollectionContextProxy:java.lang.Object getBeanInfo(java.lang.Class)",
            "org.apache.cxf.common.jaxb.SchemaCollectionContextProxy:javax.xml.namespace.QName getTypeQName(java.lang.Class,java.lang.String)",
            "org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser$JAXBBeanFactory:java.lang.Object createJAXBBean(java.lang.String)",
            "org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser:void mapElementToJaxbProperty(org.apache.aries.blueprint.ParserContext,org.apache.aries.blueprint.mutable.MutableBeanMetadata,org.w3c.dom.Element,java.lang.String,java.lang.Class)",
            "org.apache.cxf.configuration.jsse.TLSClientParametersConfig:java.lang.Object createTLSClientParameters(java.lang.String)",
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void mapElementToJaxbProperty(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder,java.lang.String,java.lang.Class)",
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:java.lang.Object unmarshalFactoryString(java.lang.String,javax.xml.bind.JAXBContext,java.lang.Class)",
            "org.apache.cxf.configuration.spring.JAXBBeanFactory:java.lang.Object createJAXBBean(javax.xml.bind.JAXBContext,java.lang.String,java.lang.Class)",
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.EndpointReferenceType parseEndpointReference(org.w3c.dom.Element)"
        ]
    },
    "org.apache.cxf.common.jaxb.SchemaCollectionContextProxy:void defaultRegister(java.lang.Class,javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.jaxb.SchemaCollectionContextProxy:void <clinit>()"
        ]
    },
    "org.apache.cxf.common.logging.Log4jLogger:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.logging.Log4jLogger$HandlerWrapper:void append(org.apache.log4j.spi.LoggingEvent)",
            "org.apache.cxf.common.logging.Log4jLogger$HandlerWrapper:org.apache.log4j.Priority getThreshold()",
            "org.apache.cxf.common.logging.Log4jLogger:void setLevel(java.util.logging.Level)",
            "org.apache.cxf.common.logging.Log4jLogger:void internalLogFormatted(java.lang.String,java.util.logging.LogRecord)",
            "org.apache.cxf.common.logging.Log4jLogger:java.util.logging.Level fromL4J(org.apache.log4j.Level)",
            "org.apache.cxf.common.logging.Log4jLogger:void access$100(java.util.logging.LogRecord,java.lang.String)",
            "org.apache.cxf.common.logging.Log4jLogger:java.util.Map access$200()",
            "org.apache.cxf.common.logging.Log4jLogger:void <clinit>()"
        ]
    },
    "org.apache.cxf.common.util.ASMHelper$Opcodes:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.jaxb.JAXBUtils:java.lang.Object createEclipseNamespaceMapper(java.lang.Class,java.util.Map)",
            "org.apache.cxf.common.jaxb.JAXBUtils:java.lang.Class createNamespaceWrapperInternal(org.apache.cxf.common.util.ASMHelper,org.apache.cxf.common.util.ASMHelper$ClassWriter,java.lang.String,java.lang.Class)",
            "org.apache.cxf.common.util.ASMHelper$Opcodes:void <clinit>()"
        ]
    },
    "org.apache.cxf.common.util.ASMHelper:org.apache.cxf.common.util.ASMHelper$TypeHelperClassLoader getTypeHelperClassLoader(java.lang.ClassLoader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.ASMHelper:java.lang.Class loadClass(java.lang.String,java.lang.ClassLoader,byte[])",
            "org.apache.cxf.common.util.ASMHelper:java.lang.Class findClass(java.lang.String,java.lang.ClassLoader)"
        ]
    },
    "org.apache.cxf.common.util.ASMHelper:org.apache.cxf.common.util.ASMHelper$TypeHelperClassLoader getTypeHelperClassLoader(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.ASMHelper:java.lang.Class loadClass(java.lang.String,java.lang.Class,byte[])",
            "org.apache.cxf.common.util.ASMHelper:java.lang.Class findClass(java.lang.String,java.lang.Class)"
        ]
    },
    "org.apache.cxf.common.util.ASMHelper:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.jaxb.JAXBUtils:java.lang.Object createNamespaceWrapper(java.lang.Class,java.util.Map)",
            "org.apache.cxf.common.jaxb.JAXBUtils:java.lang.Object createEclipseNamespaceMapper(java.lang.Class,java.util.Map)",
            "org.apache.cxf.common.util.ASMHelper$Opcodes:void <clinit>()",
            "org.apache.cxf.common.util.ASMHelper:void tryClass(java.lang.String)",
            "org.apache.cxf.common.util.ASMHelper:java.lang.Class getASMClass()",
            "org.apache.cxf.common.util.ASMHelper:java.lang.String getMethodSignature(java.lang.reflect.Method)",
            "org.apache.cxf.common.util.ASMHelper:java.lang.String getClassCode(java.lang.Class)",
            "org.apache.cxf.common.util.ASMHelper:java.lang.String getClassCode(java.lang.reflect.Type)",
            "org.apache.cxf.common.util.ASMHelper:org.apache.cxf.common.util.ASMHelper$ClassWriter createClassWriter()",
            "org.apache.cxf.common.util.ASMHelper:java.lang.Class loadClass(java.lang.String,java.lang.Class,byte[])",
            "org.apache.cxf.common.util.ASMHelper:java.lang.Class loadClass(java.lang.String,java.lang.ClassLoader,byte[])",
            "org.apache.cxf.common.util.ASMHelper:java.lang.Class findClass(java.lang.String,java.lang.Class)",
            "org.apache.cxf.common.util.ASMHelper:java.lang.Class findClass(java.lang.String,java.lang.ClassLoader)",
            "org.apache.cxf.common.util.ASMHelper:org.apache.cxf.common.util.ASMHelper$TypeHelperClassLoader getTypeHelperClassLoader(java.lang.ClassLoader)",
            "org.apache.cxf.common.util.ASMHelper:org.apache.cxf.common.util.ASMHelper$TypeHelperClassLoader getTypeHelperClassLoader(java.lang.Class)",
            "org.apache.cxf.common.util.ASMHelper:org.apache.cxf.common.util.ASMHelper$ASMType getType(java.lang.String)",
            "org.apache.cxf.common.util.ASMHelper:org.apache.cxf.common.util.ASMHelper$Label createLabel()",
            "org.apache.cxf.common.util.ASMHelper:java.lang.Class access$000()",
            "org.apache.cxf.common.util.ASMHelper:void <clinit>()"
        ]
    },
    "org.apache.cxf.common.util.CacheMap:java.lang.Object put(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.BusFactory:org.apache.cxf.BusFactory$BusHolder getThreadBusHolder(boolean)",
            "org.apache.cxf.attachment.AttachmentDeserializer:void addHeaderLine(java.util.Map,java.lang.StringBuilder)",
            "org.apache.cxf.attachment.AttachmentImpl:void setHeader(java.lang.String,java.lang.String)",
            "org.apache.cxf.attachment.AttachmentSerializer:void writeAttachments()",
            "org.apache.cxf.attachment.ContentDisposition:void <init>(java.lang.String)",
            "org.apache.cxf.bus.blueprint.ConfigurerImpl:void initializeWildcardMap()",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void <init>(java.util.Map,java.util.Map,java.lang.ClassLoader)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:java.lang.Object getExtension(java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void setExtension(java.lang.Object,java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void setProperty(java.lang.String,java.lang.Object)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void <init>(java.lang.String[],java.lang.ClassLoader,java.util.Map,org.apache.cxf.resource.ResourceManager,org.apache.cxf.Bus)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void add(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void load(java.lang.String,java.lang.ClassLoader)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadAndRegister(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl:void registerBindingFactory(java.lang.String,org.apache.cxf.binding.BindingFactory)",
            "org.apache.cxf.bus.managers.ConduitInitiatorManagerImpl:void registerConduitInitiator(java.lang.String,org.apache.cxf.transport.ConduitInitiator)",
            "org.apache.cxf.bus.managers.DestinationFactoryManagerImpl:void registerDestinationFactory(java.lang.String,org.apache.cxf.transport.DestinationFactory)",
            "org.apache.cxf.bus.managers.HeaderManagerImpl:void registerHeaderProcessor(org.apache.cxf.headers.HeaderProcessor)",
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:void addNamedWorkQueue(java.lang.String,org.apache.cxf.workqueue.AutomaticWorkQueue)",
            "org.apache.cxf.bus.osgi.ManagedWorkQueueList:void updated(java.lang.String,java.util.Dictionary)",
            "org.apache.cxf.catalog.CatalogXmlSchemaURIResolver:org.xml.sax.InputSource resolveEntity(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.common.jaxb.JAXBContextCache:org.apache.cxf.common.jaxb.JAXBContextCache$CachedContextAndSchemas getCachedContextAndSchemas(java.util.Set,java.lang.String,java.util.Map,java.util.Collection,boolean)",
            "org.apache.cxf.common.jaxb.JAXBContextCache:javax.xml.bind.JAXBContext createContext(java.util.Set,java.util.Map,java.util.Collection)",
            "org.apache.cxf.common.jaxb.JAXBUtils:void addToObjectFactoryCache(java.lang.Package,java.lang.Class,java.util.Map)",
            "org.apache.cxf.common.jaxb.JAXBUtils:void <clinit>()",
            "org.apache.cxf.common.jaxb.SchemaCollectionContextProxy:void defaultRegister(java.lang.Class,javax.xml.namespace.QName)",
            "org.apache.cxf.common.logging.Log4jLogger:void <clinit>()",
            "org.apache.cxf.common.util.ASMHelper$Opcodes:void <clinit>()",
            "org.apache.cxf.common.util.ASMHelper:org.apache.cxf.common.util.ASMHelper$TypeHelperClassLoader getTypeHelperClassLoader(java.lang.ClassLoader)",
            "org.apache.cxf.common.util.ASMHelper:org.apache.cxf.common.util.ASMHelper$TypeHelperClassLoader getTypeHelperClassLoader(java.lang.Class)",
            "org.apache.cxf.common.util.ASMHelper:void <clinit>()",
            "org.apache.cxf.common.util.CacheMap:void updateMainDataMap()",
            "org.apache.cxf.common.util.CacheMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.common.util.CacheMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.common.util.CacheMap:void putAll(java.util.Map)",
            "org.apache.cxf.common.util.PrimitiveUtils:void <clinit>()",
            "org.apache.cxf.common.util.StringUtils:void <clinit>()",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.common.util.XmlSchemaPrimitiveUtils:void registerPrimitiveClasses(java.lang.String,java.lang.Class[])",
            "org.apache.cxf.common.xmlschema.SchemaCollection:boolean crossImportsAdded(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaType)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void initWildcardDefinitionMap()",
            "org.apache.cxf.databinding.AbstractDataBinding:void <init>()",
            "org.apache.cxf.endpoint.ClientImpl$EchoContext:java.lang.Object put(java.lang.String,java.lang.Object)",
            "org.apache.cxf.endpoint.ClientImpl:java.util.Map getRequestContext()",
            "org.apache.cxf.endpoint.ClientImpl:java.util.Map getResponseContext()",
            "org.apache.cxf.endpoint.ClientImpl:void setThreadLocalRequestContext(boolean)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] doInvoke(org.apache.cxf.endpoint.ClientCallback,org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] processResult(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,java.util.Map)",
            "org.apache.cxf.endpoint.ClientImpl:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.extension.RegistryImpl:void register(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.helpers.DOMUtils:javax.xml.parsers.DocumentBuilder getDocumentBuilder()",
            "org.apache.cxf.helpers.HttpHeaderHelper:void <clinit>()",
            "org.apache.cxf.helpers.MapNamespaceContext:void addNamespace(java.lang.String,java.lang.String)",
            "org.apache.cxf.interceptor.FIStaxOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxInInterceptor:javax.xml.stream.XMLInputFactory getXMLInputFactory(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxOutInterceptor:javax.xml.stream.XMLOutputFactory getXMLOutputFactory(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.security.SecureAnnotationsInterceptor:void findRoles(java.lang.Class,java.util.Map)",
            "org.apache.cxf.message.MessageImpl:java.lang.Object put(java.lang.String,java.lang.Object)",
            "org.apache.cxf.message.MessageImpl:void setContextualProperty(java.lang.String,java.lang.Object)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void <init>(java.util.SortedSet)",
            "org.apache.cxf.resource.URIResolver:void tryRemote(java.lang.String)",
            "org.apache.cxf.service.factory.SimpleMethodDispatcher:void bind(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method[])",
            "org.apache.cxf.service.factory.SimpleMethodDispatcher:org.apache.cxf.service.model.BindingOperationInfo getBindingOperation(java.lang.reflect.Method,org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.service.model.AbstractMessageContainer:void addMessagePart(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:void setProperty(java.lang.String,java.lang.Object)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:void addExtensionAttribute(javax.xml.namespace.QName,java.lang.Object)",
            "org.apache.cxf.service.model.BindingInfo:void addOperation(org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.service.model.BindingOperationInfo:void <init>(org.apache.cxf.service.model.BindingInfo,org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.InterfaceInfo:void addOperation(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.OperationInfo:void addFault(org.apache.cxf.service.model.FaultInfo)",
            "org.apache.cxf.service.model.ServiceInfo:void initMessagesMap()",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperationForWrapperElement(org.apache.cxf.message.Exchange,javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:void addNs(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startPrefixMapping(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:void addPrefix(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.staxutils.transform.TransformUtils:void convertToQNamesMap(java.util.Map,org.apache.cxf.staxutils.transform.QNamesMap,java.util.Map)",
            "org.apache.cxf.staxutils.transform.TransformUtils:void convertToMapOfElementProperties(java.util.Map,java.util.Map)",
            "org.apache.cxf.transport.TransportFinder:void registerBean(java.lang.Object)",
            "org.apache.cxf.transport.common.gzip.GZIPOutInterceptor:void addHeader(org.apache.cxf.message.Message,java.lang.String,java.lang.String)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:javax.xml.bind.JAXBElement getServiceNameType(javax.xml.namespace.QName,java.lang.String)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:void setInterfaceName(org.apache.cxf.ws.addressing.EndpointReferenceType,javax.xml.namespace.QName)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:void setWSDLLocation(org.apache.cxf.ws.addressing.EndpointReferenceType,java.lang.String[])"
        ]
    },
    "org.apache.cxf.common.util.PrimitiveUtils:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.PrimitiveUtils:boolean canPrimitiveTypeBeAutoboxed(java.lang.Class,java.lang.Class)",
            "org.apache.cxf.common.util.PrimitiveUtils:void <clinit>()"
        ]
    },
    "org.apache.cxf.common.util.StringUtils:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.AttachmentDeserializer:void initializeRootMessage()",
            "org.apache.cxf.attachment.AttachmentUtil:org.apache.cxf.message.Attachment createAttachment(java.io.InputStream,java.util.Map)",
            "org.apache.cxf.attachment.AttachmentUtil:java.lang.String getContentDispositionFileName(java.lang.String)",
            "org.apache.cxf.attachment.AttachmentUtil:org.apache.cxf.message.Attachment createMtomAttachmentFromDH(boolean,javax.activation.DataHandler,java.lang.String,int)",
            "org.apache.cxf.bus.ManagedBus:javax.management.ObjectName getObjectName()",
            "org.apache.cxf.bus.blueprint.BusDefinitionParser:org.osgi.service.blueprint.reflect.Metadata parse(org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext)",
            "org.apache.cxf.bus.extension.Extension:java.lang.String getName()",
            "org.apache.cxf.bus.osgi.OSGIBusListener:void <init>(org.apache.cxf.Bus,java.lang.Object[])",
            "org.apache.cxf.bus.osgi.OSGIBusListener:boolean isExcluded(org.osgi.framework.ServiceReference)",
            "org.apache.cxf.bus.spring.BusDefinitionParser$BusConfig:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.bus.spring.BusDefinitionParser:void doParse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder)",
            "org.apache.cxf.bus.spring.BusDefinitionParser:java.lang.String resolveId(org.w3c.dom.Element,org.springframework.beans.factory.support.AbstractBeanDefinition,org.springframework.beans.factory.xml.ParserContext)",
            "org.apache.cxf.common.jaxb.JAXBContextCache:boolean checkObjectFactoryNamespaces(java.lang.Class)",
            "org.apache.cxf.common.jaxb.JAXBContextCache:void addPackage(java.util.Set,java.lang.String,java.lang.ClassLoader)",
            "org.apache.cxf.common.jaxb.JAXBUtils:java.lang.ClassLoader getXJCClassLoader()",
            "org.apache.cxf.common.jaxb.JAXBUtils:void scanPackages(java.util.Set,java.lang.Class[],java.util.Map)",
            "org.apache.cxf.common.jaxb.SchemaCollectionContextProxy:java.lang.Object getBeanInfo(java.lang.Class)",
            "org.apache.cxf.common.jaxb.SchemaCollectionContextProxy:javax.xml.namespace.QName getTypeQName(java.lang.Class,java.lang.String)",
            "org.apache.cxf.common.logging.JDKBugHacks:boolean skipHack(java.lang.String,java.lang.String)",
            "org.apache.cxf.common.logging.LogUtils:void <clinit>()",
            "org.apache.cxf.common.util.ClassHelper:org.apache.cxf.common.util.ClassHelper getClassHelper()",
            "org.apache.cxf.common.util.ClasspathScanner:org.apache.cxf.common.util.ClasspathScanner getClasspathScanner()",
            "org.apache.cxf.common.util.ClasspathScanner:java.util.Set parsePackages(java.lang.String)",
            "org.apache.cxf.common.util.Compiler:void setClassPath(java.lang.String)",
            "org.apache.cxf.common.util.Compiler:void addArgs(java.util.List)",
            "org.apache.cxf.common.util.Compiler:boolean compileFiles(java.lang.String[])",
            "org.apache.cxf.common.util.PackageUtils:java.lang.String getSharedPackageName(java.util.List)",
            "org.apache.cxf.common.util.StringUtils:java.lang.String[] split(java.lang.String,java.lang.String)",
            "org.apache.cxf.common.util.StringUtils:java.lang.String[] split(java.lang.String,java.lang.String,int)",
            "org.apache.cxf.common.util.StringUtils:boolean isEmpty(java.util.List)",
            "org.apache.cxf.common.util.StringUtils:java.util.List getParts(java.lang.String,java.lang.String)",
            "org.apache.cxf.common.util.StringUtils:java.lang.String getFirstNotEmpty(java.lang.String,java.lang.String)",
            "org.apache.cxf.common.util.StringUtils:java.lang.String getFirstNotEmpty(java.util.List)",
            "org.apache.cxf.common.util.StringUtils:java.util.List getFound(java.lang.String,java.lang.String)",
            "org.apache.cxf.common.util.StringUtils:java.lang.String getFirstFound(java.lang.String,java.lang.String)",
            "org.apache.cxf.common.util.StringUtils:java.lang.String addDefaultPortIfMissing(java.lang.String)",
            "org.apache.cxf.common.util.StringUtils:java.lang.String addDefaultPortIfMissing(java.lang.String,java.lang.String)",
            "org.apache.cxf.common.util.StringUtils:byte[] toBytesUTF8(java.lang.String)",
            "org.apache.cxf.common.util.StringUtils:byte[] toBytesASCII(java.lang.String)",
            "org.apache.cxf.common.util.StringUtils:void <clinit>()",
            "org.apache.cxf.common.util.UrlUtils:java.lang.String urlDecode(java.lang.String,java.lang.String,boolean)",
            "org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser:void mapToProperty(org.apache.aries.blueprint.mutable.MutableBeanMetadata,java.lang.String,java.lang.String,org.apache.aries.blueprint.ParserContext)",
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void addBusWiringAttribute(org.springframework.beans.factory.support.BeanDefinitionBuilder,org.apache.cxf.configuration.spring.BusWiringType,java.lang.String,org.springframework.beans.factory.xml.ParserContext)",
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void mapToProperty(org.springframework.beans.factory.support.BeanDefinitionBuilder,java.lang.String,java.lang.String)",
            "org.apache.cxf.configuration.spring.AbstractFactoryBeanDefinitionParser:void doParse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder)",
            "org.apache.cxf.databinding.AbstractDataBinding:org.apache.ws.commons.schema.XmlSchema addSchemaDocument(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.common.xmlschema.SchemaCollection,org.w3c.dom.Document,java.lang.String,java.util.Collection)",
            "org.apache.cxf.databinding.AbstractDataBinding:org.w3c.dom.Document doEmptyNamespaceHack(org.w3c.dom.Document,boolean)",
            "org.apache.cxf.databinding.source.XMLStreamDataReader:java.lang.Object read(javax.xml.namespace.QName,javax.xml.stream.XMLStreamReader,java.lang.Class)",
            "org.apache.cxf.endpoint.AbstractConduitSelector:org.apache.cxf.transport.Conduit createConduit(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.transport.ConduitInitiator)",
            "org.apache.cxf.endpoint.ManagedEndpoint:javax.management.ObjectName getObjectName()",
            "org.apache.cxf.helpers.DOMUtils:java.lang.String getAttribute(org.w3c.dom.Element,javax.xml.namespace.QName)",
            "org.apache.cxf.helpers.DOMUtils:java.lang.String getNamespace(org.w3c.dom.Node,java.lang.String)",
            "org.apache.cxf.interceptor.AbstractLoggingInterceptor:void writePayload(java.lang.StringBuilder,org.apache.cxf.io.CachedOutputStream,java.lang.String,java.lang.String)",
            "org.apache.cxf.interceptor.ClientFaultConverter:void setStackTrace(org.apache.cxf.interceptor.Fault,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor:void setGlobalRoles(java.lang.String)",
            "org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor:java.util.Map parseRolesMap(java.util.Map)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void printPhase(int,java.lang.StringBuilder)",
            "org.apache.cxf.resource.URIResolver:void tryFileSystem(java.lang.String,java.lang.String)",
            "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void addEndpointProperties(org.apache.cxf.endpoint.Endpoint,org.apache.cxf.Bus,org.apache.cxf.annotations.EndpointProperty[])",
            "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void setDataBinding(org.apache.cxf.service.factory.AbstractServiceFactoryBean,org.apache.cxf.annotations.DataBinding)",
            "org.apache.cxf.service.model.MessageInfo:java.util.List getOrderedParts(java.util.List)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter:void writeNamespace(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.OverlayW3CDOMStreamWriter:void writeStartElement(java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:int getInteger(java.lang.String,int)",
            "org.apache.cxf.staxutils.StaxUtils:long getLong(java.lang.String,long)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:boolean isDeclared(org.w3c.dom.Element,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void readDocElements(org.w3c.dom.Document,org.w3c.dom.Node,javax.xml.stream.XMLStreamReader,boolean,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void readDocElements(org.w3c.dom.Document,org.w3c.dom.Node,javax.xml.stream.XMLStreamReader,org.apache.cxf.staxutils.StaxUtils$StreamToDOMContext)",
            "org.apache.cxf.staxutils.StaxUtils:org.w3c.dom.Node readDocElement(org.w3c.dom.Document,org.w3c.dom.Node,javax.xml.stream.events.XMLEvent,org.apache.cxf.staxutils.StaxUtils$StreamToDOMContext)",
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.namespace.QName readQName(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.staxutils.StaxUtils:java.lang.String getUniquePrefix(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void <clinit>()",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void writeNamespace(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.common.util.WeakIdentityHashMap:java.lang.Object put(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.BusFactory:org.apache.cxf.BusFactory$BusHolder getThreadBusHolder(boolean)",
            "org.apache.cxf.attachment.AttachmentDeserializer:void addHeaderLine(java.util.Map,java.lang.StringBuilder)",
            "org.apache.cxf.attachment.AttachmentImpl:void setHeader(java.lang.String,java.lang.String)",
            "org.apache.cxf.attachment.AttachmentSerializer:void writeAttachments()",
            "org.apache.cxf.attachment.ContentDisposition:void <init>(java.lang.String)",
            "org.apache.cxf.bus.blueprint.ConfigurerImpl:void initializeWildcardMap()",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void <init>(java.util.Map,java.util.Map,java.lang.ClassLoader)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:java.lang.Object getExtension(java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void setExtension(java.lang.Object,java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void setProperty(java.lang.String,java.lang.Object)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void <init>(java.lang.String[],java.lang.ClassLoader,java.util.Map,org.apache.cxf.resource.ResourceManager,org.apache.cxf.Bus)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void add(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void load(java.lang.String,java.lang.ClassLoader)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadAndRegister(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl:void registerBindingFactory(java.lang.String,org.apache.cxf.binding.BindingFactory)",
            "org.apache.cxf.bus.managers.ConduitInitiatorManagerImpl:void registerConduitInitiator(java.lang.String,org.apache.cxf.transport.ConduitInitiator)",
            "org.apache.cxf.bus.managers.DestinationFactoryManagerImpl:void registerDestinationFactory(java.lang.String,org.apache.cxf.transport.DestinationFactory)",
            "org.apache.cxf.bus.managers.HeaderManagerImpl:void registerHeaderProcessor(org.apache.cxf.headers.HeaderProcessor)",
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:void addNamedWorkQueue(java.lang.String,org.apache.cxf.workqueue.AutomaticWorkQueue)",
            "org.apache.cxf.bus.osgi.ManagedWorkQueueList:void updated(java.lang.String,java.util.Dictionary)",
            "org.apache.cxf.catalog.CatalogXmlSchemaURIResolver:org.xml.sax.InputSource resolveEntity(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.common.jaxb.JAXBContextCache:org.apache.cxf.common.jaxb.JAXBContextCache$CachedContextAndSchemas getCachedContextAndSchemas(java.util.Set,java.lang.String,java.util.Map,java.util.Collection,boolean)",
            "org.apache.cxf.common.jaxb.JAXBContextCache:javax.xml.bind.JAXBContext createContext(java.util.Set,java.util.Map,java.util.Collection)",
            "org.apache.cxf.common.jaxb.JAXBUtils:void addToObjectFactoryCache(java.lang.Package,java.lang.Class,java.util.Map)",
            "org.apache.cxf.common.jaxb.JAXBUtils:void <clinit>()",
            "org.apache.cxf.common.jaxb.SchemaCollectionContextProxy:void defaultRegister(java.lang.Class,javax.xml.namespace.QName)",
            "org.apache.cxf.common.logging.Log4jLogger:void <clinit>()",
            "org.apache.cxf.common.util.ASMHelper$Opcodes:void <clinit>()",
            "org.apache.cxf.common.util.ASMHelper:org.apache.cxf.common.util.ASMHelper$TypeHelperClassLoader getTypeHelperClassLoader(java.lang.ClassLoader)",
            "org.apache.cxf.common.util.ASMHelper:org.apache.cxf.common.util.ASMHelper$TypeHelperClassLoader getTypeHelperClassLoader(java.lang.Class)",
            "org.apache.cxf.common.util.ASMHelper:void <clinit>()",
            "org.apache.cxf.common.util.CacheMap:void updateMainDataMap()",
            "org.apache.cxf.common.util.CacheMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.common.util.CacheMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.common.util.PrimitiveUtils:void <clinit>()",
            "org.apache.cxf.common.util.StringUtils:void <clinit>()",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.common.util.XmlSchemaPrimitiveUtils:void registerPrimitiveClasses(java.lang.String,java.lang.Class[])",
            "org.apache.cxf.common.xmlschema.SchemaCollection:boolean crossImportsAdded(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaType)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void initWildcardDefinitionMap()",
            "org.apache.cxf.databinding.AbstractDataBinding:void <init>()",
            "org.apache.cxf.endpoint.ClientImpl$EchoContext:java.lang.Object put(java.lang.String,java.lang.Object)",
            "org.apache.cxf.endpoint.ClientImpl:java.util.Map getRequestContext()",
            "org.apache.cxf.endpoint.ClientImpl:java.util.Map getResponseContext()",
            "org.apache.cxf.endpoint.ClientImpl:void setThreadLocalRequestContext(boolean)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] doInvoke(org.apache.cxf.endpoint.ClientCallback,org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] processResult(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,java.util.Map)",
            "org.apache.cxf.endpoint.ClientImpl:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.extension.RegistryImpl:void register(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.helpers.DOMUtils:javax.xml.parsers.DocumentBuilder getDocumentBuilder()",
            "org.apache.cxf.helpers.HttpHeaderHelper:void <clinit>()",
            "org.apache.cxf.helpers.MapNamespaceContext:void addNamespace(java.lang.String,java.lang.String)",
            "org.apache.cxf.interceptor.FIStaxOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxInInterceptor:javax.xml.stream.XMLInputFactory getXMLInputFactory(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxOutInterceptor:javax.xml.stream.XMLOutputFactory getXMLOutputFactory(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.security.SecureAnnotationsInterceptor:void findRoles(java.lang.Class,java.util.Map)",
            "org.apache.cxf.message.MessageImpl:java.lang.Object put(java.lang.String,java.lang.Object)",
            "org.apache.cxf.message.MessageImpl:void setContextualProperty(java.lang.String,java.lang.Object)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void <init>(java.util.SortedSet)",
            "org.apache.cxf.resource.URIResolver:void tryRemote(java.lang.String)",
            "org.apache.cxf.service.factory.SimpleMethodDispatcher:void bind(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method[])",
            "org.apache.cxf.service.factory.SimpleMethodDispatcher:org.apache.cxf.service.model.BindingOperationInfo getBindingOperation(java.lang.reflect.Method,org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.service.model.AbstractMessageContainer:void addMessagePart(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:void setProperty(java.lang.String,java.lang.Object)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:void addExtensionAttribute(javax.xml.namespace.QName,java.lang.Object)",
            "org.apache.cxf.service.model.BindingInfo:void addOperation(org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.service.model.BindingOperationInfo:void <init>(org.apache.cxf.service.model.BindingInfo,org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.InterfaceInfo:void addOperation(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.OperationInfo:void addFault(org.apache.cxf.service.model.FaultInfo)",
            "org.apache.cxf.service.model.ServiceInfo:void initMessagesMap()",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperationForWrapperElement(org.apache.cxf.message.Exchange,javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:void addNs(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startPrefixMapping(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:void addPrefix(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.staxutils.transform.TransformUtils:void convertToQNamesMap(java.util.Map,org.apache.cxf.staxutils.transform.QNamesMap,java.util.Map)",
            "org.apache.cxf.staxutils.transform.TransformUtils:void convertToMapOfElementProperties(java.util.Map,java.util.Map)",
            "org.apache.cxf.transport.TransportFinder:void registerBean(java.lang.Object)",
            "org.apache.cxf.transport.common.gzip.GZIPOutInterceptor:void addHeader(org.apache.cxf.message.Message,java.lang.String,java.lang.String)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:javax.xml.bind.JAXBElement getServiceNameType(javax.xml.namespace.QName,java.lang.String)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:void setInterfaceName(org.apache.cxf.ws.addressing.EndpointReferenceType,javax.xml.namespace.QName)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:void setWSDLLocation(org.apache.cxf.ws.addressing.EndpointReferenceType,java.lang.String[])"
        ]
    },
    "org.apache.cxf.common.util.XmlSchemaPrimitiveUtils:void registerPrimitiveClasses(java.lang.String,java.lang.Class[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.XmlSchemaPrimitiveUtils:void initializeMap()"
        ]
    },
    "org.apache.cxf.databinding.AbstractDataBinding:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.AbstractInterceptorProvidingDataBinding:void <init>()",
            "org.apache.cxf.databinding.source.SourceDataBinding:void <init>()",
            "org.apache.cxf.databinding.source.SourceDataBinding:void <init>(java.lang.Class)"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl$EchoContext:java.lang.Object put(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl$EchoContext:java.lang.Object put(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:void setThreadLocalRequestContext(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],org.apache.cxf.message.Exchange)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[])"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.extension.RegistryImpl:void register(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.helpers.DOMUtils:javax.xml.parsers.DocumentBuilder getDocumentBuilder()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.DOMUtils:org.w3c.dom.Document createDocument()"
        ]
    },
    "org.apache.cxf.helpers.HttpHeaderHelper:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.AttachmentDeserializer:void initializeRootMessage()",
            "org.apache.cxf.attachment.AttachmentUtil:java.lang.String getAttachmentPartHeader(org.apache.cxf.message.Attachment)",
            "org.apache.cxf.helpers.HttpHeaderHelper:java.util.List getHeader(java.util.Map,java.lang.String)",
            "org.apache.cxf.helpers.HttpHeaderHelper:java.lang.String getHeaderKey(java.lang.String)",
            "org.apache.cxf.helpers.HttpHeaderHelper:java.lang.String mapCharset(java.lang.String)",
            "org.apache.cxf.helpers.HttpHeaderHelper:java.lang.String mapCharset(java.lang.String,java.lang.String)",
            "org.apache.cxf.helpers.HttpHeaderHelper:void <clinit>()",
            "org.apache.cxf.interceptor.StaxInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.common.gzip.GZIPInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.common.gzip.GZIPOutInterceptor:org.apache.cxf.transport.common.gzip.GZIPOutInterceptor$UseGzip gzipPermitted(org.apache.cxf.message.Message,boolean)"
        ]
    },
    "org.apache.cxf.helpers.MapNamespaceContext:void addNamespace(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.interceptor.FIStaxOutInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.security.DelegatingAuthenticationInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.StaxInInterceptor:javax.xml.stream.XMLInputFactory getXMLInputFactory(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.StaxInInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.StaxOutInterceptor:javax.xml.stream.XMLOutputFactory getXMLOutputFactory(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.StaxOutInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.security.SecureAnnotationsInterceptor:void findRoles(java.lang.Class,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.security.SecureAnnotationsInterceptor:void setSecuredObject(java.lang.Object)",
            "org.apache.cxf.interceptor.security.SecureAnnotationsInterceptor:void findRoles(java.lang.Class,java.util.Map)"
        ]
    },
    "org.apache.cxf.message.MessageImpl:java.lang.Object put(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.message.MessageImpl:void setAttachments(java.util.Collection)",
            "org.apache.cxf.message.MessageImpl:java.lang.Object put(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cxf.message.MessageImpl:void setContextualProperty(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.message.AbstractWrappedMessage:void setContextualProperty(java.lang.String,java.lang.Object)",
            "org.apache.cxf.message.ExchangeImpl:void setMessageContextProperty(org.apache.cxf.message.Message,java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.cxf.resource.URIResolver:void tryRemote(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.resource.URIResolver:void tryClasspath(java.lang.String)"
        ]
    },
    "org.apache.cxf.service.factory.SimpleMethodDispatcher:void bind(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.service.model.AbstractPropertiesHolder:void setProperty(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:void setExchangeProperties(org.apache.cxf.message.Exchange,org.apache.cxf.endpoint.Endpoint,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.feature.validation.SchemaValidationFeature:void initialise(org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:org.apache.cxf.service.model.MessageInfo setMessage(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo,boolean,org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.MessageInfo)",
            "org.apache.cxf.interceptor.AbstractLoggingInterceptor:java.util.logging.Logger getMessageLogger(org.apache.cxf.message.Message)",
            "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void addEndpointProperties(org.apache.cxf.endpoint.Endpoint,org.apache.cxf.Bus,org.apache.cxf.annotations.EndpointProperty[])",
            "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void addSchemaValidationSupport(org.apache.cxf.endpoint.Endpoint,org.apache.cxf.annotations.SchemaValidation)",
            "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void addSchemaValidationSupport(org.apache.cxf.service.model.OperationInfo,org.apache.cxf.annotations.SchemaValidation)",
            "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void addDocumentation(org.apache.cxf.service.model.OperationInfo,org.apache.cxf.annotations.WSDLDocumentation$Placement,org.apache.cxf.annotations.WSDLDocumentation[])",
            "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void addDocumentation(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.annotations.WSDLDocumentation$Placement,org.apache.cxf.annotations.WSDLDocumentation[])",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:void setDelegate(org.apache.cxf.service.model.AbstractPropertiesHolder,boolean)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:void setProperty(java.lang.String,java.lang.Object)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperationForWrapperElement(org.apache.cxf.message.Exchange,javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.transport.ChainInitiationObserver:void setExchangeProperties(org.apache.cxf.message.Exchange,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:javax.xml.validation.Schema createSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.Bus)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:javax.xml.validation.Schema getSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.service.model.AbstractPropertiesHolder:void addExtensionAttribute(javax.xml.namespace.QName,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.model.AbstractPropertiesHolder:void addExtensionAttribute(javax.xml.namespace.QName,java.lang.Object)"
        ]
    },
    "org.apache.cxf.service.model.InterfaceInfo:void addOperation(org.apache.cxf.service.model.OperationInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.model.InterfaceInfo:org.apache.cxf.service.model.OperationInfo addOperation(javax.xml.namespace.QName)"
        ]
    },
    "org.apache.cxf.service.model.OperationInfo:void addFault(org.apache.cxf.service.model.FaultInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.model.OperationInfo:org.apache.cxf.service.model.FaultInfo addFault(javax.xml.namespace.QName,javax.xml.namespace.QName)"
        ]
    },
    "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:void addNs(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.CachingXmlEventWriter:void setDefaultNamespace(java.lang.String)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter:void writeNamespace(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter:void setPrefix(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.staxutils.StreamWriterContentHandler:void startPrefixMapping(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxSource:void parse()"
        ]
    },
    "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:void addPrefix(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:java.lang.String findUniquePrefix(java.lang.String)",
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void writeNamespace(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void writeDefaultNamespace(java.lang.String)"
        ]
    },
    "org.apache.cxf.transport.common.gzip.GZIPOutInterceptor:void addHeader(org.apache.cxf.message.Message,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.common.gzip.GZIPOutInterceptor:org.apache.cxf.transport.common.gzip.GZIPOutInterceptor$UseGzip gzipPermitted(org.apache.cxf.message.Message,boolean)",
            "org.apache.cxf.transport.common.gzip.GZIPOutInterceptor:void access$100(org.apache.cxf.message.Message,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.ws.addressing.EndpointReferenceUtils:javax.xml.bind.JAXBElement getServiceNameType(javax.xml.namespace.QName,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:void setServiceAndPortName(org.apache.cxf.ws.addressing.EndpointReferenceType,javax.xml.namespace.QName,java.lang.String)"
        ]
    },
    "org.apache.cxf.ws.addressing.EndpointReferenceUtils:void setInterfaceName(org.apache.cxf.ws.addressing.EndpointReferenceType,javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.addressing.EndpointReferenceUtils:void setWSDLLocation(org.apache.cxf.ws.addressing.EndpointReferenceType,java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:void setMetadata(org.apache.cxf.ws.addressing.EndpointReferenceType,java.util.List)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:org.apache.cxf.ws.addressing.EndpointReferenceType getEndpointReference(java.net.URL,javax.xml.namespace.QName,java.lang.String)"
        ]
    },
    "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:boolean hasBeanOfName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:boolean hasBeanOfName(java.lang.String)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:boolean hasExtensionByName(java.lang.String)",
            "org.apache.cxf.bus.osgi.OSGiBeanLocator:boolean hasBeanOfName(java.lang.String)",
            "org.apache.cxf.bus.spring.SpringBeanLocator:boolean hasBeanOfName(java.lang.String)"
        ]
    },
    "org.apache.cxf.bus.osgi.OSGiBeanLocator:boolean hasBeanOfName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:boolean hasBeanOfName(java.lang.String)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:boolean hasExtensionByName(java.lang.String)",
            "org.apache.cxf.bus.osgi.OSGiBeanLocator:boolean hasBeanOfName(java.lang.String)",
            "org.apache.cxf.bus.spring.SpringBeanLocator:boolean hasBeanOfName(java.lang.String)"
        ]
    },
    "org.apache.cxf.bus.spring.SpringBeanLocator:boolean hasBeanOfName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:boolean hasBeanOfName(java.lang.String)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:boolean hasExtensionByName(java.lang.String)",
            "org.apache.cxf.bus.osgi.OSGiBeanLocator:boolean hasBeanOfName(java.lang.String)",
            "org.apache.cxf.bus.spring.SpringBeanLocator:boolean hasBeanOfName(java.lang.String)"
        ]
    },
    "org.apache.cxf.bus.managers.BindingFactoryManagerImpl$2:boolean beanLoaded(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)",
            "org.apache.cxf.bus.spring.SpringBeanLocator:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)"
        ]
    },
    "org.apache.cxf.bus.managers.BindingFactoryManagerImpl$3:boolean beanLoaded(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)",
            "org.apache.cxf.bus.spring.SpringBeanLocator:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)"
        ]
    },
    "org.apache.cxf.common.xmlschema.SchemaCollection:void addElementCrossImportsElement(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaElement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addOneSchemaCrossImports(org.apache.ws.commons.schema.XmlSchema)",
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addCrossImports(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaAll)",
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addCrossImports(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaChoice)",
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addCrossImports(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaSequence)"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:org.apache.cxf.transport.Conduit getConduit()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:void destroy()"
        ]
    },
    "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo addMessagePart(javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo addMessagePart(java.lang.String)"
        ]
    },
    "org.apache.cxf.transport.ChainInitiationObserver:void setExchangeProperties(org.apache.cxf.message.Exchange,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.ChainInitiationObserver:void onMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.service.model.UnwrappedOperationInfo:org.apache.cxf.service.model.FaultInfo addFault(javax.xml.namespace.QName,javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.model.UnwrappedOperationInfo:org.apache.cxf.service.model.FaultInfo addFault(javax.xml.namespace.QName,javax.xml.namespace.QName)"
        ]
    },
    "org.apache.cxf.BusFactory:void setThreadDefaultBus(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] doInvoke(org.apache.cxf.endpoint.ClientCallback,org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.ClientImpl:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.ChainInitiationObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.MultipleEndpointObserver:void onMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.BusFactory:org.apache.cxf.Bus getAndSetThreadDefaultBus(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] doInvoke(org.apache.cxf.endpoint.ClientCallback,org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.ClientImpl:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.ChainInitiationObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.MultipleEndpointObserver:void onMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.BusFactory:org.apache.cxf.Bus getThreadDefaultBus(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.BusFactory:org.apache.cxf.Bus getThreadDefaultBus()",
            "org.apache.cxf.configuration.jsse.TLSParameterJaxBUtils:java.io.InputStream getResourceAsStream(java.lang.String)",
            "org.apache.cxf.io.CachedOutputStream:void readBusProperties()",
            "org.apache.cxf.io.CachedWriter:void readBusProperties()",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:javax.xml.validation.Schema createSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.attachment.AttachmentImpl:java.lang.String getHeader(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.AttachmentSerializer:void writeAttachments()"
        ]
    },
    "org.apache.cxf.attachment.AttachmentSerializer:java.lang.String getHeaderValue(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.AttachmentSerializer:void writeProlog()"
        ]
    },
    "org.apache.cxf.attachment.AttachmentUtil:java.lang.String getHeader(java.util.Map,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.AttachmentUtil:org.apache.cxf.message.Attachment createAttachment(java.io.InputStream,java.util.Map)"
        ]
    },
    "org.apache.cxf.attachment.ContentDisposition:java.lang.String getFilename()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.attachment.ContentDisposition:java.lang.String getParameter(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.AttachmentUtil:java.lang.String getContentDispositionFileName(java.lang.String)"
        ]
    },
    "org.apache.cxf.bus.ManagedBus:javax.management.ObjectName getObjectName()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.extension.ExtensionManagerBus:org.apache.cxf.configuration.ConfiguredBeanLocator createConfiguredBeanLocator()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.extension.ExtensionManagerBus:java.lang.Object getExtension(java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:boolean hasExtensionByName(java.lang.String)"
        ]
    },
    "org.apache.cxf.bus.extension.ExtensionManagerBus:java.lang.Object getProperty(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.osgi.OSGIBusListener:void <init>(org.apache.cxf.Bus,java.lang.Object[])",
            "org.apache.cxf.common.util.ClassHelper:java.lang.Class getRealClass(org.apache.cxf.Bus,java.lang.Object)",
            "org.apache.cxf.endpoint.AbstractEndpointFactory:boolean checkPrivateEndpoint(org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.io.CachedOutputStream:java.lang.String getBusProperty(org.apache.cxf.Bus,java.lang.String,java.lang.String)",
            "org.apache.cxf.io.CachedWriter:java.lang.String getBusProperty(org.apache.cxf.Bus,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.bus.extension.ExtensionManagerBus:java.lang.String getBusId(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void <init>(java.util.Map,java.util.Map,java.lang.ClassLoader)"
        ]
    },
    "org.apache.cxf.bus.extension.ExtensionManagerImpl:java.lang.Object getExtension(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.extension.ExtensionManagerBus$1:java.lang.Object resolve(java.lang.String,java.lang.Class)"
        ]
    },
    "org.apache.cxf.bus.extension.ExtensionManagerImpl:java.lang.Object getBeanOfType(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:java.lang.Object getBeanOfType(java.lang.String,java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:java.lang.Object getExtension(java.lang.Class)",
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.bus.osgi.OSGiBeanLocator:java.lang.Object getBeanOfType(java.lang.String,java.lang.Class)",
            "org.apache.cxf.bus.spring.SpringBeanLocator:java.lang.Object getBeanOfType(java.lang.String,java.lang.Class)",
            "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void addEndpointProperties(org.apache.cxf.endpoint.Endpoint,org.apache.cxf.Bus,org.apache.cxf.annotations.EndpointProperty[])"
        ]
    },
    "org.apache.cxf.bus.extension.ExtensionManagerImpl:boolean hasConfiguredPropertyValue(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:boolean hasConfiguredPropertyValue(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl$3:boolean loadBean(java.lang.String,java.lang.Class)",
            "org.apache.cxf.bus.osgi.OSGiBeanLocator:boolean hasConfiguredPropertyValue(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.bus.spring.SpringBeanLocator:boolean hasConfiguredPropertyValue(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.transport.TransportFinder$2:boolean loadBean(java.lang.String,java.lang.Class)"
        ]
    },
    "org.apache.cxf.bus.managers.BindingFactoryManagerImpl:org.apache.cxf.binding.BindingFactory getBindingFactory(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.EndpointImpl:void createBinding(org.apache.cxf.service.model.BindingInfo)"
        ]
    },
    "org.apache.cxf.bus.managers.ConduitInitiatorManagerImpl:org.apache.cxf.transport.ConduitInitiator getConduitInitiator(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.AbstractConduitSelector:org.apache.cxf.transport.Conduit getSelectedConduit(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.TransportURIResolver:org.xml.sax.InputSource resolve(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.bus.managers.DestinationFactoryManagerImpl:org.apache.cxf.transport.DestinationFactory getDestinationFactory(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ServerImpl:void initDestination(org.apache.cxf.transport.DestinationFactory)"
        ]
    },
    "org.apache.cxf.bus.managers.HeaderManagerImpl:org.apache.cxf.headers.HeaderProcessor getHeaderProcessor(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.managers.WorkQueueManagerImpl:org.apache.cxf.workqueue.AutomaticWorkQueue getNamedWorkQueue(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:org.apache.cxf.workqueue.AutomaticWorkQueue getAutomaticWorkQueue()",
            "org.apache.cxf.bus.osgi.ManagedWorkQueueList:void addAllToWorkQueueManager(org.apache.cxf.workqueue.WorkQueueManager)"
        ]
    },
    "org.apache.cxf.bus.spring.BusEntityResolver:org.xml.sax.InputSource resolveEntity(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.jaxb.JAXBUtils:java.lang.String builtInTypeToJavaType(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.jaxb.JAXBUtils:java.lang.Class holderClass(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.jaxb.NamespaceMapper:java.lang.String getPreferredPrefix(java.lang.String,java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.jaxb.SchemaCollectionContextProxy:javax.xml.namespace.QName getTypeQName(java.lang.Class,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.jaxb.SchemaCollectionContextProxy:java.lang.Object getBeanInfo(java.lang.Class)",
            "org.apache.cxf.common.jaxb.SchemaCollectionContextProxy:org.apache.ws.commons.schema.XmlSchemaType mapToSchemaType(java.lang.Class,java.lang.String)"
        ]
    },
    "org.apache.cxf.common.logging.Log4jLogger$HandlerWrapper:org.apache.log4j.Priority getThreshold()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.logging.Log4jLogger$HandlerWrapper:boolean isAsSevereAsThreshold(org.apache.log4j.Priority)"
        ]
    },
    "org.apache.cxf.common.logging.Log4jLogger:void setLevel(java.util.logging.Level)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.logging.Log4jLogger:void internalLogFormatted(java.lang.String,java.util.logging.LogRecord)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void internalLog(java.util.logging.LogRecord)"
        ]
    },
    "org.apache.cxf.common.util.ASMHelper:java.lang.String getClassCode(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.ASMHelper:java.lang.String getMethodSignature(java.lang.reflect.Method)",
            "org.apache.cxf.common.util.ASMHelper:java.lang.String getClassCode(java.lang.Class)",
            "org.apache.cxf.common.util.ASMHelper:java.lang.String getClassCode(java.lang.reflect.Type)"
        ]
    },
    "org.apache.cxf.common.util.PrimitiveUtils:boolean canPrimitiveTypeBeAutoboxed(java.lang.Class,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.util.PropertyUtils:boolean isTrue(java.util.Map,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.util.PropertyUtils:boolean isFalse(java.util.Map,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.util.StringUtils:java.lang.String[] split(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.ClasspathScanner:java.util.Set parsePackages(java.lang.String)",
            "org.apache.cxf.common.util.StringUtils:java.util.List getParts(java.lang.String,java.lang.String)",
            "org.apache.cxf.common.util.StringUtils:java.lang.String getFirstNotEmpty(java.lang.String,java.lang.String)",
            "org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor:void setGlobalRoles(java.lang.String)",
            "org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor:java.util.Map parseRolesMap(java.util.Map)"
        ]
    },
    "org.apache.cxf.common.util.StringUtils:java.lang.String[] split(java.lang.String,java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.util.WeakIdentityHashMap:java.lang.Object get(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.BusFactory:org.apache.cxf.BusFactory$BusHolder getThreadBusHolder(boolean)",
            "org.apache.cxf.BusFactory:void setThreadDefaultBus(org.apache.cxf.Bus)",
            "org.apache.cxf.BusFactory:org.apache.cxf.Bus getAndSetThreadDefaultBus(org.apache.cxf.Bus)",
            "org.apache.cxf.BusFactory:org.apache.cxf.Bus getThreadDefaultBus(boolean)",
            "org.apache.cxf.attachment.AttachmentDeserializer:void addHeaderLine(java.util.Map,java.lang.StringBuilder)",
            "org.apache.cxf.attachment.AttachmentImpl:java.lang.String getHeader(java.lang.String)",
            "org.apache.cxf.attachment.AttachmentSerializer:java.lang.String getHeaderValue(java.lang.String,java.lang.String)",
            "org.apache.cxf.attachment.AttachmentUtil:java.lang.String getHeader(java.util.Map,java.lang.String)",
            "org.apache.cxf.attachment.AttachmentUtil:java.lang.String getHeader(java.util.Map,java.lang.String,java.lang.String)",
            "org.apache.cxf.attachment.ContentDisposition:java.lang.String getFilename()",
            "org.apache.cxf.attachment.ContentDisposition:java.lang.String getParameter(java.lang.String)",
            "org.apache.cxf.bus.ManagedBus:javax.management.ObjectName getObjectName()",
            "org.apache.cxf.bus.blueprint.ConfigurerImpl:void initializeWildcardMap()",
            "org.apache.cxf.bus.blueprint.ConfigurerImpl:void configureWithWildCard(java.lang.String,java.lang.Object)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:java.lang.Object getExtension(java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:boolean hasExtensionByName(java.lang.String)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:org.apache.cxf.configuration.ConfiguredBeanLocator createConfiguredBeanLocator()",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:java.lang.String getBusId(java.util.Map)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadAndRegister(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:java.lang.Object getExtension(java.lang.String,java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:java.lang.Object getBeanOfType(java.lang.String,java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:java.util.Collection getBeansOfType(java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:boolean hasConfiguredPropertyValue(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl:org.apache.cxf.binding.BindingFactory getBindingFactory(java.lang.String)",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl:org.apache.cxf.binding.BindingFactory loadAll(java.lang.String)",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl:org.apache.cxf.binding.BindingFactory loadDefaultNamespace(java.lang.String)",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl:org.apache.cxf.binding.BindingFactory loadActivationNamespace(java.lang.String)",
            "org.apache.cxf.bus.managers.ConduitInitiatorManagerImpl:org.apache.cxf.transport.ConduitInitiator getConduitInitiator(java.lang.String)",
            "org.apache.cxf.bus.managers.DestinationFactoryManagerImpl:org.apache.cxf.transport.DestinationFactory getDestinationFactory(java.lang.String)",
            "org.apache.cxf.bus.managers.HeaderManagerImpl:org.apache.cxf.headers.HeaderProcessor getHeaderProcessor(java.lang.String)",
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:org.apache.cxf.workqueue.AutomaticWorkQueue getNamedWorkQueue(java.lang.String)",
            "org.apache.cxf.bus.osgi.ManagedWorkQueueList:void updated(java.lang.String,java.util.Dictionary)",
            "org.apache.cxf.bus.spring.BusEntityResolver:org.xml.sax.InputSource resolveEntity(java.lang.String,java.lang.String)",
            "org.apache.cxf.common.jaxb.JAXBContextCache:org.apache.cxf.common.jaxb.JAXBContextCache$CachedContextAndSchemas getCachedContextAndSchemas(java.util.Set,java.lang.String,java.util.Map,java.util.Collection,boolean)",
            "org.apache.cxf.common.jaxb.JAXBContextCache:javax.xml.bind.JAXBContext createContext(java.util.Set,java.util.Map,java.util.Collection)",
            "org.apache.cxf.common.jaxb.JAXBUtils$1:javax.xml.transform.Result createOutput(java.lang.String,java.lang.String)",
            "org.apache.cxf.common.jaxb.JAXBUtils:java.lang.String builtInTypeToJavaType(java.lang.String)",
            "org.apache.cxf.common.jaxb.JAXBUtils:java.lang.Class holderClass(java.lang.String)",
            "org.apache.cxf.common.jaxb.JAXBUtils:void scanPackages(java.util.Set,java.lang.Class[],java.util.Map)",
            "org.apache.cxf.common.jaxb.NamespaceMapper:java.lang.String getPreferredPrefix(java.lang.String,java.lang.String,boolean)",
            "org.apache.cxf.common.jaxb.SchemaCollectionContextProxy:javax.xml.namespace.QName getTypeQName(java.lang.Class,java.lang.String)",
            "org.apache.cxf.common.logging.Log4jLogger$HandlerWrapper:org.apache.log4j.Priority getThreshold()",
            "org.apache.cxf.common.logging.Log4jLogger:void setLevel(java.util.logging.Level)",
            "org.apache.cxf.common.logging.Log4jLogger:void internalLogFormatted(java.lang.String,java.util.logging.LogRecord)",
            "org.apache.cxf.common.util.ASMHelper:java.lang.String getClassCode(java.lang.Class)",
            "org.apache.cxf.common.util.ASMHelper:org.apache.cxf.common.util.ASMHelper$TypeHelperClassLoader getTypeHelperClassLoader(java.lang.ClassLoader)",
            "org.apache.cxf.common.util.ASMHelper:org.apache.cxf.common.util.ASMHelper$TypeHelperClassLoader getTypeHelperClassLoader(java.lang.Class)",
            "org.apache.cxf.common.util.CacheMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.common.util.PrimitiveUtils:boolean canPrimitiveTypeBeAutoboxed(java.lang.Class,java.lang.Class)",
            "org.apache.cxf.common.util.PropertyUtils:boolean isTrue(java.util.Map,java.lang.String)",
            "org.apache.cxf.common.util.PropertyUtils:boolean isFalse(java.util.Map,java.lang.String)",
            "org.apache.cxf.common.util.StringUtils:java.lang.String[] split(java.lang.String,java.lang.String)",
            "org.apache.cxf.common.util.StringUtils:java.lang.String[] split(java.lang.String,java.lang.String,int)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.common.util.XmlSchemaPrimitiveUtils:java.lang.String getSchemaRepresentation(java.lang.Class,java.lang.String)",
            "org.apache.cxf.common.xmlschema.SchemaCollection:boolean crossImportsAdded(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaType)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void initWildcardDefinitionMap()",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureWithWildCard(java.lang.String,java.lang.Object)",
            "org.apache.cxf.databinding.AbstractDataBinding:void updateSchemaLocation(org.w3c.dom.Element)",
            "org.apache.cxf.databinding.source.mime.MimeSerializer:void serialize(org.apache.ws.commons.schema.XmlSchemaObject,java.lang.Class,org.w3c.dom.Node)",
            "org.apache.cxf.endpoint.ClientImpl$1:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ClientImpl:java.util.Map getRequestContext()",
            "org.apache.cxf.endpoint.ClientImpl:java.util.Map getResponseContext()",
            "org.apache.cxf.endpoint.ClientImpl:boolean isThreadLocalRequestContext()",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] doInvoke(org.apache.cxf.endpoint.ClientCallback,org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.ClientImpl:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.extension.RegistryImpl:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.feature.validation.DefaultSchemaValidationTypeProvider:org.apache.cxf.annotations.SchemaValidation$SchemaValidationType getSchemaValidationType(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.helpers.DOMUtils:javax.xml.parsers.DocumentBuilder getDocumentBuilder()",
            "org.apache.cxf.helpers.HttpHeaderHelper:java.util.List getHeader(java.util.Map,java.lang.String)",
            "org.apache.cxf.helpers.HttpHeaderHelper:java.lang.String getHeaderKey(java.lang.String)",
            "org.apache.cxf.helpers.MapNamespaceContext:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.interceptor.ClientOutFaultObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.FIStaxOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxInInterceptor:javax.xml.stream.XMLInputFactory getXMLInputFactory(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxOutInterceptor:javax.xml.stream.XMLOutputFactory getXMLOutputFactory(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.security.DelegatingAuthenticationInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.security.DelegatingAuthenticationInterceptor:java.lang.String getAuthenticationScheme(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.security.OperationInfoAuthorizingInterceptor:java.util.List getExpectedRoles(java.lang.String)",
            "org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor:boolean isUserInRole(org.apache.cxf.security.SecurityContext,java.util.List,boolean)",
            "org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor:java.util.List getExpectedRoles(java.lang.reflect.Method)",
            "org.apache.cxf.message.MessageImpl:java.lang.Object getContextualProperty(java.lang.String)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void add(org.apache.cxf.interceptor.Interceptor,boolean)",
            "org.apache.cxf.resource.PropertiesResolver:java.lang.Object resolve(java.lang.String,java.lang.Class)",
            "org.apache.cxf.resource.URIResolver:void tryRemote(java.lang.String)",
            "org.apache.cxf.service.factory.SimpleMethodDispatcher:org.apache.cxf.service.model.BindingOperationInfo getBindingOperation(java.lang.reflect.Method,org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.service.factory.SimpleMethodDispatcher:java.lang.reflect.Method getMethod(org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.service.factory.SimpleMethodDispatcher:java.lang.reflect.Method getPrimaryMethod(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:void addMessagePart(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePart(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:java.lang.Object getExtensionAttribute(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.BindingInfo:org.apache.cxf.service.model.BindingOperationInfo getOperation(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.BindingOperationInfo:org.apache.cxf.service.model.BindingFaultInfo getFault(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.InterfaceInfo:org.apache.cxf.service.model.OperationInfo getOperation(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.MessageInfo:java.util.List getOrderedParts(java.util.List)",
            "org.apache.cxf.service.model.OperationInfo:org.apache.cxf.service.model.FaultInfo getFault(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.MessageInfo getMessage(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperationForWrapperElement(org.apache.cxf.message.Exchange,javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.staxutils.PropertiesExpandingStreamReader:java.lang.String expandProperty(java.lang.String)",
            "org.apache.cxf.staxutils.W3CDOMStreamWriter:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.staxutils.transform.InTransformReader:java.lang.String getNamespaceURI(int)",
            "org.apache.cxf.staxutils.transform.InTransformReader:java.lang.String getNamespacePrefix(int)",
            "org.apache.cxf.staxutils.transform.InTransformReader:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.staxutils.transform.InTransformReader:java.lang.String getAttributePrefix(int)",
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void writeNamespace(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void writeDefaultNamespace(java.lang.String)",
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void setDefaultNamespace(java.lang.String)",
            "org.apache.cxf.staxutils.validation.ResolvingGrammarReaderController:org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.transport.AbstractMultiplexDestination:java.lang.String getId(java.util.Map)",
            "org.apache.cxf.transport.TransportFinder:java.lang.Object findTransportForNamespace(java.lang.String)",
            "org.apache.cxf.transport.TransportFinder:java.lang.Object loadActivationNamespaces(java.lang.String)",
            "org.apache.cxf.transport.TransportFinder:java.lang.Object loadDefaultNamespace(java.lang.String)",
            "org.apache.cxf.transport.TransportFinder:java.lang.Object loadNoDefaultNamespace(java.lang.String)",
            "org.apache.cxf.transport.common.gzip.GZIPInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.common.gzip.GZIPOutInterceptor:org.apache.cxf.transport.common.gzip.GZIPOutInterceptor$UseGzip gzipPermitted(org.apache.cxf.message.Message,boolean)",
            "org.apache.cxf.transport.common.gzip.GZIPOutInterceptor:void addHeader(org.apache.cxf.message.Message,java.lang.String,java.lang.String)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils$SchemaLSResourceResolver:org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:java.lang.String getWSDLLocation(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:java.lang.String getEndpointReferenceId(java.util.Map)"
        ]
    },
    "org.apache.cxf.common.util.XmlSchemaPrimitiveUtils:java.lang.String getSchemaRepresentation(java.lang.Class,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.XmlSchemaPrimitiveUtils:java.lang.String getSchemaRepresentation(java.lang.Class)"
        ]
    },
    "org.apache.cxf.databinding.AbstractDataBinding:void updateSchemaLocation(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.AbstractDataBinding:org.apache.ws.commons.schema.XmlSchema addSchemaDocument(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.common.xmlschema.SchemaCollection,org.w3c.dom.Document,java.lang.String,java.util.Collection)"
        ]
    },
    "org.apache.cxf.databinding.source.mime.MimeSerializer:void serialize(org.apache.ws.commons.schema.XmlSchemaObject,java.lang.Class,org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.endpoint.ClientImpl$1:void onMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:void wrapExceptionAsFault(org.apache.cxf.message.Message,java.lang.RuntimeException)"
        ]
    },
    "org.apache.cxf.extension.RegistryImpl:java.lang.Object get(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.feature.validation.DefaultSchemaValidationTypeProvider:org.apache.cxf.annotations.SchemaValidation$SchemaValidationType getSchemaValidationType(org.apache.cxf.service.model.OperationInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.feature.validation.SchemaValidationFeature:void initialise(org.apache.cxf.endpoint.Endpoint)"
        ]
    },
    "org.apache.cxf.helpers.HttpHeaderHelper:java.util.List getHeader(java.util.Map,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.StaxInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.common.gzip.GZIPInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.common.gzip.GZIPOutInterceptor:org.apache.cxf.transport.common.gzip.GZIPOutInterceptor$UseGzip gzipPermitted(org.apache.cxf.message.Message,boolean)"
        ]
    },
    "org.apache.cxf.helpers.HttpHeaderHelper:java.lang.String getHeaderKey(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.AttachmentUtil:java.lang.String getAttachmentPartHeader(org.apache.cxf.message.Attachment)",
            "org.apache.cxf.helpers.HttpHeaderHelper:java.util.List getHeader(java.util.Map,java.lang.String)"
        ]
    },
    "org.apache.cxf.helpers.MapNamespaceContext:java.lang.String getNamespaceURI(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:java.lang.String getUniquePrefix(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.W3CNamespaceContext:java.lang.String getNamespaceURI(org.w3c.dom.Element,java.lang.String)",
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:java.lang.String getNamespaceURI(java.lang.String)"
        ]
    },
    "org.apache.cxf.interceptor.ClientOutFaultObserver:void onMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl$1:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ClientImpl:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void wrapExceptionAsFault(org.apache.cxf.message.Message,java.lang.RuntimeException)"
        ]
    },
    "org.apache.cxf.interceptor.security.OperationInfoAuthorizingInterceptor:java.util.List getExpectedRoles(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.security.OperationInfoAuthorizingInterceptor:boolean authorize(org.apache.cxf.security.SecurityContext,java.lang.String)",
            "org.apache.cxf.interceptor.security.OperationInfoAuthorizingInterceptor:boolean isMethodProtected(java.lang.String)"
        ]
    },
    "org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor:java.util.List getExpectedRoles(java.lang.reflect.Method)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.security.AbstractAuthorizingInInterceptor:boolean authorize(org.apache.cxf.security.SecurityContext,java.lang.reflect.Method)",
            "org.apache.cxf.interceptor.security.AbstractAuthorizingInInterceptor:boolean isMethodProtected(java.lang.reflect.Method)"
        ]
    },
    "org.apache.cxf.message.MessageImpl:java.lang.Object getContextualProperty(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.AttachmentUtil:boolean isMtomEnabled(org.apache.cxf.message.Message)",
            "org.apache.cxf.attachment.AttachmentUtil:void setStreamedAttachmentProperties(org.apache.cxf.message.Message,org.apache.cxf.io.CachedOutputStream)",
            "org.apache.cxf.common.util.PropertyUtils:java.lang.Long getLong(org.apache.cxf.message.Message,java.lang.String)",
            "org.apache.cxf.common.util.PropertyUtils:java.lang.Integer getInteger(org.apache.cxf.message.Message,java.lang.String)",
            "org.apache.cxf.databinding.source.XMLStreamDataReader:java.lang.Object read(javax.xml.namespace.QName,javax.xml.stream.XMLStreamReader,java.lang.Class)",
            "org.apache.cxf.helpers.ServiceUtils:org.apache.cxf.annotations.SchemaValidation$SchemaValidationType getOverrideSchemaValidationType(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractLoggingInterceptor:boolean isLoggingDisabledNow(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:boolean shouldBuffer(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:void writeParts(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.message.MessageContentsList,java.util.List)",
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:org.apache.cxf.databinding.DataWriter getDataWriter(org.apache.cxf.message.Message,org.apache.cxf.service.Service,java.lang.Class)",
            "org.apache.cxf.interceptor.AttachmentOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.FIStaxInInterceptor:boolean isHttpVerbSupported(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.FIStaxOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.OneWayProcessorInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxInInterceptor:javax.xml.stream.XMLInputFactory getXMLInputFactory(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxOutInterceptor:javax.xml.stream.XMLOutputFactory getXMLOutputFactory(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.transform.TransformOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.message.AbstractWrappedMessage:java.lang.Object getContextualProperty(java.lang.String)",
            "org.apache.cxf.message.MessageUtils:boolean getContextualBoolean(org.apache.cxf.message.Message,java.lang.String,boolean)",
            "org.apache.cxf.message.MessageUtils:java.lang.Object getContextualProperty(org.apache.cxf.message.Message,java.lang.String,java.lang.String)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void wrapExceptionAsFault(org.apache.cxf.message.Message,java.lang.RuntimeException)",
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean isRobustOneWay(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.common.gzip.GZIPOutInterceptor:org.apache.cxf.transport.common.gzip.GZIPOutInterceptor$UseGzip gzipPermitted(org.apache.cxf.message.Message,boolean)",
            "org.apache.cxf.validation.AbstractValidationInterceptor:org.apache.cxf.validation.BeanValidationProvider getProvider(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.resource.PropertiesResolver:java.lang.Object resolve(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.resource.DefaultResourceManager:java.lang.Object findResource(java.lang.String,java.lang.Class,boolean,java.util.List)"
        ]
    },
    "org.apache.cxf.service.factory.SimpleMethodDispatcher:java.lang.reflect.Method getMethod(org.apache.cxf.service.model.BindingOperationInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.security.AbstractAuthorizingInInterceptor:java.lang.reflect.Method getTargetMethod(org.apache.cxf.message.Message)",
            "org.apache.cxf.service.invoker.AbstractInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object)",
            "org.apache.cxf.validation.AbstractValidationInterceptor:java.lang.reflect.Method getServiceMethod(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.service.factory.SimpleMethodDispatcher:java.lang.reflect.Method getPrimaryMethod(org.apache.cxf.service.model.OperationInfo)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.service.model.AbstractPropertiesHolder:java.lang.Object getProperty(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] processResult(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,java.util.Map)",
            "org.apache.cxf.helpers.ServiceUtils:org.apache.cxf.annotations.SchemaValidation$SchemaValidationType getSchemaValidationTypeFromModel(org.apache.cxf.service.model.AbstractPropertiesHolder)",
            "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:org.apache.cxf.service.model.MessageInfo setMessage(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo,boolean,org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.MessageInfo)",
            "org.apache.cxf.interceptor.FaultOutInterceptor:org.apache.cxf.service.model.FaultInfo getFaultForClass(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Class)",
            "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void handleEvent(org.apache.cxf.service.factory.FactoryBeanListener$Event,org.apache.cxf.service.factory.AbstractServiceFactoryBean,java.lang.Object[])",
            "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void addBindingOperationDocs(org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void addDocumentation(org.apache.cxf.service.model.OperationInfo,org.apache.cxf.annotations.WSDLDocumentation$Placement,org.apache.cxf.annotations.WSDLDocumentation[])",
            "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void addDocumentation(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.annotations.WSDLDocumentation$Placement,org.apache.cxf.annotations.WSDLDocumentation[])",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:java.lang.Object getProperty(java.lang.String,java.lang.Class)"
        ]
    },
    "org.apache.cxf.service.model.AbstractPropertiesHolder:java.lang.Object getExtensionAttribute(javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.model.AbstractPropertiesHolder:java.lang.Object getExtensionAttribute(javax.xml.namespace.QName)"
        ]
    },
    "org.apache.cxf.service.model.BindingInfo:org.apache.cxf.service.model.BindingOperationInfo getOperation(javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(javax.xml.namespace.QName,java.lang.Object[])",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invokeWrapped(javax.xml.namespace.QName,java.lang.Object[])",
            "org.apache.cxf.endpoint.ClientImpl:void invoke(org.apache.cxf.endpoint.ClientCallback,javax.xml.namespace.QName,java.lang.Object[])",
            "org.apache.cxf.endpoint.ClientImpl:void invokeWrapped(org.apache.cxf.endpoint.ClientCallback,javax.xml.namespace.QName,java.lang.Object[])",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperation(org.apache.cxf.message.Exchange,javax.xml.namespace.QName)"
        ]
    },
    "org.apache.cxf.service.model.BindingOperationInfo:org.apache.cxf.service.model.BindingFaultInfo getFault(javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.service.model.InterfaceInfo:org.apache.cxf.service.model.OperationInfo getOperation(javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.service.model.OperationInfo:org.apache.cxf.service.model.FaultInfo getFault(javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.model.UnwrappedOperationInfo:org.apache.cxf.service.model.FaultInfo getFault(javax.xml.namespace.QName)"
        ]
    },
    "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.MessageInfo getMessage(javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.staxutils.PropertiesExpandingStreamReader:java.lang.String expandProperty(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.PropertiesExpandingStreamReader:java.lang.String getElementText()",
            "org.apache.cxf.staxutils.PropertiesExpandingStreamReader:java.lang.String getAttributeValue(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.PropertiesExpandingStreamReader:java.lang.String getAttributeValue(int)",
            "org.apache.cxf.staxutils.PropertiesExpandingStreamReader:java.lang.String getText()"
        ]
    },
    "org.apache.cxf.staxutils.W3CDOMStreamWriter:java.lang.Object getProperty(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.staxutils.PrettyPrintXMLStreamWriter:java.lang.Object getProperty(java.lang.String)"
        ]
    },
    "org.apache.cxf.staxutils.transform.InTransformReader:java.lang.String getNamespaceURI(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DepthXMLStreamReader:java.lang.String getNamespaceURI(int)",
            "org.apache.cxf.staxutils.StaxSource:void parse()",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void readDocElements(org.w3c.dom.Document,org.w3c.dom.Node,javax.xml.stream.XMLStreamReader,boolean,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void readDocElements(org.w3c.dom.Document,org.w3c.dom.Node,javax.xml.stream.XMLStreamReader,org.apache.cxf.staxutils.StaxUtils$StreamToDOMContext)"
        ]
    },
    "org.apache.cxf.staxutils.transform.OutTransformWriter:void setDefaultNamespace(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void setDefaultNamespace(java.lang.String)",
            "org.apache.cxf.staxutils.PrettyPrintXMLStreamWriter:void setDefaultNamespace(java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamWriter,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)"
        ]
    },
    "org.apache.cxf.staxutils.validation.ResolvingGrammarReaderController:org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.TransportFinder:java.lang.Object findTransportForNamespace(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.managers.ConduitInitiatorManagerImpl:org.apache.cxf.transport.ConduitInitiator getConduitInitiator(java.lang.String)",
            "org.apache.cxf.bus.managers.DestinationFactoryManagerImpl:org.apache.cxf.transport.DestinationFactory getDestinationFactory(java.lang.String)"
        ]
    },
    "org.apache.cxf.ws.addressing.EndpointReferenceUtils:java.lang.String getWSDLLocation(org.apache.cxf.ws.addressing.EndpointReferenceType)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.addressing.EndpointReferenceUtils:java.lang.String getEndpointReferenceId(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.managers.BindingFactoryManagerImpl:void unregisterBindingFactory(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.managers.ConduitInitiatorManagerImpl:void deregisterConduitInitiator(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.managers.DestinationFactoryManagerImpl:void deregisterDestinationFactory(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.osgi.ManagedWorkQueueList:void deleted(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.util.CacheMap:java.lang.Object remove(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void setExtension(java.lang.Object,java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void setProperty(java.lang.String,java.lang.Object)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void removeBeansOfNames(java.util.List)",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl:void unregisterBindingFactory(java.lang.String)",
            "org.apache.cxf.bus.managers.ConduitInitiatorManagerImpl:void deregisterConduitInitiator(java.lang.String)",
            "org.apache.cxf.bus.managers.DestinationFactoryManagerImpl:void deregisterDestinationFactory(java.lang.String)",
            "org.apache.cxf.bus.osgi.ManagedWorkQueueList:void deleted(java.lang.String)",
            "org.apache.cxf.common.jaxb.JAXBContextCache:org.apache.cxf.common.jaxb.JAXBContextCache$CachedContextAndSchemas getCachedContextAndSchemas(java.util.Set,java.lang.String,java.util.Map,java.util.Collection,boolean)",
            "org.apache.cxf.common.jaxb.JAXBContextCache:javax.xml.bind.JAXBContext createContext(java.util.Set,java.util.Map,java.util.Collection)",
            "org.apache.cxf.common.util.CacheMap:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:void reap()",
            "org.apache.cxf.endpoint.ClientImpl$EchoContext:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] processResult(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,java.util.Map)",
            "org.apache.cxf.extension.RegistryImpl:void unregister(java.lang.Object)",
            "org.apache.cxf.service.model.AbstractMessageContainer:void removeMessagePart(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:java.lang.Object removeProperty(java.lang.String)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:void setProperty(java.lang.String,java.lang.Object)",
            "org.apache.cxf.service.model.BindingInfo:void removeOperation(org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.service.model.InterfaceInfo:void removeOperation(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.OperationInfo:void removeFault(javax.xml.namespace.QName)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cxf.staxutils.transform.InTransformReader:int next()",
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.transport.common.gzip.GZIPInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils$SchemaLSResourceResolver:org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.common.util.WeakIdentityHashMap:java.lang.Object remove(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void setExtension(java.lang.Object,java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void setProperty(java.lang.String,java.lang.Object)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void removeBeansOfNames(java.util.List)",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl:void unregisterBindingFactory(java.lang.String)",
            "org.apache.cxf.bus.managers.ConduitInitiatorManagerImpl:void deregisterConduitInitiator(java.lang.String)",
            "org.apache.cxf.bus.managers.DestinationFactoryManagerImpl:void deregisterDestinationFactory(java.lang.String)",
            "org.apache.cxf.bus.osgi.ManagedWorkQueueList:void deleted(java.lang.String)",
            "org.apache.cxf.common.jaxb.JAXBContextCache:org.apache.cxf.common.jaxb.JAXBContextCache$CachedContextAndSchemas getCachedContextAndSchemas(java.util.Set,java.lang.String,java.util.Map,java.util.Collection,boolean)",
            "org.apache.cxf.common.jaxb.JAXBContextCache:javax.xml.bind.JAXBContext createContext(java.util.Set,java.util.Map,java.util.Collection)",
            "org.apache.cxf.common.util.CacheMap:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:void reap()",
            "org.apache.cxf.endpoint.ClientImpl$EchoContext:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] processResult(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,java.util.Map)",
            "org.apache.cxf.extension.RegistryImpl:void unregister(java.lang.Object)",
            "org.apache.cxf.service.model.AbstractMessageContainer:void removeMessagePart(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:java.lang.Object removeProperty(java.lang.String)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:void setProperty(java.lang.String,java.lang.Object)",
            "org.apache.cxf.service.model.BindingInfo:void removeOperation(org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.service.model.InterfaceInfo:void removeOperation(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.OperationInfo:void removeFault(javax.xml.namespace.QName)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cxf.staxutils.transform.InTransformReader:int next()",
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.transport.common.gzip.GZIPInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils$SchemaLSResourceResolver:org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.common.util.WeakIdentityHashMap:void reap()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.WeakIdentityHashMap:void clear()",
            "org.apache.cxf.common.util.WeakIdentityHashMap:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:boolean containsValue(java.lang.Object)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.util.Set entrySet()",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.util.Set keySet()",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:int hashCode()",
            "org.apache.cxf.common.util.WeakIdentityHashMap:boolean isEmpty()",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:int size()",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.util.Collection values()"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl$EchoContext:java.lang.Object remove(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void setExtension(java.lang.Object,java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void setProperty(java.lang.String,java.lang.Object)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void removeBeansOfNames(java.util.List)",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl:void unregisterBindingFactory(java.lang.String)",
            "org.apache.cxf.bus.managers.ConduitInitiatorManagerImpl:void deregisterConduitInitiator(java.lang.String)",
            "org.apache.cxf.bus.managers.DestinationFactoryManagerImpl:void deregisterDestinationFactory(java.lang.String)",
            "org.apache.cxf.bus.osgi.ManagedWorkQueueList:void deleted(java.lang.String)",
            "org.apache.cxf.common.jaxb.JAXBContextCache:org.apache.cxf.common.jaxb.JAXBContextCache$CachedContextAndSchemas getCachedContextAndSchemas(java.util.Set,java.lang.String,java.util.Map,java.util.Collection,boolean)",
            "org.apache.cxf.common.jaxb.JAXBContextCache:javax.xml.bind.JAXBContext createContext(java.util.Set,java.util.Map,java.util.Collection)",
            "org.apache.cxf.common.util.CacheMap:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:void reap()",
            "org.apache.cxf.endpoint.ClientImpl$EchoContext:java.lang.Object remove(java.lang.Object)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] processResult(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,java.util.Map)",
            "org.apache.cxf.extension.RegistryImpl:void unregister(java.lang.Object)",
            "org.apache.cxf.service.model.AbstractMessageContainer:void removeMessagePart(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:java.lang.Object removeProperty(java.lang.String)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:void setProperty(java.lang.String,java.lang.Object)",
            "org.apache.cxf.service.model.BindingInfo:void removeOperation(org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.service.model.InterfaceInfo:void removeOperation(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.OperationInfo:void removeFault(javax.xml.namespace.QName)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cxf.staxutils.transform.InTransformReader:int next()",
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.transport.common.gzip.GZIPInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils$SchemaLSResourceResolver:org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.extension.RegistryImpl:void unregister(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.service.model.AbstractPropertiesHolder:java.lang.Object removeProperty(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void handleEvent(org.apache.cxf.service.factory.FactoryBeanListener$Event,org.apache.cxf.service.factory.AbstractServiceFactoryBean,java.lang.Object[])",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:java.lang.Object removeProperty(java.lang.String)"
        ]
    },
    "org.apache.cxf.service.model.BindingInfo:void removeOperation(org.apache.cxf.service.model.BindingOperationInfo)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.service.model.InterfaceInfo:void removeOperation(org.apache.cxf.service.model.OperationInfo)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.service.model.OperationInfo:void removeFault(javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.blueprint.BlueprintBus:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.extension.ExtensionManagerBus:void <init>(java.util.Map,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.CXFBusFactory:org.apache.cxf.Bus createBus(java.util.Map,java.util.Map)"
        ]
    },
    "org.apache.cxf.bus.extension.ExtensionManagerBus:void <init>(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.extension.ExtensionManagerBus:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.SpringBus:void <init>()"
        ]
    },
    "org.apache.cxf.bus.spring.BusDefinitionParser$BusConfig:void setBus(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.SpringBus:void setBusConfig(org.apache.cxf.bus.spring.BusDefinitionParser$BusConfig)"
        ]
    },
    "org.apache.cxf.bus.spring.BusDefinitionParser$BusConfig:void setProperties(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.v200408.AttributedURI convert(org.apache.cxf.ws.addressing.AttributedURIType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.v200408.EndpointReferenceType convert(org.apache.cxf.ws.addressing.EndpointReferenceType)"
        ]
    },
    "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.v200403.AttributedURI convertTo200403(org.apache.cxf.ws.addressing.AttributedURIType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.v200403.EndpointReferenceType convertTo200403(org.apache.cxf.ws.addressing.EndpointReferenceType)"
        ]
    },
    "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.AttributedURIType convert(org.apache.cxf.ws.addressing.v200408.AttributedURI)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.EndpointReferenceType convert(org.apache.cxf.ws.addressing.v200408.EndpointReferenceType)"
        ]
    },
    "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.AttributedURIType convert(org.apache.cxf.ws.addressing.v200403.AttributedURI)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.EndpointReferenceType convert(org.apache.cxf.ws.addressing.v200403.EndpointReferenceType)"
        ]
    },
    "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.EndpointReferenceType convert(org.apache.cxf.ws.addressing.v200408.EndpointReferenceType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.EndpointReferenceType convertToNative(java.lang.Object)"
        ]
    },
    "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.EndpointReferenceType convert(org.apache.cxf.ws.addressing.v200403.EndpointReferenceType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.EndpointReferenceType convertToNative(java.lang.Object)"
        ]
    },
    "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.v200408.Relationship convert(org.apache.cxf.ws.addressing.RelatesToType)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.v200403.Relationship convertTo200403(org.apache.cxf.ws.addressing.RelatesToType)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.util.CacheMap:boolean isEmpty()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.blueprint.ConfigurerImpl:void configureWithWildCard(java.lang.String,java.lang.Object)",
            "org.apache.cxf.common.util.CacheMap:boolean isEmpty()",
            "org.apache.cxf.common.util.WeakIdentityHashMap:boolean isEmpty()",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureWithWildCard(java.lang.String,java.lang.Object)",
            "org.apache.cxf.interceptor.security.SecureAnnotationsInterceptor:void findRoles(java.lang.Class,java.util.Map)",
            "org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor:boolean isUserInRole(org.apache.cxf.security.SecurityContext,java.util.List,boolean)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getFirstMessagePart()",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.cxf.common.util.WeakIdentityHashMap:boolean isEmpty()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.blueprint.ConfigurerImpl:void configureWithWildCard(java.lang.String,java.lang.Object)",
            "org.apache.cxf.common.util.CacheMap:boolean isEmpty()",
            "org.apache.cxf.common.util.WeakIdentityHashMap:boolean isEmpty()",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureWithWildCard(java.lang.String,java.lang.Object)",
            "org.apache.cxf.interceptor.security.SecureAnnotationsInterceptor:void findRoles(java.lang.Class,java.util.Map)",
            "org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor:boolean isUserInRole(org.apache.cxf.security.SecurityContext,java.util.List,boolean)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getFirstMessagePart()",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getFirstMessagePart()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.FaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.attachment.ImageDataContentHandler:java.lang.Object getContent(javax.activation.DataSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.ImageDataContentHandler:java.lang.Object getTransferData(java.awt.datatransfer.DataFlavor,javax.activation.DataSource)"
        ]
    },
    "org.apache.cxf.databinding.source.XMLStreamDataWriter:void write(java.lang.Object,javax.xml.stream.XMLStreamWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.source.XMLStreamDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.databinding.source.XMLStreamDataWriter:void write(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cxf.bus.blueprint.BlueprintBus:void setBundleContext(org.osgi.framework.BundleContext)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.blueprint.BlueprintBus:void setBlueprintContainer(org.osgi.service.blueprint.container.BlueprintContainer)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.managers.ServerRegistryImpl:void setBus(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.managers.ServerRegistryImpl:void <init>(org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.bus.osgi.OSGIBusListener:void <init>(org.apache.cxf.Bus,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.osgi.OSGIBusListener:void <init>(org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.bus.osgi.OSGIBusListener:void registerConfiguredBeanLocator()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.osgi.OSGIBusListener:void <init>(org.apache.cxf.Bus,java.lang.Object[])"
        ]
    },
    "org.apache.cxf.bus.osgi.OSGIBusListener:void registerServerLifecycleListeners()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.osgi.OSGIBusListener:void <init>(org.apache.cxf.Bus,java.lang.Object[])"
        ]
    },
    "org.apache.cxf.bus.osgi.OSGIBusListener:void registerClientLifeCycleListeners()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.osgi.OSGIBusListener:void <init>(org.apache.cxf.Bus,java.lang.Object[])"
        ]
    },
    "org.apache.cxf.bus.osgi.OSGIBusListener:boolean isExcluded(org.osgi.framework.ServiceReference)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.osgi.OSGIBusListener:void sendBusCreatedToBusCreationListeners()",
            "org.apache.cxf.bus.osgi.OSGIBusListener:void registerServerLifecycleListeners()",
            "org.apache.cxf.bus.osgi.OSGIBusListener:void registerClientLifeCycleListeners()",
            "org.apache.cxf.bus.osgi.OSGIBusListener:void registerBusFeatures()"
        ]
    },
    "org.apache.cxf.bus.osgi.OSGIBusListener:void registerBusAsService()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.osgi.OSGIBusListener:void initComplete()"
        ]
    },
    "org.apache.cxf.bus.spring.Jsr250BeanPostProcessor:org.apache.cxf.resource.ResourceManager getResourceManager(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.Jsr250BeanPostProcessor:java.lang.Object postProcessAfterInitialization(java.lang.Object,java.lang.String)",
            "org.apache.cxf.bus.spring.Jsr250BeanPostProcessor:java.lang.Object postProcessBeforeInitialization(java.lang.Object,java.lang.String)",
            "org.apache.cxf.bus.spring.Jsr250BeanPostProcessor:void postProcessBeforeDestruction(java.lang.Object,java.lang.String)"
        ]
    },
    "org.apache.cxf.bus.spring.SpringBus:java.lang.String getId()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.ManagedBus:javax.management.ObjectName getObjectName()",
            "org.apache.cxf.bus.managers.WorkQueueImplMBeanWrapper:javax.management.ObjectName getObjectName()",
            "org.apache.cxf.bus.managers.WorkQueueManagerImplMBeanWrapper:javax.management.ObjectName getObjectName()",
            "org.apache.cxf.bus.osgi.OSGIBusListener:void registerBusAsService()",
            "org.apache.cxf.endpoint.ManagedEndpoint:javax.management.ObjectName getObjectName()"
        ]
    },
    "org.apache.cxf.bus.spring.SpringBusFactory:void registerApplicationContextLifeCycleListener(org.apache.cxf.Bus,org.springframework.context.ConfigurableApplicationContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus finishCreatingBus(org.springframework.context.ConfigurableApplicationContext)"
        ]
    },
    "org.apache.cxf.catalog.OASISCatalogManager:org.apache.cxf.catalog.OASISCatalogManager getCatalogManager(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.catalog.CatalogXmlSchemaURIResolver:org.xml.sax.InputSource resolveEntity(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.configuration.jsse.TLSParameterJaxBUtils:java.io.InputStream getResourceAsStream(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.jsse.TLSParameterJaxBUtils:java.security.KeyStore getKeyStore(org.apache.cxf.configuration.security.KeyStoreType)",
            "org.apache.cxf.configuration.jsse.TLSParameterJaxBUtils:java.security.KeyStore getKeyStore(org.apache.cxf.configuration.security.CertStoreType)"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:org.apache.cxf.phase.PhaseInterceptorChain setupInterceptorChain(org.apache.cxf.endpoint.Endpoint)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] doInvoke(org.apache.cxf.endpoint.ClientCallback,org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)"
        ]
    },
    "org.apache.cxf.endpoint.EndpointImpl:void createBinding(org.apache.cxf.service.model.BindingInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.EndpointImpl:void <init>(org.apache.cxf.Bus,org.apache.cxf.service.Service,org.apache.cxf.service.model.EndpointInfo)"
        ]
    },
    "org.apache.cxf.endpoint.ManagedEndpoint:void start()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.endpoint.ManagedEndpoint:void stopServer(org.apache.cxf.endpoint.Server)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.managers.ServerLifeCycleManagerImpl:void stopServer(org.apache.cxf.endpoint.Server)"
        ]
    },
    "org.apache.cxf.endpoint.ServerImpl:void initDestination(org.apache.cxf.transport.DestinationFactory)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ServerImpl:void <init>(org.apache.cxf.Bus,org.apache.cxf.endpoint.Endpoint,org.apache.cxf.transport.DestinationFactory,org.apache.cxf.binding.BindingFactory)"
        ]
    },
    "org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver:void <init>(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.ClientOutFaultObserver:void <init>(org.apache.cxf.Bus)",
            "org.apache.cxf.interceptor.InFaultChainInitiatorObserver:void <init>(org.apache.cxf.Bus)",
            "org.apache.cxf.interceptor.OutFaultChainInitiatorObserver:void <init>(org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.interceptor.ClientOutFaultObserver:java.util.SortedSet getPhases()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver:void onMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.InFaultChainInitiatorObserver:java.util.SortedSet getPhases()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver:void onMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.OneWayProcessorInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.security.DelegatingAuthenticationInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.OutFaultChainInitiatorObserver:java.util.SortedSet getPhases()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver:void onMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.OutgoingChainInterceptor:org.apache.cxf.phase.PhaseInterceptorChain getChain(org.apache.cxf.message.Exchange,org.apache.cxf.phase.PhaseChainCache)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.service.factory.AbstractServiceFactoryBean:void setBus(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void addEndpointProperties(org.apache.cxf.endpoint.Endpoint,org.apache.cxf.Bus,org.apache.cxf.annotations.EndpointProperty[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void handleEvent(org.apache.cxf.service.factory.FactoryBeanListener$Event,org.apache.cxf.service.factory.AbstractServiceFactoryBean,java.lang.Object[])"
        ]
    },
    "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void setDataBinding(org.apache.cxf.service.factory.AbstractServiceFactoryBean,org.apache.cxf.annotations.DataBinding)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void handleEvent(org.apache.cxf.service.factory.FactoryBeanListener$Event,org.apache.cxf.service.factory.AbstractServiceFactoryBean,java.lang.Object[])"
        ]
    },
    "org.apache.cxf.service.invoker.PerRequestFactory:java.lang.Object create(org.apache.cxf.message.Exchange)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.invoker.FactoryInvoker:java.lang.Object getServiceObject(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.service.invoker.PooledFactory:java.lang.Object createObject(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.service.invoker.SessionFactory:java.lang.Object create(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.service.invoker.SingletonFactory:void createBean(org.apache.cxf.message.Exchange)"
        ]
    },
    "org.apache.cxf.service.invoker.spring.SpringBeanFactory:java.lang.Object create(org.apache.cxf.message.Exchange)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.invoker.FactoryInvoker:java.lang.Object getServiceObject(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.service.invoker.PooledFactory:java.lang.Object createObject(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.service.invoker.SessionFactory:java.lang.Object create(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.service.invoker.SingletonFactory:void createBean(org.apache.cxf.message.Exchange)"
        ]
    },
    "org.apache.cxf.transport.ChainInitiationObserver:void <init>(org.apache.cxf.endpoint.Endpoint,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.AbstractBindingFactory:void addListener(org.apache.cxf.transport.Destination,org.apache.cxf.endpoint.Endpoint)"
        ]
    },
    "org.apache.cxf.transport.MultipleEndpointObserver:void <init>(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.transport.TransportFinder:void <init>(org.apache.cxf.Bus,java.util.Map,java.util.Set,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.managers.ConduitInitiatorManagerImpl:org.apache.cxf.transport.ConduitInitiator getConduitInitiator(java.lang.String)",
            "org.apache.cxf.bus.managers.ConduitInitiatorManagerImpl:org.apache.cxf.transport.ConduitInitiator getConduitInitiatorForUri(java.lang.String)",
            "org.apache.cxf.bus.managers.DestinationFactoryManagerImpl:org.apache.cxf.transport.DestinationFactory getDestinationFactory(java.lang.String)",
            "org.apache.cxf.bus.managers.DestinationFactoryManagerImpl:org.apache.cxf.transport.DestinationFactory getDestinationFactoryForUri(java.lang.String)"
        ]
    },
    "org.apache.cxf.transport.TransportURIResolver:org.xml.sax.InputSource resolve(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.catalog.CatalogXmlSchemaURIResolver:org.xml.sax.InputSource resolveEntity(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils$SchemaLSResourceResolver:org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.ws.addressing.ContextUtils$1:org.apache.cxf.transport.Conduit getBackChannel(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.OneWayProcessorInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:org.apache.cxf.transport.Conduit getBackChannelConduit(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.ws.addressing.MAPAggregator:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.security.DelegatingAuthenticationInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.addressing.MAPAggregator:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.ws.addressing.WSAddressingFeature:void initializeProvider(org.apache.cxf.interceptor.InterceptorProvider,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.feature.AbstractFeature:void initialize(org.apache.cxf.endpoint.Server,org.apache.cxf.Bus)",
            "org.apache.cxf.feature.AbstractFeature:void initialize(org.apache.cxf.endpoint.Client,org.apache.cxf.Bus)",
            "org.apache.cxf.feature.AbstractFeature:void initialize(org.apache.cxf.interceptor.InterceptorProvider,org.apache.cxf.Bus)",
            "org.apache.cxf.feature.AbstractFeature:void initialize(org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.bus.blueprint.ConfigurerImpl:void configureBean(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadAndRegister(org.apache.cxf.bus.extension.Extension)"
        ]
    },
    "org.apache.cxf.bus.blueprint.ConfigurerImpl:void configureBean(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.util.PackageUtils:java.lang.String getPackageNameByNameSpaceURI(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.PackageUtils:java.lang.String parsePackageName(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.bus.osgi.OSGiBeanLocator:void <init>(org.apache.cxf.configuration.ConfiguredBeanLocator,org.osgi.framework.BundleContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.osgi.OSGIBusListener:void registerConfiguredBeanLocator()"
        ]
    },
    "org.apache.cxf.bus.osgi.OSGiBeanLocator:java.util.List getBeansFromOsgiService(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.osgi.OSGiBeanLocator:java.util.Collection getBeansOfType(java.lang.Class)"
        ]
    },
    "org.apache.cxf.message.MessageUtils:boolean isTrue(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.AttachmentUtil:boolean isMtomEnabled(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.AbstractConduitSelector:void complete(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.AbstractEndpointFactory:boolean checkPrivateEndpoint(org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:void writeParts(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.message.MessageContentsList,java.util.List)",
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:org.apache.cxf.databinding.DataWriter getDataWriter(org.apache.cxf.message.Message,org.apache.cxf.service.Service,java.lang.Class)",
            "org.apache.cxf.interceptor.AttachmentOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.FIStaxInInterceptor:boolean isHttpVerbSupported(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.FIStaxOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.OneWayProcessorInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.transform.TransformOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean isRobustOneWay(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.message.MessageUtils:boolean getContextualBoolean(org.apache.cxf.message.Message,java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.AbstractConduitSelector$ContextualBooleanGetter:boolean isFullComparison()",
            "org.apache.cxf.feature.transform.AbstractXSLTInterceptor:boolean checkContextProperty(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.ClientFaultConverter:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxInEndingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.transform.TransformInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.transform.TransformOutInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.AbstractLoggingInterceptor:boolean isLoggingDisabledNow(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.AbstractLoggingInterceptor:java.util.logging.Logger getMessageLogger(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:void waitResponse(org.apache.cxf.message.Exchange)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] processResult(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,java.util.Map)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamReader configureReader(javax.xml.stream.XMLStreamReader,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.StaxInInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.helpers.ServiceUtils:org.apache.cxf.annotations.SchemaValidation$SchemaValidationType getOverrideSchemaValidationType(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.ServiceUtils:org.apache.cxf.annotations.SchemaValidation$SchemaValidationType getSchemaValidationType(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.helpers.ServiceUtils:org.apache.cxf.annotations.SchemaValidation$SchemaValidationType getSchemaValidationTypeFromModel(org.apache.cxf.service.model.AbstractPropertiesHolder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.ServiceUtils:org.apache.cxf.annotations.SchemaValidation$SchemaValidationType getSchemaValidationTypeFromModel(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.bus.CXFBusFactory:org.apache.cxf.Bus createBus(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.CXFBusFactory:org.apache.cxf.Bus createBus()"
        ]
    },
    "org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor:org.apache.cxf.Bus getBusForName(java.lang.String,org.springframework.context.ApplicationContext,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor:org.apache.cxf.Bus addDefaultBus(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor:org.apache.cxf.Bus addBus(org.springframework.context.ApplicationContext,java.lang.String)"
        ]
    },
    "org.apache.cxf.bus.spring.SpringBus$1:void onApplicationEvent(org.springframework.context.ApplicationEvent)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.spring.BusDefinitionParser$BusConfig:void setFeatures(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.spring.SpringBeanLocator:void <init>(org.springframework.context.ApplicationContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.SpringBusFactory:org.springframework.beans.factory.xml.NamespaceHandlerResolver tryFindNamespaceHandler(org.springframework.context.ApplicationContext)"
        ]
    },
    "org.apache.cxf.bus.extension.ExtensionManagerImpl:void load(java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void <init>(java.util.Map,java.util.Map,java.lang.ClassLoader)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void <init>(java.lang.String[],java.lang.ClassLoader,java.util.Map,org.apache.cxf.resource.ResourceManager,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.bus.spring.SpringBus:void destroyBeans()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void shutdown(boolean)"
        ]
    },
    "org.apache.cxf.bus.osgi.CXFExtensionBundleListener:void bundleChanged(org.osgi.framework.BundleEvent)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.osgi.CXFExtensionBundleListener:void shutdown()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.osgi.CXFActivator:void stop(org.osgi.framework.BundleContext)"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:void <init>(org.apache.cxf.Bus,org.apache.cxf.endpoint.Endpoint,org.apache.cxf.endpoint.ConduitSelector)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:void <init>(org.apache.cxf.Bus,org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.endpoint.ClientImpl:void <init>(org.apache.cxf.Bus,org.apache.cxf.endpoint.Endpoint,org.apache.cxf.transport.Conduit)"
        ]
    },
    "org.apache.cxf.transport.AbstractMultiplexDestination:org.apache.cxf.ws.addressing.EndpointReferenceType getAddressWithId(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.managers.CXFBusLifeCycleManager:void preShutdown()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void shutdown(boolean)",
            "org.apache.cxf.bus.managers.CXFBusLifeCycleManager:void preShutdown()",
            "org.apache.cxf.bus.managers.CXFBusLifeCycleManager:void postShutdown()"
        ]
    },
    "org.apache.cxf.bus.osgi.CXFExtensionBundleListener:void registerExistingBundles(org.osgi.framework.BundleContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.osgi.CXFActivator:void start(org.osgi.framework.BundleContext)"
        ]
    },
    "org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor:org.apache.cxf.Bus addDefaultBus(org.springframework.context.ApplicationContext)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.annotation.AnnotationProcessor:void accept(org.apache.cxf.common.'annotation'.AnnotationVisitor)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.injection.ResourceInjector:void inject(java.lang.Object,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.injection.ResourceInjector:void inject(java.lang.Object)"
        ]
    },
    "org.apache.cxf.bus.spring.Jsr250BeanPostProcessor:java.lang.Object postProcessAfterInitialization(java.lang.Object,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.spring.Jsr250BeanPostProcessor:void postProcessBeforeDestruction(java.lang.Object,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.configuration.jsse.TLSClientParametersConfig:java.lang.Object createTLSClientParameters(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.addressing.VersionTransformer:javax.xml.bind.JAXBContext getExposedJAXBContext(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.EndpointReferenceType parseEndpointReference(org.w3c.dom.Element)"
        ]
    },
    "org.apache.cxf.ws.addressing.EndpointReferenceUtils:javax.xml.bind.JAXBContext getJAXBContextForEPR()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:javax.xml.transform.Source convertToXML(org.apache.cxf.ws.addressing.EndpointReferenceType)"
        ]
    },
    "org.apache.cxf.common.jaxb.JAXBContextCache:void scanPackages(java.util.Set)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.jaxb.JAXBContextCache:org.apache.cxf.common.jaxb.JAXBContextCache$CachedContextAndSchemas getCachedContextAndSchemas(java.lang.Class[])",
            "org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser:javax.xml.bind.JAXBContext getContext(java.lang.Class)",
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:javax.xml.bind.JAXBContext getContext(java.lang.Class)",
            "org.apache.cxf.ws.addressing.ContextUtils:javax.xml.bind.JAXBContext getJAXBContext()"
        ]
    },
    "org.apache.cxf.catalog.OASISCatalogManager:void loadContextCatalogs(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.catalog.OASISCatalogManager:void <init>(org.apache.cxf.Bus)",
            "org.apache.cxf.catalog.OASISCatalogManager:void loadContextCatalogs()"
        ]
    },
    "org.apache.cxf.common.util.PropertiesLoaderUtils:java.util.Properties loadAllProperties(java.lang.String,java.lang.ClassLoader)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.util.WeakIdentityHashMap:int size()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.CacheMap:int size()",
            "org.apache.cxf.common.util.WeakIdentityHashMap:int size()",
            "org.apache.cxf.message.MessageImpl$1:void putAll(java.util.Map)",
            "org.apache.cxf.service.model.AbstractMessageContainer:void addMessagePart(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo addOutOfBandMessagePart(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.AbstractMessageContainer:int getMessagePartsNumber()",
            "org.apache.cxf.service.model.AbstractMessageContainer:int size()",
            "org.apache.cxf.service.model.OperationInfo:boolean hasFaults()",
            "org.apache.cxf.staxutils.transform.InTransformReader:void <init>(javax.xml.stream.XMLStreamReader,java.util.Map,java.util.Map,java.util.List,java.util.Map,boolean)",
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void <init>(javax.xml.stream.XMLStreamWriter,java.util.Map,java.util.Map,java.util.List,java.util.Map,boolean,java.lang.String)"
        ]
    },
    "org.apache.cxf.message.MessageImpl$1:void putAll(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void <init>(java.util.Map,java.util.Map,java.lang.ClassLoader)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void setProperties(java.util.Map)",
            "org.apache.cxf.common.jaxb.JAXBContextCache:org.apache.cxf.common.jaxb.JAXBContextCache$CachedContextAndSchemas getCachedContextAndSchemas(java.util.Set,java.lang.String,java.util.Map,java.util.Collection,boolean)",
            "org.apache.cxf.endpoint.ClientImpl$EchoContext:void putAll(java.util.Map)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] processResult(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,java.util.Map)",
            "org.apache.cxf.feature.validation.DefaultSchemaValidationTypeProvider:void <init>(java.util.Map)",
            "org.apache.cxf.helpers.MapNamespaceContext:void addNamespaces(java.util.Map)",
            "org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor:void setMethodRolesMap(java.util.Map)",
            "org.apache.cxf.message.MessageImpl:void calcContextCache()",
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.RelatesToType convert(org.apache.cxf.ws.addressing.v200408.Relationship)",
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.RelatesToType convert(org.apache.cxf.ws.addressing.v200403.Relationship)",
            "org.apache.cxf.ws.addressing.VersionTransformer:void putAll(java.util.Map,java.util.Map)"
        ]
    },
    "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo addOutOfBandMessagePart(javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.service.model.AbstractMessageContainer:int getMessagePartsNumber()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.service.model.AbstractMessageContainer:int size()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.service.model.OperationInfo:boolean hasFaults()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.util.WeakIdentityHashMap:java.util.Collection values()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.BusFactory:void clearDefaultBusForAnyThread(org.apache.cxf.Bus)",
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:void shutdown(boolean)",
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:void run()",
            "org.apache.cxf.bus.osgi.ManagedWorkQueueList:void addAllToWorkQueueManager(org.apache.cxf.workqueue.WorkQueueManager)",
            "org.apache.cxf.bus.osgi.ManagedWorkQueueList:void shutDown()",
            "org.apache.cxf.common.util.CacheMap:java.util.Collection values()",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.util.Collection values()",
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addOneSchemaCrossImports(org.apache.ws.commons.schema.XmlSchema)",
            "org.apache.cxf.service.model.AbstractMessageContainer:int getMessagePartIndex(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePartByIndex(int)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePart(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.AbstractMessageContainer:java.util.List getMessageParts()",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getFirstMessagePart()",
            "org.apache.cxf.service.model.BindingInfo:java.util.Collection getOperations()",
            "org.apache.cxf.service.model.BindingInfo:org.apache.cxf.service.model.BindingOperationInfo getOperation(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.BindingOperationInfo:java.util.Collection getFaults()",
            "org.apache.cxf.service.model.InterfaceInfo:java.util.Collection getOperations()",
            "org.apache.cxf.service.model.OperationInfo:java.util.Collection getFaults()",
            "org.apache.cxf.staxutils.validation.W3CMultiSchemaFactory:org.codehaus.stax2.validation.XMLValidationSchema loadSchemas(java.lang.String,java.util.Map)",
            "org.apache.cxf.transport.TransportFinder:java.lang.Object checkForURI(java.lang.String)"
        ]
    },
    "org.apache.cxf.service.model.AbstractMessageContainer:java.util.List getMessageParts()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.ClientFaultConverter:void processFaultDetail(org.apache.cxf.interceptor.Fault,org.apache.cxf.message.Message)",
            "org.apache.cxf.service.ServiceModelVisitor:void visitOperation(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo getMessagePart(int)",
            "org.apache.cxf.service.model.BindingMessageInfo:void <init>(org.apache.cxf.service.model.MessageInfo,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.service.model.MessageInfo:java.util.Map getMessagePartsMap()",
            "org.apache.cxf.service.model.MessageInfo:java.util.List getOrderedParts(java.util.List)",
            "org.apache.cxf.service.model.ServiceModelUtil:java.util.List getOperationInputPartNames(org.apache.cxf.service.model.OperationInfo)"
        ]
    },
    "org.apache.cxf.service.model.BindingInfo:java.util.Collection getOperations()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.stax.StaxDataBindingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.feature.validation.SchemaValidationFeature:void initialise(org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void handleEvent(org.apache.cxf.service.factory.FactoryBeanListener$Event,org.apache.cxf.service.factory.AbstractServiceFactoryBean,java.lang.Object[])",
            "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void addBindingOperationDocs(org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.service.factory.SimpleMethodDispatcher:org.apache.cxf.service.model.BindingOperationInfo getBindingOperation(java.lang.reflect.Method,org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperation(org.apache.cxf.message.Exchange,java.lang.String)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperationForWrapperElement(org.apache.cxf.message.Exchange,javax.xml.namespace.QName,boolean)"
        ]
    },
    "org.apache.cxf.service.model.BindingOperationInfo:java.util.Collection getFaults()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.FaultOutInterceptor:org.apache.cxf.service.model.FaultInfo getFaultForClass(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Class)",
            "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void addBindingOperationDocs(org.apache.cxf.endpoint.Endpoint)"
        ]
    },
    "org.apache.cxf.service.model.InterfaceInfo:java.util.Collection getOperations()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.ServiceModelVisitor:void walk()",
            "org.apache.cxf.service.model.BindingInfo:org.apache.cxf.service.model.BindingOperationInfo buildOperation(javax.xml.namespace.QName,java.lang.String,java.lang.String)",
            "org.apache.cxf.service.model.ServiceInfo:void initMessagesMap()"
        ]
    },
    "org.apache.cxf.service.model.OperationInfo:java.util.Collection getFaults()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.ClientFaultConverter:void processFaultDetail(org.apache.cxf.interceptor.Fault,org.apache.cxf.message.Message)",
            "org.apache.cxf.service.ServiceModelVisitor:void visitOperation(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void addDocumentation(org.apache.cxf.service.model.OperationInfo,org.apache.cxf.annotations.WSDLDocumentation$Placement,org.apache.cxf.annotations.WSDLDocumentation[])",
            "org.apache.cxf.service.model.BindingOperationInfo:void <init>(org.apache.cxf.service.model.BindingInfo,org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.UnwrappedOperationInfo:java.util.Collection getFaults()"
        ]
    },
    "org.apache.cxf.interceptor.security.DepthRestrictingStreamInterceptor:void <init>(java.lang.String,java.util.List,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.interceptor.transform.TransformInInterceptor:void <init>(java.lang.String,java.util.List,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.interceptor.security.DepthRestrictingStreamInterceptor:void <init>(java.lang.String,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.security.DepthRestrictingStreamInterceptor:void <init>(java.lang.String,java.util.List,java.util.List)"
        ]
    },
    "org.apache.cxf.interceptor.transform.TransformInInterceptor:void <init>(java.lang.String,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.transform.TransformInInterceptor:void <init>(java.lang.String,java.util.List,java.util.List)"
        ]
    },
    "org.apache.cxf.common.util.ClasspathScanner:java.util.Map findClasses(java.util.Collection,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.ClasspathScanner:java.util.Map findClasses(java.lang.String,java.lang.Class[])",
            "org.apache.cxf.common.util.ClasspathScanner:java.util.Map findClasses(java.util.Collection,java.lang.Class[])"
        ]
    },
    "org.apache.cxf.common.util.ClasspathScanner:java.util.List findResources(java.lang.String,java.lang.String,java.lang.ClassLoader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.ClasspathScanner:java.util.List findResources(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.common.util.ClasspathScanner:java.util.List findResources(java.util.Collection,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.message.AbstractWrappedMessage:java.util.Set getContextualPropertyKeys()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.message.AbstractWrappedMessage:java.util.Set getContextualPropertyKeys()"
        ]
    },
    "org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser:void mapElementToJaxbProperty(org.apache.aries.blueprint.ParserContext,org.apache.aries.blueprint.mutable.MutableBeanMetadata,org.w3c.dom.Element,javax.xml.namespace.QName,java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.configuration.jsse.TLSClientParameters:int hash(int,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.jsse.TLSClientParameters:int hashCode()"
        ]
    },
    "org.apache.cxf.configuration.jsse.TLSParameterJaxBUtils:javax.net.ssl.TrustManager[] getTrustManagers(org.apache.cxf.configuration.security.TrustManagersType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.jsse.TLSClientParametersConfig:org.apache.cxf.configuration.jsse.TLSClientParameters createTLSClientParametersFromType(org.apache.cxf.configuration.security.TLSClientParametersType)",
            "org.apache.cxf.configuration.jsse.TLSServerParametersConfig:void <init>(org.apache.cxf.configuration.security.TLSServerParametersType)"
        ]
    },
    "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void mapElementToJaxbProperty(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder,javax.xml.namespace.QName,java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void mapElementToJaxbProperty(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder,javax.xml.namespace.QName,java.lang.String)"
        ]
    },
    "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void mapElementToJaxbPropertyFactory(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder,java.lang.String,java.lang.Class,java.lang.Class,java.lang.String,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:org.springframework.beans.factory.support.AbstractBeanDefinition mapElementToJaxbBean(org.w3c.dom.Element,java.lang.Class,java.lang.Class,java.lang.String,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.configuration.spring.ConfigurerImpl:void <init>(org.springframework.context.ApplicationContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.SpringBus:void setApplicationContext(org.springframework.context.ApplicationContext)"
        ]
    },
    "org.apache.cxf.databinding.source.XMLStreamDataReader:java.lang.Object read(org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamReader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.source.XMLStreamDataReader:java.lang.Object read(org.apache.cxf.service.model.MessagePartInfo,java.lang.Object)"
        ]
    },
    "org.apache.cxf.databinding.source.XMLStreamDataReader:java.lang.Object read(javax.xml.namespace.QName,java.lang.Object,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.feature.WrappedFeature:void initialize(org.apache.cxf.endpoint.Client,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.feature.WrappedFeature:void initialize(org.apache.cxf.endpoint.Client,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.feature.WrappedFeature:void initialize(org.apache.cxf.endpoint.Server,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.feature.WrappedFeature:void initialize(org.apache.cxf.endpoint.Server,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.common.jaxb.JAXBUtils:java.lang.Object unmarshall(javax.xml.bind.JAXBContext,org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.jaxb.JAXBUtils:javax.xml.bind.JAXBElement unmarshall(javax.xml.bind.JAXBContext,org.w3c.dom.Element,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.jaxb.JAXBUtils:java.lang.Object unmarshall(javax.xml.bind.JAXBContext,javax.xml.transform.Source)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.jaxb.JAXBUtils:javax.xml.bind.JAXBElement unmarshall(javax.xml.bind.JAXBContext,javax.xml.stream.XMLStreamReader,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser$JAXBBeanFactory:java.lang.Object createJAXBBean(java.lang.String)",
            "org.apache.cxf.configuration.jsse.TLSClientParametersConfig:java.lang.Object createTLSClientParameters(java.lang.String)",
            "org.apache.cxf.configuration.spring.JAXBBeanFactory:java.lang.Object createJAXBBean(javax.xml.bind.JAXBContext,java.lang.String,java.lang.Class)"
        ]
    },
    "org.apache.cxf.common.jaxb.JAXBUtils:java.lang.Object unmarshall(javax.xml.bind.JAXBContext,javax.xml.stream.XMLStreamReader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.JAXBBeanFactory:java.lang.Object createJAXBBean(javax.xml.bind.JAXBContext,java.lang.String,java.lang.Class)"
        ]
    },
    "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:java.lang.Object unmarshalFactoryString(java.lang.String,javax.xml.bind.JAXBContext,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.EndpointReferenceType parseEndpointReference(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.endpoint.AbstractConduitSelector:void complete(org.apache.cxf.message.Exchange)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:void completeExchange(org.apache.cxf.message.Exchange)"
        ]
    },
    "org.apache.cxf.endpoint.DeferredConduitSelector:org.apache.cxf.transport.Conduit selectConduit(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:org.apache.cxf.transport.Conduit getConduit()",
            "org.apache.cxf.message.ExchangeImpl:org.apache.cxf.transport.Conduit getConduit(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.endpoint.UpfrontConduitSelector:void prepare(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:void prepareConduitSelector(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.endpoint.UpfrontConduitSelector:org.apache.cxf.transport.Conduit selectConduit(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:org.apache.cxf.transport.Conduit getConduit()",
            "org.apache.cxf.message.ExchangeImpl:org.apache.cxf.transport.Conduit getConduit(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:void invoke(org.apache.cxf.endpoint.ClientCallback,org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:void invoke(org.apache.cxf.endpoint.ClientCallback,org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[])",
            "org.apache.cxf.endpoint.ClientImpl:void invoke(org.apache.cxf.endpoint.ClientCallback,org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map)",
            "org.apache.cxf.endpoint.ClientImpl:void invoke(org.apache.cxf.endpoint.ClientCallback,org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],org.apache.cxf.message.Exchange)"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map)"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl$2$1:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl$2:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl$3:void run()",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl$AWQThreadFactory$1:void run()",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl$DelayedTaskWrapper:void run()",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void execute(java.lang.Runnable,long)",
            "org.apache.cxf.workqueue.SynchronousExecutor:void execute(java.lang.Runnable)"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl$2:void onMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:void wrapExceptionAsFault(org.apache.cxf.message.Message,java.lang.RuntimeException)"
        ]
    },
    "org.apache.cxf.phase.PhaseInterceptorChain:void wrapExceptionAsFault(org.apache.cxf.message.Message,java.lang.RuntimeException)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.bus.managers.ServerRegistryImpl:void preShutdown()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.managers.CXFBusLifeCycleManager:void preShutdown()"
        ]
    },
    "org.apache.cxf.endpoint.ManagedEndpoint:void destroy()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.staxutils.transform.OutTransformWriter:void <init>(javax.xml.stream.XMLStreamWriter,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.MappingBeanDefinitionParser:org.w3c.dom.Element transformElement(org.w3c.dom.Element)"
        ]
    },
    "org.apache.cxf.staxutils.transform.OutTransformWriter:void <init>(javax.xml.stream.XMLStreamWriter,java.util.Map,java.util.Map,java.util.List,boolean,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.staxutils.transform.TransformUtils:javax.xml.stream.XMLStreamWriter createTransformWriterIfNeeded(javax.xml.stream.XMLStreamWriter,java.io.OutputStream,java.util.Map,java.util.List,java.util.Map,boolean,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.staxutils.transform.TransformUtils:javax.xml.stream.XMLStreamWriter createTransformWriterIfNeeded(javax.xml.stream.XMLStreamWriter,java.io.OutputStream,java.util.Map,java.util.List,java.util.Map,java.util.Map,boolean,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.transform.TransformOutInterceptor:javax.xml.stream.XMLStreamWriter createTransformWriterIfNeeded(javax.xml.stream.XMLStreamWriter,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.PrettyPrintXMLStreamWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamWriter,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElementEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void write(javax.xml.namespace.QName,boolean)"
        ]
    },
    "org.apache.cxf.staxutils.OverlayW3CDOMStreamWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.PrettyPrintXMLStreamWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamWriter,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElementEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cxf.staxutils.W3CDOMStreamWriter:void writeEmptyElement(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.staxutils.PrettyPrintXMLStreamWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.PrettyPrintXMLStreamWriter:void writeStartElement(java.lang.String)",
            "org.apache.cxf.staxutils.PrettyPrintXMLStreamWriter:void writeStartElement(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.PrettyPrintXMLStreamWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamWriter,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElementEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamWriter,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.staxutils.W3CDOMStreamWriter:void writeEmptyElement(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeEmptyElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.PrettyPrintXMLStreamWriter:void writeEmptyElement(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.PrettyPrintXMLStreamWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeAttributeEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.staxutils.PrettyPrintXMLStreamWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.PrettyPrintXMLStreamWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeAttributeEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:void writeAttributeEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElementEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)"
        ]
    },
    "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:java.lang.String getPrefix(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.staxutils.PrettyPrintXMLStreamWriter:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:java.lang.String getUniquePrefix(javax.xml.stream.XMLStreamWriter,java.lang.String,boolean)"
        ]
    },
    "org.apache.cxf.staxutils.PrettyPrintXMLStreamWriter:java.lang.String getPrefix(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.staxutils.PrettyPrintXMLStreamWriter:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:java.lang.String getUniquePrefix(javax.xml.stream.XMLStreamWriter,java.lang.String,boolean)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:java.lang.String getUniquePrefix(javax.xml.stream.XMLStreamWriter,java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.CachingXmlEventWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:java.lang.String getUniquePrefix(javax.xml.stream.XMLStreamWriter,java.lang.String)"
        ]
    },
    "org.apache.cxf.staxutils.W3CNamespaceContext:java.lang.String getPrefix(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.staxutils.W3CDOMStreamWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.W3CDOMStreamWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.W3CDOMStreamWriter:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.staxutils.W3CNamespaceContext:java.lang.String getPrefix(org.w3c.dom.Element,java.lang.String)",
            "org.apache.cxf.staxutils.W3CNamespaceContext:java.util.Iterator getPrefixes(java.lang.String)",
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:java.lang.String getPrefix(java.lang.String)"
        ]
    },
    "org.apache.cxf.endpoint.AbstractEndpointFactory:boolean initializeAnnotationInterceptors(org.apache.cxf.interceptor.AnnotationInterceptors,org.apache.cxf.endpoint.Endpoint)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.interceptor.security.JAASLoginInterceptor:org.apache.cxf.security.SecurityContext createSecurityContext(java.lang.String,javax.security.auth.Subject)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.security.JAASLoginInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.security.AbstractSecurityContextInInterceptor:org.apache.cxf.security.SecurityContext createSecurityContext(java.security.Principal,javax.security.auth.Subject)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.interceptor.security.RolePrefixSecurityContextImpl:void <init>(javax.security.auth.Subject,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.interceptor.security.AbstractAuthorizingInInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.security.DelegatingAuthenticationInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.security.OperationInfoAuthorizingInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.security.DelegatingAuthenticationInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.LoggingInInterceptor:void logging(java.util.logging.Logger,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.LoggingInInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.AbstractLoggingInterceptor:void writePayload(java.lang.StringBuilder,org.apache.cxf.io.CachedOutputStream,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.LoggingInInterceptor:void logInputStream(org.apache.cxf.message.Message,java.io.InputStream,org.apache.cxf.interceptor.LoggingMessage,java.lang.String,java.lang.String)",
            "org.apache.cxf.interceptor.LoggingOutInterceptor$LoggingCallback:void onClose(org.apache.cxf.io.CachedOutputStream)"
        ]
    },
    "org.apache.cxf.io.CachedOutputStream:void writeCacheTo(java.lang.StringBuilder,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.AbstractLoggingInterceptor:void writePayload(java.lang.StringBuilder,org.apache.cxf.io.CachedOutputStream,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.io.CachedOutputStream:void writeCacheTo(java.lang.StringBuilder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.io.CachedOutputStream:java.lang.String toString()"
        ]
    },
    "org.apache.cxf.attachment.AttachmentDataSource:java.io.InputStream getInputStream()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.AttachmentDeserializer:void cacheStreamedAttachments()",
            "org.apache.cxf.attachment.ImageDataContentHandler:java.lang.Object getContent(javax.activation.DataSource)",
            "org.apache.cxf.attachment.LazyDataSource:java.io.InputStream getInputStream()",
            "org.apache.cxf.databinding.source.XMLStreamDataWriter:void write(java.lang.Object,javax.xml.stream.XMLStreamWriter)"
        ]
    },
    "org.apache.cxf.attachment.AttachmentDataSource:void hold(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.databinding.source.NodeDataReader:java.lang.Object read(javax.xml.namespace.QName,java.lang.Object,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.feature.transform.XSLTInInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.security.DelegatingAuthenticationInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.feature.transform.XSLTInInterceptor:void transformIS(org.apache.cxf.message.Message,java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.feature.transform.XSLTInInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.io.AbstractThresholdOutputStream:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.jaxb.JAXBUtils:void closeUnmarshaller(javax.xml.bind.Unmarshaller)",
            "org.apache.cxf.endpoint.ClientImpl:void destroy()",
            "org.apache.cxf.endpoint.ServerImpl:void stop()",
            "org.apache.cxf.feature.transform.XSLTOutInterceptor$XSLTCachedOutputStreamCallback:void onClose(org.apache.cxf.io.CachedOutputStream)",
            "org.apache.cxf.io.AbstractWrappedOutputStream:void close()",
            "org.apache.cxf.io.CacheAndWriteOutputStream:void closeFlowthroughStream()",
            "org.apache.cxf.io.CacheAndWriteOutputStream:void postClose()",
            "org.apache.cxf.io.CachedOutputStream:void close()",
            "org.apache.cxf.io.CachedOutputStream:void resetOut(java.io.OutputStream,boolean)",
            "org.apache.cxf.io.CachedOutputStream:void createFileOutputStream()",
            "org.apache.cxf.io.CachedOutputStream:boolean maybeDeleteTempFile(java.lang.Object)",
            "org.apache.cxf.io.CachedWriter:java.io.OutputStreamWriter createOutputStreamWriter(java.io.File)",
            "org.apache.cxf.transport.AbstractConduit:void close(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.io.CachedOutputStream:void enforceLimits()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.io.CachedOutputStream:void write(byte[],int,int)",
            "org.apache.cxf.io.CachedOutputStream:void write(byte[])",
            "org.apache.cxf.io.CachedOutputStream:void write(int)"
        ]
    },
    "org.apache.cxf.io.CachedOutputStream:boolean access$000(org.apache.cxf.io.CachedOutputStream,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.io.CachedOutputStream$TransferableFileInputStream:void close()"
        ]
    },
    "org.apache.cxf.interceptor.LoggingInInterceptor:void logReader(org.apache.cxf.message.Message,java.io.Reader,org.apache.cxf.interceptor.LoggingMessage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.LoggingInInterceptor:void logging(java.util.logging.Logger,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.io.CachedWriter:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.logging.Log4jLogger$HandlerWrapper:void append(org.apache.log4j.spi.LoggingEvent)",
            "org.apache.cxf.common.util.PackageUtils:java.lang.String combine(java.util.List,char)",
            "org.apache.cxf.common.util.PropertyUtils:boolean isTrue(java.lang.Object)",
            "org.apache.cxf.common.util.PropertyUtils:boolean isFalse(java.lang.Object)",
            "org.apache.cxf.common.util.PropertyUtils:java.lang.Long getLong(org.apache.cxf.message.Message,java.lang.String)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:java.util.List enumeratorValues(org.apache.ws.commons.schema.XmlSchemaSimpleType)",
            "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String[] getCiphersuitesToInclude(java.util.List,org.apache.cxf.configuration.security.FiltersType,java.lang.String[],java.lang.String[],java.util.logging.Logger)",
            "org.apache.cxf.endpoint.ClientImpl:boolean isThreadLocalRequestContext()",
            "org.apache.cxf.helpers.ServiceUtils:org.apache.cxf.annotations.SchemaValidation$SchemaValidationType getSchemaValidationType(java.lang.Object)"
        ]
    },
    "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.feature.transform.XSLTOutInterceptor$XSLTStreamWriter:void close()",
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void close()",
            "org.apache.cxf.staxutils.PrettyPrintXMLStreamWriter:void close()",
            "org.apache.cxf.staxutils.StaxUtils:void copy(javax.xml.stream.XMLStreamReader,java.io.OutputStream)",
            "org.apache.cxf.staxutils.StaxUtils:void writeTo(org.w3c.dom.Node,java.io.Writer,int)",
            "org.apache.cxf.staxutils.StaxUtils:void close(javax.xml.stream.XMLStreamWriter)"
        ]
    },
    "org.apache.cxf.staxutils.PrettyPrintXMLStreamWriter:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.AbstractLoggingInterceptor:void writePayload(java.lang.StringBuilder,org.apache.cxf.io.CachedOutputStream,java.lang.String,java.lang.String)",
            "org.apache.cxf.interceptor.AbstractLoggingInterceptor:void writePrettyPayload(java.lang.StringBuilder,java.io.StringWriter,java.lang.String)",
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void close()",
            "org.apache.cxf.staxutils.PrettyPrintXMLStreamWriter:void close()",
            "org.apache.cxf.staxutils.StaxUtils:void copy(javax.xml.stream.XMLStreamReader,java.io.OutputStream)",
            "org.apache.cxf.staxutils.StaxUtils:void writeTo(org.w3c.dom.Node,java.io.OutputStream,int)",
            "org.apache.cxf.staxutils.StaxUtils:void writeTo(org.w3c.dom.Node,java.io.Writer,int)",
            "org.apache.cxf.staxutils.StaxUtils:void close(javax.xml.stream.XMLStreamWriter)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:void copy(javax.xml.stream.XMLStreamReader,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.source.XMLStreamDataReader:java.io.InputStream getInputStream(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.feature.transform.XSLTInInterceptor:void transformXReader(org.apache.cxf.message.Message,javax.xml.stream.XMLStreamReader)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:void writeTo(org.w3c.dom.Node,java.io.Writer,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:void writeTo(org.w3c.dom.Node,java.io.Writer)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:void close(javax.xml.stream.XMLStreamWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser:void mapElementToJaxbProperty(org.apache.aries.blueprint.ParserContext,org.apache.aries.blueprint.mutable.MutableBeanMetadata,org.w3c.dom.Element,java.lang.String,java.lang.Class)",
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void mapElementToJaxbProperty(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder,java.lang.String,java.lang.Class)",
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:org.springframework.beans.factory.support.AbstractBeanDefinition mapElementToJaxbBean(org.w3c.dom.Element,java.lang.Class,java.lang.Class,java.lang.Class,java.lang.String,java.lang.Object[])",
            "org.apache.cxf.feature.transform.XSLTOutInterceptor$XSLTStreamWriter:void close()",
            "org.apache.cxf.interceptor.StaxOutEndingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.staxutils.StaxUtils:void copy(javax.xml.transform.Source,java.io.OutputStream)",
            "org.apache.cxf.staxutils.StaxUtils:void printXmlFragment(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.staxutils.StaxUtils:void print(org.w3c.dom.Node)",
            "org.apache.cxf.staxutils.StaxUtils:java.lang.String toString(javax.xml.transform.Source)",
            "org.apache.cxf.staxutils.StaxUtils:java.lang.String toString(org.w3c.dom.Document)",
            "org.apache.cxf.staxutils.StaxUtils:java.lang.String toString(org.w3c.dom.Element,int)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:javax.xml.validation.Schema createSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.feature.transform.XSLTInInterceptor:void transformReader(org.apache.cxf.message.Message,java.io.Reader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.feature.transform.XSLTInInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.io.CachedWriter:void enforceLimits()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.io.CachedWriter:void write(char[],int,int)"
        ]
    },
    "org.apache.cxf.io.CachedWriter:void access$000(org.apache.cxf.io.CachedWriter,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.io.CachedWriter$1:void close()"
        ]
    },
    "org.apache.cxf.phase.PhaseChainCache:org.apache.cxf.phase.PhaseInterceptorChain get(java.util.SortedSet,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.phase.PhaseChainCache:org.apache.cxf.phase.PhaseInterceptorChain get(java.util.SortedSet,java.util.List,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.phase.PhaseChainCache:org.apache.cxf.phase.PhaseInterceptorChain get(java.util.SortedSet,java.util.List,java.util.List,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:org.apache.cxf.phase.PhaseInterceptorChain getChain(org.apache.cxf.message.Exchange,org.apache.cxf.phase.PhaseChainCache)"
        ]
    },
    "org.apache.cxf.phase.PhaseChainCache:org.apache.cxf.phase.PhaseInterceptorChain get(java.util.SortedSet,java.util.List,java.util.List,java.util.List,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ClientImpl:org.apache.cxf.phase.PhaseInterceptorChain setupInterceptorChain(org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:org.apache.cxf.phase.PhaseInterceptorChain getChain(org.apache.cxf.message.Exchange,org.apache.cxf.phase.PhaseChainCache)",
            "org.apache.cxf.transport.ChainInitiationObserver:void onMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.phase.PhaseChainCache:org.apache.cxf.phase.PhaseInterceptorChain get(java.util.SortedSet,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ClientImpl:org.apache.cxf.phase.PhaseInterceptorChain setupInterceptorChain(org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:org.apache.cxf.phase.PhaseInterceptorChain getChain(org.apache.cxf.message.Exchange,org.apache.cxf.phase.PhaseChainCache)",
            "org.apache.cxf.transport.ChainInitiationObserver:void onMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.databinding.source.XMLStreamDataReader:javax.xml.stream.XMLStreamReader resetForStreaming(javax.xml.stream.XMLStreamReader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.source.XMLStreamDataReader:java.lang.Object read(javax.xml.namespace.QName,javax.xml.stream.XMLStreamReader,java.lang.Class)"
        ]
    },
    "org.apache.cxf.interceptor.FIStaxInInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.security.DelegatingAuthenticationInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.MessageSenderInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.security.DelegatingAuthenticationInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.StaxInInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.security.DelegatingAuthenticationInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.StaxOutInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.security.DelegatingAuthenticationInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.transform.TransformOutInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.security.DelegatingAuthenticationInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.common.injection.ResourceInjector:java.lang.Object resolveResource(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.injection.ResourceInjector:void injectResourceClassLevel(javax.'annotation'.Resource)",
            "org.apache.cxf.common.injection.ResourceInjector:void visitField(java.lang.reflect.Field,java.lang.'annotation'.Annotation)",
            "org.apache.cxf.common.injection.ResourceInjector:void visitMethod(java.lang.reflect.Method,java.lang.'annotation'.Annotation)"
        ]
    },
    "org.apache.cxf.service.model.BindingOperationInfo:void updateUnwrappedOperation()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.databinding.AbstractDataBinding:org.apache.ws.commons.schema.XmlSchema addSchemaDocument(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.common.xmlschema.SchemaCollection,org.w3c.dom.Document,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.staxutils.StaxUtils:void copy(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.TunedDocumentLoader:org.w3c.dom.Document loadFastinfosetDocument(java.net.URL)",
            "org.apache.cxf.databinding.source.XMLStreamDataReader:org.w3c.dom.Element validate(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.databinding.source.XMLStreamDataWriter:void write(java.lang.Object,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.databinding.stax.StaxDataBinding$XMLStreamDataWriter:void write(java.lang.Object,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void copy(javax.xml.transform.Source,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:org.w3c.dom.Document copy(org.w3c.dom.Document)",
            "org.apache.cxf.staxutils.StaxUtils:void copy(org.w3c.dom.Document,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void copy(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void copy(javax.xml.stream.XMLStreamReader,java.io.OutputStream)",
            "org.apache.cxf.staxutils.StaxUtils:void printXmlFragment(javax.xml.stream.XMLStreamReader)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:void copy(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.staxutils.StaxUtils:void writeNode(org.w3c.dom.Node,javax.xml.stream.XMLStreamWriter,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.source.XMLStreamDataWriter:void writeNode(org.w3c.dom.Node,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeDocument(org.w3c.dom.Document,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeNode(org.w3c.dom.Node,javax.xml.stream.XMLStreamWriter,boolean)"
        ]
    },
    "org.apache.cxf.staxutils.StaxSource:void parse(org.xml.sax.InputSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:void copy(javax.xml.transform.Source,javax.xml.stream.XMLStreamWriter)"
        ]
    },
    "org.apache.cxf.staxutils.StaxSource:void parse(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.staxutils.W3CNamespaceContext:java.lang.String getNamespaceURI(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:java.lang.String getUniquePrefix(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.W3CNamespaceContext:java.lang.String getNamespaceURI(org.w3c.dom.Element,java.lang.String)",
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:java.lang.String getNamespaceURI(java.lang.String)"
        ]
    },
    "org.apache.cxf.staxutils.DepthXMLStreamReader:java.lang.String getNamespaceURI(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DepthXMLStreamReader:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.namespace.QName readQName(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.staxutils.transform.InTransformReader:java.lang.String getNamespaceURI(java.lang.String)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:javax.xml.namespace.QName readQName(javax.xml.stream.XMLStreamReader)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.databinding.source.XMLStreamDataReader:javax.xml.transform.dom.DOMSource read(javax.xml.stream.XMLStreamReader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.source.XMLStreamDataReader:java.lang.Object read(javax.xml.namespace.QName,javax.xml.stream.XMLStreamReader,java.lang.Class)",
            "org.apache.cxf.databinding.source.XMLStreamDataReader:org.w3c.dom.Element validate(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.databinding.source.XMLStreamDataReader:java.lang.Object read(java.lang.Object)"
        ]
    },
    "org.apache.cxf.staxutils.DepthXMLStreamReader:java.lang.String getElementText()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DepthXMLStreamReader:java.lang.String getElementText()",
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.namespace.QName readQName(javax.xml.stream.XMLStreamReader)"
        ]
    },
    "org.apache.cxf.staxutils.DepthXMLStreamReader:int next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.source.XMLStreamDataReader:javax.xml.transform.dom.DOMSource read(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.staxutils.DepthRestrictingStreamReader:int next()",
            "org.apache.cxf.staxutils.DepthXMLStreamReader:java.lang.String getElementText()",
            "org.apache.cxf.staxutils.DepthXMLStreamReader:int next()",
            "org.apache.cxf.staxutils.DepthXMLStreamReader:int nextTag()",
            "org.apache.cxf.staxutils.FragmentStreamReader:int next()",
            "org.apache.cxf.staxutils.PartialXMLStreamReader:int next()",
            "org.apache.cxf.staxutils.StaxSource:void parse()",
            "org.apache.cxf.staxutils.StaxUtils:void nextEvent(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.staxutils.StaxUtils:boolean toNextText(org.apache.cxf.staxutils.DepthXMLStreamReader)",
            "org.apache.cxf.staxutils.StaxUtils:boolean toNextTag(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.staxutils.StaxUtils:boolean toNextTag(org.apache.cxf.staxutils.DepthXMLStreamReader,javax.xml.namespace.QName)",
            "org.apache.cxf.staxutils.StaxUtils:boolean skipToStartOfElement(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.staxutils.StaxUtils:boolean toNextElement(org.apache.cxf.staxutils.DepthXMLStreamReader)",
            "org.apache.cxf.staxutils.StaxUtils:boolean skipToStartOfElement(org.apache.cxf.staxutils.DepthXMLStreamReader)",
            "org.apache.cxf.staxutils.StaxUtils:void copy(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void readDocElements(org.w3c.dom.Document,org.w3c.dom.Node,javax.xml.stream.XMLStreamReader,boolean,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void readDocElements(org.w3c.dom.Document,org.w3c.dom.Node,javax.xml.stream.XMLStreamReader,org.apache.cxf.staxutils.StaxUtils$StreamToDOMContext)",
            "org.apache.cxf.staxutils.transform.InTransformReader:int next()",
            "org.apache.cxf.staxutils.transform.InTransformReader:void handleDeepDrop()"
        ]
    },
    "org.apache.cxf.staxutils.DepthXMLStreamReader:int nextTag()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.staxutils.StaxUtils:void nextEvent(javax.xml.stream.XMLStreamReader)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.staxutils.StaxUtils:boolean toNextText(org.apache.cxf.staxutils.DepthXMLStreamReader)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.staxutils.StaxUtils:boolean toNextTag(javax.xml.stream.XMLStreamReader)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.staxutils.StaxUtils:boolean toNextTag(org.apache.cxf.staxutils.DepthXMLStreamReader,javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.staxutils.StaxUtils:boolean skipToStartOfElement(javax.xml.stream.XMLStreamReader)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.staxutils.StaxUtils:boolean toNextElement(org.apache.cxf.staxutils.DepthXMLStreamReader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.stax.StaxDataBindingInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:boolean skipToStartOfElement(org.apache.cxf.staxutils.DepthXMLStreamReader)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.staxutils.StaxUtils:void readDocElements(org.w3c.dom.Document,org.w3c.dom.Node,javax.xml.stream.XMLStreamReader,boolean,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:void readDocElements(org.w3c.dom.Node,javax.xml.stream.XMLStreamReader,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void readDocElements(org.w3c.dom.Document,org.w3c.dom.Node,javax.xml.stream.XMLStreamReader,boolean,boolean)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:void readDocElements(org.w3c.dom.Document,org.w3c.dom.Node,javax.xml.stream.XMLStreamReader,org.apache.cxf.staxutils.StaxUtils$StreamToDOMContext)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.staxutils.DepthXMLStreamReader:java.lang.String getPrefix()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DepthXMLStreamReader:java.lang.String getPrefix()",
            "org.apache.cxf.staxutils.StaxSource:void parse()",
            "org.apache.cxf.staxutils.StaxSource:java.lang.String getQualifiedName()",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void readDocElements(org.w3c.dom.Document,org.w3c.dom.Node,javax.xml.stream.XMLStreamReader,boolean,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void readDocElements(org.w3c.dom.Document,org.w3c.dom.Node,javax.xml.stream.XMLStreamReader,org.apache.cxf.staxutils.StaxUtils$StreamToDOMContext)",
            "org.apache.cxf.staxutils.transform.InTransformReader:javax.xml.namespace.QName readCurrentElement()"
        ]
    },
    "org.apache.cxf.staxutils.StaxSource:java.lang.String getQualifiedName()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.staxutils.DepthXMLStreamReader:java.lang.String getNamespacePrefix(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DepthXMLStreamReader:java.lang.String getNamespacePrefix(int)",
            "org.apache.cxf.staxutils.StaxSource:void parse()",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void readDocElements(org.w3c.dom.Document,org.w3c.dom.Node,javax.xml.stream.XMLStreamReader,boolean,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void readDocElements(org.w3c.dom.Document,org.w3c.dom.Node,javax.xml.stream.XMLStreamReader,org.apache.cxf.staxutils.StaxUtils$StreamToDOMContext)",
            "org.apache.cxf.staxutils.transform.InTransformReader:java.lang.String getNamespacePrefix(int)"
        ]
    },
    "org.apache.cxf.staxutils.DepthXMLStreamReader:java.lang.String getAttributePrefix(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DepthXMLStreamReader:java.lang.String getAttributePrefix(int)",
            "org.apache.cxf.staxutils.StaxSource:org.xml.sax.Attributes getAttributes()",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void readDocElements(org.w3c.dom.Document,org.w3c.dom.Node,javax.xml.stream.XMLStreamReader,boolean,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void readDocElements(org.w3c.dom.Document,org.w3c.dom.Node,javax.xml.stream.XMLStreamReader,org.apache.cxf.staxutils.StaxUtils$StreamToDOMContext)"
        ]
    },
    "org.apache.cxf.staxutils.StaxSource:org.xml.sax.Attributes getAttributes()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxSource:void parse()"
        ]
    },
    "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeNamespace(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeNamespace(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.PrettyPrintXMLStreamWriter:void writeNamespace(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamWriter,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:java.lang.String getUniquePrefix(javax.xml.stream.XMLStreamWriter,java.lang.String,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void writeNamespace(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.staxutils.PrettyPrintXMLStreamWriter:void writeNamespace(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeNamespace(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.PrettyPrintXMLStreamWriter:void writeNamespace(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamWriter,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:java.lang.String getUniquePrefix(javax.xml.stream.XMLStreamWriter,java.lang.String,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeDefaultNamespace(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeDefaultNamespace(java.lang.String)",
            "org.apache.cxf.staxutils.PrettyPrintXMLStreamWriter:void writeDefaultNamespace(java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamWriter,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void writeNamespace(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void writeDefaultNamespace(java.lang.String)"
        ]
    },
    "org.apache.cxf.staxutils.PrettyPrintXMLStreamWriter:void writeDefaultNamespace(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeDefaultNamespace(java.lang.String)",
            "org.apache.cxf.staxutils.PrettyPrintXMLStreamWriter:void writeDefaultNamespace(java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamWriter,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.cxf.staxutils.transform.OutTransformWriter:void writeStartElement(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeStartElement(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.PrettyPrintXMLStreamWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElementEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void writeAttributeAsElement(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.staxutils.transform.OutTransformWriter:void writeStartElement(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeStartElement(java.lang.String)",
            "org.apache.cxf.staxutils.PrettyPrintXMLStreamWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamWriter,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElementEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)"
        ]
    },
    "org.apache.cxf.staxutils.transform.OutTransformWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.PrettyPrintXMLStreamWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeAttributeEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.cxf.staxutils.transform.OutTransformWriter:void writeAttribute(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeAttribute(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.PrettyPrintXMLStreamWriter:void writeAttribute(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeAttributeEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.cxf.staxutils.transform.InTransformReader:void <init>(javax.xml.stream.XMLStreamReader,java.util.Map,java.util.Map,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.staxutils.transform.TransformUtils:javax.xml.stream.XMLStreamReader createTransformReaderIfNeeded(javax.xml.stream.XMLStreamReader,java.io.InputStream,java.util.List,java.util.Map,java.util.Map,java.util.Map,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.transform.TransformInInterceptor:javax.xml.stream.XMLStreamReader createTransformReaderIfNeeded(javax.xml.stream.XMLStreamReader,java.io.InputStream)",
            "org.apache.cxf.staxutils.transform.TransformUtils:javax.xml.stream.XMLStreamReader createTransformReaderIfNeeded(javax.xml.stream.XMLStreamReader,java.io.InputStream,java.util.List,java.util.Map,java.util.Map,boolean)"
        ]
    },
    "org.apache.cxf.staxutils.validation.WoodstoxValidationImpl:void setupValidation(javax.xml.stream.XMLStreamReader,org.apache.cxf.endpoint.Endpoint,org.apache.cxf.service.model.ServiceInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.validation.StaxSchemaValidationInInterceptor:void setSchemaInMessage(org.apache.cxf.message.Message,javax.xml.stream.XMLStreamReader)"
        ]
    },
    "org.apache.cxf.staxutils.validation.WoodstoxValidationImpl:void setupValidation(javax.xml.stream.XMLStreamWriter,org.apache.cxf.endpoint.Endpoint,org.apache.cxf.service.model.ServiceInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.source.XMLStreamDataReader:org.w3c.dom.Element validate(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.staxutils.validation.StaxSchemaValidationOutInterceptor:void setSchemaInMessage(org.apache.cxf.message.Message,javax.xml.stream.XMLStreamWriter)"
        ]
    },
    "org.apache.cxf.transport.TransportFinder$3:boolean loadBean(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)",
            "org.apache.cxf.bus.spring.SpringBeanLocator:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)"
        ]
    },
    "org.apache.cxf.transport.TransportFinder$URIBeanLoaderListener:boolean beanLoaded(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)",
            "org.apache.cxf.bus.spring.SpringBeanLocator:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)"
        ]
    },
    "org.apache.cxf.bus.managers.ConduitInitiatorManagerImpl:org.apache.cxf.transport.ConduitInitiator getConduitInitiatorForUri(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.TransportURIResolver:org.xml.sax.InputSource resolve(java.lang.String,java.lang.String)",
            "org.apache.cxf.ws.addressing.ContextUtils$1:org.apache.cxf.transport.Conduit getBackChannel(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.bus.managers.DestinationFactoryManagerImpl:org.apache.cxf.transport.DestinationFactory getDestinationFactoryForUri(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ServerImpl:void initDestination(org.apache.cxf.transport.DestinationFactory)"
        ]
    },
    "org.apache.cxf.transport.TransportFinder$1:boolean beanLoaded(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)",
            "org.apache.cxf.bus.spring.SpringBeanLocator:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)"
        ]
    },
    "org.apache.cxf.validation.BeanValidationProvider:void <init>(javax.validation.ParameterNameProvider)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.validation.BeanValidationProvider:void <init>(javax.validation.ValidationProviderResolver,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.validation.BeanValidationProvider:void <init>(javax.validation.ValidationProviderResolver)"
        ]
    },
    "org.apache.cxf.bus.managers.WorkQueueImplMBeanWrapper:void setHighWaterMark(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.managers.WorkQueueImplMBeanWrapper:void setLowWaterMark(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:void setDataReaderValidation(org.apache.cxf.service.Service,org.apache.cxf.message.Message,org.apache.cxf.databinding.DataReader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:org.apache.cxf.databinding.DataReader getDataReader(org.apache.cxf.message.Message,java.lang.Class)"
        ]
    },
    "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:void setDataWriterValidation(org.apache.cxf.service.Service,org.apache.cxf.message.Message,org.apache.cxf.databinding.DataWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:org.apache.cxf.databinding.DataWriter getDataWriter(org.apache.cxf.message.Message,org.apache.cxf.service.Service,java.lang.Class)"
        ]
    },
    "org.apache.cxf.ws.addressing.EndpointReferenceUtils:javax.xml.validation.Schema getSchema(org.apache.cxf.service.model.ServiceInfo)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.jaxb.JAXBContextCache$1:javax.xml.bind.JAXBContext run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.jaxb.JAXBContextCache$1:java.lang.Object run()"
        ]
    },
    "org.apache.cxf.common.jaxb.JAXBContextCache$2:javax.xml.bind.JAXBContext run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.jaxb.JAXBContextCache$2:java.lang.Object run()"
        ]
    },
    "org.apache.cxf.interceptor.security.AbstractSecurityContextInInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.interceptor.security.AbstractSecurityContextInInterceptor:java.security.Principal getPrincipal(java.security.Principal,javax.security.auth.Subject)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.extension.TextExtensionFragmentParser:java.util.List getExtensions(java.net.URL)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.osgi.CXFExtensionBundleListener:void register(org.osgi.framework.Bundle)"
        ]
    },
    "org.apache.cxf.bus.spring.BusApplicationContext:org.springframework.core.io.Resource[] getConfigResources()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.spring.BusApplicationContextResourceResolver:java.lang.Object resolve(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.resource.DefaultResourceManager:java.lang.Object findResource(java.lang.String,java.lang.Class,boolean,java.util.List)"
        ]
    },
    "org.apache.cxf.catalog.OASISCatalogManager$1:java.lang.String getResolvedEntity(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.jaxb.JAXBContextCache:void addPackage(java.util.Set,java.lang.String,java.lang.ClassLoader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.jaxb.JAXBContextCache:org.apache.cxf.common.jaxb.JAXBContextCache$CachedContextAndSchemas getCachedContextAndSchemas(java.lang.String,java.util.Map,java.lang.ClassLoader)",
            "org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser:javax.xml.bind.JAXBContext getContext(java.lang.Class)",
            "org.apache.cxf.configuration.jsse.TLSClientParametersConfig:javax.xml.bind.JAXBContext getContext()",
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:javax.xml.bind.JAXBContext getContext(java.lang.Class)",
            "org.apache.cxf.ws.addressing.ContextUtils:javax.xml.bind.JAXBContext getJAXBContext()"
        ]
    },
    "org.apache.cxf.databinding.source.XMLStreamDataReader$2:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser$JAXBBeanFactory:java.lang.Object createJAXBBean(java.lang.String)",
            "org.apache.cxf.databinding.source.XMLStreamDataReader$2:boolean hasNext()",
            "org.apache.cxf.databinding.source.XMLStreamDataWriter:void write(java.lang.Object,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.databinding.stax.StaxDataBinding$XMLStreamDataWriter:void write(java.lang.Object,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.DepthXMLStreamReader:void close()",
            "org.apache.cxf.staxutils.StaxUtils:void copy(javax.xml.transform.Source,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:org.w3c.dom.Document read(javax.xml.transform.Source)",
            "org.apache.cxf.staxutils.StaxUtils:org.w3c.dom.Document read(java.io.InputStream)",
            "org.apache.cxf.staxutils.StaxUtils:org.w3c.dom.Document read(java.io.Reader)",
            "org.apache.cxf.staxutils.StaxUtils:org.w3c.dom.Document read(org.xml.sax.InputSource)",
            "org.apache.cxf.staxutils.StaxUtils:void close(javax.xml.stream.XMLStreamReader)"
        ]
    },
    "org.apache.cxf.helpers.IOUtils:int copyAndCloseInput(java.io.InputStream,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.ImageDataContentHandler:void writeTo(java.lang.Object,java.lang.String,java.io.OutputStream)",
            "org.apache.cxf.feature.transform.XSLTOutInterceptor$XSLTCachedOutputStreamCallback:void onClose(org.apache.cxf.io.CachedOutputStream)",
            "org.apache.cxf.helpers.IOUtils:void transferTo(java.io.InputStream,java.io.File)",
            "org.apache.cxf.io.CachedOutputStream$TransferableFileInputStream:void transferTo(java.io.File)",
            "org.apache.cxf.io.CachedOutputStream:void resetOut(java.io.OutputStream,boolean)",
            "org.apache.cxf.io.CachedOutputStream:void writeCacheTo(java.io.OutputStream)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:javax.xml.validation.Schema createSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.helpers.IOUtils:int copyAndCloseInput(java.io.InputStream,java.io.OutputStream,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.io.CachedOutputStream:void copyStream(java.io.InputStream,java.io.OutputStream,int)"
        ]
    },
    "org.apache.cxf.helpers.IOUtils:java.io.ByteArrayInputStream loadIntoBAIS(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.catalog.CatalogXmlSchemaURIResolver:org.xml.sax.InputSource resolveEntity(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.helpers.IOUtils:byte[] readBytesFromStream(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.io.CachedOutputStream:byte[] getBytes()"
        ]
    },
    "org.apache.cxf.interceptor.OneWayProcessorInterceptor:void handleFault(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:void unwind(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.OutgoingChainInterceptor:void closeInput(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.resource.ExtendedURIResolver:void close()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.version.Version:void loadProperties()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.version.Version:java.lang.String getCurrentVersion()",
            "org.apache.cxf.version.Version:java.lang.String getName()",
            "org.apache.cxf.version.Version:java.lang.String getCompleteVersionString()"
        ]
    },
    "org.apache.cxf.ws.addressing.ContextUtils$1$1:void onMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:void wrapExceptionAsFault(org.apache.cxf.message.Message,java.lang.RuntimeException)"
        ]
    },
    "org.apache.cxf.interceptor.security.JAASLoginInterceptor$1:java.lang.Object run()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.interceptor.OneWayProcessorInterceptor$1:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.OneWayProcessorInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl$3:void run()",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl$AWQThreadFactory$1:void run()",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl$DelayedTaskWrapper:void run()",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void execute(java.lang.Runnable,long)",
            "org.apache.cxf.workqueue.SynchronousExecutor:void execute(java.lang.Runnable)"
        ]
    },
    "org.apache.cxf.BusFactory:void setDefaultBus(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void shutdown(boolean)"
        ]
    },
    "org.apache.cxf.BusFactory:org.apache.cxf.Bus createThreadBus()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.BusFactory:org.apache.cxf.Bus getThreadDefaultBus(boolean)"
        ]
    },
    "org.apache.cxf.BusFactory:boolean possiblySetDefaultBus(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.CXFBusFactory:org.apache.cxf.Bus createBus(java.util.Map,java.util.Map)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void <init>(java.util.Map,java.util.Map,java.lang.ClassLoader)",
            "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus finishCreatingBus(org.springframework.context.ConfigurableApplicationContext)"
        ]
    },
    "org.apache.cxf.attachment.AttachmentUtil:org.apache.cxf.message.Attachment createMtomAttachmentFromDH(boolean,javax.activation.DataHandler,java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.attachment.AttachmentUtil:java.lang.String getContentDispositionFileName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.AttachmentUtil:org.apache.cxf.message.Attachment createAttachment(java.io.InputStream,java.util.Map)"
        ]
    },
    "org.apache.cxf.bus.managers.BindingFactoryManagerImpl:void setBus(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl:void <init>(org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.bus.managers.CXFBusLifeCycleManager:void setBus(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.managers.CXFBusLifeCycleManager:void <init>(org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.bus.managers.ConduitInitiatorManagerImpl:void setBus(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.managers.ConduitInitiatorManagerImpl:void <init>(org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.bus.managers.DestinationFactoryManagerImpl:void setBus(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.managers.DestinationFactoryManagerImpl:void <init>(org.apache.cxf.Bus)",
            "org.apache.cxf.bus.managers.DestinationFactoryManagerImpl:void <init>(java.util.Map,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.bus.managers.EndpointResolverRegistryImpl:void setBus(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.managers.EndpointResolverRegistryImpl:void <init>(org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.bus.managers.HeaderManagerImpl:void setBus(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.managers.HeaderManagerImpl:void <init>(org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.bus.managers.ServiceContractResolverRegistryImpl:void setBus(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.managers.ServiceContractResolverRegistryImpl:void <init>(org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.bus.resource.ResourceManagerImpl:void setBus(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.resource.ResourceManagerImpl:void <init>(org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.bus.spring.BusExtensionPostProcessor:void registerExt(java.lang.Object,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.BusExtensionPostProcessor:java.lang.Object postProcessBeforeInitialization(java.lang.Object,java.lang.String)"
        ]
    },
    "org.apache.cxf.bus.spring.SpringBeanLocator:java.lang.Object getBundleContext(org.springframework.context.ApplicationContext,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.SpringBeanLocator:java.lang.Object findBundleContext(org.springframework.context.ApplicationContext,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus finishCreatingBus(org.springframework.context.ConfigurableApplicationContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus createBus(java.lang.String[],boolean)",
            "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus createBus(java.net.URL[],boolean)"
        ]
    },
    "org.apache.cxf.catalog.OASISCatalogManager:void setBus(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.endpoint.AbstractEndpointFactory:boolean checkPrivateEndpoint(org.apache.cxf.endpoint.Endpoint)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.managers.WorkQueueManagerImpl:org.apache.cxf.workqueue.AutomaticWorkQueue createAutomaticWorkQueue()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:org.apache.cxf.workqueue.AutomaticWorkQueue getAutomaticWorkQueue()"
        ]
    },
    "org.apache.cxf.common.jaxb.JAXBContextCache:boolean addJaxbObjectFactory(javax.xml.bind.JAXBException,java.util.Set)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.jaxb.JAXBContextCache:org.apache.cxf.common.jaxb.JAXBContextCache$CachedContextAndSchemas getCachedContextAndSchemas(java.util.Set,java.lang.String,java.util.Map,java.util.Collection,boolean)"
        ]
    },
    "org.apache.cxf.common.jaxb.JAXBUtils:java.lang.String namespaceURIToPackage(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.jaxb.JAXBContextCache:boolean addJaxbObjectFactory(javax.xml.bind.JAXBException,java.util.Set)"
        ]
    },
    "org.apache.cxf.common.jaxb.JAXBUtils:java.lang.String nameSpaceURIToPackage(java.net.URI)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.jaxb.JAXBUtils:java.lang.String namespaceURIToPackage(java.lang.String)"
        ]
    },
    "org.apache.cxf.common.jaxb.JAXBUtils:java.lang.String normalizePackageNamePart(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.jaxb.JAXBUtils:java.lang.String nameSpaceURIToPackage(java.net.URI)",
            "org.apache.cxf.common.jaxb.JAXBUtils:java.lang.String nameToIdentifier(java.lang.String,org.apache.cxf.common.jaxb.JAXBUtils$IdentifierType)"
        ]
    },
    "org.apache.cxf.common.jaxb.JAXBUtils:void splitWord(java.util.List,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.jaxb.JAXBUtils:java.lang.String nameToIdentifier(java.lang.String,org.apache.cxf.common.jaxb.JAXBUtils$IdentifierType)"
        ]
    },
    "org.apache.cxf.common.jaxb.JAXBUtils:java.lang.ClassLoader getXJCClassLoader()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.jaxb.JAXBUtils:org.apache.cxf.common.jaxb.JAXBUtils$BridgeWrapper createBridge(java.util.Set,javax.xml.namespace.QName,java.lang.Class,java.lang.'annotation'.Annotation[])",
            "org.apache.cxf.common.jaxb.JAXBUtils:org.apache.cxf.common.jaxb.JAXBUtils$SchemaCompiler createSchemaCompiler()",
            "org.apache.cxf.common.jaxb.JAXBUtils:java.lang.Object createFileCodeWriter(java.io.File,java.lang.String)"
        ]
    },
    "org.apache.cxf.common.jaxb.JAXBUtils:java.lang.Object setNamespaceMapper(java.util.Map,javax.xml.bind.Marshaller)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.jaxb.JAXBUtils:org.apache.cxf.common.jaxb.JAXBUtils$BridgeWrapper createBridge(java.util.Set,javax.xml.namespace.QName,java.lang.Class,java.lang.'annotation'.Annotation[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.jaxb.JAXBUtils:org.apache.cxf.common.jaxb.JAXBUtils$SchemaCompiler createSchemaCompiler()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.jaxb.JAXBUtils:org.apache.cxf.common.jaxb.JAXBUtils$SchemaCompiler createSchemaCompilerWithDefaultAllocator(java.util.Set)"
        ]
    },
    "org.apache.cxf.common.jaxb.JAXBUtils:org.apache.cxf.common.jaxb.JAXBUtils$SchemaCompiler createSchemaCompilerWithDefaultAllocator(java.util.Set)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.jaxb.JAXBUtils:java.lang.Object createFileCodeWriter(java.io.File)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.jaxb.JAXBUtils:java.lang.Object createFileCodeWriter(java.io.File,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.jaxb.JAXBUtils:java.lang.Object createFileCodeWriter(java.io.File)"
        ]
    },
    "org.apache.cxf.common.jaxb.JAXBUtils:java.lang.Object createNamespaceWrapper(java.lang.Class,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.jaxb.JAXBUtils:java.lang.Object setNamespaceMapper(java.util.Map,javax.xml.bind.Marshaller)"
        ]
    },
    "org.apache.cxf.common.jaxb.JAXBUtils:org.apache.cxf.common.jaxb.JAXBContextProxy createJAXBContextProxy(javax.xml.bind.JAXBContext)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.jaxb.SchemaCollectionContextProxy:java.lang.Object getBeanInfo(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.jaxb.JAXBUtils:org.apache.cxf.common.jaxb.JAXBBeanInfo getBeanInfo(org.apache.cxf.common.jaxb.JAXBContextProxy,java.lang.Class)"
        ]
    },
    "org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser$JAXBBeanFactory:java.lang.Object createJAXBBean(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.configuration.spring.JAXBBeanFactory:java.lang.Object createJAXBBean(javax.xml.bind.JAXBContext,java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.jaxb.SchemaCollectionContextProxy:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.jaxb.JAXBUtils:org.apache.cxf.common.jaxb.JAXBContextProxy createJAXBContextProxy(javax.xml.bind.JAXBContext,org.apache.cxf.common.xmlschema.SchemaCollection,java.lang.String)",
            "org.apache.cxf.common.jaxb.SchemaCollectionContextProxy:void defaultRegister(java.lang.Class,javax.xml.namespace.QName)",
            "org.apache.cxf.common.jaxb.SchemaCollectionContextProxy:javax.xml.namespace.QName getTypeQName(java.lang.Class,java.lang.String)",
            "org.apache.cxf.common.jaxb.SchemaCollectionContextProxy:void <clinit>()"
        ]
    },
    "org.apache.cxf.common.logging.Log4jLogger:java.util.logging.Level fromL4J(org.apache.log4j.Level)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.logging.Log4jLogger:java.util.logging.Level getLevel()",
            "org.apache.cxf.common.logging.Log4jLogger:java.util.logging.Level access$000(org.apache.cxf.common.logging.Log4jLogger,org.apache.log4j.Level)"
        ]
    },
    "org.apache.cxf.common.logging.Log4jLogger:void access$100(java.util.logging.LogRecord,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.logging.Log4jLogger$HandlerWrapper:void append(org.apache.log4j.spi.LoggingEvent)"
        ]
    },
    "org.apache.cxf.common.logging.Log4jLogger:java.util.Map access$200()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.logging.Log4jLogger$HandlerWrapper:org.apache.log4j.Priority getThreshold()"
        ]
    },
    "org.apache.cxf.common.jaxb.JAXBUtils:java.lang.Object createEclipseNamespaceMapper(java.lang.Class,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.jaxb.JAXBUtils:java.lang.Object createNamespaceWrapper(java.lang.Class,java.util.Map)"
        ]
    },
    "org.apache.cxf.common.jaxb.JAXBUtils:java.lang.Class createNamespaceWrapperInternal(org.apache.cxf.common.util.ASMHelper,org.apache.cxf.common.util.ASMHelper$ClassWriter,java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.jaxb.JAXBUtils:java.lang.Object createNamespaceWrapper(java.lang.Class,java.util.Map)"
        ]
    },
    "org.apache.cxf.common.util.ASMHelper:java.lang.Class loadClass(java.lang.String,java.lang.ClassLoader,byte[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.util.ASMHelper:java.lang.Class findClass(java.lang.String,java.lang.ClassLoader)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.util.ASMHelper:java.lang.Class loadClass(java.lang.String,java.lang.Class,byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.jaxb.JAXBUtils:java.lang.Object createEclipseNamespaceMapper(java.lang.Class,java.util.Map)",
            "org.apache.cxf.common.jaxb.JAXBUtils:java.lang.Class createNamespaceWrapperInternal(org.apache.cxf.common.util.ASMHelper,org.apache.cxf.common.util.ASMHelper$ClassWriter,java.lang.String,java.lang.Class)"
        ]
    },
    "org.apache.cxf.common.util.ASMHelper:java.lang.Class findClass(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.jaxb.JAXBUtils:java.lang.Object createNamespaceWrapper(java.lang.Class,java.util.Map)",
            "org.apache.cxf.common.jaxb.JAXBUtils:java.lang.Object createEclipseNamespaceMapper(java.lang.Class,java.util.Map)"
        ]
    },
    "org.apache.cxf.common.util.ASMHelper:void tryClass(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.ASMHelper:java.lang.Class getASMClass()"
        ]
    },
    "org.apache.cxf.common.util.ASMHelper:java.lang.Class getASMClass()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.ASMHelper:org.apache.cxf.common.util.ASMHelper$ClassWriter createClassWriter()",
            "org.apache.cxf.common.util.ASMHelper:java.lang.Class access$000()"
        ]
    },
    "org.apache.cxf.common.util.ASMHelper:java.lang.String getMethodSignature(java.lang.reflect.Method)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.util.ASMHelper:java.lang.String getClassCode(java.lang.reflect.Type)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.ASMHelper:java.lang.String getClassCode(java.lang.reflect.Type)"
        ]
    },
    "org.apache.cxf.common.util.ASMHelper:org.apache.cxf.common.util.ASMHelper$ClassWriter createClassWriter()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.jaxb.JAXBUtils:java.lang.Object createNamespaceWrapper(java.lang.Class,java.util.Map)",
            "org.apache.cxf.common.jaxb.JAXBUtils:java.lang.Object createEclipseNamespaceMapper(java.lang.Class,java.util.Map)"
        ]
    },
    "org.apache.cxf.common.util.ASMHelper:org.apache.cxf.common.util.ASMHelper$ASMType getType(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.util.ASMHelper:org.apache.cxf.common.util.ASMHelper$Label createLabel()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.jaxb.JAXBUtils:java.lang.Object createEclipseNamespaceMapper(java.lang.Class,java.util.Map)",
            "org.apache.cxf.common.jaxb.JAXBUtils:java.lang.Class createNamespaceWrapperInternal(org.apache.cxf.common.util.ASMHelper,org.apache.cxf.common.util.ASMHelper$ClassWriter,java.lang.String,java.lang.Class)"
        ]
    },
    "org.apache.cxf.common.util.ASMHelper:java.lang.Class access$000()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.ASMHelper$Opcodes:void <clinit>()"
        ]
    },
    "org.apache.cxf.bus.blueprint.BusDefinitionParser:org.osgi.service.blueprint.reflect.Metadata parse(org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.internal.CXFAPINamespaceHandler:org.osgi.service.blueprint.reflect.Metadata parse(org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext)"
        ]
    },
    "org.apache.cxf.bus.extension.Extension:java.lang.String getName()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.extension.Extension:java.lang.Object load(java.lang.ClassLoader,org.apache.cxf.Bus)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void add(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void load(java.lang.String,java.lang.ClassLoader)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:java.util.List getBeanNamesOfType(java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)",
            "org.apache.cxf.bus.extension.ExtensionRegistry:void removeExtensions(java.util.List)",
            "org.apache.cxf.bus.extension.ExtensionRegistry:void addExtensions(java.util.List)",
            "org.apache.cxf.bus.osgi.CXFExtensionBundleListener:boolean addExtensions(org.osgi.framework.Bundle,java.util.List)"
        ]
    },
    "org.apache.cxf.bus.spring.BusDefinitionParser:void doParse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.spring.BusDefinitionParser:java.lang.String resolveId(org.w3c.dom.Element,org.springframework.beans.factory.support.AbstractBeanDefinition,org.springframework.beans.factory.xml.ParserContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.BusDefinitionParser:void doParse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder)"
        ]
    },
    "org.apache.cxf.common.jaxb.JAXBContextCache:boolean checkObjectFactoryNamespaces(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.jaxb.JAXBContextCache:org.apache.cxf.common.jaxb.JAXBContextCache$CachedContextAndSchemas getCachedContextAndSchemas(java.util.Set,java.lang.String,java.util.Map,java.util.Collection,boolean)"
        ]
    },
    "org.apache.cxf.common.logging.JDKBugHacks:boolean skipHack(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.logging.JDKBugHacks:boolean skipHack(java.lang.String)",
            "org.apache.cxf.common.logging.JDKBugHacks:void doHacks()"
        ]
    },
    "org.apache.cxf.common.logging.LogUtils:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.BusFactory:org.apache.cxf.BusFactory newInstance(java.lang.String)",
            "org.apache.cxf.BusFactory:java.lang.String getBusFactoryClass(java.lang.ClassLoader)",
            "org.apache.cxf.BusFactory:void <clinit>()",
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:void <clinit>()",
            "org.apache.cxf.bus.blueprint.ConfigurerImpl:java.lang.String getBeanName(java.lang.Object)",
            "org.apache.cxf.bus.blueprint.ConfigurerImpl:void <clinit>()",
            "org.apache.cxf.bus.blueprint.NamespaceHandlerRegisterer:void <clinit>()",
            "org.apache.cxf.bus.extension.Extension:void <clinit>()",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void <clinit>()",
            "org.apache.cxf.bus.extension.TextExtensionFragmentParser:void <clinit>()",
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:void <clinit>()",
            "org.apache.cxf.bus.osgi.CXFExtensionBundleListener:void <clinit>()",
            "org.apache.cxf.bus.osgi.ManagedWorkQueueList:void <clinit>()",
            "org.apache.cxf.bus.osgi.OSGiBeanLocator:void <clinit>()",
            "org.apache.cxf.bus.spring.BusApplicationContext:org.springframework.core.io.Resource[] getConfigResources()",
            "org.apache.cxf.bus.spring.BusApplicationContext:void <clinit>()",
            "org.apache.cxf.bus.spring.BusEntityResolver:void <clinit>()",
            "org.apache.cxf.bus.spring.SpringBeanLocator:void <clinit>()",
            "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus createBus(java.lang.String[],boolean)",
            "org.apache.cxf.bus.spring.SpringBusFactory:org.springframework.context.ConfigurableApplicationContext createApplicationContext(java.lang.String[],boolean)",
            "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus createBus(java.net.URL[],boolean)",
            "org.apache.cxf.bus.spring.SpringBusFactory:void <clinit>()",
            "org.apache.cxf.bus.spring.TunedDocumentLoader:void <clinit>()",
            "org.apache.cxf.catalog.OASISCatalogManager:void <clinit>()",
            "org.apache.cxf.common.annotation.AnnotationProcessor:void <clinit>()",
            "org.apache.cxf.common.injection.ResourceInjector:void invokeSetter(java.lang.reflect.Method,java.lang.Object)",
            "org.apache.cxf.common.injection.ResourceInjector:void <clinit>()",
            "org.apache.cxf.common.jaxb.JAXBUtils:void <clinit>()",
            "org.apache.cxf.common.logging.LogUtils:void setLoggerClass(java.lang.Class)",
            "org.apache.cxf.common.logging.LogUtils:java.util.logging.Logger getLogger(java.lang.Class)",
            "org.apache.cxf.common.logging.LogUtils:java.util.logging.Logger getLogger(java.lang.Class,java.lang.String)",
            "org.apache.cxf.common.logging.LogUtils:java.util.logging.Logger getLogger(java.lang.Class,java.lang.String,java.lang.String)",
            "org.apache.cxf.common.logging.LogUtils:java.util.logging.Logger getL7dLogger(java.lang.Class)",
            "org.apache.cxf.common.logging.LogUtils:java.util.logging.Logger getL7dLogger(java.lang.Class,java.lang.String)",
            "org.apache.cxf.common.logging.LogUtils:java.util.logging.Logger getL7dLogger(java.lang.Class,java.lang.String,java.lang.String)",
            "org.apache.cxf.common.logging.LogUtils:java.util.logging.Logger createLogger(java.lang.Class,java.lang.String,java.lang.String)",
            "org.apache.cxf.common.logging.LogUtils:void log(java.util.logging.Logger,java.util.logging.Level,java.lang.String,java.lang.Throwable,java.lang.Object)",
            "org.apache.cxf.common.logging.LogUtils:void log(java.util.logging.Logger,java.util.logging.Level,java.lang.String,java.lang.Throwable,java.lang.Object[])",
            "org.apache.cxf.common.logging.LogUtils:void log(java.util.logging.Logger,java.util.logging.Level,java.lang.String)",
            "org.apache.cxf.common.logging.LogUtils:void log(java.util.logging.Logger,java.util.logging.Level,java.lang.String,java.lang.Throwable)",
            "org.apache.cxf.common.logging.LogUtils:void log(java.util.logging.Logger,java.util.logging.Level,java.lang.String,java.lang.Object)",
            "org.apache.cxf.common.logging.LogUtils:void log(java.util.logging.Logger,java.util.logging.Level,java.lang.String,java.lang.Object[])",
            "org.apache.cxf.common.logging.LogUtils:void <clinit>()",
            "org.apache.cxf.common.util.Base64Utility:void <clinit>()",
            "org.apache.cxf.common.util.SystemPropertyAction:void <clinit>()",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:void <clinit>()",
            "org.apache.cxf.configuration.jsse.SSLUtils:javax.net.ssl.KeyManager[] getKeyStoreManagers(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.configuration.jsse.SSLUtils:javax.net.ssl.KeyManager[] loadKeyStore(javax.net.ssl.KeyManagerFactory,java.security.KeyStore,java.io.ByteArrayInputStream,java.lang.String,java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.configuration.jsse.SSLUtils:javax.net.ssl.TrustManager[] getTrustStoreManagers(boolean,java.lang.String,java.lang.String,java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String getKeystore(java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String getKeystoreType(java.lang.String,java.util.logging.Logger,java.lang.String)",
            "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String getKeystoreProvider(java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String getKeystorePassword(java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String getKeyPassword(java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String getKeystoreAlgorithm(java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String getTrustStoreAlgorithm(java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String[] getCiphersuitesToInclude(java.util.List,org.apache.cxf.configuration.security.FiltersType,java.lang.String[],java.lang.String[],java.util.logging.Logger)",
            "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String[] getFilteredCiphersuites(org.apache.cxf.configuration.security.FiltersType,java.lang.String[],java.util.logging.Logger,boolean)",
            "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String[] getSystemCiphersuites(java.util.logging.Logger)",
            "org.apache.cxf.configuration.jsse.SSLUtils:java.util.List compileRegexPatterns(java.util.List,boolean,java.util.logging.Logger)",
            "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String[] getCiphersFromList(java.util.List,java.util.logging.Logger,boolean)",
            "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String getTrustStore(java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String getTrustStoreType(java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String getSecureSocketProtocol(java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.configuration.jsse.SSLUtils:boolean getRequireClientAuthentication(boolean,java.lang.Boolean,java.util.logging.Logger)",
            "org.apache.cxf.configuration.jsse.SSLUtils:boolean getWantClientAuthentication(boolean,java.lang.Boolean,java.util.logging.Logger)",
            "org.apache.cxf.configuration.jsse.SSLUtils:void logUnSupportedPolicy(boolean,boolean,java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.configuration.jsse.TLSParameterJaxBUtils:void <clinit>()",
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void <clinit>()",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void initWildcardDefinitionMap()",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:java.lang.String getBeanName(java.lang.Object)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void <clinit>()",
            "org.apache.cxf.databinding.source.NodeDataReader:void <clinit>()",
            "org.apache.cxf.databinding.source.NodeDataWriter:void <clinit>()",
            "org.apache.cxf.databinding.source.XMLStreamDataReader:void <clinit>()",
            "org.apache.cxf.databinding.source.XMLStreamDataWriter:void <clinit>()",
            "org.apache.cxf.databinding.stax.StaxDataBinding$XMLStreamDataWriter:void <clinit>()",
            "org.apache.cxf.databinding.stax.StaxDataBindingInterceptor:void <clinit>()",
            "org.apache.cxf.endpoint.AbstractEndpointFactory:void <clinit>()",
            "org.apache.cxf.endpoint.ClientImpl:void waitResponse(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.ClientImpl:void <clinit>()",
            "org.apache.cxf.endpoint.DeferredConduitSelector:void <clinit>()",
            "org.apache.cxf.endpoint.EndpointImpl:void <clinit>()",
            "org.apache.cxf.endpoint.ServerImpl:void <clinit>()",
            "org.apache.cxf.endpoint.UpfrontConduitSelector:void <clinit>()",
            "org.apache.cxf.feature.transform.XSLTInInterceptor:void <clinit>()",
            "org.apache.cxf.feature.transform.XSLTOutInterceptor:void <clinit>()",
            "org.apache.cxf.feature.transform.XSLTUtils:void <clinit>()",
            "org.apache.cxf.helpers.FileUtils:java.io.File createTmpDir(boolean)",
            "org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver:void <clinit>()",
            "org.apache.cxf.interceptor.AbstractLoggingInterceptor:java.util.logging.Logger getMessageLogger(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AttachmentInInterceptor:void <clinit>()",
            "org.apache.cxf.interceptor.ClientFaultConverter:void processFaultDetail(org.apache.cxf.interceptor.Fault,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.ClientFaultConverter:void <clinit>()",
            "org.apache.cxf.interceptor.FIStaxOutInterceptor:void <clinit>()",
            "org.apache.cxf.interceptor.FaultOutInterceptor:void <clinit>()",
            "org.apache.cxf.interceptor.LoggingInInterceptor:void <clinit>()",
            "org.apache.cxf.interceptor.LoggingOutInterceptor:void <clinit>()",
            "org.apache.cxf.interceptor.OneWayProcessorInterceptor:void <clinit>()",
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:void <clinit>()",
            "org.apache.cxf.interceptor.StaxInInterceptor:void <clinit>()",
            "org.apache.cxf.interceptor.security.AbstractAuthorizingInInterceptor:void <clinit>()",
            "org.apache.cxf.interceptor.security.AbstractSecurityContextInInterceptor:void <clinit>()",
            "org.apache.cxf.interceptor.security.JAASLoginInterceptor:void <clinit>()",
            "org.apache.cxf.interceptor.security.NameDigestPasswordCallbackHandler:void <clinit>()",
            "org.apache.cxf.interceptor.security.NamePasswordCallbackHandler:void <clinit>()",
            "org.apache.cxf.interceptor.security.OperationInfoAuthorizingInterceptor:void <clinit>()",
            "org.apache.cxf.interceptor.security.SecureAnnotationsInterceptor:void <clinit>()",
            "org.apache.cxf.phase.PhaseInterceptorChain:void doDefaultLogging(org.apache.cxf.message.Message,java.lang.Exception,java.lang.String)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void <clinit>()",
            "org.apache.cxf.resource.DefaultResourceManager:void <clinit>()",
            "org.apache.cxf.resource.URIResolver:void <clinit>()",
            "org.apache.cxf.service.factory.AbstractServiceFactoryBean:void <clinit>()",
            "org.apache.cxf.service.invoker.AbstractInvoker:void <clinit>()",
            "org.apache.cxf.service.model.BindingInfo:void <clinit>()",
            "org.apache.cxf.service.model.InterfaceInfo:void <clinit>()",
            "org.apache.cxf.service.model.OperationInfo:void <clinit>()",
            "org.apache.cxf.staxutils.StaxUtils:void <clinit>()",
            "org.apache.cxf.staxutils.transform.InTransformReader:void <clinit>()",
            "org.apache.cxf.staxutils.validation.ResolvingGrammarReaderController:void <clinit>()",
            "org.apache.cxf.staxutils.validation.Stax2ValidationUtils:void <clinit>()",
            "org.apache.cxf.staxutils.validation.StaxSchemaValidationInInterceptor:void <clinit>()",
            "org.apache.cxf.staxutils.validation.StaxSchemaValidationOutInterceptor:void <clinit>()",
            "org.apache.cxf.staxutils.validation.WoodstoxValidationImpl:void <clinit>()",
            "org.apache.cxf.transport.common.gzip.GZIPInInterceptor:void <clinit>()",
            "org.apache.cxf.transport.common.gzip.GZIPOutInterceptor:void <clinit>()",
            "org.apache.cxf.validation.AbstractValidationInterceptor:void <clinit>()",
            "org.apache.cxf.validation.BeanValidationProvider:void <clinit>()",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void <clinit>()",
            "org.apache.cxf.ws.addressing.ContextUtils:org.apache.cxf.ws.addressing.AddressingProperties retrieveMAPs(org.apache.cxf.message.Message,boolean,boolean,boolean)",
            "org.apache.cxf.ws.addressing.ContextUtils:void <clinit>()",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:void <clinit>()"
        ]
    },
    "org.apache.cxf.common.util.ClassHelper:org.apache.cxf.common.util.ClassHelper getClassHelper()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.ClassHelper:void <clinit>()"
        ]
    },
    "org.apache.cxf.common.util.ClasspathScanner:org.apache.cxf.common.util.ClasspathScanner getClasspathScanner()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.ClasspathScanner:void <clinit>()"
        ]
    },
    "org.apache.cxf.common.util.ClasspathScanner:java.util.Set parsePackages(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.ClasspathScanner:java.util.Map findClasses(java.lang.String,java.lang.Class[])"
        ]
    },
    "org.apache.cxf.common.util.Compiler:void setClassPath(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.util.Compiler:void addArgs(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.Compiler:boolean compileFiles(java.lang.String[])",
            "org.apache.cxf.common.util.Compiler:boolean internalJava6Compile(javax.tools.JavaCompiler,javax.tools.JavaFileManager,javax.tools.DiagnosticListener,java.lang.Iterable)"
        ]
    },
    "org.apache.cxf.common.util.Compiler:boolean compileFiles(java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.Compiler:boolean compileFiles(java.io.File[])",
            "org.apache.cxf.common.util.Compiler:boolean compileFiles(java.util.List)"
        ]
    },
    "org.apache.cxf.common.util.StringUtils:boolean isEmpty(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.StringUtils:java.lang.String getFirstNotEmpty(java.util.List)",
            "org.apache.cxf.common.util.StringUtils:java.lang.String getFirstFound(java.lang.String,java.lang.String)",
            "org.apache.cxf.interceptor.StaxInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.service.model.MessageInfo:java.util.List getOrderedParts(java.util.List)"
        ]
    },
    "org.apache.cxf.common.util.StringUtils:java.util.List getParts(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.PackageUtils:java.lang.String getSharedPackageName(java.util.List)"
        ]
    },
    "org.apache.cxf.common.util.StringUtils:java.util.List getFound(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.StringUtils:java.lang.String getFirstFound(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.common.util.StringUtils:java.lang.String getFirstFound(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.StringUtils:java.lang.String addDefaultPortIfMissing(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.common.util.StringUtils:java.lang.String addDefaultPortIfMissing(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.util.StringUtils:java.lang.String addDefaultPortIfMissing(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.StringUtils:java.lang.String addDefaultPortIfMissing(java.lang.String)"
        ]
    },
    "org.apache.cxf.common.util.StringUtils:byte[] toBytesUTF8(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.util.StringUtils:byte[] toBytesASCII(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.util.UrlUtils:java.lang.String urlDecode(java.lang.String,java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.UrlUtils:java.lang.String urlDecode(java.lang.String,java.lang.String)",
            "org.apache.cxf.common.util.UrlUtils:java.lang.String pathDecode(java.lang.String)"
        ]
    },
    "org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser:void mapToProperty(org.apache.aries.blueprint.mutable.MutableBeanMetadata,java.lang.String,java.lang.String,org.apache.aries.blueprint.ParserContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser:void mapAttribute(org.apache.aries.blueprint.mutable.MutableBeanMetadata,org.w3c.dom.Element,java.lang.String,java.lang.String,org.apache.aries.blueprint.ParserContext)"
        ]
    },
    "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void addBusWiringAttribute(org.springframework.beans.factory.support.BeanDefinitionBuilder,org.apache.cxf.configuration.spring.BusWiringType,java.lang.String,org.springframework.beans.factory.xml.ParserContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.BusDefinitionParser:void doParse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder)",
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:boolean processBusAttribute(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder,java.lang.String)",
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void addBusWiringAttribute(org.springframework.beans.factory.support.BeanDefinitionBuilder,org.apache.cxf.configuration.spring.BusWiringType)"
        ]
    },
    "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void mapToProperty(org.springframework.beans.factory.support.BeanDefinitionBuilder,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void mapAttribute(org.springframework.beans.factory.support.BeanDefinitionBuilder,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.configuration.spring.AbstractFactoryBeanDefinitionParser:void doParse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.databinding.AbstractDataBinding:org.w3c.dom.Document doEmptyNamespaceHack(org.w3c.dom.Document,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.AbstractDataBinding:org.apache.ws.commons.schema.XmlSchema addSchemaDocument(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.common.xmlschema.SchemaCollection,org.w3c.dom.Document,java.lang.String,java.util.Collection)"
        ]
    },
    "org.apache.cxf.endpoint.ManagedEndpoint:javax.management.ObjectName getObjectName()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.helpers.DOMUtils:java.lang.String getAttribute(org.w3c.dom.Element,javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.helpers.DOMUtils:java.lang.String getNamespace(org.w3c.dom.Node,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser:javax.xml.namespace.QName parseQName(org.w3c.dom.Element,java.lang.String)",
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:javax.xml.namespace.QName parseQName(org.w3c.dom.Element,java.lang.String)",
            "org.apache.cxf.helpers.DOMUtils:java.lang.String getNamespace(org.w3c.dom.Node,java.lang.String)",
            "org.apache.cxf.helpers.MapNamespaceContext:java.lang.String getNamespaceURI(java.lang.String)"
        ]
    },
    "org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor:void setGlobalRoles(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.phase.PhaseInterceptorChain:void printPhase(int,java.lang.StringBuilder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:java.lang.String toString(java.lang.String)"
        ]
    },
    "org.apache.cxf.resource.URIResolver:void tryFileSystem(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.resource.URIResolver:void <init>(java.lang.String,java.lang.String,java.lang.Class)",
            "org.apache.cxf.resource.URIResolver:void resolve(java.lang.String,java.lang.String,java.lang.Class)",
            "org.apache.cxf.resource.URIResolver:void tryArchive(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.staxutils.CachingXmlEventWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.PrettyPrintXMLStreamWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeAttributeEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.cxf.staxutils.CachingXmlEventWriter:void writeNamespace(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.CachingXmlEventWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter:void writeDefaultNamespace(java.lang.String)",
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeNamespace(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.PrettyPrintXMLStreamWriter:void writeNamespace(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamWriter,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:java.lang.String getUniquePrefix(javax.xml.stream.XMLStreamWriter,java.lang.String,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.cxf.staxutils.CachingXmlEventWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.PrettyPrintXMLStreamWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeAttributeEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.cxf.staxutils.OverlayW3CDOMStreamWriter:void writeStartElement(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeStartElement(java.lang.String)",
            "org.apache.cxf.staxutils.PrettyPrintXMLStreamWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamWriter,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElementEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.W3CDOMStreamWriter:void writeEmptyElement(java.lang.String)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:int getInteger(java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:void <clinit>()"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:long getLong(java.lang.String,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:void <clinit>()"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:boolean isDeclared(org.w3c.dom.Element,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:void readDocElements(org.w3c.dom.Document,org.w3c.dom.Node,javax.xml.stream.XMLStreamReader,boolean,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void readDocElements(org.w3c.dom.Document,org.w3c.dom.Node,javax.xml.stream.XMLStreamReader,org.apache.cxf.staxutils.StaxUtils$StreamToDOMContext)",
            "org.apache.cxf.staxutils.StaxUtils:org.w3c.dom.Node readDocElement(org.w3c.dom.Document,org.w3c.dom.Node,javax.xml.stream.events.XMLEvent,org.apache.cxf.staxutils.StaxUtils$StreamToDOMContext)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:org.w3c.dom.Node readDocElement(org.w3c.dom.Document,org.w3c.dom.Node,javax.xml.stream.events.XMLEvent,org.apache.cxf.staxutils.StaxUtils$StreamToDOMContext)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.staxutils.StaxUtils:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.TunedDocumentLoader:org.w3c.dom.Document loadDocument(org.xml.sax.InputSource,org.xml.sax.EntityResolver,org.xml.sax.ErrorHandler,int,boolean)",
            "org.apache.cxf.bus.spring.TunedDocumentLoader:org.w3c.dom.Document loadFastinfosetDocument(java.net.URL)",
            "org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser$JAXBBeanFactory:java.lang.Object createJAXBBean(java.lang.String)",
            "org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser:void mapElementToJaxbProperty(org.apache.aries.blueprint.ParserContext,org.apache.aries.blueprint.mutable.MutableBeanMetadata,org.w3c.dom.Element,java.lang.String,java.lang.Class)",
            "org.apache.cxf.configuration.jsse.TLSClientParametersConfig:java.lang.Object createTLSClientParameters(java.lang.String)",
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void mapElementToJaxbProperty(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder,java.lang.String,java.lang.Class)",
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:org.springframework.beans.factory.support.AbstractBeanDefinition mapElementToJaxbBean(org.w3c.dom.Element,java.lang.Class,java.lang.Class,java.lang.Class,java.lang.String,java.lang.Object[])",
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:java.lang.Object unmarshalFactoryString(java.lang.String,javax.xml.bind.JAXBContext,java.lang.Class)",
            "org.apache.cxf.configuration.spring.JAXBBeanFactory:java.lang.Object createJAXBBean(javax.xml.bind.JAXBContext,java.lang.String,java.lang.Class)",
            "org.apache.cxf.configuration.spring.MappingBeanDefinitionParser:org.w3c.dom.Element transformElement(org.w3c.dom.Element)",
            "org.apache.cxf.databinding.AbstractDataBinding:org.w3c.dom.Document copy(org.w3c.dom.Document)",
            "org.apache.cxf.databinding.source.NodeDataReader:java.lang.Object read(javax.xml.namespace.QName,org.w3c.dom.Node,java.lang.Class)",
            "org.apache.cxf.databinding.source.NodeDataWriter:void write(java.lang.Object,org.w3c.dom.Node)",
            "org.apache.cxf.databinding.source.XMLStreamDataReader:java.lang.Object read(javax.xml.namespace.QName,javax.xml.stream.XMLStreamReader,java.lang.Class)",
            "org.apache.cxf.databinding.source.XMLStreamDataReader:org.w3c.dom.Element validate(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.databinding.source.XMLStreamDataReader:java.io.InputStream getInputStream(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.databinding.source.XMLStreamDataReader:javax.xml.transform.dom.DOMSource read(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.databinding.source.XMLStreamDataWriter:void write(java.lang.Object,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.databinding.source.XMLStreamDataWriter:void writeNode(org.w3c.dom.Node,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.databinding.stax.StaxDataBinding$XMLStreamDataWriter:void write(java.lang.Object,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.databinding.stax.StaxDataBindingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.feature.transform.AbstractXSLTInterceptor:void <init>(java.lang.String,java.lang.Class,java.lang.Class,java.lang.String)",
            "org.apache.cxf.feature.transform.XSLTInInterceptor:void transformXReader(org.apache.cxf.message.Message,javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.feature.transform.XSLTOutInterceptor$XSLTStreamWriter:void close()",
            "org.apache.cxf.feature.transform.XSLTOutInterceptor:void transformXWriter(org.apache.cxf.message.Message,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.feature.transform.XSLTUtils:java.io.InputStream transform(javax.xml.transform.Templates,java.io.InputStream)",
            "org.apache.cxf.feature.transform.XSLTUtils:java.io.Reader transform(javax.xml.transform.Templates,java.io.Reader)",
            "org.apache.cxf.interceptor.AbstractLoggingInterceptor:void writePayload(java.lang.StringBuilder,org.apache.cxf.io.CachedOutputStream,java.lang.String,java.lang.String)",
            "org.apache.cxf.interceptor.AbstractLoggingInterceptor:void writePrettyPayload(java.lang.StringBuilder,java.io.StringWriter,java.lang.String)",
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:void writeParts(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.message.MessageContentsList,java.util.List)",
            "org.apache.cxf.interceptor.StaxInEndingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxOutEndingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.security.DepthRestrictingStreamInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.service.factory.AbstractServiceFactoryBean:void fillDataBindingSchemas()",
            "org.apache.cxf.staxutils.CachingXmlEventWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void setInnerElementLevelThreshold(int)",
            "org.apache.cxf.staxutils.StaxUtils:void setInnerElementCountThreshold(int)",
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLInputFactory getXMLInputFactory()",
            "org.apache.cxf.staxutils.StaxUtils:void returnXMLInputFactory(javax.xml.stream.XMLInputFactory)",
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLOutputFactory getXMLOutputFactory()",
            "org.apache.cxf.staxutils.StaxUtils:void returnXMLOutputFactory(javax.xml.stream.XMLOutputFactory)",
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLInputFactory createXMLInputFactory(boolean)",
            "org.apache.cxf.staxutils.StaxUtils:boolean setRestrictionProperties(javax.xml.stream.XMLInputFactory)",
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamWriter createXMLStreamWriter(java.io.Writer)",
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamWriter createXMLStreamWriter(java.io.OutputStream)",
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamWriter createXMLStreamWriter(java.io.OutputStream,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamWriter createXMLStreamWriter(javax.xml.transform.Result)",
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamReader createFilteredReader(javax.xml.stream.XMLStreamReader,javax.xml.stream.StreamFilter)",
            "org.apache.cxf.staxutils.StaxUtils:void copy(javax.xml.transform.Source,java.io.OutputStream)",
            "org.apache.cxf.staxutils.StaxUtils:void copy(javax.xml.transform.Source,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:org.w3c.dom.Document copy(org.w3c.dom.Document)",
            "org.apache.cxf.staxutils.StaxUtils:void copy(org.w3c.dom.Document,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void copy(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void copy(javax.xml.stream.XMLStreamReader,java.io.OutputStream)",
            "org.apache.cxf.staxutils.StaxUtils:void writeTo(org.w3c.dom.Node,java.io.OutputStream)",
            "org.apache.cxf.staxutils.StaxUtils:void writeTo(org.w3c.dom.Node,java.io.OutputStream,int)",
            "org.apache.cxf.staxutils.StaxUtils:void writeTo(org.w3c.dom.Node,java.io.Writer)",
            "org.apache.cxf.staxutils.StaxUtils:void writeTo(org.w3c.dom.Node,java.io.Writer,int)",
            "org.apache.cxf.staxutils.StaxUtils:void copy(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void copy(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void copy(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeDocument(org.w3c.dom.Document,javax.xml.stream.XMLStreamWriter,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeDocument(org.w3c.dom.Document,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeNode(org.w3c.dom.Node,javax.xml.stream.XMLStreamWriter,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:org.w3c.dom.Document read(javax.xml.transform.Source)",
            "org.apache.cxf.staxutils.StaxUtils:org.w3c.dom.Document read(java.io.InputStream)",
            "org.apache.cxf.staxutils.StaxUtils:org.w3c.dom.Document read(java.io.Reader)",
            "org.apache.cxf.staxutils.StaxUtils:org.w3c.dom.Document read(java.io.File)",
            "org.apache.cxf.staxutils.StaxUtils:org.w3c.dom.Document read(org.xml.sax.InputSource)",
            "org.apache.cxf.staxutils.StaxUtils:org.w3c.dom.Document read(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.staxutils.StaxUtils:org.w3c.dom.Document read(javax.xml.stream.XMLStreamReader,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:org.w3c.dom.Document read(javax.xml.parsers.DocumentBuilder,javax.xml.stream.XMLStreamReader,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void readDocElements(org.w3c.dom.Node,javax.xml.stream.XMLStreamReader,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void readDocElements(org.w3c.dom.Node,javax.xml.stream.XMLStreamReader,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void readDocElements(org.w3c.dom.Document,org.w3c.dom.Node,javax.xml.stream.XMLStreamReader,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void readDocElements(org.w3c.dom.Document,org.w3c.dom.Node,javax.xml.stream.XMLStreamReader,boolean,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void readDocElements(org.w3c.dom.Document,org.w3c.dom.Node,javax.xml.stream.XMLStreamReader,org.apache.cxf.staxutils.StaxUtils$StreamToDOMContext)",
            "org.apache.cxf.staxutils.StaxUtils:org.w3c.dom.Node readDocElement(org.w3c.dom.Document,org.w3c.dom.Node,javax.xml.stream.events.XMLEvent,org.apache.cxf.staxutils.StaxUtils$StreamToDOMContext)",
            "org.apache.cxf.staxutils.StaxUtils:boolean addLocation(org.w3c.dom.Document,org.w3c.dom.Node,javax.xml.stream.XMLStreamReader,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamReader createXMLStreamReader(org.xml.sax.InputSource)",
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamReader createXMLStreamReader(java.io.InputStream,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamReader createXMLStreamReader(java.io.InputStream)",
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamReader createXMLStreamReader(java.lang.String,java.io.InputStream)",
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamReader createXMLStreamReader(javax.xml.transform.Source)",
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamReader createXMLStreamReader(java.io.Reader)",
            "org.apache.cxf.staxutils.StaxUtils:java.lang.String getUniquePrefix(javax.xml.stream.XMLStreamWriter,java.lang.String,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:java.lang.String getUniquePrefix(javax.xml.stream.XMLStreamWriter,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:java.lang.String getUniquePrefix(javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void printXmlFragment(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElementEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void print(org.w3c.dom.Node)",
            "org.apache.cxf.staxutils.StaxUtils:java.lang.String toString(javax.xml.transform.Source)",
            "org.apache.cxf.staxutils.StaxUtils:java.lang.String toString(org.w3c.dom.Node)",
            "org.apache.cxf.staxutils.StaxUtils:java.lang.String toString(org.w3c.dom.Document)",
            "org.apache.cxf.staxutils.StaxUtils:java.lang.String toString(org.w3c.dom.Element)",
            "org.apache.cxf.staxutils.StaxUtils:java.lang.String toString(org.w3c.dom.Element,int)",
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamReader configureReader(javax.xml.stream.XMLStreamReader,org.apache.cxf.message.Message)",
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamReader configureReader(javax.xml.stream.XMLStreamReader,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Long,java.lang.Long)",
            "org.apache.cxf.staxutils.StaxUtils:void <clinit>()",
            "org.apache.cxf.staxutils.W3CDOMStreamReader:java.lang.String toString()",
            "org.apache.cxf.staxutils.W3CDOMStreamWriter:java.lang.String toString()",
            "org.apache.cxf.staxutils.transform.TransformUtils:javax.xml.stream.XMLStreamReader createNewReaderIfNeeded(javax.xml.stream.XMLStreamReader,java.io.InputStream)",
            "org.apache.cxf.staxutils.transform.TransformUtils:javax.xml.stream.XMLStreamWriter createNewWriterIfNeeded(javax.xml.stream.XMLStreamWriter,java.io.OutputStream)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:void setMetadata(org.apache.cxf.ws.addressing.EndpointReferenceType,java.util.List)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:javax.xml.validation.Schema createSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.common.util.XmlSchemaPrimitiveUtils:void initializeMap()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.XmlSchemaPrimitiveUtils:void <clinit>()"
        ]
    },
    "org.apache.cxf.databinding.AbstractInterceptorProvidingDataBinding:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.stax.StaxDataBinding:void <init>()"
        ]
    },
    "org.apache.cxf.databinding.source.SourceDataBinding:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.databinding.source.SourceDataBinding:void <init>(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.endpoint.ClientImpl$EchoContext:java.lang.Object put(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.BusFactory:org.apache.cxf.BusFactory$BusHolder getThreadBusHolder(boolean)",
            "org.apache.cxf.attachment.AttachmentDeserializer:void addHeaderLine(java.util.Map,java.lang.StringBuilder)",
            "org.apache.cxf.attachment.AttachmentImpl:void setHeader(java.lang.String,java.lang.String)",
            "org.apache.cxf.attachment.AttachmentSerializer:void writeAttachments()",
            "org.apache.cxf.attachment.ContentDisposition:void <init>(java.lang.String)",
            "org.apache.cxf.bus.blueprint.ConfigurerImpl:void initializeWildcardMap()",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void <init>(java.util.Map,java.util.Map,java.lang.ClassLoader)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:java.lang.Object getExtension(java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void setExtension(java.lang.Object,java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void setProperty(java.lang.String,java.lang.Object)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void <init>(java.lang.String[],java.lang.ClassLoader,java.util.Map,org.apache.cxf.resource.ResourceManager,org.apache.cxf.Bus)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void add(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void load(java.lang.String,java.lang.ClassLoader)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadAndRegister(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.extension.ExtensionRegistry:java.util.Map getRegisteredExtensions()",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl:void registerBindingFactory(java.lang.String,org.apache.cxf.binding.BindingFactory)",
            "org.apache.cxf.bus.managers.ConduitInitiatorManagerImpl:void registerConduitInitiator(java.lang.String,org.apache.cxf.transport.ConduitInitiator)",
            "org.apache.cxf.bus.managers.DestinationFactoryManagerImpl:void registerDestinationFactory(java.lang.String,org.apache.cxf.transport.DestinationFactory)",
            "org.apache.cxf.bus.managers.HeaderManagerImpl:void registerHeaderProcessor(org.apache.cxf.headers.HeaderProcessor)",
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:void addNamedWorkQueue(java.lang.String,org.apache.cxf.workqueue.AutomaticWorkQueue)",
            "org.apache.cxf.bus.osgi.ManagedWorkQueueList:void updated(java.lang.String,java.util.Dictionary)",
            "org.apache.cxf.catalog.CatalogXmlSchemaURIResolver:org.xml.sax.InputSource resolveEntity(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.common.jaxb.JAXBContextCache:org.apache.cxf.common.jaxb.JAXBContextCache$CachedContextAndSchemas getCachedContextAndSchemas(java.util.Set,java.lang.String,java.util.Map,java.util.Collection,boolean)",
            "org.apache.cxf.common.jaxb.JAXBContextCache:javax.xml.bind.JAXBContext createContext(java.util.Set,java.util.Map,java.util.Collection)",
            "org.apache.cxf.common.jaxb.JAXBUtils:void scanPackages(java.util.Set,java.lang.Class[],java.util.Map)",
            "org.apache.cxf.common.jaxb.JAXBUtils:void addToObjectFactoryCache(java.lang.Package,java.lang.Class,java.util.Map)",
            "org.apache.cxf.common.jaxb.JAXBUtils:void <clinit>()",
            "org.apache.cxf.common.jaxb.SchemaCollectionContextProxy:void defaultRegister(java.lang.Class,javax.xml.namespace.QName)",
            "org.apache.cxf.common.logging.Log4jLogger:void <clinit>()",
            "org.apache.cxf.common.util.ASMHelper$Opcodes:void <clinit>()",
            "org.apache.cxf.common.util.ASMHelper:org.apache.cxf.common.util.ASMHelper$TypeHelperClassLoader getTypeHelperClassLoader(java.lang.ClassLoader)",
            "org.apache.cxf.common.util.ASMHelper:org.apache.cxf.common.util.ASMHelper$TypeHelperClassLoader getTypeHelperClassLoader(java.lang.Class)",
            "org.apache.cxf.common.util.ASMHelper:void <clinit>()",
            "org.apache.cxf.common.util.CacheMap:void updateMainDataMap()",
            "org.apache.cxf.common.util.CacheMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.common.util.CacheMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.common.util.PrimitiveUtils:void <clinit>()",
            "org.apache.cxf.common.util.SpringClasspathScanner:java.util.Map findClassesInternal(java.util.Collection,java.util.List,java.lang.ClassLoader)",
            "org.apache.cxf.common.util.StringUtils:void <clinit>()",
            "org.apache.cxf.common.util.UrlUtils:java.util.Map parseQueryString(java.lang.String)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.common.util.XmlSchemaPrimitiveUtils:void registerPrimitiveClasses(java.lang.String,java.lang.Class[])",
            "org.apache.cxf.common.xmlschema.SchemaCollection:boolean crossImportsAdded(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaType)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void initWildcardDefinitionMap()",
            "org.apache.cxf.databinding.AbstractDataBinding:void <init>()",
            "org.apache.cxf.endpoint.ClientImpl$EchoContext:java.lang.Object put(java.lang.String,java.lang.Object)",
            "org.apache.cxf.endpoint.ClientImpl:java.util.Map getRequestContext()",
            "org.apache.cxf.endpoint.ClientImpl:java.util.Map getResponseContext()",
            "org.apache.cxf.endpoint.ClientImpl:void setThreadLocalRequestContext(boolean)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] doInvoke(org.apache.cxf.endpoint.ClientCallback,org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] processResult(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,java.util.Map)",
            "org.apache.cxf.endpoint.ClientImpl:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.extension.RegistryImpl:void register(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.helpers.DOMUtils:javax.xml.parsers.DocumentBuilder getDocumentBuilder()",
            "org.apache.cxf.helpers.HttpHeaderHelper:void <clinit>()",
            "org.apache.cxf.helpers.MapNamespaceContext:void addNamespace(java.lang.String,java.lang.String)",
            "org.apache.cxf.interceptor.ClientFaultConverter:void setStackTrace(org.apache.cxf.interceptor.Fault,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.FIStaxOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxInInterceptor:javax.xml.stream.XMLInputFactory getXMLInputFactory(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxOutInterceptor:javax.xml.stream.XMLOutputFactory getXMLOutputFactory(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.security.SecureAnnotationsInterceptor:void findRoles(java.lang.Class,java.util.Map)",
            "org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor:java.util.Map parseRolesMap(java.util.Map)",
            "org.apache.cxf.message.MessageImpl:java.lang.Object put(java.lang.String,java.lang.Object)",
            "org.apache.cxf.message.MessageImpl:void setContextualProperty(java.lang.String,java.lang.Object)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void <init>(java.util.SortedSet)",
            "org.apache.cxf.resource.URIResolver:void tryRemote(java.lang.String)",
            "org.apache.cxf.service.factory.SimpleMethodDispatcher:void bind(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method[])",
            "org.apache.cxf.service.factory.SimpleMethodDispatcher:org.apache.cxf.service.model.BindingOperationInfo getBindingOperation(java.lang.reflect.Method,org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.service.model.AbstractMessageContainer:void addMessagePart(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:void setProperty(java.lang.String,java.lang.Object)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:void addExtensionAttribute(javax.xml.namespace.QName,java.lang.Object)",
            "org.apache.cxf.service.model.BindingInfo:void addOperation(org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.service.model.BindingOperationInfo:void <init>(org.apache.cxf.service.model.BindingInfo,org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.InterfaceInfo:void addOperation(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.MessageInfo:java.util.Map getMessagePartsMap()",
            "org.apache.cxf.service.model.OperationInfo:void addFault(org.apache.cxf.service.model.FaultInfo)",
            "org.apache.cxf.service.model.ServiceInfo:void initMessagesMap()",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperationForWrapperElement(org.apache.cxf.message.Exchange,javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:void addNs(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startPrefixMapping(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:void addPrefix(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.staxutils.transform.TransformUtils:void convertToQNamesMap(java.util.Map,org.apache.cxf.staxutils.transform.QNamesMap,java.util.Map)",
            "org.apache.cxf.staxutils.transform.TransformUtils:void convertToMapOfElementProperties(java.util.Map,java.util.Map)",
            "org.apache.cxf.transport.TransportFinder:void registerBean(java.lang.Object)",
            "org.apache.cxf.transport.common.gzip.GZIPOutInterceptor:void addHeader(org.apache.cxf.message.Message,java.lang.String,java.lang.String)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:javax.xml.bind.JAXBElement getServiceNameType(javax.xml.namespace.QName,java.lang.String)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:void setInterfaceName(org.apache.cxf.ws.addressing.EndpointReferenceType,javax.xml.namespace.QName)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:void setWSDLLocation(org.apache.cxf.ws.addressing.EndpointReferenceType,java.lang.String[])"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(javax.xml.namespace.QName,java.lang.Object[])",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invokeWrapped(javax.xml.namespace.QName,java.lang.Object[])"
        ]
    },
    "org.apache.cxf.helpers.DOMUtils:org.w3c.dom.Document createDocument()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.feature.transform.XSLTUtils:org.w3c.dom.Document transform(javax.xml.transform.Templates,org.w3c.dom.Document)",
            "org.apache.cxf.helpers.DOMUtils:org.w3c.dom.Document newDocument()",
            "org.apache.cxf.interceptor.Fault:org.w3c.dom.Element getOrCreateDetail()",
            "org.apache.cxf.staxutils.StaxUtils:org.w3c.dom.Document read(javax.xml.stream.XMLStreamReader,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:org.w3c.dom.Document read(javax.xml.parsers.DocumentBuilder,javax.xml.stream.XMLStreamReader,boolean)"
        ]
    },
    "org.apache.cxf.attachment.AttachmentUtil:java.lang.String getAttachmentPartHeader(org.apache.cxf.message.Attachment)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.helpers.HttpHeaderHelper:java.lang.String mapCharset(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.AttachmentDeserializer:void initializeRootMessage()"
        ]
    },
    "org.apache.cxf.helpers.HttpHeaderHelper:java.lang.String mapCharset(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.HttpHeaderHelper:java.lang.String mapCharset(java.lang.String)"
        ]
    },
    "org.apache.cxf.message.MessageImpl:void setAttachments(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.AttachmentDeserializer:void initializeAttachments()",
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:org.apache.cxf.databinding.DataWriter getDataWriter(org.apache.cxf.message.Message,org.apache.cxf.service.Service,java.lang.Class)",
            "org.apache.cxf.message.AbstractWrappedMessage:void setAttachments(java.util.Collection)"
        ]
    },
    "org.apache.cxf.message.MessageImpl:java.lang.Object put(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.BusFactory:org.apache.cxf.BusFactory$BusHolder getThreadBusHolder(boolean)",
            "org.apache.cxf.attachment.AttachmentDeserializer:void initializeRootMessage()",
            "org.apache.cxf.attachment.AttachmentDeserializer:void addHeaderLine(java.util.Map,java.lang.StringBuilder)",
            "org.apache.cxf.attachment.AttachmentImpl:void setHeader(java.lang.String,java.lang.String)",
            "org.apache.cxf.attachment.AttachmentSerializer:void writeProlog()",
            "org.apache.cxf.attachment.AttachmentSerializer:void writeAttachments()",
            "org.apache.cxf.attachment.ContentDisposition:void <init>(java.lang.String)",
            "org.apache.cxf.bus.blueprint.ConfigurerImpl:void initializeWildcardMap()",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void <init>(java.util.Map,java.util.Map,java.lang.ClassLoader)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:java.lang.Object getExtension(java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void setExtension(java.lang.Object,java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void setProperty(java.lang.String,java.lang.Object)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void <init>(java.lang.String[],java.lang.ClassLoader,java.util.Map,org.apache.cxf.resource.ResourceManager,org.apache.cxf.Bus)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void add(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void load(java.lang.String,java.lang.ClassLoader)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadAndRegister(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.extension.ExtensionRegistry:java.util.Map getRegisteredExtensions()",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl:void registerBindingFactory(java.lang.String,org.apache.cxf.binding.BindingFactory)",
            "org.apache.cxf.bus.managers.ConduitInitiatorManagerImpl:void registerConduitInitiator(java.lang.String,org.apache.cxf.transport.ConduitInitiator)",
            "org.apache.cxf.bus.managers.DestinationFactoryManagerImpl:void registerDestinationFactory(java.lang.String,org.apache.cxf.transport.DestinationFactory)",
            "org.apache.cxf.bus.managers.HeaderManagerImpl:void registerHeaderProcessor(org.apache.cxf.headers.HeaderProcessor)",
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:void addNamedWorkQueue(java.lang.String,org.apache.cxf.workqueue.AutomaticWorkQueue)",
            "org.apache.cxf.bus.osgi.ManagedWorkQueueList:void updated(java.lang.String,java.util.Dictionary)",
            "org.apache.cxf.catalog.CatalogXmlSchemaURIResolver:org.xml.sax.InputSource resolveEntity(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.common.jaxb.JAXBContextCache:org.apache.cxf.common.jaxb.JAXBContextCache$CachedContextAndSchemas getCachedContextAndSchemas(java.util.Set,java.lang.String,java.util.Map,java.util.Collection,boolean)",
            "org.apache.cxf.common.jaxb.JAXBContextCache:javax.xml.bind.JAXBContext createContext(java.util.Set,java.util.Map,java.util.Collection)",
            "org.apache.cxf.common.jaxb.JAXBUtils:void scanPackages(java.util.Set,java.lang.Class[],java.util.Map)",
            "org.apache.cxf.common.jaxb.JAXBUtils:void addToObjectFactoryCache(java.lang.Package,java.lang.Class,java.util.Map)",
            "org.apache.cxf.common.jaxb.JAXBUtils:void <clinit>()",
            "org.apache.cxf.common.jaxb.SchemaCollectionContextProxy:void defaultRegister(java.lang.Class,javax.xml.namespace.QName)",
            "org.apache.cxf.common.logging.Log4jLogger:void <clinit>()",
            "org.apache.cxf.common.util.ASMHelper$Opcodes:void <clinit>()",
            "org.apache.cxf.common.util.ASMHelper:org.apache.cxf.common.util.ASMHelper$TypeHelperClassLoader getTypeHelperClassLoader(java.lang.ClassLoader)",
            "org.apache.cxf.common.util.ASMHelper:org.apache.cxf.common.util.ASMHelper$TypeHelperClassLoader getTypeHelperClassLoader(java.lang.Class)",
            "org.apache.cxf.common.util.ASMHelper:void <clinit>()",
            "org.apache.cxf.common.util.CacheMap:void updateMainDataMap()",
            "org.apache.cxf.common.util.CacheMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.common.util.CacheMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.common.util.PrimitiveUtils:void <clinit>()",
            "org.apache.cxf.common.util.SpringClasspathScanner:java.util.Map findClassesInternal(java.util.Collection,java.util.List,java.lang.ClassLoader)",
            "org.apache.cxf.common.util.StringUtils:void <clinit>()",
            "org.apache.cxf.common.util.UrlUtils:java.util.Map parseQueryString(java.lang.String)",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.common.util.XmlSchemaPrimitiveUtils:void registerPrimitiveClasses(java.lang.String,java.lang.Class[])",
            "org.apache.cxf.common.xmlschema.SchemaCollection:boolean crossImportsAdded(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaType)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void initWildcardDefinitionMap()",
            "org.apache.cxf.databinding.AbstractDataBinding:void <init>()",
            "org.apache.cxf.endpoint.ClientImpl$EchoContext:java.lang.Object put(java.lang.String,java.lang.Object)",
            "org.apache.cxf.endpoint.ClientImpl:java.util.Map getRequestContext()",
            "org.apache.cxf.endpoint.ClientImpl:java.util.Map getResponseContext()",
            "org.apache.cxf.endpoint.ClientImpl:void setThreadLocalRequestContext(boolean)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] doInvoke(org.apache.cxf.endpoint.ClientCallback,org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] processResult(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,java.util.Map)",
            "org.apache.cxf.endpoint.ClientImpl:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ClientImpl:void setOutMessageProperties(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.extension.RegistryImpl:void register(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.feature.transform.XSLTOutInterceptor:void transformXWriter(org.apache.cxf.message.Message,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.helpers.DOMUtils:javax.xml.parsers.DocumentBuilder getDocumentBuilder()",
            "org.apache.cxf.helpers.HttpHeaderHelper:void <clinit>()",
            "org.apache.cxf.helpers.MapNamespaceContext:void addNamespace(java.lang.String,java.lang.String)",
            "org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:void setOperationSchemaValidation(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:org.apache.cxf.service.model.MessageInfo setMessage(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo,boolean,org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.MessageInfo)",
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:void setOperationSchemaValidation(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.ClientFaultConverter:void setStackTrace(org.apache.cxf.interceptor.Fault,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.FIStaxInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.FIStaxOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.LoggingInInterceptor:void logging(java.util.logging.Logger,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.LoggingOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.ServiceInvokerInterceptor$2:void run()",
            "org.apache.cxf.interceptor.ServiceInvokerInterceptor:void copyJaxwsProperties(org.apache.cxf.message.Message,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxInInterceptor:javax.xml.stream.XMLInputFactory getXMLInputFactory(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxOutInterceptor:java.lang.String getEncoding(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxOutInterceptor:javax.xml.stream.XMLOutputFactory getXMLOutputFactory(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.security.SecureAnnotationsInterceptor:void findRoles(java.lang.Class,java.util.Map)",
            "org.apache.cxf.interceptor.security.SimpleAuthorizingInterceptor:java.util.Map parseRolesMap(java.util.Map)",
            "org.apache.cxf.interceptor.transform.TransformOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.message.AbstractWrappedMessage:java.lang.Object put(java.lang.String,java.lang.Object)",
            "org.apache.cxf.message.MessageImpl:java.lang.Object put(java.lang.String,java.lang.Object)",
            "org.apache.cxf.message.MessageImpl:void setContextualProperty(java.lang.String,java.lang.Object)",
            "org.apache.cxf.message.StringMapImpl:void put(java.lang.Class,java.lang.Object)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void <init>(java.util.SortedSet)",
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)",
            "org.apache.cxf.resource.URIResolver:void tryRemote(java.lang.String)",
            "org.apache.cxf.service.factory.SimpleMethodDispatcher:void bind(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method[])",
            "org.apache.cxf.service.factory.SimpleMethodDispatcher:org.apache.cxf.service.model.BindingOperationInfo getBindingOperation(java.lang.reflect.Method,org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.service.model.AbstractMessageContainer:void addMessagePart(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:void setProperty(java.lang.String,java.lang.Object)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:void addExtensionAttribute(javax.xml.namespace.QName,java.lang.Object)",
            "org.apache.cxf.service.model.BindingInfo:void addOperation(org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.service.model.BindingOperationInfo:void <init>(org.apache.cxf.service.model.BindingInfo,org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.InterfaceInfo:void addOperation(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.MessageInfo:java.util.Map getMessagePartsMap()",
            "org.apache.cxf.service.model.OperationInfo:void addFault(org.apache.cxf.service.model.FaultInfo)",
            "org.apache.cxf.service.model.ServiceInfo:void initMessagesMap()",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperationForWrapperElement(org.apache.cxf.message.Exchange,javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:void addNs(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startPrefixMapping(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:void addPrefix(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.staxutils.transform.TransformUtils:void convertToQNamesMap(java.util.Map,org.apache.cxf.staxutils.transform.QNamesMap,java.util.Map)",
            "org.apache.cxf.staxutils.transform.TransformUtils:void convertToMapOfElementProperties(java.util.Map,java.util.Map)",
            "org.apache.cxf.transport.TransportFinder:void registerBean(java.lang.Object)",
            "org.apache.cxf.transport.TransportURIResolver:org.xml.sax.InputSource resolve(java.lang.String,java.lang.String)",
            "org.apache.cxf.transport.common.gzip.GZIPOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.common.gzip.GZIPOutInterceptor:org.apache.cxf.transport.common.gzip.GZIPOutInterceptor$UseGzip gzipPermitted(org.apache.cxf.message.Message,boolean)",
            "org.apache.cxf.transport.common.gzip.GZIPOutInterceptor:void addHeader(org.apache.cxf.message.Message,java.lang.String,java.lang.String)",
            "org.apache.cxf.ws.addressing.ContextUtils:void storeMAPs(org.apache.cxf.ws.addressing.AddressingProperties,org.apache.cxf.message.Message,boolean,boolean,boolean)",
            "org.apache.cxf.ws.addressing.ContextUtils:void storeMAPFaultName(java.lang.String,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.addressing.ContextUtils:void storeMAPFaultReason(java.lang.String,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.addressing.ContextUtils:void storePartialResponseSent(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:javax.xml.bind.JAXBElement getServiceNameType(javax.xml.namespace.QName,java.lang.String)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:void setInterfaceName(org.apache.cxf.ws.addressing.EndpointReferenceType,javax.xml.namespace.QName)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:void setWSDLLocation(org.apache.cxf.ws.addressing.EndpointReferenceType,java.lang.String[])"
        ]
    },
    "org.apache.cxf.message.AbstractWrappedMessage:void setContextualProperty(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.message.AbstractWrappedMessage:void setContextualProperty(java.lang.String,java.lang.Object)",
            "org.apache.cxf.message.ExchangeImpl:void setMessageContextProperty(org.apache.cxf.message.Message,java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.cxf.message.ExchangeImpl:void setMessageContextProperty(org.apache.cxf.message.Message,java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.message.ExchangeImpl:java.lang.Object put(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.cxf.resource.URIResolver:void tryClasspath(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.resource.URIResolver:void <init>(java.lang.String,java.lang.String,java.lang.Class)",
            "org.apache.cxf.resource.URIResolver:void resolve(java.lang.String,java.lang.String,java.lang.Class)",
            "org.apache.cxf.resource.URIResolver:void tryFileSystem(java.lang.String,java.lang.String)",
            "org.apache.cxf.resource.URIResolver:void tryArchive(java.lang.String)"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:void setExchangeProperties(org.apache.cxf.message.Exchange,org.apache.cxf.endpoint.Endpoint,org.apache.cxf.service.model.BindingOperationInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] doInvoke(org.apache.cxf.endpoint.ClientCallback,org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.ClientImpl:org.apache.cxf.transport.Conduit getConduit()"
        ]
    },
    "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:org.apache.cxf.service.model.MessageInfo setMessage(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo,boolean,org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.MessageInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:org.apache.cxf.service.model.MessagePartInfo findMessagePart(org.apache.cxf.message.Exchange,java.util.Collection,javax.xml.namespace.QName,boolean,int,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.AbstractLoggingInterceptor:java.util.logging.Logger getMessageLogger(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.LoggingInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.LoggingOutInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void addSchemaValidationSupport(org.apache.cxf.endpoint.Endpoint,org.apache.cxf.annotations.SchemaValidation)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void handleEvent(org.apache.cxf.service.factory.FactoryBeanListener$Event,org.apache.cxf.service.factory.AbstractServiceFactoryBean,java.lang.Object[])"
        ]
    },
    "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void addSchemaValidationSupport(org.apache.cxf.service.model.OperationInfo,org.apache.cxf.annotations.SchemaValidation)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void handleEvent(org.apache.cxf.service.factory.FactoryBeanListener$Event,org.apache.cxf.service.factory.AbstractServiceFactoryBean,java.lang.Object[])"
        ]
    },
    "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void addDocumentation(org.apache.cxf.service.model.InterfaceInfo,org.apache.cxf.annotations.WSDLDocumentation$Placement,org.apache.cxf.annotations.WSDLDocumentation[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void handleEvent(org.apache.cxf.service.factory.FactoryBeanListener$Event,org.apache.cxf.service.factory.AbstractServiceFactoryBean,java.lang.Object[])"
        ]
    },
    "org.apache.cxf.staxutils.CachingXmlEventWriter:void setDefaultNamespace(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void setDefaultNamespace(java.lang.String)",
            "org.apache.cxf.staxutils.PrettyPrintXMLStreamWriter:void setDefaultNamespace(java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamWriter,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)"
        ]
    },
    "org.apache.cxf.staxutils.CachingXmlEventWriter:void setPrefix(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void setPrefix(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.PrettyPrintXMLStreamWriter:void setPrefix(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamWriter,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:java.lang.String getUniquePrefix(javax.xml.stream.XMLStreamWriter,java.lang.String,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startPrefixMapping(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.transport.common.gzip.GZIPOutInterceptor:void access$100(org.apache.cxf.message.Message,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.common.gzip.GZIPOutInterceptor$GZipThresholdOutputStream:void thresholdReached()"
        ]
    },
    "org.apache.cxf.ws.addressing.EndpointReferenceUtils:void setServiceAndPortName(org.apache.cxf.ws.addressing.EndpointReferenceType,javax.xml.namespace.QName,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.AbstractObservable:org.apache.cxf.ws.addressing.EndpointReferenceType getTargetReference(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:org.apache.cxf.ws.addressing.EndpointReferenceType getEndpointReference(java.net.URL,javax.xml.namespace.QName,java.lang.String)",
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.EndpointReferenceType convert(org.apache.cxf.ws.addressing.v200408.EndpointReferenceType)",
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.EndpointReferenceType convert(org.apache.cxf.ws.addressing.v200403.EndpointReferenceType)"
        ]
    },
    "org.apache.cxf.ws.addressing.EndpointReferenceUtils:org.apache.cxf.ws.addressing.EndpointReferenceType getEndpointReference(java.net.URL,javax.xml.namespace.QName,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.service.model.AbstractMessageContainer:org.apache.cxf.service.model.MessagePartInfo addMessagePart(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.BusFactory:org.apache.cxf.Bus getThreadDefaultBus()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.ClassHelper:java.lang.Class getRealClass(org.apache.cxf.Bus,java.lang.Object)",
            "org.apache.cxf.endpoint.AbstractEndpointFactory:org.apache.cxf.Bus getBus(boolean)",
            "org.apache.cxf.endpoint.EndpointImpl:void <init>(org.apache.cxf.Bus,org.apache.cxf.service.Service,org.apache.cxf.service.model.EndpointInfo)"
        ]
    },
    "org.apache.cxf.io.CachedOutputStream:void readBusProperties()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.io.CachedOutputStream:void <init>(long)"
        ]
    },
    "org.apache.cxf.io.CachedWriter:void readBusProperties()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.io.CachedWriter:void <init>(long)"
        ]
    },
    "org.apache.cxf.common.util.ClassHelper:java.lang.Class getRealClass(org.apache.cxf.Bus,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.ClassHelper:java.lang.Class getRealClass(java.lang.Object)"
        ]
    },
    "org.apache.cxf.io.CachedOutputStream:java.lang.String getBusProperty(org.apache.cxf.Bus,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.io.CachedOutputStream:void readBusProperties()"
        ]
    },
    "org.apache.cxf.io.CachedWriter:java.lang.String getBusProperty(org.apache.cxf.Bus,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.io.CachedWriter:void readBusProperties()"
        ]
    },
    "org.apache.cxf.bus.extension.ExtensionManagerBus$1:java.lang.Object resolve(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.resource.DefaultResourceManager:java.lang.Object findResource(java.lang.String,java.lang.Class,boolean,java.util.List)"
        ]
    },
    "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:java.lang.Object getBeanOfType(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:java.lang.Object getBeanOfType(java.lang.String,java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:java.lang.Object getExtension(java.lang.Class)",
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.bus.osgi.OSGiBeanLocator:java.lang.Object getBeanOfType(java.lang.String,java.lang.Class)",
            "org.apache.cxf.bus.spring.SpringBeanLocator:java.lang.Object getBeanOfType(java.lang.String,java.lang.Class)",
            "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void addEndpointProperties(org.apache.cxf.endpoint.Endpoint,org.apache.cxf.Bus,org.apache.cxf.annotations.EndpointProperty[])"
        ]
    },
    "org.apache.cxf.bus.osgi.OSGiBeanLocator:java.lang.Object getBeanOfType(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:java.lang.Object getBeanOfType(java.lang.String,java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:java.lang.Object getExtension(java.lang.Class)",
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.bus.osgi.OSGiBeanLocator:java.lang.Object getBeanOfType(java.lang.String,java.lang.Class)",
            "org.apache.cxf.bus.spring.SpringBeanLocator:java.lang.Object getBeanOfType(java.lang.String,java.lang.Class)",
            "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void addEndpointProperties(org.apache.cxf.endpoint.Endpoint,org.apache.cxf.Bus,org.apache.cxf.annotations.EndpointProperty[])"
        ]
    },
    "org.apache.cxf.bus.spring.SpringBeanLocator:java.lang.Object getBeanOfType(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:java.lang.Object getBeanOfType(java.lang.String,java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:java.lang.Object getExtension(java.lang.Class)",
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.bus.osgi.OSGiBeanLocator:java.lang.Object getBeanOfType(java.lang.String,java.lang.Class)",
            "org.apache.cxf.bus.spring.SpringBeanLocator:java.lang.Object getBeanOfType(java.lang.String,java.lang.Class)",
            "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void addEndpointProperties(org.apache.cxf.endpoint.Endpoint,org.apache.cxf.Bus,org.apache.cxf.annotations.EndpointProperty[])"
        ]
    },
    "org.apache.cxf.bus.managers.WorkQueueManagerImpl:org.apache.cxf.workqueue.AutomaticWorkQueue getAutomaticWorkQueue()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.OneWayProcessorInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.common.jaxb.SchemaCollectionContextProxy:org.apache.ws.commons.schema.XmlSchemaType mapToSchemaType(java.lang.Class,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.jaxb.SchemaCollectionContextProxy:java.lang.Object getBeanInfo(java.lang.Class)"
        ]
    },
    "org.apache.cxf.common.logging.Log4jLogger$HandlerWrapper:boolean isAsSevereAsThreshold(org.apache.log4j.Priority)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.logging.AbstractDelegatingLogger:void internalLog(java.util.logging.LogRecord)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void doLog(java.util.logging.LogRecord)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void doLog(java.util.logging.LogRecord,java.lang.String)"
        ]
    },
    "org.apache.cxf.common.util.XmlSchemaPrimitiveUtils:java.lang.String getSchemaRepresentation(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.interceptor.security.OperationInfoAuthorizingInterceptor:boolean isMethodProtected(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.security.OperationInfoAuthorizingInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.security.AbstractAuthorizingInInterceptor:boolean isMethodProtected(java.lang.reflect.Method)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.security.AbstractAuthorizingInInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.attachment.AttachmentUtil:boolean isMtomEnabled(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.AttachmentOutInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.attachment.AttachmentUtil:void setStreamedAttachmentProperties(org.apache.cxf.message.Message,org.apache.cxf.io.CachedOutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.AttachmentDataSource:void cache(org.apache.cxf.message.Message)",
            "org.apache.cxf.attachment.AttachmentDeserializer:void cache(org.apache.cxf.attachment.DelegatingInputStream)"
        ]
    },
    "org.apache.cxf.common.util.PropertyUtils:java.lang.Integer getInteger(org.apache.cxf.message.Message,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamReader configureReader(javax.xml.stream.XMLStreamReader,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:boolean shouldBuffer(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:org.apache.cxf.databinding.DataWriter getDataWriter(org.apache.cxf.message.Message,org.apache.cxf.service.Service,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.interceptor.FIStaxInInterceptor:boolean isHttpVerbSupported(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.FIStaxInInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.message.AbstractWrappedMessage:java.lang.Object getContextualProperty(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.AttachmentUtil:boolean isMtomEnabled(org.apache.cxf.message.Message)",
            "org.apache.cxf.attachment.AttachmentUtil:void setStreamedAttachmentProperties(org.apache.cxf.message.Message,org.apache.cxf.io.CachedOutputStream)",
            "org.apache.cxf.common.util.PropertyUtils:java.lang.Long getLong(org.apache.cxf.message.Message,java.lang.String)",
            "org.apache.cxf.common.util.PropertyUtils:java.lang.Integer getInteger(org.apache.cxf.message.Message,java.lang.String)",
            "org.apache.cxf.databinding.source.XMLStreamDataReader:java.lang.Object read(javax.xml.namespace.QName,javax.xml.stream.XMLStreamReader,java.lang.Class)",
            "org.apache.cxf.helpers.ServiceUtils:org.apache.cxf.annotations.SchemaValidation$SchemaValidationType getOverrideSchemaValidationType(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractLoggingInterceptor:boolean isLoggingDisabledNow(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:boolean shouldBuffer(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:void writeParts(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.message.MessageContentsList,java.util.List)",
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:org.apache.cxf.databinding.DataWriter getDataWriter(org.apache.cxf.message.Message,org.apache.cxf.service.Service,java.lang.Class)",
            "org.apache.cxf.interceptor.AttachmentOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.FIStaxInInterceptor:boolean isHttpVerbSupported(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.FIStaxOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.OneWayProcessorInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxInInterceptor:javax.xml.stream.XMLInputFactory getXMLInputFactory(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxOutInterceptor:javax.xml.stream.XMLOutputFactory getXMLOutputFactory(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.transform.TransformOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.message.AbstractWrappedMessage:java.lang.Object getContextualProperty(java.lang.String)",
            "org.apache.cxf.message.MessageUtils:boolean getContextualBoolean(org.apache.cxf.message.Message,java.lang.String,boolean)",
            "org.apache.cxf.message.MessageUtils:java.lang.Object getContextualProperty(org.apache.cxf.message.Message,java.lang.String,java.lang.String)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void wrapExceptionAsFault(org.apache.cxf.message.Message,java.lang.RuntimeException)",
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean isRobustOneWay(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.common.gzip.GZIPOutInterceptor:org.apache.cxf.transport.common.gzip.GZIPOutInterceptor$UseGzip gzipPermitted(org.apache.cxf.message.Message,boolean)",
            "org.apache.cxf.validation.AbstractValidationInterceptor:org.apache.cxf.validation.BeanValidationProvider getProvider(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.message.MessageUtils:java.lang.Object getContextualProperty(org.apache.cxf.message.Message,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.phase.PhaseInterceptorChain:boolean isRobustOneWay(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean isOneWay(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.validation.AbstractValidationInterceptor:org.apache.cxf.validation.BeanValidationProvider getProvider(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.validation.AbstractBeanValidationInterceptor:void handleValidation(org.apache.cxf.message.Message,java.lang.Object,java.lang.reflect.Method,java.util.List)",
            "org.apache.cxf.validation.BeanValidationOutInterceptor:org.apache.cxf.validation.BeanValidationProvider getOutProvider(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.security.AbstractAuthorizingInInterceptor:java.lang.reflect.Method getTargetMethod(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.security.AbstractAuthorizingInInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.service.invoker.AbstractInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.ServiceInvokerInterceptor$1:void run()"
        ]
    },
    "org.apache.cxf.validation.AbstractValidationInterceptor:java.lang.reflect.Method getServiceMethod(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.validation.AbstractBeanValidationInterceptor:java.lang.reflect.Method getServiceMethod(org.apache.cxf.message.Message)",
            "org.apache.cxf.validation.AbstractValidationInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.service.model.AbstractPropertiesHolder:java.lang.Object getProperty(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:void setExchangeProperties(org.apache.cxf.message.Exchange,org.apache.cxf.endpoint.Endpoint,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:org.apache.cxf.service.model.MessageInfo setMessage(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo,boolean,org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.MessageInfo)",
            "org.apache.cxf.interceptor.AbstractLoggingInterceptor:java.util.logging.Logger getMessageLogger(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.ClientFaultConverter:void processFaultDetail(org.apache.cxf.interceptor.Fault,org.apache.cxf.message.Message)",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperationForWrapperElement(org.apache.cxf.message.Exchange,javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.transport.ChainInitiationObserver:void setExchangeProperties(org.apache.cxf.message.Exchange,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:javax.xml.validation.Schema createSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.Bus)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:javax.xml.validation.Schema getSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(javax.xml.namespace.QName,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(java.lang.String,java.lang.Object[])"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invokeWrapped(javax.xml.namespace.QName,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invokeWrapped(java.lang.String,java.lang.Object[])"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:void invoke(org.apache.cxf.endpoint.ClientCallback,javax.xml.namespace.QName,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:void invoke(org.apache.cxf.endpoint.ClientCallback,java.lang.String,java.lang.Object[])"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:void invokeWrapped(org.apache.cxf.endpoint.ClientCallback,javax.xml.namespace.QName,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:void invokeWrapped(org.apache.cxf.endpoint.ClientCallback,java.lang.String,java.lang.Object[])"
        ]
    },
    "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperation(org.apache.cxf.message.Exchange,javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.service.model.UnwrappedOperationInfo:org.apache.cxf.service.model.FaultInfo getFault(javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.model.UnwrappedOperationInfo:org.apache.cxf.service.model.FaultInfo getFault(javax.xml.namespace.QName)"
        ]
    },
    "org.apache.cxf.staxutils.PropertiesExpandingStreamReader:java.lang.String getElementText()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DepthXMLStreamReader:java.lang.String getElementText()",
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.namespace.QName readQName(javax.xml.stream.XMLStreamReader)"
        ]
    },
    "org.apache.cxf.staxutils.PropertiesExpandingStreamReader:java.lang.String getAttributeValue(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DepthXMLStreamReader:java.lang.String getAttributeValue(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.staxutils.PropertiesExpandingStreamReader:java.lang.String getAttributeValue(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DepthXMLStreamReader:java.lang.String getAttributeValue(int)",
            "org.apache.cxf.staxutils.StaxSource:org.xml.sax.Attributes getAttributes()",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void readDocElements(org.w3c.dom.Document,org.w3c.dom.Node,javax.xml.stream.XMLStreamReader,boolean,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void readDocElements(org.w3c.dom.Document,org.w3c.dom.Node,javax.xml.stream.XMLStreamReader,org.apache.cxf.staxutils.StaxUtils$StreamToDOMContext)"
        ]
    },
    "org.apache.cxf.staxutils.PropertiesExpandingStreamReader:java.lang.String getText()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DepthXMLStreamReader:java.lang.String getText()",
            "org.apache.cxf.staxutils.StaxUtils:void copy(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void readDocElements(org.w3c.dom.Document,org.w3c.dom.Node,javax.xml.stream.XMLStreamReader,boolean,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void readDocElements(org.w3c.dom.Document,org.w3c.dom.Node,javax.xml.stream.XMLStreamReader,org.apache.cxf.staxutils.StaxUtils$StreamToDOMContext)"
        ]
    },
    "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:java.lang.Object getProperty(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.staxutils.PrettyPrintXMLStreamWriter:java.lang.Object getProperty(java.lang.String)"
        ]
    },
    "org.apache.cxf.staxutils.PrettyPrintXMLStreamWriter:java.lang.Object getProperty(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:java.lang.Object getProperty(java.lang.String)",
            "org.apache.cxf.staxutils.PrettyPrintXMLStreamWriter:java.lang.Object getProperty(java.lang.String)"
        ]
    },
    "org.apache.cxf.staxutils.DepthXMLStreamReader:java.lang.String getNamespaceURI(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DepthXMLStreamReader:java.lang.String getNamespaceURI(int)",
            "org.apache.cxf.staxutils.StaxSource:void parse()",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void readDocElements(org.w3c.dom.Document,org.w3c.dom.Node,javax.xml.stream.XMLStreamReader,boolean,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void readDocElements(org.w3c.dom.Document,org.w3c.dom.Node,javax.xml.stream.XMLStreamReader,org.apache.cxf.staxutils.StaxUtils$StreamToDOMContext)",
            "org.apache.cxf.staxutils.transform.InTransformReader:java.lang.String getNamespaceURI(int)",
            "org.apache.cxf.staxutils.transform.InTransformReader:java.lang.String getNamespacePrefix(int)"
        ]
    },
    "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void setDefaultNamespace(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void setDefaultNamespace(java.lang.String)",
            "org.apache.cxf.staxutils.PrettyPrintXMLStreamWriter:void setDefaultNamespace(java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamWriter,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void setDefaultNamespace(java.lang.String)"
        ]
    },
    "org.apache.cxf.staxutils.PrettyPrintXMLStreamWriter:void setDefaultNamespace(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void setDefaultNamespace(java.lang.String)",
            "org.apache.cxf.staxutils.PrettyPrintXMLStreamWriter:void setDefaultNamespace(java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamWriter,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)"
        ]
    },
    "org.apache.cxf.common.util.WeakIdentityHashMap:void clear()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void setProperties(java.util.Map)",
            "org.apache.cxf.bus.osgi.ManagedWorkQueueList:void shutDown()",
            "org.apache.cxf.common.jaxb.JAXBContextCache:void clearCaches()",
            "org.apache.cxf.common.util.CacheMap:void clear()",
            "org.apache.cxf.common.util.WeakIdentityHashMap:void clear()",
            "org.apache.cxf.endpoint.ClientImpl:void destroy()",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.cxf.common.util.WeakIdentityHashMap:int hashCode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.WeakIdentityHashMap:int hashCode()",
            "org.apache.cxf.configuration.jsse.TLSClientParameters:int hash(int,java.lang.Object)"
        ]
    },
    "org.apache.cxf.bus.spring.SpringBus:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor:org.apache.cxf.Bus getBusForName(java.lang.String,org.springframework.context.ApplicationContext,boolean)"
        ]
    },
    "org.apache.cxf.bus.spring.SpringBus:void setBusConfig(org.apache.cxf.bus.spring.BusDefinitionParser$BusConfig)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.EndpointReferenceType convertToNative(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.EndpointReferenceType parseEndpointReference(org.w3c.dom.Element)"
        ]
    },
    "org.apache.cxf.attachment.ImageDataContentHandler:java.lang.Object getTransferData(java.awt.datatransfer.DataFlavor,javax.activation.DataSource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.databinding.source.XMLStreamDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.source.XMLStreamDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,java.lang.Object)"
        ]
    },
    "org.apache.cxf.databinding.source.XMLStreamDataWriter:void write(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.managers.ServerRegistryImpl:void <init>(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.osgi.OSGIBusListener:void <init>(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.osgi.OSGIBusListener:void sendBusCreatedToBusCreationListeners()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.osgi.OSGIBusListener:void <init>(org.apache.cxf.Bus,java.lang.Object[])"
        ]
    },
    "org.apache.cxf.bus.osgi.OSGIBusListener:void registerBusFeatures()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.osgi.OSGIBusListener:void <init>(org.apache.cxf.Bus,java.lang.Object[])"
        ]
    },
    "org.apache.cxf.bus.spring.Jsr250BeanPostProcessor:java.lang.Object postProcessBeforeInitialization(java.lang.Object,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.managers.WorkQueueImplMBeanWrapper:javax.management.ObjectName getObjectName()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.managers.WorkQueueManagerImplMBeanWrapper:javax.management.ObjectName getObjectName()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.configuration.jsse.TLSParameterJaxBUtils:java.security.KeyStore getKeyStore(org.apache.cxf.configuration.security.KeyStoreType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.jsse.TLSParameterJaxBUtils:javax.net.ssl.KeyManager[] getKeyManagers(org.apache.cxf.configuration.security.KeyManagersType)",
            "org.apache.cxf.configuration.jsse.TLSParameterJaxBUtils:javax.net.ssl.TrustManager[] getTrustManagers(org.apache.cxf.configuration.security.TrustManagersType)"
        ]
    },
    "org.apache.cxf.endpoint.EndpointImpl:void <init>(org.apache.cxf.Bus,org.apache.cxf.service.Service,org.apache.cxf.service.model.EndpointInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:void <init>(org.apache.cxf.Bus,org.apache.cxf.service.Service,javax.xml.namespace.QName,org.apache.cxf.endpoint.EndpointImplFactory)",
            "org.apache.cxf.endpoint.EndpointImpl:void <init>(org.apache.cxf.Bus,org.apache.cxf.service.Service,javax.xml.namespace.QName)",
            "org.apache.cxf.endpoint.SimpleEndpointImplFactory:org.apache.cxf.endpoint.EndpointImpl newEndpointImpl(org.apache.cxf.Bus,org.apache.cxf.service.Service,org.apache.cxf.service.model.EndpointInfo)"
        ]
    },
    "org.apache.cxf.bus.managers.ServerLifeCycleManagerImpl:void stopServer(org.apache.cxf.endpoint.Server)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ServerImpl:void stop()"
        ]
    },
    "org.apache.cxf.endpoint.ServerImpl:void <init>(org.apache.cxf.Bus,org.apache.cxf.endpoint.Endpoint,org.apache.cxf.transport.DestinationFactory,org.apache.cxf.binding.BindingFactory)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.interceptor.ClientOutFaultObserver:void <init>(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:void <init>(org.apache.cxf.Bus,org.apache.cxf.endpoint.Endpoint,org.apache.cxf.endpoint.ConduitSelector)",
            "org.apache.cxf.endpoint.ClientImpl:void <init>(org.apache.cxf.Bus,org.apache.cxf.service.Service,javax.xml.namespace.QName,org.apache.cxf.endpoint.EndpointImplFactory)"
        ]
    },
    "org.apache.cxf.interceptor.InFaultChainInitiatorObserver:void <init>(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.EndpointImpl:void <init>(org.apache.cxf.Bus,org.apache.cxf.service.Service,org.apache.cxf.service.model.EndpointInfo)"
        ]
    },
    "org.apache.cxf.interceptor.OutFaultChainInitiatorObserver:void <init>(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.EndpointImpl:void <init>(org.apache.cxf.Bus,org.apache.cxf.service.Service,org.apache.cxf.service.model.EndpointInfo)"
        ]
    },
    "org.apache.cxf.service.invoker.FactoryInvoker:java.lang.Object getServiceObject(org.apache.cxf.message.Exchange)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.invoker.AbstractInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object)",
            "org.apache.cxf.validation.AbstractValidationInterceptor:java.lang.Object getServiceObject(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.service.invoker.PooledFactory:java.lang.Object createObject(org.apache.cxf.message.Exchange)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.invoker.PooledFactory:java.lang.Object create(org.apache.cxf.message.Exchange)"
        ]
    },
    "org.apache.cxf.service.invoker.SessionFactory:java.lang.Object create(org.apache.cxf.message.Exchange)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.invoker.FactoryInvoker:java.lang.Object getServiceObject(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.service.invoker.PooledFactory:java.lang.Object createObject(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.service.invoker.SessionFactory:java.lang.Object create(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.service.invoker.SingletonFactory:void createBean(org.apache.cxf.message.Exchange)"
        ]
    },
    "org.apache.cxf.service.invoker.SingletonFactory:void createBean(org.apache.cxf.message.Exchange)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.invoker.SingletonFactory:java.lang.Object create(org.apache.cxf.message.Exchange)"
        ]
    },
    "org.apache.cxf.binding.AbstractBindingFactory:void addListener(org.apache.cxf.transport.Destination,org.apache.cxf.endpoint.Endpoint)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.interceptor.OutgoingChainInterceptor:org.apache.cxf.transport.Conduit getBackChannelConduit(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.MessageSenderInterceptor:org.apache.cxf.transport.Conduit getConduit(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.feature.AbstractFeature:void initialize(org.apache.cxf.endpoint.Server,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.feature.WrappedFeature:void initialize(org.apache.cxf.endpoint.Server,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.feature.AbstractFeature:void initialize(org.apache.cxf.endpoint.Client,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.feature.WrappedFeature:void initialize(org.apache.cxf.endpoint.Client,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.feature.AbstractFeature:void initialize(org.apache.cxf.interceptor.InterceptorProvider,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.feature.WrappedFeature:void initialize(org.apache.cxf.interceptor.InterceptorProvider,org.apache.cxf.Bus)",
            "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void addLoggingSupport(org.apache.cxf.endpoint.Endpoint,org.apache.cxf.Bus,org.apache.cxf.annotations.Logging)",
            "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void addGZipSupport(org.apache.cxf.endpoint.Endpoint,org.apache.cxf.Bus,org.apache.cxf.annotations.GZIP)"
        ]
    },
    "org.apache.cxf.feature.AbstractFeature:void initialize(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void initializeFeatures()",
            "org.apache.cxf.feature.WrappedFeature:void initialize(org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.common.util.PackageUtils:java.lang.String parsePackageName(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.endpoint.AbstractConduitSelector$ContextualBooleanGetter:boolean isFullComparison()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.AbstractConduitSelector:boolean matchAddresses(java.lang.String,java.lang.String,org.apache.cxf.endpoint.AbstractConduitSelector$ContextualBooleanGetter)"
        ]
    },
    "org.apache.cxf.feature.transform.AbstractXSLTInterceptor:boolean checkContextProperty(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.feature.transform.XSLTInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.feature.transform.XSLTOutInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.StaxInEndingInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.security.DelegatingAuthenticationInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.transform.TransformInInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.security.DelegatingAuthenticationInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.helpers.ServiceUtils:org.apache.cxf.annotations.SchemaValidation$SchemaValidationType getSchemaValidationType(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.ServiceUtils:boolean isSchemaValidationEnabled(org.apache.cxf.annotations.SchemaValidation$SchemaValidationType,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:void setOperationSchemaValidation(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:void setOperationSchemaValidation(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.helpers.ServiceUtils:org.apache.cxf.annotations.SchemaValidation$SchemaValidationType getSchemaValidationTypeFromModel(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.ServiceUtils:org.apache.cxf.annotations.SchemaValidation$SchemaValidationType getSchemaValidationType(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.bus.CXFBusFactory:org.apache.cxf.Bus createBus()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.BusFactory:org.apache.cxf.Bus getDefaultBus(boolean)",
            "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus createBus(java.lang.String[],boolean)"
        ]
    },
    "org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor:org.apache.cxf.Bus addBus(org.springframework.context.ApplicationContext,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.spring.SpringBusFactory:org.springframework.beans.factory.xml.NamespaceHandlerResolver tryFindNamespaceHandler(org.springframework.context.ApplicationContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.SpringBusFactory:void <init>(org.springframework.context.ApplicationContext)"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:void <init>(org.apache.cxf.Bus,org.apache.cxf.endpoint.Endpoint)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.endpoint.ClientImpl:void <init>(org.apache.cxf.Bus,org.apache.cxf.endpoint.Endpoint,org.apache.cxf.transport.Conduit)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.managers.CXFBusLifeCycleManager:void postShutdown()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void shutdown(boolean)",
            "org.apache.cxf.bus.managers.CXFBusLifeCycleManager:void postShutdown()"
        ]
    },
    "org.apache.cxf.common.injection.ResourceInjector:void inject(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadAndRegister(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.spring.Jsr250BeanPostProcessor:java.lang.Object postProcessBeforeInitialization(java.lang.Object,java.lang.String)",
            "org.apache.cxf.service.invoker.PerRequestFactory:java.lang.Object create(org.apache.cxf.message.Exchange)"
        ]
    },
    "org.apache.cxf.ws.addressing.EndpointReferenceUtils:javax.xml.transform.Source convertToXML(org.apache.cxf.ws.addressing.EndpointReferenceType)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.catalog.OASISCatalogManager:void <init>(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.catalog.OASISCatalogManager:void loadContextCatalogs()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.catalog.OASISCatalogManager:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.catalog.OASISCatalogManager:org.apache.cxf.catalog.OASISCatalogManager getContextCatalog()"
        ]
    },
    "org.apache.cxf.message.MessageImpl:void calcContextCache()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.message.MessageImpl:java.lang.Object getContextualProperty(java.lang.String)"
        ]
    },
    "org.apache.cxf.service.model.BindingMessageInfo:void <init>(org.apache.cxf.service.model.MessageInfo,org.apache.cxf.service.model.BindingOperationInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.model.BindingOperationInfo:void <init>(org.apache.cxf.service.model.BindingInfo,org.apache.cxf.service.model.OperationInfo)"
        ]
    },
    "org.apache.cxf.databinding.stax.StaxDataBindingInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.security.DelegatingAuthenticationInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.service.model.UnwrappedOperationInfo:java.util.Collection getFaults()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.ClientFaultConverter:void processFaultDetail(org.apache.cxf.interceptor.Fault,org.apache.cxf.message.Message)",
            "org.apache.cxf.service.ServiceModelVisitor:void visitOperation(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void addDocumentation(org.apache.cxf.service.model.OperationInfo,org.apache.cxf.annotations.WSDLDocumentation$Placement,org.apache.cxf.annotations.WSDLDocumentation[])",
            "org.apache.cxf.service.model.BindingOperationInfo:void <init>(org.apache.cxf.service.model.BindingInfo,org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.UnwrappedOperationInfo:java.util.Collection getFaults()"
        ]
    },
    "org.apache.cxf.common.util.ClasspathScanner:java.util.Map findClasses(java.lang.String,java.lang.Class[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.util.ClasspathScanner:java.util.Map findClasses(java.util.Collection,java.lang.Class[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.util.ClasspathScanner:java.util.List findResources(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.configuration.jsse.TLSClientParametersConfig:org.apache.cxf.configuration.jsse.TLSClientParameters createTLSClientParametersFromType(org.apache.cxf.configuration.security.TLSClientParametersType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.jsse.TLSClientParametersConfig:java.lang.Object createTLSClientParameters(java.lang.String)"
        ]
    },
    "org.apache.cxf.configuration.jsse.TLSServerParametersConfig:void <init>(org.apache.cxf.configuration.security.TLSServerParametersType)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void mapElementToJaxbProperty(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder,javax.xml.namespace.QName,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.databinding.source.XMLStreamDataReader:java.lang.Object read(org.apache.cxf.service.model.MessagePartInfo,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.ClientFaultConverter:void processFaultDetail(org.apache.cxf.interceptor.Fault,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:void completeExchange(org.apache.cxf.message.Exchange)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] processResult(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,java.util.Map)",
            "org.apache.cxf.endpoint.ClientImpl:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ClientImpl:void access$000(org.apache.cxf.endpoint.ClientImpl,org.apache.cxf.message.Exchange)"
        ]
    },
    "org.apache.cxf.message.ExchangeImpl:org.apache.cxf.transport.Conduit getConduit(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.MessageSenderInterceptor:org.apache.cxf.transport.Conduit getConduit(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:org.apache.cxf.transport.Conduit getBackChannelConduit(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.addressing.ContextUtils:org.apache.cxf.transport.Conduit getConduit(org.apache.cxf.transport.Conduit,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:void prepareConduitSelector(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] doInvoke(org.apache.cxf.endpoint.ClientCallback,org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:void invoke(org.apache.cxf.endpoint.ClientCallback,org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:void invoke(org.apache.cxf.endpoint.ClientCallback,javax.xml.namespace.QName,java.lang.Object[])",
            "org.apache.cxf.endpoint.ClientImpl:void invokeWrapped(org.apache.cxf.endpoint.ClientCallback,javax.xml.namespace.QName,java.lang.Object[])"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:void invoke(org.apache.cxf.endpoint.ClientCallback,org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.endpoint.ClientImpl:void invoke(org.apache.cxf.endpoint.ClientCallback,org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],org.apache.cxf.message.Exchange)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.workqueue.AutomaticWorkQueueImpl$3:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl$3:void run()",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl$AWQThreadFactory$1:void run()",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl$DelayedTaskWrapper:void run()",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void execute(java.lang.Runnable)",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void execute(java.lang.Runnable,long)",
            "org.apache.cxf.workqueue.SynchronousExecutor:void execute(java.lang.Runnable)"
        ]
    },
    "org.apache.cxf.workqueue.AutomaticWorkQueueImpl$AWQThreadFactory$1:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl$3:void run()",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl$AWQThreadFactory$1:void run()",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl$DelayedTaskWrapper:void run()",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void execute(java.lang.Runnable,long)",
            "org.apache.cxf.workqueue.SynchronousExecutor:void execute(java.lang.Runnable)"
        ]
    },
    "org.apache.cxf.workqueue.AutomaticWorkQueueImpl$DelayedTaskWrapper:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl$3:void run()",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl$AWQThreadFactory$1:void run()",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl$DelayedTaskWrapper:void run()",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl$WatchDog:void run()",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void execute(java.lang.Runnable,long)",
            "org.apache.cxf.workqueue.SynchronousExecutor:void execute(java.lang.Runnable)"
        ]
    },
    "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void execute(java.lang.Runnable,long)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.workqueue.SynchronousExecutor:void execute(java.lang.Runnable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl$2:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.ServiceInvokerInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.configuration.spring.MappingBeanDefinitionParser:org.w3c.dom.Element transformElement(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.MappingBeanDefinitionParser:org.springframework.beans.factory.support.AbstractBeanDefinition parseInternal(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)"
        ]
    },
    "org.apache.cxf.interceptor.transform.TransformOutInterceptor:javax.xml.stream.XMLStreamWriter createTransformWriterIfNeeded(javax.xml.stream.XMLStreamWriter,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.transform.TransformOutInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.staxutils.PrettyPrintXMLStreamWriter:void writeStartElement(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeStartElement(java.lang.String)",
            "org.apache.cxf.staxutils.PrettyPrintXMLStreamWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamWriter,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElementEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)"
        ]
    },
    "org.apache.cxf.staxutils.PrettyPrintXMLStreamWriter:void writeStartElement(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeStartElement(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.PrettyPrintXMLStreamWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElementEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeEmptyElement(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeEmptyElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.PrettyPrintXMLStreamWriter:void writeEmptyElement(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.staxutils.PrettyPrintXMLStreamWriter:void writeEmptyElement(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeEmptyElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.PrettyPrintXMLStreamWriter:void writeEmptyElement(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:java.lang.String getUniquePrefix(javax.xml.stream.XMLStreamWriter,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.staxutils.W3CNamespaceContext:java.util.Iterator getPrefixes(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)"
        ]
    },
    "org.apache.cxf.interceptor.LoggingInInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.security.DelegatingAuthenticationInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.io.CachedOutputStream:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.logging.Log4jLogger$HandlerWrapper:void append(org.apache.log4j.spi.LoggingEvent)",
            "org.apache.cxf.common.util.PackageUtils:java.lang.String combine(java.util.List,char)",
            "org.apache.cxf.common.util.PropertyUtils:boolean isTrue(java.lang.Object)",
            "org.apache.cxf.common.util.PropertyUtils:boolean isFalse(java.lang.Object)",
            "org.apache.cxf.common.util.PropertyUtils:java.lang.Long getLong(org.apache.cxf.message.Message,java.lang.String)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:java.util.List enumeratorValues(org.apache.ws.commons.schema.XmlSchemaSimpleType)",
            "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String[] getCiphersuitesToInclude(java.util.List,org.apache.cxf.configuration.security.FiltersType,java.lang.String[],java.lang.String[],java.util.logging.Logger)",
            "org.apache.cxf.endpoint.ClientImpl:boolean isThreadLocalRequestContext()",
            "org.apache.cxf.helpers.ServiceUtils:org.apache.cxf.annotations.SchemaValidation$SchemaValidationType getSchemaValidationType(java.lang.Object)"
        ]
    },
    "org.apache.cxf.io.CachedOutputStream:void write(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.IOUtils:int copy(java.io.InputStream,java.io.OutputStream,int)",
            "org.apache.cxf.helpers.IOUtils:void copyAtLeast(java.io.InputStream,java.io.OutputStream,int)",
            "org.apache.cxf.io.AbstractWrappedOutputStream:void write(byte[],int,int)",
            "org.apache.cxf.io.CacheAndWriteOutputStream:void write(byte[],int,int)",
            "org.apache.cxf.io.CachedOutputStream:void write(byte[],int,int)"
        ]
    },
    "org.apache.cxf.io.CachedOutputStream:void write(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.AttachmentSerializer:void writeProlog()",
            "org.apache.cxf.attachment.AttachmentSerializer:void writeAttachments()",
            "org.apache.cxf.attachment.ImageDataContentHandler:void writeTo(java.lang.Object,java.lang.String,java.io.OutputStream)",
            "org.apache.cxf.common.util.Base64Utility:void decode(char[],int,int,java.io.OutputStream)",
            "org.apache.cxf.common.util.Base64Utility:void decode(java.lang.String,java.io.OutputStream)",
            "org.apache.cxf.common.util.Base64Utility:void writeCharArrayToStream(char[],int,java.io.OutputStream)",
            "org.apache.cxf.common.util.Base64Utility:void encodeChunk(byte[],int,int,java.io.OutputStream)",
            "org.apache.cxf.io.CacheAndWriteOutputStream:void write(byte[])",
            "org.apache.cxf.io.CachedOutputStream:void write(byte[])"
        ]
    },
    "org.apache.cxf.io.CachedOutputStream:void write(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.io.AbstractWrappedOutputStream:void write(int)",
            "org.apache.cxf.io.CacheAndWriteOutputStream:void write(int)",
            "org.apache.cxf.io.CachedOutputStream:void write(int)"
        ]
    },
    "org.apache.cxf.io.CachedOutputStream$TransferableFileInputStream:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.AttachmentDataSource:void cache(org.apache.cxf.message.Message)",
            "org.apache.cxf.attachment.AttachmentDeserializer:void cache(org.apache.cxf.attachment.DelegatingInputStream)",
            "org.apache.cxf.attachment.DelegatingInputStream:void close()",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void load(java.lang.String,java.lang.ClassLoader)",
            "org.apache.cxf.bus.extension.TextExtensionFragmentParser:java.util.List getExtensions(java.net.URL)",
            "org.apache.cxf.bus.spring.BusApplicationContext:org.springframework.core.io.Resource[] getConfigResources()",
            "org.apache.cxf.bus.spring.BusApplicationContextResourceResolver:java.lang.Object resolve(java.lang.String,java.lang.Class)",
            "org.apache.cxf.catalog.OASISCatalogManager$1:java.lang.String getResolvedEntity(java.lang.String,java.lang.String)",
            "org.apache.cxf.common.jaxb.JAXBContextCache:void addPackage(java.util.Set,java.lang.String,java.lang.ClassLoader)",
            "org.apache.cxf.common.jaxb.JAXBUtils:void closeUnmarshaller(javax.xml.bind.Unmarshaller)",
            "org.apache.cxf.common.jaxb.JAXBUtils:void scanPackages(java.util.Set,java.lang.Class[],java.util.Map)",
            "org.apache.cxf.common.util.PropertiesLoaderUtils:java.util.Properties loadAllProperties(java.lang.String,java.lang.ClassLoader,java.util.logging.Logger,java.util.logging.Level,java.lang.String)",
            "org.apache.cxf.configuration.jsse.SSLUtils:void loadDefaultKeyManagers(java.util.logging.Logger)",
            "org.apache.cxf.configuration.jsse.SSLUtils:javax.net.ssl.TrustManager[] getTrustStoreManagers(boolean,java.lang.String,java.lang.String,java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.configuration.jsse.TLSParameterJaxBUtils:java.security.KeyStore getKeyStore(org.apache.cxf.configuration.security.KeyStoreType)",
            "org.apache.cxf.databinding.source.XMLStreamDataReader$2:void close()",
            "org.apache.cxf.endpoint.ClientImpl:void destroy()",
            "org.apache.cxf.endpoint.ServerImpl:void stop()",
            "org.apache.cxf.feature.transform.XSLTInInterceptor:void transformIS(org.apache.cxf.message.Message,java.io.InputStream)",
            "org.apache.cxf.feature.transform.XSLTUtils:java.io.InputStream transform(javax.xml.transform.Templates,java.io.InputStream)",
            "org.apache.cxf.helpers.FileUtils:java.lang.String getStringFromFile(java.io.File)",
            "org.apache.cxf.helpers.IOUtils:int copyAndCloseInput(java.io.InputStream,java.io.OutputStream)",
            "org.apache.cxf.helpers.IOUtils:int copyAndCloseInput(java.io.InputStream,java.io.OutputStream,int)",
            "org.apache.cxf.helpers.IOUtils:java.io.ByteArrayInputStream loadIntoBAIS(java.io.InputStream)",
            "org.apache.cxf.helpers.IOUtils:byte[] readBytesFromStream(java.io.InputStream)",
            "org.apache.cxf.interceptor.AbstractLoggingInterceptor:void writePayload(java.lang.StringBuilder,org.apache.cxf.io.CachedOutputStream,java.lang.String,java.lang.String)",
            "org.apache.cxf.interceptor.OneWayProcessorInterceptor:void handleFault(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:void closeInput(org.apache.cxf.message.Message)",
            "org.apache.cxf.io.CachedOutputStream:byte[] getBytes()",
            "org.apache.cxf.io.CachedOutputStream:void writeCacheTo(java.lang.StringBuilder,java.lang.String,long)",
            "org.apache.cxf.io.CachedOutputStream:void writeCacheTo(java.lang.StringBuilder,java.lang.String)",
            "org.apache.cxf.io.DelegatingInputStream:void cacheInput()",
            "org.apache.cxf.resource.ExtendedURIResolver:void close()",
            "org.apache.cxf.resource.URIResolver:void tryRemote(java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:org.w3c.dom.Document read(java.io.File)",
            "org.apache.cxf.transport.AbstractConduit:void close(org.apache.cxf.message.Message)",
            "org.apache.cxf.version.Version:void loadProperties()",
            "org.apache.cxf.ws.addressing.ContextUtils$1$1:void onMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.AbstractLoggingInterceptor:void writePrettyPayload(java.lang.StringBuilder,java.io.StringWriter,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.AbstractLoggingInterceptor:void writePayload(java.lang.StringBuilder,java.io.StringWriter,java.lang.String)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:void writeTo(org.w3c.dom.Node,java.io.OutputStream,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.staxutils.StaxUtils:void writeTo(org.w3c.dom.Node,java.io.Writer)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.interceptor.StaxOutEndingInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.security.DelegatingAuthenticationInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:void copy(javax.xml.transform.Source,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:void writeTo(org.w3c.dom.Node,java.io.OutputStream)",
            "org.apache.cxf.staxutils.StaxUtils:void writeTo(org.w3c.dom.Node,java.io.OutputStream,int)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:void printXmlFragment(javax.xml.stream.XMLStreamReader)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.staxutils.StaxUtils:void print(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.staxutils.StaxUtils:java.lang.String toString(javax.xml.transform.Source)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:java.lang.String toString(org.w3c.dom.Node)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:java.lang.String toString(org.w3c.dom.Document)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.W3CDOMStreamReader:java.lang.String toString()",
            "org.apache.cxf.staxutils.W3CDOMStreamWriter:java.lang.String toString()"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:java.lang.String toString(org.w3c.dom.Element,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:java.lang.String toString(org.w3c.dom.Element)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:javax.xml.validation.Schema createSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.io.CachedWriter:void write(char[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.IOUtils:void copyAtLeast(java.io.Reader,java.io.Writer,int)",
            "org.apache.cxf.helpers.IOUtils:void copy(java.io.Reader,java.io.Writer,int)",
            "org.apache.cxf.io.CachedWriter:void writeCacheTo(java.io.Writer)",
            "org.apache.cxf.io.CachedWriter:void write(char[],int,int)"
        ]
    },
    "org.apache.cxf.io.CachedWriter$1:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.AttachmentDataSource:void cache(org.apache.cxf.message.Message)",
            "org.apache.cxf.attachment.AttachmentDeserializer:void cache(org.apache.cxf.attachment.DelegatingInputStream)",
            "org.apache.cxf.attachment.DelegatingInputStream:void close()",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void load(java.lang.String,java.lang.ClassLoader)",
            "org.apache.cxf.bus.extension.TextExtensionFragmentParser:java.util.List getExtensions(java.net.URL)",
            "org.apache.cxf.bus.spring.BusApplicationContext:org.springframework.core.io.Resource[] getConfigResources()",
            "org.apache.cxf.bus.spring.BusApplicationContextResourceResolver:java.lang.Object resolve(java.lang.String,java.lang.Class)",
            "org.apache.cxf.catalog.OASISCatalogManager$1:java.lang.String getResolvedEntity(java.lang.String,java.lang.String)",
            "org.apache.cxf.common.jaxb.JAXBContextCache:void addPackage(java.util.Set,java.lang.String,java.lang.ClassLoader)",
            "org.apache.cxf.common.jaxb.JAXBUtils:void closeUnmarshaller(javax.xml.bind.Unmarshaller)",
            "org.apache.cxf.common.jaxb.JAXBUtils:void scanPackages(java.util.Set,java.lang.Class[],java.util.Map)",
            "org.apache.cxf.common.util.PropertiesLoaderUtils:java.util.Properties loadAllProperties(java.lang.String,java.lang.ClassLoader,java.util.logging.Logger,java.util.logging.Level,java.lang.String)",
            "org.apache.cxf.configuration.jsse.SSLUtils:void loadDefaultKeyManagers(java.util.logging.Logger)",
            "org.apache.cxf.configuration.jsse.SSLUtils:javax.net.ssl.TrustManager[] getTrustStoreManagers(boolean,java.lang.String,java.lang.String,java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.configuration.jsse.TLSParameterJaxBUtils:java.security.KeyStore getKeyStore(org.apache.cxf.configuration.security.KeyStoreType)",
            "org.apache.cxf.databinding.source.XMLStreamDataReader$2:void close()",
            "org.apache.cxf.endpoint.ClientImpl:void destroy()",
            "org.apache.cxf.endpoint.ServerImpl:void stop()",
            "org.apache.cxf.feature.transform.XSLTInInterceptor:void transformIS(org.apache.cxf.message.Message,java.io.InputStream)",
            "org.apache.cxf.feature.transform.XSLTUtils:java.io.InputStream transform(javax.xml.transform.Templates,java.io.InputStream)",
            "org.apache.cxf.helpers.FileUtils:java.lang.String getStringFromFile(java.io.File)",
            "org.apache.cxf.helpers.IOUtils:int copyAndCloseInput(java.io.InputStream,java.io.OutputStream)",
            "org.apache.cxf.helpers.IOUtils:int copyAndCloseInput(java.io.InputStream,java.io.OutputStream,int)",
            "org.apache.cxf.helpers.IOUtils:java.io.ByteArrayInputStream loadIntoBAIS(java.io.InputStream)",
            "org.apache.cxf.helpers.IOUtils:byte[] readBytesFromStream(java.io.InputStream)",
            "org.apache.cxf.interceptor.AbstractLoggingInterceptor:void writePayload(java.lang.StringBuilder,org.apache.cxf.io.CachedOutputStream,java.lang.String,java.lang.String)",
            "org.apache.cxf.interceptor.OneWayProcessorInterceptor:void handleFault(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:void closeInput(org.apache.cxf.message.Message)",
            "org.apache.cxf.io.CachedOutputStream:byte[] getBytes()",
            "org.apache.cxf.io.CachedOutputStream:void writeCacheTo(java.lang.StringBuilder,java.lang.String,long)",
            "org.apache.cxf.io.CachedOutputStream:void writeCacheTo(java.lang.StringBuilder,java.lang.String)",
            "org.apache.cxf.io.DelegatingInputStream:void cacheInput()",
            "org.apache.cxf.resource.ExtendedURIResolver:void close()",
            "org.apache.cxf.resource.URIResolver:void tryRemote(java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:org.w3c.dom.Document read(java.io.File)",
            "org.apache.cxf.transport.AbstractConduit:void close(org.apache.cxf.message.Message)",
            "org.apache.cxf.version.Version:void loadProperties()",
            "org.apache.cxf.ws.addressing.ContextUtils$1$1:void onMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.common.injection.ResourceInjector:void injectResourceClassLevel(javax.'annotation'.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.injection.ResourceInjector:void visitClass(java.lang.Class,java.lang.'annotation'.Annotation)"
        ]
    },
    "org.apache.cxf.common.injection.ResourceInjector:void visitField(java.lang.reflect.Field,java.lang.'annotation'.Annotation)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.annotation.AnnotationProcessor:void processFields(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)"
        ]
    },
    "org.apache.cxf.common.injection.ResourceInjector:void visitMethod(java.lang.reflect.Method,java.lang.'annotation'.Annotation)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.annotation.AnnotationProcessor:void processMethods(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)"
        ]
    },
    "org.apache.cxf.bus.spring.TunedDocumentLoader:org.w3c.dom.Document loadFastinfosetDocument(java.net.URL)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.ControlledValidationXmlBeanDefinitionReader:int fastInfosetLoadBeanDefinitions(org.springframework.core.io.support.EncodedResource)"
        ]
    },
    "org.apache.cxf.databinding.stax.StaxDataBinding$XMLStreamDataWriter:void write(java.lang.Object,javax.xml.stream.XMLStreamWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.stax.StaxDataBinding$XMLStreamDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.databinding.stax.StaxDataBinding$XMLStreamDataWriter:void write(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:void copy(javax.xml.transform.Source,javax.xml.stream.XMLStreamWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.TunedDocumentLoader:org.w3c.dom.Document loadDocument(org.xml.sax.InputSource,org.xml.sax.EntityResolver,org.xml.sax.ErrorHandler,int,boolean)",
            "org.apache.cxf.databinding.source.NodeDataWriter:void write(java.lang.Object,org.w3c.dom.Node)",
            "org.apache.cxf.databinding.source.XMLStreamDataWriter:void write(java.lang.Object,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.feature.transform.XSLTOutInterceptor$XSLTStreamWriter:void close()",
            "org.apache.cxf.interceptor.AbstractLoggingInterceptor:void writePayload(java.lang.StringBuilder,org.apache.cxf.io.CachedOutputStream,java.lang.String,java.lang.String)",
            "org.apache.cxf.interceptor.AbstractLoggingInterceptor:void writePrettyPayload(java.lang.StringBuilder,java.io.StringWriter,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void copy(javax.xml.transform.Source,java.io.OutputStream)",
            "org.apache.cxf.staxutils.StaxUtils:void writeTo(org.w3c.dom.Node,java.io.OutputStream,int)",
            "org.apache.cxf.staxutils.StaxUtils:void writeTo(org.w3c.dom.Node,java.io.Writer,int)",
            "org.apache.cxf.staxutils.StaxUtils:void print(org.w3c.dom.Node)",
            "org.apache.cxf.staxutils.StaxUtils:java.lang.String toString(javax.xml.transform.Source)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:org.w3c.dom.Document copy(org.w3c.dom.Document)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.AbstractDataBinding:org.w3c.dom.Document copy(org.w3c.dom.Document)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:void copy(org.w3c.dom.Document,javax.xml.stream.XMLStreamWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:java.lang.String toString(org.w3c.dom.Document)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:void copy(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser:void mapElementToJaxbProperty(org.apache.aries.blueprint.ParserContext,org.apache.aries.blueprint.mutable.MutableBeanMetadata,org.w3c.dom.Element,java.lang.String,java.lang.Class)",
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void mapElementToJaxbProperty(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder,java.lang.String,java.lang.Class)",
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:org.springframework.beans.factory.support.AbstractBeanDefinition mapElementToJaxbBean(org.w3c.dom.Element,java.lang.Class,java.lang.Class,java.lang.Class,java.lang.String,java.lang.Object[])",
            "org.apache.cxf.configuration.spring.MappingBeanDefinitionParser:org.w3c.dom.Element transformElement(org.w3c.dom.Element)",
            "org.apache.cxf.staxutils.StaxUtils:java.lang.String toString(org.w3c.dom.Element,int)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:javax.xml.validation.Schema createSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.databinding.source.XMLStreamDataWriter:void writeNode(org.w3c.dom.Node,javax.xml.stream.XMLStreamWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.source.XMLStreamDataWriter:void write(java.lang.Object,javax.xml.stream.XMLStreamWriter)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:void writeDocument(org.w3c.dom.Document,javax.xml.stream.XMLStreamWriter,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.source.XMLStreamDataWriter:void writeNode(org.w3c.dom.Node,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeDocument(org.w3c.dom.Document,javax.xml.stream.XMLStreamWriter,boolean)"
        ]
    },
    "org.apache.cxf.databinding.source.XMLStreamDataReader:java.lang.Object read(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.stax.StaxDataBindingInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.staxutils.DepthRestrictingStreamReader:int next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.source.XMLStreamDataReader:javax.xml.transform.dom.DOMSource read(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.staxutils.DepthXMLStreamReader:java.lang.String getElementText()",
            "org.apache.cxf.staxutils.DepthXMLStreamReader:int next()",
            "org.apache.cxf.staxutils.DepthXMLStreamReader:int nextTag()",
            "org.apache.cxf.staxutils.StaxSource:void parse()",
            "org.apache.cxf.staxutils.StaxUtils:void nextEvent(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.staxutils.StaxUtils:boolean toNextText(org.apache.cxf.staxutils.DepthXMLStreamReader)",
            "org.apache.cxf.staxutils.StaxUtils:boolean toNextTag(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.staxutils.StaxUtils:boolean toNextTag(org.apache.cxf.staxutils.DepthXMLStreamReader,javax.xml.namespace.QName)",
            "org.apache.cxf.staxutils.StaxUtils:boolean skipToStartOfElement(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.staxutils.StaxUtils:boolean toNextElement(org.apache.cxf.staxutils.DepthXMLStreamReader)",
            "org.apache.cxf.staxutils.StaxUtils:boolean skipToStartOfElement(org.apache.cxf.staxutils.DepthXMLStreamReader)",
            "org.apache.cxf.staxutils.StaxUtils:void copy(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void readDocElements(org.w3c.dom.Document,org.w3c.dom.Node,javax.xml.stream.XMLStreamReader,boolean,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void readDocElements(org.w3c.dom.Document,org.w3c.dom.Node,javax.xml.stream.XMLStreamReader,org.apache.cxf.staxutils.StaxUtils$StreamToDOMContext)"
        ]
    },
    "org.apache.cxf.staxutils.FragmentStreamReader:int next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.source.XMLStreamDataReader:javax.xml.transform.dom.DOMSource read(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.staxutils.DepthXMLStreamReader:java.lang.String getElementText()",
            "org.apache.cxf.staxutils.DepthXMLStreamReader:int next()",
            "org.apache.cxf.staxutils.DepthXMLStreamReader:int nextTag()",
            "org.apache.cxf.staxutils.StaxSource:void parse()",
            "org.apache.cxf.staxutils.StaxUtils:void nextEvent(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.staxutils.StaxUtils:boolean toNextText(org.apache.cxf.staxutils.DepthXMLStreamReader)",
            "org.apache.cxf.staxutils.StaxUtils:boolean toNextTag(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.staxutils.StaxUtils:boolean toNextTag(org.apache.cxf.staxutils.DepthXMLStreamReader,javax.xml.namespace.QName)",
            "org.apache.cxf.staxutils.StaxUtils:boolean skipToStartOfElement(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.staxutils.StaxUtils:boolean toNextElement(org.apache.cxf.staxutils.DepthXMLStreamReader)",
            "org.apache.cxf.staxutils.StaxUtils:boolean skipToStartOfElement(org.apache.cxf.staxutils.DepthXMLStreamReader)",
            "org.apache.cxf.staxutils.StaxUtils:void copy(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void readDocElements(org.w3c.dom.Document,org.w3c.dom.Node,javax.xml.stream.XMLStreamReader,boolean,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void readDocElements(org.w3c.dom.Document,org.w3c.dom.Node,javax.xml.stream.XMLStreamReader,org.apache.cxf.staxutils.StaxUtils$StreamToDOMContext)"
        ]
    },
    "org.apache.cxf.staxutils.PartialXMLStreamReader:int next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.source.XMLStreamDataReader:javax.xml.transform.dom.DOMSource read(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.staxutils.DepthXMLStreamReader:java.lang.String getElementText()",
            "org.apache.cxf.staxutils.DepthXMLStreamReader:int next()",
            "org.apache.cxf.staxutils.DepthXMLStreamReader:int nextTag()",
            "org.apache.cxf.staxutils.StaxSource:void parse()",
            "org.apache.cxf.staxutils.StaxUtils:void nextEvent(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.staxutils.StaxUtils:boolean toNextText(org.apache.cxf.staxutils.DepthXMLStreamReader)",
            "org.apache.cxf.staxutils.StaxUtils:boolean toNextTag(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.staxutils.StaxUtils:boolean toNextTag(org.apache.cxf.staxutils.DepthXMLStreamReader,javax.xml.namespace.QName)",
            "org.apache.cxf.staxutils.StaxUtils:boolean skipToStartOfElement(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.staxutils.StaxUtils:boolean toNextElement(org.apache.cxf.staxutils.DepthXMLStreamReader)",
            "org.apache.cxf.staxutils.StaxUtils:boolean skipToStartOfElement(org.apache.cxf.staxutils.DepthXMLStreamReader)",
            "org.apache.cxf.staxutils.StaxUtils:void copy(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void readDocElements(org.w3c.dom.Document,org.w3c.dom.Node,javax.xml.stream.XMLStreamReader,boolean,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void readDocElements(org.w3c.dom.Document,org.w3c.dom.Node,javax.xml.stream.XMLStreamReader,org.apache.cxf.staxutils.StaxUtils$StreamToDOMContext)"
        ]
    },
    "org.apache.cxf.staxutils.transform.InTransformReader:void handleDeepDrop()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.transform.InTransformReader:int next()"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:void readDocElements(org.w3c.dom.Node,javax.xml.stream.XMLStreamReader,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.staxutils.StaxUtils:void readDocElements(org.w3c.dom.Document,org.w3c.dom.Node,javax.xml.stream.XMLStreamReader,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:org.w3c.dom.Document read(javax.xml.stream.XMLStreamReader,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void readDocElements(org.w3c.dom.Node,javax.xml.stream.XMLStreamReader,boolean)"
        ]
    },
    "org.apache.cxf.staxutils.transform.InTransformReader:javax.xml.namespace.QName readCurrentElement()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.transform.InTransformReader:java.lang.String getPrefix()"
        ]
    },
    "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeStartElement(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeStartElement(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.PrettyPrintXMLStreamWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElementEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeStartElement(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeStartElement(java.lang.String)",
            "org.apache.cxf.staxutils.PrettyPrintXMLStreamWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamWriter,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElementEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.transform.IgnoreNamespacesWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.transform.IgnoreNamespacesWriter:void writeStartElement(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeAttribute(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeAttribute(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.PrettyPrintXMLStreamWriter:void writeAttribute(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeAttributeEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cxf.staxutils.transform.IgnoreNamespacesWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.transform.IgnoreNamespacesWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void writeAttribute(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.staxutils.PrettyPrintXMLStreamWriter:void writeAttribute(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeAttribute(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.PrettyPrintXMLStreamWriter:void writeAttribute(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeAttributeEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.cxf.interceptor.transform.TransformInInterceptor:javax.xml.stream.XMLStreamReader createTransformReaderIfNeeded(javax.xml.stream.XMLStreamReader,java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.transform.TransformInInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.staxutils.transform.TransformUtils:javax.xml.stream.XMLStreamReader createTransformReaderIfNeeded(javax.xml.stream.XMLStreamReader,java.io.InputStream,java.util.List,java.util.Map,java.util.Map,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.staxutils.validation.StaxSchemaValidationInInterceptor:void setSchemaInMessage(org.apache.cxf.message.Message,javax.xml.stream.XMLStreamReader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.validation.StaxSchemaValidationInInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.staxutils.validation.StaxSchemaValidationOutInterceptor:void setSchemaInMessage(org.apache.cxf.message.Message,javax.xml.stream.XMLStreamWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.validation.StaxSchemaValidationOutInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.validation.BeanValidationProvider:void <init>(javax.validation.ValidationProviderResolver)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:org.apache.cxf.databinding.DataReader getDataReader(org.apache.cxf.message.Message,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:org.apache.cxf.databinding.DataReader getDataReader(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:org.apache.cxf.databinding.DataReader getNodeDataReader(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.common.jaxb.JAXBContextCache$1:java.lang.Object run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.jaxb.JAXBContextCache:org.apache.cxf.common.jaxb.JAXBContextCache$CachedContextAndSchemas getCachedContextAndSchemas(java.util.Set,java.lang.String,java.util.Map,java.util.Collection,boolean)"
        ]
    },
    "org.apache.cxf.common.jaxb.JAXBContextCache$2:java.lang.Object run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.jaxb.JAXBContextCache:javax.xml.bind.JAXBContext createContext(java.util.Set,java.util.Map,java.util.Collection)"
        ]
    },
    "org.apache.cxf.databinding.source.XMLStreamDataReader$2:boolean hasNext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.source.XMLStreamDataReader:javax.xml.transform.dom.DOMSource read(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.staxutils.DepthXMLStreamReader:boolean hasNext()",
            "org.apache.cxf.staxutils.FragmentStreamReader:boolean hasNext()",
            "org.apache.cxf.staxutils.StaxSource:void parse()",
            "org.apache.cxf.staxutils.StaxUtils:boolean toNextText(org.apache.cxf.staxutils.DepthXMLStreamReader)",
            "org.apache.cxf.staxutils.StaxUtils:boolean toNextTag(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.staxutils.StaxUtils:boolean toNextTag(org.apache.cxf.staxutils.DepthXMLStreamReader,javax.xml.namespace.QName)",
            "org.apache.cxf.staxutils.StaxUtils:boolean toNextElement(org.apache.cxf.staxutils.DepthXMLStreamReader)",
            "org.apache.cxf.staxutils.StaxUtils:void copy(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void readDocElements(org.w3c.dom.Document,org.w3c.dom.Node,javax.xml.stream.XMLStreamReader,boolean,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void readDocElements(org.w3c.dom.Document,org.w3c.dom.Node,javax.xml.stream.XMLStreamReader,org.apache.cxf.staxutils.StaxUtils$StreamToDOMContext)"
        ]
    },
    "org.apache.cxf.staxutils.DepthXMLStreamReader:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser$JAXBBeanFactory:java.lang.Object createJAXBBean(java.lang.String)",
            "org.apache.cxf.databinding.source.XMLStreamDataReader$2:void close()",
            "org.apache.cxf.databinding.source.XMLStreamDataWriter:void write(java.lang.Object,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.databinding.stax.StaxDataBinding$XMLStreamDataWriter:void write(java.lang.Object,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.DepthXMLStreamReader:void close()",
            "org.apache.cxf.staxutils.StaxUtils:void copy(javax.xml.transform.Source,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:org.w3c.dom.Document read(javax.xml.transform.Source)",
            "org.apache.cxf.staxutils.StaxUtils:org.w3c.dom.Document read(java.io.InputStream)",
            "org.apache.cxf.staxutils.StaxUtils:org.w3c.dom.Document read(java.io.Reader)",
            "org.apache.cxf.staxutils.StaxUtils:org.w3c.dom.Document read(org.xml.sax.InputSource)",
            "org.apache.cxf.staxutils.StaxUtils:void close(javax.xml.stream.XMLStreamReader)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:org.w3c.dom.Document read(javax.xml.transform.Source)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.source.XMLStreamDataWriter:void write(java.lang.Object,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:void setMetadata(org.apache.cxf.ws.addressing.EndpointReferenceType,java.util.List)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:org.w3c.dom.Document read(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.source.XMLStreamDataWriter:void write(java.lang.Object,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.feature.transform.AbstractXSLTInterceptor:void <init>(java.lang.String,java.lang.Class,java.lang.Class,java.lang.String)",
            "org.apache.cxf.service.factory.AbstractServiceFactoryBean:void fillDataBindingSchemas()",
            "org.apache.cxf.staxutils.StaxUtils:org.w3c.dom.Document read(java.io.File)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:org.w3c.dom.Document read(java.io.Reader)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.staxutils.StaxUtils:org.w3c.dom.Document read(org.xml.sax.InputSource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.staxutils.StaxUtils:void close(javax.xml.stream.XMLStreamReader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.jsse.TLSClientParametersConfig:java.lang.Object createTLSClientParameters(java.lang.String)",
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:java.lang.Object unmarshalFactoryString(java.lang.String,javax.xml.bind.JAXBContext,java.lang.Class)",
            "org.apache.cxf.configuration.spring.JAXBBeanFactory:java.lang.Object createJAXBBean(javax.xml.bind.JAXBContext,java.lang.String,java.lang.Class)",
            "org.apache.cxf.feature.transform.XSLTInInterceptor:void transformXReader(org.apache.cxf.message.Message,javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.interceptor.StaxInEndingInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.helpers.IOUtils:void transferTo(java.io.InputStream,java.io.File)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.DelegatingInputStream:void transferTo(java.io.File)"
        ]
    },
    "org.apache.cxf.io.CachedOutputStream$TransferableFileInputStream:void transferTo(java.io.File)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.IOUtils:void transferTo(java.io.InputStream,java.io.File)"
        ]
    },
    "org.apache.cxf.io.CachedOutputStream:void copyStream(java.io.InputStream,java.io.OutputStream,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.phase.PhaseInterceptorChain:void unwind(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:void wrapExceptionAsFault(org.apache.cxf.message.Message,java.lang.RuntimeException)"
        ]
    },
    "org.apache.cxf.version.Version:java.lang.String getCurrentVersion()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.version.Version:java.lang.String getName()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.version.Version:java.lang.String getCompleteVersionString()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.managers.BindingFactoryManagerImpl:void <init>(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void <init>(java.util.Map,java.util.Map,java.lang.ClassLoader)"
        ]
    },
    "org.apache.cxf.bus.managers.CXFBusLifeCycleManager:void <init>(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.managers.ConduitInitiatorManagerImpl:void <init>(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void <init>(java.util.Map,java.util.Map,java.lang.ClassLoader)"
        ]
    },
    "org.apache.cxf.bus.managers.DestinationFactoryManagerImpl:void <init>(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void <init>(java.util.Map,java.util.Map,java.lang.ClassLoader)"
        ]
    },
    "org.apache.cxf.bus.managers.DestinationFactoryManagerImpl:void <init>(java.util.Map,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.managers.EndpointResolverRegistryImpl:void <init>(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.managers.HeaderManagerImpl:void <init>(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.managers.ServiceContractResolverRegistryImpl:void <init>(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.resource.ResourceManagerImpl:void <init>(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.spring.BusExtensionPostProcessor:java.lang.Object postProcessBeforeInitialization(java.lang.Object,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.spring.SpringBeanLocator:java.lang.Object findBundleContext(org.springframework.context.ApplicationContext,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.SpringBeanLocator:void loadOSGIContext(org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus createBus(java.lang.String[],boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus createBus(java.lang.String[])",
            "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus createBus(java.lang.String,boolean)"
        ]
    },
    "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus createBus(java.net.URL[],boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus createBus(java.net.URL[])",
            "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus createBus(java.net.URL,boolean)"
        ]
    },
    "org.apache.cxf.common.jaxb.JAXBUtils:org.apache.cxf.common.jaxb.JAXBBeanInfo getBeanInfo(org.apache.cxf.common.jaxb.JAXBContextProxy,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.jaxb.JAXBUtils:org.apache.cxf.common.jaxb.JAXBContextProxy createJAXBContextProxy(javax.xml.bind.JAXBContext,org.apache.cxf.common.xmlschema.SchemaCollection,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.jaxb.JAXBUtils:org.apache.cxf.common.jaxb.JAXBContextProxy createJAXBContextProxy(javax.xml.bind.JAXBContext)"
        ]
    },
    "org.apache.cxf.common.logging.Log4jLogger:java.util.logging.Level getLevel()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:boolean isLoggable(java.util.logging.Level)"
        ]
    },
    "org.apache.cxf.common.logging.Log4jLogger:java.util.logging.Level access$000(org.apache.cxf.common.logging.Log4jLogger,org.apache.log4j.Level)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.logging.Log4jLogger$HandlerWrapper:void append(org.apache.log4j.spi.LoggingEvent)"
        ]
    },
    "org.apache.cxf.bus.extension.Extension:java.lang.Object load(java.lang.ClassLoader,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadAndRegister(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.osgi.CXFExtensionBundleListener$OSGiExtension:java.lang.Object load(java.lang.ClassLoader,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.common.logging.JDKBugHacks:boolean skipHack(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.logging.JDKBugHacks:void doHacks()"
        ]
    },
    "org.apache.cxf.common.logging.JDKBugHacks:void doHacks()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.logging.LogUtils:void <clinit>()"
        ]
    },
    "org.apache.cxf.BusFactory:org.apache.cxf.BusFactory newInstance(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.BusFactory:org.apache.cxf.BusFactory newInstance()"
        ]
    },
    "org.apache.cxf.BusFactory:java.lang.String getBusFactoryClass(java.lang.ClassLoader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.BusFactory:org.apache.cxf.BusFactory newInstance(java.lang.String)"
        ]
    },
    "org.apache.cxf.BusFactory:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.BusFactory:org.apache.cxf.Bus getDefaultBus()",
            "org.apache.cxf.BusFactory:org.apache.cxf.Bus getDefaultBus(boolean)",
            "org.apache.cxf.BusFactory:org.apache.cxf.BusFactory$BusHolder getThreadBusHolder(boolean)",
            "org.apache.cxf.BusFactory:void setDefaultBus(org.apache.cxf.Bus)",
            "org.apache.cxf.BusFactory:void setThreadDefaultBus(org.apache.cxf.Bus)",
            "org.apache.cxf.BusFactory:org.apache.cxf.Bus getAndSetThreadDefaultBus(org.apache.cxf.Bus)",
            "org.apache.cxf.BusFactory:org.apache.cxf.Bus getThreadDefaultBus()",
            "org.apache.cxf.BusFactory:org.apache.cxf.Bus getThreadDefaultBus(boolean)",
            "org.apache.cxf.BusFactory:org.apache.cxf.Bus createThreadBus()",
            "org.apache.cxf.BusFactory:void clearDefaultBusForAnyThread(org.apache.cxf.Bus)",
            "org.apache.cxf.BusFactory:boolean possiblySetDefaultBus(org.apache.cxf.Bus)",
            "org.apache.cxf.BusFactory:org.apache.cxf.BusFactory newInstance()",
            "org.apache.cxf.BusFactory:org.apache.cxf.BusFactory newInstance(java.lang.String)",
            "org.apache.cxf.BusFactory:java.lang.String getBusFactoryClass(java.lang.ClassLoader)",
            "org.apache.cxf.BusFactory:void <clinit>()",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void shutdown(boolean)",
            "org.apache.cxf.bus.spring.SpringBusFactory:void <init>(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus finishCreatingBus(org.springframework.context.ConfigurableApplicationContext)",
            "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus createBus(java.lang.String[],boolean)",
            "org.apache.cxf.bus.spring.SpringBusFactory:org.springframework.context.ConfigurableApplicationContext createApplicationContext(java.lang.String[],boolean)",
            "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus createBus(java.net.URL[],boolean)",
            "org.apache.cxf.bus.spring.SpringBusFactory:void <clinit>()",
            "org.apache.cxf.common.util.ClassHelper:java.lang.Class getRealClass(org.apache.cxf.Bus,java.lang.Object)",
            "org.apache.cxf.configuration.jsse.TLSParameterJaxBUtils:java.io.InputStream getResourceAsStream(java.lang.String)",
            "org.apache.cxf.databinding.AbstractDataBinding:org.apache.cxf.Bus getBus()",
            "org.apache.cxf.endpoint.AbstractEndpointFactory:org.apache.cxf.Bus getBus(boolean)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] doInvoke(org.apache.cxf.endpoint.ClientCallback,org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.ClientImpl:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.EndpointImpl:void <init>(org.apache.cxf.Bus,org.apache.cxf.service.Service,org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.io.CachedOutputStream:void readBusProperties()",
            "org.apache.cxf.io.CachedWriter:void readBusProperties()",
            "org.apache.cxf.transport.ChainInitiationObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.MultipleEndpointObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:javax.xml.validation.Schema createSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:java.lang.Class getClassForMetaData(org.osgi.service.blueprint.reflect.ComponentMetadata)",
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:java.util.Collection getBeansOfType(java.lang.Class)",
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)",
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:void <clinit>()",
            "org.apache.cxf.bus.blueprint.BlueprintBus:void setBlueprintContainer(org.osgi.service.blueprint.container.BlueprintContainer)",
            "org.apache.cxf.bus.blueprint.ConfigurerImpl:void initializeWildcardMap()"
        ]
    },
    "org.apache.cxf.bus.blueprint.ConfigurerImpl:java.lang.String getBeanName(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.blueprint.ConfigurerImpl:void configureBean(java.lang.String,java.lang.Object,boolean)"
        ]
    },
    "org.apache.cxf.bus.blueprint.ConfigurerImpl:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.blueprint.BlueprintBus:void setBlueprintContainer(org.osgi.service.blueprint.container.BlueprintContainer)",
            "org.apache.cxf.bus.blueprint.ConfigurerImpl:java.lang.String getBeanName(java.lang.Object)",
            "org.apache.cxf.bus.blueprint.ConfigurerImpl:void <clinit>()"
        ]
    },
    "org.apache.cxf.bus.blueprint.NamespaceHandlerRegisterer:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.blueprint.NamespaceHandlerRegisterer:void register(org.osgi.framework.BundleContext,org.apache.cxf.bus.blueprint.BlueprintNameSpaceHandlerFactory,java.lang.String[])",
            "org.apache.cxf.bus.blueprint.NamespaceHandlerRegisterer:void <clinit>()",
            "org.apache.cxf.bus.osgi.CXFActivator:void start(org.osgi.framework.BundleContext)"
        ]
    },
    "org.apache.cxf.bus.extension.Extension:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.extension.Extension:org.apache.cxf.bus.extension.Extension cloneNoObject()",
            "org.apache.cxf.bus.extension.Extension:java.lang.Class tryClass(java.lang.String,java.lang.ClassLoader)",
            "org.apache.cxf.bus.extension.Extension:java.lang.Object load(java.lang.ClassLoader,org.apache.cxf.Bus)",
            "org.apache.cxf.bus.extension.Extension:void <clinit>()",
            "org.apache.cxf.bus.extension.TextExtensionFragmentParser:org.apache.cxf.bus.extension.Extension getExtensionFromTextLine(java.lang.String)",
            "org.apache.cxf.bus.osgi.CXFActivator:org.apache.cxf.bus.extension.Extension createOsgiBusListenerExtension(org.osgi.framework.BundleContext)",
            "org.apache.cxf.bus.osgi.CXFExtensionBundleListener$OSGiExtension:java.lang.Class tryClass(java.lang.String,java.lang.ClassLoader)"
        ]
    },
    "org.apache.cxf.bus.extension.ExtensionManagerImpl:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void <init>(java.util.Map,java.util.Map,java.lang.ClassLoader)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void <clinit>()"
        ]
    },
    "org.apache.cxf.bus.extension.TextExtensionFragmentParser:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void load(java.lang.String,java.lang.ClassLoader)",
            "org.apache.cxf.bus.extension.TextExtensionFragmentParser:java.util.List getExtensions(java.net.URL)",
            "org.apache.cxf.bus.extension.TextExtensionFragmentParser:org.apache.cxf.bus.extension.Extension getExtensionFromTextLine(java.lang.String)",
            "org.apache.cxf.bus.extension.TextExtensionFragmentParser:void <clinit>()",
            "org.apache.cxf.bus.osgi.CXFExtensionBundleListener:void register(org.osgi.framework.Bundle)"
        ]
    },
    "org.apache.cxf.bus.managers.WorkQueueManagerImpl:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:void shutdown(boolean)",
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:void run()",
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:void addNamedWorkQueue(java.lang.String,org.apache.cxf.workqueue.AutomaticWorkQueue)",
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:void <clinit>()"
        ]
    },
    "org.apache.cxf.bus.osgi.CXFExtensionBundleListener:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.osgi.CXFActivator:void start(org.osgi.framework.BundleContext)",
            "org.apache.cxf.bus.osgi.CXFExtensionBundleListener:boolean addExtensions(org.osgi.framework.Bundle,java.util.List)",
            "org.apache.cxf.bus.osgi.CXFExtensionBundleListener:void unregister(long)",
            "org.apache.cxf.bus.osgi.CXFExtensionBundleListener:void <clinit>()"
        ]
    },
    "org.apache.cxf.bus.osgi.ManagedWorkQueueList:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.osgi.CXFActivator:void start(org.osgi.framework.BundleContext)",
            "org.apache.cxf.bus.osgi.ManagedWorkQueueList:void propertyChange(java.beans.PropertyChangeEvent)",
            "org.apache.cxf.bus.osgi.ManagedWorkQueueList:void <clinit>()"
        ]
    },
    "org.apache.cxf.bus.osgi.OSGiBeanLocator:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.osgi.OSGIBusListener:void registerConfiguredBeanLocator()",
            "org.apache.cxf.bus.osgi.OSGiBeanLocator:java.util.List getBeansFromOsgiService(java.lang.Class)",
            "org.apache.cxf.bus.osgi.OSGiBeanLocator:void <clinit>()"
        ]
    },
    "org.apache.cxf.bus.spring.BusApplicationContext:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.BusApplicationContext:org.springframework.core.io.Resource[] getConfigResources()",
            "org.apache.cxf.bus.spring.BusApplicationContext:void initBeanDefinitionReader(org.springframework.beans.factory.xml.XmlBeanDefinitionReader)",
            "org.apache.cxf.bus.spring.BusApplicationContext:void <clinit>()",
            "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus createBus(java.lang.String[],boolean)",
            "org.apache.cxf.bus.spring.SpringBusFactory:org.springframework.context.ConfigurableApplicationContext createApplicationContext(java.lang.String[],boolean)",
            "org.apache.cxf.bus.spring.SpringBusFactory:org.springframework.context.ConfigurableApplicationContext createAppContext(java.net.URL[],boolean)"
        ]
    },
    "org.apache.cxf.bus.spring.BusEntityResolver:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.BusApplicationContext:void setEntityResolvers(org.springframework.beans.factory.xml.XmlBeanDefinitionReader)",
            "org.apache.cxf.bus.spring.BusEntityResolver:org.xml.sax.InputSource resolveEntity(java.lang.String,java.lang.String)",
            "org.apache.cxf.bus.spring.BusEntityResolver:void <clinit>()"
        ]
    },
    "org.apache.cxf.bus.spring.SpringBeanLocator:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.SpringBeanLocator:void tryOSGI(java.util.Collection,java.lang.Class)",
            "org.apache.cxf.bus.spring.SpringBeanLocator:java.util.List getOSGiServices(java.lang.Class)",
            "org.apache.cxf.bus.spring.SpringBeanLocator:void <clinit>()",
            "org.apache.cxf.bus.spring.SpringBus:void setApplicationContext(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.bus.spring.SpringBusFactory:org.springframework.beans.factory.xml.NamespaceHandlerResolver tryFindNamespaceHandler(org.springframework.context.ApplicationContext)"
        ]
    },
    "org.apache.cxf.bus.spring.SpringBusFactory:org.springframework.context.ConfigurableApplicationContext createApplicationContext(java.lang.String[],boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus createBus(java.lang.String[],boolean)"
        ]
    },
    "org.apache.cxf.bus.spring.SpringBusFactory:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.SpringBusFactory:void <init>(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus finishCreatingBus(org.springframework.context.ConfigurableApplicationContext)",
            "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus createBus(java.lang.String[],boolean)",
            "org.apache.cxf.bus.spring.SpringBusFactory:org.springframework.context.ConfigurableApplicationContext createApplicationContext(java.lang.String[],boolean)",
            "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus createBus(java.net.URL[],boolean)",
            "org.apache.cxf.bus.spring.SpringBusFactory:void <clinit>()"
        ]
    },
    "org.apache.cxf.bus.spring.TunedDocumentLoader:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.ControlledValidationXmlBeanDefinitionReader:void <init>(org.springframework.beans.factory.support.BeanDefinitionRegistry)",
            "org.apache.cxf.bus.spring.ControlledValidationXmlBeanDefinitionReader:int fastInfosetLoadBeanDefinitions(org.springframework.core.io.support.EncodedResource)",
            "org.apache.cxf.bus.spring.TunedDocumentLoader:boolean hasFastInfoSet()",
            "org.apache.cxf.bus.spring.TunedDocumentLoader:void <clinit>()"
        ]
    },
    "org.apache.cxf.catalog.OASISCatalogManager:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.catalog.CatalogXmlSchemaURIResolver:org.xml.sax.InputSource resolveEntity(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.catalog.OASISCatalogManager:void <init>()",
            "org.apache.cxf.catalog.OASISCatalogManager:void <init>(org.apache.cxf.Bus)",
            "org.apache.cxf.catalog.OASISCatalogManager:org.xml.sax.EntityResolver getResolver()",
            "org.apache.cxf.catalog.OASISCatalogManager:void loadContextCatalogs(java.lang.String)",
            "org.apache.cxf.catalog.OASISCatalogManager:void loadCatalogs(java.lang.ClassLoader,java.lang.String)",
            "org.apache.cxf.catalog.OASISCatalogManager:void loadCatalog(java.net.URL)",
            "org.apache.cxf.catalog.OASISCatalogManager:org.apache.cxf.catalog.OASISCatalogManager getContextCatalog()",
            "org.apache.cxf.catalog.OASISCatalogManager:org.apache.cxf.catalog.OASISCatalogManager getCatalogManager(org.apache.cxf.Bus)",
            "org.apache.cxf.catalog.OASISCatalogManager:void <clinit>()"
        ]
    },
    "org.apache.cxf.common.annotation.AnnotationProcessor:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.annotation.AnnotationProcessor:void <init>(java.lang.Object)",
            "org.apache.cxf.common.annotation.AnnotationProcessor:void <clinit>()",
            "org.apache.cxf.common.injection.ResourceInjector:void inject(java.lang.Object,java.lang.Class)"
        ]
    },
    "org.apache.cxf.common.injection.ResourceInjector:void invokeSetter(java.lang.reflect.Method,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.injection.ResourceInjector:void injectResourceClassLevel(javax.'annotation'.Resource)",
            "org.apache.cxf.common.injection.ResourceInjector:void visitMethod(java.lang.reflect.Method,java.lang.'annotation'.Annotation)"
        ]
    },
    "org.apache.cxf.common.injection.ResourceInjector:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadAndRegister(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void destroyBeans()",
            "org.apache.cxf.bus.spring.Jsr250BeanPostProcessor:boolean injectable(java.lang.Object,java.lang.String)",
            "org.apache.cxf.bus.spring.Jsr250BeanPostProcessor:java.lang.Object postProcessAfterInitialization(java.lang.Object,java.lang.String)",
            "org.apache.cxf.bus.spring.Jsr250BeanPostProcessor:java.lang.Object postProcessBeforeInitialization(java.lang.Object,java.lang.String)",
            "org.apache.cxf.bus.spring.Jsr250BeanPostProcessor:void postProcessBeforeDestruction(java.lang.Object,java.lang.String)",
            "org.apache.cxf.common.injection.ResourceInjector:void <init>(org.apache.cxf.resource.ResourceManager,java.util.List)",
            "org.apache.cxf.common.injection.ResourceInjector:java.lang.reflect.Field getField(java.lang.Class,java.lang.String)",
            "org.apache.cxf.common.injection.ResourceInjector:boolean processable(java.lang.Class,java.lang.Object)",
            "org.apache.cxf.common.injection.ResourceInjector:void inject(java.lang.Object,java.lang.Class)",
            "org.apache.cxf.common.injection.ResourceInjector:void construct(java.lang.Object)",
            "org.apache.cxf.common.injection.ResourceInjector:void construct(java.lang.Object,java.lang.Class)",
            "org.apache.cxf.common.injection.ResourceInjector:void destroy(java.lang.Object)",
            "org.apache.cxf.common.injection.ResourceInjector:void visitClass(java.lang.Class,java.lang.'annotation'.Annotation)",
            "org.apache.cxf.common.injection.ResourceInjector:void injectResourceClassLevel(javax.'annotation'.Resource)",
            "org.apache.cxf.common.injection.ResourceInjector:void visitField(java.lang.reflect.Field,java.lang.'annotation'.Annotation)",
            "org.apache.cxf.common.injection.ResourceInjector:void visitMethod(java.lang.reflect.Method,java.lang.'annotation'.Annotation)",
            "org.apache.cxf.common.injection.ResourceInjector:java.lang.reflect.Field findFieldForResource(javax.'annotation'.Resource)",
            "org.apache.cxf.common.injection.ResourceInjector:java.lang.reflect.Method findSetterForResource(javax.'annotation'.Resource)",
            "org.apache.cxf.common.injection.ResourceInjector:void invokeSetter(java.lang.reflect.Method,java.lang.Object)",
            "org.apache.cxf.common.injection.ResourceInjector:java.lang.String getResourceName(javax.'annotation'.Resource,java.lang.reflect.Method)",
            "org.apache.cxf.common.injection.ResourceInjector:void injectField(java.lang.reflect.Field,java.lang.Object)",
            "org.apache.cxf.common.injection.ResourceInjector:void invokePostConstruct()",
            "org.apache.cxf.common.injection.ResourceInjector:void invokePreDestroy()",
            "org.apache.cxf.common.injection.ResourceInjector:java.lang.Class getResourceType(javax.'annotation'.Resource,java.lang.reflect.Field)",
            "org.apache.cxf.common.injection.ResourceInjector:java.lang.String getFieldNameForResource(javax.'annotation'.Resource,java.lang.reflect.Field)",
            "org.apache.cxf.common.injection.ResourceInjector:void <clinit>()",
            "org.apache.cxf.service.invoker.PerRequestFactory:java.lang.Object create(org.apache.cxf.message.Exchange)"
        ]
    },
    "org.apache.cxf.common.logging.LogUtils:void setLoggerClass(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.logging.LogUtils:java.util.logging.Logger getLogger(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.logging.LogUtils:void <clinit>()",
            "org.apache.cxf.interceptor.ClientFaultConverter:void <clinit>()",
            "org.apache.cxf.interceptor.LoggingInInterceptor:void <clinit>()",
            "org.apache.cxf.interceptor.LoggingOutInterceptor:void <clinit>()",
            "org.apache.cxf.resource.URIResolver:void <clinit>()",
            "org.apache.cxf.staxutils.transform.InTransformReader:void <clinit>()"
        ]
    },
    "org.apache.cxf.common.logging.LogUtils:java.util.logging.Logger getLogger(java.lang.Class,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.logging.LogUtils:java.util.logging.Logger getLogger(java.lang.Class,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.logging.LogUtils:java.util.logging.Logger getL7dLogger(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.BusFactory:void <clinit>()",
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:void <clinit>()",
            "org.apache.cxf.bus.blueprint.ConfigurerImpl:void <clinit>()",
            "org.apache.cxf.bus.blueprint.NamespaceHandlerRegisterer:void <clinit>()",
            "org.apache.cxf.bus.extension.Extension:void <clinit>()",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void <clinit>()",
            "org.apache.cxf.bus.extension.TextExtensionFragmentParser:void <clinit>()",
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:void <clinit>()",
            "org.apache.cxf.bus.osgi.CXFExtensionBundleListener:void <clinit>()",
            "org.apache.cxf.bus.osgi.ManagedWorkQueueList:void <clinit>()",
            "org.apache.cxf.bus.osgi.OSGiBeanLocator:void <clinit>()",
            "org.apache.cxf.bus.spring.BusApplicationContext:void <clinit>()",
            "org.apache.cxf.bus.spring.BusEntityResolver:void <clinit>()",
            "org.apache.cxf.bus.spring.SpringBeanLocator:void <clinit>()",
            "org.apache.cxf.bus.spring.SpringBusFactory:void <clinit>()",
            "org.apache.cxf.bus.spring.TunedDocumentLoader:void <clinit>()",
            "org.apache.cxf.catalog.OASISCatalogManager:void <clinit>()",
            "org.apache.cxf.common.annotation.AnnotationProcessor:void <clinit>()",
            "org.apache.cxf.common.injection.ResourceInjector:void <clinit>()",
            "org.apache.cxf.common.jaxb.JAXBUtils:void <clinit>()",
            "org.apache.cxf.common.util.Base64Utility:void <clinit>()",
            "org.apache.cxf.common.util.SystemPropertyAction:void <clinit>()",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:void <clinit>()",
            "org.apache.cxf.configuration.jsse.TLSParameterJaxBUtils:void <clinit>()",
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void <clinit>()",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void <clinit>()",
            "org.apache.cxf.databinding.source.NodeDataReader:void <clinit>()",
            "org.apache.cxf.databinding.source.NodeDataWriter:void <clinit>()",
            "org.apache.cxf.databinding.source.XMLStreamDataReader:void <clinit>()",
            "org.apache.cxf.databinding.source.XMLStreamDataWriter:void <clinit>()",
            "org.apache.cxf.databinding.stax.StaxDataBinding$XMLStreamDataWriter:void <clinit>()",
            "org.apache.cxf.databinding.stax.StaxDataBindingInterceptor:void <clinit>()",
            "org.apache.cxf.endpoint.AbstractEndpointFactory:void <clinit>()",
            "org.apache.cxf.endpoint.ClientImpl:void <clinit>()",
            "org.apache.cxf.endpoint.DeferredConduitSelector:void <clinit>()",
            "org.apache.cxf.endpoint.EndpointImpl:void <clinit>()",
            "org.apache.cxf.endpoint.ServerImpl:void <clinit>()",
            "org.apache.cxf.endpoint.UpfrontConduitSelector:void <clinit>()",
            "org.apache.cxf.feature.transform.XSLTInInterceptor:void <clinit>()",
            "org.apache.cxf.feature.transform.XSLTOutInterceptor:void <clinit>()",
            "org.apache.cxf.feature.transform.XSLTUtils:void <clinit>()",
            "org.apache.cxf.helpers.FileUtils:java.io.File createTmpDir(boolean)",
            "org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver:void <clinit>()",
            "org.apache.cxf.interceptor.AttachmentInInterceptor:void <clinit>()",
            "org.apache.cxf.interceptor.FIStaxOutInterceptor:void <clinit>()",
            "org.apache.cxf.interceptor.FaultOutInterceptor:void <clinit>()",
            "org.apache.cxf.interceptor.OneWayProcessorInterceptor:void <clinit>()",
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:void <clinit>()",
            "org.apache.cxf.interceptor.StaxInInterceptor:void <clinit>()",
            "org.apache.cxf.interceptor.security.AbstractAuthorizingInInterceptor:void <clinit>()",
            "org.apache.cxf.interceptor.security.AbstractSecurityContextInInterceptor:void <clinit>()",
            "org.apache.cxf.interceptor.security.JAASLoginInterceptor:void <clinit>()",
            "org.apache.cxf.interceptor.security.NameDigestPasswordCallbackHandler:void <clinit>()",
            "org.apache.cxf.interceptor.security.NamePasswordCallbackHandler:void <clinit>()",
            "org.apache.cxf.interceptor.security.OperationInfoAuthorizingInterceptor:void <clinit>()",
            "org.apache.cxf.interceptor.security.SecureAnnotationsInterceptor:void <clinit>()",
            "org.apache.cxf.phase.PhaseInterceptorChain:void <clinit>()",
            "org.apache.cxf.resource.DefaultResourceManager:void <clinit>()",
            "org.apache.cxf.service.factory.AbstractServiceFactoryBean:void <clinit>()",
            "org.apache.cxf.service.invoker.AbstractInvoker:void <clinit>()",
            "org.apache.cxf.service.model.BindingInfo:void <clinit>()",
            "org.apache.cxf.service.model.InterfaceInfo:void <clinit>()",
            "org.apache.cxf.service.model.OperationInfo:void <clinit>()",
            "org.apache.cxf.staxutils.StaxUtils:void <clinit>()",
            "org.apache.cxf.staxutils.validation.ResolvingGrammarReaderController:void <clinit>()",
            "org.apache.cxf.staxutils.validation.Stax2ValidationUtils:void <clinit>()",
            "org.apache.cxf.staxutils.validation.StaxSchemaValidationInInterceptor:void <clinit>()",
            "org.apache.cxf.staxutils.validation.StaxSchemaValidationOutInterceptor:void <clinit>()",
            "org.apache.cxf.staxutils.validation.WoodstoxValidationImpl:void <clinit>()",
            "org.apache.cxf.transport.common.gzip.GZIPInInterceptor:void <clinit>()",
            "org.apache.cxf.transport.common.gzip.GZIPOutInterceptor:void <clinit>()",
            "org.apache.cxf.validation.AbstractValidationInterceptor:void <clinit>()",
            "org.apache.cxf.validation.BeanValidationProvider:void <clinit>()",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void <clinit>()",
            "org.apache.cxf.ws.addressing.ContextUtils:void <clinit>()",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:void <clinit>()"
        ]
    },
    "org.apache.cxf.common.logging.LogUtils:java.util.logging.Logger getL7dLogger(java.lang.Class,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.logging.LogUtils:java.util.logging.Logger getL7dLogger(java.lang.Class,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.AbstractLoggingInterceptor:java.util.logging.Logger getMessageLogger(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.common.logging.LogUtils:java.util.logging.Logger createLogger(java.lang.Class,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.logging.LogUtils:java.util.logging.Logger getLogger(java.lang.Class)",
            "org.apache.cxf.common.logging.LogUtils:java.util.logging.Logger getLogger(java.lang.Class,java.lang.String)",
            "org.apache.cxf.common.logging.LogUtils:java.util.logging.Logger getLogger(java.lang.Class,java.lang.String,java.lang.String)",
            "org.apache.cxf.common.logging.LogUtils:java.util.logging.Logger getL7dLogger(java.lang.Class)",
            "org.apache.cxf.common.logging.LogUtils:java.util.logging.Logger getL7dLogger(java.lang.Class,java.lang.String)",
            "org.apache.cxf.common.logging.LogUtils:java.util.logging.Logger getL7dLogger(java.lang.Class,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.common.logging.LogUtils:void log(java.util.logging.Logger,java.util.logging.Level,java.lang.String,java.lang.Throwable,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.injection.ResourceInjector:void invokeSetter(java.lang.reflect.Method,java.lang.Object)",
            "org.apache.cxf.interceptor.ClientFaultConverter:void processFaultDetail(org.apache.cxf.interceptor.Fault,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.common.logging.LogUtils:void log(java.util.logging.Logger,java.util.logging.Level,java.lang.String,java.lang.Throwable,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus createBus(java.lang.String[],boolean)",
            "org.apache.cxf.bus.spring.SpringBusFactory:org.springframework.context.ConfigurableApplicationContext createApplicationContext(java.lang.String[],boolean)",
            "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus createBus(java.net.URL[],boolean)",
            "org.apache.cxf.common.logging.LogUtils:void log(java.util.logging.Logger,java.util.logging.Level,java.lang.String,java.lang.Throwable)"
        ]
    },
    "org.apache.cxf.common.logging.LogUtils:void log(java.util.logging.Logger,java.util.logging.Level,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.jsse.SSLUtils:javax.net.ssl.KeyManager[] getKeyStoreManagers(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String getKeystorePassword(java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String getKeyPassword(java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String[] getCiphersuitesToInclude(java.util.List,org.apache.cxf.configuration.security.FiltersType,java.lang.String[],java.lang.String[],java.util.logging.Logger)",
            "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String getSecureSocketProtocol(java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.configuration.jsse.SSLUtils:boolean getRequireClientAuthentication(boolean,java.lang.Boolean,java.util.logging.Logger)",
            "org.apache.cxf.configuration.jsse.SSLUtils:boolean getWantClientAuthentication(boolean,java.lang.Boolean,java.util.logging.Logger)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void doDefaultLogging(org.apache.cxf.message.Message,java.lang.Exception,java.lang.String)",
            "org.apache.cxf.ws.addressing.ContextUtils:org.apache.cxf.ws.addressing.AddressingProperties retrieveMAPs(org.apache.cxf.message.Message,boolean,boolean,boolean)"
        ]
    },
    "org.apache.cxf.common.logging.LogUtils:void log(java.util.logging.Logger,java.util.logging.Level,java.lang.String,java.lang.Throwable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.BusFactory:org.apache.cxf.BusFactory newInstance(java.lang.String)",
            "org.apache.cxf.BusFactory:java.lang.String getBusFactoryClass(java.lang.ClassLoader)",
            "org.apache.cxf.bus.blueprint.ConfigurerImpl:java.lang.String getBeanName(java.lang.Object)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:java.lang.String getBeanName(java.lang.Object)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void doDefaultLogging(org.apache.cxf.message.Message,java.lang.Exception,java.lang.String)"
        ]
    },
    "org.apache.cxf.common.logging.LogUtils:void log(java.util.logging.Logger,java.util.logging.Level,java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.blueprint.ConfigurerImpl:java.lang.String getBeanName(java.lang.Object)",
            "org.apache.cxf.bus.spring.BusApplicationContext:org.springframework.core.io.Resource[] getConfigResources()",
            "org.apache.cxf.configuration.jsse.SSLUtils:javax.net.ssl.KeyManager[] getKeyStoreManagers(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.configuration.jsse.SSLUtils:javax.net.ssl.KeyManager[] loadKeyStore(javax.net.ssl.KeyManagerFactory,java.security.KeyStore,java.io.ByteArrayInputStream,java.lang.String,java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.configuration.jsse.SSLUtils:javax.net.ssl.TrustManager[] getTrustStoreManagers(boolean,java.lang.String,java.lang.String,java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String getKeystore(java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String getKeystoreType(java.lang.String,java.util.logging.Logger,java.lang.String)",
            "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String getKeystoreProvider(java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String getKeystoreAlgorithm(java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String getTrustStoreAlgorithm(java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String[] getCiphersuitesToInclude(java.util.List,org.apache.cxf.configuration.security.FiltersType,java.lang.String[],java.lang.String[],java.util.logging.Logger)",
            "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String[] getFilteredCiphersuites(org.apache.cxf.configuration.security.FiltersType,java.lang.String[],java.util.logging.Logger,boolean)",
            "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String[] getSystemCiphersuites(java.util.logging.Logger)",
            "org.apache.cxf.configuration.jsse.SSLUtils:java.util.List compileRegexPatterns(java.util.List,boolean,java.util.logging.Logger)",
            "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String[] getCiphersFromList(java.util.List,java.util.logging.Logger,boolean)",
            "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String getTrustStore(java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String getTrustStoreType(java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String getSecureSocketProtocol(java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.configuration.jsse.SSLUtils:boolean getRequireClientAuthentication(boolean,java.lang.Boolean,java.util.logging.Logger)",
            "org.apache.cxf.configuration.jsse.SSLUtils:boolean getWantClientAuthentication(boolean,java.lang.Boolean,java.util.logging.Logger)",
            "org.apache.cxf.configuration.jsse.SSLUtils:void logUnSupportedPolicy(boolean,boolean,java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void initWildcardDefinitionMap()",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:java.lang.String getBeanName(java.lang.Object)",
            "org.apache.cxf.endpoint.ClientImpl:void waitResponse(org.apache.cxf.message.Exchange)"
        ]
    },
    "org.apache.cxf.common.logging.LogUtils:void log(java.util.logging.Logger,java.util.logging.Level,java.lang.String,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.logging.LogUtils:void log(java.util.logging.Logger,java.util.logging.Level,java.lang.String)",
            "org.apache.cxf.common.logging.LogUtils:void log(java.util.logging.Logger,java.util.logging.Level,java.lang.String,java.lang.Object)",
            "org.apache.cxf.configuration.jsse.SSLUtils:javax.net.ssl.KeyManager[] loadKeyStore(javax.net.ssl.KeyManagerFactory,java.security.KeyStore,java.io.ByteArrayInputStream,java.lang.String,java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.configuration.jsse.SSLUtils:javax.net.ssl.TrustManager[] getTrustStoreManagers(boolean,java.lang.String,java.lang.String,java.lang.String,java.util.logging.Logger)"
        ]
    },
    "org.apache.cxf.common.util.Base64Utility:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.AttachmentSerializer:int encodeBase64(java.io.InputStream,java.io.OutputStream,int)",
            "org.apache.cxf.attachment.Base64DecoderStream:boolean decodeStreamData()",
            "org.apache.cxf.attachment.Base64DecoderStream:int fillEncodedBuffer()",
            "org.apache.cxf.common.util.Base64OutputStream:void encodeAndWrite(byte[],int,int,boolean)",
            "org.apache.cxf.common.util.Base64OutputStream:void flush()",
            "org.apache.cxf.common.util.Base64UrlUtility:byte[] decode(java.lang.String)",
            "org.apache.cxf.common.util.Base64UrlUtility:java.lang.String encodeChunk(byte[],int,int)",
            "org.apache.cxf.common.util.Base64UrlUtility:void encodeAndStream(byte[],int,int,java.io.OutputStream)",
            "org.apache.cxf.common.util.Base64Utility:byte[] decodeChunk(char[],int,int)",
            "org.apache.cxf.common.util.Base64Utility:byte[] decode(java.lang.String)",
            "org.apache.cxf.common.util.Base64Utility:byte[] decode(java.lang.String,boolean)",
            "org.apache.cxf.common.util.Base64Utility:void decode(char[],int,int,java.io.OutputStream)",
            "org.apache.cxf.common.util.Base64Utility:void decode(java.lang.String,java.io.OutputStream)",
            "org.apache.cxf.common.util.Base64Utility:java.lang.String encode(byte[])",
            "org.apache.cxf.common.util.Base64Utility:java.lang.String encode(byte[],boolean)",
            "org.apache.cxf.common.util.Base64Utility:char[] encodeChunk(byte[],int,int)",
            "org.apache.cxf.common.util.Base64Utility:char[] encodeChunk(byte[],int,int,boolean)",
            "org.apache.cxf.common.util.Base64Utility:void encodeAndStream(byte[],int,int,java.io.OutputStream)",
            "org.apache.cxf.common.util.Base64Utility:void encodeAndStream(byte[],int,int,boolean,java.io.OutputStream)",
            "org.apache.cxf.common.util.Base64Utility:void encodeChunk(byte[],int,int,java.io.OutputStream)",
            "org.apache.cxf.common.util.Base64Utility:void encode(byte[],int,int,java.io.Writer)",
            "org.apache.cxf.common.util.Base64Utility:int processEncodeme(char[],byte[],int)",
            "org.apache.cxf.common.util.Base64Utility:boolean isValidBase64(int)",
            "org.apache.cxf.common.util.Base64Utility:void <clinit>()",
            "org.apache.cxf.common.util.MessageDigestInputStream:java.lang.String getBase64Digest()",
            "org.apache.cxf.resource.URIResolver:void tryFileSystem(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.common.util.SystemPropertyAction:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.BusFactory:java.lang.String getBusFactoryClass(java.lang.ClassLoader)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:java.lang.String getBusId(java.util.Map)",
            "org.apache.cxf.bus.spring.BusApplicationContext$5:java.lang.String run()",
            "org.apache.cxf.bus.spring.BusApplicationContext:org.springframework.core.io.Resource[] getConfigResources()",
            "org.apache.cxf.bus.spring.ControlledValidationXmlBeanDefinitionReader:void <init>(org.springframework.beans.factory.support.BeanDefinitionRegistry)",
            "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus createBus(java.lang.String[],boolean)",
            "org.apache.cxf.catalog.OASISCatalogManager:void <clinit>()",
            "org.apache.cxf.common.jaxb.JAXBUtils:java.lang.ClassLoader getXJCClassLoader()",
            "org.apache.cxf.common.util.ClassHelper:org.apache.cxf.common.util.ClassHelper getClassHelper()",
            "org.apache.cxf.common.util.ClasspathScanner:org.apache.cxf.common.util.ClasspathScanner getClasspathScanner()",
            "org.apache.cxf.common.util.Compiler:void addArgs(java.util.List)",
            "org.apache.cxf.common.util.Compiler:boolean compileFiles(java.lang.String[])",
            "org.apache.cxf.common.util.Compiler:boolean internalCompile(java.lang.String[],int)",
            "org.apache.cxf.common.util.SystemPropertyAction:java.lang.String getProperty(java.lang.String)",
            "org.apache.cxf.common.util.SystemPropertyAction:java.lang.String getProperty(java.lang.String,java.lang.String)",
            "org.apache.cxf.common.util.SystemPropertyAction:java.lang.String getPropertyOrNull(java.lang.String)",
            "org.apache.cxf.common.util.SystemPropertyAction:void <clinit>()",
            "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String getKeystore(java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String getKeystoreType(java.lang.String,java.util.logging.Logger,java.lang.String)",
            "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String getKeystoreProvider(java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String getKeystorePassword(java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String getKeyPassword(java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String getTrustStore(java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String getTrustStoreType(java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.helpers.FileUtils:java.io.File getDefaultTempDir()",
            "org.apache.cxf.helpers.FileUtils:java.io.File createTmpDir(boolean)",
            "org.apache.cxf.helpers.FileUtils:boolean isWindows()",
            "org.apache.cxf.io.CachedOutputStream:void setDefaultThreshold(int)",
            "org.apache.cxf.io.CachedOutputStream:void setDefaultCipherTransformation(java.lang.String)",
            "org.apache.cxf.io.CachedOutputStream:void <clinit>()",
            "org.apache.cxf.io.CachedWriter:void setDefaultThreshold(int)",
            "org.apache.cxf.io.CachedWriter:void setDefaultCipherTransformation(java.lang.String)",
            "org.apache.cxf.io.CachedWriter:void <clinit>()",
            "org.apache.cxf.resource.URIResolver:void tryFileSystem(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:int getInteger(java.lang.String,int)",
            "org.apache.cxf.staxutils.StaxUtils:long getLong(java.lang.String,long)",
            "org.apache.cxf.staxutils.StaxUtils:void <clinit>()"
        ]
    },
    "org.apache.cxf.common.xmlschema.XmlSchemaUtils:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addOneSchemaCrossImports(org.apache.ws.commons.schema.XmlSchema)",
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addElementCrossImportsElement(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaElement)",
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addCrossImportsType(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaType)",
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addCrossImportsAttributeList(org.apache.ws.commons.schema.XmlSchema,java.util.List)",
            "org.apache.cxf.common.xmlschema.SchemaCollection:void addCrossImports(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaContentModel)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:void setElementRefName(org.apache.ws.commons.schema.XmlSchemaElement,javax.xml.namespace.QName)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:void addImportIfNeeded(org.apache.ws.commons.schema.XmlSchema,javax.xml.namespace.QName)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:org.apache.ws.commons.schema.XmlSchemaElement findElementByRefName(org.apache.cxf.common.xmlschema.SchemaCollection,javax.xml.namespace.QName,java.lang.String)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:java.util.List getContentAttributes(org.apache.ws.commons.schema.XmlSchemaComplexType,org.apache.cxf.common.xmlschema.SchemaCollection)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:boolean isAttributeQualified(org.apache.ws.commons.schema.XmlSchemaAttribute,boolean,org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchema)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:boolean isElementQualified(org.apache.ws.commons.schema.XmlSchemaElement,boolean,org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchema)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:void <clinit>()"
        ]
    },
    "org.apache.cxf.configuration.jsse.SSLUtils:javax.net.ssl.KeyManager[] getKeyStoreManagers(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.logging.Logger)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.configuration.jsse.SSLUtils:javax.net.ssl.KeyManager[] loadKeyStore(javax.net.ssl.KeyManagerFactory,java.security.KeyStore,java.io.ByteArrayInputStream,java.lang.String,java.lang.String,java.util.logging.Logger)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.jsse.SSLUtils:javax.net.ssl.KeyManager[] getKeyStoreManagers(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.logging.Logger)"
        ]
    },
    "org.apache.cxf.configuration.jsse.SSLUtils:javax.net.ssl.TrustManager[] getTrustStoreManagers(boolean,java.lang.String,java.lang.String,java.lang.String,java.util.logging.Logger)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String getKeystore(java.lang.String,java.util.logging.Logger)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.jsse.SSLUtils:void loadDefaultKeyManagers(java.util.logging.Logger)",
            "org.apache.cxf.configuration.jsse.TLSParameterJaxBUtils:java.security.KeyStore getKeyStore(org.apache.cxf.configuration.security.KeyStoreType)"
        ]
    },
    "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String getKeystoreType(java.lang.String,java.util.logging.Logger,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String getKeystoreType(java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.configuration.jsse.TLSParameterJaxBUtils:java.security.KeyStore getKeyStore(org.apache.cxf.configuration.security.KeyStoreType)"
        ]
    },
    "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String getKeystoreProvider(java.lang.String,java.util.logging.Logger)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.jsse.TLSParameterJaxBUtils:java.security.KeyStore getKeyStore(org.apache.cxf.configuration.security.KeyStoreType)"
        ]
    },
    "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String getKeystorePassword(java.lang.String,java.util.logging.Logger)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.jsse.SSLUtils:void loadDefaultKeyManagers(java.util.logging.Logger)",
            "org.apache.cxf.configuration.jsse.TLSParameterJaxBUtils:java.security.KeyStore getKeyStore(org.apache.cxf.configuration.security.KeyStoreType)"
        ]
    },
    "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String getKeyPassword(java.lang.String,java.util.logging.Logger)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.jsse.SSLUtils:void loadDefaultKeyManagers(java.util.logging.Logger)"
        ]
    },
    "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String getKeystoreAlgorithm(java.lang.String,java.util.logging.Logger)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String getTrustStoreAlgorithm(java.lang.String,java.util.logging.Logger)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String[] getSystemCiphersuites(java.util.logging.Logger)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String[] getCiphersuitesToInclude(java.util.List,org.apache.cxf.configuration.security.FiltersType,java.lang.String[],java.lang.String[],java.util.logging.Logger)"
        ]
    },
    "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String[] getCiphersFromList(java.util.List,java.util.logging.Logger,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String[] getCiphersuitesToInclude(java.util.List,org.apache.cxf.configuration.security.FiltersType,java.lang.String[],java.lang.String[],java.util.logging.Logger)",
            "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String[] getFilteredCiphersuites(org.apache.cxf.configuration.security.FiltersType,java.lang.String[],java.util.logging.Logger,boolean)"
        ]
    },
    "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String getTrustStore(java.lang.String,java.util.logging.Logger)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String getTrustStoreType(java.lang.String,java.util.logging.Logger)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String getSecureSocketProtocol(java.lang.String,java.util.logging.Logger)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.configuration.jsse.SSLUtils:boolean getRequireClientAuthentication(boolean,java.lang.Boolean,java.util.logging.Logger)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.configuration.jsse.SSLUtils:boolean getWantClientAuthentication(boolean,java.lang.Boolean,java.util.logging.Logger)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.configuration.jsse.SSLUtils:void logUnSupportedPolicy(boolean,boolean,java.lang.String,java.util.logging.Logger)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.jsse.SSLUtils:void logUnSupportedPolicies(java.lang.Object,boolean,java.lang.String[],java.util.logging.Logger)"
        ]
    },
    "org.apache.cxf.configuration.jsse.TLSParameterJaxBUtils:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.jsse.TLSClientParametersConfig:org.apache.cxf.configuration.jsse.TLSClientParameters createTLSClientParametersFromType(org.apache.cxf.configuration.security.TLSClientParametersType)",
            "org.apache.cxf.configuration.jsse.TLSParameterJaxBUtils:java.security.KeyStore getKeyStore(org.apache.cxf.configuration.security.KeyStoreType)",
            "org.apache.cxf.configuration.jsse.TLSParameterJaxBUtils:java.security.KeyStore getKeyStore(org.apache.cxf.configuration.security.CertStoreType)",
            "org.apache.cxf.configuration.jsse.TLSParameterJaxBUtils:java.security.KeyStore createTrustStore(java.io.InputStream,java.lang.String)",
            "org.apache.cxf.configuration.jsse.TLSParameterJaxBUtils:javax.net.ssl.KeyManager[] getKeyManagers(org.apache.cxf.configuration.security.KeyManagersType)",
            "org.apache.cxf.configuration.jsse.TLSParameterJaxBUtils:char[] getKeyPassword(org.apache.cxf.configuration.security.KeyManagersType)",
            "org.apache.cxf.configuration.jsse.TLSParameterJaxBUtils:javax.net.ssl.TrustManager[] getTrustManagers(org.apache.cxf.configuration.security.TrustManagersType)",
            "org.apache.cxf.configuration.jsse.TLSParameterJaxBUtils:void <clinit>()",
            "org.apache.cxf.configuration.jsse.TLSServerParametersConfig:void <init>(org.apache.cxf.configuration.security.TLSServerParametersType)"
        ]
    },
    "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.BusDefinitionParser:void doParse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder)",
            "org.apache.cxf.bus.spring.BusDefinitionParser:java.lang.String resolveId(org.w3c.dom.Element,org.springframework.beans.factory.support.AbstractBeanDefinition,org.springframework.beans.factory.xml.ParserContext)",
            "org.apache.cxf.bus.spring.BusDefinitionParser:void <clinit>()",
            "org.apache.cxf.bus.spring.BusWiringBeanFactoryPostProcessor:void postProcessBeanFactory(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)",
            "org.apache.cxf.bus.spring.NamespaceHandler:void init()",
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void addBusWiringAttribute(org.springframework.beans.factory.support.BeanDefinitionBuilder,org.apache.cxf.configuration.spring.BusWiringType,java.lang.String,org.springframework.beans.factory.xml.ParserContext)",
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void <clinit>()",
            "org.apache.cxf.configuration.spring.AbstractFactoryBeanDefinitionParser:void setFactoriesAreAbstract(boolean)",
            "org.apache.cxf.configuration.spring.AbstractFactoryBeanDefinitionParser:void doParse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder)",
            "org.apache.cxf.configuration.spring.AbstractFactoryBeanDefinitionParser:void <clinit>()"
        ]
    },
    "org.apache.cxf.configuration.spring.ConfigurerImpl:java.lang.String getBeanName(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureBean(java.lang.String,java.lang.Object,boolean)"
        ]
    },
    "org.apache.cxf.configuration.spring.ConfigurerImpl:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.SpringBus:void setApplicationContext(org.springframework.context.ApplicationContext)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void initWildcardDefinitionMap()",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureBean(java.lang.String,java.lang.Object,boolean)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:java.lang.String getBeanName(java.lang.Object)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void <clinit>()"
        ]
    },
    "org.apache.cxf.databinding.source.NodeDataReader:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.source.NodeDataReader:java.lang.Object read(javax.xml.namespace.QName,org.w3c.dom.Node,java.lang.Class)",
            "org.apache.cxf.databinding.source.NodeDataReader:void <clinit>()",
            "org.apache.cxf.databinding.source.SourceDataBinding:org.apache.cxf.databinding.DataReader createReader(java.lang.Class)"
        ]
    },
    "org.apache.cxf.databinding.source.NodeDataWriter:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.source.NodeDataWriter:void write(java.lang.Object,org.w3c.dom.Node)",
            "org.apache.cxf.databinding.source.NodeDataWriter:void <clinit>()",
            "org.apache.cxf.databinding.source.SourceDataBinding:org.apache.cxf.databinding.DataWriter createWriter(java.lang.Class)"
        ]
    },
    "org.apache.cxf.databinding.source.XMLStreamDataReader:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.source.SourceDataBinding:org.apache.cxf.databinding.DataReader createReader(java.lang.Class)",
            "org.apache.cxf.databinding.source.XMLStreamDataReader:java.lang.Object read(javax.xml.namespace.QName,javax.xml.stream.XMLStreamReader,java.lang.Class)",
            "org.apache.cxf.databinding.source.XMLStreamDataReader:org.w3c.dom.Element validate(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.databinding.source.XMLStreamDataReader:javax.xml.transform.dom.DOMSource read(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.databinding.source.XMLStreamDataReader:void <clinit>()"
        ]
    },
    "org.apache.cxf.databinding.source.XMLStreamDataWriter:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.source.SourceDataBinding:org.apache.cxf.databinding.DataWriter createWriter(java.lang.Class)",
            "org.apache.cxf.databinding.source.XMLStreamDataWriter:void write(java.lang.Object,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.databinding.source.XMLStreamDataWriter:void <clinit>()"
        ]
    },
    "org.apache.cxf.databinding.stax.StaxDataBinding$XMLStreamDataWriter:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.stax.StaxDataBinding$XMLStreamDataWriter:void write(java.lang.Object,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.databinding.stax.StaxDataBinding$XMLStreamDataWriter:void <clinit>()",
            "org.apache.cxf.databinding.stax.StaxDataBinding:void <init>()"
        ]
    },
    "org.apache.cxf.databinding.stax.StaxDataBindingInterceptor:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.stax.StaxDataBindingFeature:void removeDatabindingInterceptor(java.util.List)",
            "org.apache.cxf.databinding.stax.StaxDataBindingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.databinding.stax.StaxDataBindingInterceptor:void <clinit>()"
        ]
    },
    "org.apache.cxf.endpoint.AbstractEndpointFactory:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.AbstractEndpointFactory:void initializeAnnotationInterceptors(org.apache.cxf.endpoint.Endpoint,java.lang.Class[])",
            "org.apache.cxf.endpoint.AbstractEndpointFactory:void addToBeans(java.util.Collection,java.lang.Object)",
            "org.apache.cxf.endpoint.AbstractEndpointFactory:void <clinit>()"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl$1:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(javax.xml.namespace.QName,java.lang.Object[])",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invokeWrapped(javax.xml.namespace.QName,java.lang.Object[])",
            "org.apache.cxf.endpoint.ClientImpl:void invoke(org.apache.cxf.endpoint.ClientCallback,javax.xml.namespace.QName,java.lang.Object[])",
            "org.apache.cxf.endpoint.ClientImpl:void invokeWrapped(org.apache.cxf.endpoint.ClientCallback,javax.xml.namespace.QName,java.lang.Object[])",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] doInvoke(org.apache.cxf.endpoint.ClientCallback,org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.ClientImpl:void setContext(java.util.Map,org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ClientImpl:void waitResponse(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.ClientImpl:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ClientImpl:org.apache.cxf.phase.PhaseInterceptorChain setupInterceptorChain(org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.endpoint.ClientImpl:void <clinit>()"
        ]
    },
    "org.apache.cxf.endpoint.DeferredConduitSelector:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.DeferredConduitSelector:java.util.logging.Logger getLogger()",
            "org.apache.cxf.endpoint.DeferredConduitSelector:void <clinit>()"
        ]
    },
    "org.apache.cxf.endpoint.EndpointImpl:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:void <init>(org.apache.cxf.Bus,org.apache.cxf.service.Service,javax.xml.namespace.QName,org.apache.cxf.endpoint.EndpointImplFactory)",
            "org.apache.cxf.endpoint.EndpointImpl:void createBinding(org.apache.cxf.service.model.BindingInfo)",
            "org.apache.cxf.endpoint.EndpointImpl:void <clinit>()",
            "org.apache.cxf.endpoint.SimpleEndpointImplFactory:org.apache.cxf.endpoint.EndpointImpl newEndpointImpl(org.apache.cxf.Bus,org.apache.cxf.service.Service,org.apache.cxf.service.model.EndpointInfo)"
        ]
    },
    "org.apache.cxf.endpoint.ServerImpl:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ServerImpl:void initDestination(org.apache.cxf.transport.DestinationFactory)",
            "org.apache.cxf.endpoint.ServerImpl:void start()",
            "org.apache.cxf.endpoint.ServerImpl:void stop()",
            "org.apache.cxf.endpoint.ServerImpl:void destroy()",
            "org.apache.cxf.endpoint.ServerImpl:void <clinit>()"
        ]
    },
    "org.apache.cxf.endpoint.UpfrontConduitSelector:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:void setConduitSelector(org.apache.cxf.endpoint.ConduitSelector)",
            "org.apache.cxf.endpoint.UpfrontConduitSelector:java.util.logging.Logger getLogger()",
            "org.apache.cxf.endpoint.UpfrontConduitSelector:void <clinit>()"
        ]
    },
    "org.apache.cxf.feature.transform.XSLTInInterceptor:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.feature.transform.XSLTFeature:void initializeProvider(org.apache.cxf.interceptor.InterceptorProvider,org.apache.cxf.Bus)",
            "org.apache.cxf.feature.transform.XSLTInInterceptor:void transformXReader(org.apache.cxf.message.Message,javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.feature.transform.XSLTInInterceptor:void transformIS(org.apache.cxf.message.Message,java.io.InputStream)",
            "org.apache.cxf.feature.transform.XSLTInInterceptor:void transformReader(org.apache.cxf.message.Message,java.io.Reader)",
            "org.apache.cxf.feature.transform.XSLTInInterceptor:void <clinit>()"
        ]
    },
    "org.apache.cxf.feature.transform.XSLTOutInterceptor:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.feature.transform.XSLTFeature:void initializeProvider(org.apache.cxf.interceptor.InterceptorProvider,org.apache.cxf.Bus)",
            "org.apache.cxf.feature.transform.XSLTOutInterceptor$XSLTCachedOutputStreamCallback:void onClose(org.apache.cxf.io.CachedOutputStream)",
            "org.apache.cxf.feature.transform.XSLTOutInterceptor$XSLTCachedWriter:void doClose()",
            "org.apache.cxf.feature.transform.XSLTOutInterceptor$XSLTStreamWriter:void close()",
            "org.apache.cxf.feature.transform.XSLTOutInterceptor:java.util.logging.Logger access$000()",
            "org.apache.cxf.feature.transform.XSLTOutInterceptor:void <clinit>()"
        ]
    },
    "org.apache.cxf.feature.transform.XSLTUtils:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.feature.transform.XSLTInInterceptor:void transformXReader(org.apache.cxf.message.Message,javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.feature.transform.XSLTInInterceptor:void transformIS(org.apache.cxf.message.Message,java.io.InputStream)",
            "org.apache.cxf.feature.transform.XSLTInInterceptor:void transformReader(org.apache.cxf.message.Message,java.io.Reader)",
            "org.apache.cxf.feature.transform.XSLTOutInterceptor$XSLTCachedOutputStreamCallback:void onClose(org.apache.cxf.io.CachedOutputStream)",
            "org.apache.cxf.feature.transform.XSLTOutInterceptor$XSLTCachedWriter:void doClose()",
            "org.apache.cxf.feature.transform.XSLTOutInterceptor$XSLTStreamWriter:void close()",
            "org.apache.cxf.feature.transform.XSLTUtils:java.io.InputStream transform(javax.xml.transform.Templates,java.io.InputStream)",
            "org.apache.cxf.feature.transform.XSLTUtils:java.io.Reader transform(javax.xml.transform.Templates,java.io.Reader)",
            "org.apache.cxf.feature.transform.XSLTUtils:org.w3c.dom.Document transform(javax.xml.transform.Templates,org.w3c.dom.Document)",
            "org.apache.cxf.feature.transform.XSLTUtils:void <clinit>()"
        ]
    },
    "org.apache.cxf.helpers.FileUtils:java.io.File createTmpDir(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.FileUtils:java.io.File getDefaultTempDir()",
            "org.apache.cxf.helpers.FileUtils:java.io.File createTmpDir()"
        ]
    },
    "org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver:void <clinit>()"
        ]
    },
    "org.apache.cxf.interceptor.AttachmentInInterceptor:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.AttachmentInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AttachmentInInterceptor:java.util.List getSupportedTypes()",
            "org.apache.cxf.interceptor.AttachmentInInterceptor:void <clinit>()"
        ]
    },
    "org.apache.cxf.interceptor.ClientFaultConverter:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.EndpointImpl:void <init>(org.apache.cxf.Bus,org.apache.cxf.service.Service,org.apache.cxf.service.model.EndpointInfo)",
            "org.apache.cxf.interceptor.ClientFaultConverter:void processFaultDetail(org.apache.cxf.interceptor.Fault,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.ClientFaultConverter:void setStackTrace(org.apache.cxf.interceptor.Fault,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.ClientFaultConverter:java.lang.Throwable getCause(java.util.Iterator,java.lang.String)",
            "org.apache.cxf.interceptor.ClientFaultConverter:void <clinit>()"
        ]
    },
    "org.apache.cxf.interceptor.FIStaxOutInterceptor:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.feature.FastInfosetFeature:void initializeProvider(org.apache.cxf.interceptor.InterceptorProvider,org.apache.cxf.Bus)",
            "org.apache.cxf.interceptor.FIStaxOutInterceptor:void handleFault(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.FIStaxOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.FIStaxOutInterceptor:void logSetter(java.lang.String,java.lang.Object)",
            "org.apache.cxf.interceptor.FIStaxOutInterceptor:void <clinit>()",
            "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void addFastInfosetSupport(org.apache.cxf.interceptor.InterceptorProvider,org.apache.cxf.annotations.FastInfoset)"
        ]
    },
    "org.apache.cxf.interceptor.FaultOutInterceptor:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.FaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.FaultOutInterceptor:java.lang.Object getFaultBean(java.lang.Throwable,org.apache.cxf.service.model.FaultInfo,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.FaultOutInterceptor:void <clinit>()"
        ]
    },
    "org.apache.cxf.interceptor.LoggingInInterceptor:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.feature.LoggingFeature:void initializeProvider(org.apache.cxf.interceptor.InterceptorProvider,org.apache.cxf.Bus)",
            "org.apache.cxf.feature.LoggingFeature:void <clinit>()",
            "org.apache.cxf.interceptor.LoggingInInterceptor:java.util.logging.Logger getLogger()",
            "org.apache.cxf.interceptor.LoggingInInterceptor:void <clinit>()"
        ]
    },
    "org.apache.cxf.interceptor.LoggingOutInterceptor:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.feature.LoggingFeature:void initializeProvider(org.apache.cxf.interceptor.InterceptorProvider,org.apache.cxf.Bus)",
            "org.apache.cxf.feature.LoggingFeature:void <clinit>()",
            "org.apache.cxf.interceptor.LoggingOutInterceptor$LogWriter:void close()",
            "org.apache.cxf.interceptor.LoggingOutInterceptor$LoggingCallback:void onClose(org.apache.cxf.io.CachedOutputStream)",
            "org.apache.cxf.interceptor.LoggingOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.LoggingOutInterceptor:java.util.logging.Logger getLogger()",
            "org.apache.cxf.interceptor.LoggingOutInterceptor:void <clinit>()"
        ]
    },
    "org.apache.cxf.interceptor.OneWayProcessorInterceptor:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.OneWayProcessorInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.OneWayProcessorInterceptor:void <clinit>()",
            "org.apache.cxf.service.factory.AbstractServiceFactoryBean:void initializeDefaultInterceptors()"
        ]
    },
    "org.apache.cxf.interceptor.OutgoingChainInterceptor:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.MessageSenderInterceptor:org.apache.cxf.transport.Conduit getConduit(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:org.apache.cxf.interceptor.InterceptorChain getOutInterceptorChain(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:void modifyChain(org.apache.cxf.phase.PhaseInterceptorChain,org.apache.cxf.message.Exchange)",
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:org.apache.cxf.phase.PhaseInterceptorChain getChain(org.apache.cxf.message.Exchange,org.apache.cxf.phase.PhaseChainCache)",
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:void <clinit>()",
            "org.apache.cxf.service.factory.AbstractServiceFactoryBean:void initializeDefaultInterceptors()"
        ]
    },
    "org.apache.cxf.interceptor.StaxInInterceptor:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.StaxInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxInInterceptor:javax.xml.stream.XMLInputFactory getXMLInputFactory(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxInInterceptor:void <clinit>()"
        ]
    },
    "org.apache.cxf.interceptor.security.AbstractAuthorizingInInterceptor:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.security.AbstractAuthorizingInInterceptor:boolean authorize(org.apache.cxf.security.SecurityContext,java.lang.reflect.Method)",
            "org.apache.cxf.interceptor.security.AbstractAuthorizingInInterceptor:void <clinit>()",
            "org.apache.cxf.interceptor.security.OperationInfoAuthorizingInterceptor:boolean authorize(org.apache.cxf.security.SecurityContext,java.lang.String)",
            "org.apache.cxf.interceptor.security.OperationInfoAuthorizingInterceptor:void <clinit>()",
            "org.apache.cxf.interceptor.security.SecureAnnotationsInterceptor:void setSecuredObject(java.lang.Object)",
            "org.apache.cxf.interceptor.security.SecureAnnotationsInterceptor:void findRoles(java.lang.Class,java.util.Map)",
            "org.apache.cxf.interceptor.security.SecureAnnotationsInterceptor:void <clinit>()"
        ]
    },
    "org.apache.cxf.interceptor.security.AbstractSecurityContextInInterceptor:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.security.AbstractSecurityContextInInterceptor:void reportSecurityException(java.lang.String)",
            "org.apache.cxf.interceptor.security.AbstractSecurityContextInInterceptor:void <clinit>()"
        ]
    },
    "org.apache.cxf.interceptor.security.JAASLoginInterceptor:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.security.JAASAuthenticationFeature:void initializeProvider(org.apache.cxf.interceptor.InterceptorProvider,org.apache.cxf.Bus)",
            "org.apache.cxf.interceptor.security.JAASLoginInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.security.JAASLoginInterceptor:void <clinit>()"
        ]
    },
    "org.apache.cxf.interceptor.security.NameDigestPasswordCallbackHandler:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.security.NameDigestPasswordCallbackHandler:void handle(javax.security.auth.callback.Callback[])",
            "org.apache.cxf.interceptor.security.NameDigestPasswordCallbackHandler:boolean invokePasswordCallback(javax.security.auth.callback.Callback)",
            "org.apache.cxf.interceptor.security.NameDigestPasswordCallbackHandler:void <clinit>()",
            "org.apache.cxf.interceptor.security.callback.CallbackHandlerProviderUsernameToken:javax.security.auth.callback.CallbackHandler create(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.security.NamePasswordCallbackHandler:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.security.JAASLoginInterceptor:javax.security.auth.callback.CallbackHandler getCallbackHandler(java.lang.String,java.lang.String)",
            "org.apache.cxf.interceptor.security.NamePasswordCallbackHandler:void handle(javax.security.auth.callback.Callback[])",
            "org.apache.cxf.interceptor.security.NamePasswordCallbackHandler:boolean invokePasswordCallback(javax.security.auth.callback.Callback)",
            "org.apache.cxf.interceptor.security.NamePasswordCallbackHandler:void <clinit>()",
            "org.apache.cxf.interceptor.security.callback.CallbackHandlerProviderAuthPol:javax.security.auth.callback.CallbackHandler create(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.security.callback.CallbackHandlerProviderUsernameToken:javax.security.auth.callback.CallbackHandler create(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.security.callback.CallbackHandlerTlsCert:javax.security.auth.callback.CallbackHandler create(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.security.OperationInfoAuthorizingInterceptor:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.security.OperationInfoAuthorizingInterceptor:boolean authorize(org.apache.cxf.security.SecurityContext,java.lang.String)",
            "org.apache.cxf.interceptor.security.OperationInfoAuthorizingInterceptor:void <clinit>()"
        ]
    },
    "org.apache.cxf.phase.PhaseInterceptorChain:void doDefaultLogging(org.apache.cxf.message.Message,java.lang.Exception,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:void wrapExceptionAsFault(org.apache.cxf.message.Message,java.lang.RuntimeException)"
        ]
    },
    "org.apache.cxf.phase.PhaseInterceptorChain:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:org.apache.cxf.interceptor.InterceptorChain getOutInterceptorChain(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.interceptor.ServiceInvokerInterceptor$2:void done()",
            "org.apache.cxf.interceptor.ServiceInvokerInterceptor$2:void run()",
            "org.apache.cxf.phase.PhaseChainCache:org.apache.cxf.phase.PhaseInterceptorChain getChain(java.util.concurrent.atomic.AtomicReference,java.util.SortedSet,java.util.List[])",
            "org.apache.cxf.phase.PhaseInterceptorChain:void <init>(org.apache.cxf.phase.PhaseInterceptorChain)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void <init>(java.util.SortedSet)",
            "org.apache.cxf.phase.PhaseInterceptorChain:org.apache.cxf.message.Message getCurrentMessage()",
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean setCurrentMessage(org.apache.cxf.phase.PhaseInterceptorChain,org.apache.cxf.message.Message)",
            "org.apache.cxf.phase.PhaseInterceptorChain:org.apache.cxf.phase.PhaseInterceptorChain cloneChain()",
            "org.apache.cxf.phase.PhaseInterceptorChain:void add(org.apache.cxf.interceptor.Interceptor,boolean)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void pause()",
            "org.apache.cxf.phase.PhaseInterceptorChain:void suspend()",
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void doDefaultLogging(org.apache.cxf.message.Message,java.lang.Exception,java.lang.String)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void unwind(org.apache.cxf.message.Message)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void outputChainToLog(boolean)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void <clinit>()",
            "org.apache.cxf.transport.MultipleEndpointObserver:org.apache.cxf.phase.PhaseInterceptorChain createChain()"
        ]
    },
    "org.apache.cxf.resource.DefaultResourceManager:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void <init>(java.util.Map,java.util.Map,java.lang.ClassLoader)",
            "org.apache.cxf.resource.DefaultResourceManager:java.lang.Object findResource(java.lang.String,java.lang.Class,boolean,java.util.List)",
            "org.apache.cxf.resource.DefaultResourceManager:void <clinit>()"
        ]
    },
    "org.apache.cxf.resource.URIResolver:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.catalog.OASISCatalogManager$1:java.lang.String getResolvedEntity(java.lang.String,java.lang.String)",
            "org.apache.cxf.resource.ExtendedURIResolver:void <init>()",
            "org.apache.cxf.resource.URIResolver:void tryClasspath(java.lang.String)",
            "org.apache.cxf.resource.URIResolver:void <clinit>()",
            "org.apache.cxf.service.factory.AbstractServiceFactoryBean:void fillDataBindingSchemas()"
        ]
    },
    "org.apache.cxf.service.factory.AbstractServiceFactoryBean:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.AbstractServiceFactoryBean:void fillDataBindingSchemas()",
            "org.apache.cxf.service.factory.AbstractServiceFactoryBean:void <clinit>()"
        ]
    },
    "org.apache.cxf.service.invoker.AbstractInvoker:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.invoker.AbstractInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object)",
            "org.apache.cxf.service.invoker.AbstractInvoker:void checkSuspendedInvocation(org.apache.cxf.message.Exchange,java.lang.Object,java.lang.reflect.Method,java.util.List,java.lang.Throwable)",
            "org.apache.cxf.service.invoker.AbstractInvoker:org.apache.cxf.interceptor.Fault createFault(java.lang.Throwable,java.lang.reflect.Method,java.util.List,boolean)",
            "org.apache.cxf.service.invoker.AbstractInvoker:java.lang.Object performInvocation(org.apache.cxf.message.Exchange,java.lang.Object,java.lang.reflect.Method,java.lang.Object[])",
            "org.apache.cxf.service.invoker.AbstractInvoker:java.lang.reflect.Method matchMethod(java.lang.reflect.Method,java.lang.Object)",
            "org.apache.cxf.service.invoker.AbstractInvoker:void <clinit>()",
            "org.apache.cxf.service.invoker.FactoryInvoker:java.lang.Object getServiceObject(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.service.invoker.FactoryInvoker:void <clinit>()",
            "org.apache.cxf.service.invoker.SessionFactory:java.lang.Object create(org.apache.cxf.message.Exchange)"
        ]
    },
    "org.apache.cxf.service.model.BindingInfo:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.binding.AbstractBindingFactory:org.apache.cxf.service.model.BindingInfo createBindingInfo(org.apache.cxf.service.model.ServiceInfo,java.lang.String,java.lang.Object)",
            "org.apache.cxf.service.model.BindingInfo:void addOperation(org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.service.model.BindingInfo:void removeOperation(org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.service.model.BindingInfo:void <clinit>()"
        ]
    },
    "org.apache.cxf.service.model.InterfaceInfo:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.model.InterfaceInfo:org.apache.cxf.service.model.OperationInfo addOperation(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.InterfaceInfo:void <clinit>()",
            "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.InterfaceInfo createInterface(javax.xml.namespace.QName)"
        ]
    },
    "org.apache.cxf.service.model.OperationInfo:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.model.InterfaceInfo:org.apache.cxf.service.model.OperationInfo addOperation(javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.OperationInfo:org.apache.cxf.service.model.FaultInfo addFault(javax.xml.namespace.QName,javax.xml.namespace.QName)",
            "org.apache.cxf.service.model.OperationInfo:boolean equals(java.lang.Object)",
            "org.apache.cxf.service.model.OperationInfo:void <clinit>()"
        ]
    },
    "org.apache.cxf.staxutils.transform.InTransformReader:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.transform.InTransformReader:int next()",
            "org.apache.cxf.staxutils.transform.InTransformReader:void handleAppendMode(javax.xml.namespace.QName,org.apache.cxf.staxutils.transform.ElementProperty)",
            "org.apache.cxf.staxutils.transform.InTransformReader:void <clinit>()",
            "org.apache.cxf.staxutils.transform.TransformUtils:javax.xml.stream.XMLStreamReader createTransformReaderIfNeeded(javax.xml.stream.XMLStreamReader,java.io.InputStream,java.util.List,java.util.Map,java.util.Map,java.util.Map,boolean)"
        ]
    },
    "org.apache.cxf.staxutils.validation.ResolvingGrammarReaderController:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.validation.ResolvingGrammarReaderController:void error(org.xml.sax.Locator[],java.lang.String,java.lang.Exception)",
            "org.apache.cxf.staxutils.validation.ResolvingGrammarReaderController:void warning(org.xml.sax.Locator[],java.lang.String)",
            "org.apache.cxf.staxutils.validation.ResolvingGrammarReaderController:void <clinit>()",
            "org.apache.cxf.staxutils.validation.Stax2ValidationUtils:void <clinit>()",
            "org.apache.cxf.staxutils.validation.W3CMultiSchemaFactory:org.codehaus.stax2.validation.XMLValidationSchema loadSchemas(java.lang.String,java.util.Map)"
        ]
    },
    "org.apache.cxf.staxutils.validation.Stax2ValidationUtils:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.validation.Stax2ValidationUtils$1:void reportProblem(org.codehaus.stax2.validation.XMLValidationProblem)",
            "org.apache.cxf.staxutils.validation.Stax2ValidationUtils$2:void reportProblem(org.codehaus.stax2.validation.XMLValidationProblem)",
            "org.apache.cxf.staxutils.validation.Stax2ValidationUtils:void <init>()",
            "org.apache.cxf.staxutils.validation.Stax2ValidationUtils:org.codehaus.stax2.validation.XMLValidationSchema getValidator(org.apache.cxf.endpoint.Endpoint,org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.staxutils.validation.Stax2ValidationUtils:java.util.logging.Logger access$000()",
            "org.apache.cxf.staxutils.validation.Stax2ValidationUtils:void <clinit>()",
            "org.apache.cxf.staxutils.validation.WoodstoxValidationImpl:void <init>()"
        ]
    },
    "org.apache.cxf.staxutils.validation.StaxSchemaValidationInInterceptor:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.validation.StaxSchemaValidationInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.staxutils.validation.StaxSchemaValidationInInterceptor:void setSchemaInMessage(org.apache.cxf.message.Message,javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.staxutils.validation.StaxSchemaValidationInInterceptor:void <clinit>()"
        ]
    },
    "org.apache.cxf.staxutils.validation.StaxSchemaValidationOutInterceptor:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.validation.StaxSchemaValidationOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.staxutils.validation.StaxSchemaValidationOutInterceptor:void setSchemaInMessage(org.apache.cxf.message.Message,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.validation.StaxSchemaValidationOutInterceptor:void <clinit>()"
        ]
    },
    "org.apache.cxf.staxutils.validation.WoodstoxValidationImpl:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.source.XMLStreamDataReader:org.w3c.dom.Element validate(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.staxutils.validation.StaxSchemaValidationInInterceptor:void setSchemaInMessage(org.apache.cxf.message.Message,javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.staxutils.validation.StaxSchemaValidationOutInterceptor:void setSchemaInMessage(org.apache.cxf.message.Message,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.validation.WoodstoxValidationImpl:void <init>()",
            "org.apache.cxf.staxutils.validation.WoodstoxValidationImpl:void <clinit>()"
        ]
    },
    "org.apache.cxf.transport.common.gzip.GZIPInInterceptor:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.common.gzip.GZIPFeature:void <clinit>()",
            "org.apache.cxf.transport.common.gzip.GZIPInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.common.gzip.GZIPInInterceptor:void <clinit>()"
        ]
    },
    "org.apache.cxf.transport.common.gzip.GZIPOutInterceptor:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.common.gzip.GZIPFeature:void initializeProvider(org.apache.cxf.interceptor.InterceptorProvider,org.apache.cxf.Bus)",
            "org.apache.cxf.transport.common.gzip.GZIPFeature:void <clinit>()",
            "org.apache.cxf.transport.common.gzip.GZIPInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.common.gzip.GZIPOutInterceptor$GZipThresholdOutputStream:void thresholdNotReached()",
            "org.apache.cxf.transport.common.gzip.GZIPOutInterceptor$GZipThresholdOutputStream:void thresholdReached()",
            "org.apache.cxf.transport.common.gzip.GZIPOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.common.gzip.GZIPOutInterceptor:org.apache.cxf.transport.common.gzip.GZIPOutInterceptor$UseGzip gzipPermitted(org.apache.cxf.message.Message,boolean)",
            "org.apache.cxf.transport.common.gzip.GZIPOutInterceptor:java.util.logging.Logger access$000()",
            "org.apache.cxf.transport.common.gzip.GZIPOutInterceptor:void access$100(org.apache.cxf.message.Message,java.lang.String,java.lang.String)",
            "org.apache.cxf.transport.common.gzip.GZIPOutInterceptor:void <clinit>()"
        ]
    },
    "org.apache.cxf.validation.AbstractValidationInterceptor:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.validation.AbstractValidationInterceptor:void <clinit>()"
        ]
    },
    "org.apache.cxf.validation.BeanValidationProvider:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.validation.AbstractValidationInterceptor:org.apache.cxf.validation.BeanValidationProvider getProvider(org.apache.cxf.message.Message)",
            "org.apache.cxf.validation.BeanValidationProvider:void <init>()",
            "org.apache.cxf.validation.BeanValidationProvider:void <init>(org.apache.cxf.validation.ValidationConfiguration)",
            "org.apache.cxf.validation.BeanValidationProvider:void <init>(javax.validation.ValidationProviderResolver,java.lang.Class,org.apache.cxf.validation.ValidationConfiguration)",
            "org.apache.cxf.validation.BeanValidationProvider:void <clinit>()"
        ]
    },
    "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:org.apache.cxf.workqueue.AutomaticWorkQueue createAutomaticWorkQueue()",
            "org.apache.cxf.bus.osgi.ManagedWorkQueueList:void updated(java.lang.String,java.util.Dictionary)",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl$WatchDog:void run()",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:java.util.concurrent.ThreadPoolExecutor getExecutor()",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:java.util.logging.Logger access$000()",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void <clinit>()"
        ]
    },
    "org.apache.cxf.ws.addressing.ContextUtils:org.apache.cxf.ws.addressing.AddressingProperties retrieveMAPs(org.apache.cxf.message.Message,boolean,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.ContextUtils:org.apache.cxf.ws.addressing.AddressingProperties retrieveMAPs(org.apache.cxf.message.Message,boolean,boolean)"
        ]
    },
    "org.apache.cxf.ws.addressing.ContextUtils:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.ContextUtils:void storeMAPs(org.apache.cxf.ws.addressing.AddressingProperties,org.apache.cxf.message.Message,boolean)",
            "org.apache.cxf.ws.addressing.ContextUtils:void storeMAPs(org.apache.cxf.ws.addressing.AddressingProperties,org.apache.cxf.message.Message,boolean,boolean)",
            "org.apache.cxf.ws.addressing.ContextUtils:void storeMAPs(org.apache.cxf.ws.addressing.AddressingProperties,org.apache.cxf.message.Message,boolean,boolean,boolean)",
            "org.apache.cxf.ws.addressing.ContextUtils:org.apache.cxf.ws.addressing.AddressingProperties retrieveMAPs(org.apache.cxf.message.Message,boolean,boolean)",
            "org.apache.cxf.ws.addressing.ContextUtils:org.apache.cxf.ws.addressing.AddressingProperties retrieveMAPs(org.apache.cxf.message.Message,boolean,boolean,boolean)",
            "org.apache.cxf.ws.addressing.ContextUtils:org.apache.cxf.ws.addressing.AttributedURIType getAttributedURI(java.lang.String)",
            "org.apache.cxf.ws.addressing.ContextUtils:org.apache.cxf.ws.addressing.RelatesToType getRelatesTo(java.lang.String)",
            "org.apache.cxf.ws.addressing.ContextUtils:void propogateReceivedMAPs(org.apache.cxf.ws.addressing.AddressingProperties,org.apache.cxf.message.Exchange)",
            "org.apache.cxf.ws.addressing.ContextUtils:void propogateReceivedMAPs(org.apache.cxf.ws.addressing.AddressingProperties,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.addressing.ContextUtils:javax.xml.bind.JAXBContext getJAXBContext()",
            "org.apache.cxf.ws.addressing.ContextUtils:void setJAXBContext(javax.xml.bind.JAXBContext)",
            "org.apache.cxf.ws.addressing.ContextUtils:org.apache.cxf.ws.addressing.EndpointReferenceType getNoneEndpointReference()",
            "org.apache.cxf.ws.addressing.ContextUtils:void applyReferenceParam(org.apache.cxf.ws.addressing.EndpointReferenceType,java.lang.Object)",
            "org.apache.cxf.ws.addressing.ContextUtils:void <clinit>()",
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.AttributedURIType convert(org.apache.cxf.ws.addressing.v200408.AttributedURI)",
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.AttributedURIType convert(org.apache.cxf.ws.addressing.v200403.AttributedURI)",
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.EndpointReferenceType convert(org.apache.cxf.ws.addressing.v200408.EndpointReferenceType)",
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.EndpointReferenceType convert(org.apache.cxf.ws.addressing.v200403.EndpointReferenceType)",
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.ReferenceParametersType convert(org.apache.cxf.ws.addressing.v200408.ReferenceParametersType)",
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.RelatesToType convert(org.apache.cxf.ws.addressing.v200408.Relationship)",
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.RelatesToType convert(org.apache.cxf.ws.addressing.v200403.Relationship)",
            "org.apache.cxf.ws.addressing.VersionTransformer:javax.xml.bind.JAXBContext getExposedJAXBContext(java.lang.String)"
        ]
    },
    "org.apache.cxf.ws.addressing.EndpointReferenceUtils:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:void setDataReaderValidation(org.apache.cxf.service.Service,org.apache.cxf.message.Message,org.apache.cxf.databinding.DataReader)",
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:void setDataWriterValidation(org.apache.cxf.service.Service,org.apache.cxf.message.Message,org.apache.cxf.databinding.DataWriter)",
            "org.apache.cxf.service.model.EndpointInfo:void setAddress(java.lang.String)",
            "org.apache.cxf.transport.AbstractDestination$AbstractBackChannelConduit:void <init>(org.apache.cxf.transport.AbstractDestination)",
            "org.apache.cxf.transport.AbstractMultiplexDestination:org.apache.cxf.ws.addressing.EndpointReferenceType getAddressWithId(java.lang.String)",
            "org.apache.cxf.transport.AbstractObservable:org.apache.cxf.ws.addressing.EndpointReferenceType getTargetReference(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)",
            "org.apache.cxf.ws.addressing.ContextUtils:void <clinit>()",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils$SchemaLSResourceResolver:org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:void setServiceAndPortName(org.apache.cxf.ws.addressing.EndpointReferenceType,javax.xml.namespace.QName,java.lang.String)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:javax.xml.bind.JAXBElement getServiceNameType(javax.xml.namespace.QName,java.lang.String)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:javax.xml.namespace.QName getServiceName(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:javax.xml.namespace.QName getPortQName(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:void setInterfaceName(org.apache.cxf.ws.addressing.EndpointReferenceType,javax.xml.namespace.QName)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:javax.xml.namespace.QName getInterfaceName(org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:void setWSDLLocation(org.apache.cxf.ws.addressing.EndpointReferenceType,java.lang.String[])",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:java.lang.String getWSDLLocation(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:void setMetadata(org.apache.cxf.ws.addressing.EndpointReferenceType,java.util.List)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:javax.xml.validation.Schema createSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.Bus)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:javax.xml.validation.Schema getSchema(org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:javax.xml.validation.Schema getSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.Bus)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:org.apache.cxf.ws.addressing.EndpointReferenceType getEndpointReference(java.net.URL,javax.xml.namespace.QName,java.lang.String)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:org.apache.cxf.ws.addressing.EndpointReferenceType getEndpointReference(java.lang.String)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:org.apache.cxf.ws.addressing.EndpointReferenceType getAnonymousEndpointReference()",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:org.apache.cxf.ws.addressing.EndpointReferenceType getEndpointReferenceWithId(javax.xml.namespace.QName,java.lang.String,java.lang.String,org.apache.cxf.Bus)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:javax.xml.bind.JAXBContext createContextForEPR()",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:javax.xml.bind.JAXBContext getJAXBContextForEPR()",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:javax.xml.transform.Source convertToXML(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:org.apache.cxf.transport.MultiplexDestination getMatchingMultiplexDestination(javax.xml.namespace.QName,java.lang.String,org.apache.cxf.Bus)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:java.util.logging.Logger access$000()",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:void <clinit>()",
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.v200408.EndpointReferenceType convert(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.v200403.EndpointReferenceType convertTo200403(org.apache.cxf.ws.addressing.EndpointReferenceType)",
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.EndpointReferenceType convert(org.apache.cxf.ws.addressing.v200408.EndpointReferenceType)",
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.EndpointReferenceType convert(org.apache.cxf.ws.addressing.v200403.EndpointReferenceType)"
        ]
    },
    "org.apache.cxf.common.util.ClassHelper:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.injection.ResourceInjector:void injectField(java.lang.reflect.Field,java.lang.Object)",
            "org.apache.cxf.common.util.ClassHelper:org.apache.cxf.common.util.ClassHelper getClassHelper()",
            "org.apache.cxf.common.util.ClassHelper:java.lang.Class getRealClass(java.lang.Object)",
            "org.apache.cxf.common.util.ClassHelper:java.lang.Class getRealClassFromClass(java.lang.Class)",
            "org.apache.cxf.common.util.ClassHelper:java.lang.Object getRealObject(java.lang.Object)",
            "org.apache.cxf.common.util.ClassHelper:java.lang.Class getRealClass(org.apache.cxf.Bus,java.lang.Object)",
            "org.apache.cxf.common.util.ClassHelper:void <clinit>()",
            "org.apache.cxf.interceptor.security.SecureAnnotationsInterceptor:void setSecuredObject(java.lang.Object)"
        ]
    },
    "org.apache.cxf.common.util.ClasspathScanner:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.ClasspathScanner:org.apache.cxf.common.util.ClasspathScanner getClasspathScanner()",
            "org.apache.cxf.common.util.ClasspathScanner:java.util.Map findClasses(java.lang.String,java.lang.Class[])",
            "org.apache.cxf.common.util.ClasspathScanner:java.util.Map findClasses(java.util.Collection,java.lang.Class[])",
            "org.apache.cxf.common.util.ClasspathScanner:java.util.Map findClasses(java.util.Collection,java.util.List)",
            "org.apache.cxf.common.util.ClasspathScanner:java.util.Map findClasses(java.util.Collection,java.util.List,java.lang.ClassLoader)",
            "org.apache.cxf.common.util.ClasspathScanner:java.util.List findResources(java.lang.String,java.lang.String)",
            "org.apache.cxf.common.util.ClasspathScanner:java.util.List findResources(java.lang.String,java.lang.String,java.lang.ClassLoader)",
            "org.apache.cxf.common.util.ClasspathScanner:java.util.List findResources(java.util.Collection,java.lang.String)",
            "org.apache.cxf.common.util.ClasspathScanner:java.util.List findResources(java.util.Collection,java.lang.String,java.lang.ClassLoader)",
            "org.apache.cxf.common.util.ClasspathScanner:void <clinit>()",
            "org.apache.cxf.common.util.SpringClasspathScanner:org.springframework.core.io.support.ResourcePatternResolver getResolver(java.lang.ClassLoader)",
            "org.apache.cxf.common.util.SpringClasspathScanner:boolean shouldSkip(java.lang.String)",
            "org.apache.cxf.common.util.SpringClasspathScanner:void <clinit>()"
        ]
    },
    "org.apache.cxf.common.util.Compiler:boolean internalJava6Compile(javax.tools.JavaCompiler,javax.tools.JavaFileManager,javax.tools.DiagnosticListener,java.lang.Iterable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.Compiler:boolean useJava6Compiler(java.lang.String[])"
        ]
    },
    "org.apache.cxf.common.util.Compiler:boolean compileFiles(java.io.File[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.util.UrlUtils:java.lang.String urlDecode(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.UrlUtils:java.lang.String urlDecode(java.lang.String)"
        ]
    },
    "org.apache.cxf.common.util.UrlUtils:java.lang.String pathDecode(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser:void mapAttribute(org.apache.aries.blueprint.mutable.MutableBeanMetadata,org.w3c.dom.Element,java.lang.String,java.lang.String,org.apache.aries.blueprint.ParserContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser:boolean parseAttributes(org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext,org.apache.aries.blueprint.mutable.MutableBeanMetadata)"
        ]
    },
    "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:boolean processBusAttribute(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:boolean parseAttribute(org.w3c.dom.Element,org.w3c.dom.Attr,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder)"
        ]
    },
    "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void addBusWiringAttribute(org.springframework.beans.factory.support.BeanDefinitionBuilder,org.apache.cxf.configuration.spring.BusWiringType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void doParse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder)"
        ]
    },
    "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void mapAttribute(org.springframework.beans.factory.support.BeanDefinitionBuilder,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void mapAttribute(org.springframework.beans.factory.support.BeanDefinitionBuilder,org.w3c.dom.Element,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser:javax.xml.namespace.QName parseQName(org.w3c.dom.Element,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:javax.xml.namespace.QName parseQName(org.w3c.dom.Element,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.phase.PhaseInterceptorChain:java.lang.String toString(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:java.lang.String toString()",
            "org.apache.cxf.phase.PhaseInterceptorChain:void outputChainToLog(boolean)"
        ]
    },
    "org.apache.cxf.resource.URIResolver:void <init>(java.lang.String,java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.resource.URIResolver:void <init>(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.resource.URIResolver:void resolve(java.lang.String,java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.resource.ExtendedURIResolver:org.xml.sax.InputSource resolve(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.resource.URIResolver:void tryArchive(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.resource.URIResolver:void <init>(java.lang.String,java.lang.String,java.lang.Class)",
            "org.apache.cxf.resource.URIResolver:void resolve(java.lang.String,java.lang.String,java.lang.Class)"
        ]
    },
    "org.apache.cxf.staxutils.CachingXmlEventWriter:void writeDefaultNamespace(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.CachingXmlEventWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeDefaultNamespace(java.lang.String)",
            "org.apache.cxf.staxutils.PrettyPrintXMLStreamWriter:void writeDefaultNamespace(java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamWriter,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.PrettyPrintXMLStreamWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeAttributeEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.cxf.staxutils.transform.OutTransformWriter:void writeAttribute(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.staxutils.PrettyPrintXMLStreamWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.PrettyPrintXMLStreamWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeAttributeEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.cxf.staxutils.W3CDOMStreamWriter:void writeEmptyElement(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeEmptyElement(java.lang.String)",
            "org.apache.cxf.staxutils.PrettyPrintXMLStreamWriter:void writeEmptyElement(java.lang.String)"
        ]
    },
    "org.apache.cxf.bus.spring.TunedDocumentLoader:org.w3c.dom.Document loadDocument(org.xml.sax.InputSource,org.xml.sax.EntityResolver,org.xml.sax.ErrorHandler,int,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.databinding.AbstractDataBinding:org.w3c.dom.Document copy(org.w3c.dom.Document)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.AbstractDataBinding:org.apache.ws.commons.schema.XmlSchema addSchemaDocument(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.common.xmlschema.SchemaCollection,org.w3c.dom.Document,java.lang.String,java.util.Collection)",
            "org.apache.cxf.databinding.AbstractDataBinding:org.w3c.dom.Document doEmptyNamespaceHack(org.w3c.dom.Document,boolean)"
        ]
    },
    "org.apache.cxf.databinding.source.NodeDataWriter:void write(java.lang.Object,org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.source.NodeDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,org.w3c.dom.Node)",
            "org.apache.cxf.databinding.source.NodeDataWriter:void write(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cxf.feature.transform.AbstractXSLTInterceptor:void <init>(java.lang.String,java.lang.Class,java.lang.Class,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.feature.transform.XSLTInInterceptor:void <init>(java.lang.String)",
            "org.apache.cxf.feature.transform.XSLTInInterceptor:void <init>(java.lang.String,java.lang.Class,java.lang.Class,java.lang.String)",
            "org.apache.cxf.feature.transform.XSLTOutInterceptor:void <init>(java.lang.String)",
            "org.apache.cxf.feature.transform.XSLTOutInterceptor:void <init>(java.lang.String,java.lang.Class,java.lang.Class,java.lang.String)"
        ]
    },
    "org.apache.cxf.feature.transform.XSLTOutInterceptor:void transformXWriter(org.apache.cxf.message.Message,javax.xml.stream.XMLStreamWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.feature.transform.XSLTOutInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.security.DepthRestrictingStreamInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.security.DelegatingAuthenticationInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:void setInnerElementLevelThreshold(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.staxutils.StaxUtils:void setInnerElementCountThreshold(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLInputFactory getXMLInputFactory()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamReader createFilteredReader(javax.xml.stream.XMLStreamReader,javax.xml.stream.StreamFilter)",
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamReader createXMLStreamReader(java.io.InputStream,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamReader createXMLStreamReader(java.io.InputStream)",
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamReader createXMLStreamReader(java.lang.String,java.io.InputStream)",
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamReader createXMLStreamReader(javax.xml.transform.Source)",
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamReader createXMLStreamReader(java.io.Reader)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:void returnXMLInputFactory(javax.xml.stream.XMLInputFactory)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamReader createFilteredReader(javax.xml.stream.XMLStreamReader,javax.xml.stream.StreamFilter)",
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamReader createXMLStreamReader(java.io.InputStream,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamReader createXMLStreamReader(java.io.InputStream)",
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamReader createXMLStreamReader(java.lang.String,java.io.InputStream)",
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamReader createXMLStreamReader(javax.xml.transform.Source)",
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamReader createXMLStreamReader(java.io.Reader)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLOutputFactory getXMLOutputFactory()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamWriter createXMLStreamWriter(java.io.Writer)",
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamWriter createXMLStreamWriter(java.io.OutputStream,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamWriter createXMLStreamWriter(javax.xml.transform.Result)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:void returnXMLOutputFactory(javax.xml.stream.XMLOutputFactory)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamWriter createXMLStreamWriter(java.io.Writer)",
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamWriter createXMLStreamWriter(java.io.OutputStream,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamWriter createXMLStreamWriter(javax.xml.transform.Result)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLInputFactory createXMLInputFactory(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLInputFactory getXMLInputFactory()",
            "org.apache.cxf.staxutils.StaxUtils:void <clinit>()"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:boolean setRestrictionProperties(javax.xml.stream.XMLInputFactory)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLInputFactory createXMLInputFactory(boolean)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamWriter createXMLStreamWriter(java.io.Writer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser:void mapElementToJaxbProperty(org.apache.aries.blueprint.ParserContext,org.apache.aries.blueprint.mutable.MutableBeanMetadata,org.w3c.dom.Element,java.lang.String,java.lang.Class)",
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void mapElementToJaxbProperty(org.w3c.dom.Element,org.springframework.beans.factory.support.BeanDefinitionBuilder,java.lang.String,java.lang.Class)",
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:org.springframework.beans.factory.support.AbstractBeanDefinition mapElementToJaxbBean(org.w3c.dom.Element,java.lang.Class,java.lang.Class,java.lang.Class,java.lang.String,java.lang.Object[])",
            "org.apache.cxf.feature.transform.XSLTOutInterceptor:void transformXWriter(org.apache.cxf.message.Message,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.interceptor.AbstractLoggingInterceptor:void writePayload(java.lang.StringBuilder,org.apache.cxf.io.CachedOutputStream,java.lang.String,java.lang.String)",
            "org.apache.cxf.interceptor.AbstractLoggingInterceptor:void writePrettyPayload(java.lang.StringBuilder,java.io.StringWriter,java.lang.String)",
            "org.apache.cxf.interceptor.StaxOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.staxutils.StaxUtils:void writeTo(org.w3c.dom.Node,java.io.Writer,int)",
            "org.apache.cxf.staxutils.StaxUtils:void printXmlFragment(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.staxutils.StaxUtils:java.lang.String toString(javax.xml.transform.Source)",
            "org.apache.cxf.staxutils.StaxUtils:java.lang.String toString(org.w3c.dom.Document)",
            "org.apache.cxf.staxutils.StaxUtils:java.lang.String toString(org.w3c.dom.Element,int)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamWriter createXMLStreamWriter(java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.source.XMLStreamDataReader:org.w3c.dom.Element validate(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.staxutils.StaxUtils:void copy(javax.xml.transform.Source,java.io.OutputStream)",
            "org.apache.cxf.staxutils.StaxUtils:void copy(javax.xml.stream.XMLStreamReader,java.io.OutputStream)",
            "org.apache.cxf.staxutils.StaxUtils:void writeTo(org.w3c.dom.Node,java.io.OutputStream,int)",
            "org.apache.cxf.staxutils.StaxUtils:void print(org.w3c.dom.Node)",
            "org.apache.cxf.staxutils.transform.TransformUtils:javax.xml.stream.XMLStreamWriter createNewWriterIfNeeded(javax.xml.stream.XMLStreamWriter,java.io.OutputStream)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:javax.xml.validation.Schema createSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamWriter createXMLStreamWriter(java.io.OutputStream,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.StaxOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamWriter createXMLStreamWriter(java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamWriter createXMLStreamWriter(javax.xml.transform.Result)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamReader createFilteredReader(javax.xml.stream.XMLStreamReader,javax.xml.stream.StreamFilter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.source.XMLStreamDataReader:org.w3c.dom.Element validate(javax.xml.stream.XMLStreamReader)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:void writeTo(org.w3c.dom.Node,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.source.NodeDataReader:java.lang.Object read(javax.xml.namespace.QName,org.w3c.dom.Node,java.lang.Class)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:void writeDocument(org.w3c.dom.Document,javax.xml.stream.XMLStreamWriter,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:void writeNode(org.w3c.dom.Node,javax.xml.stream.XMLStreamWriter,boolean)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:org.w3c.dom.Document read(java.io.File)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.staxutils.StaxUtils:org.w3c.dom.Document read(javax.xml.stream.XMLStreamReader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.source.XMLStreamDataReader:javax.xml.transform.dom.DOMSource read(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.staxutils.StaxUtils:org.w3c.dom.Document read(javax.xml.transform.Source)",
            "org.apache.cxf.staxutils.StaxUtils:org.w3c.dom.Document read(java.io.InputStream)",
            "org.apache.cxf.staxutils.StaxUtils:org.w3c.dom.Document read(java.io.Reader)",
            "org.apache.cxf.staxutils.StaxUtils:org.w3c.dom.Document read(org.xml.sax.InputSource)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:org.w3c.dom.Document read(javax.xml.stream.XMLStreamReader,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:org.w3c.dom.Document read(javax.xml.stream.XMLStreamReader)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:org.w3c.dom.Document read(javax.xml.parsers.DocumentBuilder,javax.xml.stream.XMLStreamReader,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.staxutils.StaxUtils:void readDocElements(org.w3c.dom.Node,javax.xml.stream.XMLStreamReader,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:org.w3c.dom.Document read(javax.xml.parsers.DocumentBuilder,javax.xml.stream.XMLStreamReader,boolean)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:boolean addLocation(org.w3c.dom.Document,org.w3c.dom.Node,javax.xml.stream.XMLStreamReader,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:void readDocElements(org.w3c.dom.Document,org.w3c.dom.Node,javax.xml.stream.XMLStreamReader,boolean,boolean,boolean)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamReader createXMLStreamReader(org.xml.sax.InputSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:org.w3c.dom.Document read(org.xml.sax.InputSource)",
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamReader createXMLStreamReader(javax.xml.transform.Source)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamReader createXMLStreamReader(java.io.InputStream,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.StaxInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamReader createXMLStreamReader(org.xml.sax.InputSource)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamReader createXMLStreamReader(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.source.XMLStreamDataWriter:void write(java.lang.Object,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.feature.transform.XSLTInInterceptor:void transformXReader(org.apache.cxf.message.Message,javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.feature.transform.XSLTUtils:java.io.InputStream transform(javax.xml.transform.Templates,java.io.InputStream)",
            "org.apache.cxf.interceptor.security.DepthRestrictingStreamInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.staxutils.StaxUtils:org.w3c.dom.Document read(java.io.InputStream)",
            "org.apache.cxf.staxutils.transform.TransformUtils:javax.xml.stream.XMLStreamReader createNewReaderIfNeeded(javax.xml.stream.XMLStreamReader,java.io.InputStream)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamReader createXMLStreamReader(java.lang.String,java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamReader createXMLStreamReader(javax.xml.transform.Source)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.source.XMLStreamDataReader:org.w3c.dom.Element validate(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.staxutils.StaxUtils:void copy(javax.xml.transform.Source,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:org.w3c.dom.Document read(javax.xml.transform.Source)",
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamReader createXMLStreamReader(org.xml.sax.InputSource)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamReader createXMLStreamReader(java.io.Reader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser$JAXBBeanFactory:java.lang.Object createJAXBBean(java.lang.String)",
            "org.apache.cxf.configuration.jsse.TLSClientParametersConfig:java.lang.Object createTLSClientParameters(java.lang.String)",
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:java.lang.Object unmarshalFactoryString(java.lang.String,javax.xml.bind.JAXBContext,java.lang.Class)",
            "org.apache.cxf.configuration.spring.JAXBBeanFactory:java.lang.Object createJAXBBean(javax.xml.bind.JAXBContext,java.lang.String,java.lang.Class)",
            "org.apache.cxf.feature.transform.XSLTUtils:java.io.Reader transform(javax.xml.transform.Templates,java.io.Reader)",
            "org.apache.cxf.interceptor.StaxInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.staxutils.StaxUtils:org.w3c.dom.Document read(java.io.Reader)"
        ]
    },
    "org.apache.cxf.staxutils.StaxUtils:java.lang.String toString(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.staxutils.StaxUtils:java.lang.String toString(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamReader configureReader(javax.xml.stream.XMLStreamReader,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Long,java.lang.Long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamReader configureReader(javax.xml.stream.XMLStreamReader,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.staxutils.W3CDOMStreamReader:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.logging.Log4jLogger$HandlerWrapper:void append(org.apache.log4j.spi.LoggingEvent)",
            "org.apache.cxf.common.util.PackageUtils:java.lang.String combine(java.util.List,char)",
            "org.apache.cxf.common.util.PropertyUtils:boolean isTrue(java.lang.Object)",
            "org.apache.cxf.common.util.PropertyUtils:boolean isFalse(java.lang.Object)",
            "org.apache.cxf.common.util.PropertyUtils:java.lang.Long getLong(org.apache.cxf.message.Message,java.lang.String)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:java.util.List enumeratorValues(org.apache.ws.commons.schema.XmlSchemaSimpleType)",
            "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String[] getCiphersuitesToInclude(java.util.List,org.apache.cxf.configuration.security.FiltersType,java.lang.String[],java.lang.String[],java.util.logging.Logger)",
            "org.apache.cxf.endpoint.ClientImpl:boolean isThreadLocalRequestContext()",
            "org.apache.cxf.helpers.ServiceUtils:org.apache.cxf.annotations.SchemaValidation$SchemaValidationType getSchemaValidationType(java.lang.Object)",
            "org.apache.cxf.staxutils.DepthXMLStreamReader:java.lang.String toString()"
        ]
    },
    "org.apache.cxf.staxutils.W3CDOMStreamWriter:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.logging.Log4jLogger$HandlerWrapper:void append(org.apache.log4j.spi.LoggingEvent)",
            "org.apache.cxf.common.util.PackageUtils:java.lang.String combine(java.util.List,char)",
            "org.apache.cxf.common.util.PropertyUtils:boolean isTrue(java.lang.Object)",
            "org.apache.cxf.common.util.PropertyUtils:boolean isFalse(java.lang.Object)",
            "org.apache.cxf.common.util.PropertyUtils:java.lang.Long getLong(org.apache.cxf.message.Message,java.lang.String)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:java.util.List enumeratorValues(org.apache.ws.commons.schema.XmlSchemaSimpleType)",
            "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String[] getCiphersuitesToInclude(java.util.List,org.apache.cxf.configuration.security.FiltersType,java.lang.String[],java.lang.String[],java.util.logging.Logger)",
            "org.apache.cxf.endpoint.ClientImpl:boolean isThreadLocalRequestContext()",
            "org.apache.cxf.helpers.ServiceUtils:org.apache.cxf.annotations.SchemaValidation$SchemaValidationType getSchemaValidationType(java.lang.Object)"
        ]
    },
    "org.apache.cxf.staxutils.transform.TransformUtils:javax.xml.stream.XMLStreamReader createNewReaderIfNeeded(javax.xml.stream.XMLStreamReader,java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.transform.TransformUtils:javax.xml.stream.XMLStreamReader createTransformReaderIfNeeded(javax.xml.stream.XMLStreamReader,java.io.InputStream,java.util.List,java.util.Map,java.util.Map,java.util.Map,boolean)"
        ]
    },
    "org.apache.cxf.staxutils.transform.TransformUtils:javax.xml.stream.XMLStreamWriter createNewWriterIfNeeded(javax.xml.stream.XMLStreamWriter,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.transform.TransformUtils:javax.xml.stream.XMLStreamWriter createTransformWriterIfNeeded(javax.xml.stream.XMLStreamWriter,java.io.OutputStream,java.util.Map,java.util.List,java.util.Map,boolean,java.lang.String)",
            "org.apache.cxf.staxutils.transform.TransformUtils:javax.xml.stream.XMLStreamWriter createTransformWriterIfNeeded(javax.xml.stream.XMLStreamWriter,java.io.OutputStream,java.util.Map,java.util.List,java.util.Map,java.util.Map,boolean,java.lang.String)"
        ]
    },
    "org.apache.cxf.common.util.XmlSchemaPrimitiveUtils:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.XmlSchemaPrimitiveUtils:void initializeMap()",
            "org.apache.cxf.common.util.XmlSchemaPrimitiveUtils:void registerPrimitiveClasses(java.lang.String,java.lang.Class[])",
            "org.apache.cxf.common.util.XmlSchemaPrimitiveUtils:java.lang.String getSchemaRepresentation(java.lang.Class)",
            "org.apache.cxf.common.util.XmlSchemaPrimitiveUtils:java.lang.String getSchemaRepresentation(java.lang.Class,java.lang.String)",
            "org.apache.cxf.common.util.XmlSchemaPrimitiveUtils:void <clinit>()"
        ]
    },
    "org.apache.cxf.databinding.stax.StaxDataBinding:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.util.UrlUtils:java.util.Map parseQueryString(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.feature.transform.XSLTUtils:org.w3c.dom.Document transform(javax.xml.transform.Templates,org.w3c.dom.Document)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.helpers.DOMUtils:org.w3c.dom.Document newDocument()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.W3CDOMStreamWriter:void <init>()"
        ]
    },
    "org.apache.cxf.interceptor.Fault:org.w3c.dom.Element getOrCreateDetail()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.FaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.message.AbstractWrappedMessage:void setAttachments(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.AttachmentDeserializer:void initializeAttachments()",
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:org.apache.cxf.databinding.DataWriter getDataWriter(org.apache.cxf.message.Message,org.apache.cxf.service.Service,java.lang.Class)",
            "org.apache.cxf.message.AbstractWrappedMessage:void setAttachments(java.util.Collection)"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:void setOutMessageProperties(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] doInvoke(org.apache.cxf.endpoint.ClientCallback,org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)"
        ]
    },
    "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:void setOperationSchemaValidation(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:org.apache.cxf.service.model.MessageInfo setMessage(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo,boolean,org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.MessageInfo)"
        ]
    },
    "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:void setOperationSchemaValidation(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.interceptor.LoggingOutInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.security.DelegatingAuthenticationInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.ServiceInvokerInterceptor$2:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.ServiceInvokerInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl$3:void run()",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl$AWQThreadFactory$1:void run()",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl$DelayedTaskWrapper:void run()",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void execute(java.lang.Runnable,long)",
            "org.apache.cxf.workqueue.SynchronousExecutor:void execute(java.lang.Runnable)"
        ]
    },
    "org.apache.cxf.interceptor.ServiceInvokerInterceptor:void copyJaxwsProperties(org.apache.cxf.message.Message,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.ServiceInvokerInterceptor:void access$100(org.apache.cxf.interceptor.ServiceInvokerInterceptor,org.apache.cxf.message.Message,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.StaxOutInterceptor:java.lang.String getEncoding(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.StaxOutInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.message.AbstractWrappedMessage:java.lang.Object put(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.message.AbstractWrappedMessage:java.lang.Object put(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cxf.message.StringMapImpl:void put(java.lang.Class,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.AbstractConduitSelector:org.apache.cxf.transport.Conduit getSelectedConduit(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ClientImpl:void setOutMessageProperties(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.endpoint.DeferredConduitSelector:org.apache.cxf.transport.Conduit selectConduit(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.UpfrontConduitSelector:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.UpfrontConduitSelector:org.apache.cxf.transport.Conduit selectConduit(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:org.apache.cxf.service.model.MessageInfo setMessage(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo,boolean,org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.MessageInfo)",
            "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:org.apache.cxf.service.model.MessageInfo getMessageInfo(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo,boolean)",
            "org.apache.cxf.interceptor.OneWayProcessorInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.security.AbstractSecurityContextInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.security.JAASLoginInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.message.AbstractWrappedMessage:void put(java.lang.Class,java.lang.Object)",
            "org.apache.cxf.message.MessageImpl:void setDestination(org.apache.cxf.transport.Destination)",
            "org.apache.cxf.service.invoker.AbstractInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object,java.lang.reflect.Method,java.util.List)"
        ]
    },
    "org.apache.cxf.ws.addressing.ContextUtils:void storeMAPs(org.apache.cxf.ws.addressing.AddressingProperties,org.apache.cxf.message.Message,boolean,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.ContextUtils:void storeMAPs(org.apache.cxf.ws.addressing.AddressingProperties,org.apache.cxf.message.Message,boolean)",
            "org.apache.cxf.ws.addressing.ContextUtils:void storeMAPs(org.apache.cxf.ws.addressing.AddressingProperties,org.apache.cxf.message.Message,boolean,boolean)",
            "org.apache.cxf.ws.addressing.ContextUtils:void propogateReceivedMAPs(org.apache.cxf.ws.addressing.AddressingProperties,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.ws.addressing.ContextUtils:void storeMAPFaultName(java.lang.String,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.addressing.ContextUtils:void storeMAPFaultReason(java.lang.String,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.addressing.ContextUtils:void storePartialResponseSent(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.message.ExchangeImpl:java.lang.Object put(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.message.ExchangeImpl:java.lang.Object put(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cxf.resource.URIResolver:void tryArchive(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.resource.URIResolver:void <init>(java.lang.String,java.lang.String,java.lang.Class)",
            "org.apache.cxf.resource.URIResolver:void resolve(java.lang.String,java.lang.String,java.lang.Class)",
            "org.apache.cxf.resource.URIResolver:void tryArchive(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void setPrefix(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void setPrefix(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.PrettyPrintXMLStreamWriter:void setPrefix(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamWriter,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:java.lang.String getUniquePrefix(javax.xml.stream.XMLStreamWriter,java.lang.String,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startPrefixMapping(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.staxutils.PrettyPrintXMLStreamWriter:void setPrefix(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void setPrefix(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.PrettyPrintXMLStreamWriter:void setPrefix(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamWriter,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:java.lang.String getUniquePrefix(javax.xml.stream.XMLStreamWriter,java.lang.String,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startPrefixMapping(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.transport.common.gzip.GZIPOutInterceptor$GZipThresholdOutputStream:void thresholdReached()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.io.AbstractThresholdOutputStream:void write(byte[],int,int)",
            "org.apache.cxf.io.AbstractThresholdOutputStream:void write(int)"
        ]
    },
    "org.apache.cxf.transport.AbstractObservable:org.apache.cxf.ws.addressing.EndpointReferenceType getTargetReference(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.ws.addressing.EndpointReferenceType,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.AbstractObservable:org.apache.cxf.ws.addressing.EndpointReferenceType getTargetReference(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.endpoint.AbstractEndpointFactory:org.apache.cxf.Bus getBus(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.io.CachedOutputStream:void <init>(long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.io.CachedOutputStream:void <init>()"
        ]
    },
    "org.apache.cxf.io.CachedWriter:void <init>(long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.io.CachedWriter:void <init>()"
        ]
    },
    "org.apache.cxf.common.util.ClassHelper:java.lang.Class getRealClass(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.security.SecureAnnotationsInterceptor:void setSecuredObject(java.lang.Object)"
        ]
    },
    "org.apache.cxf.common.logging.AbstractDelegatingLogger:void doLog(java.util.logging.LogRecord)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void log(java.util.logging.LogRecord)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void log(java.util.logging.Level,java.lang.String)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void log(java.util.logging.Level,java.lang.String,java.lang.Object)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void log(java.util.logging.Level,java.lang.String,java.lang.Object[])",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void logp(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void logp(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.Object)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void logp(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.Object[])",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void logp(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void throwing(java.lang.String,java.lang.String,java.lang.Throwable)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void severe(java.lang.String)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void warning(java.lang.String)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void info(java.lang.String)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void config(java.lang.String)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void fine(java.lang.String)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void finer(java.lang.String)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void finest(java.lang.String)"
        ]
    },
    "org.apache.cxf.common.logging.AbstractDelegatingLogger:void doLog(java.util.logging.LogRecord,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void logrb(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void logrb(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Object)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void logrb(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Object[])",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void logrb(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)"
        ]
    },
    "org.apache.cxf.phase.PhaseInterceptorChain:boolean isOneWay(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:void wrapExceptionAsFault(org.apache.cxf.message.Message,java.lang.RuntimeException)"
        ]
    },
    "org.apache.cxf.validation.AbstractBeanValidationInterceptor:void handleValidation(org.apache.cxf.message.Message,java.lang.Object,java.lang.reflect.Method,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.validation.AbstractValidationInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.validation.BeanValidationOutInterceptor:org.apache.cxf.validation.BeanValidationProvider getOutProvider(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.validation.BeanValidationOutInterceptor:void handleValidation(org.apache.cxf.message.Message,java.lang.Object,java.lang.reflect.Method,java.util.List)"
        ]
    },
    "org.apache.cxf.interceptor.ServiceInvokerInterceptor$1:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.ServiceInvokerInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl$3:void run()",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl$AWQThreadFactory$1:void run()",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl$DelayedTaskWrapper:void run()",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void execute(java.lang.Runnable,long)",
            "org.apache.cxf.workqueue.SynchronousExecutor:void execute(java.lang.Runnable)"
        ]
    },
    "org.apache.cxf.validation.AbstractBeanValidationInterceptor:java.lang.reflect.Method getServiceMethod(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.validation.AbstractValidationInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.validation.AbstractValidationInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.security.DelegatingAuthenticationInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(java.lang.String,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invokeWrapped(java.lang.String,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.endpoint.ClientImpl:void invoke(org.apache.cxf.endpoint.ClientCallback,java.lang.String,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.endpoint.ClientImpl:void invokeWrapped(org.apache.cxf.endpoint.ClientCallback,java.lang.String,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.staxutils.DepthXMLStreamReader:java.lang.String getAttributeValue(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DepthXMLStreamReader:java.lang.String getAttributeValue(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.transform.InTransformReader:java.lang.String getAttributeValue(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.staxutils.DepthXMLStreamReader:java.lang.String getAttributeValue(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DepthXMLStreamReader:java.lang.String getAttributeValue(int)",
            "org.apache.cxf.staxutils.StaxSource:org.xml.sax.Attributes getAttributes()",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void readDocElements(org.w3c.dom.Document,org.w3c.dom.Node,javax.xml.stream.XMLStreamReader,boolean,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void readDocElements(org.w3c.dom.Document,org.w3c.dom.Node,javax.xml.stream.XMLStreamReader,org.apache.cxf.staxutils.StaxUtils$StreamToDOMContext)",
            "org.apache.cxf.staxutils.transform.InTransformReader:java.lang.String getAttributeValue(int)"
        ]
    },
    "org.apache.cxf.staxutils.DepthXMLStreamReader:java.lang.String getText()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DepthXMLStreamReader:java.lang.String getText()",
            "org.apache.cxf.staxutils.StaxUtils:void copy(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void readDocElements(org.w3c.dom.Document,org.w3c.dom.Node,javax.xml.stream.XMLStreamReader,boolean,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void readDocElements(org.w3c.dom.Document,org.w3c.dom.Node,javax.xml.stream.XMLStreamReader,org.apache.cxf.staxutils.StaxUtils$StreamToDOMContext)",
            "org.apache.cxf.staxutils.transform.InTransformReader:java.lang.String getText()"
        ]
    },
    "org.apache.cxf.common.jaxb.JAXBContextCache:void clearCaches()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.util.CacheMap:void clear()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void setProperties(java.util.Map)",
            "org.apache.cxf.bus.osgi.ManagedWorkQueueList:void shutDown()",
            "org.apache.cxf.common.jaxb.JAXBContextCache:void clearCaches()",
            "org.apache.cxf.common.util.CacheMap:void clear()",
            "org.apache.cxf.common.util.WeakIdentityHashMap:void clear()",
            "org.apache.cxf.endpoint.ClientImpl:void destroy()",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.cxf.databinding.source.XMLStreamDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:void writeParts(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.message.MessageContentsList,java.util.List)",
            "org.apache.cxf.interceptor.FaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.configuration.jsse.TLSParameterJaxBUtils:javax.net.ssl.KeyManager[] getKeyManagers(org.apache.cxf.configuration.security.KeyManagersType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.jsse.TLSClientParametersConfig:org.apache.cxf.configuration.jsse.TLSClientParameters createTLSClientParametersFromType(org.apache.cxf.configuration.security.TLSClientParametersType)",
            "org.apache.cxf.configuration.jsse.TLSServerParametersConfig:void <init>(org.apache.cxf.configuration.security.TLSServerParametersType)"
        ]
    },
    "org.apache.cxf.endpoint.SimpleEndpointImplFactory:org.apache.cxf.endpoint.EndpointImpl newEndpointImpl(org.apache.cxf.Bus,org.apache.cxf.service.Service,org.apache.cxf.service.model.EndpointInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:void <init>(org.apache.cxf.Bus,org.apache.cxf.service.Service,javax.xml.namespace.QName,org.apache.cxf.endpoint.EndpointImplFactory)"
        ]
    },
    "org.apache.cxf.validation.AbstractValidationInterceptor:java.lang.Object getServiceObject(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.validation.AbstractBeanValidationInterceptor:java.lang.Object getServiceObject(org.apache.cxf.message.Message)",
            "org.apache.cxf.validation.AbstractValidationInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.service.invoker.PooledFactory:java.lang.Object create(org.apache.cxf.message.Exchange)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.invoker.FactoryInvoker:java.lang.Object getServiceObject(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.service.invoker.PooledFactory:java.lang.Object createObject(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.service.invoker.SessionFactory:java.lang.Object create(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.service.invoker.SingletonFactory:void createBean(org.apache.cxf.message.Exchange)"
        ]
    },
    "org.apache.cxf.service.invoker.SingletonFactory:java.lang.Object create(org.apache.cxf.message.Exchange)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.invoker.FactoryInvoker:java.lang.Object getServiceObject(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.service.invoker.PooledFactory:java.lang.Object createObject(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.service.invoker.SessionFactory:java.lang.Object create(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.service.invoker.SingletonFactory:void createBean(org.apache.cxf.message.Exchange)"
        ]
    },
    "org.apache.cxf.interceptor.MessageSenderInterceptor:org.apache.cxf.transport.Conduit getConduit(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.MessageSenderInterceptor$MessageSenderEndingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.MessageSenderInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.feature.WrappedFeature:void initialize(org.apache.cxf.interceptor.InterceptorProvider,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.feature.WrappedFeature:void initialize(org.apache.cxf.interceptor.InterceptorProvider,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void addLoggingSupport(org.apache.cxf.endpoint.Endpoint,org.apache.cxf.Bus,org.apache.cxf.annotations.Logging)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void handleEvent(org.apache.cxf.service.factory.FactoryBeanListener$Event,org.apache.cxf.service.factory.AbstractServiceFactoryBean,java.lang.Object[])"
        ]
    },
    "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void addGZipSupport(org.apache.cxf.endpoint.Endpoint,org.apache.cxf.Bus,org.apache.cxf.annotations.GZIP)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void handleEvent(org.apache.cxf.service.factory.FactoryBeanListener$Event,org.apache.cxf.service.factory.AbstractServiceFactoryBean,java.lang.Object[])"
        ]
    },
    "org.apache.cxf.feature.WrappedFeature:void initialize(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void initializeFeatures()",
            "org.apache.cxf.feature.WrappedFeature:void initialize(org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.endpoint.AbstractConduitSelector:boolean matchAddresses(java.lang.String,java.lang.String,org.apache.cxf.endpoint.AbstractConduitSelector$ContextualBooleanGetter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.AbstractConduitSelector:org.apache.cxf.transport.Conduit findCompatibleConduit(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.feature.transform.XSLTOutInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.security.DelegatingAuthenticationInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.helpers.ServiceUtils:boolean isSchemaValidationEnabled(org.apache.cxf.annotations.SchemaValidation$SchemaValidationType,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:boolean shouldValidate(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:boolean shouldValidate(org.apache.cxf.message.Message)",
            "org.apache.cxf.staxutils.validation.StaxSchemaValidationInInterceptor:void setSchemaInMessage(org.apache.cxf.message.Message,javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.staxutils.validation.StaxSchemaValidationOutInterceptor:void setSchemaInMessage(org.apache.cxf.message.Message,javax.xml.stream.XMLStreamWriter)"
        ]
    },
    "org.apache.cxf.BusFactory:org.apache.cxf.Bus getDefaultBus(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.BusFactory:org.apache.cxf.Bus getDefaultBus()",
            "org.apache.cxf.BusFactory:org.apache.cxf.Bus createThreadBus()",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void shutdown(boolean)"
        ]
    },
    "org.apache.cxf.bus.spring.SpringBusFactory:void <init>(org.springframework.context.ApplicationContext)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.catalog.OASISCatalogManager:org.apache.cxf.catalog.OASISCatalogManager getContextCatalog()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.catalog.OASISCatalogManager:org.apache.cxf.catalog.OASISCatalogManager getCatalogManager(org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:void access$000(org.apache.cxf.endpoint.ClientImpl,org.apache.cxf.message.Exchange)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl$1:void onMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.ws.addressing.ContextUtils:org.apache.cxf.transport.Conduit getConduit(org.apache.cxf.transport.Conduit,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void execute(java.lang.Runnable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl$2:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.OneWayProcessorInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.ServiceInvokerInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl$WatchDog:void run()",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void execute(java.lang.Runnable,long)"
        ]
    },
    "org.apache.cxf.workqueue.AutomaticWorkQueueImpl$WatchDog:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.FileUtils:void maybeDeleteDefaultTempDir()",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl$3:void run()",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl$AWQThreadFactory$1:void run()",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl$DelayedTaskWrapper:void run()",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void execute(java.lang.Runnable,long)",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void schedule(java.lang.Runnable,long)",
            "org.apache.cxf.workqueue.OneShotAsyncExecutor:void execute(java.lang.Runnable)",
            "org.apache.cxf.workqueue.SynchronousExecutor:void execute(java.lang.Runnable)"
        ]
    },
    "org.apache.cxf.interceptor.ServiceInvokerInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.security.DelegatingAuthenticationInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.configuration.spring.MappingBeanDefinitionParser:org.springframework.beans.factory.support.AbstractBeanDefinition parseInternal(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.helpers.IOUtils:int copy(java.io.InputStream,java.io.OutputStream,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.IOUtils:int copy(java.io.InputStream,java.io.OutputStream)",
            "org.apache.cxf.helpers.IOUtils:int copyAndCloseInput(java.io.InputStream,java.io.OutputStream,int)"
        ]
    },
    "org.apache.cxf.helpers.IOUtils:void copyAtLeast(java.io.InputStream,java.io.OutputStream,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.LoggingInInterceptor:void logInputStream(org.apache.cxf.message.Message,java.io.InputStream,org.apache.cxf.interceptor.LoggingMessage,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.io.AbstractWrappedOutputStream:void write(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.IOUtils:int copy(java.io.InputStream,java.io.OutputStream,int)",
            "org.apache.cxf.helpers.IOUtils:void copyAtLeast(java.io.InputStream,java.io.OutputStream,int)",
            "org.apache.cxf.io.AbstractThresholdOutputStream:void write(byte[],int,int)",
            "org.apache.cxf.io.AbstractThresholdOutputStream:void unBuffer()",
            "org.apache.cxf.io.AbstractWrappedOutputStream:void write(byte[],int,int)",
            "org.apache.cxf.io.AbstractWrappedOutputStream:void write(byte[])",
            "org.apache.cxf.io.CacheAndWriteOutputStream:void write(byte[],int,int)",
            "org.apache.cxf.io.CachedOutputStream:void write(byte[],int,int)"
        ]
    },
    "org.apache.cxf.io.CacheAndWriteOutputStream:void write(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.IOUtils:int copy(java.io.InputStream,java.io.OutputStream,int)",
            "org.apache.cxf.helpers.IOUtils:void copyAtLeast(java.io.InputStream,java.io.OutputStream,int)",
            "org.apache.cxf.io.AbstractWrappedOutputStream:void write(byte[],int,int)",
            "org.apache.cxf.io.CacheAndWriteOutputStream:void write(byte[],int,int)",
            "org.apache.cxf.io.CachedOutputStream:void write(byte[],int,int)"
        ]
    },
    "org.apache.cxf.common.util.Base64Utility:void decode(char[],int,int,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.util.Base64Utility:void decode(java.lang.String,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.util.Base64Utility:void writeCharArrayToStream(char[],int,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.Base64Utility:void encodeAndStream(byte[],int,int,boolean,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.common.util.Base64Utility:void encodeChunk(byte[],int,int,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.io.CacheAndWriteOutputStream:void write(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.AttachmentSerializer:void writeProlog()",
            "org.apache.cxf.attachment.AttachmentSerializer:void writeAttachments()",
            "org.apache.cxf.attachment.ImageDataContentHandler:void writeTo(java.lang.Object,java.lang.String,java.io.OutputStream)",
            "org.apache.cxf.common.util.Base64Utility:void decode(char[],int,int,java.io.OutputStream)",
            "org.apache.cxf.common.util.Base64Utility:void decode(java.lang.String,java.io.OutputStream)",
            "org.apache.cxf.common.util.Base64Utility:void writeCharArrayToStream(char[],int,java.io.OutputStream)",
            "org.apache.cxf.common.util.Base64Utility:void encodeChunk(byte[],int,int,java.io.OutputStream)",
            "org.apache.cxf.io.CacheAndWriteOutputStream:void write(byte[])",
            "org.apache.cxf.io.CachedOutputStream:void write(byte[])"
        ]
    },
    "org.apache.cxf.io.AbstractWrappedOutputStream:void write(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.io.AbstractThresholdOutputStream:void write(int)",
            "org.apache.cxf.io.AbstractWrappedOutputStream:void write(int)",
            "org.apache.cxf.io.CacheAndWriteOutputStream:void write(int)",
            "org.apache.cxf.io.CachedOutputStream:void write(int)"
        ]
    },
    "org.apache.cxf.io.CacheAndWriteOutputStream:void write(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.io.AbstractWrappedOutputStream:void write(int)",
            "org.apache.cxf.io.CacheAndWriteOutputStream:void write(int)",
            "org.apache.cxf.io.CachedOutputStream:void write(int)"
        ]
    },
    "org.apache.cxf.configuration.jsse.SSLUtils:void loadDefaultKeyManagers(java.util.logging.Logger)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.jsse.SSLUtils:javax.net.ssl.KeyManager[] getDefaultKeyStoreManagers(java.util.logging.Logger)"
        ]
    },
    "org.apache.cxf.helpers.FileUtils:java.lang.String getStringFromFile(java.io.File)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.interceptor.AbstractLoggingInterceptor:void writePayload(java.lang.StringBuilder,java.io.StringWriter,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.LoggingOutInterceptor$LogWriter:void close()"
        ]
    },
    "org.apache.cxf.helpers.IOUtils:void copyAtLeast(java.io.Reader,java.io.Writer,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.helpers.IOUtils:void copy(java.io.Reader,java.io.Writer,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.IOUtils:void copyAndCloseInput(java.io.Reader,java.io.Writer)",
            "org.apache.cxf.helpers.IOUtils:void copyAndCloseInput(java.io.Reader,java.io.Writer,int)"
        ]
    },
    "org.apache.cxf.common.injection.ResourceInjector:void visitClass(java.lang.Class,java.lang.'annotation'.Annotation)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.annotation.AnnotationProcessor:void processClass(org.apache.cxf.common.'annotation'.AnnotationVisitor,java.lang.Class)"
        ]
    },
    "org.apache.cxf.bus.spring.ControlledValidationXmlBeanDefinitionReader:int fastInfosetLoadBeanDefinitions(org.springframework.core.io.support.EncodedResource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.ControlledValidationXmlBeanDefinitionReader:int loadBeanDefinitions(org.springframework.core.io.support.EncodedResource)"
        ]
    },
    "org.apache.cxf.databinding.stax.StaxDataBinding$XMLStreamDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,javax.xml.stream.XMLStreamWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.stax.StaxDataBinding$XMLStreamDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,java.lang.Object)"
        ]
    },
    "org.apache.cxf.databinding.stax.StaxDataBinding$XMLStreamDataWriter:void write(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.staxutils.transform.IgnoreNamespacesWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.PrettyPrintXMLStreamWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamWriter,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElementEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.cxf.staxutils.transform.IgnoreNamespacesWriter:void writeStartElement(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeStartElement(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.PrettyPrintXMLStreamWriter:void writeStartElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElementEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.cxf.staxutils.transform.IgnoreNamespacesWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.PrettyPrintXMLStreamWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeAttributeEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.cxf.staxutils.transform.IgnoreNamespacesWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.PrettyPrintXMLStreamWriter:void writeAttribute(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void writeElement(org.w3c.dom.Element,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void writeAttributeEvent(javax.xml.stream.events.XMLEvent,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.cxf.staxutils.validation.StaxSchemaValidationInInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.security.DelegatingAuthenticationInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.staxutils.validation.StaxSchemaValidationOutInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.security.DelegatingAuthenticationInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:org.apache.cxf.databinding.DataReader getDataReader(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.stax.StaxDataBindingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.ClientFaultConverter:void processFaultDetail(org.apache.cxf.interceptor.Fault,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:org.apache.cxf.databinding.DataReader getNodeDataReader(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.ClientFaultConverter:void processFaultDetail(org.apache.cxf.interceptor.Fault,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.staxutils.DepthXMLStreamReader:boolean hasNext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.source.XMLStreamDataReader:javax.xml.transform.dom.DOMSource read(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.staxutils.DepthXMLStreamReader:boolean hasNext()",
            "org.apache.cxf.staxutils.FragmentStreamReader:boolean hasNext()",
            "org.apache.cxf.staxutils.FragmentStreamReader:int next()",
            "org.apache.cxf.staxutils.StaxSource:void parse()",
            "org.apache.cxf.staxutils.StaxUtils:boolean toNextText(org.apache.cxf.staxutils.DepthXMLStreamReader)",
            "org.apache.cxf.staxutils.StaxUtils:boolean toNextTag(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.staxutils.StaxUtils:boolean toNextTag(org.apache.cxf.staxutils.DepthXMLStreamReader,javax.xml.namespace.QName)",
            "org.apache.cxf.staxutils.StaxUtils:boolean toNextElement(org.apache.cxf.staxutils.DepthXMLStreamReader)",
            "org.apache.cxf.staxutils.StaxUtils:void copy(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void readDocElements(org.w3c.dom.Document,org.w3c.dom.Node,javax.xml.stream.XMLStreamReader,boolean,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void readDocElements(org.w3c.dom.Document,org.w3c.dom.Node,javax.xml.stream.XMLStreamReader,org.apache.cxf.staxutils.StaxUtils$StreamToDOMContext)"
        ]
    },
    "org.apache.cxf.staxutils.FragmentStreamReader:boolean hasNext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.source.XMLStreamDataReader$2:boolean hasNext()",
            "org.apache.cxf.databinding.source.XMLStreamDataReader:javax.xml.transform.dom.DOMSource read(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.staxutils.DepthXMLStreamReader:boolean hasNext()",
            "org.apache.cxf.staxutils.FragmentStreamReader:boolean hasNext()",
            "org.apache.cxf.staxutils.StaxSource:void parse()",
            "org.apache.cxf.staxutils.StaxUtils:boolean toNextText(org.apache.cxf.staxutils.DepthXMLStreamReader)",
            "org.apache.cxf.staxutils.StaxUtils:boolean toNextTag(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.staxutils.StaxUtils:boolean toNextTag(org.apache.cxf.staxutils.DepthXMLStreamReader,javax.xml.namespace.QName)",
            "org.apache.cxf.staxutils.StaxUtils:boolean toNextElement(org.apache.cxf.staxutils.DepthXMLStreamReader)",
            "org.apache.cxf.staxutils.StaxUtils:void copy(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void readDocElements(org.w3c.dom.Document,org.w3c.dom.Node,javax.xml.stream.XMLStreamReader,boolean,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void readDocElements(org.w3c.dom.Document,org.w3c.dom.Node,javax.xml.stream.XMLStreamReader,org.apache.cxf.staxutils.StaxUtils$StreamToDOMContext)"
        ]
    },
    "org.apache.cxf.attachment.DelegatingInputStream:void transferTo(java.io.File)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.IOUtils:void transferTo(java.io.InputStream,java.io.File)"
        ]
    },
    "org.apache.cxf.bus.spring.SpringBeanLocator:void loadOSGIContext(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.SpringBeanLocator:void <init>(org.springframework.context.ApplicationContext,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus createBus(java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus createBus(java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus createBus(java.lang.String)"
        ]
    },
    "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus createBus(java.net.URL[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus createBus(java.net.URL,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus createBus(java.net.URL)"
        ]
    },
    "org.apache.cxf.common.logging.AbstractDelegatingLogger:boolean isLoggable(java.util.logging.Level)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.BusApplicationContext:org.springframework.core.io.Resource[] getConfigResources()",
            "org.apache.cxf.common.jaxb.JAXBUtils:void logGeneratedClassNames(java.util.logging.Logger,org.apache.cxf.common.jaxb.JAXBUtils$JCodeModel)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void log(java.util.logging.LogRecord)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void log(java.util.logging.Level,java.lang.String)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void log(java.util.logging.Level,java.lang.String,java.lang.Object)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void log(java.util.logging.Level,java.lang.String,java.lang.Object[])",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void logp(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void logp(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.Object)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void logp(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.Object[])",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void logp(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void logrb(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void logrb(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Object)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void logrb(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Object[])",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void logrb(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void entering(java.lang.String,java.lang.String)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void entering(java.lang.String,java.lang.String,java.lang.Object)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void entering(java.lang.String,java.lang.String,java.lang.Object[])",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void exiting(java.lang.String,java.lang.String)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void exiting(java.lang.String,java.lang.String,java.lang.Object)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void throwing(java.lang.String,java.lang.String,java.lang.Throwable)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void severe(java.lang.String)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void warning(java.lang.String)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void info(java.lang.String)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void config(java.lang.String)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void fine(java.lang.String)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void finer(java.lang.String)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void finest(java.lang.String)",
            "org.apache.cxf.common.logging.LogUtils:void log(java.util.logging.Logger,java.util.logging.Level,java.lang.String,java.lang.Throwable,java.lang.Object)",
            "org.apache.cxf.common.logging.LogUtils:void log(java.util.logging.Logger,java.util.logging.Level,java.lang.String,java.lang.Throwable,java.lang.Object[])",
            "org.apache.cxf.common.logging.LogUtils:void log(java.util.logging.Logger,java.util.logging.Level,java.lang.String,java.lang.Object[])",
            "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String[] getCiphersFromList(java.util.List,java.util.logging.Logger,boolean)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureBean(java.lang.String,java.lang.Object,boolean)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] doInvoke(org.apache.cxf.endpoint.ClientCallback,org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.ClientImpl:void setContext(java.util.Map,org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ClientImpl:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ClientImpl:org.apache.cxf.phase.PhaseInterceptorChain setupInterceptorChain(org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.interceptor.AbstractLoggingInterceptor:void log(java.util.logging.Logger,java.lang.String)",
            "org.apache.cxf.interceptor.FIStaxOutInterceptor:void logSetter(java.lang.String,java.lang.Object)",
            "org.apache.cxf.interceptor.LoggingInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.LoggingOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:org.apache.cxf.interceptor.InterceptorChain getOutInterceptorChain(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:org.apache.cxf.phase.PhaseInterceptorChain getChain(org.apache.cxf.message.Exchange,org.apache.cxf.phase.PhaseChainCache)",
            "org.apache.cxf.interceptor.security.AbstractAuthorizingInInterceptor:boolean authorize(org.apache.cxf.security.SecurityContext,java.lang.reflect.Method)",
            "org.apache.cxf.interceptor.security.OperationInfoAuthorizingInterceptor:boolean authorize(org.apache.cxf.security.SecurityContext,java.lang.String)",
            "org.apache.cxf.interceptor.security.SecureAnnotationsInterceptor:void setSecuredObject(java.lang.Object)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void <init>(org.apache.cxf.phase.PhaseInterceptorChain)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void <init>(java.util.SortedSet)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void doDefaultLogging(org.apache.cxf.message.Message,java.lang.Exception,java.lang.String)",
            "org.apache.cxf.resource.DefaultResourceManager:java.lang.Object findResource(java.lang.String,java.lang.Class,boolean,java.util.List)",
            "org.apache.cxf.service.invoker.AbstractInvoker:void checkSuspendedInvocation(org.apache.cxf.message.Exchange,java.lang.Object,java.lang.reflect.Method,java.util.List,java.lang.Throwable)",
            "org.apache.cxf.service.invoker.AbstractInvoker:java.lang.Object performInvocation(org.apache.cxf.message.Exchange,java.lang.Object,java.lang.reflect.Method,java.lang.Object[])",
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLInputFactory createXMLInputFactory(boolean)",
            "org.apache.cxf.staxutils.transform.InTransformReader:int next()",
            "org.apache.cxf.staxutils.transform.InTransformReader:void handleAppendMode(javax.xml.namespace.QName,org.apache.cxf.staxutils.transform.ElementProperty)",
            "org.apache.cxf.transport.AbstractObservable:void setMessageObserver(org.apache.cxf.transport.MessageObserver)",
            "org.apache.cxf.transport.common.gzip.GZIPOutInterceptor:org.apache.cxf.transport.common.gzip.GZIPOutInterceptor$UseGzip gzipPermitted(org.apache.cxf.message.Message,boolean)",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl$WatchDog:void run()",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:java.util.concurrent.ThreadPoolExecutor getExecutor()"
        ]
    },
    "org.apache.cxf.bus.osgi.CXFExtensionBundleListener$OSGiExtension:java.lang.Object load(java.lang.ClassLoader,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadAndRegister(org.apache.cxf.bus.extension.Extension)"
        ]
    },
    "org.apache.cxf.BusFactory:org.apache.cxf.BusFactory newInstance()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.BusFactory:org.apache.cxf.Bus getDefaultBus(boolean)"
        ]
    },
    "org.apache.cxf.BusFactory:org.apache.cxf.Bus getDefaultBus()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.AbstractDataBinding:org.apache.cxf.Bus getBus()"
        ]
    },
    "org.apache.cxf.databinding.AbstractDataBinding:org.apache.cxf.Bus getBus()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:java.lang.Class getClassForMetaData(org.osgi.service.blueprint.reflect.ComponentMetadata)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:java.lang.Object getBeanOfType(java.lang.String,java.lang.Class)",
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:java.util.List getBeanNamesOfType(java.lang.Class)",
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:java.util.Collection getBeansOfType(java.lang.Class)",
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)"
        ]
    },
    "org.apache.cxf.bus.blueprint.NamespaceHandlerRegisterer:void register(org.osgi.framework.BundleContext,org.apache.cxf.bus.blueprint.BlueprintNameSpaceHandlerFactory,java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.osgi.CXFActivator:void start(org.osgi.framework.BundleContext)"
        ]
    },
    "org.apache.cxf.bus.extension.Extension:org.apache.cxf.bus.extension.Extension cloneNoObject()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.extension.ExtensionRegistry:java.util.Map getRegisteredExtensions()"
        ]
    },
    "org.apache.cxf.bus.extension.Extension:java.lang.Class tryClass(java.lang.String,java.lang.ClassLoader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.extension.Extension:java.lang.Class getClassObject(java.lang.ClassLoader)",
            "org.apache.cxf.bus.extension.Extension:java.lang.Class loadInterface(java.lang.ClassLoader)",
            "org.apache.cxf.bus.osgi.CXFExtensionBundleListener$OSGiExtension:java.lang.Class tryClass(java.lang.String,java.lang.ClassLoader)"
        ]
    },
    "org.apache.cxf.bus.extension.TextExtensionFragmentParser:org.apache.cxf.bus.extension.Extension getExtensionFromTextLine(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.extension.TextExtensionFragmentParser:java.util.List getExtensions(java.io.InputStream)"
        ]
    },
    "org.apache.cxf.bus.osgi.CXFActivator:org.apache.cxf.bus.extension.Extension createOsgiBusListenerExtension(org.osgi.framework.BundleContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.osgi.CXFActivator:void start(org.osgi.framework.BundleContext)"
        ]
    },
    "org.apache.cxf.bus.osgi.CXFExtensionBundleListener$OSGiExtension:java.lang.Class tryClass(java.lang.String,java.lang.ClassLoader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.extension.Extension:java.lang.Class getClassObject(java.lang.ClassLoader)",
            "org.apache.cxf.bus.extension.Extension:java.lang.Class loadInterface(java.lang.ClassLoader)"
        ]
    },
    "org.apache.cxf.bus.osgi.ManagedWorkQueueList:void propertyChange(java.beans.PropertyChangeEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void notifyChangeListeners(java.beans.PropertyChangeEvent)"
        ]
    },
    "org.apache.cxf.bus.spring.BusApplicationContext:void initBeanDefinitionReader(org.springframework.beans.factory.xml.XmlBeanDefinitionReader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.BusApplicationContext:void loadBeanDefinitions(org.springframework.beans.factory.support.DefaultListableBeanFactory)"
        ]
    },
    "org.apache.cxf.bus.spring.SpringBusFactory:org.springframework.context.ConfigurableApplicationContext createAppContext(java.net.URL[],boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus createBus(java.net.URL[],boolean)"
        ]
    },
    "org.apache.cxf.bus.spring.BusApplicationContext:void setEntityResolvers(org.springframework.beans.factory.xml.XmlBeanDefinitionReader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.BusApplicationContext:void initBeanDefinitionReader(org.springframework.beans.factory.xml.XmlBeanDefinitionReader)"
        ]
    },
    "org.apache.cxf.bus.spring.SpringBeanLocator:void tryOSGI(java.util.Collection,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.SpringBeanLocator:java.util.Collection getBeansOfType(java.lang.Class)"
        ]
    },
    "org.apache.cxf.bus.spring.SpringBeanLocator:java.util.List getOSGiServices(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.SpringBusFactory:org.springframework.beans.factory.xml.NamespaceHandlerResolver tryFindNamespaceHandler(org.springframework.context.ApplicationContext)"
        ]
    },
    "org.apache.cxf.bus.spring.ControlledValidationXmlBeanDefinitionReader:void <init>(org.springframework.beans.factory.support.BeanDefinitionRegistry)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.BusApplicationContext:void loadBeanDefinitions(org.springframework.beans.factory.support.DefaultListableBeanFactory)"
        ]
    },
    "org.apache.cxf.bus.spring.TunedDocumentLoader:boolean hasFastInfoSet()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.ControlledValidationXmlBeanDefinitionReader:void <init>(org.springframework.beans.factory.support.BeanDefinitionRegistry)"
        ]
    },
    "org.apache.cxf.catalog.OASISCatalogManager:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.catalog.OASISCatalogManager:org.apache.cxf.catalog.OASISCatalogManager getContextCatalog()"
        ]
    },
    "org.apache.cxf.catalog.OASISCatalogManager:org.xml.sax.EntityResolver getResolver()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.catalog.OASISCatalogManager:void <init>()",
            "org.apache.cxf.catalog.OASISCatalogManager:void <init>(org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.catalog.OASISCatalogManager:void loadCatalog(java.net.URL)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.annotation.AnnotationProcessor:void <init>(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.injection.ResourceInjector:void inject(java.lang.Object,java.lang.Class)"
        ]
    },
    "org.apache.cxf.bus.spring.Jsr250BeanPostProcessor:boolean injectable(java.lang.Object,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.Jsr250BeanPostProcessor:java.lang.Object postProcessAfterInitialization(java.lang.Object,java.lang.String)",
            "org.apache.cxf.bus.spring.Jsr250BeanPostProcessor:java.lang.Object postProcessBeforeInitialization(java.lang.Object,java.lang.String)",
            "org.apache.cxf.bus.spring.Jsr250BeanPostProcessor:void postProcessBeforeDestruction(java.lang.Object,java.lang.String)"
        ]
    },
    "org.apache.cxf.common.injection.ResourceInjector:void <init>(org.apache.cxf.resource.ResourceManager,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.injection.ResourceInjector:void <init>(org.apache.cxf.resource.ResourceManager)"
        ]
    },
    "org.apache.cxf.common.injection.ResourceInjector:java.lang.reflect.Field getField(java.lang.Class,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.injection.ResourceInjector:java.lang.reflect.Field getField(java.lang.Class,java.lang.String)",
            "org.apache.cxf.common.injection.ResourceInjector:boolean processable(java.lang.Class,java.lang.Object)"
        ]
    },
    "org.apache.cxf.common.injection.ResourceInjector:boolean processable(java.lang.Class,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.Jsr250BeanPostProcessor:boolean injectable(java.lang.Object,java.lang.String)",
            "org.apache.cxf.common.injection.ResourceInjector:void inject(java.lang.Object,java.lang.Class)",
            "org.apache.cxf.common.injection.ResourceInjector:void construct(java.lang.Object)",
            "org.apache.cxf.common.injection.ResourceInjector:void construct(java.lang.Object,java.lang.Class)",
            "org.apache.cxf.common.injection.ResourceInjector:void destroy(java.lang.Object)"
        ]
    },
    "org.apache.cxf.common.injection.ResourceInjector:java.lang.reflect.Field findFieldForResource(javax.'annotation'.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.injection.ResourceInjector:void injectResourceClassLevel(javax.'annotation'.Resource)"
        ]
    },
    "org.apache.cxf.common.injection.ResourceInjector:java.lang.reflect.Method findSetterForResource(javax.'annotation'.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.injection.ResourceInjector:void injectResourceClassLevel(javax.'annotation'.Resource)"
        ]
    },
    "org.apache.cxf.common.injection.ResourceInjector:java.lang.String getResourceName(javax.'annotation'.Resource,java.lang.reflect.Method)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.injection.ResourceInjector:void visitMethod(java.lang.reflect.Method,java.lang.'annotation'.Annotation)"
        ]
    },
    "org.apache.cxf.common.injection.ResourceInjector:void injectField(java.lang.reflect.Field,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.injection.ResourceInjector:void injectResourceClassLevel(javax.'annotation'.Resource)",
            "org.apache.cxf.common.injection.ResourceInjector:void visitField(java.lang.reflect.Field,java.lang.'annotation'.Annotation)"
        ]
    },
    "org.apache.cxf.common.injection.ResourceInjector:java.lang.Class getResourceType(javax.'annotation'.Resource,java.lang.reflect.Field)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.injection.ResourceInjector:void injectResourceClassLevel(javax.'annotation'.Resource)",
            "org.apache.cxf.common.injection.ResourceInjector:void visitField(java.lang.reflect.Field,java.lang.'annotation'.Annotation)"
        ]
    },
    "org.apache.cxf.common.injection.ResourceInjector:java.lang.String getFieldNameForResource(javax.'annotation'.Resource,java.lang.reflect.Field)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.injection.ResourceInjector:void visitField(java.lang.reflect.Field,java.lang.'annotation'.Annotation)"
        ]
    },
    "org.apache.cxf.attachment.AttachmentSerializer:int encodeBase64(java.io.InputStream,java.io.OutputStream,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.AttachmentSerializer:void writeAttachments()"
        ]
    },
    "org.apache.cxf.attachment.Base64DecoderStream:boolean decodeStreamData()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.Base64DecoderStream:int getByte()",
            "org.apache.cxf.attachment.Base64DecoderStream:int getBytes(byte[],int,int)"
        ]
    },
    "org.apache.cxf.attachment.Base64DecoderStream:int fillEncodedBuffer()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.Base64DecoderStream:boolean decodeStreamData()"
        ]
    },
    "org.apache.cxf.common.util.Base64OutputStream:void encodeAndWrite(byte[],int,int,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.Base64OutputStream:void write(byte[],int,int)"
        ]
    },
    "org.apache.cxf.common.util.Base64OutputStream:void flush()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.AttachmentSerializer:void writeAttachments()",
            "org.apache.cxf.io.AbstractWrappedOutputStream:void flush()",
            "org.apache.cxf.io.CacheAndWriteOutputStream:void closeFlowthroughStream()",
            "org.apache.cxf.io.CacheAndWriteOutputStream:void postClose()",
            "org.apache.cxf.io.CachedOutputStream:void flush()",
            "org.apache.cxf.io.CachedOutputStream:void lockOutputStream()",
            "org.apache.cxf.io.CachedOutputStream:void close()",
            "org.apache.cxf.io.WriteOnCloseOutputStream:void doClose()"
        ]
    },
    "org.apache.cxf.common.util.Base64UrlUtility:byte[] decode(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.util.Base64UrlUtility:java.lang.String encodeChunk(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.Base64UrlUtility:java.lang.String encode(byte[])"
        ]
    },
    "org.apache.cxf.common.util.Base64UrlUtility:void encodeAndStream(byte[],int,int,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.util.Base64Utility:byte[] decodeChunk(char[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.Base64DecoderStream:boolean decodeStreamData()",
            "org.apache.cxf.common.util.Base64Utility:byte[] decode(java.lang.String,boolean)",
            "org.apache.cxf.common.util.Base64Utility:void decode(char[],int,int,java.io.OutputStream)",
            "org.apache.cxf.common.util.Base64Utility:void decode(java.lang.String,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.common.util.Base64Utility:byte[] decode(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.util.Base64Utility:byte[] decode(java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.Base64UrlUtility:byte[] decode(java.lang.String)",
            "org.apache.cxf.common.util.Base64Utility:byte[] decode(java.lang.String)"
        ]
    },
    "org.apache.cxf.common.util.Base64Utility:java.lang.String encode(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.MessageDigestInputStream:java.lang.String getBase64Digest()",
            "org.apache.cxf.resource.URIResolver:void tryFileSystem(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.common.util.Base64Utility:java.lang.String encode(byte[],boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.Base64Utility:java.lang.String encode(byte[])"
        ]
    },
    "org.apache.cxf.common.util.Base64Utility:char[] encodeChunk(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.Base64Utility:java.lang.String encode(byte[],boolean)",
            "org.apache.cxf.common.util.Base64Utility:void encodeChunk(byte[],int,int,java.io.OutputStream)",
            "org.apache.cxf.common.util.Base64Utility:void encode(byte[],int,int,java.io.Writer)"
        ]
    },
    "org.apache.cxf.common.util.Base64Utility:char[] encodeChunk(byte[],int,int,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.Base64UrlUtility:java.lang.String encodeChunk(byte[],int,int)",
            "org.apache.cxf.common.util.Base64Utility:char[] encodeChunk(byte[],int,int)"
        ]
    },
    "org.apache.cxf.common.util.Base64Utility:void encodeAndStream(byte[],int,int,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.AttachmentSerializer:int encodeBase64(java.io.InputStream,java.io.OutputStream,int)"
        ]
    },
    "org.apache.cxf.common.util.Base64Utility:void encodeAndStream(byte[],int,int,boolean,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.Base64OutputStream:void encodeAndWrite(byte[],int,int,boolean)",
            "org.apache.cxf.common.util.Base64OutputStream:void flush()",
            "org.apache.cxf.common.util.Base64UrlUtility:void encodeAndStream(byte[],int,int,java.io.OutputStream)",
            "org.apache.cxf.common.util.Base64Utility:void encodeAndStream(byte[],int,int,java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.common.util.Base64Utility:void encode(byte[],int,int,java.io.Writer)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.util.Base64Utility:int processEncodeme(char[],byte[],int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.Base64Utility:byte[] decodeChunk(char[],int,int)"
        ]
    },
    "org.apache.cxf.common.util.Base64Utility:boolean isValidBase64(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.Base64DecoderStream:int fillEncodedBuffer()"
        ]
    },
    "org.apache.cxf.common.util.MessageDigestInputStream:java.lang.String getBase64Digest()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.spring.BusApplicationContext$5:java.lang.String run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.BusApplicationContext$5:java.lang.Object run()"
        ]
    },
    "org.apache.cxf.common.util.Compiler:boolean internalCompile(java.lang.String[],int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.Compiler:boolean compileFiles(java.lang.String[])"
        ]
    },
    "org.apache.cxf.common.util.SystemPropertyAction:java.lang.String getProperty(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.jaxb.JAXBUtils:java.lang.ClassLoader getXJCClassLoader()",
            "org.apache.cxf.common.util.Compiler:void addArgs(java.util.List)",
            "org.apache.cxf.common.util.Compiler:boolean compileFiles(java.lang.String[])",
            "org.apache.cxf.common.util.Compiler:boolean internalCompile(java.lang.String[],int)",
            "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String getKeystore(java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String getKeystorePassword(java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String getKeyPassword(java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String getTrustStore(java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String getTrustStoreType(java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.helpers.FileUtils:java.io.File createTmpDir(boolean)",
            "org.apache.cxf.helpers.FileUtils:boolean isWindows()",
            "org.apache.cxf.io.CachedWriter:void setDefaultThreshold(int)"
        ]
    },
    "org.apache.cxf.common.util.SystemPropertyAction:java.lang.String getProperty(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String getKeystoreType(java.lang.String,java.util.logging.Logger,java.lang.String)",
            "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String getKeystoreProvider(java.lang.String,java.util.logging.Logger)",
            "org.apache.cxf.io.CachedOutputStream:void setDefaultThreshold(int)",
            "org.apache.cxf.io.CachedWriter:void setDefaultThreshold(int)"
        ]
    },
    "org.apache.cxf.common.util.SystemPropertyAction:java.lang.String getPropertyOrNull(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.BusFactory:java.lang.String getBusFactoryClass(java.lang.ClassLoader)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:java.lang.String getBusId(java.util.Map)",
            "org.apache.cxf.bus.spring.BusApplicationContext$5:java.lang.String run()",
            "org.apache.cxf.bus.spring.BusApplicationContext:org.springframework.core.io.Resource[] getConfigResources()",
            "org.apache.cxf.bus.spring.ControlledValidationXmlBeanDefinitionReader:void <init>(org.springframework.beans.factory.support.BeanDefinitionRegistry)",
            "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus createBus(java.lang.String[],boolean)",
            "org.apache.cxf.catalog.OASISCatalogManager:void <clinit>()",
            "org.apache.cxf.common.util.ClassHelper:org.apache.cxf.common.util.ClassHelper getClassHelper()",
            "org.apache.cxf.common.util.ClasspathScanner:org.apache.cxf.common.util.ClasspathScanner getClasspathScanner()",
            "org.apache.cxf.helpers.FileUtils:java.io.File getDefaultTempDir()",
            "org.apache.cxf.io.CachedOutputStream:void setDefaultCipherTransformation(java.lang.String)",
            "org.apache.cxf.io.CachedOutputStream:void <clinit>()",
            "org.apache.cxf.io.CachedWriter:void setDefaultCipherTransformation(java.lang.String)",
            "org.apache.cxf.io.CachedWriter:void <clinit>()",
            "org.apache.cxf.resource.URIResolver:void tryFileSystem(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:int getInteger(java.lang.String,int)",
            "org.apache.cxf.staxutils.StaxUtils:long getLong(java.lang.String,long)",
            "org.apache.cxf.staxutils.StaxUtils:void <clinit>()"
        ]
    },
    "org.apache.cxf.helpers.FileUtils:java.io.File getDefaultTempDir()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.FileUtils:boolean isValidFileName(java.lang.String)",
            "org.apache.cxf.helpers.FileUtils:java.io.File createTempFile(java.lang.String,java.lang.String,java.io.File,boolean)"
        ]
    },
    "org.apache.cxf.helpers.FileUtils:boolean isWindows()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.FileUtils:void delete(java.io.File,boolean)"
        ]
    },
    "org.apache.cxf.io.CachedOutputStream:void setDefaultThreshold(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.io.CachedOutputStream:void <clinit>()"
        ]
    },
    "org.apache.cxf.io.CachedOutputStream:void setDefaultCipherTransformation(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.io.CachedOutputStream:void <clinit>()"
        ]
    },
    "org.apache.cxf.io.CachedOutputStream:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.AttachmentDataSource:void cache(org.apache.cxf.message.Message)",
            "org.apache.cxf.attachment.AttachmentDeserializer:void cache(org.apache.cxf.attachment.DelegatingInputStream)",
            "org.apache.cxf.databinding.source.NodeDataReader:java.lang.Object read(javax.xml.namespace.QName,org.w3c.dom.Node,java.lang.Class)",
            "org.apache.cxf.databinding.source.XMLStreamDataReader:java.io.InputStream getInputStream(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.feature.transform.XSLTInInterceptor:void transformXReader(org.apache.cxf.message.Message,javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.feature.transform.XSLTOutInterceptor:void transformOS(org.apache.cxf.message.Message,java.io.OutputStream)",
            "org.apache.cxf.feature.transform.XSLTUtils:java.io.InputStream transform(javax.xml.transform.Templates,java.io.InputStream)",
            "org.apache.cxf.interceptor.LoggingInInterceptor:void logInputStream(org.apache.cxf.message.Message,java.io.InputStream,org.apache.cxf.interceptor.LoggingMessage,java.lang.String,java.lang.String)",
            "org.apache.cxf.io.CachedOutputStream$TransferableFileInputStream:void close()",
            "org.apache.cxf.io.CachedOutputStream:void <init>()",
            "org.apache.cxf.io.CachedOutputStream:void <init>(long)",
            "org.apache.cxf.io.CachedOutputStream:void readBusProperties()",
            "org.apache.cxf.io.CachedOutputStream:void setDefaultMaxSize(long)",
            "org.apache.cxf.io.CachedOutputStream:void setDefaultThreshold(int)",
            "org.apache.cxf.io.CachedOutputStream:void setDefaultCipherTransformation(java.lang.String)",
            "org.apache.cxf.io.CachedOutputStream:void <clinit>()",
            "org.apache.cxf.io.DelegatingInputStream:void cacheInput()"
        ]
    },
    "org.apache.cxf.io.CachedWriter:void setDefaultThreshold(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.io.CachedWriter:void <clinit>()"
        ]
    },
    "org.apache.cxf.io.CachedWriter:void setDefaultCipherTransformation(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.io.CachedWriter:void <clinit>()"
        ]
    },
    "org.apache.cxf.io.CachedWriter:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.feature.transform.XSLTOutInterceptor:void transformXWriter(org.apache.cxf.message.Message,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.feature.transform.XSLTUtils:java.io.Reader transform(javax.xml.transform.Templates,java.io.Reader)",
            "org.apache.cxf.interceptor.LoggingInInterceptor:void logReader(org.apache.cxf.message.Message,java.io.Reader,org.apache.cxf.interceptor.LoggingMessage)",
            "org.apache.cxf.io.CachedWriter$1:void close()",
            "org.apache.cxf.io.CachedWriter$3:void close()",
            "org.apache.cxf.io.CachedWriter$4:void close()",
            "org.apache.cxf.io.CachedWriter:void <init>()",
            "org.apache.cxf.io.CachedWriter:void <init>(long)",
            "org.apache.cxf.io.CachedWriter:void readBusProperties()",
            "org.apache.cxf.io.CachedWriter:void setDefaultMaxSize(long)",
            "org.apache.cxf.io.CachedWriter:void setDefaultThreshold(int)",
            "org.apache.cxf.io.CachedWriter:void setDefaultCipherTransformation(java.lang.String)",
            "org.apache.cxf.io.CachedWriter:void <clinit>()"
        ]
    },
    "org.apache.cxf.common.xmlschema.XmlSchemaUtils:void setElementRefName(org.apache.ws.commons.schema.XmlSchemaElement,javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.xmlschema.XmlSchemaUtils:org.apache.ws.commons.schema.XmlSchemaElement findElementByRefName(org.apache.cxf.common.xmlschema.SchemaCollection,javax.xml.namespace.QName,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.xmlschema.XmlSchemaUtils:java.util.List getContentAttributes(org.apache.ws.commons.schema.XmlSchemaComplexType,org.apache.cxf.common.xmlschema.SchemaCollection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:java.util.List getContentAttributes(org.apache.ws.commons.schema.XmlSchemaComplexType,org.apache.cxf.common.xmlschema.SchemaCollection)"
        ]
    },
    "org.apache.cxf.common.xmlschema.XmlSchemaUtils:boolean isAttributeQualified(org.apache.ws.commons.schema.XmlSchemaAttribute,boolean,org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchema)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.xmlschema.XmlSchemaUtils:boolean isElementQualified(org.apache.ws.commons.schema.XmlSchemaElement,boolean,org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchema)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String getKeystoreType(java.lang.String,java.util.logging.Logger)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.configuration.jsse.SSLUtils:void logUnSupportedPolicies(java.lang.Object,boolean,java.lang.String[],java.util.logging.Logger)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.configuration.jsse.TLSParameterJaxBUtils:char[] getKeyPassword(org.apache.cxf.configuration.security.KeyManagersType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.jsse.TLSParameterJaxBUtils:javax.net.ssl.KeyManager[] getKeyManagers(org.apache.cxf.configuration.security.KeyManagersType)"
        ]
    },
    "org.apache.cxf.bus.spring.BusDefinitionParser:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.BusDefinitionParser:void doParse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder)",
            "org.apache.cxf.bus.spring.BusDefinitionParser:java.lang.String resolveId(org.w3c.dom.Element,org.springframework.beans.factory.support.AbstractBeanDefinition,org.springframework.beans.factory.xml.ParserContext)",
            "org.apache.cxf.bus.spring.BusDefinitionParser:void <clinit>()",
            "org.apache.cxf.bus.spring.NamespaceHandler:void init()"
        ]
    },
    "org.apache.cxf.bus.spring.NamespaceHandler:void init()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.configuration.spring.AbstractFactoryBeanDefinitionParser:void setFactoriesAreAbstract(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.configuration.spring.AbstractFactoryBeanDefinitionParser:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.AbstractFactoryBeanDefinitionParser:void setFactoriesAreAbstract(boolean)",
            "org.apache.cxf.configuration.spring.AbstractFactoryBeanDefinitionParser:void doParse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder)",
            "org.apache.cxf.configuration.spring.AbstractFactoryBeanDefinitionParser:void <clinit>()"
        ]
    },
    "org.apache.cxf.databinding.source.SourceDataBinding:org.apache.cxf.databinding.DataReader createReader(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:org.apache.cxf.databinding.DataReader getDataReader(org.apache.cxf.message.Message,java.lang.Class)"
        ]
    },
    "org.apache.cxf.databinding.source.SourceDataBinding:org.apache.cxf.databinding.DataWriter createWriter(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:org.apache.cxf.databinding.DataWriter getDataWriter(org.apache.cxf.message.Message,org.apache.cxf.service.Service,java.lang.Class)",
            "org.apache.cxf.interceptor.FaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.endpoint.AbstractEndpointFactory:void initializeAnnotationInterceptors(org.apache.cxf.endpoint.Endpoint,java.lang.Class[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.endpoint.ClientImpl:void setContext(java.util.Map,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] doInvoke(org.apache.cxf.endpoint.ClientCallback,org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)"
        ]
    },
    "org.apache.cxf.endpoint.DeferredConduitSelector:java.util.logging.Logger getLogger()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.AbstractConduitSelector:org.apache.cxf.transport.Conduit getSelectedConduit(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.AbstractConduitSelector:org.apache.cxf.transport.Conduit createConduit(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.transport.ConduitInitiator)"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:void setConduitSelector(org.apache.cxf.endpoint.ConduitSelector)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:org.apache.cxf.endpoint.ConduitSelector getConduitSelector(org.apache.cxf.endpoint.ConduitSelector)"
        ]
    },
    "org.apache.cxf.endpoint.UpfrontConduitSelector:java.util.logging.Logger getLogger()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.AbstractConduitSelector:org.apache.cxf.transport.Conduit getSelectedConduit(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.AbstractConduitSelector:org.apache.cxf.transport.Conduit createConduit(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.transport.ConduitInitiator)"
        ]
    },
    "org.apache.cxf.feature.transform.XSLTFeature:void initializeProvider(org.apache.cxf.interceptor.InterceptorProvider,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.feature.AbstractFeature:void initialize(org.apache.cxf.endpoint.Server,org.apache.cxf.Bus)",
            "org.apache.cxf.feature.AbstractFeature:void initialize(org.apache.cxf.endpoint.Client,org.apache.cxf.Bus)",
            "org.apache.cxf.feature.AbstractFeature:void initialize(org.apache.cxf.interceptor.InterceptorProvider,org.apache.cxf.Bus)",
            "org.apache.cxf.feature.AbstractFeature:void initialize(org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.feature.transform.XSLTOutInterceptor:java.util.logging.Logger access$000()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.feature.transform.XSLTOutInterceptor$XSLTCachedOutputStreamCallback:void onClose(org.apache.cxf.io.CachedOutputStream)",
            "org.apache.cxf.feature.transform.XSLTOutInterceptor$XSLTCachedWriter:void doClose()",
            "org.apache.cxf.feature.transform.XSLTOutInterceptor$XSLTStreamWriter:void close()"
        ]
    },
    "org.apache.cxf.helpers.FileUtils:java.io.File createTmpDir()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.interceptor.AttachmentInInterceptor:java.util.List getSupportedTypes()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.AttachmentInInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.feature.FastInfosetFeature:void initializeProvider(org.apache.cxf.interceptor.InterceptorProvider,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.feature.AbstractFeature:void initialize(org.apache.cxf.endpoint.Server,org.apache.cxf.Bus)",
            "org.apache.cxf.feature.AbstractFeature:void initialize(org.apache.cxf.endpoint.Client,org.apache.cxf.Bus)",
            "org.apache.cxf.feature.AbstractFeature:void initialize(org.apache.cxf.interceptor.InterceptorProvider,org.apache.cxf.Bus)",
            "org.apache.cxf.feature.AbstractFeature:void initialize(org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.interceptor.FIStaxOutInterceptor:void handleFault(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:void unwind(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.FIStaxOutInterceptor:void logSetter(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.FIStaxOutInterceptor:void setSerializerMinAttributeValueSize(java.lang.Integer)",
            "org.apache.cxf.interceptor.FIStaxOutInterceptor:void setSerializerMaxAttributeValueSize(java.lang.Integer)",
            "org.apache.cxf.interceptor.FIStaxOutInterceptor:void setSerializerCharacterContentChunkMapMemoryLimit(java.lang.Integer)",
            "org.apache.cxf.interceptor.FIStaxOutInterceptor:void setSerializerMinCharacterContentChunkSize(java.lang.Integer)",
            "org.apache.cxf.interceptor.FIStaxOutInterceptor:void setSerializerMaxCharacterContentChunkSize(java.lang.Integer)",
            "org.apache.cxf.interceptor.FIStaxOutInterceptor:void setSerializerAttributeValueMapMemoryLimit(java.lang.Integer)"
        ]
    },
    "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void addFastInfosetSupport(org.apache.cxf.interceptor.InterceptorProvider,org.apache.cxf.annotations.FastInfoset)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void handleEvent(org.apache.cxf.service.factory.FactoryBeanListener$Event,org.apache.cxf.service.factory.AbstractServiceFactoryBean,java.lang.Object[])"
        ]
    },
    "org.apache.cxf.interceptor.FaultOutInterceptor:java.lang.Object getFaultBean(java.lang.Throwable,org.apache.cxf.service.model.FaultInfo,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.FaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.feature.LoggingFeature:void initializeProvider(org.apache.cxf.interceptor.InterceptorProvider,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.feature.AbstractFeature:void initialize(org.apache.cxf.endpoint.Server,org.apache.cxf.Bus)",
            "org.apache.cxf.feature.AbstractFeature:void initialize(org.apache.cxf.endpoint.Client,org.apache.cxf.Bus)",
            "org.apache.cxf.feature.AbstractFeature:void initialize(org.apache.cxf.interceptor.InterceptorProvider,org.apache.cxf.Bus)",
            "org.apache.cxf.feature.AbstractFeature:void initialize(org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.feature.LoggingFeature:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void <init>(java.util.Map,java.util.Map,java.lang.ClassLoader)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void setFeatures(java.util.Collection)",
            "org.apache.cxf.feature.LoggingFeature:void initializeProvider(org.apache.cxf.interceptor.InterceptorProvider,org.apache.cxf.Bus)",
            "org.apache.cxf.feature.LoggingFeature:void <clinit>()",
            "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void addLoggingSupport(org.apache.cxf.endpoint.Endpoint,org.apache.cxf.Bus,org.apache.cxf.annotations.Logging)"
        ]
    },
    "org.apache.cxf.interceptor.LoggingInInterceptor:java.util.logging.Logger getLogger()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.AbstractLoggingInterceptor:java.util.logging.Logger getMessageLogger(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractLoggingInterceptor:void setOutputLocation(java.lang.String)"
        ]
    },
    "org.apache.cxf.interceptor.LoggingOutInterceptor$LogWriter:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.jaxb.JAXBUtils:void closeUnmarshaller(javax.xml.bind.Unmarshaller)",
            "org.apache.cxf.endpoint.ClientImpl:void destroy()",
            "org.apache.cxf.endpoint.ServerImpl:void stop()",
            "org.apache.cxf.feature.transform.XSLTOutInterceptor$XSLTCachedWriter:void doClose()",
            "org.apache.cxf.io.CachedWriter:void close()",
            "org.apache.cxf.io.CachedWriter:void resetOut(java.io.Writer,boolean)",
            "org.apache.cxf.io.CachedWriter:void createFileOutputStream()",
            "org.apache.cxf.io.CachedWriter:void maybeDeleteTempFile(java.lang.Object)"
        ]
    },
    "org.apache.cxf.interceptor.LoggingOutInterceptor:java.util.logging.Logger getLogger()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.AbstractLoggingInterceptor:java.util.logging.Logger getMessageLogger(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractLoggingInterceptor:void setOutputLocation(java.lang.String)"
        ]
    },
    "org.apache.cxf.service.factory.AbstractServiceFactoryBean:void initializeDefaultInterceptors()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.interceptor.security.AbstractSecurityContextInInterceptor:void reportSecurityException(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.interceptor.security.JAASAuthenticationFeature:void initializeProvider(org.apache.cxf.interceptor.InterceptorProvider,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.feature.AbstractFeature:void initialize(org.apache.cxf.endpoint.Server,org.apache.cxf.Bus)",
            "org.apache.cxf.feature.AbstractFeature:void initialize(org.apache.cxf.endpoint.Client,org.apache.cxf.Bus)",
            "org.apache.cxf.feature.AbstractFeature:void initialize(org.apache.cxf.interceptor.InterceptorProvider,org.apache.cxf.Bus)",
            "org.apache.cxf.feature.AbstractFeature:void initialize(org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.interceptor.security.NameDigestPasswordCallbackHandler:void handle(javax.security.auth.callback.Callback[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.jsse.TLSParameterJaxBUtils:char[] getKeyPassword(org.apache.cxf.configuration.security.KeyManagersType)",
            "org.apache.cxf.interceptor.security.JAASLoginInterceptor:java.lang.String getUsername(javax.security.auth.callback.CallbackHandler)"
        ]
    },
    "org.apache.cxf.interceptor.security.NameDigestPasswordCallbackHandler:boolean invokePasswordCallback(javax.security.auth.callback.Callback)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.security.NameDigestPasswordCallbackHandler:void handle(javax.security.auth.callback.Callback[])"
        ]
    },
    "org.apache.cxf.interceptor.security.callback.CallbackHandlerProviderUsernameToken:javax.security.auth.callback.CallbackHandler create(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.security.JAASLoginInterceptor:javax.security.auth.callback.CallbackHandler getFirstCallbackHandler(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.security.JAASLoginInterceptor:javax.security.auth.callback.CallbackHandler getCallbackHandler(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.interceptor.security.NamePasswordCallbackHandler:void handle(javax.security.auth.callback.Callback[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.jsse.TLSParameterJaxBUtils:char[] getKeyPassword(org.apache.cxf.configuration.security.KeyManagersType)",
            "org.apache.cxf.interceptor.security.JAASLoginInterceptor:java.lang.String getUsername(javax.security.auth.callback.CallbackHandler)"
        ]
    },
    "org.apache.cxf.interceptor.security.NamePasswordCallbackHandler:boolean invokePasswordCallback(javax.security.auth.callback.Callback)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.security.NamePasswordCallbackHandler:void handle(javax.security.auth.callback.Callback[])"
        ]
    },
    "org.apache.cxf.interceptor.security.callback.CallbackHandlerProviderAuthPol:javax.security.auth.callback.CallbackHandler create(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.security.JAASLoginInterceptor:javax.security.auth.callback.CallbackHandler getFirstCallbackHandler(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.ServiceInvokerInterceptor$2:void done()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.phase.PhaseInterceptorChain:void <init>(org.apache.cxf.phase.PhaseInterceptorChain)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:org.apache.cxf.phase.PhaseInterceptorChain cloneChain()"
        ]
    },
    "org.apache.cxf.phase.PhaseInterceptorChain:org.apache.cxf.message.Message getCurrentMessage()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean setCurrentMessage(org.apache.cxf.phase.PhaseInterceptorChain,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.phase.PhaseInterceptorChain:boolean setCurrentMessage(org.apache.cxf.phase.PhaseInterceptorChain,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.ServiceInvokerInterceptor$2:void done()",
            "org.apache.cxf.interceptor.ServiceInvokerInterceptor$2:void run()"
        ]
    },
    "org.apache.cxf.phase.PhaseInterceptorChain:org.apache.cxf.phase.PhaseInterceptorChain cloneChain()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseChainCache:org.apache.cxf.phase.PhaseInterceptorChain getChain(java.util.concurrent.atomic.AtomicReference,java.util.SortedSet,java.util.List[])"
        ]
    },
    "org.apache.cxf.phase.PhaseInterceptorChain:void pause()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.OneWayProcessorInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.phase.PhaseInterceptorChain:void suspend()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.phase.PhaseInterceptorChain:void outputChainToLog(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:void updateIterator()",
            "org.apache.cxf.phase.PhaseInterceptorChain:void insertInterceptor(int,org.apache.cxf.phase.PhaseInterceptor,boolean)"
        ]
    },
    "org.apache.cxf.resource.ExtendedURIResolver:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.TransportURIResolver:void <init>(org.apache.cxf.Bus)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils$SchemaLSResourceResolver:void <init>(java.util.Map,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.service.invoker.AbstractInvoker:void checkSuspendedInvocation(org.apache.cxf.message.Exchange,java.lang.Object,java.lang.reflect.Method,java.util.List,java.lang.Throwable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.invoker.AbstractInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object,java.lang.reflect.Method,java.util.List)"
        ]
    },
    "org.apache.cxf.service.invoker.AbstractInvoker:org.apache.cxf.interceptor.Fault createFault(java.lang.Throwable,java.lang.reflect.Method,java.util.List,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.invoker.AbstractInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object,java.lang.reflect.Method,java.util.List)"
        ]
    },
    "org.apache.cxf.service.invoker.AbstractInvoker:java.lang.Object performInvocation(org.apache.cxf.message.Exchange,java.lang.Object,java.lang.reflect.Method,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.invoker.AbstractInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object,java.lang.reflect.Method,java.util.List)"
        ]
    },
    "org.apache.cxf.service.invoker.AbstractInvoker:java.lang.reflect.Method matchMethod(java.lang.reflect.Method,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.invoker.AbstractInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object)"
        ]
    },
    "org.apache.cxf.service.invoker.FactoryInvoker:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.invoker.FactoryInvoker:java.lang.Object getServiceObject(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.service.invoker.FactoryInvoker:void <clinit>()",
            "org.apache.cxf.service.invoker.SessionFactory:java.lang.Object create(org.apache.cxf.message.Exchange)"
        ]
    },
    "org.apache.cxf.binding.AbstractBindingFactory:org.apache.cxf.service.model.BindingInfo createBindingInfo(org.apache.cxf.service.model.ServiceInfo,java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.service.model.ServiceInfo:org.apache.cxf.service.model.InterfaceInfo createInterface(javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.service.model.OperationInfo:boolean equals(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:boolean containsValue(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:javax.activation.DataHandler get(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:javax.activation.DataHandler remove(java.lang.Object)",
            "org.apache.cxf.configuration.jsse.TLSClientParameters:boolean equals(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] processResult(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,java.util.Map)",
            "org.apache.cxf.interceptor.ClientOutFaultObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.service.factory.SimpleMethodDispatcher:org.apache.cxf.service.model.BindingOperationInfo getBindingOperation(java.lang.reflect.Method,org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.service.factory.SimpleMethodDispatcher:org.apache.cxf.service.model.BindingOperationInfo getRealOperation(org.apache.cxf.service.model.OperationInfo,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:boolean equals(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cxf.staxutils.transform.InTransformReader:void handleAppendMode(javax.xml.namespace.QName,org.apache.cxf.staxutils.transform.ElementProperty)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.transform.InTransformReader:int next()"
        ]
    },
    "org.apache.cxf.staxutils.validation.ResolvingGrammarReaderController:void error(org.xml.sax.Locator[],java.lang.String,java.lang.Exception)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.staxutils.validation.ResolvingGrammarReaderController:void warning(org.xml.sax.Locator[],java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.staxutils.validation.Stax2ValidationUtils$1:void reportProblem(org.codehaus.stax2.validation.XMLValidationProblem)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.staxutils.validation.Stax2ValidationUtils$2:void reportProblem(org.codehaus.stax2.validation.XMLValidationProblem)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.staxutils.validation.Stax2ValidationUtils:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.validation.WoodstoxValidationImpl:void <init>()"
        ]
    },
    "org.apache.cxf.staxutils.validation.Stax2ValidationUtils:java.util.logging.Logger access$000()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.validation.Stax2ValidationUtils$1:void reportProblem(org.codehaus.stax2.validation.XMLValidationProblem)",
            "org.apache.cxf.staxutils.validation.Stax2ValidationUtils$2:void reportProblem(org.codehaus.stax2.validation.XMLValidationProblem)"
        ]
    },
    "org.apache.cxf.staxutils.validation.WoodstoxValidationImpl:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.source.XMLStreamDataReader:org.w3c.dom.Element validate(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.staxutils.validation.StaxSchemaValidationInInterceptor:void setSchemaInMessage(org.apache.cxf.message.Message,javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.staxutils.validation.StaxSchemaValidationOutInterceptor:void setSchemaInMessage(org.apache.cxf.message.Message,javax.xml.stream.XMLStreamWriter)"
        ]
    },
    "org.apache.cxf.transport.common.gzip.GZIPFeature:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void addGZipSupport(org.apache.cxf.endpoint.Endpoint,org.apache.cxf.Bus,org.apache.cxf.annotations.GZIP)",
            "org.apache.cxf.transport.common.gzip.GZIPFeature:void initializeProvider(org.apache.cxf.interceptor.InterceptorProvider,org.apache.cxf.Bus)",
            "org.apache.cxf.transport.common.gzip.GZIPFeature:void <clinit>()"
        ]
    },
    "org.apache.cxf.transport.common.gzip.GZIPFeature:void initializeProvider(org.apache.cxf.interceptor.InterceptorProvider,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.feature.AbstractFeature:void initialize(org.apache.cxf.endpoint.Server,org.apache.cxf.Bus)",
            "org.apache.cxf.feature.AbstractFeature:void initialize(org.apache.cxf.endpoint.Client,org.apache.cxf.Bus)",
            "org.apache.cxf.feature.AbstractFeature:void initialize(org.apache.cxf.interceptor.InterceptorProvider,org.apache.cxf.Bus)",
            "org.apache.cxf.feature.AbstractFeature:void initialize(org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.transport.common.gzip.GZIPOutInterceptor$GZipThresholdOutputStream:void thresholdNotReached()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.io.AbstractThresholdOutputStream:void close()"
        ]
    },
    "org.apache.cxf.transport.common.gzip.GZIPOutInterceptor:java.util.logging.Logger access$000()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.common.gzip.GZIPOutInterceptor$GZipThresholdOutputStream:void thresholdNotReached()",
            "org.apache.cxf.transport.common.gzip.GZIPOutInterceptor$GZipThresholdOutputStream:void thresholdReached()"
        ]
    },
    "org.apache.cxf.validation.BeanValidationProvider:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.validation.AbstractValidationInterceptor:org.apache.cxf.validation.BeanValidationProvider getProvider(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:java.util.concurrent.ThreadPoolExecutor getExecutor()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void execute(java.lang.Runnable)",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void execute(java.lang.Runnable,long)"
        ]
    },
    "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:java.util.logging.Logger access$000()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl$WatchDog:void run()"
        ]
    },
    "org.apache.cxf.ws.addressing.ContextUtils:org.apache.cxf.ws.addressing.AddressingProperties retrieveMAPs(org.apache.cxf.message.Message,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.addressing.ContextUtils:void storeMAPs(org.apache.cxf.ws.addressing.AddressingProperties,org.apache.cxf.message.Message,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.addressing.ContextUtils:void storeMAPs(org.apache.cxf.ws.addressing.AddressingProperties,org.apache.cxf.message.Message,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.addressing.ContextUtils:org.apache.cxf.ws.addressing.AttributedURIType getAttributedURI(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.addressing.ContextUtils:org.apache.cxf.ws.addressing.RelatesToType getRelatesTo(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.addressing.ContextUtils:void propogateReceivedMAPs(org.apache.cxf.ws.addressing.AddressingProperties,org.apache.cxf.message.Exchange)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.addressing.ContextUtils:void propogateReceivedMAPs(org.apache.cxf.ws.addressing.AddressingProperties,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.ContextUtils:void propogateReceivedMAPs(org.apache.cxf.ws.addressing.AddressingProperties,org.apache.cxf.message.Exchange)"
        ]
    },
    "org.apache.cxf.ws.addressing.ContextUtils:void setJAXBContext(javax.xml.bind.JAXBContext)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.addressing.ContextUtils:org.apache.cxf.ws.addressing.EndpointReferenceType getNoneEndpointReference()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.addressing.ContextUtils:void applyReferenceParam(org.apache.cxf.ws.addressing.EndpointReferenceType,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.ReferenceParametersType convert(org.apache.cxf.ws.addressing.v200408.ReferenceParametersType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.VersionTransformer:org.apache.cxf.ws.addressing.EndpointReferenceType convert(org.apache.cxf.ws.addressing.v200408.EndpointReferenceType)"
        ]
    },
    "org.apache.cxf.service.model.EndpointInfo:void setAddress(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.TransportURIResolver:org.xml.sax.InputSource resolve(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.transport.AbstractDestination$AbstractBackChannelConduit:void <init>(org.apache.cxf.transport.AbstractDestination)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.addressing.EndpointReferenceUtils:org.apache.cxf.ws.addressing.EndpointReferenceType getEndpointReference(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.model.EndpointInfo:void setAddress(java.lang.String)",
            "org.apache.cxf.ws.addressing.ContextUtils:void <clinit>()"
        ]
    },
    "org.apache.cxf.ws.addressing.EndpointReferenceUtils:org.apache.cxf.ws.addressing.EndpointReferenceType getAnonymousEndpointReference()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.transport.AbstractDestination$AbstractBackChannelConduit:void <init>(org.apache.cxf.transport.AbstractDestination)"
        ]
    },
    "org.apache.cxf.ws.addressing.EndpointReferenceUtils:java.util.logging.Logger access$000()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils$SchemaLSResourceResolver:org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.common.util.ClassHelper:java.lang.Class getRealClassFromClass(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.util.ClassHelper:java.lang.Object getRealObject(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.injection.ResourceInjector:void injectField(java.lang.reflect.Field,java.lang.Object)"
        ]
    },
    "org.apache.cxf.common.util.SpringClasspathScanner:org.springframework.core.io.support.ResourcePatternResolver getResolver(java.lang.ClassLoader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.SpringClasspathScanner:java.util.Map findClassesInternal(java.util.Collection,java.util.List,java.lang.ClassLoader)",
            "org.apache.cxf.common.util.SpringClasspathScanner:java.util.List findResourcesInternal(java.util.Collection,java.lang.String,java.lang.ClassLoader)"
        ]
    },
    "org.apache.cxf.common.util.SpringClasspathScanner:boolean shouldSkip(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.SpringClasspathScanner:java.util.Map findClassesInternal(java.util.Collection,java.util.List,java.lang.ClassLoader)"
        ]
    },
    "org.apache.cxf.common.util.SpringClasspathScanner:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.ClasspathScanner:org.apache.cxf.common.util.ClasspathScanner getClasspathScanner()",
            "org.apache.cxf.common.util.SpringClasspathScanner:org.springframework.core.io.support.ResourcePatternResolver getResolver(java.lang.ClassLoader)",
            "org.apache.cxf.common.util.SpringClasspathScanner:boolean shouldSkip(java.lang.String)",
            "org.apache.cxf.common.util.SpringClasspathScanner:void <clinit>()"
        ]
    },
    "org.apache.cxf.common.util.Compiler:boolean useJava6Compiler(java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.Compiler:boolean compileFiles(java.lang.String[])"
        ]
    },
    "org.apache.cxf.common.util.UrlUtils:java.lang.String urlDecode(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser:boolean parseAttributes(org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext,org.apache.aries.blueprint.mutable.MutableBeanMetadata)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.blueprint.BusDefinitionParser:org.osgi.service.blueprint.reflect.Metadata parse(org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext)",
            "org.apache.cxf.configuration.blueprint.SimpleBPBeanDefinitionParser:org.osgi.service.blueprint.reflect.Metadata parse(org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext)"
        ]
    },
    "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:boolean parseAttribute(org.w3c.dom.Element,org.w3c.dom.Attr,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:boolean parseAttributes(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder)"
        ]
    },
    "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void doParse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.BusDefinitionParser:void doParse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder)"
        ]
    },
    "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void mapAttribute(org.springframework.beans.factory.support.BeanDefinitionBuilder,org.w3c.dom.Element,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:boolean parseAttribute(org.w3c.dom.Element,org.w3c.dom.Attr,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder)"
        ]
    },
    "org.apache.cxf.phase.PhaseInterceptorChain:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.logging.Log4jLogger$HandlerWrapper:void append(org.apache.log4j.spi.LoggingEvent)",
            "org.apache.cxf.common.util.PackageUtils:java.lang.String combine(java.util.List,char)",
            "org.apache.cxf.common.util.PropertyUtils:boolean isTrue(java.lang.Object)",
            "org.apache.cxf.common.util.PropertyUtils:boolean isFalse(java.lang.Object)",
            "org.apache.cxf.common.util.PropertyUtils:java.lang.Long getLong(org.apache.cxf.message.Message,java.lang.String)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:java.util.List enumeratorValues(org.apache.ws.commons.schema.XmlSchemaSimpleType)",
            "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String[] getCiphersuitesToInclude(java.util.List,org.apache.cxf.configuration.security.FiltersType,java.lang.String[],java.lang.String[],java.util.logging.Logger)",
            "org.apache.cxf.endpoint.ClientImpl:boolean isThreadLocalRequestContext()",
            "org.apache.cxf.helpers.ServiceUtils:org.apache.cxf.annotations.SchemaValidation$SchemaValidationType getSchemaValidationType(java.lang.Object)"
        ]
    },
    "org.apache.cxf.resource.URIResolver:void <init>(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.resource.URIResolver:void <init>(java.lang.String)"
        ]
    },
    "org.apache.cxf.resource.ExtendedURIResolver:org.xml.sax.InputSource resolve(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.catalog.CatalogXmlSchemaURIResolver:org.xml.sax.InputSource resolveEntity(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.transport.TransportURIResolver:org.xml.sax.InputSource resolve(java.lang.String,java.lang.String)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils$SchemaLSResourceResolver:org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeEmptyElement(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeEmptyElement(java.lang.String)",
            "org.apache.cxf.staxutils.PrettyPrintXMLStreamWriter:void writeEmptyElement(java.lang.String)"
        ]
    },
    "org.apache.cxf.staxutils.PrettyPrintXMLStreamWriter:void writeEmptyElement(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DelegatingXMLStreamWriter:void writeEmptyElement(java.lang.String)",
            "org.apache.cxf.staxutils.PrettyPrintXMLStreamWriter:void writeEmptyElement(java.lang.String)"
        ]
    },
    "org.apache.cxf.databinding.source.NodeDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.source.NodeDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,java.lang.Object)"
        ]
    },
    "org.apache.cxf.databinding.source.NodeDataWriter:void write(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.feature.transform.XSLTInInterceptor:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.feature.transform.XSLTFeature:void initializeProvider(org.apache.cxf.interceptor.InterceptorProvider,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.feature.transform.XSLTInInterceptor:void <init>(java.lang.String,java.lang.Class,java.lang.Class,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.feature.transform.XSLTOutInterceptor:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.feature.transform.XSLTFeature:void initializeProvider(org.apache.cxf.interceptor.InterceptorProvider,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.feature.transform.XSLTOutInterceptor:void <init>(java.lang.String,java.lang.Class,java.lang.Class,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.staxutils.DepthXMLStreamReader:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.logging.Log4jLogger$HandlerWrapper:void append(org.apache.log4j.spi.LoggingEvent)",
            "org.apache.cxf.common.util.PackageUtils:java.lang.String combine(java.util.List,char)",
            "org.apache.cxf.common.util.PropertyUtils:boolean isTrue(java.lang.Object)",
            "org.apache.cxf.common.util.PropertyUtils:boolean isFalse(java.lang.Object)",
            "org.apache.cxf.common.util.PropertyUtils:java.lang.Long getLong(org.apache.cxf.message.Message,java.lang.String)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:java.util.List enumeratorValues(org.apache.ws.commons.schema.XmlSchemaSimpleType)",
            "org.apache.cxf.configuration.jsse.SSLUtils:java.lang.String[] getCiphersuitesToInclude(java.util.List,org.apache.cxf.configuration.security.FiltersType,java.lang.String[],java.lang.String[],java.util.logging.Logger)",
            "org.apache.cxf.endpoint.ClientImpl:boolean isThreadLocalRequestContext()",
            "org.apache.cxf.helpers.ServiceUtils:org.apache.cxf.annotations.SchemaValidation$SchemaValidationType getSchemaValidationType(java.lang.Object)",
            "org.apache.cxf.staxutils.DepthXMLStreamReader:java.lang.String toString()"
        ]
    },
    "org.apache.cxf.staxutils.W3CDOMStreamWriter:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.TunedDocumentLoader:org.w3c.dom.Document loadDocument(org.xml.sax.InputSource,org.xml.sax.EntityResolver,org.xml.sax.ErrorHandler,int,boolean)",
            "org.apache.cxf.bus.spring.TunedDocumentLoader:org.w3c.dom.Document loadFastinfosetDocument(java.net.URL)",
            "org.apache.cxf.configuration.spring.MappingBeanDefinitionParser:org.w3c.dom.Element transformElement(org.w3c.dom.Element)",
            "org.apache.cxf.staxutils.StaxUtils:org.w3c.dom.Document copy(org.w3c.dom.Document)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:javax.xml.transform.Source convertToXML(org.apache.cxf.ws.addressing.EndpointReferenceType)"
        ]
    },
    "org.apache.cxf.interceptor.ServiceInvokerInterceptor:void access$100(org.apache.cxf.interceptor.ServiceInvokerInterceptor,org.apache.cxf.message.Message,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.ServiceInvokerInterceptor$1:void run()"
        ]
    },
    "org.apache.cxf.message.AbstractWrappedMessage:java.lang.Object put(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.BusFactory:org.apache.cxf.BusFactory$BusHolder getThreadBusHolder(boolean)",
            "org.apache.cxf.attachment.AttachmentDeserializer:void initializeRootMessage()",
            "org.apache.cxf.attachment.AttachmentDeserializer:void addHeaderLine(java.util.Map,java.lang.StringBuilder)",
            "org.apache.cxf.attachment.AttachmentImpl:void setHeader(java.lang.String,java.lang.String)",
            "org.apache.cxf.attachment.AttachmentSerializer:void writeProlog()",
            "org.apache.cxf.attachment.AttachmentSerializer:void writeAttachments()",
            "org.apache.cxf.attachment.ContentDisposition:void <init>(java.lang.String)",
            "org.apache.cxf.bus.blueprint.ConfigurerImpl:void initializeWildcardMap()",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void <init>(java.util.Map,java.util.Map,java.lang.ClassLoader)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:java.lang.Object getExtension(java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void setExtension(java.lang.Object,java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void setProperty(java.lang.String,java.lang.Object)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void <init>(java.lang.String[],java.lang.ClassLoader,java.util.Map,org.apache.cxf.resource.ResourceManager,org.apache.cxf.Bus)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void add(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void load(java.lang.String,java.lang.ClassLoader)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadAndRegister(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl:void registerBindingFactory(java.lang.String,org.apache.cxf.binding.BindingFactory)",
            "org.apache.cxf.bus.managers.ConduitInitiatorManagerImpl:void registerConduitInitiator(java.lang.String,org.apache.cxf.transport.ConduitInitiator)",
            "org.apache.cxf.bus.managers.DestinationFactoryManagerImpl:void registerDestinationFactory(java.lang.String,org.apache.cxf.transport.DestinationFactory)",
            "org.apache.cxf.bus.managers.HeaderManagerImpl:void registerHeaderProcessor(org.apache.cxf.headers.HeaderProcessor)",
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:void addNamedWorkQueue(java.lang.String,org.apache.cxf.workqueue.AutomaticWorkQueue)",
            "org.apache.cxf.bus.osgi.ManagedWorkQueueList:void updated(java.lang.String,java.util.Dictionary)",
            "org.apache.cxf.catalog.CatalogXmlSchemaURIResolver:org.xml.sax.InputSource resolveEntity(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.common.jaxb.JAXBContextCache:org.apache.cxf.common.jaxb.JAXBContextCache$CachedContextAndSchemas getCachedContextAndSchemas(java.util.Set,java.lang.String,java.util.Map,java.util.Collection,boolean)",
            "org.apache.cxf.common.jaxb.JAXBContextCache:javax.xml.bind.JAXBContext createContext(java.util.Set,java.util.Map,java.util.Collection)",
            "org.apache.cxf.common.jaxb.JAXBUtils:void addToObjectFactoryCache(java.lang.Package,java.lang.Class,java.util.Map)",
            "org.apache.cxf.common.jaxb.JAXBUtils:void <clinit>()",
            "org.apache.cxf.common.jaxb.SchemaCollectionContextProxy:void defaultRegister(java.lang.Class,javax.xml.namespace.QName)",
            "org.apache.cxf.common.logging.Log4jLogger:void <clinit>()",
            "org.apache.cxf.common.util.ASMHelper$Opcodes:void <clinit>()",
            "org.apache.cxf.common.util.ASMHelper:org.apache.cxf.common.util.ASMHelper$TypeHelperClassLoader getTypeHelperClassLoader(java.lang.ClassLoader)",
            "org.apache.cxf.common.util.ASMHelper:org.apache.cxf.common.util.ASMHelper$TypeHelperClassLoader getTypeHelperClassLoader(java.lang.Class)",
            "org.apache.cxf.common.util.ASMHelper:void <clinit>()",
            "org.apache.cxf.common.util.CacheMap:void updateMainDataMap()",
            "org.apache.cxf.common.util.CacheMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.common.util.CacheMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.common.util.PrimitiveUtils:void <clinit>()",
            "org.apache.cxf.common.util.StringUtils:void <clinit>()",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.common.util.XmlSchemaPrimitiveUtils:void registerPrimitiveClasses(java.lang.String,java.lang.Class[])",
            "org.apache.cxf.common.xmlschema.SchemaCollection:boolean crossImportsAdded(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaType)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void initWildcardDefinitionMap()",
            "org.apache.cxf.databinding.AbstractDataBinding:void <init>()",
            "org.apache.cxf.endpoint.ClientImpl$EchoContext:java.lang.Object put(java.lang.String,java.lang.Object)",
            "org.apache.cxf.endpoint.ClientImpl:java.util.Map getRequestContext()",
            "org.apache.cxf.endpoint.ClientImpl:java.util.Map getResponseContext()",
            "org.apache.cxf.endpoint.ClientImpl:void setThreadLocalRequestContext(boolean)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] doInvoke(org.apache.cxf.endpoint.ClientCallback,org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] processResult(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,java.util.Map)",
            "org.apache.cxf.endpoint.ClientImpl:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ClientImpl:void setOutMessageProperties(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.extension.RegistryImpl:void register(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.feature.transform.XSLTOutInterceptor:void transformXWriter(org.apache.cxf.message.Message,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.helpers.DOMUtils:javax.xml.parsers.DocumentBuilder getDocumentBuilder()",
            "org.apache.cxf.helpers.HttpHeaderHelper:void <clinit>()",
            "org.apache.cxf.helpers.MapNamespaceContext:void addNamespace(java.lang.String,java.lang.String)",
            "org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:void setOperationSchemaValidation(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:org.apache.cxf.service.model.MessageInfo setMessage(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo,boolean,org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.MessageInfo)",
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:void setOperationSchemaValidation(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.FIStaxInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.FIStaxOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.LoggingInInterceptor:void logging(java.util.logging.Logger,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.LoggingOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.ServiceInvokerInterceptor$2:void run()",
            "org.apache.cxf.interceptor.ServiceInvokerInterceptor:void copyJaxwsProperties(org.apache.cxf.message.Message,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxInInterceptor:javax.xml.stream.XMLInputFactory getXMLInputFactory(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxOutInterceptor:java.lang.String getEncoding(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxOutInterceptor:javax.xml.stream.XMLOutputFactory getXMLOutputFactory(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.security.SecureAnnotationsInterceptor:void findRoles(java.lang.Class,java.util.Map)",
            "org.apache.cxf.interceptor.transform.TransformOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.message.AbstractWrappedMessage:java.lang.Object put(java.lang.String,java.lang.Object)",
            "org.apache.cxf.message.MessageImpl:java.lang.Object put(java.lang.String,java.lang.Object)",
            "org.apache.cxf.message.MessageImpl:void setContextualProperty(java.lang.String,java.lang.Object)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void <init>(java.util.SortedSet)",
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)",
            "org.apache.cxf.resource.URIResolver:void tryRemote(java.lang.String)",
            "org.apache.cxf.service.factory.SimpleMethodDispatcher:void bind(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method[])",
            "org.apache.cxf.service.factory.SimpleMethodDispatcher:org.apache.cxf.service.model.BindingOperationInfo getBindingOperation(java.lang.reflect.Method,org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.service.model.AbstractMessageContainer:void addMessagePart(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:void setProperty(java.lang.String,java.lang.Object)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:void addExtensionAttribute(javax.xml.namespace.QName,java.lang.Object)",
            "org.apache.cxf.service.model.BindingInfo:void addOperation(org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.service.model.BindingOperationInfo:void <init>(org.apache.cxf.service.model.BindingInfo,org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.InterfaceInfo:void addOperation(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.OperationInfo:void addFault(org.apache.cxf.service.model.FaultInfo)",
            "org.apache.cxf.service.model.ServiceInfo:void initMessagesMap()",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperationForWrapperElement(org.apache.cxf.message.Exchange,javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:void addNs(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startPrefixMapping(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:void addPrefix(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.staxutils.transform.TransformUtils:void convertToQNamesMap(java.util.Map,org.apache.cxf.staxutils.transform.QNamesMap,java.util.Map)",
            "org.apache.cxf.staxutils.transform.TransformUtils:void convertToMapOfElementProperties(java.util.Map,java.util.Map)",
            "org.apache.cxf.transport.TransportFinder:void registerBean(java.lang.Object)",
            "org.apache.cxf.transport.common.gzip.GZIPOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.common.gzip.GZIPOutInterceptor:org.apache.cxf.transport.common.gzip.GZIPOutInterceptor$UseGzip gzipPermitted(org.apache.cxf.message.Message,boolean)",
            "org.apache.cxf.transport.common.gzip.GZIPOutInterceptor:void addHeader(org.apache.cxf.message.Message,java.lang.String,java.lang.String)",
            "org.apache.cxf.ws.addressing.ContextUtils:void storeMAPs(org.apache.cxf.ws.addressing.AddressingProperties,org.apache.cxf.message.Message,boolean,boolean,boolean)",
            "org.apache.cxf.ws.addressing.ContextUtils:void storeMAPFaultName(java.lang.String,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.addressing.ContextUtils:void storeMAPFaultReason(java.lang.String,org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.addressing.ContextUtils:void storePartialResponseSent(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:javax.xml.bind.JAXBElement getServiceNameType(javax.xml.namespace.QName,java.lang.String)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:void setInterfaceName(org.apache.cxf.ws.addressing.EndpointReferenceType,javax.xml.namespace.QName)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:void setWSDLLocation(org.apache.cxf.ws.addressing.EndpointReferenceType,java.lang.String[])"
        ]
    },
    "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:org.apache.cxf.service.model.MessageInfo getMessageInfo(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:org.apache.cxf.service.model.MessageInfo getMessageInfo(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo)"
        ]
    },
    "org.apache.cxf.message.AbstractWrappedMessage:void put(java.lang.Class,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.AbstractConduitSelector:org.apache.cxf.transport.Conduit getSelectedConduit(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ClientImpl:void setOutMessageProperties(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.endpoint.DeferredConduitSelector:org.apache.cxf.transport.Conduit selectConduit(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.UpfrontConduitSelector:void prepare(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.UpfrontConduitSelector:org.apache.cxf.transport.Conduit selectConduit(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:org.apache.cxf.service.model.MessageInfo setMessage(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo,boolean,org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.service.model.MessageInfo)",
            "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:org.apache.cxf.service.model.MessageInfo getMessageInfo(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo,boolean)",
            "org.apache.cxf.interceptor.OneWayProcessorInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.security.AbstractSecurityContextInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.security.JAASLoginInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.message.AbstractWrappedMessage:void put(java.lang.Class,java.lang.Object)",
            "org.apache.cxf.service.invoker.AbstractInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object,java.lang.reflect.Method,java.util.List)"
        ]
    },
    "org.apache.cxf.message.MessageImpl:void setDestination(org.apache.cxf.transport.Destination)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.service.invoker.AbstractInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object,java.lang.reflect.Method,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.invoker.AbstractInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object)"
        ]
    },
    "org.apache.cxf.message.ExchangeImpl:java.lang.Object put(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.BusFactory:org.apache.cxf.BusFactory$BusHolder getThreadBusHolder(boolean)",
            "org.apache.cxf.attachment.AttachmentDeserializer:void addHeaderLine(java.util.Map,java.lang.StringBuilder)",
            "org.apache.cxf.attachment.AttachmentImpl:void setHeader(java.lang.String,java.lang.String)",
            "org.apache.cxf.attachment.AttachmentSerializer:void writeAttachments()",
            "org.apache.cxf.attachment.ContentDisposition:void <init>(java.lang.String)",
            "org.apache.cxf.bus.blueprint.ConfigurerImpl:void initializeWildcardMap()",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void <init>(java.util.Map,java.util.Map,java.lang.ClassLoader)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:java.lang.Object getExtension(java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void setExtension(java.lang.Object,java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerBus:void setProperty(java.lang.String,java.lang.Object)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void <init>(java.lang.String[],java.lang.ClassLoader,java.util.Map,org.apache.cxf.resource.ResourceManager,org.apache.cxf.Bus)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void add(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void load(java.lang.String,java.lang.ClassLoader)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadAndRegister(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.managers.BindingFactoryManagerImpl:void registerBindingFactory(java.lang.String,org.apache.cxf.binding.BindingFactory)",
            "org.apache.cxf.bus.managers.ConduitInitiatorManagerImpl:void registerConduitInitiator(java.lang.String,org.apache.cxf.transport.ConduitInitiator)",
            "org.apache.cxf.bus.managers.DestinationFactoryManagerImpl:void registerDestinationFactory(java.lang.String,org.apache.cxf.transport.DestinationFactory)",
            "org.apache.cxf.bus.managers.HeaderManagerImpl:void registerHeaderProcessor(org.apache.cxf.headers.HeaderProcessor)",
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:void addNamedWorkQueue(java.lang.String,org.apache.cxf.workqueue.AutomaticWorkQueue)",
            "org.apache.cxf.bus.osgi.ManagedWorkQueueList:void updated(java.lang.String,java.util.Dictionary)",
            "org.apache.cxf.catalog.CatalogXmlSchemaURIResolver:org.xml.sax.InputSource resolveEntity(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.cxf.common.jaxb.JAXBContextCache:org.apache.cxf.common.jaxb.JAXBContextCache$CachedContextAndSchemas getCachedContextAndSchemas(java.util.Set,java.lang.String,java.util.Map,java.util.Collection,boolean)",
            "org.apache.cxf.common.jaxb.JAXBContextCache:javax.xml.bind.JAXBContext createContext(java.util.Set,java.util.Map,java.util.Collection)",
            "org.apache.cxf.common.jaxb.JAXBUtils:void addToObjectFactoryCache(java.lang.Package,java.lang.Class,java.util.Map)",
            "org.apache.cxf.common.jaxb.JAXBUtils:void <clinit>()",
            "org.apache.cxf.common.jaxb.SchemaCollectionContextProxy:void defaultRegister(java.lang.Class,javax.xml.namespace.QName)",
            "org.apache.cxf.common.logging.Log4jLogger:void <clinit>()",
            "org.apache.cxf.common.util.ASMHelper$Opcodes:void <clinit>()",
            "org.apache.cxf.common.util.ASMHelper:org.apache.cxf.common.util.ASMHelper$TypeHelperClassLoader getTypeHelperClassLoader(java.lang.ClassLoader)",
            "org.apache.cxf.common.util.ASMHelper:org.apache.cxf.common.util.ASMHelper$TypeHelperClassLoader getTypeHelperClassLoader(java.lang.Class)",
            "org.apache.cxf.common.util.ASMHelper:void <clinit>()",
            "org.apache.cxf.common.util.CacheMap:void updateMainDataMap()",
            "org.apache.cxf.common.util.CacheMap:java.lang.Object get(java.lang.Object)",
            "org.apache.cxf.common.util.CacheMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.common.util.PrimitiveUtils:void <clinit>()",
            "org.apache.cxf.common.util.StringUtils:void <clinit>()",
            "org.apache.cxf.common.util.WeakIdentityHashMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.common.util.XmlSchemaPrimitiveUtils:void registerPrimitiveClasses(java.lang.String,java.lang.Class[])",
            "org.apache.cxf.common.xmlschema.SchemaCollection:boolean crossImportsAdded(org.apache.ws.commons.schema.XmlSchema,org.apache.ws.commons.schema.XmlSchemaType)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void initWildcardDefinitionMap()",
            "org.apache.cxf.databinding.AbstractDataBinding:void <init>()",
            "org.apache.cxf.endpoint.ClientImpl$EchoContext:java.lang.Object put(java.lang.String,java.lang.Object)",
            "org.apache.cxf.endpoint.ClientImpl:java.util.Map getRequestContext()",
            "org.apache.cxf.endpoint.ClientImpl:java.util.Map getResponseContext()",
            "org.apache.cxf.endpoint.ClientImpl:void setThreadLocalRequestContext(boolean)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] doInvoke(org.apache.cxf.endpoint.ClientCallback,org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] processResult(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,java.util.Map)",
            "org.apache.cxf.endpoint.ClientImpl:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ClientImpl:void setExchangeProperties(org.apache.cxf.message.Exchange,org.apache.cxf.endpoint.Endpoint,org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.extension.RegistryImpl:void register(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.helpers.DOMUtils:javax.xml.parsers.DocumentBuilder getDocumentBuilder()",
            "org.apache.cxf.helpers.HttpHeaderHelper:void <clinit>()",
            "org.apache.cxf.helpers.MapNamespaceContext:void addNamespace(java.lang.String,java.lang.String)",
            "org.apache.cxf.interceptor.FIStaxInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.FIStaxOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.LoggingInInterceptor:void logging(java.util.logging.Logger,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.LoggingOutInterceptor:org.apache.cxf.interceptor.LoggingMessage setupBuffer(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxInInterceptor:javax.xml.stream.XMLInputFactory getXMLInputFactory(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.StaxOutInterceptor:javax.xml.stream.XMLOutputFactory getXMLOutputFactory(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.security.SecureAnnotationsInterceptor:void findRoles(java.lang.Class,java.util.Map)",
            "org.apache.cxf.message.MessageImpl:java.lang.Object put(java.lang.String,java.lang.Object)",
            "org.apache.cxf.message.MessageImpl:void setContextualProperty(java.lang.String,java.lang.Object)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void <init>(java.util.SortedSet)",
            "org.apache.cxf.resource.URIResolver:void tryRemote(java.lang.String)",
            "org.apache.cxf.service.factory.SimpleMethodDispatcher:void bind(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method[])",
            "org.apache.cxf.service.factory.SimpleMethodDispatcher:org.apache.cxf.service.model.BindingOperationInfo getBindingOperation(java.lang.reflect.Method,org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.service.model.AbstractMessageContainer:void addMessagePart(org.apache.cxf.service.model.MessagePartInfo)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:void setProperty(java.lang.String,java.lang.Object)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:void addExtensionAttribute(javax.xml.namespace.QName,java.lang.Object)",
            "org.apache.cxf.service.model.BindingInfo:void addOperation(org.apache.cxf.service.model.BindingOperationInfo)",
            "org.apache.cxf.service.model.BindingOperationInfo:void <init>(org.apache.cxf.service.model.BindingInfo,org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.InterfaceInfo:void addOperation(org.apache.cxf.service.model.OperationInfo)",
            "org.apache.cxf.service.model.OperationInfo:void addFault(org.apache.cxf.service.model.FaultInfo)",
            "org.apache.cxf.service.model.ServiceInfo:void initMessagesMap()",
            "org.apache.cxf.service.model.ServiceModelUtil:org.apache.cxf.service.model.BindingOperationInfo getOperationForWrapperElement(org.apache.cxf.message.Exchange,javax.xml.namespace.QName,boolean)",
            "org.apache.cxf.staxutils.CachingXmlEventWriter$NSContext:void addNs(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.StreamWriterContentHandler:void startPrefixMapping(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:void addPrefix(java.lang.String,java.lang.String)",
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:java.lang.String getNamespaceURI(java.lang.String)",
            "org.apache.cxf.staxutils.transform.DelegatingNamespaceContext:java.lang.String getPrefix(java.lang.String)",
            "org.apache.cxf.staxutils.transform.TransformUtils:void convertToQNamesMap(java.util.Map,org.apache.cxf.staxutils.transform.QNamesMap,java.util.Map)",
            "org.apache.cxf.staxutils.transform.TransformUtils:void convertToMapOfElementProperties(java.util.Map,java.util.Map)",
            "org.apache.cxf.transport.ChainInitiationObserver:void setExchangeProperties(org.apache.cxf.message.Exchange,org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.MultipleEndpointObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.TransportFinder:void registerBean(java.lang.Object)",
            "org.apache.cxf.transport.common.gzip.GZIPOutInterceptor:void addHeader(org.apache.cxf.message.Message,java.lang.String,java.lang.String)",
            "org.apache.cxf.ws.addressing.ContextUtils:void storeDeferUncorrelatedMessageAbort(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.addressing.ContextUtils:void storeDeferredUncorrelatedMessageAbort(org.apache.cxf.message.Message)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:javax.xml.bind.JAXBElement getServiceNameType(javax.xml.namespace.QName,java.lang.String)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:void setInterfaceName(org.apache.cxf.ws.addressing.EndpointReferenceType,javax.xml.namespace.QName)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:void setWSDLLocation(org.apache.cxf.ws.addressing.EndpointReferenceType,java.lang.String[])"
        ]
    },
    "org.apache.cxf.io.AbstractThresholdOutputStream:void write(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.IOUtils:int copy(java.io.InputStream,java.io.OutputStream,int)",
            "org.apache.cxf.helpers.IOUtils:void copyAtLeast(java.io.InputStream,java.io.OutputStream,int)",
            "org.apache.cxf.io.AbstractWrappedOutputStream:void write(byte[],int,int)",
            "org.apache.cxf.io.AbstractWrappedOutputStream:void write(byte[])",
            "org.apache.cxf.io.CacheAndWriteOutputStream:void write(byte[],int,int)",
            "org.apache.cxf.io.CachedOutputStream:void write(byte[],int,int)"
        ]
    },
    "org.apache.cxf.io.AbstractThresholdOutputStream:void write(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.io.AbstractWrappedOutputStream:void write(int)",
            "org.apache.cxf.io.CacheAndWriteOutputStream:void write(int)",
            "org.apache.cxf.io.CachedOutputStream:void write(int)"
        ]
    },
    "org.apache.cxf.transport.AbstractObservable:org.apache.cxf.ws.addressing.EndpointReferenceType getTargetReference(org.apache.cxf.service.model.EndpointInfo,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.io.CachedOutputStream:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.AttachmentDataSource:void cache(org.apache.cxf.message.Message)",
            "org.apache.cxf.attachment.AttachmentDeserializer:void cache(org.apache.cxf.attachment.DelegatingInputStream)",
            "org.apache.cxf.databinding.source.NodeDataReader:java.lang.Object read(javax.xml.namespace.QName,org.w3c.dom.Node,java.lang.Class)",
            "org.apache.cxf.databinding.source.XMLStreamDataReader:java.io.InputStream getInputStream(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.feature.transform.XSLTInInterceptor:void transformXReader(org.apache.cxf.message.Message,javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.feature.transform.XSLTOutInterceptor:void transformOS(org.apache.cxf.message.Message,java.io.OutputStream)",
            "org.apache.cxf.feature.transform.XSLTUtils:java.io.InputStream transform(javax.xml.transform.Templates,java.io.InputStream)",
            "org.apache.cxf.interceptor.LoggingInInterceptor:void logInputStream(org.apache.cxf.message.Message,java.io.InputStream,org.apache.cxf.interceptor.LoggingMessage,java.lang.String,java.lang.String)",
            "org.apache.cxf.io.CacheAndWriteOutputStream:void <init>(java.io.OutputStream)",
            "org.apache.cxf.io.DelegatingInputStream:void cacheInput()",
            "org.apache.cxf.io.WriteOnCloseOutputStream:void <init>(java.io.OutputStream)"
        ]
    },
    "org.apache.cxf.io.CachedWriter:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.feature.transform.XSLTOutInterceptor$XSLTCachedWriter:void <init>(javax.xml.transform.Templates,java.io.Writer)",
            "org.apache.cxf.feature.transform.XSLTOutInterceptor:void transformXWriter(org.apache.cxf.message.Message,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.feature.transform.XSLTUtils:java.io.Reader transform(javax.xml.transform.Templates,java.io.Reader)",
            "org.apache.cxf.interceptor.LoggingInInterceptor:void logReader(org.apache.cxf.message.Message,java.io.Reader,org.apache.cxf.interceptor.LoggingMessage)"
        ]
    },
    "org.apache.cxf.common.logging.AbstractDelegatingLogger:void log(java.util.logging.LogRecord)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.logging.LogUtils:void doLog(java.util.logging.Logger,java.util.logging.Level,java.lang.String,java.lang.Throwable)",
            "org.apache.cxf.interceptor.AbstractLoggingInterceptor:void log(java.util.logging.Logger,java.lang.String)"
        ]
    },
    "org.apache.cxf.common.logging.AbstractDelegatingLogger:void log(java.util.logging.Level,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.blueprint.NamespaceHandlerRegisterer:void register(org.osgi.framework.BundleContext,org.apache.cxf.bus.blueprint.BlueprintNameSpaceHandlerFactory,java.lang.String[])",
            "org.apache.cxf.common.injection.ResourceInjector:void injectResourceClassLevel(javax.'annotation'.Resource)",
            "org.apache.cxf.common.jaxb.JAXBUtils:void logGeneratedClassNames(java.util.logging.Logger,org.apache.cxf.common.jaxb.JAXBUtils$JCodeModel)",
            "org.apache.cxf.staxutils.validation.ResolvingGrammarReaderController:void warning(org.xml.sax.Locator[],java.lang.String)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:javax.xml.validation.Schema createSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.Bus)",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:org.apache.cxf.transport.MultiplexDestination getMatchingMultiplexDestination(javax.xml.namespace.QName,java.lang.String,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.common.logging.AbstractDelegatingLogger:void log(java.util.logging.Level,java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.BusEntityResolver:org.xml.sax.InputSource resolveEntity(java.lang.String,java.lang.String)",
            "org.apache.cxf.catalog.OASISCatalogManager:void loadCatalogs(java.lang.ClassLoader,java.lang.String)",
            "org.apache.cxf.catalog.OASISCatalogManager:void loadCatalog(java.net.URL)",
            "org.apache.cxf.common.injection.ResourceInjector:void injectResourceClassLevel(javax.'annotation'.Resource)",
            "org.apache.cxf.common.injection.ResourceInjector:void visitField(java.lang.reflect.Field,java.lang.'annotation'.Annotation)",
            "org.apache.cxf.common.injection.ResourceInjector:java.lang.reflect.Method findSetterForResource(javax.'annotation'.Resource)",
            "org.apache.cxf.common.injection.ResourceInjector:void invokeSetter(java.lang.reflect.Method,java.lang.Object)",
            "org.apache.cxf.common.injection.ResourceInjector:void invokePostConstruct()",
            "org.apache.cxf.common.injection.ResourceInjector:void invokePreDestroy()",
            "org.apache.cxf.common.util.PropertiesLoaderUtils:java.util.Properties loadAllProperties(java.lang.String,java.lang.ClassLoader,java.util.logging.Logger,java.util.logging.Level,java.lang.String)",
            "org.apache.cxf.configuration.jsse.SSLUtils:void loadDefaultKeyManagers(java.util.logging.Logger)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureBean(java.lang.String,java.lang.Object,boolean)",
            "org.apache.cxf.resource.URIResolver:void tryClasspath(java.lang.String)",
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLInputFactory createXMLInputFactory(boolean)",
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamReader configureReader(javax.xml.stream.XMLStreamReader,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Long,java.lang.Long)",
            "org.apache.cxf.staxutils.validation.Stax2ValidationUtils:org.codehaus.stax2.validation.XMLValidationSchema getValidator(org.apache.cxf.endpoint.Endpoint,org.apache.cxf.service.model.ServiceInfo)",
            "org.apache.cxf.ws.addressing.ContextUtils:void storeMAPs(org.apache.cxf.ws.addressing.AddressingProperties,org.apache.cxf.message.Message,boolean,boolean,boolean)",
            "org.apache.cxf.ws.addressing.ContextUtils:org.apache.cxf.ws.addressing.AddressingProperties retrieveMAPs(org.apache.cxf.message.Message,boolean,boolean,boolean)"
        ]
    },
    "org.apache.cxf.common.logging.AbstractDelegatingLogger:void log(java.util.logging.Level,java.lang.String,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.injection.ResourceInjector:void visitMethod(java.lang.reflect.Method,java.lang.'annotation'.Annotation)",
            "org.apache.cxf.common.injection.ResourceInjector:void invokeSetter(java.lang.reflect.Method,java.lang.Object)",
            "org.apache.cxf.service.invoker.AbstractInvoker:void checkSuspendedInvocation(org.apache.cxf.message.Exchange,java.lang.Object,java.lang.reflect.Method,java.util.List,java.lang.Throwable)",
            "org.apache.cxf.service.invoker.AbstractInvoker:java.lang.Object performInvocation(org.apache.cxf.message.Exchange,java.lang.Object,java.lang.reflect.Method,java.lang.Object[])",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:java.util.concurrent.ThreadPoolExecutor getExecutor()"
        ]
    },
    "org.apache.cxf.common.logging.AbstractDelegatingLogger:void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.blueprint.NamespaceHandlerRegisterer:void register(org.osgi.framework.BundleContext,org.apache.cxf.bus.blueprint.BlueprintNameSpaceHandlerFactory,java.lang.String[])",
            "org.apache.cxf.bus.extension.Extension:java.lang.Object load(java.lang.ClassLoader,org.apache.cxf.Bus)",
            "org.apache.cxf.bus.extension.TextExtensionFragmentParser:java.util.List getExtensions(java.net.URL)",
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:void setBus(org.apache.cxf.Bus)",
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:void shutdown(boolean)",
            "org.apache.cxf.bus.managers.WorkQueueManagerImpl:void addNamedWorkQueue(java.lang.String,org.apache.cxf.workqueue.AutomaticWorkQueue)",
            "org.apache.cxf.bus.osgi.ManagedWorkQueueList:void propertyChange(java.beans.PropertyChangeEvent)",
            "org.apache.cxf.bus.spring.SpringBeanLocator:void tryOSGI(java.util.Collection,java.lang.Class)",
            "org.apache.cxf.bus.spring.SpringBeanLocator:java.util.List getOSGiServices(java.lang.Class)",
            "org.apache.cxf.catalog.OASISCatalogManager:void loadContextCatalogs(java.lang.String)",
            "org.apache.cxf.common.injection.ResourceInjector:void invokePostConstruct()",
            "org.apache.cxf.common.injection.ResourceInjector:void invokePreDestroy()",
            "org.apache.cxf.common.jaxb.JAXBUtils:java.lang.Object createNamespaceWrapper(java.lang.Class,java.util.Map)",
            "org.apache.cxf.common.util.SystemPropertyAction:java.lang.String getProperty(java.lang.String,java.lang.String)",
            "org.apache.cxf.common.util.SystemPropertyAction:java.lang.String getPropertyOrNull(java.lang.String)",
            "org.apache.cxf.configuration.jsse.SSLUtils:void loadDefaultKeyManagers(java.util.logging.Logger)",
            "org.apache.cxf.configuration.jsse.TLSParameterJaxBUtils:char[] getKeyPassword(org.apache.cxf.configuration.security.KeyManagersType)",
            "org.apache.cxf.endpoint.ServerImpl:void initDestination(org.apache.cxf.transport.DestinationFactory)",
            "org.apache.cxf.endpoint.ServerImpl:void destroy()",
            "org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.AbstractLoggingInterceptor:void setOutputLocation(java.lang.String)",
            "org.apache.cxf.interceptor.FaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.security.JAASLoginInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void unwind(org.apache.cxf.message.Message)",
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLInputFactory createXMLInputFactory(boolean)",
            "org.apache.cxf.staxutils.validation.ResolvingGrammarReaderController:void error(org.xml.sax.Locator[],java.lang.String,java.lang.Exception)",
            "org.apache.cxf.staxutils.validation.StaxSchemaValidationInInterceptor:void setSchemaInMessage(org.apache.cxf.message.Message,javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.staxutils.validation.StaxSchemaValidationOutInterceptor:void setSchemaInMessage(org.apache.cxf.message.Message,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.validation.WoodstoxValidationImpl:void <init>()",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:javax.xml.validation.Schema createSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.common.logging.AbstractDelegatingLogger:void logp(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void entering(java.lang.String,java.lang.String)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void entering(java.lang.String,java.lang.String,java.lang.Object[])",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void exiting(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.common.logging.AbstractDelegatingLogger:void logp(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.logging.AbstractDelegatingLogger:void logp(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void entering(java.lang.String,java.lang.String,java.lang.Object)",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void entering(java.lang.String,java.lang.String,java.lang.Object[])",
            "org.apache.cxf.common.logging.AbstractDelegatingLogger:void exiting(java.lang.String,java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.cxf.common.logging.AbstractDelegatingLogger:void logp(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.logging.AbstractDelegatingLogger:void throwing(java.lang.String,java.lang.String,java.lang.Throwable)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.logging.AbstractDelegatingLogger:void severe(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.injection.ResourceInjector:void injectField(java.lang.reflect.Field,java.lang.Object)",
            "org.apache.cxf.common.xmlschema.XmlSchemaUtils:void setElementRefName(org.apache.ws.commons.schema.XmlSchemaElement,javax.xml.namespace.QName)",
            "org.apache.cxf.configuration.jsse.TLSParameterJaxBUtils:java.security.KeyStore getKeyStore(org.apache.cxf.configuration.security.KeyStoreType)",
            "org.apache.cxf.configuration.jsse.TLSParameterJaxBUtils:java.security.KeyStore getKeyStore(org.apache.cxf.configuration.security.CertStoreType)",
            "org.apache.cxf.interceptor.security.AbstractSecurityContextInInterceptor:void reportSecurityException(java.lang.String)",
            "org.apache.cxf.service.invoker.AbstractInvoker:java.lang.Object invoke(org.apache.cxf.message.Exchange,java.lang.Object)",
            "org.apache.cxf.staxutils.StaxUtils:void printXmlFragment(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.staxutils.validation.ResolvingGrammarReaderController:void error(org.xml.sax.Locator[],java.lang.String,java.lang.Exception)",
            "org.apache.cxf.validation.AbstractBeanValidationInterceptor:java.lang.Object checkNotNull(java.lang.Object,java.lang.String)",
            "org.apache.cxf.validation.BeanValidationProvider:void <init>()",
            "org.apache.cxf.validation.BeanValidationProvider:void <init>(org.apache.cxf.validation.ValidationConfiguration)",
            "org.apache.cxf.validation.BeanValidationProvider:void <init>(javax.validation.ValidationProviderResolver,java.lang.Class,org.apache.cxf.validation.ValidationConfiguration)"
        ]
    },
    "org.apache.cxf.common.logging.AbstractDelegatingLogger:void warning(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.Base64Utility:byte[] decode(java.lang.String,boolean)",
            "org.apache.cxf.common.util.Base64Utility:void decode(char[],int,int,java.io.OutputStream)",
            "org.apache.cxf.common.util.Base64Utility:void decode(java.lang.String,java.io.OutputStream)",
            "org.apache.cxf.configuration.jsse.SSLUtils:void loadDefaultKeyManagers(java.util.logging.Logger)",
            "org.apache.cxf.endpoint.AbstractConduitSelector:org.apache.cxf.transport.Conduit getSelectedConduit(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.AbstractConduitSelector:org.apache.cxf.transport.Conduit createConduit(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.transport.ConduitInitiator)",
            "org.apache.cxf.feature.transform.XSLTInInterceptor:void transformXReader(org.apache.cxf.message.Message,javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.feature.transform.XSLTInInterceptor:void transformIS(org.apache.cxf.message.Message,java.io.InputStream)",
            "org.apache.cxf.feature.transform.XSLTInInterceptor:void transformReader(org.apache.cxf.message.Message,java.io.Reader)",
            "org.apache.cxf.feature.transform.XSLTOutInterceptor$XSLTCachedOutputStreamCallback:void onClose(org.apache.cxf.io.CachedOutputStream)",
            "org.apache.cxf.feature.transform.XSLTOutInterceptor$XSLTCachedWriter:void doClose()",
            "org.apache.cxf.feature.transform.XSLTOutInterceptor$XSLTStreamWriter:void close()",
            "org.apache.cxf.helpers.FileUtils:java.io.File createTmpDir(boolean)",
            "org.apache.cxf.interceptor.OneWayProcessorInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.security.SecureAnnotationsInterceptor:void setSecuredObject(java.lang.Object)",
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean setCurrentMessage(org.apache.cxf.phase.PhaseInterceptorChain,org.apache.cxf.message.Message)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void add(org.apache.cxf.interceptor.Interceptor,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:javax.xml.stream.XMLStreamReader configureReader(javax.xml.stream.XMLStreamReader,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Long,java.lang.Long)",
            "org.apache.cxf.staxutils.validation.ResolvingGrammarReaderController:void warning(org.xml.sax.Locator[],java.lang.String)",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl$WatchDog:void run()",
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils$SchemaLSResourceResolver:org.w3c.dom.ls.LSInput resolveResource(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.common.logging.AbstractDelegatingLogger:void info(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:java.util.Collection getBeansOfType(java.lang.Class)",
            "org.apache.cxf.bus.blueprint.BlueprintBeanLocator:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)",
            "org.apache.cxf.bus.osgi.CXFExtensionBundleListener:boolean addExtensions(org.osgi.framework.Bundle,java.util.List)",
            "org.apache.cxf.bus.osgi.CXFExtensionBundleListener:void unregister(long)",
            "org.apache.cxf.bus.osgi.OSGiBeanLocator:java.util.List getBeansFromOsgiService(java.lang.Class)",
            "org.apache.cxf.endpoint.ServerImpl:void initDestination(org.apache.cxf.transport.DestinationFactory)",
            "org.apache.cxf.interceptor.security.NameDigestPasswordCallbackHandler:void handle(javax.security.auth.callback.Callback[])",
            "org.apache.cxf.interceptor.security.NamePasswordCallbackHandler:void handle(javax.security.auth.callback.Callback[])",
            "org.apache.cxf.staxutils.StaxUtils:void printXmlFragment(javax.xml.stream.XMLStreamReader)"
        ]
    },
    "org.apache.cxf.common.logging.AbstractDelegatingLogger:void config(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.FIStaxOutInterceptor:void logSetter(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.cxf.common.logging.AbstractDelegatingLogger:void fine(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.blueprint.NamespaceHandlerRegisterer:void register(org.osgi.framework.BundleContext,org.apache.cxf.bus.blueprint.BlueprintNameSpaceHandlerFactory,java.lang.String[])",
            "org.apache.cxf.bus.spring.BusApplicationContext:org.springframework.core.io.Resource[] getConfigResources()",
            "org.apache.cxf.bus.spring.TunedDocumentLoader:void <clinit>()",
            "org.apache.cxf.common.logging.LogUtils:void <clinit>()",
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void addBusWiringAttribute(org.springframework.beans.factory.support.BeanDefinitionBuilder,org.apache.cxf.configuration.spring.BusWiringType,java.lang.String,org.springframework.beans.factory.xml.ParserContext)",
            "org.apache.cxf.configuration.spring.ConfigurerImpl:void configureBean(java.lang.String,java.lang.Object,boolean)",
            "org.apache.cxf.databinding.source.XMLStreamDataReader:org.w3c.dom.Element validate(javax.xml.stream.XMLStreamReader)",
            "org.apache.cxf.databinding.stax.StaxDataBindingInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.AbstractEndpointFactory:void initializeAnnotationInterceptors(org.apache.cxf.endpoint.Endpoint,java.lang.Class[])",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] doInvoke(org.apache.cxf.endpoint.ClientCallback,org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.ClientImpl:void setContext(java.util.Map,org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ClientImpl:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ClientImpl:org.apache.cxf.phase.PhaseInterceptorChain setupInterceptorChain(org.apache.cxf.endpoint.Endpoint)",
            "org.apache.cxf.endpoint.ServerImpl:void start()",
            "org.apache.cxf.endpoint.ServerImpl:void stop()",
            "org.apache.cxf.endpoint.ServerImpl:void destroy()",
            "org.apache.cxf.interceptor.AttachmentInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:org.apache.cxf.interceptor.InterceptorChain getOutInterceptorChain(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.interceptor.OutgoingChainInterceptor:org.apache.cxf.phase.PhaseInterceptorChain getChain(org.apache.cxf.message.Exchange,org.apache.cxf.phase.PhaseChainCache)",
            "org.apache.cxf.interceptor.StaxInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.security.AbstractAuthorizingInInterceptor:boolean authorize(org.apache.cxf.security.SecurityContext,java.lang.reflect.Method)",
            "org.apache.cxf.interceptor.security.NameDigestPasswordCallbackHandler:boolean invokePasswordCallback(javax.security.auth.callback.Callback)",
            "org.apache.cxf.interceptor.security.NamePasswordCallbackHandler:boolean invokePasswordCallback(javax.security.auth.callback.Callback)",
            "org.apache.cxf.interceptor.security.OperationInfoAuthorizingInterceptor:boolean authorize(org.apache.cxf.security.SecurityContext,java.lang.String)",
            "org.apache.cxf.interceptor.security.SecureAnnotationsInterceptor:void setSecuredObject(java.lang.Object)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void add(org.apache.cxf.interceptor.Interceptor,boolean)",
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void unwind(org.apache.cxf.message.Message)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void outputChainToLog(boolean)",
            "org.apache.cxf.resource.DefaultResourceManager:java.lang.Object findResource(java.lang.String,java.lang.Class,boolean,java.util.List)",
            "org.apache.cxf.staxutils.transform.InTransformReader:int next()",
            "org.apache.cxf.staxutils.transform.InTransformReader:void handleAppendMode(javax.xml.namespace.QName,org.apache.cxf.staxutils.transform.ElementProperty)",
            "org.apache.cxf.transport.AbstractObservable:void setMessageObserver(org.apache.cxf.transport.MessageObserver)",
            "org.apache.cxf.transport.common.gzip.GZIPInInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.transport.common.gzip.GZIPOutInterceptor$GZipThresholdOutputStream:void thresholdNotReached()",
            "org.apache.cxf.transport.common.gzip.GZIPOutInterceptor$GZipThresholdOutputStream:void thresholdReached()",
            "org.apache.cxf.transport.common.gzip.GZIPOutInterceptor:org.apache.cxf.transport.common.gzip.GZIPOutInterceptor$UseGzip gzipPermitted(org.apache.cxf.message.Message,boolean)",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:java.util.concurrent.ThreadPoolExecutor getExecutor()"
        ]
    },
    "org.apache.cxf.common.logging.AbstractDelegatingLogger:void finer(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl$WatchDog:void run()"
        ]
    },
    "org.apache.cxf.common.logging.AbstractDelegatingLogger:void finest(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.logging.AbstractDelegatingLogger:void logrb(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.logging.AbstractDelegatingLogger:void logrb(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.logging.AbstractDelegatingLogger:void logrb(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.logging.AbstractDelegatingLogger:void logrb(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.validation.BeanValidationOutInterceptor:void handleValidation(org.apache.cxf.message.Message,java.lang.Object,java.lang.reflect.Method,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.validation.AbstractValidationInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.staxutils.transform.InTransformReader:java.lang.String getAttributeValue(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DepthXMLStreamReader:java.lang.String getAttributeValue(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.cxf.staxutils.transform.InTransformReader:java.lang.String getAttributeValue(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DepthXMLStreamReader:java.lang.String getAttributeValue(int)",
            "org.apache.cxf.staxutils.StaxSource:org.xml.sax.Attributes getAttributes()",
            "org.apache.cxf.staxutils.StaxUtils:void writeStartElement(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter)",
            "org.apache.cxf.staxutils.StaxUtils:void readDocElements(org.w3c.dom.Document,org.w3c.dom.Node,javax.xml.stream.XMLStreamReader,boolean,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void readDocElements(org.w3c.dom.Document,org.w3c.dom.Node,javax.xml.stream.XMLStreamReader,org.apache.cxf.staxutils.StaxUtils$StreamToDOMContext)"
        ]
    },
    "org.apache.cxf.staxutils.transform.InTransformReader:java.lang.String getText()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.staxutils.DepthXMLStreamReader:java.lang.String getText()",
            "org.apache.cxf.staxutils.StaxUtils:void copy(javax.xml.stream.XMLStreamReader,javax.xml.stream.XMLStreamWriter,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void readDocElements(org.w3c.dom.Document,org.w3c.dom.Node,javax.xml.stream.XMLStreamReader,boolean,boolean,boolean)",
            "org.apache.cxf.staxutils.StaxUtils:void readDocElements(org.w3c.dom.Document,org.w3c.dom.Node,javax.xml.stream.XMLStreamReader,org.apache.cxf.staxutils.StaxUtils$StreamToDOMContext)"
        ]
    },
    "org.apache.cxf.validation.AbstractBeanValidationInterceptor:java.lang.Object getServiceObject(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.validation.AbstractValidationInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.MessageSenderInterceptor$MessageSenderEndingInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.security.DelegatingAuthenticationInterceptor:void handleMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:boolean shouldValidate(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:void setDataReaderValidation(org.apache.cxf.service.Service,org.apache.cxf.message.Message,org.apache.cxf.databinding.DataReader)"
        ]
    },
    "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:boolean shouldValidate(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.helpers.FileUtils:void maybeDeleteDefaultTempDir()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void schedule(java.lang.Runnable,long)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.workqueue.OneShotAsyncExecutor:void execute(java.lang.Runnable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl$2:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.ServiceInvokerInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.helpers.IOUtils:int copy(java.io.InputStream,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.AttachmentDataSource:void cache(org.apache.cxf.message.Message)",
            "org.apache.cxf.attachment.AttachmentDeserializer:void cache(org.apache.cxf.attachment.DelegatingInputStream)",
            "org.apache.cxf.helpers.IOUtils:int copyAndCloseInput(java.io.InputStream,java.io.OutputStream)",
            "org.apache.cxf.helpers.IOUtils:java.io.ByteArrayInputStream loadIntoBAIS(java.io.InputStream)",
            "org.apache.cxf.helpers.IOUtils:byte[] readBytesFromStream(java.io.InputStream)",
            "org.apache.cxf.io.DelegatingInputStream:void cacheInput()",
            "org.apache.cxf.resource.URIResolver:void tryRemote(java.lang.String)",
            "org.apache.cxf.transport.TransportURIResolver$1:void onMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.io.AbstractThresholdOutputStream:void unBuffer()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.io.AbstractThresholdOutputStream:void write(byte[],int,int)",
            "org.apache.cxf.io.AbstractThresholdOutputStream:void write(int)",
            "org.apache.cxf.io.AbstractThresholdOutputStream:void close()"
        ]
    },
    "org.apache.cxf.io.AbstractWrappedOutputStream:void write(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.AttachmentSerializer:void writeProlog()",
            "org.apache.cxf.attachment.AttachmentSerializer:void writeAttachments()",
            "org.apache.cxf.attachment.ImageDataContentHandler:void writeTo(java.lang.Object,java.lang.String,java.io.OutputStream)",
            "org.apache.cxf.common.util.Base64Utility:void decode(char[],int,int,java.io.OutputStream)",
            "org.apache.cxf.common.util.Base64Utility:void decode(java.lang.String,java.io.OutputStream)",
            "org.apache.cxf.common.util.Base64Utility:void writeCharArrayToStream(char[],int,java.io.OutputStream)",
            "org.apache.cxf.common.util.Base64Utility:void encodeChunk(byte[],int,int,java.io.OutputStream)",
            "org.apache.cxf.io.CacheAndWriteOutputStream:void write(byte[])",
            "org.apache.cxf.io.CachedOutputStream:void write(byte[])"
        ]
    },
    "org.apache.cxf.configuration.jsse.SSLUtils:javax.net.ssl.KeyManager[] getDefaultKeyStoreManagers(java.util.logging.Logger)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.helpers.IOUtils:void copyAndCloseInput(java.io.Reader,java.io.Writer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.LoggingInInterceptor:void logReader(org.apache.cxf.message.Message,java.io.Reader,org.apache.cxf.interceptor.LoggingMessage)",
            "org.apache.cxf.io.CachedWriter:void resetOut(java.io.Writer,boolean)"
        ]
    },
    "org.apache.cxf.helpers.IOUtils:void copyAndCloseInput(java.io.Reader,java.io.Writer,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.feature.transform.XSLTOutInterceptor$XSLTCachedWriter:void doClose()"
        ]
    },
    "org.apache.cxf.bus.spring.ControlledValidationXmlBeanDefinitionReader:int loadBeanDefinitions(org.springframework.core.io.support.EncodedResource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.databinding.stax.StaxDataBinding$XMLStreamDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:void writeParts(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.message.MessageContentsList,java.util.List)",
            "org.apache.cxf.interceptor.FaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus createBus(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus createBus()"
        ]
    },
    "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus createBus(java.net.URL)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.logging.AbstractDelegatingLogger:void entering(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.logging.AbstractDelegatingLogger:void entering(java.lang.String,java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.logging.AbstractDelegatingLogger:void entering(java.lang.String,java.lang.String,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.logging.AbstractDelegatingLogger:void exiting(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.logging.AbstractDelegatingLogger:void exiting(java.lang.String,java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.interceptor.AbstractLoggingInterceptor:void log(java.util.logging.Logger,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.LoggingInInterceptor:void logging(java.util.logging.Logger,org.apache.cxf.message.Message)",
            "org.apache.cxf.interceptor.LoggingOutInterceptor$LogWriter:void close()",
            "org.apache.cxf.interceptor.LoggingOutInterceptor$LoggingCallback:void onClose(org.apache.cxf.io.CachedOutputStream)"
        ]
    },
    "org.apache.cxf.transport.AbstractObservable:void setMessageObserver(org.apache.cxf.transport.MessageObserver)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.extension.Extension:java.lang.Class getClassObject(java.lang.ClassLoader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.extension.Extension:java.lang.Object load(java.lang.ClassLoader,org.apache.cxf.Bus)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void activateAllByType(java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadAndRegister(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:java.lang.Object getExtension(java.lang.String,java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:java.util.List getBeanNamesOfType(java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:java.util.Collection getBeansOfType(java.lang.Class)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:boolean loadBeansOfType(java.lang.Class,org.apache.cxf.configuration.ConfiguredBeanLocator$BeanLoaderListener)"
        ]
    },
    "org.apache.cxf.bus.extension.Extension:java.lang.Class loadInterface(java.lang.ClassLoader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadAndRegister(org.apache.cxf.bus.extension.Extension)"
        ]
    },
    "org.apache.cxf.bus.extension.TextExtensionFragmentParser:java.util.List getExtensions(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void load(java.lang.String,java.lang.ClassLoader)",
            "org.apache.cxf.bus.extension.TextExtensionFragmentParser:java.util.List getExtensions(java.net.URL)"
        ]
    },
    "org.apache.cxf.bus.spring.BusApplicationContext:void loadBeanDefinitions(org.springframework.beans.factory.support.DefaultListableBeanFactory)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.injection.ResourceInjector:void <init>(org.apache.cxf.resource.ResourceManager)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void loadAndRegister(org.apache.cxf.bus.extension.Extension)",
            "org.apache.cxf.bus.extension.ExtensionManagerImpl:void destroyBeans()",
            "org.apache.cxf.bus.spring.Jsr250BeanPostProcessor:java.lang.Object postProcessAfterInitialization(java.lang.Object,java.lang.String)",
            "org.apache.cxf.bus.spring.Jsr250BeanPostProcessor:java.lang.Object postProcessBeforeInitialization(java.lang.Object,java.lang.String)",
            "org.apache.cxf.bus.spring.Jsr250BeanPostProcessor:void postProcessBeforeDestruction(java.lang.Object,java.lang.String)",
            "org.apache.cxf.service.invoker.PerRequestFactory:java.lang.Object create(org.apache.cxf.message.Exchange)"
        ]
    },
    "org.apache.cxf.attachment.Base64DecoderStream:int getByte()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.Base64DecoderStream:int read()"
        ]
    },
    "org.apache.cxf.attachment.Base64DecoderStream:int getBytes(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.Base64DecoderStream:int read(byte[],int,int)"
        ]
    },
    "org.apache.cxf.common.util.Base64OutputStream:void write(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.Base64OutputStream:void write(int)",
            "org.apache.cxf.helpers.IOUtils:int copy(java.io.InputStream,java.io.OutputStream,int)",
            "org.apache.cxf.helpers.IOUtils:void copyAtLeast(java.io.InputStream,java.io.OutputStream,int)",
            "org.apache.cxf.io.AbstractWrappedOutputStream:void write(byte[],int,int)",
            "org.apache.cxf.io.CacheAndWriteOutputStream:void write(byte[],int,int)",
            "org.apache.cxf.io.CachedOutputStream:void write(byte[],int,int)"
        ]
    },
    "org.apache.cxf.common.util.Base64UrlUtility:java.lang.String encode(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.Base64UrlUtility:java.lang.String encode(java.lang.String)",
            "org.apache.cxf.common.util.MessageDigestInputStream:java.lang.String getBase64UrlDigest()"
        ]
    },
    "org.apache.cxf.bus.spring.BusApplicationContext$5:java.lang.Object run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.BusApplicationContext:java.lang.String getSpringValidationMode()"
        ]
    },
    "org.apache.cxf.helpers.FileUtils:boolean isValidFileName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.helpers.FileUtils:java.io.File createTempFile(java.lang.String,java.lang.String,java.io.File,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.FileUtils:java.io.File createTempFile(java.lang.String,java.lang.String)",
            "org.apache.cxf.io.CachedOutputStream:void createFileOutputStream()",
            "org.apache.cxf.io.CachedWriter:void createFileOutputStream()"
        ]
    },
    "org.apache.cxf.helpers.FileUtils:void delete(java.io.File,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.FileUtils:void removeDir(java.io.File,boolean)",
            "org.apache.cxf.helpers.FileUtils:void delete(java.io.File)"
        ]
    },
    "org.apache.cxf.feature.transform.XSLTOutInterceptor:void transformOS(org.apache.cxf.message.Message,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.feature.transform.XSLTOutInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.io.CachedOutputStream:void setDefaultMaxSize(long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.io.CachedOutputStream:void <clinit>()"
        ]
    },
    "org.apache.cxf.io.CachedWriter$3:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.jaxb.JAXBUtils:void closeUnmarshaller(javax.xml.bind.Unmarshaller)",
            "org.apache.cxf.endpoint.ClientImpl:void destroy()",
            "org.apache.cxf.endpoint.ServerImpl:void stop()",
            "org.apache.cxf.feature.transform.XSLTOutInterceptor$XSLTCachedOutputStreamCallback:void onClose(org.apache.cxf.io.CachedOutputStream)",
            "org.apache.cxf.io.AbstractWrappedOutputStream:void close()",
            "org.apache.cxf.io.CacheAndWriteOutputStream:void closeFlowthroughStream()",
            "org.apache.cxf.io.CacheAndWriteOutputStream:void postClose()",
            "org.apache.cxf.io.CachedOutputStream:void close()",
            "org.apache.cxf.io.CachedOutputStream:void resetOut(java.io.OutputStream,boolean)",
            "org.apache.cxf.io.CachedOutputStream:void createFileOutputStream()",
            "org.apache.cxf.io.CachedOutputStream:boolean maybeDeleteTempFile(java.lang.Object)",
            "org.apache.cxf.io.CachedWriter:java.io.OutputStreamWriter createOutputStreamWriter(java.io.File)",
            "org.apache.cxf.transport.AbstractConduit:void close(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.io.CachedWriter$4:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.jaxb.JAXBUtils:void closeUnmarshaller(javax.xml.bind.Unmarshaller)",
            "org.apache.cxf.endpoint.ClientImpl:void destroy()",
            "org.apache.cxf.endpoint.ServerImpl:void stop()",
            "org.apache.cxf.feature.transform.XSLTOutInterceptor$XSLTCachedWriter:void doClose()",
            "org.apache.cxf.io.CachedWriter:void close()",
            "org.apache.cxf.io.CachedWriter:void resetOut(java.io.Writer,boolean)",
            "org.apache.cxf.io.CachedWriter:void createFileOutputStream()",
            "org.apache.cxf.io.CachedWriter:void maybeDeleteTempFile(java.lang.Object)"
        ]
    },
    "org.apache.cxf.io.CachedWriter:void setDefaultMaxSize(long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.io.CachedWriter:void <clinit>()"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:org.apache.cxf.endpoint.ConduitSelector getConduitSelector(org.apache.cxf.endpoint.ConduitSelector)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:void <init>(org.apache.cxf.Bus,org.apache.cxf.endpoint.Endpoint,org.apache.cxf.endpoint.ConduitSelector)",
            "org.apache.cxf.endpoint.ClientImpl:org.apache.cxf.endpoint.ConduitSelector getConduitSelector()"
        ]
    },
    "org.apache.cxf.interceptor.FIStaxOutInterceptor:void setSerializerMinAttributeValueSize(java.lang.Integer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.feature.FastInfosetFeature:void initializeProvider(org.apache.cxf.interceptor.InterceptorProvider,org.apache.cxf.Bus)",
            "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void addFastInfosetSupport(org.apache.cxf.interceptor.InterceptorProvider,org.apache.cxf.annotations.FastInfoset)"
        ]
    },
    "org.apache.cxf.interceptor.FIStaxOutInterceptor:void setSerializerMaxAttributeValueSize(java.lang.Integer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.feature.FastInfosetFeature:void initializeProvider(org.apache.cxf.interceptor.InterceptorProvider,org.apache.cxf.Bus)",
            "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void addFastInfosetSupport(org.apache.cxf.interceptor.InterceptorProvider,org.apache.cxf.annotations.FastInfoset)"
        ]
    },
    "org.apache.cxf.interceptor.FIStaxOutInterceptor:void setSerializerCharacterContentChunkMapMemoryLimit(java.lang.Integer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.feature.FastInfosetFeature:void initializeProvider(org.apache.cxf.interceptor.InterceptorProvider,org.apache.cxf.Bus)",
            "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void addFastInfosetSupport(org.apache.cxf.interceptor.InterceptorProvider,org.apache.cxf.annotations.FastInfoset)"
        ]
    },
    "org.apache.cxf.interceptor.FIStaxOutInterceptor:void setSerializerMinCharacterContentChunkSize(java.lang.Integer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.feature.FastInfosetFeature:void initializeProvider(org.apache.cxf.interceptor.InterceptorProvider,org.apache.cxf.Bus)",
            "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void addFastInfosetSupport(org.apache.cxf.interceptor.InterceptorProvider,org.apache.cxf.annotations.FastInfoset)"
        ]
    },
    "org.apache.cxf.interceptor.FIStaxOutInterceptor:void setSerializerMaxCharacterContentChunkSize(java.lang.Integer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.feature.FastInfosetFeature:void initializeProvider(org.apache.cxf.interceptor.InterceptorProvider,org.apache.cxf.Bus)",
            "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void addFastInfosetSupport(org.apache.cxf.interceptor.InterceptorProvider,org.apache.cxf.annotations.FastInfoset)"
        ]
    },
    "org.apache.cxf.interceptor.FIStaxOutInterceptor:void setSerializerAttributeValueMapMemoryLimit(java.lang.Integer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.feature.FastInfosetFeature:void initializeProvider(org.apache.cxf.interceptor.InterceptorProvider,org.apache.cxf.Bus)",
            "org.apache.cxf.service.factory.AnnotationsFactoryBeanListener:void addFastInfosetSupport(org.apache.cxf.interceptor.InterceptorProvider,org.apache.cxf.annotations.FastInfoset)"
        ]
    },
    "org.apache.cxf.interceptor.AbstractLoggingInterceptor:void setOutputLocation(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.feature.LoggingFeature:void initializeProvider(org.apache.cxf.interceptor.InterceptorProvider,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.interceptor.security.JAASLoginInterceptor:java.lang.String getUsername(javax.security.auth.callback.CallbackHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.security.JAASLoginInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.phase.PhaseInterceptorChain:void updateIterator()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doIntercept(org.apache.cxf.message.Message)",
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doInterceptStartingAfter(org.apache.cxf.message.Message,java.lang.String)",
            "org.apache.cxf.phase.PhaseInterceptorChain:boolean doInterceptStartingAt(org.apache.cxf.message.Message,java.lang.String)",
            "org.apache.cxf.phase.PhaseInterceptorChain:void reset()"
        ]
    },
    "org.apache.cxf.phase.PhaseInterceptorChain:void insertInterceptor(int,org.apache.cxf.phase.PhaseInterceptor,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:void add(org.apache.cxf.interceptor.Interceptor,boolean)"
        ]
    },
    "org.apache.cxf.transport.TransportURIResolver:void <init>(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.catalog.CatalogXmlSchemaURIResolver:void <init>(org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.ws.addressing.EndpointReferenceUtils$SchemaLSResourceResolver:void <init>(java.util.Map,org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils$SchemaLSResourceResolver:void <init>(java.util.Map,org.apache.cxf.Bus,org.apache.cxf.ws.addressing.EndpointReferenceUtils$1)"
        ]
    },
    "org.apache.cxf.configuration.jsse.TLSClientParameters:boolean equals(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.jsse.TLSClientParameters:boolean equals(java.lang.Object)",
            "org.apache.cxf.configuration.jsse.TLSClientParameters:boolean equals(java.util.List,java.util.List)",
            "org.apache.cxf.configuration.jsse.TLSClientParameters:boolean equals(java.lang.Object[],java.lang.Object[])"
        ]
    },
    "org.apache.cxf.service.factory.SimpleMethodDispatcher:org.apache.cxf.service.model.BindingOperationInfo getRealOperation(org.apache.cxf.service.model.OperationInfo,org.apache.cxf.service.model.BindingOperationInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.factory.SimpleMethodDispatcher:org.apache.cxf.service.model.BindingOperationInfo getBindingOperation(java.lang.reflect.Method,org.apache.cxf.endpoint.Endpoint)"
        ]
    },
    "org.apache.cxf.service.model.AbstractPropertiesHolder:boolean equals(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.service.model.AbstractMessageContainer:boolean equals(java.lang.Object)",
            "org.apache.cxf.service.model.BindingOperationInfo:boolean equals(java.lang.Object)",
            "org.apache.cxf.service.model.FaultInfo:boolean equals(java.lang.Object)",
            "org.apache.cxf.service.model.MessagePartInfo:boolean equals(java.lang.Object)",
            "org.apache.cxf.service.model.OperationInfo:boolean equals(java.lang.Object)"
        ]
    },
    "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:boolean parseAttributes(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser:void doParse(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder)"
        ]
    },
    "org.apache.cxf.resource.URIResolver:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.catalog.OASISCatalogManager$1:java.lang.String getResolvedEntity(java.lang.String,java.lang.String)",
            "org.apache.cxf.service.factory.AbstractServiceFactoryBean:void fillDataBindingSchemas()"
        ]
    },
    "org.apache.cxf.databinding.source.NodeDataWriter:void write(java.lang.Object,org.apache.cxf.service.model.MessagePartInfo,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor:void writeParts(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,org.apache.cxf.message.MessageContentsList,java.util.List)",
            "org.apache.cxf.interceptor.FaultOutInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.interceptor.AbstractInDatabindingInterceptor:org.apache.cxf.service.model.MessageInfo getMessageInfo(org.apache.cxf.message.Message,org.apache.cxf.service.model.BindingOperationInfo)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.interceptor.LoggingOutInterceptor:org.apache.cxf.interceptor.LoggingMessage setupBuffer(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.LoggingOutInterceptor:org.apache.cxf.interceptor.LoggingMessage access$000(org.apache.cxf.interceptor.LoggingOutInterceptor,org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.ws.addressing.ContextUtils:void storeDeferUncorrelatedMessageAbort(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.addressing.ContextUtils:void storeDeferredUncorrelatedMessageAbort(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.io.CacheAndWriteOutputStream:void <init>(java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.LoggingOutInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.io.WriteOnCloseOutputStream:void <init>(java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.feature.transform.XSLTOutInterceptor$XSLTCachedWriter:void <init>(javax.xml.transform.Templates,java.io.Writer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.feature.transform.XSLTOutInterceptor:void transformWriter(org.apache.cxf.message.Message,java.io.Writer)"
        ]
    },
    "org.apache.cxf.common.logging.LogUtils:void doLog(java.util.logging.Logger,java.util.logging.Level,java.lang.String,java.lang.Throwable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.logging.LogUtils:void log(java.util.logging.Logger,java.util.logging.Level,java.lang.String,java.lang.Throwable,java.lang.Object)",
            "org.apache.cxf.common.logging.LogUtils:void log(java.util.logging.Logger,java.util.logging.Level,java.lang.String,java.lang.Throwable,java.lang.Object[])",
            "org.apache.cxf.common.logging.LogUtils:void log(java.util.logging.Logger,java.util.logging.Level,java.lang.String,java.lang.Object[])"
        ]
    },
    "org.apache.cxf.validation.AbstractBeanValidationInterceptor:java.lang.Object checkNotNull(java.lang.Object,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.validation.AbstractBeanValidationInterceptor:java.lang.Object getServiceObject(org.apache.cxf.message.Message)",
            "org.apache.cxf.validation.AbstractBeanValidationInterceptor:java.lang.reflect.Method getServiceMethod(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.transport.TransportURIResolver$1:void onMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.phase.PhaseInterceptorChain:void wrapExceptionAsFault(org.apache.cxf.message.Message,java.lang.RuntimeException)"
        ]
    },
    "org.apache.cxf.bus.spring.SpringBusFactory:org.apache.cxf.Bus createBus()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.BusFactory:org.apache.cxf.Bus getDefaultBus(boolean)"
        ]
    },
    "org.apache.cxf.attachment.Base64DecoderStream:int read()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.AttachmentDeserializer:boolean readLine(java.io.InputStream,java.lang.StringBuilder)",
            "org.apache.cxf.attachment.Base64DecoderStream:int fillEncodedBuffer()",
            "org.apache.cxf.attachment.DelegatingInputStream:int read()",
            "org.apache.cxf.attachment.QuotedPrintableDecoderStream:int read()",
            "org.apache.cxf.helpers.IOUtils:void consume(java.io.InputStream)"
        ]
    },
    "org.apache.cxf.attachment.Base64DecoderStream:int read(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.DelegatingInputStream:int read(byte[],int,int)",
            "org.apache.cxf.helpers.IOUtils:void copyAtLeast(java.io.InputStream,java.io.OutputStream,int)",
            "org.apache.cxf.helpers.IOUtils:void consume(java.io.InputStream,int)"
        ]
    },
    "org.apache.cxf.common.util.Base64OutputStream:void write(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.io.AbstractWrappedOutputStream:void write(int)",
            "org.apache.cxf.io.CacheAndWriteOutputStream:void write(int)",
            "org.apache.cxf.io.CachedOutputStream:void write(int)"
        ]
    },
    "org.apache.cxf.common.util.Base64UrlUtility:java.lang.String encode(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.util.MessageDigestInputStream:java.lang.String getBase64UrlDigest()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.bus.spring.BusApplicationContext:java.lang.String getSpringValidationMode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.bus.spring.BusApplicationContext:void initBeanDefinitionReader(org.springframework.beans.factory.xml.XmlBeanDefinitionReader)"
        ]
    },
    "org.apache.cxf.helpers.FileUtils:java.io.File createTempFile(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.Compiler:boolean internalCompile(java.lang.String[],int)",
            "org.apache.cxf.common.util.Compiler:void checkLongClasspath(java.lang.String,java.util.List,int)",
            "org.apache.cxf.io.CachedOutputStream:void createFileOutputStream()",
            "org.apache.cxf.io.CachedWriter:void createFileOutputStream()"
        ]
    },
    "org.apache.cxf.helpers.FileUtils:void removeDir(java.io.File,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.FileUtils:void removeDir(java.io.File)",
            "org.apache.cxf.helpers.FileUtils:void removeDir(java.io.File,boolean)",
            "org.apache.cxf.helpers.FileUtils:void access$100(java.io.File,boolean)"
        ]
    },
    "org.apache.cxf.helpers.FileUtils:void delete(java.io.File)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.Compiler:boolean internalCompile(java.lang.String[],int)",
            "org.apache.cxf.io.CachedOutputStream:void deleteTempFile()",
            "org.apache.cxf.io.CachedWriter:void deleteTempFile()"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:org.apache.cxf.endpoint.ConduitSelector getConduitSelector()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.endpoint.ClientImpl:void <init>(org.apache.cxf.Bus,org.apache.cxf.service.Service,javax.xml.namespace.QName,org.apache.cxf.endpoint.EndpointImplFactory)",
            "org.apache.cxf.endpoint.ClientImpl:org.apache.cxf.endpoint.Endpoint getEndpoint()",
            "org.apache.cxf.endpoint.ClientImpl:void completeExchange(org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.ClientImpl:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ClientImpl:org.apache.cxf.transport.Conduit getConduit()",
            "org.apache.cxf.endpoint.ClientImpl:void prepareConduitSelector(org.apache.cxf.message.Message)",
            "org.apache.cxf.endpoint.ClientImpl:void setEndpoint(org.apache.cxf.endpoint.Endpoint)"
        ]
    },
    "org.apache.cxf.phase.PhaseInterceptorChain:void reset()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.catalog.CatalogXmlSchemaURIResolver:void <init>(org.apache.cxf.Bus)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.addressing.EndpointReferenceUtils$SchemaLSResourceResolver:void <init>(java.util.Map,org.apache.cxf.Bus,org.apache.cxf.ws.addressing.EndpointReferenceUtils$1)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.addressing.EndpointReferenceUtils:javax.xml.validation.Schema createSchema(org.apache.cxf.service.model.ServiceInfo,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.configuration.jsse.TLSClientParameters:boolean equals(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:boolean containsValue(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:javax.activation.DataHandler get(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:javax.activation.DataHandler remove(java.lang.Object)",
            "org.apache.cxf.configuration.jsse.TLSClientParameters:boolean equals(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] processResult(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,java.util.Map)",
            "org.apache.cxf.interceptor.ClientOutFaultObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:boolean equals(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cxf.configuration.jsse.TLSClientParameters:boolean equals(java.util.List,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.jsse.TLSClientParameters:boolean equals(java.lang.Object)"
        ]
    },
    "org.apache.cxf.configuration.jsse.TLSClientParameters:boolean equals(java.lang.Object[],java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.configuration.jsse.TLSClientParameters:boolean equals(java.lang.Object)"
        ]
    },
    "org.apache.cxf.service.model.AbstractMessageContainer:boolean equals(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:boolean containsValue(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:javax.activation.DataHandler get(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:javax.activation.DataHandler remove(java.lang.Object)",
            "org.apache.cxf.configuration.jsse.TLSClientParameters:boolean equals(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] processResult(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,java.util.Map)",
            "org.apache.cxf.interceptor.ClientOutFaultObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:boolean equals(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.service.model.FaultInfo:boolean equals(java.lang.Object)"
        ]
    },
    "org.apache.cxf.service.model.BindingOperationInfo:boolean equals(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:boolean containsValue(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:javax.activation.DataHandler get(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:javax.activation.DataHandler remove(java.lang.Object)",
            "org.apache.cxf.configuration.jsse.TLSClientParameters:boolean equals(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] processResult(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,java.util.Map)",
            "org.apache.cxf.interceptor.ClientOutFaultObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:boolean equals(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cxf.service.model.FaultInfo:boolean equals(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:boolean containsValue(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:javax.activation.DataHandler get(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:javax.activation.DataHandler remove(java.lang.Object)",
            "org.apache.cxf.configuration.jsse.TLSClientParameters:boolean equals(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] processResult(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,java.util.Map)",
            "org.apache.cxf.interceptor.ClientOutFaultObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:boolean equals(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cxf.service.model.MessagePartInfo:boolean equals(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:boolean containsKey(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:boolean containsValue(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:javax.activation.DataHandler get(java.lang.Object)",
            "org.apache.cxf.attachment.LazyAttachmentCollection$LazyAttachmentMap:javax.activation.DataHandler remove(java.lang.Object)",
            "org.apache.cxf.configuration.jsse.TLSClientParameters:boolean equals(java.lang.Object,java.lang.Object)",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] processResult(org.apache.cxf.message.Message,org.apache.cxf.message.Exchange,org.apache.cxf.service.model.BindingOperationInfo,java.util.Map)",
            "org.apache.cxf.interceptor.ClientOutFaultObserver:void onMessage(org.apache.cxf.message.Message)",
            "org.apache.cxf.service.model.AbstractPropertiesHolder:boolean equals(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.cxf.interceptor.LoggingOutInterceptor:org.apache.cxf.interceptor.LoggingMessage access$000(org.apache.cxf.interceptor.LoggingOutInterceptor,org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.interceptor.LoggingOutInterceptor$LogWriter:void close()",
            "org.apache.cxf.interceptor.LoggingOutInterceptor$LoggingCallback:void onClose(org.apache.cxf.io.CachedOutputStream)"
        ]
    },
    "org.apache.cxf.feature.transform.XSLTOutInterceptor:void transformWriter(org.apache.cxf.message.Message,java.io.Writer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.feature.transform.XSLTOutInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.attachment.DelegatingInputStream:int read()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.AttachmentDeserializer:boolean readLine(java.io.InputStream,java.lang.StringBuilder)",
            "org.apache.cxf.attachment.Base64DecoderStream:int fillEncodedBuffer()",
            "org.apache.cxf.attachment.DelegatingInputStream:int read()",
            "org.apache.cxf.attachment.QuotedPrintableDecoderStream:int read()",
            "org.apache.cxf.helpers.IOUtils:void consume(java.io.InputStream)"
        ]
    },
    "org.apache.cxf.attachment.QuotedPrintableDecoderStream:int read()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.AttachmentDeserializer:boolean readLine(java.io.InputStream,java.lang.StringBuilder)",
            "org.apache.cxf.attachment.Base64DecoderStream:int fillEncodedBuffer()",
            "org.apache.cxf.attachment.DelegatingInputStream:int read()",
            "org.apache.cxf.attachment.QuotedPrintableDecoderStream:int decodeNonspaceChar(int)",
            "org.apache.cxf.attachment.QuotedPrintableDecoderStream:int read()",
            "org.apache.cxf.helpers.IOUtils:void consume(java.io.InputStream)"
        ]
    },
    "org.apache.cxf.helpers.IOUtils:void consume(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.DelegatingInputStream:void close()"
        ]
    },
    "org.apache.cxf.attachment.DelegatingInputStream:int read(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.DelegatingInputStream:int read(byte[],int,int)",
            "org.apache.cxf.helpers.IOUtils:void copyAtLeast(java.io.InputStream,java.io.OutputStream,int)",
            "org.apache.cxf.helpers.IOUtils:void consume(java.io.InputStream,int)"
        ]
    },
    "org.apache.cxf.helpers.IOUtils:void consume(java.io.InputStream,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.common.util.Compiler:void checkLongClasspath(java.lang.String,java.util.List,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.common.util.Compiler:boolean compileFiles(java.lang.String[])"
        ]
    },
    "org.apache.cxf.helpers.FileUtils:void removeDir(java.io.File)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.helpers.FileUtils:void access$100(java.io.File,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.FileUtils$1:void run()",
            "org.apache.cxf.helpers.FileUtils$2:void run()"
        ]
    },
    "org.apache.cxf.io.CachedOutputStream:void deleteTempFile()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.io.CachedOutputStream:void resetOut(java.io.OutputStream,boolean)",
            "org.apache.cxf.io.CachedOutputStream:void createFileOutputStream()",
            "org.apache.cxf.io.CachedOutputStream:boolean maybeDeleteTempFile(java.lang.Object)"
        ]
    },
    "org.apache.cxf.io.CachedWriter:void deleteTempFile()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.io.CachedWriter:void resetOut(java.io.Writer,boolean)",
            "org.apache.cxf.io.CachedWriter:void createFileOutputStream()",
            "org.apache.cxf.io.CachedWriter:void maybeDeleteTempFile(java.lang.Object)"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:org.apache.cxf.endpoint.Endpoint getEndpoint()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.databinding.stax.StaxDataBindingFeature:void initialize(org.apache.cxf.endpoint.Client,org.apache.cxf.Bus)",
            "org.apache.cxf.endpoint.ClientImpl:void destroy()",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(java.lang.String,java.lang.Object[])",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invoke(javax.xml.namespace.QName,java.lang.Object[])",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invokeWrapped(java.lang.String,java.lang.Object[])",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] invokeWrapped(javax.xml.namespace.QName,java.lang.Object[])",
            "org.apache.cxf.endpoint.ClientImpl:void invoke(org.apache.cxf.endpoint.ClientCallback,java.lang.String,java.lang.Object[])",
            "org.apache.cxf.endpoint.ClientImpl:void invoke(org.apache.cxf.endpoint.ClientCallback,javax.xml.namespace.QName,java.lang.Object[])",
            "org.apache.cxf.endpoint.ClientImpl:void invokeWrapped(org.apache.cxf.endpoint.ClientCallback,java.lang.String,java.lang.Object[])",
            "org.apache.cxf.endpoint.ClientImpl:void invokeWrapped(org.apache.cxf.endpoint.ClientCallback,javax.xml.namespace.QName,java.lang.Object[])",
            "org.apache.cxf.endpoint.ClientImpl:java.lang.Object[] doInvoke(org.apache.cxf.endpoint.ClientCallback,org.apache.cxf.service.model.BindingOperationInfo,java.lang.Object[],java.util.Map,org.apache.cxf.message.Exchange)",
            "org.apache.cxf.endpoint.ClientImpl:org.apache.cxf.transport.Conduit getConduit()",
            "org.apache.cxf.feature.validation.SchemaValidationFeature:void initialize(org.apache.cxf.endpoint.Client,org.apache.cxf.Bus)"
        ]
    },
    "org.apache.cxf.endpoint.ClientImpl:void setEndpoint(org.apache.cxf.endpoint.Endpoint)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.attachment.QuotedPrintableDecoderStream:int decodeNonspaceChar(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.attachment.QuotedPrintableDecoderStream:int read()"
        ]
    },
    "org.apache.cxf.helpers.FileUtils$1:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.FileUtils:void maybeDeleteDefaultTempDir()",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl$3:void run()",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl$AWQThreadFactory$1:void run()",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl$DelayedTaskWrapper:void run()",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void execute(java.lang.Runnable,long)",
            "org.apache.cxf.workqueue.OneShotAsyncExecutor:void execute(java.lang.Runnable)",
            "org.apache.cxf.workqueue.SynchronousExecutor:void execute(java.lang.Runnable)"
        ]
    },
    "org.apache.cxf.helpers.FileUtils$2:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.helpers.FileUtils:void maybeDeleteDefaultTempDir()",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl$3:void run()",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl$AWQThreadFactory$1:void run()",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl$DelayedTaskWrapper:void run()",
            "org.apache.cxf.workqueue.AutomaticWorkQueueImpl:void execute(java.lang.Runnable,long)",
            "org.apache.cxf.workqueue.OneShotAsyncExecutor:void execute(java.lang.Runnable)",
            "org.apache.cxf.workqueue.SynchronousExecutor:void execute(java.lang.Runnable)"
        ]
    }
}
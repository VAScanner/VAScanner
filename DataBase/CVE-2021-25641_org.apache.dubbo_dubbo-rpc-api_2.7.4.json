{
    "org.apache.dubbo.rpc.AsyncRpcResult:void setValue(java.lang.Object)": {
        "isVulRoot": true,
        "vulCaller": [
            "org.apache.dubbo.rpc.filter.GenericImplFilter$GenericImplListener:void onResponse(org.apache.dubbo.rpc.Result,org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.CompatibleFilter$CompatibleListener:void onResponse(org.apache.dubbo.rpc.Result,org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.GenericFilter$GenericListener:void onResponse(org.apache.dubbo.rpc.Result,org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.AsyncRpcResult:void setValue(java.lang.Object)"
        ]
    },
    "org.apache.dubbo.rpc.AsyncRpcResult:void setException(java.lang.Throwable)": {
        "isVulRoot": true,
        "vulCaller": [
            "org.apache.dubbo.rpc.filter.ExceptionFilter$ExceptionListener:void onResponse(org.apache.dubbo.rpc.Result,org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.GenericImplFilter$GenericImplListener:void onResponse(org.apache.dubbo.rpc.Result,org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.GenericFilter$GenericListener:void onResponse(org.apache.dubbo.rpc.Result,org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.AsyncRpcResult:void setException(java.lang.Throwable)"
        ]
    },
    "org.apache.dubbo.rpc.AsyncRpcResult:org.apache.dubbo.rpc.AsyncRpcResult newDefaultAsyncResult(java.lang.Object,java.lang.Throwable,org.apache.dubbo.rpc.Invocation)": {
        "isVulRoot": true,
        "vulCaller": [
            "org.apache.dubbo.rpc.proxy.AbstractProxyInvoker:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.protocol.AbstractInvoker:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.AsyncRpcResult:org.apache.dubbo.rpc.AsyncRpcResult newDefaultAsyncResult(org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.AsyncRpcResult:org.apache.dubbo.rpc.AsyncRpcResult newDefaultAsyncResult(java.lang.Object,org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.AsyncRpcResult:org.apache.dubbo.rpc.AsyncRpcResult newDefaultAsyncResult(java.lang.Throwable,org.apache.dubbo.rpc.Invocation)"
        ]
    },
    "org.apache.dubbo.rpc.filter.GenericImplFilter$GenericImplListener:void onResponse(org.apache.dubbo.rpc.Result,org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$CallbackRegistrationInvoker:void lambda$invoke$0(org.apache.dubbo.rpc.Invocation,org.apache.dubbo.rpc.Result,java.lang.Throwable)"
        ]
    },
    "org.apache.dubbo.rpc.filter.CompatibleFilter$CompatibleListener:void onResponse(org.apache.dubbo.rpc.Result,org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$CallbackRegistrationInvoker:void lambda$invoke$0(org.apache.dubbo.rpc.Invocation,org.apache.dubbo.rpc.Result,java.lang.Throwable)"
        ]
    },
    "org.apache.dubbo.rpc.filter.GenericFilter$GenericListener:void onResponse(org.apache.dubbo.rpc.Result,org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$CallbackRegistrationInvoker:void lambda$invoke$0(org.apache.dubbo.rpc.Invocation,org.apache.dubbo.rpc.Result,java.lang.Throwable)"
        ]
    },
    "org.apache.dubbo.rpc.filter.ExceptionFilter$ExceptionListener:void onResponse(org.apache.dubbo.rpc.Result,org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$CallbackRegistrationInvoker:void lambda$invoke$0(org.apache.dubbo.rpc.Invocation,org.apache.dubbo.rpc.Result,java.lang.Throwable)"
        ]
    },
    "org.apache.dubbo.rpc.proxy.AbstractProxyInvoker:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invocation)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.dubbo.rpc.listener.ListenerInvokerWrapper:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.proxy.InvokerInvocationHandler:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])",
            "org.apache.dubbo.rpc.protocol.AbstractProxyProtocol$2:org.apache.dubbo.rpc.Result doInvoke(org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$CallbackRegistrationInvoker:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.protocol.InvokerWrapper:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.protocol.AsyncToSyncInvoker:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.support.MockInvoker:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.DeprecatedFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.ExceptionFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.GenericFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.TimeoutFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.ActiveLimitFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.ConsumerContextFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.ExecuteLimitFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.EchoFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.ContextFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.AccessLogFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.GenericImplFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.ClassLoaderFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.TokenFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.TpsLimitFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.CompatibleFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)"
        ]
    },
    "org.apache.dubbo.rpc.protocol.AbstractInvoker:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invocation)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.dubbo.rpc.listener.ListenerInvokerWrapper:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.proxy.InvokerInvocationHandler:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])",
            "org.apache.dubbo.rpc.protocol.AbstractProxyProtocol$2:org.apache.dubbo.rpc.Result doInvoke(org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$CallbackRegistrationInvoker:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.protocol.InvokerWrapper:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.protocol.AsyncToSyncInvoker:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.support.MockInvoker:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.DeprecatedFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.ExceptionFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.GenericFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.TimeoutFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.ActiveLimitFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.ConsumerContextFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.ExecuteLimitFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.EchoFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.ContextFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.AccessLogFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.GenericImplFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.ClassLoaderFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.TokenFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.TpsLimitFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.CompatibleFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)"
        ]
    },
    "org.apache.dubbo.rpc.AsyncRpcResult:org.apache.dubbo.rpc.AsyncRpcResult newDefaultAsyncResult(org.apache.dubbo.rpc.Invocation)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.dubbo.rpc.AsyncRpcResult:org.apache.dubbo.rpc.AsyncRpcResult newDefaultAsyncResult(java.lang.Object,org.apache.dubbo.rpc.Invocation)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.dubbo.rpc.support.MockInvoker:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.EchoFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)"
        ]
    },
    "org.apache.dubbo.rpc.AsyncRpcResult:org.apache.dubbo.rpc.AsyncRpcResult newDefaultAsyncResult(java.lang.Throwable,org.apache.dubbo.rpc.Invocation)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$CallbackRegistrationInvoker:void lambda$invoke$0(org.apache.dubbo.rpc.Invocation,org.apache.dubbo.rpc.Result,java.lang.Throwable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$CallbackRegistrationInvoker$lambda_invoke_0__9:void accept(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.dubbo.rpc.listener.ListenerInvokerWrapper:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invocation)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.dubbo.rpc.listener.ListenerInvokerWrapper:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.proxy.InvokerInvocationHandler:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])",
            "org.apache.dubbo.rpc.protocol.AbstractProxyProtocol$2:org.apache.dubbo.rpc.Result doInvoke(org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$CallbackRegistrationInvoker:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.protocol.InvokerWrapper:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.protocol.AsyncToSyncInvoker:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.support.MockInvoker:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.DeprecatedFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.ExceptionFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.GenericFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.TimeoutFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.ActiveLimitFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.ConsumerContextFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.ExecuteLimitFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.EchoFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.ContextFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.AccessLogFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.GenericImplFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.ClassLoaderFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.TokenFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.TpsLimitFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.CompatibleFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)"
        ]
    },
    "org.apache.dubbo.rpc.proxy.InvokerInvocationHandler:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.dubbo.rpc.protocol.AbstractProxyProtocol$2:org.apache.dubbo.rpc.Result doInvoke(org.apache.dubbo.rpc.Invocation)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.dubbo.rpc.protocol.AbstractInvoker:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invocation)"
        ]
    },
    "org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$CallbackRegistrationInvoker:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invocation)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.dubbo.rpc.listener.ListenerInvokerWrapper:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.proxy.InvokerInvocationHandler:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])",
            "org.apache.dubbo.rpc.protocol.AbstractProxyProtocol$2:org.apache.dubbo.rpc.Result doInvoke(org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$CallbackRegistrationInvoker:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.protocol.InvokerWrapper:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.protocol.AsyncToSyncInvoker:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.support.MockInvoker:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.DeprecatedFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.ExceptionFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.GenericFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.TimeoutFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.ActiveLimitFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.ConsumerContextFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.ExecuteLimitFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.EchoFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.ContextFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.AccessLogFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.GenericImplFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.ClassLoaderFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.TokenFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.TpsLimitFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.CompatibleFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)"
        ]
    },
    "org.apache.dubbo.rpc.protocol.InvokerWrapper:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invocation)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.dubbo.rpc.listener.ListenerInvokerWrapper:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.proxy.InvokerInvocationHandler:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])",
            "org.apache.dubbo.rpc.protocol.AbstractProxyProtocol$2:org.apache.dubbo.rpc.Result doInvoke(org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$CallbackRegistrationInvoker:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.protocol.InvokerWrapper:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.protocol.AsyncToSyncInvoker:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.support.MockInvoker:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.DeprecatedFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.ExceptionFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.GenericFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.TimeoutFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.ActiveLimitFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.ConsumerContextFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.ExecuteLimitFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.EchoFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.ContextFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.AccessLogFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.GenericImplFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.ClassLoaderFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.TokenFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.TpsLimitFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.CompatibleFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)"
        ]
    },
    "org.apache.dubbo.rpc.protocol.AsyncToSyncInvoker:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invocation)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.dubbo.rpc.listener.ListenerInvokerWrapper:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.proxy.InvokerInvocationHandler:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])",
            "org.apache.dubbo.rpc.protocol.AbstractProxyProtocol$2:org.apache.dubbo.rpc.Result doInvoke(org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$CallbackRegistrationInvoker:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.protocol.InvokerWrapper:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.protocol.AsyncToSyncInvoker:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.support.MockInvoker:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.DeprecatedFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.ExceptionFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.GenericFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.TimeoutFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.ActiveLimitFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.ConsumerContextFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.ExecuteLimitFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.EchoFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.ContextFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.AccessLogFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.GenericImplFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.ClassLoaderFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.TokenFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.TpsLimitFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.CompatibleFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)"
        ]
    },
    "org.apache.dubbo.rpc.support.MockInvoker:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invocation)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.dubbo.rpc.listener.ListenerInvokerWrapper:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.proxy.InvokerInvocationHandler:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])",
            "org.apache.dubbo.rpc.protocol.AbstractProxyProtocol$2:org.apache.dubbo.rpc.Result doInvoke(org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$CallbackRegistrationInvoker:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.protocol.InvokerWrapper:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.protocol.AsyncToSyncInvoker:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.support.MockInvoker:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.DeprecatedFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.ExceptionFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.GenericFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.TimeoutFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.ActiveLimitFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.ConsumerContextFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.ExecuteLimitFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.EchoFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.ContextFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.AccessLogFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.GenericImplFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.ClassLoaderFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.TokenFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.TpsLimitFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.CompatibleFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)"
        ]
    },
    "org.apache.dubbo.rpc.filter.DeprecatedFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invocation)"
        ]
    },
    "org.apache.dubbo.rpc.filter.ExceptionFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invocation)"
        ]
    },
    "org.apache.dubbo.rpc.filter.GenericFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invocation)"
        ]
    },
    "org.apache.dubbo.rpc.filter.TimeoutFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invocation)"
        ]
    },
    "org.apache.dubbo.rpc.filter.ActiveLimitFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invocation)"
        ]
    },
    "org.apache.dubbo.rpc.filter.ConsumerContextFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invocation)"
        ]
    },
    "org.apache.dubbo.rpc.filter.ExecuteLimitFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invocation)"
        ]
    },
    "org.apache.dubbo.rpc.filter.EchoFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invocation)"
        ]
    },
    "org.apache.dubbo.rpc.filter.ContextFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invocation)"
        ]
    },
    "org.apache.dubbo.rpc.filter.AccessLogFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invocation)"
        ]
    },
    "org.apache.dubbo.rpc.filter.GenericImplFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invocation)"
        ]
    },
    "org.apache.dubbo.rpc.filter.ClassLoaderFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invocation)"
        ]
    },
    "org.apache.dubbo.rpc.filter.TokenFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invocation)"
        ]
    },
    "org.apache.dubbo.rpc.filter.TpsLimitFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invocation)"
        ]
    },
    "org.apache.dubbo.rpc.filter.CompatibleFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invocation)"
        ]
    },
    "org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$CallbackRegistrationInvoker$lambda_invoke_0__9:void accept(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.dubbo.rpc.AsyncRpcResult:void lambda$whenCompleteWithContext$0(java.util.function.BiConsumer,org.apache.dubbo.rpc.Result,java.lang.Throwable)"
        ]
    },
    "org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$1:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invocation)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.dubbo.rpc.listener.ListenerInvokerWrapper:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.proxy.InvokerInvocationHandler:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])",
            "org.apache.dubbo.rpc.protocol.AbstractProxyProtocol$2:org.apache.dubbo.rpc.Result doInvoke(org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper$CallbackRegistrationInvoker:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.protocol.InvokerWrapper:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.protocol.AsyncToSyncInvoker:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.support.MockInvoker:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.DeprecatedFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.ExceptionFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.GenericFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.TimeoutFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.ActiveLimitFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.ConsumerContextFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.ExecuteLimitFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.EchoFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.ContextFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.AccessLogFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.GenericImplFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.ClassLoaderFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.TokenFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.TpsLimitFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)",
            "org.apache.dubbo.rpc.filter.CompatibleFilter:org.apache.dubbo.rpc.Result invoke(org.apache.dubbo.rpc.Invoker,org.apache.dubbo.rpc.Invocation)"
        ]
    },
    "org.apache.dubbo.rpc.AsyncRpcResult:void lambda$whenCompleteWithContext$0(java.util.function.BiConsumer,org.apache.dubbo.rpc.Result,java.lang.Throwable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.dubbo.rpc.AsyncRpcResult$lambda_whenCompleteWithContext_0__6:void accept(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.dubbo.rpc.AsyncRpcResult$lambda_whenCompleteWithContext_0__6:void accept(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.dubbo.rpc.AsyncRpcResult:void lambda$whenCompleteWithContext$0(java.util.function.BiConsumer,org.apache.dubbo.rpc.Result,java.lang.Throwable)"
        ]
    }
}
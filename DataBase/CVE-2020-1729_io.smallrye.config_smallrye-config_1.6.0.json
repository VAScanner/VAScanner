{
    "io.smallrye.config.SecuritySupport:java.lang.ClassLoader getContextClassLoader()": {
        "isVulRoot": true,
        "vulCaller": [
            "io.smallrye.config.inject.ConfigProducer:org.eclipse.microprofile.config.Config getConfig(javax.enterprise.inject.spi.InjectionPoint)",
            "io.smallrye.config.SmallRyeConfigProviderResolver:org.eclipse.microprofile.config.Config getConfig()",
            "io.smallrye.config.SmallRyeConfigProviderResolver:java.lang.ClassLoader getRealClassLoader(java.lang.ClassLoader)",
            "io.smallrye.config.Converters:java.lang.Class lambda$static$7c03a47f$1(java.lang.String)"
        ]
    },
    "io.smallrye.config.inject.ConfigProducer:org.eclipse.microprofile.config.Config getConfig(javax.enterprise.inject.spi.InjectionPoint)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.smallrye.config.inject.ConfigProducer:java.lang.String produceStringConfigProperty(javax.enterprise.inject.spi.InjectionPoint)",
            "io.smallrye.config.inject.ConfigProducer:java.lang.Long getLongValue(javax.enterprise.inject.spi.InjectionPoint)",
            "io.smallrye.config.inject.ConfigProducer:java.lang.Integer getIntegerValue(javax.enterprise.inject.spi.InjectionPoint)",
            "io.smallrye.config.inject.ConfigProducer:java.lang.Float produceFloatConfigProperty(javax.enterprise.inject.spi.InjectionPoint)",
            "io.smallrye.config.inject.ConfigProducer:java.lang.Double produceDoubleConfigProperty(javax.enterprise.inject.spi.InjectionPoint)",
            "io.smallrye.config.inject.ConfigProducer:java.lang.Boolean produceBooleanConfigProperty(javax.enterprise.inject.spi.InjectionPoint)",
            "io.smallrye.config.inject.ConfigProducer:java.lang.Short produceShortConfigProperty(javax.enterprise.inject.spi.InjectionPoint)",
            "io.smallrye.config.inject.ConfigProducer:java.lang.Byte produceByteConfigProperty(javax.enterprise.inject.spi.InjectionPoint)",
            "io.smallrye.config.inject.ConfigProducer:java.lang.Character produceCharacterConfigProperty(javax.enterprise.inject.spi.InjectionPoint)",
            "io.smallrye.config.inject.ConfigProducer:java.util.Optional produceOptionalConfigValue(javax.enterprise.inject.spi.InjectionPoint)",
            "io.smallrye.config.inject.ConfigProducer:java.util.Set producesSetConfigProperty(javax.enterprise.inject.spi.InjectionPoint)",
            "io.smallrye.config.inject.ConfigProducer:java.util.List producesListConfigProperty(javax.enterprise.inject.spi.InjectionPoint)",
            "io.smallrye.config.inject.ConfigProducer:java.util.OptionalInt produceOptionalIntConfigProperty(javax.enterprise.inject.spi.InjectionPoint)",
            "io.smallrye.config.inject.ConfigProducer:java.util.OptionalLong produceOptionalLongConfigProperty(javax.enterprise.inject.spi.InjectionPoint)",
            "io.smallrye.config.inject.ConfigProducer:java.util.OptionalDouble produceOptionalDoubleConfigProperty(javax.enterprise.inject.spi.InjectionPoint)"
        ]
    },
    "io.smallrye.config.SmallRyeConfigProviderResolver:org.eclipse.microprofile.config.Config getConfig()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.smallrye.config.SmallRyeConfigProviderResolver:java.lang.ClassLoader getRealClassLoader(java.lang.ClassLoader)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.smallrye.config.SmallRyeConfigProviderResolver:org.eclipse.microprofile.config.Config getConfig(java.lang.ClassLoader)",
            "io.smallrye.config.SmallRyeConfigProviderResolver:void registerConfig(org.eclipse.microprofile.config.Config,java.lang.ClassLoader)"
        ]
    },
    "io.smallrye.config.Converters:java.lang.Class lambda$static$7c03a47f$1(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.smallrye.config.Converters$lambda_static_7c03a47f_1__8:java.lang.Object convert(java.lang.String)",
            "io.smallrye.config.Converters$lambda_static_7c03a47f_1__22:java.lang.Object convert(java.lang.String)"
        ]
    },
    "io.smallrye.config.inject.ConfigProducer:java.lang.String produceStringConfigProperty(javax.enterprise.inject.spi.InjectionPoint)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.smallrye.config.inject.ConfigProducer:java.lang.Long getLongValue(javax.enterprise.inject.spi.InjectionPoint)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.smallrye.config.inject.ConfigProducer:java.lang.Integer getIntegerValue(javax.enterprise.inject.spi.InjectionPoint)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.smallrye.config.inject.ConfigProducer:java.lang.Float produceFloatConfigProperty(javax.enterprise.inject.spi.InjectionPoint)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.smallrye.config.inject.ConfigProducer:java.lang.Double produceDoubleConfigProperty(javax.enterprise.inject.spi.InjectionPoint)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.smallrye.config.inject.ConfigProducer:java.lang.Boolean produceBooleanConfigProperty(javax.enterprise.inject.spi.InjectionPoint)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.smallrye.config.inject.ConfigProducer:java.lang.Short produceShortConfigProperty(javax.enterprise.inject.spi.InjectionPoint)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.smallrye.config.inject.ConfigProducer:java.lang.Byte produceByteConfigProperty(javax.enterprise.inject.spi.InjectionPoint)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.smallrye.config.inject.ConfigProducer:java.lang.Character produceCharacterConfigProperty(javax.enterprise.inject.spi.InjectionPoint)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.smallrye.config.inject.ConfigProducer:java.util.Optional produceOptionalConfigValue(javax.enterprise.inject.spi.InjectionPoint)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.smallrye.config.inject.ConfigProducer:java.util.Set producesSetConfigProperty(javax.enterprise.inject.spi.InjectionPoint)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.smallrye.config.inject.ConfigProducer:java.util.List producesListConfigProperty(javax.enterprise.inject.spi.InjectionPoint)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.smallrye.config.inject.ConfigProducer:java.util.OptionalInt produceOptionalIntConfigProperty(javax.enterprise.inject.spi.InjectionPoint)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.smallrye.config.inject.ConfigProducer:java.util.OptionalLong produceOptionalLongConfigProperty(javax.enterprise.inject.spi.InjectionPoint)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.smallrye.config.inject.ConfigProducer:java.util.OptionalDouble produceOptionalDoubleConfigProperty(javax.enterprise.inject.spi.InjectionPoint)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.smallrye.config.SmallRyeConfigProviderResolver:org.eclipse.microprofile.config.Config getConfig(java.lang.ClassLoader)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.smallrye.config.SmallRyeConfigProviderResolver:org.eclipse.microprofile.config.Config getConfig()"
        ]
    },
    "io.smallrye.config.SmallRyeConfigProviderResolver:void registerConfig(org.eclipse.microprofile.config.Config,java.lang.ClassLoader)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.smallrye.config.Converters$lambda_static_7c03a47f_1__8:java.lang.Object convert(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.smallrye.config.inject.ConfigProducerUtil:java.lang.Object getValue(javax.enterprise.inject.spi.InjectionPoint,org.eclipse.microprofile.config.Config)",
            "io.smallrye.config.SmallRyeConfig:java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)",
            "io.smallrye.config.SmallRyeConfig:java.lang.Object convert(java.lang.String,java.lang.Class)",
            "io.smallrye.config.Converters:org.eclipse.microprofile.config.spi.Converter minimumValueStringConverter(org.eclipse.microprofile.config.spi.Converter,java.lang.String,boolean)",
            "io.smallrye.config.Converters:org.eclipse.microprofile.config.spi.Converter minimumValueStringConverter(java.util.Comparator,org.eclipse.microprofile.config.spi.Converter,java.lang.String,boolean)",
            "io.smallrye.config.Converters:org.eclipse.microprofile.config.spi.Converter maximumValueStringConverter(org.eclipse.microprofile.config.spi.Converter,java.lang.String,boolean)",
            "io.smallrye.config.Converters:org.eclipse.microprofile.config.spi.Converter maximumValueStringConverter(java.util.Comparator,org.eclipse.microprofile.config.spi.Converter,java.lang.String,boolean)",
            "io.smallrye.config.Converters:org.eclipse.microprofile.config.spi.Converter rangeValueStringConverter(org.eclipse.microprofile.config.spi.Converter,java.lang.String,boolean,java.lang.String,boolean)",
            "io.smallrye.config.Converters:org.eclipse.microprofile.config.spi.Converter rangeValueStringConverter(java.util.Comparator,org.eclipse.microprofile.config.spi.Converter,java.lang.String,boolean,java.lang.String,boolean)",
            "io.smallrye.config.Converters$TrimmingConverter:java.lang.Object convert(java.lang.String)",
            "io.smallrye.config.Converters$EmptyValueConverter:java.lang.Object convert(java.lang.String)",
            "io.smallrye.config.Converters$BuiltInConverter:java.lang.Object convert(java.lang.String)",
            "io.smallrye.config.Converters$OptionalDoubleConverter:java.util.OptionalDouble convert(java.lang.String)",
            "io.smallrye.config.Converters$OptionalLongConverter:java.util.OptionalLong convert(java.lang.String)",
            "io.smallrye.config.Converters$OptionalIntConverter:java.util.OptionalInt convert(java.lang.String)",
            "io.smallrye.config.Converters$OptionalConverter:java.util.Optional convert(java.lang.String)",
            "io.smallrye.config.Converters$ArrayConverter:java.lang.Object convert(java.lang.String)",
            "io.smallrye.config.Converters$CollectionConverter:java.util.Collection convert(java.lang.String)",
            "io.smallrye.config.Converters$RangeCheckConverter:java.lang.Object convert(java.lang.String)",
            "io.smallrye.config.Converters$PatternCheckConverter:java.lang.Object convert(java.lang.String)"
        ]
    },
    "io.smallrye.config.Converters$lambda_static_7c03a47f_1__22:java.lang.Object convert(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.smallrye.config.inject.ConfigProducerUtil:java.lang.Object getValue(javax.enterprise.inject.spi.InjectionPoint,org.eclipse.microprofile.config.Config)",
            "io.smallrye.config.SmallRyeConfig:java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)",
            "io.smallrye.config.SmallRyeConfig:java.lang.Object convert(java.lang.String,java.lang.Class)",
            "io.smallrye.config.Converters:org.eclipse.microprofile.config.spi.Converter minimumValueStringConverter(org.eclipse.microprofile.config.spi.Converter,java.lang.String,boolean)",
            "io.smallrye.config.Converters:org.eclipse.microprofile.config.spi.Converter minimumValueStringConverter(java.util.Comparator,org.eclipse.microprofile.config.spi.Converter,java.lang.String,boolean)",
            "io.smallrye.config.Converters:org.eclipse.microprofile.config.spi.Converter maximumValueStringConverter(org.eclipse.microprofile.config.spi.Converter,java.lang.String,boolean)",
            "io.smallrye.config.Converters:org.eclipse.microprofile.config.spi.Converter maximumValueStringConverter(java.util.Comparator,org.eclipse.microprofile.config.spi.Converter,java.lang.String,boolean)",
            "io.smallrye.config.Converters:org.eclipse.microprofile.config.spi.Converter rangeValueStringConverter(org.eclipse.microprofile.config.spi.Converter,java.lang.String,boolean,java.lang.String,boolean)",
            "io.smallrye.config.Converters:org.eclipse.microprofile.config.spi.Converter rangeValueStringConverter(java.util.Comparator,org.eclipse.microprofile.config.spi.Converter,java.lang.String,boolean,java.lang.String,boolean)",
            "io.smallrye.config.Converters$TrimmingConverter:java.lang.Object convert(java.lang.String)",
            "io.smallrye.config.Converters$EmptyValueConverter:java.lang.Object convert(java.lang.String)",
            "io.smallrye.config.Converters$BuiltInConverter:java.lang.Object convert(java.lang.String)",
            "io.smallrye.config.Converters$OptionalDoubleConverter:java.util.OptionalDouble convert(java.lang.String)",
            "io.smallrye.config.Converters$OptionalLongConverter:java.util.OptionalLong convert(java.lang.String)",
            "io.smallrye.config.Converters$OptionalIntConverter:java.util.OptionalInt convert(java.lang.String)",
            "io.smallrye.config.Converters$OptionalConverter:java.util.Optional convert(java.lang.String)",
            "io.smallrye.config.Converters$ArrayConverter:java.lang.Object convert(java.lang.String)",
            "io.smallrye.config.Converters$CollectionConverter:java.util.Collection convert(java.lang.String)",
            "io.smallrye.config.Converters$RangeCheckConverter:java.lang.Object convert(java.lang.String)",
            "io.smallrye.config.Converters$PatternCheckConverter:java.lang.Object convert(java.lang.String)"
        ]
    },
    "io.smallrye.config.inject.ConfigProducerUtil:java.lang.Object getValue(javax.enterprise.inject.spi.InjectionPoint,org.eclipse.microprofile.config.Config)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.smallrye.config.inject.ConfigProducer:java.lang.String produceStringConfigProperty(javax.enterprise.inject.spi.InjectionPoint)",
            "io.smallrye.config.inject.ConfigProducer:java.lang.Long getLongValue(javax.enterprise.inject.spi.InjectionPoint)",
            "io.smallrye.config.inject.ConfigProducer:java.lang.Integer getIntegerValue(javax.enterprise.inject.spi.InjectionPoint)",
            "io.smallrye.config.inject.ConfigProducer:java.lang.Float produceFloatConfigProperty(javax.enterprise.inject.spi.InjectionPoint)",
            "io.smallrye.config.inject.ConfigProducer:java.lang.Double produceDoubleConfigProperty(javax.enterprise.inject.spi.InjectionPoint)",
            "io.smallrye.config.inject.ConfigProducer:java.lang.Boolean produceBooleanConfigProperty(javax.enterprise.inject.spi.InjectionPoint)",
            "io.smallrye.config.inject.ConfigProducer:java.lang.Short produceShortConfigProperty(javax.enterprise.inject.spi.InjectionPoint)",
            "io.smallrye.config.inject.ConfigProducer:java.lang.Byte produceByteConfigProperty(javax.enterprise.inject.spi.InjectionPoint)",
            "io.smallrye.config.inject.ConfigProducer:java.lang.Character produceCharacterConfigProperty(javax.enterprise.inject.spi.InjectionPoint)",
            "io.smallrye.config.inject.ConfigProducer:java.util.Optional produceOptionalConfigValue(javax.enterprise.inject.spi.InjectionPoint)",
            "io.smallrye.config.inject.ConfigProducer:java.util.Set producesSetConfigProperty(javax.enterprise.inject.spi.InjectionPoint)",
            "io.smallrye.config.inject.ConfigProducer:java.util.List producesListConfigProperty(javax.enterprise.inject.spi.InjectionPoint)",
            "io.smallrye.config.inject.ConfigProducer:java.util.OptionalInt produceOptionalIntConfigProperty(javax.enterprise.inject.spi.InjectionPoint)",
            "io.smallrye.config.inject.ConfigProducer:java.util.OptionalLong produceOptionalLongConfigProperty(javax.enterprise.inject.spi.InjectionPoint)",
            "io.smallrye.config.inject.ConfigProducer:java.util.OptionalDouble produceOptionalDoubleConfigProperty(javax.enterprise.inject.spi.InjectionPoint)"
        ]
    },
    "io.smallrye.config.SmallRyeConfig:java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.smallrye.config.SmallRyeConfig:java.util.Collection getValues(java.lang.String,org.eclipse.microprofile.config.spi.Converter,java.util.function.IntFunction)",
            "io.smallrye.config.SmallRyeConfig:java.lang.Object getValue(java.lang.String,java.lang.Class)",
            "io.smallrye.config.SmallRyeConfig:java.util.Optional getOptionalValue(java.lang.String,java.lang.Class)",
            "io.smallrye.config.SmallRyeConfig:java.util.Optional getOptionalValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)"
        ]
    },
    "io.smallrye.config.SmallRyeConfig:java.lang.Object convert(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.smallrye.config.inject.ConfigInjectionBean:java.lang.Object create(javax.enterprise.context.spi.CreationalContext)"
        ]
    },
    "io.smallrye.config.Converters:org.eclipse.microprofile.config.spi.Converter minimumValueStringConverter(org.eclipse.microprofile.config.spi.Converter,java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.smallrye.config.Converters:org.eclipse.microprofile.config.spi.Converter minimumValueStringConverter(java.util.Comparator,org.eclipse.microprofile.config.spi.Converter,java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.smallrye.config.Converters:org.eclipse.microprofile.config.spi.Converter maximumValueStringConverter(org.eclipse.microprofile.config.spi.Converter,java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.smallrye.config.Converters:org.eclipse.microprofile.config.spi.Converter maximumValueStringConverter(java.util.Comparator,org.eclipse.microprofile.config.spi.Converter,java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.smallrye.config.Converters:org.eclipse.microprofile.config.spi.Converter rangeValueStringConverter(org.eclipse.microprofile.config.spi.Converter,java.lang.String,boolean,java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.smallrye.config.Converters:org.eclipse.microprofile.config.spi.Converter rangeValueStringConverter(java.util.Comparator,org.eclipse.microprofile.config.spi.Converter,java.lang.String,boolean,java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.smallrye.config.Converters$TrimmingConverter:java.lang.Object convert(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.smallrye.config.Converters$EmptyValueConverter:java.lang.Object convert(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.smallrye.config.Converters$BuiltInConverter:java.lang.Object convert(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.smallrye.config.inject.ConfigProducerUtil:java.lang.Object getValue(javax.enterprise.inject.spi.InjectionPoint,org.eclipse.microprofile.config.Config)",
            "io.smallrye.config.SmallRyeConfig:java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)",
            "io.smallrye.config.SmallRyeConfig:java.lang.Object convert(java.lang.String,java.lang.Class)",
            "io.smallrye.config.Converters:org.eclipse.microprofile.config.spi.Converter minimumValueStringConverter(org.eclipse.microprofile.config.spi.Converter,java.lang.String,boolean)",
            "io.smallrye.config.Converters:org.eclipse.microprofile.config.spi.Converter minimumValueStringConverter(java.util.Comparator,org.eclipse.microprofile.config.spi.Converter,java.lang.String,boolean)",
            "io.smallrye.config.Converters:org.eclipse.microprofile.config.spi.Converter maximumValueStringConverter(org.eclipse.microprofile.config.spi.Converter,java.lang.String,boolean)",
            "io.smallrye.config.Converters:org.eclipse.microprofile.config.spi.Converter maximumValueStringConverter(java.util.Comparator,org.eclipse.microprofile.config.spi.Converter,java.lang.String,boolean)",
            "io.smallrye.config.Converters:org.eclipse.microprofile.config.spi.Converter rangeValueStringConverter(org.eclipse.microprofile.config.spi.Converter,java.lang.String,boolean,java.lang.String,boolean)",
            "io.smallrye.config.Converters:org.eclipse.microprofile.config.spi.Converter rangeValueStringConverter(java.util.Comparator,org.eclipse.microprofile.config.spi.Converter,java.lang.String,boolean,java.lang.String,boolean)",
            "io.smallrye.config.Converters$TrimmingConverter:java.lang.Object convert(java.lang.String)",
            "io.smallrye.config.Converters$EmptyValueConverter:java.lang.Object convert(java.lang.String)",
            "io.smallrye.config.Converters$BuiltInConverter:java.lang.Object convert(java.lang.String)",
            "io.smallrye.config.Converters$OptionalDoubleConverter:java.util.OptionalDouble convert(java.lang.String)",
            "io.smallrye.config.Converters$OptionalLongConverter:java.util.OptionalLong convert(java.lang.String)",
            "io.smallrye.config.Converters$OptionalIntConverter:java.util.OptionalInt convert(java.lang.String)",
            "io.smallrye.config.Converters$OptionalConverter:java.util.Optional convert(java.lang.String)",
            "io.smallrye.config.Converters$ArrayConverter:java.lang.Object convert(java.lang.String)",
            "io.smallrye.config.Converters$CollectionConverter:java.util.Collection convert(java.lang.String)",
            "io.smallrye.config.Converters$RangeCheckConverter:java.lang.Object convert(java.lang.String)",
            "io.smallrye.config.Converters$PatternCheckConverter:java.lang.Object convert(java.lang.String)"
        ]
    },
    "io.smallrye.config.Converters$OptionalDoubleConverter:java.util.OptionalDouble convert(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.smallrye.config.Converters$OptionalDoubleConverter:java.lang.Object convert(java.lang.String)"
        ]
    },
    "io.smallrye.config.Converters$OptionalLongConverter:java.util.OptionalLong convert(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.smallrye.config.Converters$OptionalLongConverter:java.lang.Object convert(java.lang.String)"
        ]
    },
    "io.smallrye.config.Converters$OptionalIntConverter:java.util.OptionalInt convert(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.smallrye.config.Converters$OptionalIntConverter:java.lang.Object convert(java.lang.String)"
        ]
    },
    "io.smallrye.config.Converters$OptionalConverter:java.util.Optional convert(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.smallrye.config.Converters$OptionalConverter:java.lang.Object convert(java.lang.String)"
        ]
    },
    "io.smallrye.config.Converters$ArrayConverter:java.lang.Object convert(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.smallrye.config.Converters$CollectionConverter:java.util.Collection convert(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.smallrye.config.Converters$CollectionConverter:java.lang.Object convert(java.lang.String)"
        ]
    },
    "io.smallrye.config.Converters$RangeCheckConverter:java.lang.Object convert(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.smallrye.config.inject.ConfigProducerUtil:java.lang.Object getValue(javax.enterprise.inject.spi.InjectionPoint,org.eclipse.microprofile.config.Config)",
            "io.smallrye.config.SmallRyeConfig:java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)",
            "io.smallrye.config.SmallRyeConfig:java.lang.Object convert(java.lang.String,java.lang.Class)",
            "io.smallrye.config.Converters:org.eclipse.microprofile.config.spi.Converter minimumValueStringConverter(org.eclipse.microprofile.config.spi.Converter,java.lang.String,boolean)",
            "io.smallrye.config.Converters:org.eclipse.microprofile.config.spi.Converter minimumValueStringConverter(java.util.Comparator,org.eclipse.microprofile.config.spi.Converter,java.lang.String,boolean)",
            "io.smallrye.config.Converters:org.eclipse.microprofile.config.spi.Converter maximumValueStringConverter(org.eclipse.microprofile.config.spi.Converter,java.lang.String,boolean)",
            "io.smallrye.config.Converters:org.eclipse.microprofile.config.spi.Converter maximumValueStringConverter(java.util.Comparator,org.eclipse.microprofile.config.spi.Converter,java.lang.String,boolean)",
            "io.smallrye.config.Converters:org.eclipse.microprofile.config.spi.Converter rangeValueStringConverter(org.eclipse.microprofile.config.spi.Converter,java.lang.String,boolean,java.lang.String,boolean)",
            "io.smallrye.config.Converters:org.eclipse.microprofile.config.spi.Converter rangeValueStringConverter(java.util.Comparator,org.eclipse.microprofile.config.spi.Converter,java.lang.String,boolean,java.lang.String,boolean)",
            "io.smallrye.config.Converters$TrimmingConverter:java.lang.Object convert(java.lang.String)",
            "io.smallrye.config.Converters$EmptyValueConverter:java.lang.Object convert(java.lang.String)",
            "io.smallrye.config.Converters$BuiltInConverter:java.lang.Object convert(java.lang.String)",
            "io.smallrye.config.Converters$OptionalDoubleConverter:java.util.OptionalDouble convert(java.lang.String)",
            "io.smallrye.config.Converters$OptionalLongConverter:java.util.OptionalLong convert(java.lang.String)",
            "io.smallrye.config.Converters$OptionalIntConverter:java.util.OptionalInt convert(java.lang.String)",
            "io.smallrye.config.Converters$OptionalConverter:java.util.Optional convert(java.lang.String)",
            "io.smallrye.config.Converters$ArrayConverter:java.lang.Object convert(java.lang.String)",
            "io.smallrye.config.Converters$CollectionConverter:java.util.Collection convert(java.lang.String)",
            "io.smallrye.config.Converters$RangeCheckConverter:java.lang.Object convert(java.lang.String)",
            "io.smallrye.config.Converters$PatternCheckConverter:java.lang.Object convert(java.lang.String)"
        ]
    },
    "io.smallrye.config.Converters$PatternCheckConverter:java.lang.Object convert(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.smallrye.config.inject.ConfigProducerUtil:java.lang.Object getValue(javax.enterprise.inject.spi.InjectionPoint,org.eclipse.microprofile.config.Config)",
            "io.smallrye.config.SmallRyeConfig:java.lang.Object getValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)",
            "io.smallrye.config.SmallRyeConfig:java.lang.Object convert(java.lang.String,java.lang.Class)",
            "io.smallrye.config.Converters:org.eclipse.microprofile.config.spi.Converter minimumValueStringConverter(org.eclipse.microprofile.config.spi.Converter,java.lang.String,boolean)",
            "io.smallrye.config.Converters:org.eclipse.microprofile.config.spi.Converter minimumValueStringConverter(java.util.Comparator,org.eclipse.microprofile.config.spi.Converter,java.lang.String,boolean)",
            "io.smallrye.config.Converters:org.eclipse.microprofile.config.spi.Converter maximumValueStringConverter(org.eclipse.microprofile.config.spi.Converter,java.lang.String,boolean)",
            "io.smallrye.config.Converters:org.eclipse.microprofile.config.spi.Converter maximumValueStringConverter(java.util.Comparator,org.eclipse.microprofile.config.spi.Converter,java.lang.String,boolean)",
            "io.smallrye.config.Converters:org.eclipse.microprofile.config.spi.Converter rangeValueStringConverter(org.eclipse.microprofile.config.spi.Converter,java.lang.String,boolean,java.lang.String,boolean)",
            "io.smallrye.config.Converters:org.eclipse.microprofile.config.spi.Converter rangeValueStringConverter(java.util.Comparator,org.eclipse.microprofile.config.spi.Converter,java.lang.String,boolean,java.lang.String,boolean)",
            "io.smallrye.config.Converters$TrimmingConverter:java.lang.Object convert(java.lang.String)",
            "io.smallrye.config.Converters$EmptyValueConverter:java.lang.Object convert(java.lang.String)",
            "io.smallrye.config.Converters$BuiltInConverter:java.lang.Object convert(java.lang.String)",
            "io.smallrye.config.Converters$OptionalDoubleConverter:java.util.OptionalDouble convert(java.lang.String)",
            "io.smallrye.config.Converters$OptionalLongConverter:java.util.OptionalLong convert(java.lang.String)",
            "io.smallrye.config.Converters$OptionalIntConverter:java.util.OptionalInt convert(java.lang.String)",
            "io.smallrye.config.Converters$OptionalConverter:java.util.Optional convert(java.lang.String)",
            "io.smallrye.config.Converters$ArrayConverter:java.lang.Object convert(java.lang.String)",
            "io.smallrye.config.Converters$CollectionConverter:java.util.Collection convert(java.lang.String)",
            "io.smallrye.config.Converters$RangeCheckConverter:java.lang.Object convert(java.lang.String)",
            "io.smallrye.config.Converters$PatternCheckConverter:java.lang.Object convert(java.lang.String)"
        ]
    },
    "io.smallrye.config.SmallRyeConfig:java.util.Collection getValues(java.lang.String,org.eclipse.microprofile.config.spi.Converter,java.util.function.IntFunction)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.smallrye.config.SmallRyeConfig:java.util.Collection getValues(java.lang.String,java.lang.Class,java.util.function.IntFunction)"
        ]
    },
    "io.smallrye.config.SmallRyeConfig:java.lang.Object getValue(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.smallrye.config.inject.ConfigInjectionBean:java.lang.Object create(javax.enterprise.context.spi.CreationalContext)"
        ]
    },
    "io.smallrye.config.SmallRyeConfig:java.util.Optional getOptionalValue(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.smallrye.config.inject.ConfigExtension:void validate(javax.enterprise.inject.spi.AfterDeploymentValidation)",
            "io.smallrye.config.inject.ConfigInjectionBean:java.lang.Object create(javax.enterprise.context.spi.CreationalContext)"
        ]
    },
    "io.smallrye.config.SmallRyeConfig:java.util.Optional getOptionalValue(java.lang.String,org.eclipse.microprofile.config.spi.Converter)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.smallrye.config.SmallRyeConfig:java.util.Optional getOptionalValues(java.lang.String,org.eclipse.microprofile.config.spi.Converter,java.util.function.IntFunction)"
        ]
    },
    "io.smallrye.config.inject.ConfigInjectionBean:java.lang.Object create(javax.enterprise.context.spi.CreationalContext)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.smallrye.config.Converters$OptionalDoubleConverter:java.lang.Object convert(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.smallrye.config.Converters$OptionalLongConverter:java.lang.Object convert(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.smallrye.config.Converters$OptionalIntConverter:java.lang.Object convert(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.smallrye.config.Converters$OptionalConverter:java.lang.Object convert(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.smallrye.config.Converters$CollectionConverter:java.lang.Object convert(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.smallrye.config.SmallRyeConfig:java.util.Collection getValues(java.lang.String,java.lang.Class,java.util.function.IntFunction)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.smallrye.config.inject.ConfigExtension:void validate(javax.enterprise.inject.spi.AfterDeploymentValidation)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.smallrye.config.SmallRyeConfig:java.util.Optional getOptionalValues(java.lang.String,org.eclipse.microprofile.config.spi.Converter,java.util.function.IntFunction)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.smallrye.config.SmallRyeConfig:java.util.Optional getOptionalValues(java.lang.String,java.lang.Class,java.util.function.IntFunction)"
        ]
    },
    "io.smallrye.config.SmallRyeConfig:java.util.Optional getOptionalValues(java.lang.String,java.lang.Class,java.util.function.IntFunction)": {
        "isVulRoot": false,
        "vulCaller": []
    }
}
{
    "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:void doResults(org.apache.cxf.binding.soap.SoapMessage,java.lang.String,org.w3c.dom.Element,org.w3c.dom.Element,java.util.List,boolean)": {
        "isVulRoot": true,
        "vulCaller": [
            "org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor:void doResults(org.apache.cxf.binding.soap.SoapMessage,java.lang.String,org.w3c.dom.Element,org.w3c.dom.Element,java.util.List)"
        ]
    },
    "org.apache.cxf.ws.security.wss4j.policyvalidators.AbstractSupportingTokenPolicyValidator:boolean processKerberosTokens()": {
        "isVulRoot": true,
        "vulCaller": [
            "org.apache.cxf.ws.security.wss4j.policyvalidators.EndorsingEncryptedTokenPolicyValidator:boolean validatePolicy(org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.message.Message,java.util.List,java.util.List,java.util.List)",
            "org.apache.cxf.ws.security.wss4j.policyvalidators.SignedEndorsingTokenPolicyValidator:boolean validatePolicy(org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.message.Message,java.util.List,java.util.List,java.util.List)",
            "org.apache.cxf.ws.security.wss4j.policyvalidators.EndorsingTokenPolicyValidator:boolean validatePolicy(org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.message.Message,java.util.List,java.util.List,java.util.List)",
            "org.apache.cxf.ws.security.wss4j.policyvalidators.SignedEncryptedTokenPolicyValidator:boolean validatePolicy(org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.message.Message,java.util.List,java.util.List,java.util.List)",
            "org.apache.cxf.ws.security.wss4j.policyvalidators.EncryptedTokenPolicyValidator:boolean validatePolicy(org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.message.Message,java.util.List,java.util.List,java.util.List)",
            "org.apache.cxf.ws.security.wss4j.policyvalidators.SignedTokenPolicyValidator:boolean validatePolicy(org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.message.Message,java.util.List,java.util.List,java.util.List)",
            "org.apache.cxf.ws.security.wss4j.policyvalidators.SignedEndorsingEncryptedTokenPolicyValidator:boolean validatePolicy(org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.message.Message,java.util.List,java.util.List,java.util.List)"
        ]
    },
    "org.apache.cxf.ws.security.wss4j.policyvalidators.AbstractSupportingTokenPolicyValidator:boolean processSCTokens()": {
        "isVulRoot": true,
        "vulCaller": [
            "org.apache.cxf.ws.security.wss4j.policyvalidators.EndorsingEncryptedTokenPolicyValidator:boolean validatePolicy(org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.message.Message,java.util.List,java.util.List,java.util.List)",
            "org.apache.cxf.ws.security.wss4j.policyvalidators.SignedEndorsingTokenPolicyValidator:boolean validatePolicy(org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.message.Message,java.util.List,java.util.List,java.util.List)",
            "org.apache.cxf.ws.security.wss4j.policyvalidators.EndorsingTokenPolicyValidator:boolean validatePolicy(org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.message.Message,java.util.List,java.util.List,java.util.List)",
            "org.apache.cxf.ws.security.wss4j.policyvalidators.SignedEncryptedTokenPolicyValidator:boolean validatePolicy(org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.message.Message,java.util.List,java.util.List,java.util.List)",
            "org.apache.cxf.ws.security.wss4j.policyvalidators.EncryptedTokenPolicyValidator:boolean validatePolicy(org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.message.Message,java.util.List,java.util.List,java.util.List)",
            "org.apache.cxf.ws.security.wss4j.policyvalidators.SignedTokenPolicyValidator:boolean validatePolicy(org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.message.Message,java.util.List,java.util.List,java.util.List)",
            "org.apache.cxf.ws.security.wss4j.policyvalidators.SignedEndorsingEncryptedTokenPolicyValidator:boolean validatePolicy(org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.message.Message,java.util.List,java.util.List,java.util.List)"
        ]
    },
    "org.apache.cxf.ws.security.wss4j.policyvalidators.AbstractSupportingTokenPolicyValidator:boolean processX509Tokens()": {
        "isVulRoot": true,
        "vulCaller": [
            "org.apache.cxf.ws.security.wss4j.policyvalidators.EndorsingEncryptedTokenPolicyValidator:boolean validatePolicy(org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.message.Message,java.util.List,java.util.List,java.util.List)",
            "org.apache.cxf.ws.security.wss4j.policyvalidators.SignedEndorsingTokenPolicyValidator:boolean validatePolicy(org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.message.Message,java.util.List,java.util.List,java.util.List)",
            "org.apache.cxf.ws.security.wss4j.policyvalidators.EndorsingTokenPolicyValidator:boolean validatePolicy(org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.message.Message,java.util.List,java.util.List,java.util.List)",
            "org.apache.cxf.ws.security.wss4j.policyvalidators.SignedEncryptedTokenPolicyValidator:boolean validatePolicy(org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.message.Message,java.util.List,java.util.List,java.util.List)",
            "org.apache.cxf.ws.security.wss4j.policyvalidators.EncryptedTokenPolicyValidator:boolean validatePolicy(org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.message.Message,java.util.List,java.util.List,java.util.List)",
            "org.apache.cxf.ws.security.wss4j.policyvalidators.SignedTokenPolicyValidator:boolean validatePolicy(org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.message.Message,java.util.List,java.util.List,java.util.List)",
            "org.apache.cxf.ws.security.wss4j.policyvalidators.SignedEndorsingEncryptedTokenPolicyValidator:boolean validatePolicy(org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.message.Message,java.util.List,java.util.List,java.util.List)"
        ]
    },
    "org.apache.cxf.ws.security.wss4j.policyvalidators.AbstractSupportingTokenPolicyValidator:boolean processUsernameTokens()": {
        "isVulRoot": true,
        "vulCaller": [
            "org.apache.cxf.ws.security.wss4j.policyvalidators.SignedEncryptedTokenPolicyValidator:boolean validatePolicy(org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.message.Message,java.util.List,java.util.List,java.util.List)",
            "org.apache.cxf.ws.security.wss4j.policyvalidators.EncryptedTokenPolicyValidator:boolean validatePolicy(org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.message.Message,java.util.List,java.util.List,java.util.List)",
            "org.apache.cxf.ws.security.wss4j.policyvalidators.SignedTokenPolicyValidator:boolean validatePolicy(org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.message.Message,java.util.List,java.util.List,java.util.List)"
        ]
    },
    "org.apache.cxf.ws.security.wss4j.policyvalidators.AbstractSupportingTokenPolicyValidator:boolean processSAMLTokens()": {
        "isVulRoot": true,
        "vulCaller": [
            "org.apache.cxf.ws.security.wss4j.policyvalidators.EndorsingEncryptedTokenPolicyValidator:boolean validatePolicy(org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.message.Message,java.util.List,java.util.List,java.util.List)",
            "org.apache.cxf.ws.security.wss4j.policyvalidators.SignedEndorsingTokenPolicyValidator:boolean validatePolicy(org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.message.Message,java.util.List,java.util.List,java.util.List)",
            "org.apache.cxf.ws.security.wss4j.policyvalidators.EndorsingTokenPolicyValidator:boolean validatePolicy(org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.message.Message,java.util.List,java.util.List,java.util.List)",
            "org.apache.cxf.ws.security.wss4j.policyvalidators.SignedEncryptedTokenPolicyValidator:boolean validatePolicy(org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.message.Message,java.util.List,java.util.List,java.util.List)",
            "org.apache.cxf.ws.security.wss4j.policyvalidators.EncryptedTokenPolicyValidator:boolean validatePolicy(org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.message.Message,java.util.List,java.util.List,java.util.List)",
            "org.apache.cxf.ws.security.wss4j.policyvalidators.SignedTokenPolicyValidator:boolean validatePolicy(org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.message.Message,java.util.List,java.util.List,java.util.List)",
            "org.apache.cxf.ws.security.wss4j.policyvalidators.SignedEndorsingEncryptedTokenPolicyValidator:boolean validatePolicy(org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.message.Message,java.util.List,java.util.List,java.util.List)"
        ]
    },
    "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:boolean checkSupportingTokenCoverage(org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.binding.soap.SoapMessage,java.util.List,java.util.List,java.util.List,boolean)": {
        "isVulRoot": true,
        "vulCaller": [
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:void doResults(org.apache.cxf.binding.soap.SoapMessage,java.lang.String,org.w3c.dom.Element,org.w3c.dom.Element,java.util.List,boolean)"
        ]
    },
    "org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.wss4j.AbstractUsernameTokenAuthenticatingInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)",
            "org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor:void handleMessage(org.apache.cxf.message.Message)"
        ]
    },
    "org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor:void doResults(org.apache.cxf.binding.soap.SoapMessage,java.lang.String,org.w3c.dom.Element,org.w3c.dom.Element,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)"
        ]
    },
    "org.apache.cxf.ws.security.wss4j.policyvalidators.EndorsingEncryptedTokenPolicyValidator:boolean validatePolicy(org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.message.Message,java.util.List,java.util.List,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:boolean checkSupportingTokenCoverage(org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.binding.soap.SoapMessage,java.util.List,java.util.List,java.util.List,boolean)"
        ]
    },
    "org.apache.cxf.ws.security.wss4j.policyvalidators.SignedEndorsingTokenPolicyValidator:boolean validatePolicy(org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.message.Message,java.util.List,java.util.List,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:boolean checkSupportingTokenCoverage(org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.binding.soap.SoapMessage,java.util.List,java.util.List,java.util.List,boolean)"
        ]
    },
    "org.apache.cxf.ws.security.wss4j.policyvalidators.EndorsingTokenPolicyValidator:boolean validatePolicy(org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.message.Message,java.util.List,java.util.List,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:boolean checkSupportingTokenCoverage(org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.binding.soap.SoapMessage,java.util.List,java.util.List,java.util.List,boolean)"
        ]
    },
    "org.apache.cxf.ws.security.wss4j.policyvalidators.SignedEncryptedTokenPolicyValidator:boolean validatePolicy(org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.message.Message,java.util.List,java.util.List,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:boolean checkSupportingTokenCoverage(org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.binding.soap.SoapMessage,java.util.List,java.util.List,java.util.List,boolean)"
        ]
    },
    "org.apache.cxf.ws.security.wss4j.policyvalidators.EncryptedTokenPolicyValidator:boolean validatePolicy(org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.message.Message,java.util.List,java.util.List,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:boolean checkSupportingTokenCoverage(org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.binding.soap.SoapMessage,java.util.List,java.util.List,java.util.List,boolean)"
        ]
    },
    "org.apache.cxf.ws.security.wss4j.policyvalidators.SignedTokenPolicyValidator:boolean validatePolicy(org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.message.Message,java.util.List,java.util.List,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:boolean checkSupportingTokenCoverage(org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.binding.soap.SoapMessage,java.util.List,java.util.List,java.util.List,boolean)"
        ]
    },
    "org.apache.cxf.ws.security.wss4j.policyvalidators.SignedEndorsingEncryptedTokenPolicyValidator:boolean validatePolicy(org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.message.Message,java.util.List,java.util.List,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.cxf.ws.security.wss4j.PolicyBasedWSS4JInInterceptor:boolean checkSupportingTokenCoverage(org.apache.cxf.ws.policy.AssertionInfoMap,org.apache.cxf.binding.soap.SoapMessage,java.util.List,java.util.List,java.util.List,boolean)"
        ]
    },
    "org.apache.cxf.ws.security.wss4j.AbstractUsernameTokenAuthenticatingInterceptor:void handleMessage(org.apache.cxf.binding.soap.SoapMessage)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor:void handleMessage(org.apache.cxf.message.Message)": {
        "isVulRoot": false,
        "vulCaller": []
    }
}
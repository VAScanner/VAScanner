{
    "com.alibaba:fastjson:1.2.62": {
        "com.alibaba.fastjson.JSON:java.lang.Object parse(java.lang.String)": 17,
        "com.alibaba.fastjson.JSON:java.lang.Object parseObject(java.lang.String,java.lang.Class)": 30,
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object)": 55,
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object,boolean)": 3,
        "com.alibaba.fastjson.JSON:java.util.List parseArray(java.lang.String,java.lang.Class)": 7,
        "com.alibaba.fastjson.JSON:com.alibaba.fastjson.JSONObject parseObject(java.lang.String)": 7,
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object,com.alibaba.fastjson.serializer.SerializerFeature[])": 1,
        "com.alibaba.fastjson.JSON:java.lang.Object toJSON(java.lang.Object)": 2,
        "com.alibaba.fastjson.JSON:byte[] toJSONBytes(java.lang.Object,com.alibaba.fastjson.serializer.SerializerFeature[])": 1,
        "com.alibaba.fastjson.JSON:java.lang.Object parse(byte[],com.alibaba.fastjson.parser.Feature[])": 1
    },
    "org.apache.pdfbox:pdfbox:2.0.16": {
        "org.apache.pdfbox.pdfparser.PDFParser:void <init>(org.apache.pdfbox.io.RandomAccessRead)": 1,
        "org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromImage(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage)": 1,
        "org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromStream(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)": 1,
        "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDDocument load(java.io.File)": 1
    },
    "dom4j:dom4j:1.6.1": {
        "org.dom4j.DocumentHelper:org.dom4j.Document parseText(java.lang.String)": 10,
        "org.dom4j.io.SAXReader:org.dom4j.Document read(java.io.File)": 5,
        "org.dom4j.io.SAXReader:org.dom4j.Document read(java.io.InputStream)": 6,
        "org.dom4j.io.SAXReader:org.dom4j.Document read(java.io.Reader)": 1,
        "org.dom4j.io.SAXReader:org.dom4j.Document read(java.net.URL)": 2,
        "org.dom4j.io.SAXReader:org.dom4j.Document read(java.lang.String)": 1
    },
    "com.mchange:c3p0:0.9.5.2": {
        "com.mchange.v2.c3p0.ComboPooledDataSource:void <init>()": 1
    },
    "io.netty:netty-all:4.1.31.Final": {
        "io.netty.channel.ChannelInitializer:void <init>()": 2,
        "io.netty.handler.codec.string.StringEncoder:void <init>()": 2,
        "io.netty.handler.codec.string.StringDecoder:void <init>()": 2,
        "io.netty.handler.codec.LineBasedFrameDecoder:void <init>(int)": 2,
        "io.netty.bootstrap.Bootstrap:io.netty.channel.ChannelFuture connect(java.lang.String,int)": 1,
        "io.netty.channel.nio.NioEventLoopGroup:void <init>()": 3,
        "io.netty.channel.group.DefaultChannelGroup:void <init>(io.netty.util.concurrent.EventExecutor)": 1
    },
    "org.apache.commons:commons-compress:1.12": {
        "org.apache.commons.compress.compressors.gzip.GzipCompressorInputStream:void <init>(java.io.InputStream)": 2,
        "org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream:void <init>(java.io.InputStream)": 4,
        "org.apache.commons.compress.utils.IOUtils:long copy(java.io.InputStream,java.io.OutputStream)": 2
    },
    "com.alibaba:fastjson:1.2.70": {
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object)": 43,
        "com.alibaba.fastjson.JSON:java.lang.Object toJSON(java.lang.Object)": 1,
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object,com.alibaba.fastjson.serializer.SerializerFeature[])": 2,
        "com.alibaba.fastjson.JSON:java.lang.Object parseObject(java.lang.String,java.lang.Class)": 4,
        "com.alibaba.fastjson.JSON:java.lang.Object parse(java.lang.String)": 13,
        "com.alibaba.fastjson.JSONObject:java.lang.Object get(java.lang.Object)": 25,
        "com.alibaba.fastjson.JSON:com.alibaba.fastjson.JSONObject parseObject(java.lang.String)": 2,
        "com.alibaba.fastjson.JSONObject:java.lang.String getString(java.lang.String)": 3,
        "com.alibaba.fastjson.JSONObject:com.alibaba.fastjson.JSONObject getJSONObject(java.lang.String)": 4,
        "com.alibaba.fastjson.JSON:java.util.List parseArray(java.lang.String,java.lang.Class)": 1,
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object,com.alibaba.fastjson.serializer.SerializeFilter,com.alibaba.fastjson.serializer.SerializerFeature[])": 1
    },
    "com.alibaba:fastjson:1.2.58": {
        "com.alibaba.fastjson.JSON:byte[] toJSONBytes(java.lang.Object,com.alibaba.fastjson.serializer.SerializerFeature[])": 3,
        "com.alibaba.fastjson.JSON:java.lang.Object parseObject(java.lang.String,java.lang.reflect.Type,com.alibaba.fastjson.parser.ParserConfig,com.alibaba.fastjson.parser.Feature[])": 1,
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object)": 52,
        "com.alibaba.fastjson.JSON:java.lang.Object parseObject(java.lang.String,java.lang.Class)": 29,
        "com.alibaba.fastjson.JSON:com.alibaba.fastjson.JSONArray parseArray(java.lang.String)": 2,
        "com.alibaba.fastjson.JSON:com.alibaba.fastjson.JSONObject parseObject(java.lang.String)": 2,
        "com.alibaba.fastjson.JSON:java.lang.Object parseObject(java.lang.String,java.lang.reflect.Type,com.alibaba.fastjson.parser.Feature[])": 1,
        "com.alibaba.fastjson.JSON:java.lang.Object toJavaObject(com.alibaba.fastjson.JSON,java.lang.Class)": 1
    },
    "com.alibaba:fastjson:1.2.49": {
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object)": 60,
        "com.alibaba.fastjson.JSON:java.lang.Object parseObject(java.lang.String,java.lang.Class)": 13,
        "com.alibaba.fastjson.JSON:java.lang.Object toJavaObject(com.alibaba.fastjson.JSON,java.lang.Class)": 9,
        "com.alibaba.fastjson.JSON:java.lang.Object parse(java.lang.String)": 7,
        "com.alibaba.fastjson.JSONObject:java.lang.String getString(java.lang.String)": 5,
        "com.alibaba.fastjson.JSONObject:long getLongValue(java.lang.String)": 7,
        "com.alibaba.fastjson.JSONObject:java.lang.Object get(java.lang.Object)": 18,
        "com.alibaba.fastjson.JSONArray:com.alibaba.fastjson.JSONArray getJSONArray(int)": 1,
        "com.alibaba.fastjson.JSONObject:com.alibaba.fastjson.JSONArray getJSONArray(java.lang.String)": 1,
        "com.alibaba.fastjson.JSONObject:java.lang.Long getLong(java.lang.String)": 1,
        "com.alibaba.fastjson.JSONObject:com.alibaba.fastjson.JSONObject getJSONObject(java.lang.String)": 1,
        "com.alibaba.fastjson.JSONObject:java.lang.Integer getInteger(java.lang.String)": 1,
        "com.alibaba.fastjson.JSON:com.alibaba.fastjson.JSONArray parseArray(java.lang.String)": 6,
        "com.alibaba.fastjson.JSON:com.alibaba.fastjson.JSONObject parseObject(java.lang.String)": 3,
        "com.alibaba.fastjson.JSON:java.lang.Object parseObject(java.lang.String,com.alibaba.fastjson.TypeReference,com.alibaba.fastjson.parser.Feature[])": 2,
        "com.alibaba.fastjson.JSON:java.lang.Object toJSON(java.lang.Object)": 1,
        "com.alibaba.fastjson.JSON:java.util.List parseArray(java.lang.String,java.lang.Class)": 1
    },
    "com.alibaba:fastjson:1.2.68": {
        "com.alibaba.fastjson.JSON:com.alibaba.fastjson.JSONObject parseObject(java.lang.String)": 2,
        "com.alibaba.fastjson.JSON:java.lang.Object parse(java.lang.String)": 2,
        "com.alibaba.fastjson.JSON:java.lang.Object parseObject(java.lang.String,java.lang.Class)": 12,
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object)": 13,
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object,com.alibaba.fastjson.serializer.SerializerFeature[])": 2,
        "com.alibaba.fastjson.JSON:java.lang.Object parseObject(java.lang.String,java.lang.reflect.Type,com.alibaba.fastjson.parser.Feature[])": 1,
        "com.alibaba.fastjson.JSON:byte[] toJSONBytes(java.lang.Object,com.alibaba.fastjson.serializer.SerializerFeature[])": 21,
        "com.alibaba.fastjson.JSON:java.util.List parseArray(java.lang.String,java.lang.Class)": 3,
        "com.alibaba.fastjson.JSON:java.lang.Object parseObject(byte[],java.lang.reflect.Type,com.alibaba.fastjson.parser.Feature[])": 10,
        "com.alibaba.fastjson.JSON:com.alibaba.fastjson.JSONArray parseArray(java.lang.String)": 2
    },
    "com.alibaba:fastjson:1.2.47": {
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object)": 170,
        "com.alibaba.fastjson.JSON:com.alibaba.fastjson.JSONObject parseObject(java.lang.String)": 26,
        "com.alibaba.fastjson.JSONObject:java.lang.String getString(java.lang.String)": 105,
        "com.alibaba.fastjson.JSONObject:java.lang.Integer getInteger(java.lang.String)": 18,
        "com.alibaba.fastjson.JSONObject:java.lang.Boolean getBoolean(java.lang.String)": 1,
        "com.alibaba.fastjson.JSON:java.lang.Object parseObject(java.lang.String,java.lang.Class)": 61,
        "com.alibaba.fastjson.JSONPath:java.lang.Object read(java.lang.String,java.lang.String)": 1,
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object,com.alibaba.fastjson.serializer.SerializerFeature[])": 7,
        "com.alibaba.fastjson.JSON:java.util.List parseArray(java.lang.String,java.lang.Class)": 19,
        "com.alibaba.fastjson.JSON:java.lang.Object toJavaObject(com.alibaba.fastjson.JSON,java.lang.Class)": 4,
        "com.alibaba.fastjson.JSONPath:java.lang.Object eval(java.lang.Object,java.lang.String)": 1,
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object,com.alibaba.fastjson.serializer.SerializeConfig,com.alibaba.fastjson.serializer.SerializerFeature[])": 4,
        "com.alibaba.fastjson.JSON:java.lang.Object parse(java.lang.String)": 3,
        "com.alibaba.fastjson.JSON:java.lang.Object parseObject(java.lang.String,java.lang.reflect.Type,com.alibaba.fastjson.parser.Feature[])": 1,
        "com.alibaba.fastjson.JSON:java.lang.Object parseObject(java.io.InputStream,java.lang.reflect.Type,com.alibaba.fastjson.parser.Feature[])": 1,
        "com.alibaba.fastjson.JSONArray:com.alibaba.fastjson.JSONObject getJSONObject(int)": 6,
        "com.alibaba.fastjson.JSONObject:com.alibaba.fastjson.JSONArray getJSONArray(java.lang.String)": 6,
        "com.alibaba.fastjson.JSON:com.alibaba.fastjson.JSONArray parseArray(java.lang.String)": 5,
        "com.alibaba.fastjson.JSONArray:com.alibaba.fastjson.JSONArray getJSONArray(int)": 2,
        "com.alibaba.fastjson.JSON:java.lang.Object parseObject(java.lang.String,com.alibaba.fastjson.TypeReference,com.alibaba.fastjson.parser.Feature[])": 3,
        "com.alibaba.fastjson.JSONObject:java.lang.Object get(java.lang.Object)": 23,
        "com.alibaba.fastjson.JSON:java.lang.Object parse(byte[],com.alibaba.fastjson.parser.Feature[])": 1,
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object,boolean)": 2,
        "com.alibaba.fastjson.JSON:java.lang.Object toJSON(java.lang.Object)": 4,
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object,com.alibaba.fastjson.serializer.SerializeFilter,com.alibaba.fastjson.serializer.SerializerFeature[])": 1
    },
    "com.alibaba:fastjson:1.2.46": {
        "com.alibaba.fastjson.JSON:java.lang.Object parse(java.lang.String)": 1,
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object)": 9
    },
    "com.alibaba:fastjson:1.2.56": {
        "com.alibaba.fastjson.JSON:java.lang.Object parseObject(java.lang.String,com.alibaba.fastjson.TypeReference,com.alibaba.fastjson.parser.Feature[])": 4,
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object)": 24,
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object,com.alibaba.fastjson.serializer.SerializerFeature[])": 1,
        "com.alibaba.fastjson.JSON:java.lang.Object parseObject(java.lang.String,java.lang.Class)": 2,
        "com.alibaba.fastjson.JSON:java.util.List parseArray(java.lang.String,java.lang.Class)": 5
    },
    "com.alibaba:fastjson:1.2.51": {
        "com.alibaba.fastjson.JSONPath:java.lang.Object eval(java.lang.Object,java.lang.String)": 12,
        "com.alibaba.fastjson.JSONPath:boolean set(java.lang.Object,java.lang.String,java.lang.Object)": 6,
        "com.alibaba.fastjson.JSON:com.alibaba.fastjson.JSONObject parseObject(java.lang.String)": 4,
        "com.alibaba.fastjson.JSON:java.lang.Object parseObject(java.lang.String,java.lang.Class)": 3,
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object,com.alibaba.fastjson.serializer.SerializerFeature[])": 2,
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object,boolean)": 2,
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object)": 13,
        "com.alibaba.fastjson.JSON:java.lang.Object parse(java.lang.String)": 2
    },
    "org.apache.zookeeper:zookeeper:3.4.11": {
        "org.apache.zookeeper.ZooKeeper:void <init>(java.lang.String,int,org.apache.zookeeper.Watcher)": 1
    },
    "org.apache.kafka:kafka-clients:2.3.0": {
        "org.apache.kafka.clients.producer.ProducerRecord:void <init>(java.lang.String,java.lang.Object)": 1,
        "org.apache.kafka.clients.producer.ProducerRecord:void <init>(java.lang.String,java.lang.Object,java.lang.Object)": 3,
        "org.apache.kafka.clients.admin.AdminClient:org.apache.kafka.clients.admin.AdminClient create(java.util.Properties)": 3,
        "org.apache.kafka.clients.producer.KafkaProducer:void <init>(java.util.Properties)": 3,
        "org.apache.kafka.clients.consumer.KafkaConsumer:void <init>(java.util.Properties)": 1
    },
    "org.apache.httpcomponents:httpclient:4.5.5": {
        "org.apache.http.client.utils.URIUtils:org.apache.http.HttpHost extractHost(java.net.URI)": 1
    },
    "org.bouncycastle:bcprov-jdk15on:1.56": {
        "org.bouncycastle.crypto.params.ECDomainParameters:void <init>(org.bouncycastle.math.ec.ECCurve,org.bouncycastle.math.ec.ECPoint,java.math.BigInteger)": 1,
        "org.bouncycastle.math.ec.ECCurve$Fp:void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)": 1,
        "org.bouncycastle.util.encoders.Hex:java.lang.String toHexString(byte[])": 157,
        "org.bouncycastle.util.encoders.Hex:byte[] decode(java.lang.String)": 6,
        "org.bouncycastle.asn1.x9.ECNamedCurveTable:org.bouncycastle.asn1.x9.X9ECParameters getByName(java.lang.String)": 2,
        "org.bouncycastle.crypto.params.ECPublicKeyParameters:void <init>(org.bouncycastle.math.ec.ECPoint,org.bouncycastle.crypto.params.ECDomainParameters)": 1,
        "org.bouncycastle.crypto.params.ECDomainParameters:void <init>(org.bouncycastle.math.ec.ECCurve,org.bouncycastle.math.ec.ECPoint,java.math.BigInteger,java.math.BigInteger,byte[])": 1,
        "org.bouncycastle.math.ec.ECAlgorithms:org.bouncycastle.math.ec.ECPoint referenceMultiply(org.bouncycastle.math.ec.ECPoint,java.math.BigInteger)": 1,
        "org.bouncycastle.asn1.DERTaggedObject:void <init>(int,org.bouncycastle.asn1.ASN1Encodable)": 13,
        "org.bouncycastle.asn1.DERUTF8String:void <init>(java.lang.String)": 1,
        "org.bouncycastle.asn1.ASN1InputStream:org.bouncycastle.asn1.ASN1Primitive readObject()": 1,
        "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(int,org.bouncycastle.asn1.ASN1Encodable)": 1,
        "org.bouncycastle.asn1.DERSet:void <init>(org.bouncycastle.asn1.ASN1EncodableVector)": 1,
        "org.bouncycastle.crypto.io.DigestOutputStream:byte[] getDigest()": 1,
        "org.bouncycastle.asn1.ASN1Object:byte[] getEncoded()": 1
    },
    "org.apache.zookeeper:zookeeper:3.4.5": {
        "org.apache.zookeeper.ZooKeeper:void <init>(java.lang.String,int,org.apache.zookeeper.Watcher)": 7,
        "org.apache.zookeeper.server.NIOServerCnxnFactory:void startup(org.apache.zookeeper.server.ZooKeeperServer)": 1
    },
    "org.bouncycastle:bcprov-jdk15on:1.53": {
        "org.bouncycastle.jce.provider.X509CertParser:java.lang.Object engineRead()": 2,
        "org.bouncycastle.asn1.x509.GeneralName:void <init>(int,java.lang.String)": 1,
        "org.bouncycastle.asn1.x500.X500Name:org.bouncycastle.asn1.x500.X500NameStyle getDefaultStyle()": 1,
        "org.bouncycastle.asn1.ASN1Primitive:org.bouncycastle.asn1.ASN1Primitive fromByteArray(byte[])": 1,
        "org.bouncycastle.asn1.x509.AuthorityInformationAccess:org.bouncycastle.asn1.x509.AuthorityInformationAccess getInstance(java.lang.Object)": 1
    },
    "com.alibaba:fastjson:1.2.41": {
        "com.alibaba.fastjson.JSON:java.lang.Object parseObject(java.lang.String,java.lang.Class)": 5,
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object)": 2,
        "com.alibaba.fastjson.JSON:com.alibaba.fastjson.JSONObject parseObject(java.lang.String)": 1,
        "com.alibaba.fastjson.JSON:java.lang.Object toJSON(java.lang.Object)": 7,
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object,com.alibaba.fastjson.serializer.SerializerFeature[])": 4
    },
    "com.alibaba:fastjson:1.2.79": {
        "com.alibaba.fastjson.JSON:com.alibaba.fastjson.JSONArray parseArray(java.lang.String)": 1,
        "com.alibaba.fastjson.JSON:com.alibaba.fastjson.JSONObject parseObject(java.lang.String)": 5,
        "com.alibaba.fastjson.JSON:java.lang.Object parseObject(byte[],java.lang.reflect.Type,com.alibaba.fastjson.parser.Feature[])": 1,
        "com.alibaba.fastjson.JSON:byte[] toJSONBytes(java.lang.Object,com.alibaba.fastjson.serializer.SerializerFeature[])": 1,
        "com.alibaba.fastjson.JSONObject:java.lang.String getString(java.lang.String)": 3,
        "com.alibaba.fastjson.JSONObject:int getIntValue(java.lang.String)": 1,
        "com.alibaba.fastjson.JSONObject:com.alibaba.fastjson.JSONObject getJSONObject(java.lang.String)": 4,
        "com.alibaba.fastjson.JSONObject:com.alibaba.fastjson.JSONArray getJSONArray(java.lang.String)": 1,
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object)": 4,
        "com.alibaba.fastjson.JSON:java.lang.Object parseObject(java.lang.String,java.lang.Class)": 6,
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object,com.alibaba.fastjson.serializer.SerializerFeature[])": 1
    },
    "org.apache.mina:mina-core:2.0.0-RC1": {
        "org.apache.mina.transport.socket.nio.NioSocketConnector:void <init>()": 1,
        "org.apache.mina.transport.socket.nio.NioSocketAcceptor:void <init>(int)": 1
    },
    "org.apache.zookeeper:zookeeper:3.4.9": {
        "org.apache.zookeeper.ZooKeeper:void <init>(java.lang.String,int,org.apache.zookeeper.Watcher)": 5
    },
    "org.dom4j:dom4j:2.0.0": {
        "org.dom4j.DocumentHelper:org.dom4j.Document parseText(java.lang.String)": 1
    },
    "org.bouncycastle:bcprov-jdk15on:1.60": {
        "org.bouncycastle.util.encoders.Hex:java.lang.String toHexString(byte[])": 12,
        "org.bouncycastle.util.encoders.Hex:byte[] decode(java.lang.String)": 6,
        "org.bouncycastle.util.encoders.Hex:byte[] decode(byte[])": 1,
        "org.bouncycastle.util.encoders.Base64:byte[] encode(byte[])": 2,
        "org.bouncycastle.util.encoders.Base64:java.lang.String toBase64String(byte[])": 8,
        "org.bouncycastle.jce.provider.JCEECPublicKey:void <init>(java.lang.String,java.security.spec.ECPublicKeySpec)": 1,
        "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)": 1,
        "org.bouncycastle.asn1.DERBitString:org.bouncycastle.asn1.DERBitString getInstance(java.lang.Object)": 1,
        "org.bouncycastle.asn1.ASN1Integer:org.bouncycastle.asn1.ASN1Integer getInstance(java.lang.Object)": 1,
        "org.bouncycastle.util.encoders.Base64:byte[] decode(java.lang.String)": 7,
        "org.bouncycastle.asn1.x500.X500NameBuilder:void <init>()": 1
    },
    "com.alibaba:fastjson:1.2.69": {
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object)": 8,
        "com.alibaba.fastjson.JSON:byte[] toJSONBytes(java.lang.Object,com.alibaba.fastjson.serializer.SerializerFeature[])": 1,
        "com.alibaba.fastjson.JSON:java.lang.Object parseObject(byte[],java.lang.reflect.Type,com.alibaba.fastjson.parser.Feature[])": 2,
        "com.alibaba.fastjson.JSON:java.lang.Object parseObject(java.lang.String,java.lang.Class)": 3
    },
    "org.kohsuke:libpam4j:1.8": {
        "org.jvnet.libpam.PAM:org.jvnet.libpam.UnixUser authenticate(java.lang.String,java.lang.String)": 1
    },
    "org.apache.commons:commons-compress:1.18": {
        "org.apache.commons.compress.compressors.bzip2.BZip2CompressorOutputStream:void close()": 1,
        "org.apache.commons.compress.compressors.bzip2.BZip2CompressorOutputStream:void <init>(java.io.OutputStream)": 1,
        "org.apache.commons.compress.utils.IOUtils:void closeQuietly(java.io.Closeable)": 4,
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream:void close()": 4,
        "org.apache.commons.compress.compressors.gzip.GzipCompressorOutputStream:void close()": 4,
        "org.apache.commons.compress.compressors.gzip.GzipCompressorOutputStream:void <init>(java.io.OutputStream)": 1,
        "org.apache.commons.compress.utils.IOUtils:long copy(java.io.InputStream,java.io.OutputStream)": 35,
        "org.apache.commons.compress.archivers.ArchiveStreamFactory:org.apache.commons.compress.archivers.ArchiveInputStream createArchiveInputStream(java.lang.String,java.io.InputStream)": 1,
        "org.apache.commons.compress.archivers.zip.ZipFile:void <init>(java.io.File)": 2,
        "org.apache.commons.compress.archivers.zip.ZipFile:java.io.InputStream getInputStream(org.apache.commons.compress.archivers.zip.ZipArchiveEntry)": 5,
        "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream:void close()": 1,
        "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream:void closeArchiveEntry()": 1,
        "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream:void putArchiveEntry(org.apache.commons.compress.archivers.ArchiveEntry)": 1,
        "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream:void <init>(java.io.File)": 1
    },
    "junit:junit:4.12": {
        "org.junit.runner.JUnitCore:org.junit.runner.Result runClasses(java.lang.Class[])": 1
    },
    "io.netty:netty-all:4.1.19.Final": {
        "io.netty.bootstrap.ServerBootstrap:io.netty.bootstrap.ServerBootstrap childOption(io.netty.channel.ChannelOption,java.lang.Object)": 1,
        "io.netty.channel.nio.NioEventLoopGroup:void <init>()": 2,
        "io.netty.util.ReferenceCountUtil:boolean release(java.lang.Object)": 2,
        "io.netty.handler.codec.http.DefaultFullHttpResponse:void <init>(io.netty.handler.codec.http.HttpVersion,io.netty.handler.codec.http.HttpResponseStatus)": 2,
        "io.netty.channel.ChannelInitializer:void <init>()": 4,
        "io.netty.handler.codec.http.HttpObjectAggregator:void <init>(int)": 2,
        "io.netty.handler.codec.http.HttpResponseEncoder:void <init>()": 1,
        "io.netty.handler.codec.http.HttpRequestDecoder:void <init>()": 1,
        "io.netty.channel.nio.NioEventLoopGroup:void <init>(int)": 3,
        "io.netty.handler.codec.http.DefaultHttpResponse:void <init>(io.netty.handler.codec.http.HttpVersion,io.netty.handler.codec.http.HttpResponseStatus)": 1,
        "io.netty.bootstrap.Bootstrap:io.netty.channel.ChannelFuture connect(java.net.SocketAddress)": 2,
        "io.netty.channel.ChannelOutboundHandlerAdapter:void close(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise)": 1,
        "io.netty.handler.codec.http.HttpClientCodec:void <init>()": 1,
        "io.netty.handler.codec.ByteToMessageDecoder:void <init>()": 1
    },
    "org.hibernate:hibernate-core:4.3.10.Final": {
        "org.hibernate.cfg.Configuration:void <init>()": 2,
        "org.hibernate.boot.registry.StandardServiceRegistryBuilder:void <init>()": 2,
        "org.hibernate.dialect.SQLServerDialect:void <init>()": 1
    },
    "org.apache.ant:ant:1.9.6": {
        "org.apache.tools.ant.Task:void log(java.lang.String)": 2
    },
    "com.thoughtworks.xstream:xstream:1.4.7": {
        "com.thoughtworks.xstream.XStream:void <init>()": 2,
        "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.net.URL)": 1,
        "com.thoughtworks.xstream.XStream:void ignoreUnknownElements()": 1,
        "com.thoughtworks.xstream.XStream:void processAnnotations(java.lang.Class)": 14,
        "com.thoughtworks.xstream.XStream:void <init>(com.thoughtworks.xstream.io.HierarchicalStreamDriver)": 8,
        "com.thoughtworks.xstream.XStream:void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter)": 1,
        "com.thoughtworks.xstream.io.xml.StaxWriter:void <init>(com.thoughtworks.xstream.io.xml.QNameMap,javax.xml.stream.XMLStreamWriter)": 1,
        "com.thoughtworks.xstream.XStream:java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader)": 1,
        "com.thoughtworks.xstream.io.xml.StaxReader:void <init>(com.thoughtworks.xstream.io.xml.QNameMap,javax.xml.stream.XMLStreamReader)": 1,
        "com.thoughtworks.xstream.io.xml.PrettyPrintWriter:void <init>(java.io.Writer)": 1,
        "com.thoughtworks.xstream.io.xml.PrettyPrintWriter:void startNode(java.lang.String,java.lang.Class)": 1,
        "com.thoughtworks.xstream.XStream:java.lang.String toXML(java.lang.Object)": 1,
        "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.lang.String)": 2,
        "com.thoughtworks.xstream.io.xml.PrettyPrintWriter:void <init>(java.io.Writer,com.thoughtworks.xstream.io.naming.NameCoder)": 1,
        "com.thoughtworks.xstream.io.xml.PrettyPrintWriter:void writeText(com.thoughtworks.xstream.core.util.QuickWriter,java.lang.String)": 1
    },
    "org.apache.commons:commons-compress:1.3": {
        "org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream:void <init>(java.io.InputStream)": 1,
        "org.apache.commons.compress.archivers.tar.TarArchiveInputStream:org.apache.commons.compress.archivers.tar.TarArchiveEntry getNextTarEntry()": 1,
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream:org.apache.commons.compress.archivers.zip.ZipArchiveEntry getNextZipEntry()": 1
    },
    "com.alibaba:fastjson:1.2.75": {
        "com.alibaba.fastjson.JSON:com.alibaba.fastjson.JSONArray parseArray(java.lang.String)": 5,
        "com.alibaba.fastjson.JSON:com.alibaba.fastjson.JSONObject parseObject(java.lang.String)": 11,
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object)": 44,
        "com.alibaba.fastjson.JSON:java.lang.Object parseObject(java.lang.String,com.alibaba.fastjson.TypeReference,com.alibaba.fastjson.parser.Feature[])": 1,
        "com.alibaba.fastjson.serializer.JSONSerializer:void write(java.lang.Object)": 1,
        "com.alibaba.fastjson.JSON:java.lang.Object parseObject(java.lang.String,java.lang.Class)": 6,
        "com.alibaba.fastjson.serializer.SerializeFilterable:java.lang.Object processValue(com.alibaba.fastjson.serializer.JSONSerializer,com.alibaba.fastjson.serializer.BeanContext,java.lang.Object,java.lang.String,java.lang.Object,int)": 4,
        "com.alibaba.fastjson.serializer.JSONSerializer:com.alibaba.fastjson.serializer.ObjectSerializer getObjectWriter(java.lang.Class)": 3,
        "com.alibaba.fastjson.JSON:java.lang.Object toJSON(java.lang.Object)": 4,
        "com.alibaba.fastjson.JSONPath:java.lang.Object eval(java.lang.Object,java.lang.String)": 1,
        "com.alibaba.fastjson.JSONObject:java.lang.Object get(java.lang.Object)": 2,
        "com.alibaba.fastjson.JSONObject:boolean containsKey(java.lang.Object)": 1,
        "com.alibaba.fastjson.JSON:java.lang.Object parse(java.lang.String)": 1,
        "com.alibaba.fastjson.JSONObject:java.lang.String getString(java.lang.String)": 2,
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object,boolean)": 2,
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object,com.alibaba.fastjson.serializer.SerializeConfig,com.alibaba.fastjson.serializer.SerializeFilter[],com.alibaba.fastjson.serializer.SerializerFeature[])": 1,
        "com.alibaba.fastjson.JSONObject:java.lang.Boolean getBoolean(java.lang.String)": 1,
        "com.alibaba.fastjson.JSON:java.lang.Object parseObject(java.lang.String,java.lang.reflect.Type,com.alibaba.fastjson.parser.Feature[])": 1
    },
    "org.apache.commons:commons-compress:1.17": {
        "org.apache.commons.compress.compressors.deflate64.Deflate64CompressorInputStream:void close()": 8
    },
    "org.apache.zookeeper:zookeeper:3.4.6": {
        "org.apache.zookeeper.ZooKeeper:void <init>(java.lang.String,int,org.apache.zookeeper.Watcher)": 9
    },
    "org.apache.activemq:activemq-client:5.8.0": {
        "org.apache.activemq.ActiveMQConnectionFactory:void <init>(java.lang.String)": 16,
        "org.apache.activemq.ActiveMQConnectionFactory:javax.jms.Connection createConnection()": 1
    },
    "org.apache.activemq:activemq-broker:5.8.0": {
        "org.apache.activemq.broker.BrokerFactory:org.apache.activemq.broker.BrokerService createBroker(java.lang.String)": 1
    },
    "org.apache.zookeeper:zookeeper:3.4.8": {
        "org.apache.zookeeper.ZooKeeper:void <init>(java.lang.String,int,org.apache.zookeeper.Watcher)": 4
    },
    "io.netty:netty-all:4.0.35.Final": {
        "io.netty.handler.codec.http.HttpServerCodec:void <init>()": 1,
        "io.netty.handler.codec.http.HttpObjectAggregator:void <init>(int)": 1,
        "io.netty.channel.SimpleChannelInboundHandler:void <init>()": 2,
        "io.netty.handler.codec.http.websocketx.TextWebSocketFrame:void <init>(java.lang.String)": 1,
        "io.netty.util.AttributeKey:io.netty.util.AttributeKey valueOf(java.lang.String)": 1,
        "io.netty.channel.nio.NioEventLoopGroup:void <init>(int)": 1,
        "io.netty.channel.nio.NioEventLoopGroup:void <init>()": 1
    },
    "com.alibaba:fastjson:1.2.72": {
        "com.alibaba.fastjson.JSON:java.lang.Object toJavaObject(com.alibaba.fastjson.JSON,java.lang.Class)": 2,
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object)": 9,
        "com.alibaba.fastjson.JSON:java.lang.Object parseObject(java.lang.String,java.lang.Class)": 1,
        "com.alibaba.fastjson.JSON:java.lang.Object parse(java.lang.String)": 6,
        "com.alibaba.fastjson.JSONPath:java.lang.Object eval(java.lang.Object,java.lang.String)": 4,
        "com.alibaba.fastjson.JSON:com.alibaba.fastjson.JSONObject parseObject(java.lang.String)": 1,
        "com.alibaba.fastjson.JSON:java.util.List parseArray(java.lang.String,java.lang.Class)": 1
    },
    "io.netty:netty-all:4.1.6.Final": {
        "io.netty.handler.codec.socks.SocksCmdResponse:void <init>(io.netty.handler.codec.socks.SocksCmdStatus,io.netty.handler.codec.socks.SocksAddressType)": 4,
        "io.netty.handler.codec.socks.SocksCmdResponse:void <init>(io.netty.handler.codec.socks.SocksCmdStatus,io.netty.handler.codec.socks.SocksAddressType,java.lang.String,int)": 1,
        "io.netty.util.ReferenceCountUtil:java.lang.Object retain(java.lang.Object)": 3,
        "io.netty.buffer.Unpooled:io.netty.buffer.ByteBuf buffer()": 1,
        "io.netty.buffer.Unpooled:io.netty.buffer.ByteBuf wrappedBuffer(byte[])": 10,
        "io.netty.channel.SimpleChannelInboundHandler:void <init>()": 4,
        "io.netty.bootstrap.Bootstrap:io.netty.channel.ChannelFuture connect(java.lang.String,int)": 3,
        "io.netty.handler.codec.socks.SocksProtocolVersion:io.netty.handler.codec.socks.SocksProtocolVersion[] values()": 1,
        "io.netty.handler.codec.socks.SocksRequestType:io.netty.handler.codec.socks.SocksRequestType[] values()": 1,
        "io.netty.handler.codec.socks.SocksCmdType:io.netty.handler.codec.socks.SocksCmdType[] values()": 1,
        "io.netty.handler.codec.socks.SocksCmdRequestDecoder:void <init>()": 2,
        "io.netty.channel.ChannelInitializer:void <init>()": 5,
        "io.netty.handler.codec.socks.SocksMessageEncoder:void <init>()": 1,
        "io.netty.handler.codec.socks.SocksInitRequestDecoder:void <init>()": 1,
        "io.netty.channel.nio.NioEventLoopGroup:void <init>()": 5,
        "io.netty.channel.nio.NioEventLoopGroup:void <init>(int)": 2,
        "io.netty.util.ReferenceCountUtil:boolean release(java.lang.Object)": 19,
        "io.netty.handler.traffic.GlobalTrafficShapingHandler:void <init>(java.util.concurrent.ScheduledExecutorService,long)": 2,
        "io.netty.handler.traffic.GlobalTrafficShapingHandler:void <init>(java.util.concurrent.ScheduledExecutorService,long,long)": 1,
        "io.netty.handler.codec.MessageToByteEncoder:void <init>()": 1,
        "io.netty.handler.codec.FixedLengthFrameDecoder:void <init>(int)": 1,
        "io.netty.handler.codec.FixedLengthFrameDecoder:java.lang.Object decode(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf)": 1,
        "io.netty.handler.codec.http.DefaultFullHttpResponse:void <init>(io.netty.handler.codec.http.HttpVersion,io.netty.handler.codec.http.HttpResponseStatus)": 1,
        "io.netty.handler.codec.http.HttpResponseEncoder:void <init>()": 1,
        "io.netty.handler.codec.http.HttpObjectAggregator:void <init>(int)": 1,
        "io.netty.handler.codec.http.HttpRequestDecoder:void <init>()": 1,
        "io.netty.channel.nio.NioEventLoopGroup:void <init>(int,java.util.concurrent.ThreadFactory)": 2,
        "io.netty.channel.DefaultEventLoopGroup:void <init>(int,java.util.concurrent.ThreadFactory)": 1
    },
    "com.alibaba:fastjson:1.2.71": {
        "com.alibaba.fastjson.JSONArray:java.lang.String getString(int)": 31,
        "com.alibaba.fastjson.JSONObject:com.alibaba.fastjson.JSONArray getJSONArray(java.lang.String)": 52,
        "com.alibaba.fastjson.JSONObject:boolean containsKey(java.lang.Object)": 171,
        "com.alibaba.fastjson.JSONObject:java.lang.String getString(java.lang.String)": 322,
        "com.alibaba.fastjson.JSONObject:java.lang.Long getLong(java.lang.String)": 31,
        "com.alibaba.fastjson.JSONObject:com.alibaba.fastjson.JSONObject getJSONObject(java.lang.String)": 73,
        "com.alibaba.fastjson.JSONObject:int getIntValue(java.lang.String)": 109,
        "com.alibaba.fastjson.JSONArray:com.alibaba.fastjson.JSONObject getJSONObject(int)": 45,
        "com.alibaba.fastjson.JSONObject:java.lang.Boolean getBoolean(java.lang.String)": 31,
        "com.alibaba.fastjson.JSONObject:java.lang.Integer getInteger(java.lang.String)": 8,
        "com.alibaba.fastjson.JSONObject:boolean getBooleanValue(java.lang.String)": 7,
        "com.alibaba.fastjson.JSONArray:int getIntValue(int)": 2,
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object,com.alibaba.fastjson.serializer.SerializeConfig,com.alibaba.fastjson.serializer.SerializerFeature[])": 1,
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object)": 3,
        "com.alibaba.fastjson.JSON:java.lang.Object parseObject(java.lang.String,java.lang.Class)": 1,
        "com.alibaba.fastjson.JSON:java.util.List parseArray(java.lang.String,java.lang.Class)": 1
    },
    "com.alibaba:fastjson:1.2.60": {
        "com.alibaba.fastjson.JSON:com.alibaba.fastjson.JSONArray parseArray(java.lang.String)": 1
    },
    "com.alibaba:fastjson:1.2.76": {
        "com.alibaba.fastjson.JSON:com.alibaba.fastjson.JSONObject parseObject(java.lang.String)": 13,
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object)": 23,
        "com.alibaba.fastjson.JSONObject:java.lang.Object toJavaObject(java.lang.Class)": 7,
        "com.alibaba.fastjson.JSON:java.lang.Object parseObject(java.lang.String,java.lang.Class)": 6,
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object,com.alibaba.fastjson.serializer.SerializerFeature[])": 1,
        "com.alibaba.fastjson.JSONObject:com.alibaba.fastjson.JSONObject getJSONObject(java.lang.String)": 29,
        "com.alibaba.fastjson.JSONObject:java.lang.String getString(java.lang.String)": 35,
        "com.alibaba.fastjson.JSONObject:com.alibaba.fastjson.JSONArray getJSONArray(java.lang.String)": 12,
        "com.alibaba.fastjson.JSONObject:int getIntValue(java.lang.String)": 6
    },
    "org.hibernate:hibernate-core:5.4.0.Final": {
        "org.hibernate.boot.registry.StandardServiceRegistryBuilder:void <init>()": 1,
        "org.hibernate.cfg.Configuration:org.hibernate.SessionFactory buildSessionFactory(org.hibernate.service.ServiceRegistry)": 1,
        "org.hibernate.boot.registry.StandardServiceRegistryBuilder:org.hibernate.boot.registry.StandardServiceRegistry build()": 1,
        "org.hibernate.boot.registry.StandardServiceRegistryBuilder:org.hibernate.boot.registry.StandardServiceRegistryBuilder applySettings(java.util.Map)": 1,
        "org.hibernate.cfg.Configuration:void <init>()": 1
    },
    "org.apache.commons:commons-compress:1.8": {
        "org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream:void <init>(java.io.InputStream)": 1
    },
    "io.netty:netty-all:4.1.2.Final": {
        "io.netty.handler.codec.http.DefaultHttpHeaders:void <init>()": 2,
        "io.netty.buffer.Unpooled:io.netty.buffer.ByteBuf copiedBuffer(java.lang.CharSequence,java.nio.charset.Charset)": 3,
        "io.netty.handler.codec.http.DefaultHttpResponse:void <init>(io.netty.handler.codec.http.HttpVersion,io.netty.handler.codec.http.HttpResponseStatus)": 1,
        "io.netty.handler.codec.http.HttpUtil:void setKeepAlive(io.netty.handler.codec.http.HttpMessage,boolean)": 1,
        "io.netty.handler.codec.http.DefaultFullHttpResponse:void <init>(io.netty.handler.codec.http.HttpVersion,io.netty.handler.codec.http.HttpResponseStatus,io.netty.buffer.ByteBuf,io.netty.handler.codec.http.HttpHeaders,io.netty.handler.codec.http.HttpHeaders)": 1,
        "io.netty.handler.codec.http.HttpUtil:boolean isKeepAlive(io.netty.handler.codec.http.HttpMessage)": 1,
        "io.netty.handler.codec.http.multipart.HttpPostRequestDecoder:void <init>(io.netty.handler.codec.http.HttpRequest)": 1,
        "io.netty.handler.codec.http.HttpObjectAggregator:void <init>(int)": 1,
        "io.netty.handler.codec.http.HttpRequestDecoder:void <init>()": 1,
        "io.netty.handler.codec.http.HttpResponseEncoder:void <init>()": 1,
        "io.netty.bootstrap.ServerBootstrap:io.netty.bootstrap.ServerBootstrap childOption(io.netty.channel.ChannelOption,java.lang.Object)": 1,
        "io.netty.channel.nio.NioEventLoopGroup:void <init>()": 2
    },
    "cn.hutool:hutool-all:4.1.7": {
        "cn.hutool.core.convert.Convert:java.lang.Object convert(java.lang.Class,java.lang.Object)": 3
    },
    "org.dom4j:dom4j:2.0.0-RC1": {
        "org.dom4j.io.SAXReader:org.dom4j.Document read(java.io.InputStream)": 2
    },
    "com.thoughtworks.xstream:xstream:1.4.9": {
        "com.thoughtworks.xstream.XStream:java.lang.String toXML(java.lang.Object)": 4,
        "com.thoughtworks.xstream.XStream:void alias(java.lang.String,java.lang.Class)": 8,
        "com.thoughtworks.xstream.XStream:void <init>(com.thoughtworks.xstream.io.HierarchicalStreamDriver)": 11,
        "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.io.File)": 2,
        "com.thoughtworks.xstream.XStream:void <init>()": 5
    },
    "com.thoughtworks.xstream:xstream:1.4.2": {
        "com.thoughtworks.xstream.XStream:void toXML(java.lang.Object,java.io.OutputStream)": 1,
        "com.thoughtworks.xstream.XStream:void alias(java.lang.String,java.lang.Class)": 3,
        "com.thoughtworks.xstream.XStream:void <init>()": 1
    },
    "org.dom4j:dom4j:2.1.0": {
        "org.dom4j.io.SAXReader:org.dom4j.Document read(java.lang.String)": 1,
        "org.dom4j.io.SAXReader:org.dom4j.Document read(org.xml.sax.InputSource)": 2,
        "org.dom4j.DocumentHelper:org.dom4j.Document parseText(java.lang.String)": 1
    },
    "com.alibaba:fastjson:1.2.54": {
        "com.alibaba.fastjson.JSON:java.lang.Object parseObject(java.lang.String,java.lang.Class)": 2,
        "com.alibaba.fastjson.JSON:com.alibaba.fastjson.JSONObject parseObject(java.lang.String)": 21,
        "com.alibaba.fastjson.JSONObject:com.alibaba.fastjson.JSONArray getJSONArray(java.lang.String)": 1,
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object,boolean)": 2,
        "com.alibaba.fastjson.JSONObject:java.lang.String getString(java.lang.String)": 44,
        "com.alibaba.fastjson.JSONObject:java.lang.Object get(java.lang.Object)": 22,
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object)": 4,
        "com.alibaba.fastjson.JSON:java.lang.Object toJavaObject(com.alibaba.fastjson.JSON,java.lang.Class)": 6,
        "com.alibaba.fastjson.JSON:java.lang.Object toJSON(java.lang.Object)": 2
    },
    "org.hibernate:hibernate-core:5.2.12.Final": {
        "org.hibernate.cfg.Configuration:org.hibernate.SessionFactory buildSessionFactory()": 1,
        "org.hibernate.cfg.Configuration:org.hibernate.cfg.Configuration configure(java.lang.String)": 1,
        "org.hibernate.cfg.Configuration:void <init>()": 2,
        "org.hibernate.boot.MetadataSources:void <init>(org.hibernate.service.ServiceRegistry)": 1,
        "org.hibernate.boot.registry.StandardServiceRegistryBuilder:void <init>()": 1
    },
    "org.apache.mina:mina-core:2.0.19": {
        "org.apache.mina.transport.socket.nio.NioSocketAcceptor:void <init>()": 2,
        "org.apache.mina.transport.socket.nio.NioSocketConnector:void <init>()": 2
    },
    "org.codehaus.plexus:plexus-utils:3.0.15": {
        "org.codehaus.plexus.util.StringUtils:java.lang.String join(java.lang.Object[],java.lang.String)": 1
    },
    "org.apache.ant:ant:1.9.15": {
        "org.apache.tools.ant.Project:java.lang.String getProperty(java.lang.String)": 3,
        "org.apache.tools.ant.Project:java.util.Hashtable getProperties()": 2,
        "org.apache.tools.ant.Project:void addReference(java.lang.String,java.lang.Object)": 2,
        "org.apache.tools.ant.ProjectHelper:org.apache.tools.ant.ProjectHelper getProjectHelper()": 2
    },
    "org.apache.commons:commons-compress:1.5": {
        "org.apache.commons.compress.archivers.tar.TarArchiveInputStream:org.apache.commons.compress.archivers.tar.TarArchiveEntry getNextTarEntry()": 1,
        "org.apache.commons.compress.utils.IOUtils:long copy(java.io.InputStream,java.io.OutputStream)": 4
    },
    "org.mongodb:mongo-java-driver:3.12.7": {
        "com.mongodb.MongoClient:void <init>(java.lang.String,int)": 1,
        "com.mongodb.MongoClient:void <init>(com.mongodb.MongoClientURI)": 2,
        "com.mongodb.MongoClientURI:void <init>(java.lang.String)": 2,
        "com.mongodb.ConnectionString:void <init>(java.lang.String)": 1,
        "com.mongodb.MongoClientSettings:com.mongodb.MongoClientSettings$Builder builder()": 1,
        "com.mongodb.client.MongoClients:com.mongodb.client.MongoClient create(com.mongodb.MongoClientSettings)": 1
    },
    "org.apache.commons:commons-compress:1.9": {
        "org.apache.commons.compress.archivers.tar.TarArchiveInputStream:org.apache.commons.compress.archivers.ArchiveEntry getNextEntry()": 2,
        "org.apache.commons.compress.archivers.ArchiveStreamFactory:org.apache.commons.compress.archivers.ArchiveInputStream createArchiveInputStream(java.io.InputStream)": 1,
        "org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream:void <init>(java.io.InputStream)": 1
    },
    "org.bouncycastle:bcprov-jdk15on:1.54": {
        "org.bouncycastle.util.encoders.Base64:byte[] encode(byte[])": 1,
        "org.bouncycastle.util.encoders.Base64:byte[] decode(java.lang.String)": 1,
        "org.bouncycastle.asn1.x500.X500Name:void <init>(java.lang.String)": 3,
        "org.bouncycastle.util.io.pem.PemWriter:void writeObject(org.bouncycastle.util.io.pem.PemObjectGenerator)": 2,
        "org.bouncycastle.util.io.pem.PemReader:org.bouncycastle.util.io.pem.PemObject readPemObject()": 1,
        "org.bouncycastle.util.io.Streams:byte[] readAll(java.io.InputStream)": 1
    },
    "org.bouncycastle:bcprov-jdk15on:1.55": {
        "org.bouncycastle.util.encoders.Hex:byte[] decode(java.lang.String)": 1,
        "org.bouncycastle.util.encoders.Hex:java.lang.String toHexString(byte[])": 1,
        "org.bouncycastle.jce.ECNamedCurveTable:org.bouncycastle.jce.spec.ECNamedCurveParameterSpec getParameterSpec(java.lang.String)": 2
    },
    "org.hibernate:hibernate-core:5.2.11.Final": {
        "org.hibernate.cfg.Configuration:org.hibernate.SessionFactory buildSessionFactory()": 2,
        "org.hibernate.cfg.Configuration:org.hibernate.cfg.Configuration configure()": 2,
        "org.hibernate.cfg.Configuration:void <init>()": 2
    },
    "org.apache.tomcat.embed:tomcat-embed-core:9.0.0.M6": {
        "org.apache.catalina.webresources.DirResourceSet:void <init>(org.apache.catalina.WebResourceRoot,java.lang.String,java.lang.String,java.lang.String)": 2
    },
    "org.apache.tomcat.embed:tomcat-embed-core:8.5.23": {
        "org.apache.catalina.webresources.DirResourceSet:void <init>(org.apache.catalina.WebResourceRoot,java.lang.String,java.lang.String,java.lang.String)": 3
    },
    "org.apache.tomcat.embed:tomcat-embed-core:8.5.40": {
        "org.apache.catalina.webresources.DirResourceSet:void <init>(org.apache.catalina.WebResourceRoot,java.lang.String,java.lang.String,java.lang.String)": 1
    },
    "com.alibaba:fastjson:1.2.73": {
        "com.alibaba.fastjson.JSONObject:java.lang.Integer getInteger(java.lang.String)": 52,
        "com.alibaba.fastjson.JSONObject:java.lang.String getString(java.lang.String)": 151,
        "com.alibaba.fastjson.JSONObject:com.alibaba.fastjson.JSONArray getJSONArray(java.lang.String)": 31,
        "com.alibaba.fastjson.JSONObject:com.alibaba.fastjson.JSONObject getJSONObject(java.lang.String)": 76,
        "com.alibaba.fastjson.JSON:com.alibaba.fastjson.JSONObject parseObject(java.lang.String)": 37,
        "com.alibaba.fastjson.JSON:java.lang.Object parseObject(java.lang.String,java.lang.Class)": 6,
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object)": 14,
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object,com.alibaba.fastjson.serializer.SerializeConfig,com.alibaba.fastjson.serializer.SerializerFeature[])": 1,
        "com.alibaba.fastjson.JSON:java.lang.Object parse(java.lang.String)": 11,
        "com.alibaba.fastjson.JSON:com.alibaba.fastjson.JSONArray parseArray(java.lang.String)": 1,
        "com.alibaba.fastjson.JSON:java.util.List parseArray(java.lang.String,java.lang.Class)": 1,
        "com.alibaba.fastjson.JSONPath:java.lang.Object eval(java.lang.Object,java.lang.String)": 6,
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object,com.alibaba.fastjson.serializer.SerializerFeature[])": 2
    },
    "org.apache.tomcat:tomcat-catalina:7.0.59": {
        "org.apache.catalina.loader.WebappLoader:void addRepository(java.lang.String)": 1
    },
    "org.apache.tomcat.embed:tomcat-embed-core:7.0.59": {
        "org.apache.catalina.loader.WebappLoader:void addRepository(java.lang.String)": 1,
        "org.apache.catalina.loader.WebappLoader:boolean modified()": 1
    },
    "com.thoughtworks.xstream:xstream:1.3.1": {
        "com.thoughtworks.xstream.XStream:void <init>()": 5,
        "com.thoughtworks.xstream.converters.reflection.ReflectionProviderWrapper:java.lang.Object newInstance(java.lang.Class)": 3,
        "com.thoughtworks.xstream.mapper.MapperWrapper:java.lang.String getFieldNameForItemTypeAndName(java.lang.Class,java.lang.Class,java.lang.String)": 1,
        "com.thoughtworks.xstream.mapper.MapperWrapper:java.lang.String serializedClass(java.lang.Class)": 2,
        "com.thoughtworks.xstream.XStream:void <init>(com.thoughtworks.xstream.converters.reflection.ReflectionProvider,com.thoughtworks.xstream.io.HierarchicalStreamDriver)": 1,
        "com.thoughtworks.xstream.converters.reflection.Sun14ReflectionProvider:void <init>()": 1,
        "com.thoughtworks.xstream.io.xml.XppReader:void <init>(java.io.Reader,com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer)": 1,
        "com.thoughtworks.xstream.core.util.XmlHeaderAwareReader:void <init>(java.io.InputStream)": 1,
        "com.thoughtworks.xstream.io.StreamException:void <init>(java.lang.Throwable)": 2,
        "com.thoughtworks.xstream.XStream:void <init>(com.thoughtworks.xstream.io.HierarchicalStreamDriver)": 4
    },
    "com.thoughtworks.xstream:xstream:1.4.10": {
        "com.thoughtworks.xstream.XStream:void <init>()": 3,
        "com.thoughtworks.xstream.XStream:void setupDefaultSecurity(com.thoughtworks.xstream.XStream)": 1,
        "com.thoughtworks.xstream.XStream:void <init>(com.thoughtworks.xstream.converters.reflection.ReflectionProvider)": 1,
        "com.thoughtworks.xstream.XStream:void <init>(com.thoughtworks.xstream.converters.reflection.ReflectionProvider,com.thoughtworks.xstream.io.HierarchicalStreamDriver)": 1,
        "com.thoughtworks.xstream.mapper.MapperWrapper:void <init>(com.thoughtworks.xstream.mapper.Mapper)": 1,
        "com.thoughtworks.xstream.mapper.MapperWrapper:boolean shouldSerializeMember(java.lang.Class,java.lang.String)": 1,
        "com.thoughtworks.xstream.mapper.MapperWrapper:java.lang.String serializedClass(java.lang.Class)": 2,
        "com.thoughtworks.xstream.io.xml.PrettyPrintWriter:void <init>(java.io.Writer)": 2,
        "com.thoughtworks.xstream.io.xml.CompactWriter:void <init>(java.io.Writer)": 1,
        "com.thoughtworks.xstream.XStream:void <init>(com.thoughtworks.xstream.io.HierarchicalStreamDriver)": 2
    },
    "org.bouncycastle:bcprov-jdk15on:1.57": {
        "org.bouncycastle.util.encoders.Base64:java.lang.String toBase64String(byte[])": 1,
        "org.bouncycastle.util.encoders.Base64:byte[] decode(java.lang.String)": 2
    },
    "com.alibaba:fastjson:1.2.42": {
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object,boolean)": 3,
        "com.alibaba.fastjson.JSON:com.alibaba.fastjson.JSONObject parseObject(java.lang.String)": 1,
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object)": 1,
        "com.alibaba.fastjson.JSON:java.lang.Object parseObject(java.lang.String,java.lang.Class)": 1,
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object,com.alibaba.fastjson.serializer.SerializerFeature[])": 1
    },
    "org.apache.activemq:activemq-all:5.7.0": {
        "org.apache.activemq.ActiveMQConnectionFactory:void <init>(java.lang.String)": 1,
        "org.apache.activemq.command.ActiveMQQueue:void <init>(java.lang.String)": 1
    },
    "org.apache.pdfbox:pdfbox:2.0.8": {
        "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDDocument load(java.io.File)": 7,
        "org.apache.pdfbox.text.PDFTextStripper:void <init>()": 1,
        "org.apache.pdfbox.rendering.PDFRenderer:java.awt.image.BufferedImage renderImageWithDPI(int,float,org.apache.pdfbox.rendering.ImageType)": 3
    },
    "com.alibaba:fastjson:1.2.78": {
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object)": 17,
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object,com.alibaba.fastjson.serializer.SerializeFilter,com.alibaba.fastjson.serializer.SerializerFeature[])": 1,
        "com.alibaba.fastjson.JSON:java.lang.Object parseObject(java.lang.String,java.lang.Class)": 2,
        "com.alibaba.fastjson.JSON:java.lang.Object parse(java.lang.String)": 1,
        "com.alibaba.fastjson.JSON:com.alibaba.fastjson.JSONObject parseObject(java.lang.String)": 4
    },
    "io.netty:netty-all:4.1.25.Final": {
        "io.netty.channel.nio.NioEventLoopGroup:void <init>()": 7,
        "io.netty.channel.SimpleChannelInboundHandler:void <init>()": 7,
        "io.netty.handler.codec.http.websocketx.TextWebSocketFrame:void <init>(java.lang.String)": 2,
        "io.netty.channel.group.DefaultChannelGroup:void <init>(io.netty.util.concurrent.EventExecutor)": 1,
        "io.netty.channel.ChannelInitializer:void <init>()": 8,
        "io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler:void <init>(java.lang.String)": 1,
        "io.netty.handler.codec.http.HttpObjectAggregator:void <init>(int)": 2,
        "io.netty.handler.codec.http.HttpServerCodec:void <init>()": 1,
        "io.netty.handler.codec.ByteToMessageDecoder:void <init>()": 3,
        "io.netty.handler.codec.MessageToByteEncoder:void <init>()": 3,
        "io.netty.util.internal.RecyclableArrayList:io.netty.util.internal.RecyclableArrayList newInstance()": 1,
        "io.netty.handler.codec.LengthFieldBasedFrameDecoder:void <init>(int,int,int,int,int)": 1,
        "io.netty.handler.codec.LengthFieldBasedFrameDecoder:java.lang.Object decode(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf)": 1,
        "io.netty.util.concurrent.DefaultEventExecutorGroup:void <init>(int,java.util.concurrent.ThreadFactory)": 2,
        "io.netty.util.ReferenceCountUtil:boolean release(java.lang.Object)": 6,
        "io.netty.util.HashedWheelTimer:void <init>()": 1,
        "io.netty.channel.ChannelInboundHandlerAdapter:void channelActive(io.netty.channel.ChannelHandlerContext)": 1,
        "io.netty.channel.ChannelInboundHandlerAdapter:void channelInactive(io.netty.channel.ChannelHandlerContext)": 1,
        "io.netty.channel.ChannelInboundHandlerAdapter:void exceptionCaught(io.netty.channel.ChannelHandlerContext,java.lang.Throwable)": 1,
        "io.netty.channel.ChannelInboundHandlerAdapter:void userEventTriggered(io.netty.channel.ChannelHandlerContext,java.lang.Object)": 1,
        "io.netty.channel.nio.NioEventLoopGroup:void <init>(int)": 3,
        "io.netty.channel.nio.NioEventLoopGroup:void <init>(int,java.util.concurrent.ThreadFactory)": 2,
        "io.netty.buffer.ByteBufUtil:java.lang.String hexDump(io.netty.buffer.ByteBuf)": 2,
        "io.netty.buffer.Unpooled:io.netty.buffer.ByteBuf copiedBuffer(byte[])": 1,
        "io.netty.buffer.Unpooled:io.netty.buffer.ByteBuf wrappedBuffer(byte[])": 1,
        "io.netty.handler.codec.http.DefaultHttpHeaders:void <init>()": 1,
        "io.netty.handler.codec.http.websocketx.WebSocketClientHandshakerFactory:io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker newHandshaker(java.net.URI,io.netty.handler.codec.http.websocketx.WebSocketVersion,java.lang.String,boolean,io.netty.handler.codec.http.HttpHeaders)": 1,
        "io.netty.handler.codec.http.HttpClientCodec:void <init>()": 1
    },
    "org.bouncycastle:bcprov-jdk15on:1.59": {
        "org.bouncycastle.jce.spec.ECPublicKeySpec:void <init>(org.bouncycastle.math.ec.ECPoint,org.bouncycastle.jce.spec.ECParameterSpec)": 4,
        "org.bouncycastle.jce.ECNamedCurveTable:org.bouncycastle.jce.spec.ECNamedCurveParameterSpec getParameterSpec(java.lang.String)": 13,
        "org.bouncycastle.util.encoders.Base64:byte[] encode(byte[])": 5,
        "org.bouncycastle.util.encoders.Hex:byte[] decode(byte[])": 6,
        "org.bouncycastle.util.encoders.Base64:byte[] decode(byte[])": 4,
        "org.bouncycastle.util.encoders.Hex:byte[] encode(byte[])": 13,
        "org.bouncycastle.util.encoders.Hex:byte[] decode(java.lang.String)": 3,
        "org.bouncycastle.util.encoders.Hex:java.lang.String toHexString(byte[])": 33,
        "org.bouncycastle.asn1.x509.Certificate:org.bouncycastle.asn1.x509.Certificate getInstance(java.lang.Object)": 7,
        "org.bouncycastle.util.io.pem.PemReader:org.bouncycastle.util.io.pem.PemObject readPemObject()": 7,
        "org.bouncycastle.util.io.pem.PemWriter:void writeObject(org.bouncycastle.util.io.pem.PemObjectGenerator)": 4,
        "org.bouncycastle.crypto.params.ECDomainParameters:void <init>(org.bouncycastle.math.ec.ECCurve,org.bouncycastle.math.ec.ECPoint,java.math.BigInteger)": 3,
        "org.bouncycastle.math.ec.ECCurve$Fp:void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)": 1,
        "org.bouncycastle.crypto.signers.SM2Signer:byte[] generateSignature()": 1,
        "org.bouncycastle.crypto.params.ECPublicKeyParameters:void <init>(org.bouncycastle.math.ec.ECPoint,org.bouncycastle.crypto.params.ECDomainParameters)": 4,
        "org.bouncycastle.crypto.engines.SM2Engine:byte[] processBlock(byte[],int,int)": 2,
        "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)": 1,
        "org.bouncycastle.asn1.ASN1Integer:org.bouncycastle.asn1.ASN1Integer getInstance(java.lang.Object)": 4,
        "org.bouncycastle.util.encoders.Base64:byte[] decode(java.lang.String)": 2,
        "org.bouncycastle.asn1.pkcs.RSAPrivateKeyStructure:void <init>(org.bouncycastle.asn1.ASN1Sequence)": 1,
        "org.bouncycastle.crypto.kems.ECIESKeyEncapsulation:org.bouncycastle.crypto.CipherParameters encrypt(byte[],int)": 1,
        "org.bouncycastle.crypto.kems.ECIESKeyEncapsulation:org.bouncycastle.crypto.CipherParameters decrypt(byte[],int)": 1,
        "org.bouncycastle.crypto.generators.SCrypt:byte[] generate(byte[],byte[],int,int,int,int)": 8,
        "org.bouncycastle.asn1.ASN1Primitive:org.bouncycastle.asn1.ASN1Primitive fromByteArray(byte[])": 1,
        "org.bouncycastle.crypto.params.ECDomainParameters:void <init>(org.bouncycastle.math.ec.ECCurve,org.bouncycastle.math.ec.ECPoint,java.math.BigInteger,java.math.BigInteger,byte[])": 2,
        "org.bouncycastle.asn1.x9.ECNamedCurveTable:org.bouncycastle.asn1.x9.X9ECParameters getByName(java.lang.String)": 2,
        "org.bouncycastle.jce.spec.ECNamedCurveSpec:void <init>(java.lang.String,org.bouncycastle.math.ec.ECCurve,org.bouncycastle.math.ec.ECPoint,java.math.BigInteger)": 3,
        "org.bouncycastle.jce.ECPointUtil:java.security.spec.ECPoint decodePoint(java.security.spec.EllipticCurve,byte[])": 2,
        "org.bouncycastle.asn1.x9.X9IntegerConverter:int getByteLength(org.bouncycastle.math.ec.ECCurve)": 1,
        "org.bouncycastle.jcajce.provider.asymmetric.util.EC5Util:java.security.spec.EllipticCurve convertCurve(org.bouncycastle.math.ec.ECCurve,byte[])": 1,
        "org.bouncycastle.math.ec.ECAlgorithms:org.bouncycastle.math.ec.ECPoint sumOfTwoMultiplies(org.bouncycastle.math.ec.ECPoint,java.math.BigInteger,org.bouncycastle.math.ec.ECPoint,java.math.BigInteger)": 1,
        "org.bouncycastle.jce.spec.ECNamedCurveSpec:void <init>(java.lang.String,org.bouncycastle.math.ec.ECCurve,org.bouncycastle.math.ec.ECPoint,java.math.BigInteger,java.math.BigInteger)": 1,
        "org.bouncycastle.crypto.params.ECDomainParameters:void <init>(org.bouncycastle.math.ec.ECCurve,org.bouncycastle.math.ec.ECPoint,java.math.BigInteger,java.math.BigInteger)": 2,
        "org.bouncycastle.crypto.signers.ECDSASigner:boolean verifySignature(byte[],java.math.BigInteger,java.math.BigInteger)": 1,
        "org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher:int doFinal(byte[],int)": 2,
        "org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher:int processBytes(byte[],int,int,byte[],int)": 2,
        "org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)": 2,
        "org.bouncycastle.crypto.modes.GCMBlockCipher:int doFinal(byte[],int)": 2,
        "org.bouncycastle.crypto.modes.GCMBlockCipher:int processBytes(byte[],int,int,byte[],int)": 2,
        "org.bouncycastle.crypto.modes.GCMBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)": 2,
        "org.bouncycastle.crypto.tls.TlsUtils:byte[] PRF(org.bouncycastle.crypto.tls.TlsContext,byte[],java.lang.String,byte[],int)": 2,
        "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)": 2,
        "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(byte[])": 1,
        "org.bouncycastle.asn1.x509.KeyUsage:org.bouncycastle.asn1.x509.KeyUsage fromExtensions(org.bouncycastle.asn1.x509.Extensions)": 1,
        "org.bouncycastle.asn1.ocsp.OCSPResponse:org.bouncycastle.asn1.ocsp.OCSPResponse getInstance(java.lang.Object)": 1,
        "org.bouncycastle.crypto.tls.TlsECCUtils:org.bouncycastle.crypto.params.ECDomainParameters getParametersForNamedCurve(int)": 3,
        "org.bouncycastle.crypto.tls.TlsECCUtils:void writeExplicitECParameters(short[],org.bouncycastle.crypto.params.ECDomainParameters,java.io.OutputStream)": 1,
        "org.bouncycastle.crypto.tls.TlsECCUtils:void writeNamedECParameters(int,java.io.OutputStream)": 1,
        "org.bouncycastle.crypto.tls.TlsECCUtils:org.bouncycastle.crypto.params.ECPrivateKeyParameters generateEphemeralClientKeyExchange(java.security.SecureRandom,short[],org.bouncycastle.crypto.params.ECDomainParameters,java.io.OutputStream)": 1,
        "org.bouncycastle.crypto.tls.TlsDHUtils:org.bouncycastle.crypto.params.DHPrivateKeyParameters generateEphemeralServerKeyExchange(java.security.SecureRandom,org.bouncycastle.crypto.params.DHParameters,java.io.OutputStream)": 1,
        "org.bouncycastle.asn1.x500.X500Name:org.bouncycastle.asn1.x500.X500Name getInstance(java.lang.Object)": 1
    },
    "org.apache.kafka:kafka-clients:2.0.0": {
        "org.apache.kafka.clients.producer.KafkaProducer:void <init>(java.util.Properties)": 9,
        "org.apache.kafka.clients.producer.KafkaProducer:java.util.concurrent.Future send(org.apache.kafka.clients.producer.ProducerRecord,org.apache.kafka.clients.producer.Callback)": 1,
        "org.apache.kafka.clients.producer.KafkaProducer:java.util.concurrent.Future send(org.apache.kafka.clients.producer.ProducerRecord)": 11,
        "org.apache.kafka.clients.producer.ProducerRecord:void <init>(java.lang.String,java.lang.Object,java.lang.Object)": 2,
        "org.apache.kafka.clients.consumer.ConsumerRecords:java.util.List records(org.apache.kafka.common.TopicPartition)": 5,
        "org.apache.kafka.clients.consumer.KafkaConsumer:org.apache.kafka.clients.consumer.ConsumerRecords poll(java.time.Duration)": 13,
        "org.apache.kafka.clients.consumer.KafkaConsumer:void <init>(java.util.Properties)": 20,
        "org.apache.kafka.clients.producer.ProducerRecord:void <init>(java.lang.String,java.lang.Object)": 8,
        "org.apache.kafka.clients.consumer.internals.AbstractPartitionAssignor:void put(java.util.Map,java.lang.Object,java.lang.Object)": 1,
        "org.apache.kafka.clients.consumer.ConsumerRecords:java.util.Iterator iterator()": 13,
        "org.apache.kafka.clients.producer.ProducerRecord:void <init>(java.lang.String,java.lang.Integer,java.lang.Long,java.lang.Object,java.lang.Object,java.lang.Iterable)": 4,
        "org.apache.kafka.common.header.internals.RecordHeaders:void <init>()": 3,
        "org.apache.kafka.clients.admin.AdminClient:org.apache.kafka.clients.admin.AdminClient create(java.util.Properties)": 8,
        "org.apache.kafka.clients.admin.Config:void <init>(java.util.Collection)": 1,
        "org.apache.kafka.clients.consumer.KafkaConsumer:void commitSync(java.util.Map)": 3,
        "org.apache.kafka.clients.consumer.KafkaConsumer:org.apache.kafka.clients.consumer.ConsumerRecords poll(long)": 6,
        "org.apache.kafka.clients.consumer.KafkaConsumer:void commitSync()": 5,
        "org.apache.kafka.clients.consumer.KafkaConsumer:void commitAsync()": 1,
        "org.apache.kafka.clients.consumer.KafkaConsumer:void commitAsync(org.apache.kafka.clients.consumer.OffsetCommitCallback)": 1,
        "org.apache.kafka.clients.consumer.KafkaConsumer:void commitAsync(java.util.Map,org.apache.kafka.clients.consumer.OffsetCommitCallback)": 1,
        "org.apache.kafka.common.requests.MetadataResponse:void <init>(int,java.util.List,java.lang.String,int,java.util.List)": 1
    },
    "com.sparkjava:spark-core:2.2": {
        "spark.SparkBase:void staticFileLocation(java.lang.String)": 1
    },
    "org.hibernate:hibernate-core:5.2.3.Final": {
        "org.hibernate.Hibernate:void initialize(java.lang.Object)": 1
    },
    "org.hibernate:hibernate-core:5.2.9.Final": {
        "org.hibernate.boot.MetadataSources:org.hibernate.boot.Metadata buildMetadata()": 1,
        "org.hibernate.boot.MetadataSources:void <init>(org.hibernate.service.ServiceRegistry)": 1,
        "org.hibernate.boot.registry.StandardServiceRegistryBuilder:void <init>()": 1,
        "org.hibernate.boot.registry.StandardServiceRegistryBuilder:void destroy(org.hibernate.service.ServiceRegistry)": 1,
        "org.hibernate.dialect.Dialect:void <init>()": 1,
        "org.hibernate.dialect.Dialect:java.lang.String getCastTypeName(int)": 1,
        "org.hibernate.cfg.Configuration:org.hibernate.SessionFactory buildSessionFactory()": 2,
        "org.hibernate.cfg.Configuration:org.hibernate.cfg.Configuration configure()": 2,
        "org.hibernate.cfg.Configuration:void <init>()": 2
    },
    "com.thoughtworks.xstream:xstream:1.4.16": {
        "com.thoughtworks.xstream.XStream:void toXML(java.lang.Object,java.io.Writer)": 2,
        "com.thoughtworks.xstream.XStream:void <init>()": 5,
        "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.io.Reader)": 2,
        "com.thoughtworks.xstream.XStream:java.lang.Object fromXML(java.io.File)": 1
    },
    "org.hibernate:hibernate-core:4.3.5.Final": {
        "org.hibernate.Hibernate:void initialize(java.lang.Object)": 2,
        "org.hibernate.boot.registry.StandardServiceRegistryBuilder:org.hibernate.boot.registry.StandardServiceRegistry build()": 1,
        "org.hibernate.boot.registry.StandardServiceRegistryBuilder:org.hibernate.boot.registry.StandardServiceRegistryBuilder applySettings(java.util.Map)": 1,
        "org.hibernate.boot.registry.StandardServiceRegistryBuilder:void <init>()": 2,
        "org.hibernate.cfg.Configuration:org.hibernate.SessionFactory buildSessionFactory(org.hibernate.service.ServiceRegistry)": 1,
        "org.hibernate.cfg.Configuration:org.hibernate.cfg.Configuration configure(java.lang.String)": 1,
        "org.hibernate.cfg.Configuration:void <init>()": 2
    },
    "com.alibaba:fastjson:1.2.44": {
        "com.alibaba.fastjson.JSONArray:com.alibaba.fastjson.JSONObject getJSONObject(int)": 20,
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object)": 11,
        "com.alibaba.fastjson.JSON:java.util.List parseArray(java.lang.String,java.lang.Class)": 4,
        "com.alibaba.fastjson.JSONObject:java.lang.String getString(java.lang.String)": 26,
        "com.alibaba.fastjson.JSON:java.lang.Object toJavaObject(com.alibaba.fastjson.JSON,java.lang.Class)": 1,
        "com.alibaba.fastjson.JSONObject:java.lang.Double getDouble(java.lang.String)": 3,
        "com.alibaba.fastjson.JSON:com.alibaba.fastjson.JSONObject parseObject(java.lang.String)": 18,
        "com.alibaba.fastjson.JSON:java.lang.Object parse(java.lang.String)": 4,
        "com.alibaba.fastjson.JSON:java.lang.Object toJSON(java.lang.Object)": 2
    },
    "org.apache.ant:ant:1.10.6": {
        "org.apache.tools.zip.ZipFile:void <init>(java.io.File,java.lang.String)": 1
    },
    "org.apache.pdfbox:pdfbox:2.0.4": {
        "org.apache.pdfbox.pdfparser.PDFParser:void parse()": 5,
        "org.apache.pdfbox.io.RandomAccessBufferedFileInputStream:void <init>(java.io.InputStream)": 1,
        "org.apache.pdfbox.text.PDFTextStripper:java.lang.String getText(org.apache.pdfbox.pdmodel.PDDocument)": 2
    },
    "org.hibernate:hibernate-core:5.2.2.Final": {
        "org.hibernate.cfg.Configuration:org.hibernate.SessionFactory buildSessionFactory()": 1,
        "org.hibernate.cfg.Configuration:org.hibernate.cfg.Configuration configure(java.lang.String)": 1,
        "org.hibernate.cfg.Configuration:void <init>()": 1
    },
    "io.netty:netty-all:4.0.24.Final": {
        "io.netty.channel.SimpleChannelInboundHandler:void <init>()": 3,
        "io.netty.channel.nio.NioEventLoopGroup:void <init>()": 4,
        "io.netty.bootstrap.Bootstrap:io.netty.channel.ChannelFuture connect(java.lang.String,int)": 2,
        "io.netty.handler.ssl.SslContext:io.netty.handler.ssl.SslContext newClientContext(javax.net.ssl.TrustManagerFactory)": 2,
        "io.netty.channel.SimpleChannelInboundHandler:void <init>(boolean)": 1,
        "io.netty.handler.codec.protobuf.ProtobufEncoder:void <init>()": 2,
        "io.netty.handler.codec.protobuf.ProtobufVarint32LengthFieldPrepender:void <init>()": 2,
        "io.netty.handler.codec.protobuf.ProtobufDecoder:void <init>(com.google.protobuf.MessageLite)": 2,
        "io.netty.handler.codec.protobuf.ProtobufVarint32FrameDecoder:void <init>()": 2,
        "io.netty.channel.nio.NioEventLoopGroup:void <init>(int)": 2,
        "io.netty.handler.ssl.util.SelfSignedCertificate:void <init>()": 1,
        "io.netty.handler.ssl.SslContext:io.netty.handler.ssl.SslContext newServerContext(java.io.File,java.io.File)": 1,
        "io.netty.handler.codec.LengthFieldBasedFrameDecoder:void <init>(int,int,int,int,int)": 1,
        "io.netty.handler.codec.string.StringDecoder:void <init>(java.nio.charset.Charset)": 2,
        "io.netty.buffer.Unpooled:io.netty.buffer.ByteBuf copiedBuffer(java.lang.CharSequence,java.nio.charset.Charset)": 1
    },
    "org.apache.tomcat:tomcat-catalina:8.0.1": {
        "org.apache.catalina.session.StandardSession:void writeObjectData(java.io.ObjectOutputStream)": 1
    },
    "org.apache.tomcat.embed:tomcat-embed-core:8.0.1": {
        "org.apache.catalina.session.StandardSession:void writeObjectData(java.io.ObjectOutputStream)": 1
    },
    "org.apache.kafka:kafka-clients:2.7.0": {
        "org.apache.kafka.clients.consumer.KafkaConsumer:void <init>(java.util.Properties)": 1,
        "org.apache.kafka.clients.consumer.KafkaConsumer:org.apache.kafka.clients.consumer.ConsumerRecords poll(java.time.Duration)": 1,
        "org.apache.kafka.clients.producer.ProducerRecord:void <init>(java.lang.String,java.lang.Object,java.lang.Object)": 1,
        "org.apache.kafka.clients.producer.KafkaProducer:void <init>(java.util.Properties)": 2,
        "org.apache.kafka.clients.producer.ProducerRecord:void <init>(java.lang.String,java.lang.Integer,java.lang.Object,java.lang.Object)": 1
    },
    "io.netty:netty-all:4.1.17.Final": {
        "io.netty.handler.codec.MessageToMessageEncoder:void <init>()": 1,
        "io.netty.buffer.Unpooled:io.netty.buffer.ByteBuf copiedBuffer(java.lang.CharSequence,java.nio.charset.Charset)": 3,
        "io.netty.handler.codec.MessageToMessageDecoder:void <init>()": 1,
        "io.netty.handler.codec.http.DefaultFullHttpResponse:void <init>(io.netty.handler.codec.http.HttpVersion,io.netty.handler.codec.http.HttpResponseStatus,io.netty.buffer.ByteBuf)": 3,
        "io.netty.handler.codec.http.HttpUtil:void setContentLength(io.netty.handler.codec.http.HttpMessage,long)": 3,
        "io.netty.channel.ChannelInitializer:void <init>()": 3,
        "io.netty.handler.codec.http.HttpResponseEncoder:void <init>()": 2,
        "io.netty.handler.codec.http.HttpObjectAggregator:void <init>(int)": 6,
        "io.netty.handler.codec.http.HttpRequestDecoder:void <init>()": 2,
        "io.netty.channel.SimpleChannelInboundHandler:void <init>()": 6,
        "io.netty.channel.nio.NioEventLoopGroup:void <init>()": 3,
        "io.netty.handler.codec.http.DefaultFullHttpRequest:void <init>(io.netty.handler.codec.http.HttpVersion,io.netty.handler.codec.http.HttpMethod,java.lang.String,io.netty.buffer.ByteBuf)": 3,
        "io.netty.handler.codec.http.HttpRequestEncoder:void <init>()": 1,
        "io.netty.handler.codec.http.HttpResponseDecoder:void <init>()": 1,
        "io.netty.bootstrap.Bootstrap:io.netty.channel.ChannelFuture connect(java.net.SocketAddress)": 1,
        "io.netty.channel.nio.NioEventLoopGroup:void <init>(int)": 5,
        "io.netty.channel.epoll.EpollEventLoopGroup:void <init>(int)": 5,
        "io.netty.util.ReferenceCountUtil:boolean release(java.lang.Object)": 17,
        "io.netty.channel.socket.DatagramPacket:io.netty.channel.socket.DatagramPacket retain()": 1,
        "io.netty.channel.ChannelInboundHandlerAdapter:void channelActive(io.netty.channel.ChannelHandlerContext)": 4,
        "io.netty.channel.ChannelInboundHandlerAdapter:void channelInactive(io.netty.channel.ChannelHandlerContext)": 4,
        "io.netty.handler.codec.LengthFieldBasedFrameDecoder:void <init>(int,int,int,int,int)": 1,
        "io.netty.handler.codec.http.HttpClientCodec:void <init>()": 2,
        "io.netty.handler.codec.http.DefaultHttpHeaders:void <init>()": 2,
        "io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler:void <init>(java.lang.String,java.lang.String,boolean)": 1,
        "io.netty.handler.codec.http.HttpServerCodec:void <init>()": 1,
        "io.netty.handler.ssl.SslContextBuilder:io.netty.handler.ssl.SslContextBuilder forServer(java.io.File,java.io.File)": 1,
        "io.netty.handler.codec.http.websocketx.WebSocketClientHandshakerFactory:io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker newHandshaker(java.net.URI,io.netty.handler.codec.http.websocketx.WebSocketVersion,java.lang.String,boolean,io.netty.handler.codec.http.HttpHeaders)": 1,
        "io.netty.handler.codec.http.websocketx.TextWebSocketFrame:void <init>(java.lang.String)": 4,
        "io.netty.handler.codec.http.HttpResponseStatus:io.netty.handler.codec.http.HttpResponseStatus valueOf(int)": 3,
        "io.netty.handler.codec.http.DefaultHttpResponse:void <init>(io.netty.handler.codec.http.HttpVersion,io.netty.handler.codec.http.HttpResponseStatus)": 3,
        "io.netty.buffer.Unpooled:io.netty.buffer.ByteBuf wrappedBuffer(byte[])": 1,
        "io.netty.handler.codec.http.DefaultFullHttpResponse:void <init>(io.netty.handler.codec.http.HttpVersion,io.netty.handler.codec.http.HttpResponseStatus)": 3,
        "io.netty.handler.codec.http.HttpUtil:boolean isKeepAlive(io.netty.handler.codec.http.HttpMessage)": 2,
        "io.netty.handler.codec.http.DefaultFullHttpRequest:void <init>(io.netty.handler.codec.http.HttpVersion,io.netty.handler.codec.http.HttpMethod,java.lang.String)": 1,
        "io.netty.handler.codec.http.HttpUtil:long getContentLength(io.netty.handler.codec.http.HttpMessage)": 3,
        "io.netty.handler.codec.http.multipart.HttpPostRequestDecoder:void <init>(io.netty.handler.codec.http.HttpRequest)": 2,
        "io.netty.handler.codec.http.QueryStringDecoder:java.util.Map parameters()": 1
    },
    "io.vertx:vertx-core:3.5.0": {
        "io.vertx.core.Vertx:io.vertx.core.Vertx vertx()": 2
    },
    "io.vertx:vertx-core:3.4.2": {
        "io.vertx.core.Vertx:io.vertx.core.Vertx vertx()": 2
    },
    "org.apache.commons:commons-compress:1.15": {
        "org.apache.commons.compress.compressors.gzip.GzipCompressorOutputStream:void <init>(java.io.OutputStream,org.apache.commons.compress.compressors.gzip.GzipParameters)": 3,
        "org.apache.commons.compress.compressors.gzip.GzipCompressorOutputStream:void close()": 4,
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream:void close()": 8,
        "org.apache.commons.compress.archivers.zip.ZipFile:java.io.InputStream getInputStream(org.apache.commons.compress.archivers.zip.ZipArchiveEntry)": 2,
        "org.apache.commons.compress.archivers.zip.ZipFile:void <init>(java.io.File)": 2,
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream:org.apache.commons.compress.archivers.zip.ZipArchiveEntry getNextZipEntry()": 6,
        "org.apache.commons.compress.utils.IOUtils:void closeQuietly(java.io.Closeable)": 24,
        "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream:void closeArchiveEntry()": 2,
        "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream:void putArchiveEntry(org.apache.commons.compress.archivers.ArchiveEntry)": 2,
        "org.apache.commons.compress.utils.IOUtils:long copy(java.io.InputStream,java.io.OutputStream)": 2,
        "org.apache.commons.compress.archivers.ArchiveStreamFactory:org.apache.commons.compress.archivers.ArchiveInputStream createArchiveInputStream(java.lang.String,java.io.InputStream)": 1
    },
    "org.apache.kafka:kafka-clients:2.5.0": {
        "org.apache.kafka.clients.producer.KafkaProducer:void <init>(java.util.Properties)": 2,
        "org.apache.kafka.clients.producer.KafkaProducer:java.util.concurrent.Future send(org.apache.kafka.clients.producer.ProducerRecord)": 2,
        "org.apache.kafka.clients.producer.ProducerRecord:void <init>(java.lang.String,java.lang.Object)": 2,
        "org.apache.kafka.clients.consumer.KafkaConsumer:void <init>(java.util.Properties)": 1,
        "org.apache.kafka.clients.producer.ProducerRecord:void <init>(java.lang.String,java.lang.Object,java.lang.Object)": 1
    },
    "org.postgresql:postgresql:42.1.1": {
        "org.postgresql.copy.CopyManager:long copyIn(java.lang.String,java.io.Reader)": 1
    },
    "org.apache.dubbo:dubbo:2.7.7": {
        "org.apache.dubbo.common.extension.ExtensionLoader:org.apache.dubbo.common.extension.ExtensionLoader getExtensionLoader(java.lang.Class)": 1,
        "org.apache.dubbo.registry.support.FailbackRegistry:void <init>(org.apache.dubbo.common.URL)": 1
    },
    "org.apache.shiro:shiro-web:1.3.2": {
        "org.apache.shiro.web.filter.authc.FormAuthenticationFilter:boolean onAccessDenied(javax.servlet.ServletRequest,javax.servlet.ServletResponse)": 1
    },
    "org.apache.kafka:kafka-clients:2.1.1": {
        "org.apache.kafka.clients.producer.ProducerRecord:void <init>(java.lang.String,java.lang.Object)": 2,
        "org.apache.kafka.clients.producer.KafkaProducer:void <init>(java.util.Properties)": 3,
        "org.apache.kafka.clients.consumer.KafkaConsumer:void <init>(java.util.Properties)": 1,
        "org.apache.kafka.clients.producer.ProducerRecord:void <init>(java.lang.String,java.lang.Object,java.lang.Object)": 1
    },
    "org.hibernate:hibernate-core:5.4.5.Final": {
        "org.hibernate.cfg.Configuration:void <init>()": 10
    },
    "org.apache.httpcomponents:httpclient:4.3.1": {
        "org.apache.http.client.utils.URIUtils:org.apache.http.HttpHost extractHost(java.net.URI)": 1
    },
    "org.apache.tomcat.embed:tomcat-embed-core:8.5.50": {
        "org.apache.tomcat.util.http.fileupload.IOUtils:void closeQuietly(java.io.Closeable)": 2
    },
    "org.apache.mina:mina-core:2.0.9": {
        "org.apache.mina.transport.socket.nio.NioSocketAcceptor:void <init>()": 1,
        "org.apache.mina.transport.socket.nio.NioSocketConnector:void <init>()": 1
    },
    "com.alibaba:fastjson:1.2.59": {
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object)": 16,
        "com.alibaba.fastjson.JSON:byte[] toJSONBytes(java.lang.Object,com.alibaba.fastjson.serializer.SerializerFeature[])": 1,
        "com.alibaba.fastjson.JSON:java.lang.Object parseObject(byte[],java.lang.reflect.Type,com.alibaba.fastjson.parser.Feature[])": 1,
        "com.alibaba.fastjson.JSON:java.lang.Object toJSON(java.lang.Object)": 2,
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object,com.alibaba.fastjson.serializer.SerializerFeature[])": 1,
        "com.alibaba.fastjson.JSONObject:java.lang.String getString(java.lang.String)": 18,
        "com.alibaba.fastjson.JSON:java.util.List parseArray(java.lang.String,java.lang.Class)": 2,
        "com.alibaba.fastjson.JSON:com.alibaba.fastjson.JSONObject parseObject(java.lang.String)": 5,
        "com.alibaba.fastjson.JSONObject:java.lang.Double getDouble(java.lang.String)": 2,
        "com.alibaba.fastjson.JSONObject:com.alibaba.fastjson.JSONObject getJSONObject(java.lang.String)": 1,
        "com.alibaba.fastjson.JSONObject:java.lang.Float getFloat(java.lang.String)": 1,
        "com.alibaba.fastjson.JSONObject:java.lang.Integer getInteger(java.lang.String)": 2
    },
    "org.bouncycastle:bcprov-jdk15on:1.51": {
        "org.bouncycastle.asn1.x509.SubjectPublicKeyInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)": 1,
        "org.bouncycastle.asn1.ASN1InputStream:org.bouncycastle.asn1.ASN1Primitive readObject()": 1,
        "org.bouncycastle.asn1.x509.GeneralName:void <init>(int,java.lang.String)": 3
    },
    "org.apache.commons:commons-configuration2:2.2": {
        "org.apache.commons.configuration2.PropertiesConfigurationLayout:void load(org.apache.commons.configuration2.PropertiesConfiguration,java.io.Reader)": 1
    },
    "org.apache.kafka:kafka-clients:2.4.0": {
        "org.apache.kafka.common.config.AbstractConfig:void <init>(org.apache.kafka.common.config.ConfigDef,java.util.Map)": 1
    },
    "org.apache.tomcat.embed:tomcat-embed-core:8.5.2": {
        "org.apache.catalina.webresources.DirResourceSet:void <init>(org.apache.catalina.WebResourceRoot,java.lang.String,java.lang.String,java.lang.String)": 1
    },
    "org.hibernate:hibernate-core:4.3.8.Final": {
        "org.hibernate.boot.registry.StandardServiceRegistryBuilder:org.hibernate.boot.registry.StandardServiceRegistry build()": 1,
        "org.hibernate.cfg.Configuration:org.hibernate.SessionFactory buildSessionFactory(org.hibernate.service.ServiceRegistry)": 1,
        "org.hibernate.boot.registry.StandardServiceRegistryBuilder:org.hibernate.boot.registry.StandardServiceRegistryBuilder applySettings(java.util.Map)": 1,
        "org.hibernate.boot.registry.StandardServiceRegistryBuilder:void <init>()": 1,
        "org.hibernate.cfg.Configuration:org.hibernate.cfg.Configuration configure()": 1,
        "org.hibernate.cfg.Configuration:void <init>()": 1
    },
    "org.quartz-scheduler:quartz:2.2.1": {
        "org.quartz.impl.StdSchedulerFactory:org.quartz.Scheduler getDefaultScheduler()": 3
    },
    "org.apache.kafka:kafka-clients:2.8.0": {
        "org.apache.kafka.clients.producer.ProducerRecord:void <init>(java.lang.String,java.lang.Object,java.lang.Object)": 1,
        "org.apache.kafka.clients.producer.KafkaProducer:void <init>(java.util.Properties)": 2,
        "org.apache.kafka.clients.admin.AdminClient:org.apache.kafka.clients.admin.AdminClient create(java.util.Properties)": 1,
        "org.apache.kafka.clients.producer.KafkaProducer:java.util.concurrent.Future send(org.apache.kafka.clients.producer.ProducerRecord)": 1,
        "org.apache.kafka.clients.producer.ProducerRecord:void <init>(java.lang.String,java.lang.Object)": 1
    },
    "org.mongodb:mongo-java-driver:3.11.0": {
        "com.mongodb.client.MongoClients:com.mongodb.client.MongoClient create(java.lang.String)": 1,
        "com.mongodb.MongoCredential:com.mongodb.MongoCredential createCredential(java.lang.String,java.lang.String,char[])": 1,
        "com.mongodb.MongoClientSettings:com.mongodb.MongoClientSettings$Builder builder()": 1,
        "com.mongodb.client.MongoClients:com.mongodb.client.MongoClient create(com.mongodb.MongoClientSettings)": 1,
        "org.bson.Document:org.bson.Document parse(java.lang.String)": 1,
        "com.mongodb.MongoClient:void <init>(com.mongodb.MongoClientURI)": 1,
        "com.mongodb.MongoClientURI:void <init>(java.lang.String)": 1
    },
    "io.netty:netty:3.9.1.Final": {
        "org.jboss.netty.handler.codec.http.CookieDecoder:java.util.Set decode(java.lang.String)": 1
    },
    "org.apache.httpcomponents:httpclient:4.5.1": {
        "org.apache.http.client.utils.URIUtils:org.apache.http.HttpHost extractHost(java.net.URI)": 1
    },
    "org.codehaus.plexus:plexus-utils:3.0.8": {
        "org.codehaus.plexus.util.cli.CommandLineUtils:int executeCommandLine(org.codehaus.plexus.util.cli.Commandline,java.io.InputStream,org.codehaus.plexus.util.cli.StreamConsumer,org.codehaus.plexus.util.cli.StreamConsumer)": 1
    },
    "org.apache.ant:ant:1.8.0": {
        "org.apache.tools.ant.taskdefs.Ant:void init()": 1,
        "org.apache.tools.ant.Task:void log(java.lang.String,int)": 19,
        "org.apache.tools.ant.taskdefs.Execute:java.util.Vector getProcEnvironment()": 1,
        "org.apache.tools.ant.Task:void log(java.lang.String)": 2,
        "org.apache.tools.ant.PropertyHelper:org.apache.tools.ant.PropertyHelper getPropertyHelper(org.apache.tools.ant.Project)": 1,
        "org.apache.tools.ant.PropertyHelper:void <init>()": 1,
        "org.apache.tools.ant.PropertyHelper:java.lang.Object getPropertyHook(java.lang.String,java.lang.String,boolean)": 1,
        "org.apache.tools.ant.taskdefs.Java:void execute()": 1
    },
    "com.alibaba:fastjson:1.2.55": {
        "com.alibaba.fastjson.JSON:com.alibaba.fastjson.JSONObject parseObject(java.lang.String)": 19,
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object)": 22,
        "com.alibaba.fastjson.JSON:java.lang.Object parseObject(java.lang.String,java.lang.Class)": 13,
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object,com.alibaba.fastjson.serializer.SerializeFilter,com.alibaba.fastjson.serializer.SerializerFeature[])": 4,
        "com.alibaba.fastjson.JSONObject:java.lang.Object get(java.lang.Object)": 45,
        "com.alibaba.fastjson.JSON:com.alibaba.fastjson.JSONArray parseArray(java.lang.String)": 1,
        "com.alibaba.fastjson.JSONObject:java.math.BigDecimal getBigDecimal(java.lang.String)": 19
    },
    "org.hibernate:hibernate-core:5.0.12.Final": {
        "org.hibernate.dialect.Dialect:void <init>()": 1
    },
    "org.apache.zookeeper:zookeeper:3.4.7": {
        "org.apache.zookeeper.ZooKeeper:void <init>(java.lang.String,int,org.apache.zookeeper.Watcher,boolean)": 2
    },
    "com.alibaba:fastjson:1.2.43": {
        "com.alibaba.fastjson.JSON:com.alibaba.fastjson.JSONObject parseObject(java.lang.String)": 1,
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object)": 3
    },
    "io.netty:netty-codec-http:4.1.52.Final": {
        "io.netty.handler.codec.http.multipart.HttpPostRequestDecoder:void <init>(io.netty.handler.codec.http.multipart.HttpDataFactory,io.netty.handler.codec.http.HttpRequest)": 1
    },
    "io.netty:netty-codec-http2:4.1.52.Final": {
        "io.netty.handler.codec.http2.Http2ConnectionHandler:void handlerAdded(io.netty.channel.ChannelHandlerContext)": 1
    },
    "org.apache.httpcomponents:httpclient:4.5.6": {
        "org.apache.http.client.utils.URIUtils:org.apache.http.HttpHost extractHost(java.net.URI)": 2
    },
    "org.apache.camel:camel-core:2.15.0": {
        "org.apache.camel.impl.DefaultEndpoint:void <init>(java.lang.String,org.apache.camel.Component)": 1,
        "org.apache.camel.impl.DefaultMessage:java.lang.Object getHeader(java.lang.String,java.lang.Object)": 1,
        "org.apache.camel.impl.DefaultConsumer:void doStart()": 1,
        "org.apache.camel.impl.DefaultConsumer:void doStop()": 1
    },
    "io.netty:netty-all:4.1.16.Final": {
        "io.netty.channel.ChannelInitializer:void <init>()": 11,
        "io.netty.handler.codec.LengthFieldBasedFrameDecoder:void <init>(int,int,int,int,int)": 3,
        "io.netty.channel.nio.NioEventLoopGroup:void <init>(int,java.util.concurrent.ThreadFactory)": 9,
        "io.netty.channel.epoll.EpollEventLoopGroup:void <init>(int,java.util.concurrent.ThreadFactory)": 5,
        "io.netty.channel.group.DefaultChannelGroup:void <init>(io.netty.util.concurrent.EventExecutor)": 5,
        "io.netty.channel.ChannelDuplexHandler:void write(io.netty.channel.ChannelHandlerContext,java.lang.Object,io.netty.channel.ChannelPromise)": 4,
        "io.netty.util.ReferenceCountUtil:boolean release(java.lang.Object)": 29,
        "io.netty.util.HashedWheelTimer:void <init>(java.util.concurrent.ThreadFactory,long,java.util.concurrent.TimeUnit)": 1,
        "io.netty.buffer.Unpooled:io.netty.buffer.ByteBuf buffer(int)": 2,
        "io.netty.buffer.ByteBufInputStream:void <init>(io.netty.buffer.ByteBuf)": 4,
        "io.netty.buffer.Unpooled:io.netty.buffer.ByteBuf wrappedBuffer(byte[])": 5,
        "io.netty.buffer.Unpooled:io.netty.buffer.ByteBuf wrappedBuffer(byte[],int,int)": 1,
        "io.netty.buffer.ByteBufOutputStream:void write(byte[])": 3,
        "io.netty.buffer.ByteBufOutputStream:void writeInt(int)": 3,
        "io.netty.buffer.ByteBufOutputStream:void writeShort(int)": 3,
        "io.netty.buffer.ByteBufOutputStream:void writeByte(int)": 6,
        "io.netty.handler.codec.http.HttpContentCompressor:void <init>()": 3,
        "io.netty.handler.codec.http.HttpObjectAggregator:void <init>(int)": 5,
        "io.netty.handler.codec.http.HttpServerCodec:void <init>(int,int,int)": 2,
        "io.netty.handler.codec.http.DefaultFullHttpResponse:void <init>(io.netty.handler.codec.http.HttpVersion,io.netty.handler.codec.http.HttpResponseStatus,io.netty.buffer.ByteBuf)": 4,
        "io.netty.handler.codec.http.HttpContentDecompressor:void <init>()": 3,
        "io.netty.handler.codec.http.HttpUtil:boolean isKeepAlive(io.netty.handler.codec.http.HttpMessage)": 1,
        "io.netty.handler.codec.http.DefaultFullHttpResponse:void <init>(io.netty.handler.codec.http.HttpVersion,io.netty.handler.codec.http.HttpResponseStatus)": 5,
        "io.netty.handler.codec.http.DefaultHttpResponse:void <init>(io.netty.handler.codec.http.HttpVersion,io.netty.handler.codec.http.HttpResponseStatus)": 1,
        "io.netty.handler.codec.http.HttpResponseStatus:io.netty.handler.codec.http.HttpResponseStatus valueOf(int)": 6,
        "io.netty.buffer.ByteBufUtil:int utf8MaxBytes(java.lang.CharSequence)": 1,
        "io.netty.handler.codec.http.DefaultLastHttpContent:void <init>(io.netty.buffer.ByteBuf)": 1,
        "io.netty.handler.codec.http.HttpUtil:void setTransferEncodingChunked(io.netty.handler.codec.http.HttpMessage,boolean)": 1,
        "io.netty.buffer.ByteBufUtil:io.netty.buffer.ByteBuf writeUtf8(io.netty.buffer.ByteBufAllocator,java.lang.CharSequence)": 3,
        "io.netty.handler.codec.http.DefaultHttpHeaders:void <init>()": 5,
        "io.netty.handler.codec.http.HttpClientCodec:void <init>()": 2,
        "io.netty.handler.codec.http.DefaultFullHttpRequest:void <init>(io.netty.handler.codec.http.HttpVersion,io.netty.handler.codec.http.HttpMethod,java.lang.String)": 1,
        "io.netty.handler.codec.http.DefaultFullHttpRequest:void <init>(io.netty.handler.codec.http.HttpVersion,io.netty.handler.codec.http.HttpMethod,java.lang.String,io.netty.buffer.ByteBuf)": 1,
        "io.netty.handler.codec.http.HttpMethod:io.netty.handler.codec.http.HttpMethod valueOf(java.lang.String)": 2,
        "io.netty.handler.codec.http.HttpUtil:void setKeepAlive(io.netty.handler.codec.http.HttpMessage,boolean)": 1,
        "io.netty.bootstrap.ServerBootstrap:io.netty.bootstrap.ServerBootstrap childOption(io.netty.channel.ChannelOption,java.lang.Object)": 1,
        "io.netty.channel.nio.NioEventLoopGroup:void <init>()": 6,
        "io.netty.handler.codec.MessageToByteEncoder:void <init>()": 2,
        "io.netty.handler.codec.ByteToMessageDecoder:void <init>()": 1,
        "io.netty.channel.SimpleChannelInboundHandler:void <init>()": 4,
        "io.netty.bootstrap.Bootstrap:io.netty.channel.ChannelFuture connect(java.lang.String,int)": 1,
        "io.netty.handler.codec.LengthFieldPrepender:void <init>(int)": 1,
        "io.netty.channel.nio.NioEventLoopGroup:void <init>(int)": 2,
        "io.netty.buffer.Unpooled:io.netty.buffer.ByteBuf buffer()": 6,
        "io.netty.handler.codec.http.HttpServerCodec:void <init>()": 1
    },
    "io.netty:netty-all:4.1.22.Final": {
        "io.netty.buffer.Unpooled:io.netty.buffer.ByteBuf copiedBuffer(byte[])": 2,
        "io.netty.util.ReferenceCountUtil:boolean release(java.lang.Object)": 6,
        "io.netty.handler.codec.mqtt.MqttQoS:io.netty.handler.codec.mqtt.MqttQoS[] values()": 2,
        "io.netty.handler.codec.mqtt.MqttPublishMessage:void <init>(io.netty.handler.codec.mqtt.MqttFixedHeader,io.netty.handler.codec.mqtt.MqttPublishVariableHeader,io.netty.buffer.ByteBuf)": 3,
        "io.netty.handler.codec.mqtt.MqttQoS:io.netty.handler.codec.mqtt.MqttQoS valueOf(int)": 1,
        "io.netty.handler.codec.mqtt.MqttMessageType:io.netty.handler.codec.mqtt.MqttMessageType[] values()": 1,
        "io.netty.handler.codec.mqtt.MqttMessage:void <init>(io.netty.handler.codec.mqtt.MqttFixedHeader)": 1,
        "io.netty.handler.codec.mqtt.MqttMessage:void <init>(io.netty.handler.codec.mqtt.MqttFixedHeader,java.lang.Object)": 2,
        "io.netty.handler.codec.mqtt.MqttConnAckMessage:void <init>(io.netty.handler.codec.mqtt.MqttFixedHeader,io.netty.handler.codec.mqtt.MqttConnAckVariableHeader)": 1,
        "io.netty.handler.codec.mqtt.MqttUnsubAckMessage:void <init>(io.netty.handler.codec.mqtt.MqttFixedHeader,io.netty.handler.codec.mqtt.MqttMessageIdVariableHeader)": 1,
        "io.netty.handler.codec.mqtt.MqttPubAckMessage:void <init>(io.netty.handler.codec.mqtt.MqttFixedHeader,io.netty.handler.codec.mqtt.MqttMessageIdVariableHeader)": 2,
        "io.netty.buffer.Unpooled:io.netty.buffer.ByteBuf wrappedBuffer(byte[])": 1,
        "io.netty.handler.codec.mqtt.MqttSubAckMessage:void <init>(io.netty.handler.codec.mqtt.MqttFixedHeader,io.netty.handler.codec.mqtt.MqttMessageIdVariableHeader,io.netty.handler.codec.mqtt.MqttSubAckPayload)": 1,
        "io.netty.handler.codec.mqtt.MqttSubAckPayload:void <init>(java.lang.Iterable)": 1,
        "io.netty.handler.ssl.SslProvider:io.netty.handler.ssl.SslProvider[] values()": 1,
        "io.netty.handler.ssl.SslContextBuilder:io.netty.handler.ssl.SslContextBuilder forServer(java.security.PrivateKey,java.security.cert.X509Certificate[])": 1,
        "io.netty.util.AttributeKey:io.netty.util.AttributeKey valueOf(java.lang.String)": 5,
        "io.netty.handler.codec.MessageToMessageDecoder:void <init>()": 1,
        "io.netty.handler.codec.MessageToMessageEncoder:void <init>()": 1,
        "io.netty.handler.codec.http.websocketx.BinaryWebSocketFrame:void <init>()": 1,
        "io.netty.channel.ChannelInitializer:void <init>()": 1,
        "io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler:void <init>(java.lang.String,java.lang.String)": 2,
        "io.netty.handler.codec.http.HttpObjectAggregator:void <init>(int)": 2,
        "io.netty.handler.codec.http.HttpServerCodec:void <init>()": 1,
        "io.netty.handler.codec.http.HttpRequestDecoder:void <init>()": 1,
        "io.netty.handler.codec.http.HttpResponseEncoder:void <init>()": 1,
        "io.netty.channel.nio.NioEventLoopGroup:void <init>()": 2,
        "io.netty.channel.epoll.EpollEventLoopGroup:void <init>()": 2,
        "io.netty.handler.codec.mqtt.MqttDecoder:void <init>(int)": 1,
        "io.netty.handler.ssl.SslHandler:void <init>(javax.net.ssl.SSLEngine)": 1
    },
    "org.apache.ant:ant:1.8.2": {
        "org.apache.tools.ant.types.PropertySet:java.util.Properties getProperties()": 1
    },
    "org.hibernate:hibernate-core:4.3.1.Final": {
        "org.hibernate.boot.registry.StandardServiceRegistryBuilder:void <init>()": 2,
        "org.hibernate.cfg.Configuration:void <init>()": 2
    },
    "org.hibernate:hibernate-core:4.3.11.Final": {
        "org.hibernate.Hibernate:void initialize(java.lang.Object)": 94
    },
    "com.thoughtworks.xstream:xstream:1.4.8": {
        "com.thoughtworks.xstream.XStream:void <init>()": 2,
        "com.thoughtworks.xstream.converters.extended.NamedMapConverter:void <init>(com.thoughtworks.xstream.mapper.Mapper,java.lang.String,java.lang.String,java.lang.Class,java.lang.String,java.lang.Class)": 2,
        "com.thoughtworks.xstream.io.xml.PrettyPrintWriter:void <init>(java.io.Writer)": 1,
        "com.thoughtworks.xstream.XStream:void <init>(com.thoughtworks.xstream.io.HierarchicalStreamDriver)": 1
    },
    "org.apache.ant:ant:1.9.7": {
        "org.apache.tools.zip.ZipFile:void <init>(java.io.File)": 3,
        "org.apache.tools.zip.ZipFile:org.apache.tools.zip.ZipEntry getEntry(java.lang.String)": 1,
        "org.apache.tools.zip.ZipOutputStream:void <init>(java.io.OutputStream)": 1,
        "org.apache.tools.zip.ZipFile:void <init>(java.lang.String,java.lang.String)": 1
    },
    "com.alibaba:fastjson:1.2.67": {
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object)": 7,
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object,com.alibaba.fastjson.serializer.SerializerFeature[])": 1,
        "com.alibaba.fastjson.JSON:com.alibaba.fastjson.JSONObject parseObject(java.lang.String)": 1,
        "com.alibaba.fastjson.JSON:com.alibaba.fastjson.JSONArray parseArray(java.lang.String)": 1,
        "com.alibaba.fastjson.JSON:java.lang.Object parseObject(java.lang.String,java.lang.Class)": 1,
        "com.alibaba.fastjson.JSON:java.util.List parseArray(java.lang.String,java.lang.Class)": 1,
        "com.alibaba.fastjson.JSON:java.lang.String toJSONStringWithDateFormat(java.lang.Object,java.lang.String,com.alibaba.fastjson.serializer.SerializerFeature[])": 1
    },
    "org.apache.tika:tika-parsers:1.19.1": {
        "org.apache.tika.parser.pdf.PDFParser:void <init>()": 1
    },
    "io.netty:netty-all:4.1.14.Final": {
        "io.netty.channel.nio.NioEventLoopGroup:void <init>(int,java.util.concurrent.ThreadFactory)": 1,
        "io.netty.channel.SimpleChannelInboundHandler:void <init>()": 2,
        "io.netty.channel.ChannelInitializer:void <init>()": 2,
        "io.netty.handler.codec.LengthFieldBasedFrameDecoder:void <init>(int,int,int,int,int)": 1,
        "io.netty.util.ReferenceCountUtil:boolean release(java.lang.Object)": 2,
        "io.netty.buffer.ByteBufInputStream:void <init>(io.netty.buffer.ByteBuf,boolean)": 1,
        "io.netty.handler.codec.LengthFieldBasedFrameDecoder:java.lang.Object decode(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf)": 1,
        "io.netty.handler.codec.MessageToByteEncoder:void <init>()": 1,
        "io.netty.buffer.ByteBufOutputStream:void write(byte[])": 1,
        "io.netty.bootstrap.ServerBootstrap:io.netty.bootstrap.ServerBootstrap childOption(io.netty.channel.ChannelOption,java.lang.Object)": 3,
        "io.netty.channel.nio.NioEventLoopGroup:void <init>()": 2,
        "io.netty.util.NettyRuntime:int availableProcessors()": 1
    },
    "io.netty:netty-codec-http:4.1.14.Final": {
        "io.netty.handler.codec.http.multipart.HttpPostRequestDecoder:void <init>(io.netty.handler.codec.http.multipart.HttpDataFactory,io.netty.handler.codec.http.HttpRequest,java.nio.charset.Charset)": 1
    },
    "org.eclipse.californium:scandium:2.6.3": {
        "org.eclipse.californium.scandium.DTLSConnector:void destroy()": 1
    },
    "commons-fileupload:commons-fileupload:1.3.1": {
        "org.apache.commons.fileupload.servlet.ServletFileUpload:java.util.List parseRequest(javax.servlet.http.HttpServletRequest)": 2
    },
    "commons-fileupload:commons-fileupload:1.2.1": {
        "org.apache.commons.fileupload.servlet.ServletFileUpload:java.util.List parseRequest(javax.servlet.http.HttpServletRequest)": 2
    },
    "com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.5.0": {
        "com.fasterxml.jackson.dataformat.xml.XmlMapper:void <init>(javax.xml.stream.XMLInputFactory)": 1
    },
    "com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.4.4": {
        "com.fasterxml.jackson.dataformat.xml.XmlMapper:void <init>()": 2
    },
    "org.apache.commons:commons-compress:1.10": {
        "org.apache.commons.compress.archivers.ArchiveStreamFactory:org.apache.commons.compress.archivers.ArchiveInputStream createArchiveInputStream(java.lang.String,java.io.InputStream)": 1,
        "org.apache.commons.compress.utils.IOUtils:long copy(java.io.InputStream,java.io.OutputStream)": 2,
        "org.apache.commons.compress.compressors.CompressorStreamFactory:org.apache.commons.compress.compressors.CompressorInputStream createCompressorInputStream(java.io.InputStream)": 1
    },
    "com.alibaba:fastjson:1.2.57": {
        "com.alibaba.fastjson.JSON:java.lang.Object parseObject(java.lang.String,java.lang.Class)": 6,
        "com.alibaba.fastjson.JSON:com.alibaba.fastjson.JSONObject parseObject(java.lang.String)": 6,
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object)": 3
    },
    "com.thoughtworks.xstream:xstream:1.4.4": {
        "com.thoughtworks.xstream.XStream:void <init>(com.thoughtworks.xstream.io.HierarchicalStreamDriver)": 1
    },
    "org.bouncycastle:bcprov-jdk15on:1.52": {
        "org.bouncycastle.asn1.DERSequenceGenerator:void close()": 3,
        "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)": 6,
        "org.bouncycastle.crypto.params.ECPublicKeyParameters:void <init>(org.bouncycastle.math.ec.ECPoint,org.bouncycastle.crypto.params.ECDomainParameters)": 3,
        "org.bouncycastle.crypto.signers.ECDSASigner:boolean verifySignature(byte[],java.math.BigInteger,java.math.BigInteger)": 3,
        "org.bouncycastle.asn1.ASN1InputStream:org.bouncycastle.asn1.ASN1Primitive readObject()": 3,
        "org.bouncycastle.crypto.params.ECDomainParameters:void <init>(org.bouncycastle.math.ec.ECCurve,org.bouncycastle.math.ec.ECPoint,java.math.BigInteger,java.math.BigInteger)": 3,
        "org.bouncycastle.asn1.sec.SECNamedCurves:org.bouncycastle.asn1.x9.X9ECParameters getByName(java.lang.String)": 3
    },
    "cn.hutool:hutool-all:4.0.9": {
        "cn.hutool.core.io.FileUtil:byte[] readBytes(java.lang.String)": 1
    },
    "io.netty:netty-all:4.1.10.Final": {
        "io.netty.channel.SimpleChannelInboundHandler:void <init>()": 2,
        "io.netty.channel.ChannelInitializer:void <init>()": 2,
        "io.netty.handler.codec.protobuf.ProtobufEncoder:void <init>()": 2,
        "io.netty.handler.codec.protobuf.ProtobufVarint32LengthFieldPrepender:void <init>()": 2,
        "io.netty.handler.codec.protobuf.ProtobufDecoder:void <init>(com.google.protobuf.MessageLite)": 4,
        "io.netty.handler.codec.protobuf.ProtobufVarint32FrameDecoder:void <init>()": 2,
        "io.netty.util.concurrent.DefaultEventExecutorGroup:void <init>(int)": 1,
        "io.netty.channel.nio.NioEventLoopGroup:void <init>()": 3,
        "io.netty.channel.group.DefaultChannelGroup:void <init>(io.netty.util.concurrent.EventExecutor)": 1,
        "io.netty.bootstrap.Bootstrap:io.netty.channel.ChannelFuture connect(java.lang.String,int)": 1
    },
    "xalan:xalan:2.7.0": {
        "org.apache.xpath.XPathAPI:org.apache.xpath.objects.XObject eval(org.w3c.dom.Node,java.lang.String)": 1
    },
    "org.apache.pdfbox:pdfbox:2.0.6": {
        "org.apache.pdfbox.text.PDFTextStripper:java.lang.String getText(org.apache.pdfbox.pdmodel.PDDocument)": 7,
        "org.apache.pdfbox.pdfparser.PDFParser:void parse()": 4,
        "org.apache.pdfbox.pdmodel.PDDocument:void close()": 4,
        "org.apache.pdfbox.pdmodel.PDDocument:void save(java.io.File)": 3
    },
    "com.sparkjava:spark-core:2.4": {
        "spark.Spark:void staticFileLocation(java.lang.String)": 1
    },
    "org.mongodb:mongo-java-driver:3.12.1": {
        "com.mongodb.MongoClientOptions$Builder:void <init>()": 4,
        "com.mongodb.MongoClientOptions:com.mongodb.MongoClientOptions$Builder builder(com.mongodb.MongoClientOptions)": 9,
        "com.mongodb.MongoClient:void <init>(com.mongodb.ServerAddress,com.mongodb.MongoClientOptions)": 1,
        "com.mongodb.MongoClient:void <init>(com.mongodb.ServerAddress,java.util.List,com.mongodb.MongoClientOptions)": 1,
        "com.mongodb.MongoClient:void <init>(com.mongodb.ServerAddress,com.mongodb.MongoCredential,com.mongodb.MongoClientOptions)": 1,
        "com.mongodb.MongoClient:void <init>(java.util.List,com.mongodb.MongoClientOptions)": 1,
        "com.mongodb.MongoClient:void <init>(java.util.List,java.util.List,com.mongodb.MongoClientOptions)": 1,
        "com.mongodb.MongoClient:void <init>(java.util.List,com.mongodb.MongoCredential,com.mongodb.MongoClientOptions)": 1,
        "com.mongodb.MongoClient:void <init>(java.util.List,com.mongodb.MongoCredential,com.mongodb.MongoClientOptions,com.mongodb.MongoDriverInformation)": 1,
        "com.mongodb.MongoClient:void <init>(com.mongodb.ServerAddress,java.util.List,com.mongodb.MongoClientOptions,com.mongodb.MongoDriverInformation)": 1,
        "com.mongodb.MongoClient:void <init>(java.util.List,java.util.List,com.mongodb.MongoClientOptions,com.mongodb.MongoDriverInformation)": 1
    },
    "org.apache.tomcat.embed:tomcat-embed-core:9.0.36": {
        "org.apache.catalina.startup.Tomcat:org.apache.catalina.Wrapper addServlet(org.apache.catalina.Context,java.lang.String,javax.servlet.Servlet)": 1
    },
    "io.netty:netty-all:4.0.33.Final": {
        "io.netty.channel.group.DefaultChannelGroup:void <init>(java.lang.String,io.netty.util.concurrent.EventExecutor)": 8,
        "io.netty.handler.codec.MessageToMessageEncoder:void <init>()": 2,
        "io.netty.util.ReferenceCountUtil:java.lang.Object retain(java.lang.Object)": 2,
        "io.netty.handler.codec.MessageToMessageDecoder:void <init>()": 1,
        "io.netty.handler.codec.http.websocketx.TextWebSocketFrame:void <init>(java.lang.String)": 1,
        "io.netty.handler.codec.Delimiters:io.netty.buffer.ByteBuf[] lineDelimiter()": 1,
        "io.netty.handler.codec.string.StringEncoder:void <init>()": 1,
        "io.netty.handler.codec.string.StringDecoder:void <init>()": 1,
        "io.netty.handler.codec.DelimiterBasedFrameDecoder:void <init>(int,io.netty.buffer.ByteBuf[])": 1,
        "io.netty.channel.nio.NioEventLoopGroup:void <init>(int)": 6,
        "io.netty.util.AttributeKey:io.netty.util.AttributeKey valueOf(java.lang.String)": 1,
        "io.netty.handler.codec.string.StringDecoder:void <init>(java.nio.charset.Charset)": 1,
        "io.netty.handler.codec.string.StringEncoder:void <init>(java.nio.charset.Charset)": 1,
        "io.netty.handler.codec.http.HttpObjectAggregator:void <init>(int)": 2,
        "io.netty.handler.codec.http.HttpRequestDecoder:void <init>()": 2,
        "io.netty.handler.codec.http.HttpResponseEncoder:void <init>()": 2,
        "io.netty.handler.codec.http.websocketx.PingWebSocketFrame:void <init>()": 1,
        "io.netty.util.ReferenceCountUtil:boolean release(java.lang.Object)": 2,
        "io.netty.handler.codec.http.websocketx.WebSocketServerHandshakerFactory:io.netty.channel.ChannelFuture sendUnsupportedVersionResponse(io.netty.channel.Channel)": 1,
        "io.netty.handler.codec.http.DefaultFullHttpResponse:void <init>(io.netty.handler.codec.http.HttpVersion,io.netty.handler.codec.http.HttpResponseStatus)": 5,
        "io.netty.buffer.Unpooled:io.netty.buffer.ByteBuf copiedBuffer(java.lang.CharSequence,java.nio.charset.Charset)": 1,
        "io.netty.handler.codec.http.HttpHeaders:void setContentLength(io.netty.handler.codec.http.HttpMessage,long)": 1,
        "io.netty.channel.nio.NioEventLoopGroup:void <init>()": 2,
        "io.netty.handler.codec.http.DefaultFullHttpResponse:void <init>(io.netty.handler.codec.http.HttpVersion,io.netty.handler.codec.http.HttpResponseStatus,io.netty.buffer.ByteBuf)": 1,
        "io.netty.buffer.Unpooled:io.netty.buffer.ByteBuf wrappedBuffer(byte[])": 1,
        "io.netty.bootstrap.ServerBootstrap:io.netty.bootstrap.ServerBootstrap childOption(io.netty.channel.ChannelOption,java.lang.Object)": 2
    },
    "org.apache.activemq:activemq-all:5.6.0": {
        "org.slf4j.LoggerFactory:org.slf4j.Logger getLogger(java.lang.Class)": 13
    },
    "com.thoughtworks.xstream:xstream:1.2.2": {
        "com.thoughtworks.xstream.XStream:void <init>()": 1,
        "com.thoughtworks.xstream.XStream:java.lang.String toXML(java.lang.Object)": 1
    },
    "org.bouncycastle:bcprov-jdk15on:1.58": {
        "org.bouncycastle.asn1.ASN1InputStream:org.bouncycastle.asn1.ASN1Primitive readObject()": 3,
        "org.bouncycastle.asn1.pkcs.RSAPrivateKeyStructure:org.bouncycastle.asn1.pkcs.RSAPrivateKeyStructure getInstance(java.lang.Object)": 1,
        "org.bouncycastle.util.encoders.Base64:byte[] encode(byte[])": 1,
        "org.bouncycastle.util.encoders.Hex:java.lang.String toHexString(byte[])": 17,
        "org.bouncycastle.util.encoders.Base64:byte[] decode(java.lang.String)": 1,
        "org.bouncycastle.jce.spec.ECPublicKeySpec:void <init>(org.bouncycastle.math.ec.ECPoint,org.bouncycastle.jce.spec.ECParameterSpec)": 1,
        "org.bouncycastle.crypto.params.ECPublicKeyParameters:void <init>(org.bouncycastle.math.ec.ECPoint,org.bouncycastle.crypto.params.ECDomainParameters)": 2,
        "org.bouncycastle.crypto.signers.ECDSASigner:boolean verifySignature(byte[],java.math.BigInteger,java.math.BigInteger)": 1,
        "org.bouncycastle.math.ec.ECAlgorithms:org.bouncycastle.math.ec.ECPoint sumOfTwoMultiplies(org.bouncycastle.math.ec.ECPoint,java.math.BigInteger,org.bouncycastle.math.ec.ECPoint,java.math.BigInteger)": 1,
        "org.bouncycastle.jce.spec.ECParameterSpec:void <init>(org.bouncycastle.math.ec.ECCurve,org.bouncycastle.math.ec.ECPoint,java.math.BigInteger,java.math.BigInteger)": 1,
        "org.bouncycastle.crypto.params.ECDomainParameters:void <init>(org.bouncycastle.math.ec.ECCurve,org.bouncycastle.math.ec.ECPoint,java.math.BigInteger,java.math.BigInteger)": 1,
        "org.bouncycastle.asn1.sec.SECNamedCurves:org.bouncycastle.asn1.x9.X9ECParameters getByName(java.lang.String)": 1,
        "org.bouncycastle.util.encoders.Hex:byte[] decode(java.lang.String)": 3
    },
    "org.hibernate:hibernate-core:5.4.11.Final": {
        "org.hibernate.criterion.Restrictions:org.hibernate.criterion.Criterion ilike(java.lang.String,java.lang.Object)": 3,
        "org.hibernate.criterion.Restrictions:org.hibernate.criterion.Criterion in(java.lang.String,java.util.Collection)": 3,
        "org.hibernate.Hibernate:void initialize(java.lang.Object)": 1
    },
    "org.apache.commons:commons-compress:1.14": {
        "org.apache.commons.compress.compressors.gzip.GzipCompressorInputStream:void <init>(java.io.InputStream)": 2,
        "org.apache.commons.compress.archivers.zip.ZipFile:java.io.InputStream getInputStream(org.apache.commons.compress.archivers.zip.ZipArchiveEntry)": 2,
        "org.apache.commons.compress.utils.IOUtils:long copy(java.io.InputStream,java.io.OutputStream)": 6,
        "org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream:void <init>(java.io.InputStream)": 1
    },
    "org.bouncycastle:bcprov-jdk15on:1.49": {
        "org.bouncycastle.util.encoders.Base64:byte[] decode(java.lang.String)": 1
    },
    "org.apache.tika:tika-core:1.13": {
        "org.apache.tika.parser.AutoDetectParser:void parse(java.io.InputStream,org.xml.sax.ContentHandler,org.apache.tika.metadata.Metadata)": 1
    },
    "org.apache.pdfbox:pdfbox:2.0.2": {
        "org.apache.pdfbox.rendering.PDFRenderer:java.awt.image.BufferedImage renderImageWithDPI(int,float,org.apache.pdfbox.rendering.ImageType)": 1,
        "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDDocument load(java.io.File)": 1,
        "org.apache.pdfbox.multipdf.PDFMergerUtility:void mergeDocuments(org.apache.pdfbox.io.MemoryUsageSetting)": 1
    },
    "commons-fileupload:commons-fileupload:1.3": {
        "org.apache.commons.fileupload.servlet.ServletFileUpload:java.util.List parseRequest(javax.servlet.http.HttpServletRequest)": 1
    },
    "org.bouncycastle:bcprov-jdk15on:1.50": {
        "org.bouncycastle.asn1.x500.X500Name:void <init>(java.lang.String)": 2,
        "org.bouncycastle.asn1.x509.SubjectPublicKeyInfo:org.bouncycastle.asn1.x509.SubjectPublicKeyInfo getInstance(java.lang.Object)": 1,
        "org.bouncycastle.util.encoders.Hex:byte[] encode(byte[])": 1,
        "org.bouncycastle.util.encoders.Hex:byte[] decode(java.lang.String)": 1,
        "org.bouncycastle.x509.X509V3CertificateGenerator:java.security.cert.X509Certificate generateX509Certificate(java.security.PrivateKey)": 1,
        "org.bouncycastle.x509.X509V3CertificateGenerator:void <init>()": 1
    },
    "io.netty:netty-all:4.1.12.Final": {
        "io.netty.channel.ChannelInitializer:void <init>()": 2,
        "io.netty.handler.codec.LengthFieldBasedFrameDecoder:void <init>(int,int,int,int,int)": 2,
        "io.netty.handler.codec.LengthFieldPrepender:void <init>(int,boolean)": 2,
        "io.netty.bootstrap.Bootstrap:io.netty.channel.ChannelFuture connect(java.lang.String,int)": 1,
        "io.netty.channel.nio.NioEventLoopGroup:void <init>()": 2,
        "io.netty.channel.ChannelInboundHandlerAdapter:void channelUnregistered(io.netty.channel.ChannelHandlerContext)": 2,
        "io.netty.channel.ChannelInboundHandlerAdapter:void channelActive(io.netty.channel.ChannelHandlerContext)": 1,
        "io.netty.util.ReferenceCountUtil:boolean release(java.lang.Object)": 4,
        "io.netty.buffer.Unpooled:io.netty.buffer.ByteBuf buffer()": 4,
        "io.netty.channel.nio.NioEventLoopGroup:void <init>(int)": 1,
        "io.netty.channel.ChannelInboundHandlerAdapter:void channelRegistered(io.netty.channel.ChannelHandlerContext)": 1
    },
    "io.vertx:vertx-core:3.3.0": {
        "io.vertx.core.CompositeFuture:io.vertx.core.CompositeFuture all(java.util.List)": 4,
        "io.vertx.core.Future:io.vertx.core.Future succeededFuture()": 1,
        "io.vertx.core.CompositeFuture:io.vertx.core.CompositeFuture all(io.vertx.core.Future,io.vertx.core.Future,io.vertx.core.Future,io.vertx.core.Future,io.vertx.core.Future,io.vertx.core.Future)": 1
    },
    "org.apache.commons:commons-compress:1.11": {
        "org.apache.commons.compress.archivers.tar.TarArchiveInputStream:org.apache.commons.compress.archivers.tar.TarArchiveEntry getNextTarEntry()": 2,
        "org.apache.commons.compress.compressors.gzip.GzipCompressorInputStream:void <init>(java.io.InputStream)": 1
    },
    "io.netty:netty-all:4.1.39.Final": {
        "io.netty.util.concurrent.FastThreadLocal:void removeAll()": 2,
        "io.netty.channel.SimpleChannelInboundHandler:void <init>()": 1,
        "io.netty.handler.codec.http.websocketx.TextWebSocketFrame:void <init>(java.lang.String)": 7,
        "io.netty.util.AttributeKey:io.netty.util.AttributeKey valueOf(java.lang.String)": 2,
        "io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler:void <init>(java.lang.String,java.lang.String,boolean)": 1,
        "io.netty.handler.codec.http.HttpObjectAggregator:void <init>(int)": 1,
        "io.netty.handler.codec.http.HttpServerCodec:void <init>()": 1,
        "io.netty.util.concurrent.DefaultEventExecutorGroup:void <init>(int,java.util.concurrent.ThreadFactory)": 1,
        "io.netty.channel.epoll.Epoll:boolean isAvailable()": 1,
        "io.netty.channel.epoll.EpollEventLoopGroup:void <init>(int,java.util.concurrent.ThreadFactory)": 2,
        "io.netty.channel.nio.NioEventLoopGroup:void <init>(int)": 2,
        "io.netty.channel.nio.NioEventLoopGroup:void <init>()": 2
    },
    "org.apache.ant:ant:1.8.3": {
        "org.apache.tools.ant.types.Path:void setPath(java.lang.String)": 4,
        "org.apache.tools.ant.Project:void addReference(java.lang.String,java.lang.Object)": 6,
        "org.apache.tools.ant.Project:void setBaseDir(java.io.File)": 1,
        "org.apache.tools.ant.Project:void init()": 1,
        "org.apache.tools.ant.ProjectHelper:void configureProject(org.apache.tools.ant.Project,java.io.File)": 1
    },
    "org.codehaus.plexus:plexus-utils:3.0.10": {
        "org.codehaus.plexus.util.StringUtils:java.lang.String join(java.lang.Object[],java.lang.String)": 1,
        "org.codehaus.plexus.util.cli.CommandLineUtils:int executeCommandLine(org.codehaus.plexus.util.cli.Commandline,org.codehaus.plexus.util.cli.StreamConsumer,org.codehaus.plexus.util.cli.StreamConsumer,int)": 1
    },
    "org.hibernate:hibernate-core:5.4.7.Final": {
        "org.hibernate.cfg.Configuration:void <init>()": 1,
        "org.hibernate.boot.registry.StandardServiceRegistryBuilder:void <init>()": 1
    },
    "io.vertx:vertx-core:3.4.1": {
        "io.vertx.core.Vertx:io.vertx.core.Vertx vertx()": 1
    },
    "com.alibaba:fastjson:1.2.61": {
        "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object)": 3
    },
    "org.springframework:spring-web:4.3.6.RELEASE": {
        "org.springframework.web.filter.ShallowEtagHeaderFilter:void doFilterInternal(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)": 2
    },
    "commons-fileupload:commons-fileupload:1.2.2": {
        "org.apache.commons.fileupload.servlet.ServletFileUpload:java.util.List parseRequest(javax.servlet.http.HttpServletRequest)": 2
    },
    "com.thoughtworks.xstream:xstream:1.4.18": {
        "com.thoughtworks.xstream.XStream:void <init>()": 1
    },
    "org.apache.kafka:kafka-clients:2.6.0": {
        "org.apache.kafka.clients.producer.KafkaProducer:void <init>(java.util.Properties)": 1,
        "org.apache.kafka.clients.producer.ProducerRecord:void <init>(java.lang.String,java.lang.Object,java.lang.Object)": 1
    },
    "org.apache.httpcomponents:httpclient:4.2.5": {
        "org.apache.http.client.utils.URIUtils:org.apache.http.HttpHost extractHost(java.net.URI)": 2
    },
    "com.alibaba:fastjson:1.2.74": {
        "com.alibaba.fastjson.JSON:java.lang.Object parse(java.lang.String)": 1,
        "com.alibaba.fastjson.JSON:byte[] toJSONBytes(java.lang.Object,com.alibaba.fastjson.serializer.SerializerFeature[])": 2,
        "com.alibaba.fastjson.JSON:java.lang.Object parseObject(byte[],java.lang.reflect.Type,com.alibaba.fastjson.parser.Feature[])": 1
    },
    "io.netty:netty-all:4.0.36.Final": {
        "io.netty.channel.ChannelInboundHandlerAdapter:void channelActive(io.netty.channel.ChannelHandlerContext)": 1,
        "io.netty.channel.ChannelInboundHandlerAdapter:void channelInactive(io.netty.channel.ChannelHandlerContext)": 1,
        "io.netty.handler.codec.ByteToMessageCodec:void <init>()": 1,
        "io.netty.handler.codec.LengthFieldBasedFrameDecoder:void <init>(int,int,int,int,int,boolean)": 1,
        "io.netty.bootstrap.ServerBootstrap:io.netty.bootstrap.ServerBootstrap childOption(io.netty.channel.ChannelOption,java.lang.Object)": 1,
        "io.netty.channel.nio.NioEventLoopGroup:void <init>()": 2
    },
    "com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.6.1": {
        "com.fasterxml.jackson.dataformat.xml.XmlMapper:void <init>(com.fasterxml.jackson.dataformat.xml.JacksonXmlModule)": 1
    },
    "org.apache.pdfbox:pdfbox:2.0.12": {
        "org.apache.pdfbox.rendering.PDFRenderer:java.awt.image.BufferedImage renderImageWithDPI(int,float,org.apache.pdfbox.rendering.ImageType)": 2,
        "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDDocument load(java.io.File)": 4,
        "org.apache.pdfbox.multipdf.Overlay:org.apache.pdfbox.pdmodel.PDDocument overlay(java.util.Map)": 3,
        "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDDocument load(java.io.InputStream)": 1
    },
    "org.apache.ant:ant:1.10.2": {
        "org.apache.tools.ant.Project:void <init>()": 1
    },
    "io.netty:netty-all:4.1.13.Final": {
        "io.netty.handler.codec.mqtt.MqttPublishMessage:void <init>(io.netty.handler.codec.mqtt.MqttFixedHeader,io.netty.handler.codec.mqtt.MqttPublishVariableHeader,io.netty.buffer.ByteBuf)": 3,
        "io.netty.buffer.Unpooled:io.netty.buffer.ByteBuf buffer()": 1,
        "io.netty.handler.codec.mqtt.MqttConnectMessage:void <init>(io.netty.handler.codec.mqtt.MqttFixedHeader,io.netty.handler.codec.mqtt.MqttConnectVariableHeader,io.netty.handler.codec.mqtt.MqttConnectPayload)": 2,
        "io.netty.handler.codec.mqtt.MqttSubscribeMessage:void <init>(io.netty.handler.codec.mqtt.MqttFixedHeader,io.netty.handler.codec.mqtt.MqttMessageIdVariableHeader,io.netty.handler.codec.mqtt.MqttSubscribePayload)": 2,
        "io.netty.handler.codec.mqtt.MqttUnsubscribeMessage:void <init>(io.netty.handler.codec.mqtt.MqttFixedHeader,io.netty.handler.codec.mqtt.MqttMessageIdVariableHeader,io.netty.handler.codec.mqtt.MqttUnsubscribePayload)": 2,
        "io.netty.handler.codec.mqtt.MqttConnAckMessage:void <init>(io.netty.handler.codec.mqtt.MqttFixedHeader,io.netty.handler.codec.mqtt.MqttConnAckVariableHeader)": 3,
        "io.netty.handler.codec.mqtt.MqttMessage:void <init>(io.netty.handler.codec.mqtt.MqttFixedHeader,java.lang.Object,java.lang.Object)": 8,
        "io.netty.handler.codec.mqtt.MqttConnectVariableHeader:java.lang.String toString()": 2,
        "io.netty.handler.codec.mqtt.MqttPublishVariableHeader:java.lang.String toString()": 2,
        "io.netty.handler.codec.mqtt.MqttFixedHeader:java.lang.String toString()": 3,
        "io.netty.handler.codec.mqtt.MqttMessageIdVariableHeader:java.lang.String toString()": 2,
        "io.netty.handler.codec.mqtt.MqttTopicSubscription:java.lang.String toString()": 2,
        "io.netty.handler.codec.mqtt.MqttConnectPayload:java.lang.String toString()": 2,
        "io.netty.handler.codec.mqtt.MqttSubAckPayload:java.lang.String toString()": 2,
        "io.netty.handler.codec.mqtt.MqttSubscribePayload:java.lang.String toString()": 2,
        "io.netty.handler.codec.mqtt.MqttConnAckVariableHeader:java.lang.String toString()": 2,
        "io.netty.handler.codec.mqtt.MqttUnsubscribePayload:java.lang.String toString()": 2,
        "io.netty.handler.codec.mqtt.MqttMessage:java.lang.String toString()": 2,
        "io.netty.util.internal.StringUtil:java.lang.String simpleClassName(java.lang.Object)": 11,
        "io.netty.handler.codec.mqtt.MqttMessageType:io.netty.handler.codec.mqtt.MqttMessageType[] values()": 7,
        "io.netty.handler.codec.mqtt.MqttQoS:io.netty.handler.codec.mqtt.MqttQoS[] values()": 2,
        "io.netty.handler.codec.mqtt.MqttPublishMessage:io.netty.handler.codec.mqtt.MqttPublishMessage replace(io.netty.buffer.ByteBuf)": 4,
        "io.netty.handler.codec.mqtt.MqttPublishMessage:io.netty.handler.codec.mqtt.MqttPublishMessage touch(java.lang.Object)": 2,
        "io.netty.handler.codec.mqtt.MqttPublishMessage:io.netty.handler.codec.mqtt.MqttPublishMessage touch()": 2,
        "io.netty.handler.codec.mqtt.MqttPublishMessage:io.netty.handler.codec.mqtt.MqttPublishMessage retain(int)": 2,
        "io.netty.handler.codec.mqtt.MqttPublishMessage:io.netty.handler.codec.mqtt.MqttPublishMessage retain()": 2,
        "io.netty.handler.codec.mqtt.MqttPublishMessage:io.netty.handler.codec.mqtt.MqttPublishMessage retainedDuplicate()": 1,
        "io.netty.handler.codec.mqtt.MqttPublishMessage:io.netty.handler.codec.mqtt.MqttPublishMessage duplicate()": 1,
        "io.netty.handler.codec.mqtt.MqttPublishMessage:io.netty.handler.codec.mqtt.MqttPublishMessage copy()": 1,
        "io.netty.handler.codec.mqtt.MqttConnectReturnCode:void <clinit>()": 5,
        "io.netty.handler.codec.mqtt.MqttConnectReturnCode:io.netty.handler.codec.mqtt.MqttConnectReturnCode[] values()": 1,
        "io.netty.handler.codec.mqtt.MqttMessage:void <init>(io.netty.handler.codec.mqtt.MqttFixedHeader,java.lang.Object)": 3,
        "io.netty.handler.codec.mqtt.MqttVersion:io.netty.handler.codec.mqtt.MqttVersion[] values()": 1,
        "io.netty.handler.codec.mqtt.MqttMessageFactory$1:void <clinit>()": 1,
        "io.netty.handler.codec.mqtt.MqttMessage:void <init>(io.netty.handler.codec.mqtt.MqttFixedHeader)": 2,
        "io.netty.handler.codec.mqtt.MqttPubAckMessage:void <init>(io.netty.handler.codec.mqtt.MqttFixedHeader,io.netty.handler.codec.mqtt.MqttMessageIdVariableHeader)": 2,
        "io.netty.handler.codec.mqtt.MqttUnsubAckMessage:void <init>(io.netty.handler.codec.mqtt.MqttFixedHeader,io.netty.handler.codec.mqtt.MqttMessageIdVariableHeader)": 1,
        "io.netty.handler.codec.mqtt.MqttSubAckMessage:void <init>(io.netty.handler.codec.mqtt.MqttFixedHeader,io.netty.handler.codec.mqtt.MqttMessageIdVariableHeader,io.netty.handler.codec.mqtt.MqttSubAckPayload)": 1,
        "io.netty.handler.codec.DecoderResult:io.netty.handler.codec.DecoderResult failure(java.lang.Throwable)": 1,
        "io.netty.handler.codec.mqtt.MqttCodecUtil$1:void <clinit>()": 2,
        "io.netty.handler.codec.mqtt.MqttDecoder$DecoderState:io.netty.handler.codec.mqtt.MqttDecoder$DecoderState[] values()": 1,
        "io.netty.handler.codec.mqtt.MqttDecoder:void <init>(int)": 1,
        "io.netty.handler.codec.ReplayingDecoder:void <init>(java.lang.Object)": 1,
        "io.netty.handler.codec.mqtt.MqttDecoder$1:void <clinit>()": 3,
        "io.netty.handler.codec.ReplayingDecoder:void checkpoint(java.lang.Object)": 4,
        "io.netty.handler.codec.mqtt.MqttDecoder:io.netty.handler.codec.mqtt.MqttMessage invalidMessage(java.lang.Throwable)": 3,
        "io.netty.handler.codec.mqtt.MqttDecoder:io.netty.handler.codec.mqtt.MqttFixedHeader decodeFixedHeader(io.netty.buffer.ByteBuf)": 1,
        "io.netty.handler.codec.mqtt.MqttDecoder:io.netty.handler.codec.mqtt.MqttDecoder$Result decodeVariableHeader(io.netty.buffer.ByteBuf,io.netty.handler.codec.mqtt.MqttFixedHeader)": 1,
        "io.netty.handler.codec.mqtt.MqttDecoder:io.netty.handler.codec.mqtt.MqttDecoder$Result decodePayload(io.netty.buffer.ByteBuf,io.netty.handler.codec.mqtt.MqttMessageType,int,java.lang.Object)": 1,
        "io.netty.handler.codec.mqtt.MqttMessageFactory:io.netty.handler.codec.mqtt.MqttMessage newMessage(io.netty.handler.codec.mqtt.MqttFixedHeader,java.lang.Object,java.lang.Object)": 1,
        "io.netty.handler.codec.mqtt.MqttMessageFactory:io.netty.handler.codec.mqtt.MqttMessage newInvalidMessage(java.lang.Throwable)": 1,
        "io.netty.handler.codec.mqtt.MqttMessageType:io.netty.handler.codec.mqtt.MqttMessageType valueOf(int)": 1,
        "io.netty.handler.codec.mqtt.MqttQoS:io.netty.handler.codec.mqtt.MqttQoS valueOf(int)": 2,
        "io.netty.handler.codec.mqtt.MqttCodecUtil:io.netty.handler.codec.mqtt.MqttFixedHeader resetUnusedFields(io.netty.handler.codec.mqtt.MqttFixedHeader)": 1,
        "io.netty.handler.codec.mqtt.MqttCodecUtil:io.netty.handler.codec.mqtt.MqttFixedHeader validateFixedHeader(io.netty.handler.codec.mqtt.MqttFixedHeader)": 1,
        "io.netty.handler.codec.mqtt.MqttDecoder:io.netty.handler.codec.mqtt.MqttDecoder$Result decodeConnectionVariableHeader(io.netty.buffer.ByteBuf)": 1,
        "io.netty.handler.codec.mqtt.MqttDecoder:io.netty.handler.codec.mqtt.MqttDecoder$Result decodeConnAckVariableHeader(io.netty.buffer.ByteBuf)": 1,
        "io.netty.handler.codec.mqtt.MqttDecoder:io.netty.handler.codec.mqtt.MqttDecoder$Result decodeMessageIdVariableHeader(io.netty.buffer.ByteBuf)": 1,
        "io.netty.handler.codec.mqtt.MqttDecoder:io.netty.handler.codec.mqtt.MqttDecoder$Result decodePublishVariableHeader(io.netty.buffer.ByteBuf,io.netty.handler.codec.mqtt.MqttFixedHeader)": 1,
        "io.netty.handler.codec.mqtt.MqttDecoder:io.netty.handler.codec.mqtt.MqttDecoder$Result decodeString(io.netty.buffer.ByteBuf)": 6,
        "io.netty.handler.codec.mqtt.MqttVersion:io.netty.handler.codec.mqtt.MqttVersion fromProtocolNameAndLevel(java.lang.String,byte)": 3,
        "io.netty.handler.codec.mqtt.MqttDecoder:io.netty.handler.codec.mqtt.MqttDecoder$Result decodeMsbLsb(io.netty.buffer.ByteBuf)": 4,
        "io.netty.handler.codec.mqtt.MqttConnectReturnCode:io.netty.handler.codec.mqtt.MqttConnectReturnCode valueOf(byte)": 1,
        "io.netty.handler.codec.mqtt.MqttDecoder:io.netty.handler.codec.mqtt.MqttDecoder$Result decodeMessageId(io.netty.buffer.ByteBuf)": 2,
        "io.netty.handler.codec.mqtt.MqttDecoder:io.netty.handler.codec.mqtt.MqttDecoder$Result decodeConnectionPayload(io.netty.buffer.ByteBuf,io.netty.handler.codec.mqtt.MqttConnectVariableHeader)": 1,
        "io.netty.handler.codec.mqtt.MqttDecoder:io.netty.handler.codec.mqtt.MqttDecoder$Result decodeSubscribePayload(io.netty.buffer.ByteBuf,int)": 1,
        "io.netty.handler.codec.mqtt.MqttDecoder:io.netty.handler.codec.mqtt.MqttDecoder$Result decodeSubackPayload(io.netty.buffer.ByteBuf,int)": 1,
        "io.netty.handler.codec.mqtt.MqttDecoder:io.netty.handler.codec.mqtt.MqttDecoder$Result decodeUnsubscribePayload(io.netty.buffer.ByteBuf,int)": 1,
        "io.netty.handler.codec.mqtt.MqttDecoder:io.netty.handler.codec.mqtt.MqttDecoder$Result decodePublishPayload(io.netty.buffer.ByteBuf,int)": 1,
        "io.netty.handler.codec.mqtt.MqttDecoder:io.netty.handler.codec.mqtt.MqttDecoder$Result decodeString(io.netty.buffer.ByteBuf,int,int)": 2,
        "io.netty.handler.codec.mqtt.MqttDecoder:io.netty.handler.codec.mqtt.MqttDecoder$Result decodeByteArray(io.netty.buffer.ByteBuf)": 2,
        "io.netty.handler.codec.mqtt.MqttSubAckPayload:void <init>(java.lang.Iterable)": 1,
        "io.netty.handler.codec.mqtt.MqttDecoder:io.netty.handler.codec.mqtt.MqttDecoder$Result decodeMsbLsb(io.netty.buffer.ByteBuf,int,int)": 1,
        "io.netty.handler.codec.MessageToMessageEncoder:void <init>()": 1,
        "io.netty.handler.codec.mqtt.MqttEncoder:void <clinit>()": 20,
        "io.netty.handler.codec.mqtt.MqttEncoder:io.netty.buffer.ByteBuf doEncode(io.netty.buffer.ByteBufAllocator,io.netty.handler.codec.mqtt.MqttMessage)": 1,
        "io.netty.handler.codec.mqtt.MqttEncoder$1:void <clinit>()": 1,
        "io.netty.handler.codec.mqtt.MqttEncoder:io.netty.buffer.ByteBuf encodeConnectMessage(io.netty.buffer.ByteBufAllocator,io.netty.handler.codec.mqtt.MqttConnectMessage)": 1,
        "io.netty.handler.codec.mqtt.MqttEncoder:io.netty.buffer.ByteBuf encodeConnAckMessage(io.netty.buffer.ByteBufAllocator,io.netty.handler.codec.mqtt.MqttConnAckMessage)": 1,
        "io.netty.handler.codec.mqtt.MqttEncoder:io.netty.buffer.ByteBuf encodePublishMessage(io.netty.buffer.ByteBufAllocator,io.netty.handler.codec.mqtt.MqttPublishMessage)": 1,
        "io.netty.handler.codec.mqtt.MqttEncoder:io.netty.buffer.ByteBuf encodeSubscribeMessage(io.netty.buffer.ByteBufAllocator,io.netty.handler.codec.mqtt.MqttSubscribeMessage)": 1,
        "io.netty.handler.codec.mqtt.MqttEncoder:io.netty.buffer.ByteBuf encodeUnsubscribeMessage(io.netty.buffer.ByteBufAllocator,io.netty.handler.codec.mqtt.MqttUnsubscribeMessage)": 1,
        "io.netty.handler.codec.mqtt.MqttEncoder:io.netty.buffer.ByteBuf encodeSubAckMessage(io.netty.buffer.ByteBufAllocator,io.netty.handler.codec.mqtt.MqttSubAckMessage)": 1,
        "io.netty.handler.codec.mqtt.MqttEncoder:io.netty.buffer.ByteBuf encodeMessageWithOnlySingleByteFixedHeaderAndMessageId(io.netty.buffer.ByteBufAllocator,io.netty.handler.codec.mqtt.MqttMessage)": 1,
        "io.netty.handler.codec.mqtt.MqttEncoder:io.netty.buffer.ByteBuf encodeMessageWithOnlySingleByteFixedHeader(io.netty.buffer.ByteBufAllocator,io.netty.handler.codec.mqtt.MqttMessage)": 1,
        "io.netty.handler.codec.mqtt.MqttEncoder:void writeVariableLengthInt(io.netty.buffer.ByteBuf,int)": 6,
        "io.netty.handler.codec.mqtt.MqttEncoder:void encode(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.mqtt.MqttMessage,java.util.List)": 1,
        "io.netty.handler.codec.mqtt.MqttEncoder:void <init>()": 1,
        "io.netty.channel.ChannelInitializer:void <init>()": 1,
        "io.netty.handler.codec.mqtt.MqttDecoder:void <init>()": 1,
        "io.netty.channel.nio.NioEventLoopGroup:void <init>()": 4,
        "io.netty.util.AttributeKey:io.netty.util.AttributeKey valueOf(java.lang.String)": 2
    },
    "io.netty:netty-all:4.1.9.Final": {
        "io.netty.channel.SimpleChannelInboundHandler:void <init>()": 2,
        "io.netty.channel.ChannelInitializer:void <init>()": 2,
        "io.netty.channel.nio.NioEventLoopGroup:void <init>(int,java.util.concurrent.ThreadFactory)": 3,
        "io.netty.handler.codec.MessageToMessageEncoder:void <init>()": 2,
        "io.netty.handler.codec.ByteToMessageDecoder:void <init>()": 2,
        "io.netty.buffer.Unpooled:io.netty.buffer.ByteBuf buffer(int)": 2,
        "io.netty.buffer.Unpooled:io.netty.buffer.ByteBuf wrappedBuffer(byte[][])": 2,
        "io.netty.channel.epoll.EpollEventLoopGroup:void <init>(int,java.util.concurrent.ThreadFactory)": 2,
        "io.netty.channel.epoll.Epoll:boolean isAvailable()": 1
    },
    "io.netty:netty-all:4.0.41.Final": {
        "io.netty.channel.SimpleChannelInboundHandler:void <init>()": 3,
        "io.netty.handler.codec.socks.SocksCmdResponse:void <init>(io.netty.handler.codec.socks.SocksCmdStatus,io.netty.handler.codec.socks.SocksAddressType)": 2,
        "io.netty.buffer.Unpooled:io.netty.buffer.ByteBuf buffer()": 2,
        "io.netty.buffer.Unpooled:io.netty.buffer.ByteBuf wrappedBuffer(byte[])": 4,
        "io.netty.util.ReferenceCountUtil:boolean release(java.lang.Object)": 6,
        "io.netty.handler.codec.socks.SocksRequestType:io.netty.handler.codec.socks.SocksRequestType[] values()": 1,
        "io.netty.handler.codec.socks.SocksCmdRequestDecoder:void <init>()": 2,
        "io.netty.handler.codec.socks.SocksMessageEncoder:void <init>()": 1,
        "io.netty.channel.ChannelInitializer:void <init>()": 3,
        "io.netty.handler.codec.socks.SocksInitRequestDecoder:void <init>()": 1,
        "io.netty.handler.traffic.GlobalTrafficShapingHandler:void <init>(java.util.concurrent.ScheduledExecutorService,long)": 1,
        "io.netty.channel.nio.NioEventLoopGroup:void <init>()": 2,
        "io.netty.channel.nio.NioEventLoopGroup:void <init>(int)": 2
    },
    "io.netty:netty-all:4.1.5.Final": {
        "io.netty.channel.SimpleChannelInboundHandler:void <init>()": 1,
        "io.netty.buffer.Unpooled:io.netty.buffer.ByteBuf wrappedBuffer(byte[])": 2,
        "io.netty.channel.ChannelInitializer:void <init>()": 2,
        "io.netty.bootstrap.Bootstrap:io.netty.channel.ChannelFuture connect(java.net.InetAddress,int)": 1,
        "io.netty.buffer.Unpooled:io.netty.buffer.ByteBuf buffer()": 1,
        "io.netty.channel.nio.NioEventLoopGroup:void <init>()": 1,
        "io.netty.channel.nio.NioEventLoopGroup:void <init>(int)": 1
    },
    "org.apache.tika:tika-core:1.19": {
        "org.apache.tika.Tika:java.lang.String detect(byte[],java.lang.String)": 1,
        "org.apache.tika.Tika:void <init>()": 2,
        "org.apache.tika.Tika:java.lang.String detect(byte[])": 1
    },
    "org.apache.tomcat.embed:tomcat-embed-core:9.0.43": {
        "org.apache.catalina.startup.Tomcat:void stop()": 1,
        "org.apache.catalina.startup.Tomcat:void destroy()": 1,
        "org.apache.catalina.startup.Tomcat:void start()": 1,
        "org.apache.catalina.core.StandardContext:void setLoader(org.apache.catalina.Loader)": 1,
        "org.apache.catalina.core.StandardContext:void <init>()": 1,
        "org.apache.catalina.core.StandardContext:void setManager(org.apache.catalina.Manager)": 1
    },
    "org.apache.tomcat.embed:tomcat-embed-core:8.5.38": {
        "org.apache.catalina.webresources.DirResourceSet:void <init>(org.apache.catalina.WebResourceRoot,java.lang.String,java.lang.String,java.lang.String)": 1
    },
    "com.thoughtworks.xstream:xstream:1.4.15": {
        "com.thoughtworks.xstream.XStream:void <init>()": 1
    },
    "org.apache.tomcat.embed:tomcat-embed-core:7.0.91": {
        "org.apache.catalina.startup.Tomcat:org.apache.catalina.Wrapper addServlet(org.apache.catalina.Context,java.lang.String,javax.servlet.Servlet)": 1
    },
    "org.apache.tomcat.embed:tomcat-embed-core:9.0.35": {
        "org.apache.catalina.startup.Tomcat:org.apache.catalina.Server getServer()": 1,
        "org.apache.catalina.startup.Tomcat:void start()": 1,
        "org.apache.catalina.startup.Tomcat:org.apache.catalina.connector.Connector getConnector()": 1,
        "org.apache.catalina.startup.Tomcat:void enableNaming()": 1,
        "org.apache.catalina.startup.Tomcat:org.apache.catalina.Context addWebapp(java.lang.String,java.lang.String)": 1,
        "org.apache.catalina.startup.Tomcat:org.apache.catalina.Wrapper addServlet(org.apache.catalina.Context,java.lang.String,javax.servlet.Servlet)": 2
    },
    "com.thoughtworks.xstream:xstream:1.4.12": {
        "com.thoughtworks.xstream.converters.reflection.ReflectionConverter:void <init>(com.thoughtworks.xstream.mapper.Mapper,com.thoughtworks.xstream.converters.reflection.ReflectionProvider)": 8,
        "com.thoughtworks.xstream.io.xml.PrettyPrintWriter:void <init>(java.io.Writer,com.thoughtworks.xstream.io.naming.NameCoder)": 1,
        "com.thoughtworks.xstream.converters.basic.StringConverter:java.lang.Object fromString(java.lang.String)": 1,
        "com.thoughtworks.xstream.XStream:void processAnnotations(java.lang.Class)": 3,
        "com.thoughtworks.xstream.XStream:void registerConverter(com.thoughtworks.xstream.converters.SingleValueConverter)": 6,
        "com.thoughtworks.xstream.XStream:void alias(java.lang.String,java.lang.Class)": 9,
        "com.thoughtworks.xstream.XStream:void useAttributeFor(java.lang.Class,java.lang.String)": 7,
        "com.thoughtworks.xstream.core.util.CompositeClassLoader:void add(java.lang.ClassLoader)": 2,
        "com.thoughtworks.xstream.core.util.CompositeClassLoader:void <init>()": 1,
        "com.thoughtworks.xstream.XStream:void addPermission(com.thoughtworks.xstream.security.TypePermission)": 1,
        "com.thoughtworks.xstream.XStream:void <init>(com.thoughtworks.xstream.converters.reflection.ReflectionProvider,com.thoughtworks.xstream.io.HierarchicalStreamDriver)": 1,
        "com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider:void <init>()": 1
    },
    "org.apache.zookeeper:zookeeper:3.4.10": {
        "org.apache.zookeeper.ZooKeeper:void <init>(java.lang.String,int,org.apache.zookeeper.Watcher)": 1
    },
    "org.apache.mina:mina-core:2.0.16": {
        "org.apache.mina.transport.socket.nio.NioSocketConnector:void <init>()": 3,
        "org.apache.mina.transport.socket.nio.NioSocketAcceptor:void <init>()": 2
    },
    "com.alibaba:fastjson:1.2.48": {
        "com.alibaba.fastjson.JSON:com.alibaba.fastjson.JSONArray parseArray(java.lang.String)": 1
    }
}
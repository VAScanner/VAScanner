{
    "project name": "xiaolanglang_easypoi",
    "modules": {
        "org.jeecg:easypoi": {
            "vulnerable dependencies": {
                "org.apache.poi:poi-ooxml:3.9": {
                    "used-method num": 223,
                    "used method": [
                        "org.apache.poi.xssf.usermodel.XSSFPictureData:byte[] getData()",
                        "org.apache.poi.openxml4j.opc.internal.ContentType:java.lang.String toString()",
                        "org.apache.poi.xssf.usermodel.XSSFWorkbook:org.apache.poi.xssf.usermodel.XSSFFont createFont()",
                        "org.apache.poi.xwpf.usermodel.XWPFTable:boolean removeRow(int)",
                        "org.apache.poi.xwpf.usermodel.XWPFParagraph:java.util.List getRuns()",
                        "org.apache.poi.xssf.model.SharedStringsTable:org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst getEntryAt(int)",
                        "org.apache.poi.xssf.usermodel.XSSFCell:void setCellType(int)",
                        "org.apache.poi.xssf.usermodel.XSSFDialogsheet:org.apache.poi.xssf.usermodel.XSSFRow createRow(int)",
                        "org.apache.poi.util.IdentifierManager$Segment:java.lang.String toString()",
                        "org.apache.poi.xssf.streaming.SXSSFCell:void setCellValue(double)",
                        "org.apache.poi.xssf.streaming.SXSSFRow$FilledCellIterator:boolean hasNext()",
                        "org.apache.poi.xssf.usermodel.XSSFWorkbook:org.apache.poi.xssf.usermodel.XSSFFont getFontAt(short)",
                        "org.apache.poi.xssf.usermodel.XSSFSheet:int getLastRowNum()",
                        "org.apache.poi.xssf.streaming.SXSSFRow$CellIterator:boolean hasNext()",
                        "org.apache.poi.xssf.usermodel.XSSFRow:java.lang.String toString()",
                        "org.apache.poi.xssf.usermodel.XSSFRow:org.apache.poi.xssf.usermodel.XSSFCell getCell(int)",
                        "org.apache.poi.xssf.usermodel.XSSFCellStyle:void setVerticalAlignment(short)",
                        "org.apache.poi.xwpf.usermodel.XWPFRun:java.lang.String toString()",
                        "org.apache.poi.xssf.usermodel.XSSFColor:byte[] getRgb()",
                        "org.apache.poi.xssf.usermodel.XSSFCellStyle:void setWrapText(boolean)",
                        "org.apache.poi.xssf.usermodel.XSSFWorkbook:void removeSheetAt(int)",
                        "org.apache.poi.xssf.streaming.SXSSFWorkbook:org.apache.poi.ss.usermodel.Sheet createSheet()",
                        "org.apache.poi.xssf.usermodel.XSSFWorkbook:void <clinit>()",
                        "org.apache.poi.xssf.streaming.SXSSFRow:short getLastCellNum()",
                        "org.apache.poi.openxml4j.opc.PackagePartCollection:org.apache.poi.openxml4j.opc.PackagePart remove(java.lang.Object)",
                        "org.apache.poi.xssf.streaming.SXSSFCell:byte getErrorCellValue()",
                        "org.apache.poi.xssf.usermodel.XSSFWorkbook:void <init>()",
                        "org.apache.poi.xssf.usermodel.XSSFFont:short getIndex()",
                        "org.apache.poi.xssf.usermodel.XSSFColor:boolean equals(java.lang.Object)",
                        "org.apache.poi.xssf.usermodel.XSSFSheet:int addMergedRegion(org.apache.poi.ss.util.CellRangeAddress)",
                        "org.apache.poi.xwpf.usermodel.XWPFTable:void setCellMargins(int,int,int,int)",
                        "org.apache.poi.xwpf.usermodel.XWPFTable:org.apache.poi.xwpf.usermodel.XWPFTableRow createRow()",
                        "org.apache.poi.xssf.usermodel.XSSFWorkbook:org.apache.poi.xssf.usermodel.XSSFSheet getSheetAt(int)",
                        "org.apache.poi.xssf.usermodel.XSSFCell:void setCellValue(org.apache.poi.ss.usermodel.RichTextString)",
                        "org.apache.poi.xssf.usermodel.XSSFCellStyle:void setBorderBottom(short)",
                        "org.apache.poi.xssf.usermodel.XSSFRow:short getFirstCellNum()",
                        "org.apache.poi.xssf.usermodel.XSSFSheet:org.apache.poi.xssf.usermodel.XSSFDrawing createDrawingPatriarch()",
                        "org.apache.poi.POIXMLDocumentPart:java.util.List getRelations()",
                        "org.apache.poi.xssf.usermodel.XSSFName:boolean equals(java.lang.Object)",
                        "org.apache.poi.xssf.usermodel.XSSFRow:void removeCell(org.apache.poi.ss.usermodel.Cell)",
                        "org.apache.poi.xwpf.usermodel.XWPFTableCell:java.lang.String getText()",
                        "org.apache.poi.xssf.usermodel.XSSFWorkbook:org.apache.poi.xssf.usermodel.XSSFCellStyle createCellStyle()",
                        "org.apache.poi.xssf.usermodel.XSSFRow:int getRowNum()",
                        "org.apache.poi.xssf.usermodel.XSSFRichTextString:void <clinit>()",
                        "org.apache.poi.xssf.streaming.SXSSFCell:void setCellFormula(java.lang.String)",
                        "org.apache.poi.xssf.streaming.SXSSFSheet:org.apache.poi.ss.usermodel.Row getRow(int)",
                        "org.apache.poi.xssf.usermodel.XSSFSheet:org.apache.poi.xssf.usermodel.XSSFWorkbook getWorkbook()",
                        "org.apache.poi.xssf.usermodel.XSSFCellStyle:short getIndex()",
                        "org.apache.poi.xssf.usermodel.XSSFRow:org.apache.poi.xssf.usermodel.XSSFCell createCell(int)",
                        "org.apache.poi.xssf.usermodel.XSSFCell:void setCellValue(java.lang.String)",
                        "org.apache.poi.xssf.streaming.SXSSFWorkbook:int addPicture(byte[],int)",
                        "org.apache.poi.xssf.streaming.SXSSFCell:double getNumericCellValue()",
                        "org.apache.poi.xssf.usermodel.XSSFRichTextString:int numFormattingRuns()",
                        "org.apache.poi.xssf.streaming.SXSSFSheet:int getLastRowNum()",
                        "org.apache.poi.xssf.usermodel.XSSFFont:org.apache.poi.xssf.usermodel.XSSFColor getXSSFColor()",
                        "org.apache.poi.xssf.usermodel.XSSFCell:int getColumnIndex()",
                        "org.apache.poi.xssf.usermodel.XSSFCellStyle:org.apache.poi.xssf.usermodel.XSSFColor getFillForegroundXSSFColor()",
                        "org.apache.poi.xssf.streaming.SXSSFRow:java.util.Iterator cellIterator()",
                        "org.apache.poi.xssf.streaming.SXSSFRow:org.apache.poi.ss.usermodel.Cell createCell(int)",
                        "org.apache.poi.xssf.usermodel.XSSFWorkbook:void setSheetName(int,java.lang.String)",
                        "org.apache.poi.xssf.usermodel.XSSFCell:void setCellComment(org.apache.poi.ss.usermodel.Comment)",
                        "org.apache.poi.xssf.streaming.SXSSFWorkbook:short getNumberOfFonts()",
                        "org.apache.poi.xwpf.usermodel.XWPFDocument:org.apache.poi.xwpf.usermodel.XWPFParagraph createParagraph()",
                        "org.apache.poi.xwpf.usermodel.XWPFTableRow:void setHeight(int)",
                        "org.apache.poi.xssf.streaming.SXSSFCell:void setCellValue(boolean)",
                        "org.apache.poi.xssf.streaming.SXSSFCell:void setCellComment(org.apache.poi.ss.usermodel.Comment)",
                        "org.apache.poi.xssf.streaming.SXSSFWorkbook:int getNumberOfSheets()",
                        "org.apache.poi.xssf.streaming.SXSSFCell:java.lang.String getCellFormula()",
                        "org.apache.poi.xssf.usermodel.XSSFCellStyle:void setBorderLeft(short)",
                        "org.apache.poi.xssf.streaming.SXSSFRow:org.apache.poi.ss.usermodel.Cell getCell(int)",
                        "org.apache.poi.xwpf.usermodel.XWPFTableRow:java.util.List getTableCells()",
                        "org.apache.poi.xssf.usermodel.XSSFCell:org.apache.poi.xssf.usermodel.XSSFComment getCellComment()",
                        "org.apache.poi.xssf.streaming.SXSSFWorkbook:void setSheetName(int,java.lang.String)",
                        "org.apache.poi.xssf.usermodel.XSSFFont:void setFontHeightInPoints(short)",
                        "org.apache.poi.xssf.usermodel.XSSFCell:int getCellType()",
                        "org.apache.poi.openxml4j.opc.PackageRelationship:boolean equals(java.lang.Object)",
                        "org.apache.poi.xssf.usermodel.XSSFSheet:void setColumnWidth(int,int)",
                        "org.apache.poi.xssf.usermodel.XSSFCellStyle:void setFillForegroundColor(short)",
                        "org.apache.poi.xssf.usermodel.XSSFCellStyle:java.lang.Object clone()",
                        "org.apache.poi.xssf.streaming.SXSSFCell:int getRowIndex()",
                        "org.apache.poi.xssf.usermodel.XSSFCell:java.lang.String getCellFormula()",
                        "org.apache.poi.xssf.streaming.SXSSFSheet:int getNumMergedRegions()",
                        "org.apache.poi.xssf.streaming.SXSSFCell:void setCellType(int)",
                        "org.apache.poi.xssf.streaming.SXSSFSheet:void shiftRows(int,int,int,boolean,boolean)",
                        "org.apache.poi.xssf.usermodel.XSSFClientAnchor:void <init>(int,int,int,int,int,int,int,int)",
                        "org.apache.poi.xssf.usermodel.XSSFCellStyle:short getFontIndex()",
                        "org.apache.poi.xwpf.usermodel.XWPFTableRow:org.apache.poi.xwpf.usermodel.XWPFTableCell createCell()",
                        "org.apache.poi.xssf.usermodel.XSSFWorkbook:short getNumberOfFonts()",
                        "org.apache.poi.openxml4j.opc.PackagePartName:java.lang.String toString()",
                        "org.apache.poi.POIXMLDocument:boolean hasOOXMLHeader(java.io.InputStream)",
                        "org.apache.poi.xssf.streaming.SXSSFRow$CellIterator:org.apache.poi.ss.usermodel.Cell next()",
                        "org.apache.poi.POIXMLDocumentPart:void <clinit>()",
                        "org.apache.poi.openxml4j.opc.internal.ContentType:boolean equals(java.lang.Object)",
                        "org.apache.poi.xssf.streaming.SXSSFCell:java.lang.String getStringCellValue()",
                        "org.apache.poi.xssf.usermodel.XSSFSheet:int getNumMergedRegions()",
                        "org.apache.poi.openxml4j.opc.PackageRelationship:java.lang.String toString()",
                        "org.apache.poi.ss.usermodel.WorkbookFactory:org.apache.poi.ss.usermodel.Workbook create(java.io.InputStream)",
                        "org.apache.poi.xwpf.usermodel.XWPFTable:java.lang.String getText()",
                        "org.apache.poi.openxml4j.opc.PackagePartCollection:java.lang.Object put(java.lang.Object,java.lang.Object)",
                        "org.apache.poi.xssf.usermodel.XSSFPicture:org.apache.poi.xssf.usermodel.XSSFClientAnchor getPreferredSize()",
                        "org.apache.poi.xssf.streaming.SXSSFCell:org.apache.poi.ss.usermodel.Comment getCellComment()",
                        "org.apache.poi.xssf.streaming.SXSSFSheet:java.util.Iterator rowIterator()",
                        "org.apache.poi.xssf.streaming.SXSSFCell:org.apache.poi.ss.usermodel.RichTextString getRichStringCellValue()",
                        "org.apache.poi.xssf.streaming.SXSSFCell:java.util.Date getDateCellValue()",
                        "org.apache.poi.xssf.streaming.SXSSFSheet:org.apache.poi.ss.usermodel.Row createRow(int)",
                        "org.apache.poi.openxml4j.opc.PackagePartName:boolean equals(java.lang.Object)",
                        "org.apache.poi.xssf.usermodel.extensions.XSSFCellBorder:boolean equals(java.lang.Object)",
                        "org.apache.poi.xssf.streaming.SXSSFRow:org.apache.poi.ss.usermodel.Sheet getSheet()",
                        "org.apache.poi.xssf.usermodel.XSSFCellStyle:org.apache.poi.xssf.usermodel.XSSFFont getFont()",
                        "org.apache.poi.xwpf.usermodel.XWPFTableCell:void setText(java.lang.String)",
                        "org.apache.poi.xssf.usermodel.XSSFSheet:void shiftRows(int,int,int,boolean,boolean)",
                        "org.apache.poi.xssf.usermodel.XSSFCellStyle:void setFont(org.apache.poi.ss.usermodel.Font)",
                        "org.apache.poi.openxml4j.opc.PackagePartCollection:java.lang.Object clone()",
                        "org.apache.poi.xssf.usermodel.XSSFCell:void setCellValue(double)",
                        "org.apache.poi.xssf.streaming.SXSSFCell:int getColumnIndex()",
                        "org.apache.poi.xssf.usermodel.XSSFRichTextString:void <init>(org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst)",
                        "org.apache.poi.xssf.streaming.SXSSFWorkbook:void <init>()",
                        "org.apache.poi.xssf.usermodel.XSSFRow:short getLastCellNum()",
                        "org.apache.poi.xwpf.usermodel.XWPFParagraph:java.lang.String getText()",
                        "org.apache.poi.xssf.streaming.SXSSFWorkbook:org.apache.poi.ss.usermodel.Font createFont()",
                        "org.apache.poi.xssf.usermodel.XSSFCell:java.lang.String getStringCellValue()",
                        "org.apache.poi.xssf.streaming.SXSSFSheet:int addMergedRegion(org.apache.poi.ss.util.CellRangeAddress)",
                        "org.apache.poi.xssf.usermodel.XSSFCell:org.apache.poi.xssf.usermodel.XSSFRichTextString getRichStringCellValue()",
                        "org.apache.poi.xssf.streaming.SXSSFSheet:int getColumnWidth(int)",
                        "org.apache.poi.xssf.usermodel.XSSFRichTextString:java.lang.String toString()",
                        "org.apache.poi.xssf.streaming.SXSSFRow:java.util.Iterator iterator()",
                        "org.apache.poi.xssf.usermodel.XSSFCellStyle:void setFillPattern(short)",
                        "org.apache.poi.xwpf.usermodel.XWPFTable:org.apache.poi.xwpf.usermodel.XWPFTableRow getRow(int)",
                        "org.apache.poi.xssf.usermodel.XSSFCell:void setCellStyle(org.apache.poi.ss.usermodel.CellStyle)",
                        "org.apache.poi.xssf.streaming.SXSSFRow:void removeCell(org.apache.poi.ss.usermodel.Cell)",
                        "org.apache.poi.xssf.eventusermodel.XSSFReader$SheetIterator:void remove()",
                        "org.apache.poi.xssf.streaming.SXSSFSheet:void setColumnWidth(int,int)",
                        "org.apache.poi.xssf.usermodel.XSSFRow:java.util.Iterator cellIterator()",
                        "org.apache.poi.xssf.usermodel.XSSFCell:java.lang.String toString()",
                        "org.apache.poi.xwpf.usermodel.XWPFDocument:void <init>()",
                        "org.apache.poi.xssf.eventusermodel.XSSFReader:void <init>(org.apache.poi.openxml4j.opc.OPCPackage)",
                        "org.apache.poi.xssf.usermodel.XSSFClientAnchor:org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing.CTMarker getFrom()",
                        "org.apache.poi.xssf.usermodel.XSSFCell:byte getErrorCellValue()",
                        "org.apache.poi.xssf.streaming.SXSSFCell:void setCellValue(org.apache.poi.ss.usermodel.RichTextString)",
                        "org.apache.poi.xssf.usermodel.XSSFFont:short getBoldweight()",
                        "org.apache.poi.xssf.usermodel.XSSFRow:void setHeight(short)",
                        "org.apache.poi.xssf.usermodel.XSSFCellStyle:short getDataFormat()",
                        "org.apache.poi.xssf.eventusermodel.XSSFReader:org.apache.poi.xssf.model.SharedStringsTable getSharedStringsTable()",
                        "org.apache.poi.xssf.usermodel.XSSFCellStyle:void setAlignment(short)",
                        "org.apache.poi.xwpf.usermodel.XWPFRun:void setText(java.lang.String,int)",
                        "org.apache.poi.xssf.usermodel.XSSFCellStyle:void setBorderRight(short)",
                        "org.apache.poi.xssf.streaming.SXSSFWorkbook:void write(java.io.OutputStream)",
                        "org.apache.poi.xssf.usermodel.XSSFRow:java.util.Iterator iterator()",
                        "org.apache.poi.POIXMLDocument:void write(java.io.OutputStream)",
                        "org.apache.poi.openxml4j.opc.OPCPackage:org.apache.poi.openxml4j.opc.OPCPackage open(java.io.InputStream)",
                        "org.apache.poi.xssf.usermodel.XSSFWorkbook:void <init>(org.apache.poi.openxml4j.opc.OPCPackage)",
                        "org.apache.poi.xssf.usermodel.XSSFFont:boolean equals(java.lang.Object)",
                        "org.apache.poi.xssf.streaming.SXSSFRow$FilledCellIterator:void remove()",
                        "org.apache.poi.xssf.usermodel.XSSFCell:double getNumericCellValue()",
                        "org.apache.poi.xssf.usermodel.XSSFRow:org.apache.poi.xssf.usermodel.XSSFSheet getSheet()",
                        "org.apache.poi.xssf.usermodel.XSSFFont:void setColor(short)",
                        "org.apache.poi.xssf.usermodel.XSSFRichTextString:org.apache.poi.xssf.usermodel.XSSFFont getFontOfFormattingRun(int)",
                        "org.apache.poi.xssf.usermodel.XSSFClientAnchor:java.lang.String toString()",
                        "org.apache.poi.xssf.streaming.SXSSFSheet:org.apache.poi.ss.util.CellRangeAddress getMergedRegion(int)",
                        "org.apache.poi.xwpf.usermodel.XWPFDocument:int getNextPicNameNumber(int)",
                        "org.apache.poi.xssf.usermodel.XSSFWorkbook:org.apache.poi.xssf.usermodel.XSSFSheet createSheet(java.lang.String)",
                        "org.apache.poi.xssf.usermodel.XSSFCell:boolean getBooleanCellValue()",
                        "org.apache.poi.xssf.eventusermodel.XSSFReader$SheetIterator:boolean hasNext()",
                        "org.apache.poi.xssf.usermodel.XSSFWorkbook:int getNumberOfSheets()",
                        "org.apache.poi.xssf.eventusermodel.XSSFReader:java.util.Iterator getSheetsData()",
                        "org.apache.poi.xssf.streaming.SXSSFCell:int getCellType()",
                        "org.apache.poi.xwpf.usermodel.XWPFDocument:java.lang.String addPictureData(byte[],int)",
                        "org.apache.poi.xwpf.usermodel.XWPFParagraph:org.apache.poi.xwpf.usermodel.XWPFDocument getDocument()",
                        "org.apache.poi.xssf.streaming.SXSSFWorkbook:void removeSheetAt(int)",
                        "org.apache.poi.xssf.streaming.SXSSFSheet:org.apache.poi.ss.usermodel.Drawing createDrawingPatriarch()",
                        "org.apache.poi.xssf.streaming.SXSSFWorkbook:org.apache.poi.ss.usermodel.Sheet createSheet(java.lang.String)",
                        "org.apache.poi.POIXMLDocumentPart:java.lang.String toString()",
                        "org.apache.poi.xwpf.usermodel.XWPFDocument:void <init>(org.apache.poi.openxml4j.opc.OPCPackage)",
                        "org.apache.poi.xssf.usermodel.XSSFCellStyle:void setBorderTop(short)",
                        "org.apache.poi.openxml4j.opc.PackageRelationshipCollection:java.lang.String toString()",
                        "org.apache.poi.xssf.usermodel.XSSFFont:short getFontHeightInPoints()",
                        "org.apache.poi.xssf.streaming.SXSSFRow$FilledCellIterator:org.apache.poi.ss.usermodel.Cell next()",
                        "org.apache.poi.xssf.usermodel.XSSFSheet:void createFreezePane(int,int,int,int)",
                        "org.apache.poi.xssf.usermodel.XSSFSheet:org.apache.poi.xssf.usermodel.XSSFRow getRow(int)",
                        "org.apache.poi.xssf.streaming.SXSSFSheet:org.apache.poi.ss.usermodel.Workbook getWorkbook()",
                        "org.apache.poi.xwpf.usermodel.XWPFDocument:void <init>(java.io.InputStream)",
                        "org.apache.poi.xssf.usermodel.XSSFCell:org.apache.poi.xssf.usermodel.XSSFCellStyle getCellStyle()",
                        "org.apache.poi.xwpf.usermodel.XWPFDocument:java.util.List getFooterList()",
                        "org.apache.poi.xssf.usermodel.XSSFRow:org.apache.poi.xssf.usermodel.XSSFCell createCell(int,int)",
                        "org.apache.poi.xssf.usermodel.XSSFRichTextString:void <init>(java.lang.String)",
                        "org.apache.poi.xssf.streaming.SXSSFCell:java.lang.String toString()",
                        "org.apache.poi.xssf.usermodel.XSSFCell:void setCellFormula(java.lang.String)",
                        "org.apache.poi.xssf.streaming.SXSSFSheet:void createFreezePane(int,int,int,int)",
                        "org.apache.poi.xssf.usermodel.XSSFFont:java.lang.String toString()",
                        "org.apache.poi.xwpf.usermodel.XWPFDocument:java.util.List getHeaderList()",
                        "org.apache.poi.xssf.usermodel.XSSFClientAnchor:boolean equals(java.lang.Object)",
                        "org.apache.poi.xwpf.usermodel.XWPFTable:int getNumberOfRows()",
                        "org.apache.poi.xssf.usermodel.XSSFWorkbook:int addPicture(byte[],int)",
                        "org.apache.poi.xssf.usermodel.XSSFCell:org.apache.poi.xssf.usermodel.XSSFRow getRow()",
                        "org.apache.poi.xwpf.usermodel.XWPFTableRow:org.apache.poi.xwpf.usermodel.XWPFTableCell getCell(int)",
                        "org.apache.poi.xwpf.usermodel.XWPFParagraph:org.apache.poi.xwpf.usermodel.XWPFRun createRun()",
                        "org.apache.poi.xssf.streaming.SXSSFRow:int getRowNum()",
                        "org.apache.poi.xwpf.usermodel.XWPFDocument:java.util.List getParagraphs()",
                        "org.apache.poi.xssf.streaming.SXSSFWorkbook:org.apache.poi.ss.usermodel.Sheet getSheetAt(int)",
                        "org.apache.poi.xssf.usermodel.XSSFCell:int getRowIndex()",
                        "org.apache.poi.xssf.streaming.SXSSFRow:short getHeight()",
                        "org.apache.poi.xssf.streaming.SXSSFRow:org.apache.poi.ss.usermodel.Cell createCell(int,int)",
                        "org.apache.poi.xssf.usermodel.XSSFRow:short getHeight()",
                        "org.apache.poi.xssf.usermodel.XSSFCell:java.util.Date getDateCellValue()",
                        "org.apache.poi.xssf.usermodel.extensions.XSSFCellFill:boolean equals(java.lang.Object)",
                        "org.apache.poi.xssf.streaming.SXSSFCell:void setCellValue(java.lang.String)",
                        "org.apache.poi.xssf.usermodel.XSSFWorkbook:org.apache.poi.xssf.usermodel.XSSFSheet createSheet()",
                        "org.apache.poi.xssf.usermodel.XSSFSheet:java.util.Iterator rowIterator()",
                        "org.apache.poi.xssf.streaming.SXSSFWorkbook:org.apache.poi.ss.usermodel.Font getFontAt(short)",
                        "org.apache.poi.xssf.streaming.SXSSFCell:boolean getBooleanCellValue()",
                        "org.apache.poi.xssf.eventusermodel.XSSFReader$SheetIterator:java.io.InputStream next()",
                        "org.apache.poi.xssf.streaming.SXSSFCell:org.apache.poi.ss.usermodel.Row getRow()",
                        "org.apache.poi.openxml4j.opc.PackagePart:java.lang.String toString()",
                        "org.apache.poi.xssf.usermodel.XSSFCellStyle:short getAlignment()",
                        "org.apache.poi.xssf.streaming.SXSSFCell:org.apache.poi.ss.usermodel.CellStyle getCellStyle()",
                        "org.apache.poi.xssf.usermodel.XSSFCellStyle:void setDataFormat(short)",
                        "org.apache.poi.xssf.usermodel.XSSFSheet:int getColumnWidth(int)",
                        "org.apache.poi.xssf.usermodel.XSSFPicture:org.apache.poi.xssf.usermodel.XSSFPictureData getPictureData()",
                        "org.apache.poi.xwpf.usermodel.XWPFRun:org.apache.poi.xwpf.usermodel.XWPFParagraph getParagraph()",
                        "org.apache.poi.xssf.streaming.SXSSFRow$CellIterator:void remove()",
                        "org.apache.poi.xwpf.usermodel.XWPFDocument:java.util.Iterator getTablesIterator()",
                        "org.apache.poi.xssf.streaming.SXSSFWorkbook:org.apache.poi.ss.usermodel.CellStyle createCellStyle()",
                        "org.apache.poi.xssf.usermodel.XSSFSheet:org.apache.poi.ss.util.CellRangeAddress getMergedRegion(int)"
                    ],
                    "CVE": [
                        "CVE-2019-12415"
                    ],
                    "used vul-method": [
                        "org.apache.poi.xssf.streaming.SXSSFCell:void setCellValue(double)",
                        "org.apache.poi.xssf.streaming.SXSSFCell:void setCellFormula(java.lang.String)",
                        "org.apache.poi.xssf.streaming.SXSSFRow:org.apache.poi.ss.usermodel.Cell createCell(int)",
                        "org.apache.poi.xssf.streaming.SXSSFCell:void setCellValue(boolean)",
                        "org.apache.poi.xssf.streaming.SXSSFRow:org.apache.poi.ss.usermodel.Cell getCell(int)",
                        "org.apache.poi.xssf.streaming.SXSSFCell:void setCellType(int)",
                        "org.apache.poi.xssf.streaming.SXSSFCell:java.lang.String getStringCellValue()",
                        "org.apache.poi.xssf.streaming.SXSSFCell:org.apache.poi.ss.usermodel.RichTextString getRichStringCellValue()",
                        "org.apache.poi.xssf.streaming.SXSSFSheet:org.apache.poi.ss.usermodel.Row createRow(int)",
                        "org.apache.poi.xssf.streaming.SXSSFCell:void setCellValue(org.apache.poi.ss.usermodel.RichTextString)",
                        "org.apache.poi.xssf.streaming.SXSSFCell:java.lang.String toString()",
                        "org.apache.poi.xssf.streaming.SXSSFRow:org.apache.poi.ss.usermodel.Cell createCell(int,int)",
                        "org.apache.poi.xssf.streaming.SXSSFCell:void setCellValue(java.lang.String)"
                    ],
                    "vul-called frequency": 105,
                    "related vul root method": {
                        "CVE-2019-12415": [
                            "org.apache.poi.xssf.streaming.SXSSFCell:java.lang.String getStringCellValue()",
                            "org.apache.poi.xssf.streaming.SheetDataWriter:void writeCell(int,org.apache.poi.ss.usermodel.Cell)",
                            "org.apache.poi.xssf.streaming.SXSSFCell:void setCellValue(org.apache.poi.ss.usermodel.RichTextString)",
                            "org.apache.poi.xssf.streaming.SXSSFCell:void ensureRichTextStringType()",
                            "org.apache.poi.xssf.streaming.SXSSFCell:void setCellValue(java.lang.String)"
                        ]
                    },
                    "CVE-API": {
                        "CVE-2019-12415": [
                            "org.apache.poi.xssf.streaming.SXSSFCell:void setCellValue(double)",
                            "org.apache.poi.xssf.streaming.SXSSFCell:void setCellFormula(java.lang.String)",
                            "org.apache.poi.xssf.streaming.SXSSFRow:org.apache.poi.ss.usermodel.Cell createCell(int)",
                            "org.apache.poi.xssf.streaming.SXSSFCell:void setCellValue(boolean)",
                            "org.apache.poi.xssf.streaming.SXSSFRow:org.apache.poi.ss.usermodel.Cell getCell(int)",
                            "org.apache.poi.xssf.streaming.SXSSFCell:void setCellType(int)",
                            "org.apache.poi.xssf.streaming.SXSSFCell:java.lang.String getStringCellValue()",
                            "org.apache.poi.xssf.streaming.SXSSFCell:org.apache.poi.ss.usermodel.RichTextString getRichStringCellValue()",
                            "org.apache.poi.xssf.streaming.SXSSFSheet:org.apache.poi.ss.usermodel.Row createRow(int)",
                            "org.apache.poi.xssf.streaming.SXSSFCell:void setCellValue(org.apache.poi.ss.usermodel.RichTextString)",
                            "org.apache.poi.xssf.streaming.SXSSFCell:java.lang.String toString()",
                            "org.apache.poi.xssf.streaming.SXSSFRow:org.apache.poi.ss.usermodel.Cell createCell(int,int)",
                            "org.apache.poi.xssf.streaming.SXSSFCell:void setCellValue(java.lang.String)"
                        ]
                    }
                },
                "xerces:xercesImpl:2.9.1": {
                    "used-method num": 0,
                    "used method": []
                },
                "org.springframework:spring-web:3.1.1.RELEASE": {
                    "used-method num": 0,
                    "used method": []
                },
                "org.springframework:spring-webmvc:3.1.1.RELEASE": {
                    "used-method num": 0,
                    "used method": []
                },
                "org.springframework:spring-core:3.1.1.RELEASE": {
                    "used-method num": 0,
                    "used method": []
                }
            }
        }
    }
}
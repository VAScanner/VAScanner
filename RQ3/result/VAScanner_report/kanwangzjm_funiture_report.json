{
    "project name": "kanwangzjm_funiture",
    "vulnerable dependencies": {
        "org.springframework:spring-web:4.2.9.RELEASE": {
            "used-method num": 20,
            "used method": [
                "org.springframework.http.HttpHeaders:boolean containsKey(java.lang.Object)",
                "org.springframework.web.context.ContextLoader:void <clinit>()",
                "org.springframework.web.multipart.support.DefaultMultipartHttpServletRequest:java.util.Map getParameterMap()",
                "org.springframework.http.HttpHeaders:boolean isEmpty()",
                "org.springframework.http.HttpHeaders:java.lang.Object put(java.lang.Object,java.lang.Object)",
                "org.springframework.web.multipart.commons.CommonsMultipartResolver:void <init>(javax.servlet.ServletContext)",
                "org.springframework.web.context.ContextLoaderListener:void contextDestroyed(javax.servlet.ServletContextEvent)",
                "org.springframework.web.util.UriComponents:java.lang.String toString()",
                "org.springframework.web.multipart.support.DefaultMultipartHttpServletRequest:java.lang.String getParameter(java.lang.String)",
                "org.springframework.http.HttpHeaders:java.util.Set entrySet()",
                "org.springframework.http.server.ServletServerHttpResponse$ServletResponseHttpHeaders:java.util.List get(java.lang.Object)",
                "org.springframework.http.HttpHeaders:java.util.Set keySet()",
                "org.springframework.web.context.ContextLoaderListener:void contextInitialized(javax.servlet.ServletContextEvent)",
                "org.springframework.web.multipart.support.AbstractMultipartHttpServletRequest:org.springframework.util.MultiValueMap getMultiFileMap()",
                "org.springframework.http.HttpHeaders:java.util.List get(java.lang.Object)",
                "org.springframework.http.server.ServletServerHttpResponse$ServletResponseHttpHeaders:boolean containsKey(java.lang.Object)",
                "org.springframework.http.HttpStatus:java.lang.String toString()",
                "org.springframework.web.context.ContextLoaderListener:void <init>()",
                "org.springframework.web.util.UriComponentsBuilder:java.lang.Object clone()",
                "org.springframework.http.HttpHeaders:java.lang.String toString()"
            ]
        },
        "ch.qos.logback:logback-classic:1.0.13": {
            "used-method num": 27,
            "used method": [
                "ch.qos.logback.classic.Level:void <clinit>()",
                "ch.qos.logback.classic.Logger:boolean isDebugEnabled()",
                "ch.qos.logback.classic.Logger:java.lang.String toString()",
                "ch.qos.logback.classic.Logger:void warn(java.lang.String,java.lang.Object,java.lang.Object)",
                "ch.qos.logback.classic.Logger:void error(java.lang.String,java.lang.Object[])",
                "ch.qos.logback.classic.Logger:void error(java.lang.String,java.lang.Throwable)",
                "ch.qos.logback.classic.turbo.ReconfigureOnChangeFilter:java.lang.String toString()",
                "ch.qos.logback.classic.spi.LoggingEvent:java.lang.String toString()",
                "ch.qos.logback.classic.Logger:void error(java.lang.String,java.lang.Object)",
                "ch.qos.logback.classic.Logger:void info(java.lang.String,java.lang.Throwable)",
                "ch.qos.logback.classic.Logger:void warn(java.lang.String)",
                "ch.qos.logback.classic.Logger:void info(java.lang.String,java.lang.Object)",
                "ch.qos.logback.classic.Logger:void info(java.lang.String,java.lang.Object[])",
                "ch.qos.logback.classic.spi.LoggerContextVO:java.lang.String toString()",
                "ch.qos.logback.classic.Logger:void debug(java.lang.String)",
                "ch.qos.logback.classic.spi.StackTraceElementProxy:java.lang.String toString()",
                "ch.qos.logback.classic.Logger:void warn(java.lang.String,java.lang.Object[])",
                "ch.qos.logback.classic.Logger:void warn(java.lang.String,java.lang.Object)",
                "ch.qos.logback.classic.Logger:void debug(java.lang.String,java.lang.Object,java.lang.Object)",
                "ch.qos.logback.classic.jmx.JMXConfigurator:java.lang.String toString()",
                "ch.qos.logback.classic.Logger:void warn(java.lang.String,java.lang.Throwable)",
                "ch.qos.logback.classic.Logger:boolean isInfoEnabled()",
                "ch.qos.logback.classic.Logger:void info(java.lang.String,java.lang.Object,java.lang.Object)",
                "ch.qos.logback.classic.LoggerContext:java.lang.String toString()",
                "ch.qos.logback.classic.Logger:void info(java.lang.String)",
                "ch.qos.logback.classic.Logger:void error(java.lang.String,java.lang.Object,java.lang.Object)",
                "ch.qos.logback.classic.turbo.ReconfigureOnChangeFilter$ReconfiguringThread:void run()"
            ]
        },
        "org.quartz-scheduler:quartz:2.1.7": {
            "used-method num": 68,
            "used method": [
                "org.quartz.TriggerBuilder:org.quartz.TriggerBuilder withIdentity(org.quartz.TriggerKey)",
                "org.quartz.utils.DirtyFlagMap:java.lang.Object clone()",
                "org.quartz.utils.counter.sampled.SampledCounterImpl$1:void run()",
                "org.quartz.utils.DirtyFlagMap:boolean isEmpty()",
                "org.quartz.impl.jdbcjobstore.JobStoreSupport$ClusterManager:void run()",
                "org.quartz.utils.DirtyFlagMap$DirtyFlagMapEntryIterator:org.quartz.utils.DirtyFlagMap$DirtyFlagMapEntry next()",
                "org.quartz.impl.JobExecutionContextImpl:org.quartz.JobDetail getJobDetail()",
                "org.quartz.utils.DirtyFlagMap$DirtyFlagMapEntry:java.lang.Object getValue()",
                "org.quartz.impl.JobExecutionContextImpl:java.lang.String toString()",
                "org.quartz.impl.RemoteScheduler:boolean isStarted()",
                "org.quartz.SchedulerException:java.lang.String toString()",
                "org.quartz.utils.DirtyFlagMap:java.util.Collection values()",
                "org.quartz.impl.JobDetailImpl:java.lang.String toString()",
                "org.quartz.utils.DirtyFlagMap:boolean containsKey(java.lang.Object)",
                "org.quartz.impl.StdScheduler:java.util.Date scheduleJob(org.quartz.JobDetail,org.quartz.Trigger)",
                "org.quartz.TriggerBuilder:org.quartz.TriggerBuilder newTrigger()",
                "org.quartz.utils.DirtyFlagMap:java.util.Set keySet()",
                "org.quartz.impl.StdScheduler:java.util.Date rescheduleJob(org.quartz.TriggerKey,org.quartz.Trigger)",
                "org.quartz.utils.DirtyFlagMap:java.util.Set entrySet()",
                "org.quartz.impl.RemoteScheduler:void start()",
                "org.quartz.impl.RemoteScheduler:boolean checkExists(org.quartz.TriggerKey)",
                "org.quartz.utils.DirtyFlagMap:java.lang.Object get(java.lang.Object)",
                "org.quartz.JobBuilder:org.quartz.JobDetail build()",
                "org.quartz.utils.DirtyFlagMap$DirtyFlagMapEntrySet:java.util.Iterator iterator()",
                "org.quartz.impl.triggers.CronTriggerImpl:void setCronExpression(java.lang.String)",
                "org.quartz.SchedulerException:void <init>(java.lang.String)",
                "org.quartz.utils.DirtyFlagMap$DirtyFlagIterator:boolean hasNext()",
                "org.quartz.TriggerUtils:java.util.List computeFireTimes(org.quartz.spi.OperableTrigger,org.quartz.Calendar,int)",
                "org.quartz.impl.StdScheduler:boolean unscheduleJob(org.quartz.TriggerKey)",
                "org.quartz.utils.StringKeyDirtyFlagMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
                "org.quartz.utils.DirtyFlagMap:int size()",
                "org.quartz.impl.StdScheduler:void start()",
                "org.quartz.CronExpression:java.lang.Object clone()",
                "org.quartz.TriggerBuilder:org.quartz.Trigger build()",
                "org.quartz.JobBuilder:org.quartz.JobBuilder newJob(java.lang.Class)",
                "org.quartz.core.QuartzScheduler$1:void run()",
                "org.quartz.impl.triggers.CronTriggerImpl:java.lang.Object clone()",
                "org.quartz.impl.RemoteScheduler:java.util.Date rescheduleJob(org.quartz.TriggerKey,org.quartz.Trigger)",
                "org.quartz.utils.DirtyFlagMap$DirtyFlagCollection:int size()",
                "org.quartz.impl.RemoteScheduler:java.util.Date scheduleJob(org.quartz.JobDetail,org.quartz.Trigger)",
                "org.quartz.impl.StdSchedulerFactory:org.quartz.Scheduler getScheduler()",
                "org.quartz.simpl.SimpleThreadPool$WorkerThread:void run()",
                "org.quartz.utils.DirtyFlagMap$DirtyFlagMapEntry:java.lang.Object getKey()",
                "org.quartz.utils.UpdateChecker:void run()",
                "org.quartz.SchedulerMetaData:java.lang.String toString()",
                "org.quartz.JobBuilder:org.quartz.JobBuilder withIdentity(java.lang.String,java.lang.String)",
                "org.quartz.impl.StdSchedulerFactory:void <init>()",
                "org.quartz.utils.counter.sampled.TimeStampedCounterValue:java.lang.String toString()",
                "org.quartz.impl.JobDetailImpl:org.quartz.JobKey getKey()",
                "org.quartz.core.QuartzSchedulerThread:void run()",
                "org.quartz.TriggerBuilder:org.quartz.TriggerBuilder withSchedule(org.quartz.ScheduleBuilder)",
                "org.quartz.impl.triggers.CronTriggerImpl:void <init>()",
                "org.quartz.impl.triggers.AbstractTrigger:java.lang.String toString()",
                "org.quartz.utils.DirtyFlagMap:void clear()",
                "org.quartz.CronScheduleBuilder:org.quartz.CronScheduleBuilder cronSchedule(java.lang.String)",
                "org.quartz.core.JobRunShell:void run()",
                "org.quartz.utils.DirtyFlagMap$DirtyFlagMapEntrySet:java.lang.Object[] toArray()",
                "org.quartz.utils.DirtyFlagMap$DirtyFlagCollection:java.util.Iterator iterator()",
                "org.quartz.impl.StdScheduler:boolean isStarted()",
                "org.quartz.impl.jdbcjobstore.JobStoreSupport$MisfireHandler:void run()",
                "org.quartz.TriggerKey:org.quartz.TriggerKey triggerKey(java.lang.String,java.lang.String)",
                "org.quartz.impl.StdScheduler:boolean checkExists(org.quartz.TriggerKey)",
                "org.quartz.impl.triggers.AbstractTrigger:java.lang.Object clone()",
                "org.quartz.impl.JobDetailImpl:java.lang.Object clone()",
                "org.quartz.utils.DirtyFlagMap$DirtyFlagIterator:java.lang.Object next()",
                "org.quartz.utils.Key:java.lang.String getName()",
                "org.quartz.utils.Key:java.lang.String toString()",
                "org.quartz.impl.RemoteScheduler:boolean unscheduleJob(org.quartz.TriggerKey)"
            ]
        },
        "org.apache.httpcomponents:httpclient:4.3.6": {
            "used-method num": 82,
            "used method": [
                "org.apache.http.impl.execchain.ResponseEntityProxy:java.lang.String toString()",
                "org.apache.http.impl.client.HttpClientBuilder:org.apache.http.impl.client.CloseableHttpClient build()",
                "org.apache.http.client.methods.HttpPost:void <init>(java.lang.String)",
                "org.apache.http.cookie.CookieOrigin:java.lang.String toString()",
                "org.apache.http.impl.client.BasicCredentialsProvider:java.lang.String toString()",
                "org.apache.http.auth.NTCredentials:java.lang.String toString()",
                "org.apache.http.impl.client.RedirectLocations:java.net.URI get(int)",
                "org.apache.http.auth.AuthOption:java.lang.String toString()",
                "org.ietf.jgss.Oid:java.lang.String toString()",
                "org.apache.http.client.methods.HttpRequestBase:java.net.URI getURI()",
                "org.apache.http.conn.ssl.SSLConnectionSocketFactory:void <init>(javax.net.ssl.SSLContext)",
                "org.apache.http.impl.cookie.BasicClientCookie:java.lang.String toString()",
                "org.apache.http.client.config.RequestConfig$Builder:org.apache.http.client.config.RequestConfig$Builder setConnectTimeout(int)",
                "org.apache.http.conn.ssl.SSLSocketFactory:void <clinit>()",
                "org.apache.http.impl.client.HttpClients:org.apache.http.impl.client.HttpClientBuilder custom()",
                "org.apache.http.auth.UsernamePasswordCredentials:java.lang.String toString()",
                "org.apache.http.client.entity.UrlEncodedFormEntity:void <init>(java.util.List,java.lang.String)",
                "org.apache.http.impl.execchain.RequestEntityProxy:java.lang.String toString()",
                "org.apache.http.client.methods.HttpRequestBase:java.lang.String toString()",
                "org.ietf.jgss.GSSException:java.lang.String getMessage()",
                "org.apache.http.conn.HttpInetSocketAddress:java.lang.String toString()",
                "org.apache.http.auth.AuthScope:java.lang.String toString()",
                "org.apache.http.impl.client.AbstractHttpClient:org.apache.http.params.HttpParams getParams()",
                "org.apache.http.client.config.RequestConfig:org.apache.http.client.config.RequestConfig$Builder custom()",
                "org.apache.http.client.config.RequestConfig$Builder:org.apache.http.client.config.RequestConfig$Builder setConnectionRequestTimeout(int)",
                "org.apache.http.client.methods.HttpEntityEnclosingRequestBase:java.lang.Object clone()",
                "org.apache.http.client.utils.URIBuilder:java.lang.String toString()",
                "org.apache.http.client.methods.HttpRequestBase:void releaseConnection()",
                "org.apache.http.client.methods.HttpGet:void <init>(java.lang.String)",
                "org.apache.http.impl.client.RedirectLocations:int size()",
                "org.apache.http.impl.auth.AuthSchemeBase:java.lang.String toString()",
                "org.apache.http.impl.client.RedirectLocations:boolean contains(java.lang.Object)",
                "org.apache.http.client.config.RequestConfig$Builder:org.apache.http.client.config.RequestConfig$Builder setSocketTimeout(int)",
                "org.apache.http.client.entity.DeflateInputStream$DeflateStream:void close()",
                "org.apache.http.impl.conn.CPoolProxy:java.lang.String toString()",
                "org.apache.http.conn.ssl.SSLSocketFactory:void <init>(javax.net.ssl.SSLContext,org.apache.http.conn.ssl.X509HostnameVerifier)",
                "org.apache.http.impl.conn.PoolingHttpClientConnectionManager:void <init>(org.apache.http.config.Registry)",
                "org.apache.http.auth.BasicUserPrincipal:java.lang.String getName()",
                "org.apache.http.impl.client.BasicCookieStore:java.lang.String toString()",
                "org.apache.http.impl.conn.PoolingHttpClientConnectionManager:void setDefaultConnectionConfig(org.apache.http.config.ConnectionConfig)",
                "org.apache.http.auth.BasicUserPrincipal:java.lang.String toString()",
                "org.apache.http.impl.auth.HttpEntityDigester:void close()",
                "org.apache.http.conn.ssl.SSLConnectionSocketFactory:void <clinit>()",
                "org.apache.http.conn.routing.RouteTracker:java.lang.String toString()",
                "org.apache.http.impl.client.InternalHttpClient:org.apache.http.params.HttpParams getParams()",
                "org.apache.http.client.config.RequestConfig:org.apache.http.client.config.RequestConfig clone()",
                "org.apache.http.conn.ssl.SSLContexts:org.apache.http.conn.ssl.SSLContextBuilder custom()",
                "org.apache.http.impl.conn.LoggingOutputStream:void close()",
                "org.apache.http.impl.execchain.HttpResponseProxy:org.apache.http.HttpEntity getEntity()",
                "org.apache.http.conn.scheme.Scheme:java.lang.String toString()",
                "org.apache.http.conn.ssl.SSLContextBuilder:javax.net.ssl.SSLContext build()",
                "org.apache.http.impl.conn.PoolingHttpClientConnectionManager:void setDefaultSocketConfig(org.apache.http.config.SocketConfig)",
                "org.apache.http.client.config.RequestConfig:java.lang.String toString()",
                "org.apache.http.impl.cookie.BasicClientCookie:java.lang.Object clone()",
                "org.apache.http.client.methods.HttpRequestWrapper:java.lang.String toString()",
                "org.apache.http.client.methods.AbstractExecutionAwareRequest:java.lang.Object clone()",
                "org.apache.http.conn.scheme.Scheme:void <init>(java.lang.String,int,org.apache.http.conn.scheme.SchemeSocketFactory)",
                "org.apache.http.conn.EofSensorInputStream:void close()",
                "org.apache.http.impl.auth.DigestScheme:java.lang.String toString()",
                "org.apache.http.impl.cookie.BasicClientCookie2:java.lang.Object clone()",
                "org.apache.http.impl.client.AbstractHttpClient:org.apache.http.conn.ClientConnectionManager getConnectionManager()",
                "org.apache.http.conn.routing.HttpRoute:java.lang.Object clone()",
                "org.apache.http.impl.client.InternalHttpClient$1:org.apache.http.conn.scheme.SchemeRegistry getSchemeRegistry()",
                "org.apache.http.auth.AuthState:java.lang.String toString()",
                "org.apache.http.conn.socket.PlainConnectionSocketFactory:void <clinit>()",
                "org.apache.http.client.config.RequestConfig$Builder:org.apache.http.client.config.RequestConfig build()",
                "org.apache.http.conn.ssl.PrivateKeyDetails:java.lang.String toString()",
                "org.apache.http.impl.client.DefaultHttpClient:void <init>()",
                "org.apache.http.conn.routing.HttpRoute:java.lang.String toString()",
                "org.apache.http.client.methods.HttpEntityEnclosingRequestBase:void setEntity(org.apache.http.HttpEntity)",
                "org.apache.http.conn.routing.RouteTracker:java.lang.Object clone()",
                "org.apache.http.impl.client.CloseableHttpClient:org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext)",
                "org.apache.http.impl.execchain.HttpResponseProxy:org.apache.http.StatusLine getStatusLine()",
                "org.apache.http.impl.client.CloseableHttpClient:org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)",
                "org.apache.http.impl.execchain.HttpResponseProxy:java.lang.String toString()",
                "org.ietf.jgss.GSSException:java.lang.String toString()",
                "org.apache.http.client.entity.DeflateInputStream:void close()",
                "org.apache.http.conn.scheme.SchemeRegistry:org.apache.http.conn.scheme.Scheme register(org.apache.http.conn.scheme.Scheme)",
                "org.apache.http.impl.conn.LoggingInputStream:void close()",
                "org.apache.http.client.config.RequestConfig:void <clinit>()",
                "org.apache.http.impl.client.BasicAuthCache:java.lang.String toString()",
                "org.apache.http.impl.client.MinimalHttpClient$1:org.apache.http.conn.scheme.SchemeRegistry getSchemeRegistry()"
            ],
            "CVE": [
                "CVE-2020-13956"
            ],
            "used vul-method": [
                "org.apache.http.impl.client.CloseableHttpClient:org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext)",
                "org.apache.http.impl.client.CloseableHttpClient:org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)"
            ],
            "vul-called frequency": 5,
            "related vul root method": {
                "CVE-2020-13956": [
                    "org.apache.http.client.utils.URIUtils:org.apache.http.HttpHost extractHost(java.net.URI)"
                ]
            },
            "CVE-API": {
                "CVE-2020-13956": [
                    "org.apache.http.impl.client.CloseableHttpClient:org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext)",
                    "org.apache.http.impl.client.CloseableHttpClient:org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)"
                ]
            }
        },
        "commons-fileupload:commons-fileupload:1.2.2": {
            "used-method num": 4,
            "used method": [
                "org.apache.commons.fileupload.util.LimitedInputStream:void close()",
                "org.apache.commons.fileupload.MultipartStream$ItemInputStream:void close()",
                "org.apache.commons.fileupload.servlet.ServletRequestContext:java.lang.String toString()",
                "org.apache.commons.fileupload.disk.DiskFileItem:java.lang.String toString()"
            ]
        },
        "org.apache.poi:poi-ooxml:3.10-FINAL": {
            "used-method num": 64,
            "used method": [
                "org.apache.poi.xssf.usermodel.XSSFCell:void setCellType(int)",
                "org.apache.poi.xssf.usermodel.XSSFSheet:int getLastRowNum()",
                "org.apache.poi.xssf.streaming.SXSSFRow$CellIterator:boolean hasNext()",
                "org.apache.poi.xssf.usermodel.XSSFWorkbook:void <clinit>()",
                "org.apache.poi.xssf.usermodel.XSSFSimpleShape:java.util.Iterator iterator()",
                "org.apache.poi.openxml4j.util.ZipInputStreamZipEntrySource$EntryEnumerator:java.util.zip.ZipEntry nextElement()",
                "org.apache.poi.xssf.usermodel.XSSFRow:org.apache.poi.xssf.usermodel.XSSFCell createCell(int)",
                "org.apache.poi.xssf.usermodel.XSSFCell:void setCellValue(java.lang.String)",
                "org.apache.poi.openxml4j.util.ZipInputStreamZipEntrySource$EntryEnumerator:boolean hasMoreElements()",
                "org.apache.poi.xssf.streaming.SXSSFSheet:int getLastRowNum()",
                "org.apache.poi.xssf.usermodel.XSSFTextParagraph:java.lang.String toString()",
                "org.apache.poi.xssf.streaming.SXSSFRow:java.util.Iterator cellIterator()",
                "org.apache.poi.xssf.streaming.SXSSFRow:org.apache.poi.ss.usermodel.Cell createCell(int)",
                "org.apache.poi.xssf.usermodel.XSSFTextRun:java.lang.String toString()",
                "org.apache.poi.xssf.usermodel.XSSFCellStyle:java.lang.Object clone()",
                "org.apache.poi.xssf.streaming.SXSSFCell:void setCellType(int)",
                "org.apache.poi.openxml4j.opc.PackagePartName:java.lang.String toString()",
                "org.apache.poi.xssf.streaming.SXSSFRow$CellIterator:org.apache.poi.ss.usermodel.Cell next()",
                "org.apache.poi.POIXMLDocumentPart:void <clinit>()",
                "org.apache.poi.openxml4j.opc.PackagePartCollection:java.lang.Object put(java.lang.Object,java.lang.Object)",
                "org.apache.poi.xssf.streaming.SXSSFSheet:org.apache.poi.ss.usermodel.Row createRow(int)",
                "org.apache.poi.xssf.usermodel.XSSFCell:void setCellValue(double)",
                "org.apache.poi.xssf.usermodel.XSSFRichTextString:java.lang.String toString()",
                "org.apache.poi.xssf.usermodel.XSSFCell:java.lang.String toString()",
                "org.apache.poi.xssf.usermodel.XSSFRow:java.util.Iterator iterator()",
                "org.apache.poi.xssf.streaming.SXSSFSheet:java.util.Iterator iterator()",
                "org.apache.poi.xssf.streaming.SXSSFCell:int getCellType()",
                "org.apache.poi.xssf.usermodel.XSSFSheet:org.apache.poi.xssf.usermodel.XSSFRow getRow(int)",
                "org.apache.poi.xssf.streaming.SXSSFCell:java.lang.String toString()",
                "org.apache.poi.xssf.usermodel.XSSFFont:java.lang.String toString()",
                "org.apache.poi.openxml4j.opc.internal.ContentType:java.lang.String toString()",
                "org.apache.poi.xssf.usermodel.XSSFDialogsheet:org.apache.poi.xssf.usermodel.XSSFRow createRow(int)",
                "org.apache.poi.xssf.streaming.SXSSFCell:void setCellValue(double)",
                "org.apache.poi.xssf.streaming.SXSSFRow$FilledCellIterator:boolean hasNext()",
                "org.apache.poi.xssf.usermodel.XSSFRow:java.lang.String toString()",
                "org.apache.poi.xssf.streaming.SXSSFWorkbook:org.apache.poi.ss.usermodel.Sheet createSheet()",
                "org.apache.poi.xssf.usermodel.XSSFWorkbook:org.apache.poi.xssf.usermodel.XSSFSheet getSheetAt(int)",
                "org.apache.poi.xssf.streaming.SXSSFSheet:org.apache.poi.ss.usermodel.Row getRow(int)",
                "org.apache.poi.openxml4j.opc.PackageRelationshipCollection:java.util.Iterator iterator()",
                "org.apache.poi.xssf.streaming.SXSSFCell:double getNumericCellValue()",
                "org.apache.poi.openxml4j.opc.internal.MemoryPackagePartOutputStream:void close()",
                "org.apache.poi.xssf.streaming.SXSSFCell:void setCellValue(boolean)",
                "org.apache.poi.xssf.usermodel.XSSFCell:int getCellType()",
                "org.apache.poi.xssf.usermodel.XSSFWorkbook:void <init>(java.io.InputStream)",
                "org.apache.poi.xssf.streaming.SXSSFCell:java.lang.String getStringCellValue()",
                "org.apache.poi.openxml4j.opc.PackageRelationship:java.lang.String toString()",
                "org.apache.poi.openxml4j.opc.PackagePartCollection:java.lang.Object clone()",
                "org.apache.poi.xssf.streaming.SXSSFWorkbook:void <init>()",
                "org.apache.poi.xssf.usermodel.XSSFCell:java.lang.String getStringCellValue()",
                "org.apache.poi.xssf.streaming.SXSSFRow:java.util.Iterator iterator()",
                "org.apache.poi.xssf.usermodel.XSSFWorkbook:java.util.Iterator iterator()",
                "org.apache.poi.xssf.usermodel.XSSFRow:java.util.Iterator cellIterator()",
                "org.apache.poi.xssf.usermodel.XSSFSheet:java.util.Iterator iterator()",
                "org.apache.poi.xssf.streaming.SXSSFWorkbook:void write(java.io.OutputStream)",
                "org.apache.poi.xssf.usermodel.XSSFCell:double getNumericCellValue()",
                "org.apache.poi.xssf.usermodel.XSSFClientAnchor:java.lang.String toString()",
                "org.apache.poi.xssf.usermodel.XSSFCell:boolean getBooleanCellValue()",
                "org.apache.poi.POIXMLDocumentPart:java.lang.String toString()",
                "org.apache.poi.openxml4j.opc.PackageRelationshipCollection:java.lang.String toString()",
                "org.apache.poi.xssf.streaming.SXSSFRow$FilledCellIterator:org.apache.poi.ss.usermodel.Cell next()",
                "org.apache.poi.xssf.usermodel.XSSFTextParagraph:java.util.Iterator iterator()",
                "org.apache.poi.xssf.streaming.SXSSFCell:void setCellValue(java.lang.String)",
                "org.apache.poi.xssf.streaming.SXSSFCell:boolean getBooleanCellValue()",
                "org.apache.poi.openxml4j.opc.PackagePart:java.lang.String toString()"
            ],
            "CVE": [
                "CVE-2019-12415"
            ],
            "used vul-method": [
                "org.apache.poi.xssf.streaming.SXSSFRow:org.apache.poi.ss.usermodel.Cell createCell(int)",
                "org.apache.poi.xssf.streaming.SXSSFCell:void setCellType(int)",
                "org.apache.poi.xssf.streaming.SXSSFSheet:org.apache.poi.ss.usermodel.Row createRow(int)",
                "org.apache.poi.xssf.streaming.SXSSFCell:java.lang.String toString()",
                "org.apache.poi.xssf.streaming.SXSSFCell:void setCellValue(double)",
                "org.apache.poi.xssf.streaming.SXSSFCell:void setCellValue(boolean)",
                "org.apache.poi.xssf.streaming.SXSSFCell:java.lang.String getStringCellValue()",
                "org.apache.poi.xssf.streaming.SXSSFCell:void setCellValue(java.lang.String)"
            ],
            "vul-called frequency": 10,
            "related vul root method": {
                "CVE-2019-12415": [
                    "org.apache.poi.xssf.streaming.SXSSFCell:java.lang.String getStringCellValue()",
                    "org.apache.poi.xssf.streaming.SheetDataWriter:void writeCell(int,org.apache.poi.ss.usermodel.Cell)",
                    "org.apache.poi.xssf.streaming.SXSSFCell:void setCellValue(java.lang.String)"
                ]
            },
            "CVE-API": {
                "CVE-2019-12415": [
                    "org.apache.poi.xssf.streaming.SXSSFRow:org.apache.poi.ss.usermodel.Cell createCell(int)",
                    "org.apache.poi.xssf.streaming.SXSSFCell:void setCellType(int)",
                    "org.apache.poi.xssf.streaming.SXSSFSheet:org.apache.poi.ss.usermodel.Row createRow(int)",
                    "org.apache.poi.xssf.streaming.SXSSFCell:java.lang.String toString()",
                    "org.apache.poi.xssf.streaming.SXSSFCell:void setCellValue(double)",
                    "org.apache.poi.xssf.streaming.SXSSFCell:void setCellValue(boolean)",
                    "org.apache.poi.xssf.streaming.SXSSFCell:java.lang.String getStringCellValue()",
                    "org.apache.poi.xssf.streaming.SXSSFCell:void setCellValue(java.lang.String)"
                ]
            }
        }
    }
}
{
    "project name": "vietj_retrofit-vertx",
    "vulnerable dependencies": {
        "io.vertx:vertx-core:3.8.3": {
            "used-method num": 81,
            "used method": [
                "io.vertx.core.http.HttpClientOptions:io.vertx.core.http.HttpClientOptions setSsl(boolean)",
                "io.vertx.core.http.impl.headers.VertxHttpHeaders$MapEntry:java.lang.CharSequence getKey()",
                "io.vertx.core.http.HttpClientOptions:void <init>()",
                "io.vertx.core.http.HttpMethod:io.vertx.core.http.HttpMethod valueOf(java.lang.String)",
                "io.vertx.core.impl.VertxImpl:io.vertx.core.http.HttpClient createHttpClient(io.vertx.core.http.HttpClientOptions)",
                "io.vertx.core.http.HttpClientOptions:void <clinit>()",
                "io.vertx.core.http.impl.HttpClientRequestPushPromise:io.vertx.core.http.HttpClientRequest putHeader(java.lang.String,java.lang.String)",
                "io.vertx.core.Future:void <clinit>()",
                "io.vertx.core.http.impl.headers.VertxHttpHeaders$2:java.util.Map$Entry next()",
                "io.vertx.core.http.impl.headers.VertxHttpHeaders$1:java.lang.String getValue()",
                "io.vertx.core.http.HttpClientOptions:io.vertx.core.http.HttpClientOptions setProxyOptions(io.vertx.core.net.ProxyOptions)",
                "io.vertx.core.net.ProxyOptions:io.vertx.core.net.ProxyOptions setUsername(java.lang.String)",
                "io.vertx.core.http.CaseInsensitiveHeaders:io.vertx.core.MultiMap add(java.lang.String,java.lang.String)",
                "io.vertx.core.net.ProxyOptions:io.vertx.core.net.ProxyOptions setHost(java.lang.String)",
                "io.vertx.core.http.impl.HttpClientRequestPushPromise:void end()",
                "io.vertx.core.http.impl.HttpClientResponseImpl:int statusCode()",
                "io.vertx.core.http.impl.headers.VertxHttpHeaders$1:java.lang.String getKey()",
                "io.vertx.core.impl.CompositeFutureImpl:boolean tryComplete(java.lang.Object)",
                "io.vertx.core.json.JsonObject$Iter:java.util.Map$Entry next()",
                "io.vertx.core.http.impl.headers.VertxHttpHeaders:io.vertx.core.http.impl.headers.VertxHttpHeaders add(java.lang.String,java.lang.String)",
                "io.vertx.core.json.JsonObject$Iter:boolean hasNext()",
                "io.vertx.core.json.JsonArray$Iter:java.lang.Object next()",
                "io.vertx.core.net.TCPSSLOptions:void <clinit>()",
                "io.vertx.core.http.impl.HttpClientRequestImpl:io.vertx.core.http.HttpClientRequest putHeader(java.lang.String,java.lang.String)",
                "io.vertx.core.net.JksOptions:io.vertx.core.net.JksOptions setPassword(java.lang.String)",
                "io.vertx.core.http.CaseInsensitiveHeaders$MapEntry:java.lang.String getKey()",
                "io.vertx.core.net.ProxyType:void <clinit>()",
                "io.vertx.core.impl.VertxImpl:io.vertx.core.http.HttpClient createHttpClient()",
                "io.vertx.core.http.impl.HttpClientResponseImpl:java.lang.String getHeader(java.lang.String)",
                "io.vertx.core.json.JsonObject$Entry:java.lang.Object getValue()",
                "io.vertx.core.net.PfxOptions:io.vertx.core.net.PfxOptions setPath(java.lang.String)",
                "io.vertx.core.http.HttpClientOptions:io.vertx.core.http.HttpClientOptions setPfxTrustOptions(io.vertx.core.net.PfxOptions)",
                "io.vertx.core.net.PemTrustOptions:void <init>()",
                "io.vertx.core.http.CaseInsensitiveHeaders$MapEntry:java.lang.String getValue()",
                "io.vertx.core.http.HttpClientOptions:io.vertx.core.http.HttpClientOptions setPemTrustOptions(io.vertx.core.net.PemTrustOptions)",
                "io.vertx.core.http.HttpMethod:void <clinit>()",
                "io.vertx.core.http.impl.Http2HeadersAdaptor:io.vertx.core.MultiMap add(java.lang.String,java.lang.String)",
                "io.vertx.core.shareddata.impl.LocalMapImpl$1:java.lang.Object getKey()",
                "io.vertx.core.impl.utils.ConcurrentCyclicSequence:java.lang.Object next()",
                "io.vertx.core.net.ProxyOptions:void <init>()",
                "io.vertx.core.http.impl.headers.VertxHttpHeaders:java.util.Iterator iterator()",
                "io.vertx.core.http.impl.HttpClientRequestBase:io.vertx.core.http.HttpClientRequest exceptionHandler(io.vertx.core.Handler)",
                "io.vertx.core.http.HttpClientOptions:io.vertx.core.http.HttpClientOptions setTrustStoreOptions(io.vertx.core.net.JksOptions)",
                "io.vertx.core.http.CaseInsensitiveHeaders:java.util.Iterator iterator()",
                "io.vertx.core.http.impl.HttpClientRequestPushPromise:io.vertx.core.http.HttpClientRequest write(io.vertx.core.buffer.Buffer)",
                "io.vertx.core.http.impl.HttpClientRequestImpl:io.vertx.core.MultiMap headers()",
                "io.vertx.core.http.impl.headers.VertxHttpHeaders$2:boolean hasNext()",
                "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClientRequest requestAbs(io.vertx.core.http.HttpMethod,java.lang.String,io.vertx.core.Handler)",
                "io.vertx.core.impl.CompositeFutureImpl:boolean tryFail(java.lang.Throwable)",
                "io.vertx.core.http.HttpVersion:void <clinit>()",
                "io.vertx.core.buffer.Buffer:io.vertx.core.buffer.Buffer buffer(byte[])",
                "io.vertx.core.net.JksOptions:io.vertx.core.net.JksOptions setPath(java.lang.String)",
                "io.vertx.core.impl.CompositeFutureImpl:boolean succeeded()",
                "io.vertx.core.http.impl.HttpClientRequestImpl:void end()",
                "io.vertx.core.json.JsonArray$Iter:boolean hasNext()",
                "io.vertx.core.http.impl.HttpClientRequestImpl:io.vertx.core.http.HttpClientRequest write(io.vertx.core.buffer.Buffer)",
                "io.vertx.core.buffer.Buffer:void <clinit>()",
                "io.vertx.core.http.impl.HttpClientResponseImpl:io.vertx.core.MultiMap headers()",
                "io.vertx.core.json.JsonObject$Entry:java.lang.String getKey()",
                "io.vertx.core.net.PfxOptions:void <init>()",
                "io.vertx.core.impl.CompositeFutureImpl:io.vertx.core.CompositeFuture result()",
                "io.vertx.core.net.PfxOptions:io.vertx.core.net.PfxOptions setPassword(java.lang.String)",
                "io.vertx.core.net.ProxyOptions:io.vertx.core.net.ProxyOptions setPort(int)",
                "io.vertx.core.impl.CompositeFutureImpl:java.lang.Throwable cause()",
                "io.vertx.core.impl.CompositeFutureImpl:io.vertx.core.CompositeFuture setHandler(io.vertx.core.Handler)",
                "io.vertx.core.Vertx:void <clinit>()",
                "io.vertx.core.net.PemTrustOptions:io.vertx.core.net.PemTrustOptions addCertPath(java.lang.String)",
                "io.vertx.core.net.ProxyOptions:io.vertx.core.net.ProxyOptions setPassword(java.lang.String)",
                "io.vertx.core.shareddata.impl.LocalMapImpl$1:java.lang.Object getValue()",
                "io.vertx.core.Future:io.vertx.core.Future future()",
                "io.vertx.core.http.impl.HttpClientResponseImpl:io.vertx.core.http.HttpClientResponse exceptionHandler(io.vertx.core.Handler)",
                "io.vertx.core.http.impl.Http2HeadersAdaptor$2$1:java.lang.String next()",
                "io.vertx.core.http.impl.HttpClientResponseImpl:io.vertx.core.http.HttpClientResponse bodyHandler(io.vertx.core.Handler)",
                "io.vertx.core.http.impl.headers.VertxHttpHeaders$MapEntry:java.lang.CharSequence getValue()",
                "io.vertx.core.http.impl.HeadersAdaptor:io.vertx.core.MultiMap add(java.lang.String,java.lang.String)",
                "io.vertx.core.net.impl.VertxEventLoopGroup$EventLoopIterator:io.netty.util.concurrent.EventExecutor next()",
                "io.vertx.core.net.JksOptions:void <init>()",
                "io.vertx.core.http.impl.Http2HeadersAdaptor:java.util.Iterator iterator()",
                "io.vertx.core.http.HttpClientOptions:io.vertx.core.http.HttpClientOptions setUseAlpn(boolean)",
                "io.vertx.core.http.HttpClientOptions:io.vertx.core.http.HttpClientOptions setProtocolVersion(io.vertx.core.http.HttpVersion)",
                "io.vertx.core.net.ProxyOptions:io.vertx.core.net.ProxyOptions setType(io.vertx.core.net.ProxyType)"
            ]
        },
        "junit:junit:4.12": {
            "used-method num": 0,
            "used method": []
        }
    }
}
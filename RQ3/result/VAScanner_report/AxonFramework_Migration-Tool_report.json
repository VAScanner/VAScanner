{
    "project name": "AxonFramework_Migration-Tool",
    "vulnerable dependencies": {
        "dom4j:dom4j:1.6.1": {
            "used-method num": 42,
            "used method": [
                "org.dom4j.tree.AbstractElement:org.dom4j.Element addElement(java.lang.String)",
                "org.dom4j.tree.ContentListFacade:boolean isEmpty()",
                "org.dom4j.tree.ConcurrentReaderHashMap:java.util.Set keySet()",
                "org.dom4j.tree.AbstractElement:org.dom4j.Element addAttribute(java.lang.String,java.lang.String)",
                "org.dom4j.tree.AbstractElement:java.lang.String attributeValue(java.lang.String)",
                "org.dom4j.tree.DefaultDocument:org.dom4j.Element getRootElement()",
                "org.dom4j.tree.AbstractProcessingInstruction:java.lang.String toString()",
                "org.dom4j.tree.AbstractElement:void setText(java.lang.String)",
                "org.dom4j.tree.ConcurrentReaderHashMap$HashIterator:java.lang.Object next()",
                "org.dom4j.QName:java.lang.String toString()",
                "org.dom4j.Namespace:java.lang.String toString()",
                "org.dom4j.tree.AbstractBranch:java.lang.String getTextTrim()",
                "org.dom4j.tree.ConcurrentReaderHashMap$EntrySet:java.util.Iterator iterator()",
                "org.dom4j.tree.AbstractText:java.lang.String toString()",
                "org.dom4j.xpath.DefaultXPath:java.lang.String toString()",
                "org.dom4j.tree.ConcurrentReaderHashMap:boolean containsKey(java.lang.Object)",
                "org.dom4j.tree.AbstractAttribute:java.lang.String toString()",
                "org.dom4j.tree.AbstractEntity:java.lang.String toString()",
                "org.dom4j.tree.AbstractElement:void setName(java.lang.String)",
                "org.dom4j.tree.AbstractElement:java.util.List elements()",
                "org.dom4j.tree.ConcurrentReaderHashMap$HashIterator:boolean hasNext()",
                "org.dom4j.tree.ConcurrentReaderHashMap:java.lang.Object get(java.lang.Object)",
                "org.dom4j.io.STAXEventReader:void <init>()",
                "org.dom4j.tree.AbstractCDATA:java.lang.String toString()",
                "org.dom4j.tree.AbstractElement:java.lang.String asXML()",
                "org.dom4j.tree.ConcurrentReaderHashMap:java.util.Collection values()",
                "org.dom4j.tree.ContentListFacade:java.lang.Object get(int)",
                "org.dom4j.tree.ConcurrentReaderHashMap$KeySet:java.util.Iterator iterator()",
                "org.dom4j.tree.AbstractElement:java.lang.String toString()",
                "org.dom4j.tree.AbstractElement:void add(org.dom4j.Element)",
                "org.dom4j.tree.AbstractElement:java.lang.String getName()",
                "org.dom4j.tree.AbstractDocument:java.lang.String toString()",
                "org.dom4j.tree.DefaultElement:boolean remove(org.dom4j.Attribute)",
                "org.dom4j.tree.ConcurrentReaderHashMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
                "org.dom4j.tree.ConcurrentReaderHashMap$Values:java.util.Iterator iterator()",
                "org.dom4j.io.STAXEventReader:org.dom4j.Document readDocument(java.io.Reader)",
                "org.dom4j.tree.AbstractComment:java.lang.String toString()",
                "org.dom4j.tree.AbstractDocumentType:java.lang.String toString()",
                "org.dom4j.tree.AbstractElement:java.util.Iterator elementIterator()",
                "org.dom4j.tree.DefaultElement:org.dom4j.Attribute attribute(java.lang.String)",
                "org.dom4j.tree.DefaultElement:org.dom4j.Element element(java.lang.String)",
                "org.dom4j.tree.AbstractElement:boolean remove(org.dom4j.Element)"
            ]
        }
    }
}
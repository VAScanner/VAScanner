{
    "project name": "vert-x3_vertx-guide-for-java-devs",
    "modules": {
        "io.vertx:wiki-step-1": {
            "vulnerable dependencies": {
                "io.vertx:vertx-core:3.8.2": {
                    "used-method num": 24,
                    "used method": [
                        "io.vertx.core.http.impl.HttpServerResponseImpl:void end()",
                        "io.vertx.core.impl.VertxImpl:io.vertx.core.http.HttpServer createHttpServer()",
                        "io.vertx.core.json.JsonArray:io.vertx.core.json.JsonArray add(java.lang.Integer)",
                        "io.vertx.core.http.impl.HttpServerImpl:io.vertx.core.http.HttpServer requestHandler(io.vertx.core.Handler)",
                        "io.vertx.core.json.JsonArray:void <init>()",
                        "io.vertx.core.http.impl.HttpServerImpl:io.vertx.core.http.HttpServer listen(int,io.vertx.core.Handler)",
                        "io.vertx.core.Future:io.vertx.core.Future compose(java.util.function.Function)",
                        "io.vertx.core.http.impl.HttpServerResponseImpl:io.vertx.core.http.HttpServerResponse setStatusCode(int)",
                        "io.vertx.core.json.JsonObject:io.vertx.core.json.JsonObject put(java.lang.String,java.lang.String)",
                        "io.vertx.core.AbstractVerticle:void <init>()",
                        "io.vertx.core.impl.CompositeFutureImpl:boolean succeeded()",
                        "io.vertx.core.http.impl.HttpServerResponseImpl:void end(io.vertx.core.buffer.Buffer)",
                        "io.vertx.core.http.impl.Http2ServerRequestImpl:java.lang.String getParam(java.lang.String)",
                        "io.vertx.core.http.impl.HttpServerRequestImpl:java.lang.String getParam(java.lang.String)",
                        "io.vertx.core.impl.CompositeFutureImpl:io.vertx.core.CompositeFuture result()",
                        "io.vertx.core.impl.CompositeFutureImpl:java.lang.Throwable cause()",
                        "io.vertx.core.json.JsonObject:io.vertx.core.json.JsonObject put(java.lang.String,java.lang.Integer)",
                        "io.vertx.core.json.JsonArray:io.vertx.core.json.JsonArray add(java.lang.String)",
                        "io.vertx.core.impl.CompositeFutureImpl:io.vertx.core.CompositeFuture setHandler(io.vertx.core.Handler)",
                        "io.vertx.core.json.JsonArray:java.lang.String getString(int)",
                        "io.vertx.core.Promise:io.vertx.core.Promise promise()",
                        "io.vertx.core.http.impl.HttpServerResponseImpl:io.vertx.core.http.impl.HttpServerResponseImpl putHeader(java.lang.String,java.lang.String)",
                        "io.vertx.core.json.JsonObject:void <init>()",
                        "io.vertx.core.json.JsonArray:java.lang.Integer getInteger(int)"
                    ]
                },
                "io.vertx:vertx-web:3.8.2": {
                    "used-method num": 11,
                    "used method": [
                        "io.vertx.ext.web.handler.BodyHandler:io.vertx.ext.web.handler.BodyHandler create()",
                        "io.vertx.ext.web.impl.RoutingContextWrapper:io.vertx.core.http.HttpServerResponse response()",
                        "io.vertx.ext.web.impl.RoutingContextDecorator:void fail(java.lang.Throwable)",
                        "io.vertx.ext.web.impl.RoutingContextImpl:java.util.Map data()",
                        "io.vertx.ext.web.impl.RoutingContextImpl:io.vertx.core.http.HttpServerRequest request()",
                        "io.vertx.ext.web.impl.RouteImpl:io.vertx.ext.web.Route handler(io.vertx.core.Handler)",
                        "io.vertx.ext.web.impl.RoutingContextImpl:void fail(java.lang.Throwable)",
                        "io.vertx.ext.web.impl.RoutingContextWrapper:void fail(java.lang.Throwable)",
                        "io.vertx.ext.web.impl.RoutingContextImpl:io.vertx.ext.web.RoutingContext put(java.lang.String,java.lang.Object)",
                        "io.vertx.ext.web.impl.RoutingContextImpl:io.vertx.core.http.HttpServerResponse response()",
                        "io.vertx.ext.web.Router:io.vertx.ext.web.Router router(io.vertx.core.Vertx)"
                    ]
                }
            }
        },
        "io.vertx:wiki-step-2": {
            "vulnerable dependencies": {
                "io.vertx:vertx-core:3.8.2": {
                    "used-method num": 60,
                    "used method": [
                        "io.vertx.core.eventbus.impl.MessageImpl:void fail(int,java.lang.String)",
                        "io.vertx.core.json.JsonObject:java.lang.Boolean getBoolean(java.lang.String)",
                        "io.vertx.core.http.impl.Http2HeadersAdaptor:java.lang.String get(java.lang.String)",
                        "io.vertx.core.http.impl.HeadersAdaptor:java.lang.String get(java.lang.String)",
                        "io.vertx.core.http.impl.HttpServerImpl:io.vertx.core.http.HttpServer requestHandler(io.vertx.core.Handler)",
                        "io.vertx.core.impl.VertxImpl:void deployVerticle(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
                        "io.vertx.core.json.JsonArray:java.util.List getList()",
                        "io.vertx.core.net.JksOptions:io.vertx.core.net.JksOptions clone()",
                        "io.vertx.core.json.JsonObject:io.vertx.core.json.JsonObject put(java.lang.String,java.lang.String)",
                        "io.vertx.core.http.CaseInsensitiveHeaders:boolean contains(java.lang.String)",
                        "io.vertx.core.eventbus.impl.clustered.ClusteredMessage:io.vertx.core.MultiMap headers()",
                        "io.vertx.core.DeploymentOptions:void <init>()",
                        "io.vertx.core.net.PfxOptions:io.vertx.core.net.PfxOptions clone()",
                        "io.vertx.core.eventbus.impl.MessageImpl:void reply(java.lang.Object)",
                        "io.vertx.core.json.JsonObject:java.lang.Integer getInteger(java.lang.String,java.lang.Integer)",
                        "io.vertx.core.eventbus.impl.MessageImpl:io.vertx.core.MultiMap headers()",
                        "io.vertx.core.AbstractVerticle:void <init>()",
                        "io.vertx.core.net.PemTrustOptions:io.vertx.core.net.PemTrustOptions clone()",
                        "io.vertx.core.http.impl.headers.VertxHttpHeaders:boolean contains(java.lang.String)",
                        "io.vertx.core.eventbus.impl.MessageImpl:java.lang.Object body()",
                        "io.vertx.core.http.impl.HttpServerResponseImpl:void end(io.vertx.core.buffer.Buffer)",
                        "io.vertx.core.http.CaseInsensitiveHeaders:java.lang.String get(java.lang.String)",
                        "io.vertx.core.http.impl.HttpServerRequestImpl:java.lang.String getParam(java.lang.String)",
                        "io.vertx.core.impl.CompositeFutureImpl:java.lang.Throwable cause()",
                        "io.vertx.core.json.JsonObject:io.vertx.core.json.JsonObject put(java.lang.String,java.lang.Integer)",
                        "io.vertx.core.net.JdkSSLEngineOptions:io.vertx.core.net.JdkSSLEngineOptions clone()",
                        "io.vertx.core.impl.CompositeFutureImpl:io.vertx.core.CompositeFuture setHandler(io.vertx.core.Handler)",
                        "io.vertx.core.eventbus.DeliveryOptions:io.vertx.core.eventbus.DeliveryOptions addHeader(java.lang.String,java.lang.String)",
                        "io.vertx.core.json.JsonArray:void <init>(java.util.List)",
                        "io.vertx.core.json.JsonObject:void <init>()",
                        "io.vertx.core.json.JsonArray:java.lang.Integer getInteger(int)",
                        "io.vertx.core.json.JsonObject:io.vertx.core.json.JsonObject put(java.lang.String,io.vertx.core.json.JsonArray)",
                        "io.vertx.core.net.OpenSSLEngineOptions:io.vertx.core.net.OpenSSLEngineOptions clone()",
                        "io.vertx.core.http.impl.HttpServerResponseImpl:void end()",
                        "io.vertx.core.json.JsonObject:io.vertx.core.json.JsonObject put(java.lang.String,java.lang.Boolean)",
                        "io.vertx.core.eventbus.impl.EventBusImpl:io.vertx.core.eventbus.MessageConsumer consumer(java.lang.String,io.vertx.core.Handler)",
                        "io.vertx.core.impl.VertxImpl:io.vertx.core.eventbus.EventBus eventBus()",
                        "io.vertx.core.impl.VertxImpl:io.vertx.core.http.HttpServer createHttpServer()",
                        "io.vertx.core.http.impl.Http2HeadersAdaptor:boolean contains(java.lang.String)",
                        "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.Handler)",
                        "io.vertx.core.json.JsonArray:void <init>()",
                        "io.vertx.core.http.impl.HttpServerImpl:io.vertx.core.http.HttpServer listen(int,io.vertx.core.Handler)",
                        "io.vertx.core.Future:io.vertx.core.Future compose(java.util.function.Function)",
                        "io.vertx.core.http.impl.HttpServerResponseImpl:io.vertx.core.http.HttpServerResponse setStatusCode(int)",
                        "io.vertx.core.json.JsonObject:java.lang.String getString(java.lang.String,java.lang.String)",
                        "io.vertx.core.eventbus.impl.clustered.ClusteredMessage:java.lang.Object body()",
                        "io.vertx.core.http.impl.headers.VertxHttpHeaders:java.lang.String get(java.lang.String)",
                        "io.vertx.core.json.JsonObject:io.vertx.core.json.JsonArray getJsonArray(java.lang.String)",
                        "io.vertx.core.impl.CompositeFutureImpl:boolean succeeded()",
                        "io.vertx.core.http.impl.Http2ServerRequestImpl:java.lang.String getParam(java.lang.String)",
                        "io.vertx.core.impl.CompositeFutureImpl:io.vertx.core.CompositeFuture result()",
                        "io.vertx.core.json.JsonObject:java.lang.String getString(java.lang.String)",
                        "io.vertx.core.json.JsonArray:io.vertx.core.json.JsonArray add(java.lang.String)",
                        "io.vertx.core.json.JsonArray:java.lang.String getString(int)",
                        "io.vertx.core.eventbus.DeliveryOptions:void <init>()",
                        "io.vertx.core.http.impl.Http2HeadersAdaptor$1:java.lang.String get(int)",
                        "io.vertx.core.Promise:io.vertx.core.Promise promise()",
                        "io.vertx.core.http.impl.HttpServerResponseImpl:io.vertx.core.http.impl.HttpServerResponseImpl putHeader(java.lang.String,java.lang.String)",
                        "io.vertx.core.net.PemKeyCertOptions:io.vertx.core.net.PemKeyCertOptions clone()",
                        "io.vertx.core.DeploymentOptions:io.vertx.core.DeploymentOptions setInstances(int)"
                    ],
                    "CVE": [
                        "CVE-2019-17640"
                    ],
                    "used vul-method": [
                        "io.vertx.core.eventbus.impl.MessageImpl:void fail(int,java.lang.String)",
                        "io.vertx.core.eventbus.impl.MessageImpl:void reply(java.lang.Object)"
                    ],
                    "vul-called frequency": 10,
                    "related vul root method": {
                        "CVE-2019-17640": [
                            "io.vertx.core.eventbus.impl.EventBusImpl:io.vertx.core.eventbus.ReplyException deliverMessageLocally(io.vertx.core.eventbus.impl.MessageImpl)"
                        ]
                    },
                    "CVE-API": {
                        "CVE-2019-17640": [
                            "io.vertx.core.eventbus.impl.MessageImpl:void fail(int,java.lang.String)",
                            "io.vertx.core.eventbus.impl.MessageImpl:void reply(java.lang.Object)"
                        ]
                    }
                },
                "io.vertx:vertx-web:3.8.2": {
                    "used-method num": 11,
                    "used method": [
                        "io.vertx.ext.web.impl.RoutingContextWrapper:io.vertx.core.http.HttpServerResponse response()",
                        "io.vertx.ext.web.impl.RoutingContextDecorator:void fail(java.lang.Throwable)",
                        "io.vertx.ext.web.impl.RoutingContextImpl:void fail(java.lang.Throwable)",
                        "io.vertx.ext.web.impl.RoutingContextImpl:io.vertx.core.http.HttpServerResponse response()",
                        "io.vertx.ext.web.handler.BodyHandler:io.vertx.ext.web.handler.BodyHandler create()",
                        "io.vertx.ext.web.impl.RoutingContextImpl:java.util.Map data()",
                        "io.vertx.ext.web.impl.RoutingContextImpl:io.vertx.core.http.HttpServerRequest request()",
                        "io.vertx.ext.web.impl.RouteImpl:io.vertx.ext.web.Route handler(io.vertx.core.Handler)",
                        "io.vertx.ext.web.impl.RoutingContextWrapper:void fail(java.lang.Throwable)",
                        "io.vertx.ext.web.impl.RoutingContextImpl:io.vertx.ext.web.RoutingContext put(java.lang.String,java.lang.Object)",
                        "io.vertx.ext.web.Router:io.vertx.ext.web.Router router(io.vertx.core.Vertx)"
                    ]
                }
            }
        },
        "io.vertx:wiki-step-3": {
            "vulnerable dependencies": {
                "io.vertx:vertx-core:3.8.2": {
                    "used-method num": 78,
                    "used method": [
                        "io.vertx.core.dns.impl.DnsClientImpl$2:void handle(java.lang.Object)",
                        "io.vertx.core.http.impl.HttpServerImpl:io.vertx.core.http.HttpServer requestHandler(io.vertx.core.Handler)",
                        "io.vertx.core.json.JsonArray:java.util.List getList()",
                        "io.vertx.core.Future:io.vertx.core.Future succeededFuture()",
                        "io.vertx.core.net.JksOptions:io.vertx.core.net.JksOptions clone()",
                        "io.vertx.core.json.JsonObject:io.vertx.core.json.JsonObject put(java.lang.String,java.lang.String)",
                        "io.vertx.core.eventbus.impl.clustered.ClusteredMessage:io.vertx.core.MultiMap headers()",
                        "io.vertx.core.http.impl.HttpHandlers:void handle(java.lang.Object)",
                        "io.vertx.core.http.impl.Http2ServerConnection$1:void handle(java.lang.Object)",
                        "io.vertx.core.net.PfxOptions:io.vertx.core.net.PfxOptions clone()",
                        "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(java.lang.Object)",
                        "io.vertx.core.AbstractVerticle:void <init>()",
                        "io.vertx.core.net.PemTrustOptions:io.vertx.core.net.PemTrustOptions clone()",
                        "io.vertx.core.eventbus.impl.MessageImpl:java.lang.Object body()",
                        "io.vertx.core.http.impl.HttpServerResponseImpl:void end(io.vertx.core.buffer.Buffer)",
                        "io.vertx.core.http.impl.HttpServerRequestImpl:java.lang.String getParam(java.lang.String)",
                        "io.vertx.core.impl.CompositeFutureImpl:java.lang.Throwable cause()",
                        "io.vertx.core.net.JdkSSLEngineOptions:io.vertx.core.net.JdkSSLEngineOptions clone()",
                        "io.vertx.core.eventbus.DeliveryOptions:io.vertx.core.eventbus.DeliveryOptions addHeader(java.lang.String,java.lang.String)",
                        "io.vertx.core.json.JsonArray:void <init>(java.util.List)",
                        "io.vertx.core.json.JsonObject:void <init>()",
                        "io.vertx.core.impl.CompositeFutureImpl:void handle(java.lang.Object)",
                        "io.vertx.core.json.JsonArray:java.lang.Integer getInteger(int)",
                        "io.vertx.core.net.OpenSSLEngineOptions:io.vertx.core.net.OpenSSLEngineOptions clone()",
                        "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Object)",
                        "io.vertx.core.impl.VertxImpl:boolean cancelTimer(long)",
                        "io.vertx.core.Future:io.vertx.core.Future succeededFuture(java.lang.Object)",
                        "io.vertx.core.json.JsonObject:io.vertx.core.json.JsonObject put(java.lang.String,java.lang.Boolean)",
                        "io.vertx.core.eventbus.DeliveryOptions:void <init>(io.vertx.core.eventbus.DeliveryOptions)",
                        "io.vertx.core.json.JsonArray:io.vertx.core.json.JsonArray add(java.lang.Integer)",
                        "io.vertx.core.json.JsonArray:void <init>()",
                        "io.vertx.core.Future:io.vertx.core.Future compose(java.util.function.Function)",
                        "io.vertx.core.http.impl.HttpServerResponseImpl:io.vertx.core.http.HttpServerResponse setStatusCode(int)",
                        "io.vertx.core.json.JsonObject:java.lang.Long getLong(java.lang.String)",
                        "io.vertx.core.json.JsonObject:java.lang.String getString(java.lang.String,java.lang.String)",
                        "io.vertx.core.http.impl.headers.VertxHttpHeaders:java.lang.String get(java.lang.String)",
                        "io.vertx.core.json.JsonObject:java.lang.Object getValue(java.lang.String)",
                        "io.vertx.core.net.impl.NetSocketImpl$DataMessageHandler:void handle(java.lang.Object)",
                        "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void handle(java.lang.Object)",
                        "io.vertx.core.http.impl.Http2ServerRequestImpl:java.lang.String getParam(java.lang.String)",
                        "io.vertx.core.json.JsonArray:java.lang.String getString(int)",
                        "io.vertx.core.http.impl.Http2HeadersAdaptor$1:java.lang.String get(int)",
                        "io.vertx.core.eventbus.DeliveryOptions:void <init>()",
                        "io.vertx.core.Promise:io.vertx.core.Promise promise()",
                        "io.vertx.core.net.PemKeyCertOptions:io.vertx.core.net.PemKeyCertOptions clone()",
                        "io.vertx.core.DeploymentOptions:io.vertx.core.DeploymentOptions setInstances(int)",
                        "io.vertx.core.Future:io.vertx.core.Future failedFuture(java.lang.Throwable)",
                        "io.vertx.core.file.impl.FileSystemImpl$BlockingAction:void handle(java.lang.Object)",
                        "io.vertx.core.Future:void <clinit>()",
                        "io.vertx.core.json.JsonObject:java.lang.Boolean getBoolean(java.lang.String)",
                        "io.vertx.core.http.impl.Http2HeadersAdaptor:java.lang.String get(java.lang.String)",
                        "io.vertx.core.impl.VertxImpl:long setPeriodic(long,io.vertx.core.Handler)",
                        "io.vertx.core.http.impl.HeadersAdaptor:java.lang.String get(java.lang.String)",
                        "io.vertx.core.impl.VertxImpl:void deployVerticle(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
                        "io.vertx.core.DeploymentOptions:void <init>()",
                        "io.vertx.core.eventbus.impl.MessageImpl:void reply(java.lang.Object)",
                        "io.vertx.core.json.JsonObject:java.lang.Integer getInteger(java.lang.String,java.lang.Integer)",
                        "io.vertx.core.eventbus.impl.MessageImpl:io.vertx.core.MultiMap headers()",
                        "io.vertx.core.http.CaseInsensitiveHeaders:java.lang.String get(java.lang.String)",
                        "io.vertx.core.json.JsonObject:io.vertx.core.json.JsonObject put(java.lang.String,java.lang.Integer)",
                        "io.vertx.core.impl.CompositeFutureImpl:io.vertx.core.CompositeFuture setHandler(io.vertx.core.Handler)",
                        "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Object)",
                        "io.vertx.core.http.impl.HttpServerResponseImpl:void end()",
                        "io.vertx.core.impl.VertxImpl:io.vertx.core.eventbus.EventBus eventBus()",
                        "io.vertx.core.impl.VertxImpl:io.vertx.core.http.HttpServer createHttpServer()",
                        "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.Handler)",
                        "io.vertx.core.http.impl.HttpServerImpl:io.vertx.core.http.HttpServer listen(int,io.vertx.core.Handler)",
                        "io.vertx.core.parsetools.impl.RecordParserImpl:void handle(java.lang.Object)",
                        "io.vertx.core.eventbus.impl.clustered.ClusteredMessage:java.lang.Object body()",
                        "io.vertx.core.impl.CompositeFutureImpl:boolean succeeded()",
                        "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus$1:void handle(java.lang.Object)",
                        "io.vertx.core.http.impl.WebSocketRequestHandler:void handle(java.lang.Object)",
                        "io.vertx.core.impl.CompositeFutureImpl:io.vertx.core.CompositeFuture result()",
                        "io.vertx.core.json.JsonObject:java.lang.String getString(java.lang.String)",
                        "io.vertx.core.json.JsonArray:io.vertx.core.json.JsonArray add(java.lang.String)",
                        "io.vertx.core.eventbus.impl.EventBusImpl:io.vertx.core.eventbus.EventBus registerDefaultCodec(java.lang.Class,io.vertx.core.eventbus.MessageCodec)",
                        "io.vertx.core.http.impl.HttpServerResponseImpl:io.vertx.core.http.impl.HttpServerResponseImpl putHeader(java.lang.String,java.lang.String)",
                        "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(java.lang.Object)"
                    ],
                    "CVE": [
                        "CVE-2019-17640"
                    ],
                    "used vul-method": [
                        "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(java.lang.Object)",
                        "io.vertx.core.net.impl.NetSocketImpl$DataMessageHandler:void handle(java.lang.Object)",
                        "io.vertx.core.eventbus.impl.MessageImpl:void reply(java.lang.Object)",
                        "io.vertx.core.parsetools.impl.RecordParserImpl:void handle(java.lang.Object)",
                        "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus$1:void handle(java.lang.Object)"
                    ],
                    "vul-called frequency": 113,
                    "related vul root method": {
                        "CVE-2019-17640": [
                            "io.vertx.core.eventbus.impl.EventBusImpl:io.vertx.core.eventbus.ReplyException deliverMessageLocally(io.vertx.core.eventbus.impl.MessageImpl)"
                        ]
                    },
                    "CVE-API": {
                        "CVE-2019-17640": [
                            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(java.lang.Object)",
                            "io.vertx.core.net.impl.NetSocketImpl$DataMessageHandler:void handle(java.lang.Object)",
                            "io.vertx.core.eventbus.impl.MessageImpl:void reply(java.lang.Object)",
                            "io.vertx.core.parsetools.impl.RecordParserImpl:void handle(java.lang.Object)",
                            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus$1:void handle(java.lang.Object)"
                        ]
                    }
                },
                "io.vertx:vertx-web:3.8.2": {
                    "used-method num": 13,
                    "used method": [
                        "io.vertx.ext.web.impl.RoutingContextWrapper:io.vertx.core.http.HttpServerResponse response()",
                        "io.vertx.ext.web.handler.impl.BodyHandlerImpl$BHandler:void handle(java.lang.Object)",
                        "io.vertx.ext.web.impl.RoutingContextImpl:void fail(java.lang.Throwable)",
                        "io.vertx.ext.web.impl.RoutingContextImpl:io.vertx.core.http.HttpServerResponse response()",
                        "io.vertx.ext.web.handler.BodyHandler:io.vertx.ext.web.handler.BodyHandler create()",
                        "io.vertx.ext.web.impl.RoutingContextImpl:java.util.Map data()",
                        "io.vertx.ext.web.impl.BlockingHandlerDecorator:void handle(java.lang.Object)",
                        "io.vertx.ext.web.impl.RoutingContextDecorator:void fail(java.lang.Throwable)",
                        "io.vertx.ext.web.impl.RoutingContextImpl:io.vertx.core.http.HttpServerRequest request()",
                        "io.vertx.ext.web.impl.RouteImpl:io.vertx.ext.web.Route handler(io.vertx.core.Handler)",
                        "io.vertx.ext.web.impl.RoutingContextWrapper:void fail(java.lang.Throwable)",
                        "io.vertx.ext.web.impl.RoutingContextImpl:io.vertx.ext.web.RoutingContext put(java.lang.String,java.lang.Object)",
                        "io.vertx.ext.web.Router:io.vertx.ext.web.Router router(io.vertx.core.Vertx)"
                    ]
                }
            }
        },
        "io.vertx:wiki-step-4": {
            "vulnerable dependencies": {
                "io.vertx:vertx-core:3.8.2": {
                    "used-method num": 78,
                    "used method": [
                        "io.vertx.core.dns.impl.DnsClientImpl$2:void handle(java.lang.Object)",
                        "io.vertx.core.http.impl.HttpServerImpl:io.vertx.core.http.HttpServer requestHandler(io.vertx.core.Handler)",
                        "io.vertx.core.json.JsonArray:java.util.List getList()",
                        "io.vertx.core.Future:io.vertx.core.Future succeededFuture()",
                        "io.vertx.core.net.JksOptions:io.vertx.core.net.JksOptions clone()",
                        "io.vertx.core.json.JsonObject:io.vertx.core.json.JsonObject put(java.lang.String,java.lang.String)",
                        "io.vertx.core.eventbus.impl.clustered.ClusteredMessage:io.vertx.core.MultiMap headers()",
                        "io.vertx.core.http.impl.HttpHandlers:void handle(java.lang.Object)",
                        "io.vertx.core.http.impl.Http2ServerConnection$1:void handle(java.lang.Object)",
                        "io.vertx.core.net.PfxOptions:io.vertx.core.net.PfxOptions clone()",
                        "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(java.lang.Object)",
                        "io.vertx.core.AbstractVerticle:void <init>()",
                        "io.vertx.core.net.PemTrustOptions:io.vertx.core.net.PemTrustOptions clone()",
                        "io.vertx.core.eventbus.impl.MessageImpl:java.lang.Object body()",
                        "io.vertx.core.http.impl.HttpServerResponseImpl:void end(io.vertx.core.buffer.Buffer)",
                        "io.vertx.core.http.impl.HttpServerRequestImpl:java.lang.String getParam(java.lang.String)",
                        "io.vertx.core.impl.CompositeFutureImpl:java.lang.Throwable cause()",
                        "io.vertx.core.net.JdkSSLEngineOptions:io.vertx.core.net.JdkSSLEngineOptions clone()",
                        "io.vertx.core.json.JsonArray:void <init>(java.util.List)",
                        "io.vertx.core.eventbus.DeliveryOptions:io.vertx.core.eventbus.DeliveryOptions addHeader(java.lang.String,java.lang.String)",
                        "io.vertx.core.json.JsonObject:void <init>()",
                        "io.vertx.core.impl.CompositeFutureImpl:void handle(java.lang.Object)",
                        "io.vertx.core.json.JsonArray:java.lang.Integer getInteger(int)",
                        "io.vertx.core.net.OpenSSLEngineOptions:io.vertx.core.net.OpenSSLEngineOptions clone()",
                        "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Object)",
                        "io.vertx.core.impl.VertxImpl:boolean cancelTimer(long)",
                        "io.vertx.core.Future:io.vertx.core.Future succeededFuture(java.lang.Object)",
                        "io.vertx.core.json.JsonObject:io.vertx.core.json.JsonObject put(java.lang.String,java.lang.Boolean)",
                        "io.vertx.core.eventbus.DeliveryOptions:void <init>(io.vertx.core.eventbus.DeliveryOptions)",
                        "io.vertx.core.json.JsonArray:io.vertx.core.json.JsonArray add(java.lang.Integer)",
                        "io.vertx.core.json.JsonArray:void <init>()",
                        "io.vertx.core.Future:io.vertx.core.Future compose(java.util.function.Function)",
                        "io.vertx.core.json.JsonObject:java.lang.Long getLong(java.lang.String)",
                        "io.vertx.core.http.impl.HttpServerResponseImpl:io.vertx.core.http.HttpServerResponse setStatusCode(int)",
                        "io.vertx.core.json.JsonObject:java.lang.String getString(java.lang.String,java.lang.String)",
                        "io.vertx.core.http.impl.headers.VertxHttpHeaders:java.lang.String get(java.lang.String)",
                        "io.vertx.core.json.JsonObject:java.lang.Object getValue(java.lang.String)",
                        "io.vertx.core.net.impl.NetSocketImpl$DataMessageHandler:void handle(java.lang.Object)",
                        "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void handle(java.lang.Object)",
                        "io.vertx.core.http.impl.Http2ServerRequestImpl:java.lang.String getParam(java.lang.String)",
                        "io.vertx.core.json.JsonArray:java.lang.String getString(int)",
                        "io.vertx.core.eventbus.DeliveryOptions:void <init>()",
                        "io.vertx.core.http.impl.Http2HeadersAdaptor$1:java.lang.String get(int)",
                        "io.vertx.core.Promise:io.vertx.core.Promise promise()",
                        "io.vertx.core.net.PemKeyCertOptions:io.vertx.core.net.PemKeyCertOptions clone()",
                        "io.vertx.core.DeploymentOptions:io.vertx.core.DeploymentOptions setInstances(int)",
                        "io.vertx.core.Future:io.vertx.core.Future failedFuture(java.lang.Throwable)",
                        "io.vertx.core.file.impl.FileSystemImpl$BlockingAction:void handle(java.lang.Object)",
                        "io.vertx.core.Future:void <clinit>()",
                        "io.vertx.core.json.JsonObject:java.lang.Boolean getBoolean(java.lang.String)",
                        "io.vertx.core.http.impl.Http2HeadersAdaptor:java.lang.String get(java.lang.String)",
                        "io.vertx.core.impl.VertxImpl:long setPeriodic(long,io.vertx.core.Handler)",
                        "io.vertx.core.http.impl.HeadersAdaptor:java.lang.String get(java.lang.String)",
                        "io.vertx.core.impl.VertxImpl:void deployVerticle(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
                        "io.vertx.core.DeploymentOptions:void <init>()",
                        "io.vertx.core.eventbus.impl.MessageImpl:void reply(java.lang.Object)",
                        "io.vertx.core.json.JsonObject:java.lang.Integer getInteger(java.lang.String,java.lang.Integer)",
                        "io.vertx.core.eventbus.impl.MessageImpl:io.vertx.core.MultiMap headers()",
                        "io.vertx.core.http.CaseInsensitiveHeaders:java.lang.String get(java.lang.String)",
                        "io.vertx.core.json.JsonObject:io.vertx.core.json.JsonObject put(java.lang.String,java.lang.Integer)",
                        "io.vertx.core.impl.CompositeFutureImpl:io.vertx.core.CompositeFuture setHandler(io.vertx.core.Handler)",
                        "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Object)",
                        "io.vertx.core.http.impl.HttpServerResponseImpl:void end()",
                        "io.vertx.core.impl.VertxImpl:io.vertx.core.eventbus.EventBus eventBus()",
                        "io.vertx.core.impl.VertxImpl:io.vertx.core.http.HttpServer createHttpServer()",
                        "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.Handler)",
                        "io.vertx.core.http.impl.HttpServerImpl:io.vertx.core.http.HttpServer listen(int,io.vertx.core.Handler)",
                        "io.vertx.core.parsetools.impl.RecordParserImpl:void handle(java.lang.Object)",
                        "io.vertx.core.eventbus.impl.clustered.ClusteredMessage:java.lang.Object body()",
                        "io.vertx.core.impl.CompositeFutureImpl:boolean succeeded()",
                        "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus$1:void handle(java.lang.Object)",
                        "io.vertx.core.http.impl.WebSocketRequestHandler:void handle(java.lang.Object)",
                        "io.vertx.core.impl.CompositeFutureImpl:io.vertx.core.CompositeFuture result()",
                        "io.vertx.core.json.JsonObject:java.lang.String getString(java.lang.String)",
                        "io.vertx.core.json.JsonArray:io.vertx.core.json.JsonArray add(java.lang.String)",
                        "io.vertx.core.eventbus.impl.EventBusImpl:io.vertx.core.eventbus.EventBus registerDefaultCodec(java.lang.Class,io.vertx.core.eventbus.MessageCodec)",
                        "io.vertx.core.http.impl.HttpServerResponseImpl:io.vertx.core.http.impl.HttpServerResponseImpl putHeader(java.lang.String,java.lang.String)",
                        "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(java.lang.Object)"
                    ],
                    "CVE": [
                        "CVE-2019-17640"
                    ],
                    "used vul-method": [
                        "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(java.lang.Object)",
                        "io.vertx.core.net.impl.NetSocketImpl$DataMessageHandler:void handle(java.lang.Object)",
                        "io.vertx.core.eventbus.impl.MessageImpl:void reply(java.lang.Object)",
                        "io.vertx.core.parsetools.impl.RecordParserImpl:void handle(java.lang.Object)",
                        "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus$1:void handle(java.lang.Object)"
                    ],
                    "vul-called frequency": 113,
                    "related vul root method": {
                        "CVE-2019-17640": [
                            "io.vertx.core.eventbus.impl.EventBusImpl:io.vertx.core.eventbus.ReplyException deliverMessageLocally(io.vertx.core.eventbus.impl.MessageImpl)"
                        ]
                    },
                    "CVE-API": {
                        "CVE-2019-17640": [
                            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(java.lang.Object)",
                            "io.vertx.core.net.impl.NetSocketImpl$DataMessageHandler:void handle(java.lang.Object)",
                            "io.vertx.core.eventbus.impl.MessageImpl:void reply(java.lang.Object)",
                            "io.vertx.core.parsetools.impl.RecordParserImpl:void handle(java.lang.Object)",
                            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus$1:void handle(java.lang.Object)"
                        ]
                    }
                },
                "io.vertx:vertx-web:3.8.2": {
                    "used-method num": 13,
                    "used method": [
                        "io.vertx.ext.web.impl.RoutingContextWrapper:io.vertx.core.http.HttpServerResponse response()",
                        "io.vertx.ext.web.handler.impl.BodyHandlerImpl$BHandler:void handle(java.lang.Object)",
                        "io.vertx.ext.web.impl.RoutingContextImpl:void fail(java.lang.Throwable)",
                        "io.vertx.ext.web.impl.RoutingContextImpl:io.vertx.core.http.HttpServerResponse response()",
                        "io.vertx.ext.web.handler.BodyHandler:io.vertx.ext.web.handler.BodyHandler create()",
                        "io.vertx.ext.web.impl.RoutingContextImpl:java.util.Map data()",
                        "io.vertx.ext.web.impl.BlockingHandlerDecorator:void handle(java.lang.Object)",
                        "io.vertx.ext.web.impl.RoutingContextDecorator:void fail(java.lang.Throwable)",
                        "io.vertx.ext.web.impl.RoutingContextImpl:io.vertx.core.http.HttpServerRequest request()",
                        "io.vertx.ext.web.impl.RouteImpl:io.vertx.ext.web.Route handler(io.vertx.core.Handler)",
                        "io.vertx.ext.web.impl.RoutingContextWrapper:void fail(java.lang.Throwable)",
                        "io.vertx.ext.web.impl.RoutingContextImpl:io.vertx.ext.web.RoutingContext put(java.lang.String,java.lang.Object)",
                        "io.vertx.ext.web.Router:io.vertx.ext.web.Router router(io.vertx.core.Vertx)"
                    ]
                }
            }
        },
        "io.vertx:wiki-step-5": {
            "vulnerable dependencies": {
                "io.vertx:vertx-core:3.8.2": {
                    "used-method num": 82,
                    "used method": [
                        "io.vertx.core.http.HttpClientOptions:void <clinit>()",
                        "io.vertx.core.dns.impl.DnsClientImpl$2:void handle(java.lang.Object)",
                        "io.vertx.core.http.impl.HttpServerImpl:io.vertx.core.http.HttpServer requestHandler(io.vertx.core.Handler)",
                        "io.vertx.core.json.JsonArray:java.util.List getList()",
                        "io.vertx.core.Future:io.vertx.core.Future succeededFuture()",
                        "io.vertx.core.net.JksOptions:io.vertx.core.net.JksOptions clone()",
                        "io.vertx.core.json.JsonObject:io.vertx.core.json.JsonObject put(java.lang.String,java.lang.String)",
                        "io.vertx.core.eventbus.impl.clustered.ClusteredMessage:io.vertx.core.MultiMap headers()",
                        "io.vertx.core.http.impl.HttpHandlers:void handle(java.lang.Object)",
                        "io.vertx.core.http.impl.Http2ServerConnection$1:void handle(java.lang.Object)",
                        "io.vertx.core.net.PfxOptions:io.vertx.core.net.PfxOptions clone()",
                        "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(java.lang.Object)",
                        "io.vertx.core.AbstractVerticle:void <init>()",
                        "io.vertx.core.net.PemTrustOptions:io.vertx.core.net.PemTrustOptions clone()",
                        "io.vertx.core.eventbus.impl.MessageImpl:java.lang.Object body()",
                        "io.vertx.core.http.impl.HttpServerResponseImpl:void end(io.vertx.core.buffer.Buffer)",
                        "io.vertx.core.http.impl.HttpServerRequestImpl:java.lang.String getParam(java.lang.String)",
                        "io.vertx.core.impl.CompositeFutureImpl:java.lang.Throwable cause()",
                        "io.vertx.core.net.JdkSSLEngineOptions:io.vertx.core.net.JdkSSLEngineOptions clone()",
                        "io.vertx.core.json.JsonArray:void <init>(java.util.List)",
                        "io.vertx.core.eventbus.DeliveryOptions:io.vertx.core.eventbus.DeliveryOptions addHeader(java.lang.String,java.lang.String)",
                        "io.vertx.core.json.JsonObject:void <init>()",
                        "io.vertx.core.impl.CompositeFutureImpl:void handle(java.lang.Object)",
                        "io.vertx.core.json.JsonArray:java.lang.Integer getInteger(int)",
                        "io.vertx.core.json.JsonObject:io.vertx.core.json.JsonObject put(java.lang.String,io.vertx.core.json.JsonArray)",
                        "io.vertx.core.net.OpenSSLEngineOptions:io.vertx.core.net.OpenSSLEngineOptions clone()",
                        "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Object)",
                        "io.vertx.core.impl.VertxImpl:boolean cancelTimer(long)",
                        "io.vertx.core.Future:io.vertx.core.Future succeededFuture(java.lang.Object)",
                        "io.vertx.core.json.JsonObject:io.vertx.core.json.JsonObject put(java.lang.String,java.lang.Boolean)",
                        "io.vertx.core.eventbus.DeliveryOptions:void <init>(io.vertx.core.eventbus.DeliveryOptions)",
                        "io.vertx.core.json.JsonArray:io.vertx.core.json.JsonArray add(java.lang.Integer)",
                        "io.vertx.core.json.JsonArray:void <init>()",
                        "io.vertx.core.Future:io.vertx.core.Future compose(java.util.function.Function)",
                        "io.vertx.core.http.impl.HttpServerResponseImpl:io.vertx.core.http.HttpServerResponse setStatusCode(int)",
                        "io.vertx.core.json.JsonObject:java.lang.Long getLong(java.lang.String)",
                        "io.vertx.core.json.JsonObject:java.lang.String getString(java.lang.String,java.lang.String)",
                        "io.vertx.core.http.impl.headers.VertxHttpHeaders:java.lang.String get(java.lang.String)",
                        "io.vertx.core.json.JsonObject:java.lang.Object getValue(java.lang.String)",
                        "io.vertx.core.net.impl.NetSocketImpl$DataMessageHandler:void handle(java.lang.Object)",
                        "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void handle(java.lang.Object)",
                        "io.vertx.core.http.impl.Http2ServerRequestImpl:java.lang.String getParam(java.lang.String)",
                        "io.vertx.core.json.JsonArray:java.lang.String getString(int)",
                        "io.vertx.core.http.impl.Http2HeadersAdaptor$1:java.lang.String get(int)",
                        "io.vertx.core.eventbus.DeliveryOptions:void <init>()",
                        "io.vertx.core.Promise:io.vertx.core.Promise promise()",
                        "io.vertx.core.net.PemKeyCertOptions:io.vertx.core.net.PemKeyCertOptions clone()",
                        "io.vertx.core.DeploymentOptions:io.vertx.core.DeploymentOptions setInstances(int)",
                        "io.vertx.core.Future:io.vertx.core.Future failedFuture(java.lang.Throwable)",
                        "io.vertx.core.file.impl.FileSystemImpl$BlockingAction:void handle(java.lang.Object)",
                        "io.vertx.core.Future:void <clinit>()",
                        "io.vertx.core.json.JsonObject:java.lang.Boolean getBoolean(java.lang.String)",
                        "io.vertx.core.http.impl.Http2HeadersAdaptor:java.lang.String get(java.lang.String)",
                        "io.vertx.core.net.TCPSSLOptions:void <clinit>()",
                        "io.vertx.core.impl.VertxImpl:long setPeriodic(long,io.vertx.core.Handler)",
                        "io.vertx.core.http.impl.HeadersAdaptor:java.lang.String get(java.lang.String)",
                        "io.vertx.core.impl.VertxImpl:void deployVerticle(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
                        "io.vertx.core.DeploymentOptions:void <init>()",
                        "io.vertx.core.eventbus.impl.MessageImpl:void reply(java.lang.Object)",
                        "io.vertx.core.json.JsonObject:java.lang.Integer getInteger(java.lang.String,java.lang.Integer)",
                        "io.vertx.core.eventbus.impl.MessageImpl:io.vertx.core.MultiMap headers()",
                        "io.vertx.core.http.CaseInsensitiveHeaders:java.lang.String get(java.lang.String)",
                        "io.vertx.core.json.JsonObject:io.vertx.core.json.JsonObject put(java.lang.String,java.lang.Integer)",
                        "io.vertx.core.impl.CompositeFutureImpl:io.vertx.core.CompositeFuture setHandler(io.vertx.core.Handler)",
                        "io.vertx.core.json.JsonArray:io.vertx.core.json.JsonArray add(io.vertx.core.json.JsonObject)",
                        "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Object)",
                        "io.vertx.core.http.impl.HttpServerResponseImpl:void end()",
                        "io.vertx.core.impl.VertxImpl:io.vertx.core.eventbus.EventBus eventBus()",
                        "io.vertx.core.impl.VertxImpl:io.vertx.core.http.HttpServer createHttpServer()",
                        "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.Handler)",
                        "io.vertx.core.http.impl.HttpServerImpl:io.vertx.core.http.HttpServer listen(int,io.vertx.core.Handler)",
                        "io.vertx.core.parsetools.impl.RecordParserImpl:void handle(java.lang.Object)",
                        "io.vertx.core.eventbus.impl.clustered.ClusteredMessage:java.lang.Object body()",
                        "io.vertx.core.impl.CompositeFutureImpl:boolean succeeded()",
                        "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus$1:void handle(java.lang.Object)",
                        "io.vertx.core.http.impl.WebSocketRequestHandler:void handle(java.lang.Object)",
                        "io.vertx.core.impl.CompositeFutureImpl:io.vertx.core.CompositeFuture result()",
                        "io.vertx.core.json.JsonObject:java.lang.String getString(java.lang.String)",
                        "io.vertx.core.json.JsonArray:io.vertx.core.json.JsonArray add(java.lang.String)",
                        "io.vertx.core.eventbus.impl.EventBusImpl:io.vertx.core.eventbus.EventBus registerDefaultCodec(java.lang.Class,io.vertx.core.eventbus.MessageCodec)",
                        "io.vertx.core.http.impl.HttpServerResponseImpl:io.vertx.core.http.impl.HttpServerResponseImpl putHeader(java.lang.String,java.lang.String)",
                        "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(java.lang.Object)"
                    ],
                    "CVE": [
                        "CVE-2019-17640"
                    ],
                    "used vul-method": [
                        "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(java.lang.Object)",
                        "io.vertx.core.net.impl.NetSocketImpl$DataMessageHandler:void handle(java.lang.Object)",
                        "io.vertx.core.eventbus.impl.MessageImpl:void reply(java.lang.Object)",
                        "io.vertx.core.parsetools.impl.RecordParserImpl:void handle(java.lang.Object)",
                        "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus$1:void handle(java.lang.Object)"
                    ],
                    "vul-called frequency": 133,
                    "related vul root method": {
                        "CVE-2019-17640": [
                            "io.vertx.core.eventbus.impl.EventBusImpl:io.vertx.core.eventbus.ReplyException deliverMessageLocally(io.vertx.core.eventbus.impl.MessageImpl)"
                        ]
                    },
                    "CVE-API": {
                        "CVE-2019-17640": [
                            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(java.lang.Object)",
                            "io.vertx.core.net.impl.NetSocketImpl$DataMessageHandler:void handle(java.lang.Object)",
                            "io.vertx.core.eventbus.impl.MessageImpl:void reply(java.lang.Object)",
                            "io.vertx.core.parsetools.impl.RecordParserImpl:void handle(java.lang.Object)",
                            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus$1:void handle(java.lang.Object)"
                        ]
                    }
                },
                "io.vertx:vertx-web:3.8.2": {
                    "used-method num": 15,
                    "used method": [
                        "io.vertx.ext.web.impl.RoutingContextWrapper:io.vertx.core.http.HttpServerResponse response()",
                        "io.vertx.ext.web.handler.impl.BodyHandlerImpl$BHandler:void handle(java.lang.Object)",
                        "io.vertx.ext.web.impl.RoutingContextImpl:void fail(java.lang.Throwable)",
                        "io.vertx.ext.web.impl.RoutingContextImpl:io.vertx.core.http.HttpServerResponse response()",
                        "io.vertx.ext.web.handler.BodyHandler:io.vertx.ext.web.handler.BodyHandler create()",
                        "io.vertx.ext.web.impl.RoutingContextImpl:java.util.Map data()",
                        "io.vertx.ext.web.impl.BlockingHandlerDecorator:void handle(java.lang.Object)",
                        "io.vertx.ext.web.impl.RoutingContextDecorator:void fail(int)",
                        "io.vertx.ext.web.impl.RoutingContextDecorator:void fail(java.lang.Throwable)",
                        "io.vertx.ext.web.impl.RoutingContextImpl:io.vertx.core.http.HttpServerRequest request()",
                        "io.vertx.ext.web.impl.RouteImpl:io.vertx.ext.web.Route handler(io.vertx.core.Handler)",
                        "io.vertx.ext.web.impl.RoutingContextWrapper:void fail(java.lang.Throwable)",
                        "io.vertx.ext.web.impl.RoutingContextImpl:io.vertx.ext.web.RoutingContext put(java.lang.String,java.lang.Object)",
                        "io.vertx.ext.web.impl.RoutingContextImpl:void fail(int)",
                        "io.vertx.ext.web.Router:io.vertx.ext.web.Router router(io.vertx.core.Vertx)"
                    ]
                }
            }
        },
        "io.vertx:wiki-step-6": {
            "vulnerable dependencies": {
                "io.vertx:vertx-core:3.8.2": {
                    "used-method num": 89,
                    "used method": [
                        "io.vertx.core.http.HttpClientOptions:void <clinit>()",
                        "io.vertx.core.dns.impl.DnsClientImpl$2:void handle(java.lang.Object)",
                        "io.vertx.core.http.impl.HttpServerImpl:io.vertx.core.http.HttpServer requestHandler(io.vertx.core.Handler)",
                        "io.vertx.core.json.JsonArray:java.util.List getList()",
                        "io.vertx.core.Future:io.vertx.core.Future succeededFuture()",
                        "io.vertx.core.net.JksOptions:io.vertx.core.net.JksOptions clone()",
                        "io.vertx.core.json.JsonObject:io.vertx.core.json.JsonObject put(java.lang.String,java.lang.String)",
                        "io.vertx.core.eventbus.impl.clustered.ClusteredMessage:io.vertx.core.MultiMap headers()",
                        "io.vertx.core.http.impl.HttpHandlers:void handle(java.lang.Object)",
                        "io.vertx.core.http.impl.Http2ServerConnection$1:void handle(java.lang.Object)",
                        "io.vertx.core.net.PfxOptions:io.vertx.core.net.PfxOptions clone()",
                        "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(java.lang.Object)",
                        "io.vertx.core.AbstractVerticle:void <init>()",
                        "io.vertx.core.net.PemTrustOptions:io.vertx.core.net.PemTrustOptions clone()",
                        "io.vertx.core.eventbus.impl.MessageImpl:java.lang.Object body()",
                        "io.vertx.core.http.impl.HttpServerResponseImpl:void end(io.vertx.core.buffer.Buffer)",
                        "io.vertx.core.http.impl.HttpServerRequestImpl:java.lang.String getParam(java.lang.String)",
                        "io.vertx.core.impl.CompositeFutureImpl:java.lang.Throwable cause()",
                        "io.vertx.core.net.JdkSSLEngineOptions:io.vertx.core.net.JdkSSLEngineOptions clone()",
                        "io.vertx.core.eventbus.DeliveryOptions:io.vertx.core.eventbus.DeliveryOptions addHeader(java.lang.String,java.lang.String)",
                        "io.vertx.core.json.JsonArray:void <init>(java.util.List)",
                        "io.vertx.core.json.JsonObject:void <init>()",
                        "io.vertx.core.impl.CompositeFutureImpl:void handle(java.lang.Object)",
                        "io.vertx.core.json.JsonArray:java.lang.Integer getInteger(int)",
                        "io.vertx.core.json.JsonObject:io.vertx.core.json.JsonObject put(java.lang.String,io.vertx.core.json.JsonArray)",
                        "io.vertx.core.net.OpenSSLEngineOptions:io.vertx.core.net.OpenSSLEngineOptions clone()",
                        "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Object)",
                        "io.vertx.core.impl.VertxImpl:boolean cancelTimer(long)",
                        "io.vertx.core.Future:io.vertx.core.Future succeededFuture(java.lang.Object)",
                        "io.vertx.core.json.JsonObject:io.vertx.core.json.JsonObject put(java.lang.String,java.lang.Boolean)",
                        "io.vertx.core.eventbus.DeliveryOptions:void <init>(io.vertx.core.eventbus.DeliveryOptions)",
                        "io.vertx.core.json.JsonArray:io.vertx.core.json.JsonArray add(java.lang.Integer)",
                        "io.vertx.core.json.JsonObject:java.lang.Integer getInteger(java.lang.String)",
                        "io.vertx.core.json.JsonArray:void <init>()",
                        "io.vertx.core.Future:io.vertx.core.Future compose(java.util.function.Function)",
                        "io.vertx.core.json.JsonObject:java.lang.Long getLong(java.lang.String)",
                        "io.vertx.core.http.impl.HttpServerResponseImpl:io.vertx.core.http.HttpServerResponse setStatusCode(int)",
                        "io.vertx.core.json.JsonObject:java.lang.String getString(java.lang.String,java.lang.String)",
                        "io.vertx.core.http.impl.headers.VertxHttpHeaders:java.lang.String get(java.lang.String)",
                        "io.vertx.core.json.JsonObject:java.lang.Object getValue(java.lang.String)",
                        "io.vertx.core.net.impl.NetSocketImpl$DataMessageHandler:void handle(java.lang.Object)",
                        "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void handle(java.lang.Object)",
                        "io.vertx.core.http.impl.Http2ServerRequestImpl:java.lang.String getParam(java.lang.String)",
                        "io.vertx.core.json.JsonArray:java.lang.String getString(int)",
                        "io.vertx.core.eventbus.DeliveryOptions:void <init>()",
                        "io.vertx.core.http.impl.Http2HeadersAdaptor$1:java.lang.String get(int)",
                        "io.vertx.core.Promise:io.vertx.core.Promise promise()",
                        "io.vertx.core.net.PemKeyCertOptions:io.vertx.core.net.PemKeyCertOptions clone()",
                        "io.vertx.core.DeploymentOptions:io.vertx.core.DeploymentOptions setInstances(int)",
                        "io.vertx.core.Future:io.vertx.core.Future failedFuture(java.lang.Throwable)",
                        "io.vertx.core.file.impl.FileSystemImpl$BlockingAction:void handle(java.lang.Object)",
                        "io.vertx.core.Future:void <clinit>()",
                        "io.vertx.core.json.JsonObject:java.lang.Boolean getBoolean(java.lang.String)",
                        "io.vertx.core.http.impl.Http2HeadersAdaptor:java.lang.String get(java.lang.String)",
                        "io.vertx.core.net.TCPSSLOptions:void <clinit>()",
                        "io.vertx.core.impl.VertxImpl:long setPeriodic(long,io.vertx.core.Handler)",
                        "io.vertx.core.http.impl.HeadersAdaptor:java.lang.String get(java.lang.String)",
                        "io.vertx.core.http.impl.HttpServerResponseImpl:void end(java.lang.String)",
                        "io.vertx.core.impl.VertxImpl:void deployVerticle(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
                        "io.vertx.core.DeploymentOptions:void <init>()",
                        "io.vertx.core.eventbus.impl.MessageImpl:void reply(java.lang.Object)",
                        "io.vertx.core.json.JsonObject:java.lang.Integer getInteger(java.lang.String,java.lang.Integer)",
                        "io.vertx.core.eventbus.impl.MessageImpl:io.vertx.core.MultiMap headers()",
                        "io.vertx.core.json.JsonObject:io.vertx.core.json.JsonObject put(java.lang.String,java.lang.Object)",
                        "io.vertx.core.http.CaseInsensitiveHeaders:java.lang.String get(java.lang.String)",
                        "io.vertx.core.json.JsonObject:io.vertx.core.json.JsonObject put(java.lang.String,java.lang.Integer)",
                        "io.vertx.core.impl.CompositeFutureImpl:io.vertx.core.CompositeFuture setHandler(io.vertx.core.Handler)",
                        "io.vertx.core.json.JsonArray:io.vertx.core.json.JsonArray add(io.vertx.core.json.JsonObject)",
                        "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Object)",
                        "io.vertx.core.json.JsonObject:java.lang.String encode()",
                        "io.vertx.core.http.impl.HttpServerResponseImpl:void end()",
                        "io.vertx.core.impl.VertxImpl:io.vertx.core.eventbus.EventBus eventBus()",
                        "io.vertx.core.impl.VertxImpl:io.vertx.core.http.HttpServer createHttpServer()",
                        "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.Handler)",
                        "io.vertx.core.http.impl.HttpServerImpl:io.vertx.core.http.HttpServer listen(int,io.vertx.core.Handler)",
                        "io.vertx.core.parsetools.impl.RecordParserImpl:void handle(java.lang.Object)",
                        "io.vertx.core.eventbus.impl.clustered.ClusteredMessage:java.lang.Object body()",
                        "io.vertx.core.impl.CompositeFutureImpl:boolean succeeded()",
                        "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus$1:void handle(java.lang.Object)",
                        "io.vertx.core.http.impl.WebSocketRequestHandler:void handle(java.lang.Object)",
                        "io.vertx.core.json.JsonObject:io.vertx.core.json.JsonObject put(java.lang.String,io.vertx.core.json.JsonObject)",
                        "io.vertx.core.impl.CompositeFutureImpl:io.vertx.core.CompositeFuture result()",
                        "io.vertx.core.http.impl.HttpServerRequestImpl:io.vertx.core.net.SocketAddress remoteAddress()",
                        "io.vertx.core.json.JsonObject:java.lang.String getString(java.lang.String)",
                        "io.vertx.core.json.JsonArray:io.vertx.core.json.JsonArray add(java.lang.String)",
                        "io.vertx.core.eventbus.impl.EventBusImpl:io.vertx.core.eventbus.EventBus registerDefaultCodec(java.lang.Class,io.vertx.core.eventbus.MessageCodec)",
                        "io.vertx.core.http.impl.Http2ServerRequestImpl:io.vertx.core.net.SocketAddress remoteAddress()",
                        "io.vertx.core.http.impl.HttpServerResponseImpl:io.vertx.core.http.impl.HttpServerResponseImpl putHeader(java.lang.String,java.lang.String)",
                        "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(java.lang.Object)"
                    ],
                    "CVE": [
                        "CVE-2019-17640"
                    ],
                    "used vul-method": [
                        "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(java.lang.Object)",
                        "io.vertx.core.net.impl.NetSocketImpl$DataMessageHandler:void handle(java.lang.Object)",
                        "io.vertx.core.eventbus.impl.MessageImpl:void reply(java.lang.Object)",
                        "io.vertx.core.parsetools.impl.RecordParserImpl:void handle(java.lang.Object)",
                        "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus$1:void handle(java.lang.Object)"
                    ],
                    "vul-called frequency": 157,
                    "related vul root method": {
                        "CVE-2019-17640": [
                            "io.vertx.core.eventbus.impl.EventBusImpl:io.vertx.core.eventbus.ReplyException deliverMessageLocally(io.vertx.core.eventbus.impl.MessageImpl)"
                        ]
                    },
                    "CVE-API": {
                        "CVE-2019-17640": [
                            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(java.lang.Object)",
                            "io.vertx.core.net.impl.NetSocketImpl$DataMessageHandler:void handle(java.lang.Object)",
                            "io.vertx.core.eventbus.impl.MessageImpl:void reply(java.lang.Object)",
                            "io.vertx.core.parsetools.impl.RecordParserImpl:void handle(java.lang.Object)",
                            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus$1:void handle(java.lang.Object)"
                        ]
                    }
                },
                "io.vertx:vertx-web:3.8.2": {
                    "used-method num": 15,
                    "used method": [
                        "io.vertx.ext.web.impl.RoutingContextWrapper:io.vertx.core.http.HttpServerResponse response()",
                        "io.vertx.ext.web.handler.impl.BodyHandlerImpl$BHandler:void handle(java.lang.Object)",
                        "io.vertx.ext.web.impl.RoutingContextImpl:void fail(java.lang.Throwable)",
                        "io.vertx.ext.web.impl.RoutingContextImpl:io.vertx.core.http.HttpServerResponse response()",
                        "io.vertx.ext.web.handler.BodyHandler:io.vertx.ext.web.handler.BodyHandler create()",
                        "io.vertx.ext.web.impl.RoutingContextImpl:java.util.Map data()",
                        "io.vertx.ext.web.impl.BlockingHandlerDecorator:void handle(java.lang.Object)",
                        "io.vertx.ext.web.impl.RoutingContextDecorator:void fail(int)",
                        "io.vertx.ext.web.impl.RoutingContextDecorator:void fail(java.lang.Throwable)",
                        "io.vertx.ext.web.impl.RoutingContextImpl:io.vertx.core.http.HttpServerRequest request()",
                        "io.vertx.ext.web.impl.RouteImpl:io.vertx.ext.web.Route handler(io.vertx.core.Handler)",
                        "io.vertx.ext.web.impl.RoutingContextWrapper:void fail(java.lang.Throwable)",
                        "io.vertx.ext.web.impl.RoutingContextImpl:void fail(int)",
                        "io.vertx.ext.web.impl.RoutingContextImpl:io.vertx.ext.web.RoutingContext put(java.lang.String,java.lang.Object)",
                        "io.vertx.ext.web.Router:io.vertx.ext.web.Router router(io.vertx.core.Vertx)"
                    ]
                }
            }
        },
        "io.vertx:wiki-step-7": {
            "vulnerable dependencies": {
                "io.vertx:vertx-core:3.8.2": {
                    "used-method num": 99,
                    "used method": [
                        "io.vertx.core.dns.impl.DnsClientImpl$2:void handle(java.lang.Object)",
                        "io.vertx.core.net.JksOptions:io.vertx.core.net.JksOptions setPassword(java.lang.String)",
                        "io.vertx.core.http.impl.HttpServerImpl:io.vertx.core.http.HttpServer requestHandler(io.vertx.core.Handler)",
                        "io.vertx.core.json.JsonArray:java.util.List getList()",
                        "io.vertx.core.Future:io.vertx.core.Future succeededFuture()",
                        "io.vertx.core.json.JsonObject:io.vertx.core.json.JsonObject put(java.lang.String,java.lang.String)",
                        "io.vertx.core.http.impl.HttpHandlers:void handle(java.lang.Object)",
                        "io.vertx.core.http.impl.Http2ServerConnection$1:void handle(java.lang.Object)",
                        "io.vertx.core.net.PfxOptions:io.vertx.core.net.PfxOptions clone()",
                        "io.vertx.core.AbstractVerticle:void <init>()",
                        "io.vertx.core.net.PemTrustOptions:io.vertx.core.net.PemTrustOptions clone()",
                        "io.vertx.core.net.JdkSSLEngineOptions:io.vertx.core.net.JdkSSLEngineOptions clone()",
                        "io.vertx.core.eventbus.DeliveryOptions:io.vertx.core.eventbus.DeliveryOptions addHeader(java.lang.String,java.lang.String)",
                        "io.vertx.core.json.JsonArray:void <init>(java.util.List)",
                        "io.vertx.core.json.JsonObject:java.lang.Boolean getBoolean(java.lang.String,java.lang.Boolean)",
                        "io.vertx.core.json.JsonObject:void <init>()",
                        "io.vertx.core.json.JsonArray:java.lang.Integer getInteger(int)",
                        "io.vertx.core.json.JsonObject:io.vertx.core.json.JsonObject put(java.lang.String,io.vertx.core.json.JsonArray)",
                        "io.vertx.core.Future:io.vertx.core.Future succeededFuture(java.lang.Object)",
                        "io.vertx.core.json.JsonObject:java.lang.Integer getInteger(java.lang.String)",
                        "io.vertx.core.json.JsonArray:void <init>()",
                        "io.vertx.core.http.HttpServerOptions:io.vertx.core.http.HttpServerOptions setKeyStoreOptions(io.vertx.core.net.JksOptions)",
                        "io.vertx.core.net.JksOptions:io.vertx.core.net.JksOptions setPath(java.lang.String)",
                        "io.vertx.core.json.JsonObject:java.lang.Object getValue(java.lang.String)",
                        "io.vertx.core.http.impl.Http2ServerRequestImpl:java.lang.String getParam(java.lang.String)",
                        "io.vertx.core.eventbus.DeliveryOptions:void <init>()",
                        "io.vertx.core.http.impl.Http2ServerRequestImpl:java.lang.String getHeader(java.lang.String)",
                        "io.vertx.core.Promise:io.vertx.core.Promise promise()",
                        "io.vertx.core.net.PemKeyCertOptions:io.vertx.core.net.PemKeyCertOptions clone()",
                        "io.vertx.core.Future:void <clinit>()",
                        "io.vertx.core.impl.VertxImpl:long setPeriodic(long,io.vertx.core.Handler)",
                        "io.vertx.core.http.impl.HeadersAdaptor:java.lang.String get(java.lang.String)",
                        "io.vertx.core.http.impl.HttpServerResponseImpl:void end(java.lang.String)",
                        "io.vertx.core.eventbus.impl.MessageImpl:void reply(java.lang.Object)",
                        "io.vertx.core.json.JsonObject:java.lang.Integer getInteger(java.lang.String,java.lang.Integer)",
                        "io.vertx.core.eventbus.impl.MessageImpl:io.vertx.core.MultiMap headers()",
                        "io.vertx.core.http.CaseInsensitiveHeaders:java.lang.String get(java.lang.String)",
                        "io.vertx.core.http.HttpServerOptions:void <init>()",
                        "io.vertx.core.impl.CompositeFutureImpl:io.vertx.core.CompositeFuture setHandler(io.vertx.core.Handler)",
                        "io.vertx.core.json.JsonArray:io.vertx.core.json.JsonArray add(io.vertx.core.json.JsonObject)",
                        "io.vertx.core.impl.VertxImpl:io.vertx.core.http.HttpServer createHttpServer(io.vertx.core.http.HttpServerOptions)",
                        "io.vertx.core.http.impl.HttpServerResponseImpl:void end()",
                        "io.vertx.core.impl.VertxImpl:io.vertx.core.eventbus.EventBus eventBus()",
                        "io.vertx.core.http.impl.HttpServerRequestImpl:java.lang.String getHeader(java.lang.String)",
                        "io.vertx.core.http.HttpServerOptions:void <clinit>()",
                        "io.vertx.core.eventbus.impl.clustered.ClusteredMessage:java.lang.Object body()",
                        "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus$1:void handle(java.lang.Object)",
                        "io.vertx.core.http.impl.WebSocketRequestHandler:void handle(java.lang.Object)",
                        "io.vertx.core.eventbus.impl.EventBusImpl:io.vertx.core.eventbus.EventBus registerDefaultCodec(java.lang.Class,io.vertx.core.eventbus.MessageCodec)",
                        "io.vertx.core.net.JksOptions:void <init>()",
                        "io.vertx.core.http.HttpClientOptions:void <clinit>()",
                        "io.vertx.core.net.JksOptions:io.vertx.core.net.JksOptions clone()",
                        "io.vertx.core.eventbus.impl.clustered.ClusteredMessage:io.vertx.core.MultiMap headers()",
                        "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(java.lang.Object)",
                        "io.vertx.core.eventbus.impl.MessageImpl:java.lang.Object body()",
                        "io.vertx.core.http.impl.HttpServerResponseImpl:void end(io.vertx.core.buffer.Buffer)",
                        "io.vertx.core.http.impl.HttpServerRequestImpl:java.lang.String getParam(java.lang.String)",
                        "io.vertx.core.impl.CompositeFutureImpl:java.lang.Throwable cause()",
                        "io.vertx.core.impl.CompositeFutureImpl:void handle(java.lang.Object)",
                        "io.vertx.core.net.OpenSSLEngineOptions:io.vertx.core.net.OpenSSLEngineOptions clone()",
                        "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Object)",
                        "io.vertx.core.impl.VertxImpl:boolean cancelTimer(long)",
                        "io.vertx.core.json.JsonObject:io.vertx.core.json.JsonObject put(java.lang.String,java.lang.Boolean)",
                        "io.vertx.core.eventbus.DeliveryOptions:void <init>(io.vertx.core.eventbus.DeliveryOptions)",
                        "io.vertx.core.json.JsonArray:io.vertx.core.json.JsonArray add(java.lang.Integer)",
                        "io.vertx.core.Future:io.vertx.core.Future compose(java.util.function.Function)",
                        "io.vertx.core.http.impl.HttpServerResponseImpl:io.vertx.core.http.HttpServerResponse setStatusCode(int)",
                        "io.vertx.core.json.JsonObject:java.lang.Long getLong(java.lang.String)",
                        "io.vertx.core.json.JsonObject:java.lang.String getString(java.lang.String,java.lang.String)",
                        "io.vertx.core.http.impl.headers.VertxHttpHeaders:java.lang.String get(java.lang.String)",
                        "io.vertx.core.http.HttpServerOptions:io.vertx.core.http.HttpServerOptions setSsl(boolean)",
                        "io.vertx.core.net.impl.NetSocketImpl$DataMessageHandler:void handle(java.lang.Object)",
                        "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void handle(java.lang.Object)",
                        "io.vertx.core.json.JsonArray:java.lang.String getString(int)",
                        "io.vertx.core.http.impl.Http2HeadersAdaptor$1:java.lang.String get(int)",
                        "io.vertx.core.DeploymentOptions:io.vertx.core.DeploymentOptions setInstances(int)",
                        "io.vertx.core.Future:io.vertx.core.Future failedFuture(java.lang.Throwable)",
                        "io.vertx.core.file.impl.FileSystemImpl$BlockingAction:void handle(java.lang.Object)",
                        "io.vertx.core.json.JsonObject:java.lang.Boolean getBoolean(java.lang.String)",
                        "io.vertx.core.http.impl.Http2HeadersAdaptor:java.lang.String get(java.lang.String)",
                        "io.vertx.core.net.TCPSSLOptions:void <clinit>()",
                        "io.vertx.core.impl.VertxImpl:void deployVerticle(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
                        "io.vertx.core.DeploymentOptions:void <init>()",
                        "io.vertx.core.json.JsonObject:io.vertx.core.json.JsonObject put(java.lang.String,java.lang.Object)",
                        "io.vertx.core.json.JsonObject:io.vertx.core.json.JsonObject put(java.lang.String,java.lang.Integer)",
                        "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Object)",
                        "io.vertx.core.json.JsonObject:java.lang.String encode()",
                        "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.Handler)",
                        "io.vertx.core.http.impl.HttpServerImpl:io.vertx.core.http.HttpServer listen(int,io.vertx.core.Handler)",
                        "io.vertx.core.parsetools.impl.RecordParserImpl:void handle(java.lang.Object)",
                        "io.vertx.core.impl.CompositeFutureImpl:boolean succeeded()",
                        "io.vertx.core.json.JsonObject:io.vertx.core.json.JsonObject put(java.lang.String,io.vertx.core.json.JsonObject)",
                        "io.vertx.core.http.impl.HttpServerRequestImpl:io.vertx.core.net.SocketAddress remoteAddress()",
                        "io.vertx.core.impl.CompositeFutureImpl:io.vertx.core.CompositeFuture result()",
                        "io.vertx.core.json.JsonObject:java.lang.String getString(java.lang.String)",
                        "io.vertx.core.json.JsonArray:io.vertx.core.json.JsonArray add(java.lang.String)",
                        "io.vertx.core.http.impl.Http2ServerRequestImpl:io.vertx.core.net.SocketAddress remoteAddress()",
                        "io.vertx.core.http.impl.HttpServerResponseImpl:io.vertx.core.http.impl.HttpServerResponseImpl putHeader(java.lang.String,java.lang.String)",
                        "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(java.lang.Object)"
                    ],
                    "CVE": [
                        "CVE-2019-17640"
                    ],
                    "used vul-method": [
                        "io.vertx.core.eventbus.impl.MessageImpl:void reply(java.lang.Object)",
                        "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus$1:void handle(java.lang.Object)",
                        "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(java.lang.Object)",
                        "io.vertx.core.net.impl.NetSocketImpl$DataMessageHandler:void handle(java.lang.Object)",
                        "io.vertx.core.parsetools.impl.RecordParserImpl:void handle(java.lang.Object)"
                    ],
                    "vul-called frequency": 157,
                    "related vul root method": {
                        "CVE-2019-17640": [
                            "io.vertx.core.eventbus.impl.EventBusImpl:io.vertx.core.eventbus.ReplyException deliverMessageLocally(io.vertx.core.eventbus.impl.MessageImpl)"
                        ]
                    },
                    "CVE-API": {
                        "CVE-2019-17640": [
                            "io.vertx.core.eventbus.impl.MessageImpl:void reply(java.lang.Object)",
                            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus$1:void handle(java.lang.Object)",
                            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(java.lang.Object)",
                            "io.vertx.core.net.impl.NetSocketImpl$DataMessageHandler:void handle(java.lang.Object)",
                            "io.vertx.core.parsetools.impl.RecordParserImpl:void handle(java.lang.Object)"
                        ]
                    }
                },
                "io.vertx:vertx-web:3.8.2": {
                    "used-method num": 20,
                    "used method": [
                        "io.vertx.ext.web.handler.impl.BodyHandlerImpl$BHandler:void handle(java.lang.Object)",
                        "io.vertx.ext.web.handler.RedirectAuthHandler:io.vertx.ext.web.handler.AuthHandler create(io.vertx.ext.auth.AuthProvider,java.lang.String)",
                        "io.vertx.ext.web.impl.RoutingContextImpl:void fail(java.lang.Throwable)",
                        "io.vertx.ext.web.impl.RoutingContextImpl:io.vertx.core.http.HttpServerResponse response()",
                        "io.vertx.ext.web.sstore.LocalSessionStore:io.vertx.ext.web.sstore.LocalSessionStore create(io.vertx.core.Vertx)",
                        "io.vertx.ext.web.handler.BodyHandler:io.vertx.ext.web.handler.BodyHandler create()",
                        "io.vertx.ext.web.impl.RoutingContextDecorator:void fail(int)",
                        "io.vertx.ext.web.handler.JWTAuthHandler:io.vertx.ext.web.handler.JWTAuthHandler create(io.vertx.ext.auth.jwt.JWTAuth,java.lang.String)",
                        "io.vertx.ext.web.handler.SessionHandler:io.vertx.ext.web.handler.SessionHandler create(io.vertx.ext.web.sstore.SessionStore)",
                        "io.vertx.ext.web.impl.RoutingContextImpl:io.vertx.core.http.HttpServerRequest request()",
                        "io.vertx.ext.web.impl.RoutingContextWrapper:io.vertx.core.http.HttpServerResponse response()",
                        "io.vertx.ext.web.impl.RoutingContextImpl:java.util.Map data()",
                        "io.vertx.ext.web.handler.FormLoginHandler:io.vertx.ext.web.handler.FormLoginHandler create(io.vertx.ext.auth.AuthProvider)",
                        "io.vertx.ext.web.impl.BlockingHandlerDecorator:void handle(java.lang.Object)",
                        "io.vertx.ext.web.impl.RoutingContextDecorator:void fail(java.lang.Throwable)",
                        "io.vertx.ext.web.impl.RouteImpl:io.vertx.ext.web.Route handler(io.vertx.core.Handler)",
                        "io.vertx.ext.web.impl.RoutingContextWrapper:void fail(java.lang.Throwable)",
                        "io.vertx.ext.web.impl.RoutingContextImpl:void fail(int)",
                        "io.vertx.ext.web.impl.RoutingContextImpl:io.vertx.ext.web.RoutingContext put(java.lang.String,java.lang.Object)",
                        "io.vertx.ext.web.Router:io.vertx.ext.web.Router router(io.vertx.core.Vertx)"
                    ]
                }
            }
        },
        "io.vertx:wiki-step-8": {
            "vulnerable dependencies": {
                "io.vertx:vertx-core:3.8.2": {
                    "used-method num": 77,
                    "used method": [
                        "io.vertx.core.dns.impl.DnsClientImpl$2:void handle(java.lang.Object)",
                        "io.vertx.core.net.JksOptions:io.vertx.core.net.JksOptions setPassword(java.lang.String)",
                        "io.vertx.core.json.JsonArray:java.util.List getList()",
                        "io.vertx.core.json.JsonObject:io.vertx.core.json.JsonObject put(java.lang.String,java.lang.String)",
                        "io.vertx.core.http.impl.HttpHandlers:void handle(java.lang.Object)",
                        "io.vertx.core.http.impl.Http2ServerConnection$1:void handle(java.lang.Object)",
                        "io.vertx.core.net.PfxOptions:io.vertx.core.net.PfxOptions clone()",
                        "io.vertx.core.AbstractVerticle:void <init>()",
                        "io.vertx.core.net.PemTrustOptions:io.vertx.core.net.PemTrustOptions clone()",
                        "io.vertx.core.net.JdkSSLEngineOptions:io.vertx.core.net.JdkSSLEngineOptions clone()",
                        "io.vertx.core.eventbus.DeliveryOptions:io.vertx.core.eventbus.DeliveryOptions addHeader(java.lang.String,java.lang.String)",
                        "io.vertx.core.json.JsonObject:java.lang.Boolean getBoolean(java.lang.String,java.lang.Boolean)",
                        "io.vertx.core.json.JsonObject:void <init>()",
                        "io.vertx.core.json.JsonArray:java.lang.Integer getInteger(int)",
                        "io.vertx.core.json.JsonObject:io.vertx.core.json.JsonObject put(java.lang.String,io.vertx.core.json.JsonArray)",
                        "io.vertx.core.Future:io.vertx.core.Future succeededFuture(java.lang.Object)",
                        "io.vertx.core.json.JsonObject:java.lang.Integer getInteger(java.lang.String)",
                        "io.vertx.core.json.JsonArray:void <init>()",
                        "io.vertx.core.http.HttpServerOptions:io.vertx.core.http.HttpServerOptions setKeyStoreOptions(io.vertx.core.net.JksOptions)",
                        "io.vertx.core.net.JksOptions:io.vertx.core.net.JksOptions setPath(java.lang.String)",
                        "io.vertx.core.json.JsonObject:java.lang.Object getValue(java.lang.String)",
                        "io.vertx.core.eventbus.DeliveryOptions:void <init>()",
                        "io.vertx.core.net.PemKeyCertOptions:io.vertx.core.net.PemKeyCertOptions clone()",
                        "io.vertx.core.Future:void <clinit>()",
                        "io.vertx.core.impl.VertxImpl:long setPeriodic(long,io.vertx.core.Handler)",
                        "io.vertx.core.http.impl.HeadersAdaptor:java.lang.String get(java.lang.String)",
                        "io.vertx.core.eventbus.impl.MessageImpl:void reply(java.lang.Object)",
                        "io.vertx.core.json.JsonObject:java.lang.Integer getInteger(java.lang.String,java.lang.Integer)",
                        "io.vertx.core.eventbus.impl.MessageImpl:io.vertx.core.MultiMap headers()",
                        "io.vertx.core.http.CaseInsensitiveHeaders:java.lang.String get(java.lang.String)",
                        "io.vertx.core.http.HttpServerOptions:void <init>()",
                        "io.vertx.core.json.JsonArray:io.vertx.core.json.JsonArray add(io.vertx.core.json.JsonObject)",
                        "io.vertx.core.impl.VertxImpl:io.vertx.core.eventbus.EventBus eventBus()",
                        "io.vertx.core.http.HttpServerOptions:void <clinit>()",
                        "io.vertx.core.eventbus.impl.clustered.ClusteredMessage:java.lang.Object body()",
                        "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus$1:void handle(java.lang.Object)",
                        "io.vertx.core.http.impl.WebSocketRequestHandler:void handle(java.lang.Object)",
                        "io.vertx.core.eventbus.impl.EventBusImpl:io.vertx.core.eventbus.EventBus registerDefaultCodec(java.lang.Class,io.vertx.core.eventbus.MessageCodec)",
                        "io.vertx.core.net.JksOptions:void <init>()",
                        "io.vertx.core.http.HttpClientOptions:void <clinit>()",
                        "io.vertx.core.net.JksOptions:io.vertx.core.net.JksOptions clone()",
                        "io.vertx.core.eventbus.impl.clustered.ClusteredMessage:io.vertx.core.MultiMap headers()",
                        "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(java.lang.Object)",
                        "io.vertx.core.eventbus.impl.MessageImpl:java.lang.Object body()",
                        "io.vertx.core.impl.CompositeFutureImpl:java.lang.Throwable cause()",
                        "io.vertx.core.impl.CompositeFutureImpl:void handle(java.lang.Object)",
                        "io.vertx.core.net.OpenSSLEngineOptions:io.vertx.core.net.OpenSSLEngineOptions clone()",
                        "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Object)",
                        "io.vertx.core.impl.VertxImpl:boolean cancelTimer(long)",
                        "io.vertx.core.json.JsonObject:io.vertx.core.json.JsonObject put(java.lang.String,java.lang.Boolean)",
                        "io.vertx.core.eventbus.DeliveryOptions:void <init>(io.vertx.core.eventbus.DeliveryOptions)",
                        "io.vertx.core.json.JsonArray:io.vertx.core.json.JsonArray add(java.lang.Integer)",
                        "io.vertx.core.json.JsonObject:java.lang.Long getLong(java.lang.String)",
                        "io.vertx.core.json.JsonObject:java.lang.String getString(java.lang.String,java.lang.String)",
                        "io.vertx.core.http.impl.headers.VertxHttpHeaders:java.lang.String get(java.lang.String)",
                        "io.vertx.core.http.HttpServerOptions:io.vertx.core.http.HttpServerOptions setSsl(boolean)",
                        "io.vertx.core.net.impl.NetSocketImpl$DataMessageHandler:void handle(java.lang.Object)",
                        "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void handle(java.lang.Object)",
                        "io.vertx.core.json.JsonArray:java.lang.String getString(int)",
                        "io.vertx.core.http.impl.Http2HeadersAdaptor$1:java.lang.String get(int)",
                        "io.vertx.core.DeploymentOptions:io.vertx.core.DeploymentOptions setInstances(int)",
                        "io.vertx.core.Future:io.vertx.core.Future failedFuture(java.lang.Throwable)",
                        "io.vertx.core.file.impl.FileSystemImpl$BlockingAction:void handle(java.lang.Object)",
                        "io.vertx.core.json.JsonObject:java.lang.Boolean getBoolean(java.lang.String)",
                        "io.vertx.core.http.impl.Http2HeadersAdaptor:java.lang.String get(java.lang.String)",
                        "io.vertx.core.net.TCPSSLOptions:void <clinit>()",
                        "io.vertx.core.DeploymentOptions:void <init>()",
                        "io.vertx.core.json.JsonObject:io.vertx.core.json.JsonObject put(java.lang.String,java.lang.Object)",
                        "io.vertx.core.json.JsonObject:io.vertx.core.json.JsonObject put(java.lang.String,java.lang.Integer)",
                        "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Object)",
                        "io.vertx.core.json.JsonObject:java.lang.String encode()",
                        "io.vertx.core.parsetools.impl.RecordParserImpl:void handle(java.lang.Object)",
                        "io.vertx.core.impl.CompositeFutureImpl:boolean succeeded()",
                        "io.vertx.core.impl.CompositeFutureImpl:io.vertx.core.CompositeFuture result()",
                        "io.vertx.core.json.JsonObject:java.lang.String getString(java.lang.String)",
                        "io.vertx.core.json.JsonArray:io.vertx.core.json.JsonArray add(java.lang.String)",
                        "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(java.lang.Object)"
                    ],
                    "CVE": [
                        "CVE-2019-17640"
                    ],
                    "used vul-method": [
                        "io.vertx.core.eventbus.impl.MessageImpl:void reply(java.lang.Object)",
                        "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus$1:void handle(java.lang.Object)",
                        "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(java.lang.Object)",
                        "io.vertx.core.net.impl.NetSocketImpl$DataMessageHandler:void handle(java.lang.Object)",
                        "io.vertx.core.parsetools.impl.RecordParserImpl:void handle(java.lang.Object)"
                    ],
                    "vul-called frequency": 85,
                    "related vul root method": {
                        "CVE-2019-17640": [
                            "io.vertx.core.eventbus.impl.EventBusImpl:io.vertx.core.eventbus.ReplyException deliverMessageLocally(io.vertx.core.eventbus.impl.MessageImpl)"
                        ]
                    },
                    "CVE-API": {
                        "CVE-2019-17640": [
                            "io.vertx.core.eventbus.impl.MessageImpl:void reply(java.lang.Object)",
                            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus$1:void handle(java.lang.Object)",
                            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(java.lang.Object)",
                            "io.vertx.core.net.impl.NetSocketImpl$DataMessageHandler:void handle(java.lang.Object)",
                            "io.vertx.core.parsetools.impl.RecordParserImpl:void handle(java.lang.Object)"
                        ]
                    }
                },
                "io.vertx:vertx-web:3.8.2": {
                    "used-method num": 2,
                    "used method": [
                        "io.vertx.ext.web.handler.impl.BodyHandlerImpl$BHandler:void handle(java.lang.Object)",
                        "io.vertx.ext.web.impl.BlockingHandlerDecorator:void handle(java.lang.Object)"
                    ]
                }
            }
        },
        "io.vertx:wiki-step-9": {
            "vulnerable dependencies": {
                "io.vertx:vertx-core:3.8.2": {
                    "used-method num": 65,
                    "used method": [
                        "io.vertx.core.dns.impl.DnsClientImpl$2:void handle(java.lang.Object)",
                        "io.vertx.core.json.JsonArray:java.util.List getList()",
                        "io.vertx.core.json.JsonObject:io.vertx.core.json.JsonObject put(java.lang.String,java.lang.String)",
                        "io.vertx.core.http.impl.HttpHandlers:void handle(java.lang.Object)",
                        "io.vertx.core.http.impl.Http2ServerConnection$1:void handle(java.lang.Object)",
                        "io.vertx.core.net.PfxOptions:io.vertx.core.net.PfxOptions clone()",
                        "io.vertx.core.AbstractVerticle:void <init>()",
                        "io.vertx.core.net.PemTrustOptions:io.vertx.core.net.PemTrustOptions clone()",
                        "io.vertx.core.net.JdkSSLEngineOptions:io.vertx.core.net.JdkSSLEngineOptions clone()",
                        "io.vertx.core.eventbus.DeliveryOptions:io.vertx.core.eventbus.DeliveryOptions addHeader(java.lang.String,java.lang.String)",
                        "io.vertx.core.json.JsonObject:void <init>()",
                        "io.vertx.core.json.JsonArray:java.lang.Integer getInteger(int)",
                        "io.vertx.core.Future:io.vertx.core.Future succeededFuture(java.lang.Object)",
                        "io.vertx.core.json.JsonObject:java.lang.Integer getInteger(java.lang.String)",
                        "io.vertx.core.json.JsonArray:void <init>()",
                        "io.vertx.core.json.JsonObject:java.lang.Object getValue(java.lang.String)",
                        "io.vertx.core.eventbus.DeliveryOptions:void <init>()",
                        "io.vertx.core.net.PemKeyCertOptions:io.vertx.core.net.PemKeyCertOptions clone()",
                        "io.vertx.core.Future:void <clinit>()",
                        "io.vertx.core.impl.VertxImpl:long setPeriodic(long,io.vertx.core.Handler)",
                        "io.vertx.core.http.impl.HeadersAdaptor:java.lang.String get(java.lang.String)",
                        "io.vertx.core.eventbus.impl.MessageImpl:void reply(java.lang.Object)",
                        "io.vertx.core.json.JsonObject:java.lang.Integer getInteger(java.lang.String,java.lang.Integer)",
                        "io.vertx.core.eventbus.impl.MessageImpl:io.vertx.core.MultiMap headers()",
                        "io.vertx.core.http.CaseInsensitiveHeaders:java.lang.String get(java.lang.String)",
                        "io.vertx.core.impl.VertxImpl:io.vertx.core.eventbus.EventBus eventBus()",
                        "io.vertx.core.eventbus.impl.clustered.ClusteredMessage:java.lang.Object body()",
                        "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus$1:void handle(java.lang.Object)",
                        "io.vertx.core.http.impl.WebSocketRequestHandler:void handle(java.lang.Object)",
                        "io.vertx.core.eventbus.impl.EventBusImpl:io.vertx.core.eventbus.EventBus registerDefaultCodec(java.lang.Class,io.vertx.core.eventbus.MessageCodec)",
                        "io.vertx.core.net.JksOptions:io.vertx.core.net.JksOptions clone()",
                        "io.vertx.core.eventbus.impl.clustered.ClusteredMessage:io.vertx.core.MultiMap headers()",
                        "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(java.lang.Object)",
                        "io.vertx.core.eventbus.impl.MessageImpl:java.lang.Object body()",
                        "io.vertx.core.impl.CompositeFutureImpl:java.lang.Throwable cause()",
                        "io.vertx.core.impl.CompositeFutureImpl:void handle(java.lang.Object)",
                        "io.vertx.core.net.OpenSSLEngineOptions:io.vertx.core.net.OpenSSLEngineOptions clone()",
                        "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Object)",
                        "io.vertx.core.impl.VertxImpl:boolean cancelTimer(long)",
                        "io.vertx.core.json.JsonObject:io.vertx.core.json.JsonObject put(java.lang.String,java.lang.Boolean)",
                        "io.vertx.core.eventbus.DeliveryOptions:void <init>(io.vertx.core.eventbus.DeliveryOptions)",
                        "io.vertx.core.json.JsonArray:io.vertx.core.json.JsonArray add(java.lang.Integer)",
                        "io.vertx.core.json.JsonObject:java.lang.Long getLong(java.lang.String)",
                        "io.vertx.core.json.JsonObject:java.lang.String getString(java.lang.String,java.lang.String)",
                        "io.vertx.core.http.impl.headers.VertxHttpHeaders:java.lang.String get(java.lang.String)",
                        "io.vertx.core.net.impl.NetSocketImpl$DataMessageHandler:void handle(java.lang.Object)",
                        "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void handle(java.lang.Object)",
                        "io.vertx.core.json.JsonArray:java.lang.String getString(int)",
                        "io.vertx.core.http.impl.Http2HeadersAdaptor$1:java.lang.String get(int)",
                        "io.vertx.core.DeploymentOptions:io.vertx.core.DeploymentOptions setInstances(int)",
                        "io.vertx.core.Future:io.vertx.core.Future failedFuture(java.lang.Throwable)",
                        "io.vertx.core.file.impl.FileSystemImpl$BlockingAction:void handle(java.lang.Object)",
                        "io.vertx.core.json.JsonObject:java.lang.Boolean getBoolean(java.lang.String)",
                        "io.vertx.core.http.impl.Http2HeadersAdaptor:java.lang.String get(java.lang.String)",
                        "io.vertx.core.DeploymentOptions:void <init>()",
                        "io.vertx.core.json.JsonObject:io.vertx.core.json.JsonObject put(java.lang.String,java.lang.Object)",
                        "io.vertx.core.json.JsonObject:io.vertx.core.json.JsonObject put(java.lang.String,java.lang.Integer)",
                        "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Object)",
                        "io.vertx.core.json.JsonObject:java.lang.String encode()",
                        "io.vertx.core.parsetools.impl.RecordParserImpl:void handle(java.lang.Object)",
                        "io.vertx.core.impl.CompositeFutureImpl:boolean succeeded()",
                        "io.vertx.core.impl.CompositeFutureImpl:io.vertx.core.CompositeFuture result()",
                        "io.vertx.core.json.JsonObject:java.lang.String getString(java.lang.String)",
                        "io.vertx.core.json.JsonArray:io.vertx.core.json.JsonArray add(java.lang.String)",
                        "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(java.lang.Object)"
                    ],
                    "CVE": [
                        "CVE-2019-17640"
                    ],
                    "used vul-method": [
                        "io.vertx.core.eventbus.impl.MessageImpl:void reply(java.lang.Object)",
                        "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus$1:void handle(java.lang.Object)",
                        "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(java.lang.Object)",
                        "io.vertx.core.net.impl.NetSocketImpl$DataMessageHandler:void handle(java.lang.Object)",
                        "io.vertx.core.parsetools.impl.RecordParserImpl:void handle(java.lang.Object)"
                    ],
                    "vul-called frequency": 85,
                    "related vul root method": {
                        "CVE-2019-17640": [
                            "io.vertx.core.eventbus.impl.EventBusImpl:io.vertx.core.eventbus.ReplyException deliverMessageLocally(io.vertx.core.eventbus.impl.MessageImpl)"
                        ]
                    },
                    "CVE-API": {
                        "CVE-2019-17640": [
                            "io.vertx.core.eventbus.impl.MessageImpl:void reply(java.lang.Object)",
                            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus$1:void handle(java.lang.Object)",
                            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(java.lang.Object)",
                            "io.vertx.core.net.impl.NetSocketImpl$DataMessageHandler:void handle(java.lang.Object)",
                            "io.vertx.core.parsetools.impl.RecordParserImpl:void handle(java.lang.Object)"
                        ]
                    }
                },
                "io.vertx:vertx-web:3.8.2": {
                    "used-method num": 2,
                    "used method": [
                        "io.vertx.ext.web.handler.impl.BodyHandlerImpl$BHandler:void handle(java.lang.Object)",
                        "io.vertx.ext.web.impl.BlockingHandlerDecorator:void handle(java.lang.Object)"
                    ]
                }
            }
        },
        "io.vertx:wiki-step-10": {
            "vulnerable dependencies": {
                "io.vertx:vertx-core:3.8.2": {
                    "used-method num": 65,
                    "used method": [
                        "io.vertx.core.dns.impl.DnsClientImpl$2:void handle(java.lang.Object)",
                        "io.vertx.core.json.JsonArray:java.util.List getList()",
                        "io.vertx.core.json.JsonObject:io.vertx.core.json.JsonObject put(java.lang.String,java.lang.String)",
                        "io.vertx.core.http.impl.HttpHandlers:void handle(java.lang.Object)",
                        "io.vertx.core.http.impl.Http2ServerConnection$1:void handle(java.lang.Object)",
                        "io.vertx.core.net.PfxOptions:io.vertx.core.net.PfxOptions clone()",
                        "io.vertx.core.AbstractVerticle:void <init>()",
                        "io.vertx.core.net.PemTrustOptions:io.vertx.core.net.PemTrustOptions clone()",
                        "io.vertx.core.net.JdkSSLEngineOptions:io.vertx.core.net.JdkSSLEngineOptions clone()",
                        "io.vertx.core.eventbus.DeliveryOptions:io.vertx.core.eventbus.DeliveryOptions addHeader(java.lang.String,java.lang.String)",
                        "io.vertx.core.json.JsonObject:void <init>()",
                        "io.vertx.core.json.JsonArray:java.lang.Integer getInteger(int)",
                        "io.vertx.core.Future:io.vertx.core.Future succeededFuture(java.lang.Object)",
                        "io.vertx.core.json.JsonObject:java.lang.Integer getInteger(java.lang.String)",
                        "io.vertx.core.json.JsonArray:void <init>()",
                        "io.vertx.core.json.JsonObject:java.lang.Object getValue(java.lang.String)",
                        "io.vertx.core.eventbus.DeliveryOptions:void <init>()",
                        "io.vertx.core.net.PemKeyCertOptions:io.vertx.core.net.PemKeyCertOptions clone()",
                        "io.vertx.core.Future:void <clinit>()",
                        "io.vertx.core.impl.VertxImpl:long setPeriodic(long,io.vertx.core.Handler)",
                        "io.vertx.core.http.impl.HeadersAdaptor:java.lang.String get(java.lang.String)",
                        "io.vertx.core.eventbus.impl.MessageImpl:void reply(java.lang.Object)",
                        "io.vertx.core.json.JsonObject:java.lang.Integer getInteger(java.lang.String,java.lang.Integer)",
                        "io.vertx.core.eventbus.impl.MessageImpl:io.vertx.core.MultiMap headers()",
                        "io.vertx.core.http.CaseInsensitiveHeaders:java.lang.String get(java.lang.String)",
                        "io.vertx.core.impl.VertxImpl:io.vertx.core.eventbus.EventBus eventBus()",
                        "io.vertx.core.eventbus.impl.clustered.ClusteredMessage:java.lang.Object body()",
                        "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus$1:void handle(java.lang.Object)",
                        "io.vertx.core.http.impl.WebSocketRequestHandler:void handle(java.lang.Object)",
                        "io.vertx.core.eventbus.impl.EventBusImpl:io.vertx.core.eventbus.EventBus registerDefaultCodec(java.lang.Class,io.vertx.core.eventbus.MessageCodec)",
                        "io.vertx.core.net.JksOptions:io.vertx.core.net.JksOptions clone()",
                        "io.vertx.core.eventbus.impl.clustered.ClusteredMessage:io.vertx.core.MultiMap headers()",
                        "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(java.lang.Object)",
                        "io.vertx.core.eventbus.impl.MessageImpl:java.lang.Object body()",
                        "io.vertx.core.impl.CompositeFutureImpl:java.lang.Throwable cause()",
                        "io.vertx.core.impl.CompositeFutureImpl:void handle(java.lang.Object)",
                        "io.vertx.core.net.OpenSSLEngineOptions:io.vertx.core.net.OpenSSLEngineOptions clone()",
                        "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Object)",
                        "io.vertx.core.impl.VertxImpl:boolean cancelTimer(long)",
                        "io.vertx.core.json.JsonObject:io.vertx.core.json.JsonObject put(java.lang.String,java.lang.Boolean)",
                        "io.vertx.core.eventbus.DeliveryOptions:void <init>(io.vertx.core.eventbus.DeliveryOptions)",
                        "io.vertx.core.json.JsonArray:io.vertx.core.json.JsonArray add(java.lang.Integer)",
                        "io.vertx.core.json.JsonObject:java.lang.Long getLong(java.lang.String)",
                        "io.vertx.core.json.JsonObject:java.lang.String getString(java.lang.String,java.lang.String)",
                        "io.vertx.core.http.impl.headers.VertxHttpHeaders:java.lang.String get(java.lang.String)",
                        "io.vertx.core.net.impl.NetSocketImpl$DataMessageHandler:void handle(java.lang.Object)",
                        "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void handle(java.lang.Object)",
                        "io.vertx.core.json.JsonArray:java.lang.String getString(int)",
                        "io.vertx.core.http.impl.Http2HeadersAdaptor$1:java.lang.String get(int)",
                        "io.vertx.core.DeploymentOptions:io.vertx.core.DeploymentOptions setInstances(int)",
                        "io.vertx.core.Future:io.vertx.core.Future failedFuture(java.lang.Throwable)",
                        "io.vertx.core.file.impl.FileSystemImpl$BlockingAction:void handle(java.lang.Object)",
                        "io.vertx.core.json.JsonObject:java.lang.Boolean getBoolean(java.lang.String)",
                        "io.vertx.core.http.impl.Http2HeadersAdaptor:java.lang.String get(java.lang.String)",
                        "io.vertx.core.DeploymentOptions:void <init>()",
                        "io.vertx.core.json.JsonObject:io.vertx.core.json.JsonObject put(java.lang.String,java.lang.Object)",
                        "io.vertx.core.json.JsonObject:io.vertx.core.json.JsonObject put(java.lang.String,java.lang.Integer)",
                        "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Object)",
                        "io.vertx.core.json.JsonObject:java.lang.String encode()",
                        "io.vertx.core.parsetools.impl.RecordParserImpl:void handle(java.lang.Object)",
                        "io.vertx.core.impl.CompositeFutureImpl:boolean succeeded()",
                        "io.vertx.core.impl.CompositeFutureImpl:io.vertx.core.CompositeFuture result()",
                        "io.vertx.core.json.JsonObject:java.lang.String getString(java.lang.String)",
                        "io.vertx.core.json.JsonArray:io.vertx.core.json.JsonArray add(java.lang.String)",
                        "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(java.lang.Object)"
                    ],
                    "CVE": [
                        "CVE-2019-17640"
                    ],
                    "used vul-method": [
                        "io.vertx.core.eventbus.impl.MessageImpl:void reply(java.lang.Object)",
                        "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus$1:void handle(java.lang.Object)",
                        "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(java.lang.Object)",
                        "io.vertx.core.net.impl.NetSocketImpl$DataMessageHandler:void handle(java.lang.Object)",
                        "io.vertx.core.parsetools.impl.RecordParserImpl:void handle(java.lang.Object)"
                    ],
                    "vul-called frequency": 85,
                    "related vul root method": {
                        "CVE-2019-17640": [
                            "io.vertx.core.eventbus.impl.EventBusImpl:io.vertx.core.eventbus.ReplyException deliverMessageLocally(io.vertx.core.eventbus.impl.MessageImpl)"
                        ]
                    },
                    "CVE-API": {
                        "CVE-2019-17640": [
                            "io.vertx.core.eventbus.impl.MessageImpl:void reply(java.lang.Object)",
                            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus$1:void handle(java.lang.Object)",
                            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(java.lang.Object)",
                            "io.vertx.core.net.impl.NetSocketImpl$DataMessageHandler:void handle(java.lang.Object)",
                            "io.vertx.core.parsetools.impl.RecordParserImpl:void handle(java.lang.Object)"
                        ]
                    }
                },
                "io.vertx:vertx-web:3.8.2": {
                    "used-method num": 8,
                    "used method": [
                        "io.vertx.ext.web.handler.impl.BodyHandlerImpl$BHandler:void handle(java.lang.Object)",
                        "io.vertx.ext.web.handler.sockjs.impl.SockJSHandlerImpl$1:void handle(java.lang.Object)",
                        "io.vertx.ext.web.handler.sockjs.BridgeOptions:void <init>()",
                        "io.vertx.ext.web.handler.sockjs.impl.BaseTransport$1:void handle(java.lang.Object)",
                        "io.vertx.ext.web.handler.sockjs.BridgeOptions:io.vertx.ext.web.handler.sockjs.BridgeOptions addOutboundPermitted(io.vertx.ext.bridge.PermittedOptions)",
                        "io.vertx.ext.web.handler.sockjs.BridgeOptions:io.vertx.ext.web.handler.sockjs.BridgeOptions addInboundPermitted(io.vertx.ext.bridge.PermittedOptions)",
                        "io.vertx.ext.web.impl.BlockingHandlerDecorator:void handle(java.lang.Object)",
                        "io.vertx.ext.web.handler.sockjs.impl.EventBusBridgeImpl:void handle(java.lang.Object)"
                    ]
                }
            }
        }
    }
}
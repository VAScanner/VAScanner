{
    "project name": "pibigstar_parsevip",
    "vulnerable dependencies": {
        "com.alibaba:fastjson:1.2.47": {
            "used-method num": 27,
            "used method": [
                "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object)",
                "com.alibaba.fastjson.JSONPObject:java.lang.String toString()",
                "com.alibaba.fastjson.serializer.JSONSerializer:java.lang.String toString()",
                "com.alibaba.fastjson.JSON:java.lang.Object parseObject(java.lang.String,java.lang.Class)",
                "com.alibaba.fastjson.parser.ParseContext:java.lang.String toString()",
                "com.alibaba.fastjson.JSONArray:java.util.Iterator iterator()",
                "com.alibaba.fastjson.JSON:java.lang.String toString()",
                "com.alibaba.fastjson.JSON:java.lang.Object toJavaObject(com.alibaba.fastjson.JSON,java.lang.Class)",
                "com.alibaba.fastjson.JSONArray:boolean contains(java.lang.Object)",
                "com.alibaba.fastjson.JSON:com.alibaba.fastjson.JSONObject parseObject(java.lang.String)",
                "com.alibaba.fastjson.JSONArray:boolean isEmpty()",
                "com.alibaba.fastjson.JSONArray:boolean equals(java.lang.Object)",
                "com.alibaba.fastjson.serializer.SerialContext:java.lang.String toString()",
                "com.alibaba.fastjson.JSONArray:int size()",
                "com.alibaba.fastjson.serializer.SerializeWriter:java.lang.String toString()",
                "com.alibaba.fastjson.JSONObject:java.lang.Object clone()",
                "com.alibaba.fastjson.JSONObject:boolean equals(java.lang.Object)",
                "com.alibaba.fastjson.util.ParameterizedTypeImpl:boolean equals(java.lang.Object)",
                "com.alibaba.fastjson.JSON:void <clinit>()",
                "com.alibaba.fastjson.JSONObject:boolean containsKey(java.lang.Object)",
                "com.alibaba.fastjson.JSONArray:java.lang.Object clone()",
                "com.alibaba.fastjson.JSONArray:java.lang.Object get(int)",
                "com.alibaba.fastjson.JSONArray:java.util.List subList(int,int)",
                "com.alibaba.fastjson.JSONObject:java.util.Set entrySet()",
                "com.alibaba.fastjson.JSONObject:java.lang.Object get(java.lang.Object)",
                "com.alibaba.fastjson.JSONArray:boolean add(java.lang.Object)",
                "com.alibaba.fastjson.JSON:java.util.List parseArray(java.lang.String,java.lang.Class)"
            ],
            "CVE": [
                "CVE-2022-25845"
            ],
            "used vul-method": [
                "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object)",
                "com.alibaba.fastjson.JSONPObject:java.lang.String toString()",
                "com.alibaba.fastjson.JSON:java.lang.Object parseObject(java.lang.String,java.lang.Class)",
                "com.alibaba.fastjson.JSON:java.lang.String toString()",
                "com.alibaba.fastjson.JSON:java.lang.Object toJavaObject(com.alibaba.fastjson.JSON,java.lang.Class)",
                "com.alibaba.fastjson.JSON:com.alibaba.fastjson.JSONObject parseObject(java.lang.String)",
                "com.alibaba.fastjson.JSON:java.util.List parseArray(java.lang.String,java.lang.Class)"
            ],
            "vul-called frequency": 43,
            "related vul root method": {
                "CVE-2022-25845": [
                    "com.alibaba.fastjson.parser.ParserConfig:java.lang.Class checkAutoType(java.lang.String,java.lang.Class,int)"
                ]
            },
            "CVE-API": {
                "CVE-2022-25845": [
                    "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object)",
                    "com.alibaba.fastjson.JSONPObject:java.lang.String toString()",
                    "com.alibaba.fastjson.JSON:java.lang.Object parseObject(java.lang.String,java.lang.Class)",
                    "com.alibaba.fastjson.JSON:java.lang.String toString()",
                    "com.alibaba.fastjson.JSON:java.lang.Object toJavaObject(com.alibaba.fastjson.JSON,java.lang.Class)",
                    "com.alibaba.fastjson.JSON:com.alibaba.fastjson.JSONObject parseObject(java.lang.String)",
                    "com.alibaba.fastjson.JSON:java.util.List parseArray(java.lang.String,java.lang.Class)"
                ]
            }
        },
        "org.apache.poi:poi-ooxml:3.10-FINAL": {
            "used-method num": 47,
            "used method": [
                "org.apache.poi.openxml4j.opc.internal.ContentType:java.lang.String toString()",
                "org.apache.poi.xssf.usermodel.XSSFWorkbook:org.apache.poi.xssf.usermodel.XSSFFont createFont()",
                "org.apache.poi.openxml4j.opc.PackagePartName:boolean equals(java.lang.Object)",
                "org.apache.poi.xssf.usermodel.extensions.XSSFCellBorder:boolean equals(java.lang.Object)",
                "org.apache.poi.xssf.usermodel.XSSFCellStyle:void setFont(org.apache.poi.ss.usermodel.Font)",
                "org.apache.poi.openxml4j.opc.PackagePartCollection:java.lang.Object clone()",
                "org.apache.poi.xssf.usermodel.XSSFDialogsheet:org.apache.poi.xssf.usermodel.XSSFRow createRow(int)",
                "org.apache.poi.xssf.usermodel.XSSFCell:java.lang.String getStringCellValue()",
                "org.apache.poi.xssf.usermodel.XSSFSheet:int getLastRowNum()",
                "org.apache.poi.xssf.usermodel.XSSFRichTextString:java.lang.String toString()",
                "org.apache.poi.xssf.usermodel.XSSFRow:java.lang.String toString()",
                "org.apache.poi.xssf.usermodel.XSSFRow:org.apache.poi.xssf.usermodel.XSSFCell getCell(int)",
                "org.apache.poi.xssf.usermodel.XSSFCell:void setCellStyle(org.apache.poi.ss.usermodel.CellStyle)",
                "org.apache.poi.xssf.usermodel.XSSFCell:java.lang.String toString()",
                "org.apache.poi.xssf.usermodel.XSSFWorkbook:void <clinit>()",
                "org.apache.poi.xssf.usermodel.XSSFColor:boolean equals(java.lang.Object)",
                "org.apache.poi.xssf.usermodel.XSSFWorkbook:org.apache.poi.xssf.usermodel.XSSFSheet getSheetAt(int)",
                "org.apache.poi.openxml4j.opc.internal.MemoryPackagePartOutputStream:void write(byte[],int,int)",
                "org.apache.poi.xssf.usermodel.XSSFName:boolean equals(java.lang.Object)",
                "org.apache.poi.xssf.usermodel.XSSFFont:boolean equals(java.lang.Object)",
                "org.apache.poi.xssf.usermodel.XSSFCell:double getNumericCellValue()",
                "org.apache.poi.xssf.usermodel.XSSFWorkbook:org.apache.poi.xssf.usermodel.XSSFCellStyle createCellStyle()",
                "org.apache.poi.xssf.usermodel.XSSFClientAnchor:java.lang.String toString()",
                "org.apache.poi.xssf.usermodel.XSSFRow:org.apache.poi.xssf.usermodel.XSSFCell createCell(int)",
                "org.apache.poi.xssf.usermodel.XSSFCell:boolean getBooleanCellValue()",
                "org.apache.poi.xssf.usermodel.XSSFCell:void setCellValue(java.lang.String)",
                "org.apache.poi.xssf.usermodel.XSSFTextParagraph:java.lang.String toString()",
                "org.apache.poi.POIXMLDocumentPart:java.lang.String toString()",
                "org.apache.poi.openxml4j.opc.PackageRelationshipCollection:java.lang.String toString()",
                "org.apache.poi.xssf.usermodel.XSSFSheet:org.apache.poi.xssf.usermodel.XSSFRow getRow(int)",
                "org.apache.poi.openxml4j.opc.internal.MemoryPackagePartOutputStream:void close()",
                "org.apache.poi.xssf.usermodel.XSSFSheet:int getFirstRowNum()",
                "org.apache.poi.xssf.usermodel.XSSFTextRun:java.lang.String toString()",
                "org.apache.poi.xssf.usermodel.XSSFFont:java.lang.String toString()",
                "org.apache.poi.xssf.usermodel.XSSFClientAnchor:boolean equals(java.lang.Object)",
                "org.apache.poi.openxml4j.opc.internal.MemoryPackagePartOutputStream:void flush()",
                "org.apache.poi.openxml4j.opc.PackageRelationship:boolean equals(java.lang.Object)",
                "org.apache.poi.xssf.usermodel.XSSFSheet:void setColumnWidth(int,int)",
                "org.apache.poi.xssf.usermodel.XSSFCellStyle:java.lang.Object clone()",
                "org.apache.poi.xssf.usermodel.extensions.XSSFCellFill:boolean equals(java.lang.Object)",
                "org.apache.poi.xssf.usermodel.XSSFWorkbook:void <init>(java.io.InputStream)",
                "org.apache.poi.xssf.usermodel.XSSFFont:void setBold(boolean)",
                "org.apache.poi.openxml4j.opc.PackagePartName:java.lang.String toString()",
                "org.apache.poi.POIXMLDocumentPart:void <clinit>()",
                "org.apache.poi.openxml4j.opc.internal.ContentType:boolean equals(java.lang.Object)",
                "org.apache.poi.openxml4j.opc.PackagePart:java.lang.String toString()",
                "org.apache.poi.openxml4j.opc.PackageRelationship:java.lang.String toString()"
            ]
        },
        "dom4j:dom4j:1.6.1": {
            "used-method num": 48,
            "used method": [
                "org.dom4j.tree.DefaultElement:java.lang.Object clone()",
                "org.dom4j.DocumentException:void printStackTrace()",
                "org.dom4j.tree.AbstractProcessingInstruction:java.lang.String toString()",
                "org.dom4j.tree.ConcurrentReaderHashMap$EntrySet:java.util.Iterator iterator()",
                "org.dom4j.tree.AbstractText:java.lang.String toString()",
                "org.dom4j.tree.ContentListFacade:int size()",
                "org.dom4j.tree.ContentListFacade:boolean contains(java.lang.Object)",
                "org.dom4j.tree.AbstractDocument:java.lang.String toString()",
                "org.dom4j.tree.DefaultDocument:org.dom4j.Element getRootElement()",
                "org.dom4j.QName:java.lang.String toString()",
                "org.dom4j.tree.AbstractAttribute:java.lang.String toString()",
                "org.dom4j.tree.ContentListFacade:boolean isEmpty()",
                "org.dom4j.DocumentException:java.lang.String getMessage()",
                "org.dom4j.Namespace:java.lang.String toString()",
                "org.dom4j.tree.AbstractNode:java.lang.Object clone()",
                "org.dom4j.tree.AbstractCDATA:java.lang.String toString()",
                "org.dom4j.tree.NamespaceStack:java.lang.String toString()",
                "org.dom4j.Namespace:boolean equals(java.lang.Object)",
                "org.dom4j.tree.ConcurrentReaderHashMap:boolean containsKey(java.lang.Object)",
                "org.dom4j.tree.AbstractEntity:java.lang.String toString()",
                "org.dom4j.tree.ConcurrentReaderHashMap$Entry:boolean equals(java.lang.Object)",
                "org.dom4j.xpath.XPathPattern:java.lang.String toString()",
                "org.dom4j.tree.ConcurrentReaderHashMap$KeySet:java.util.Iterator iterator()",
                "org.dom4j.dtd.InternalEntityDecl:java.lang.String toString()",
                "org.dom4j.tree.AbstractElement:java.lang.String toString()",
                "org.dom4j.tree.AbstractElement:java.util.List elements(java.lang.String)",
                "org.dom4j.tree.ConcurrentReaderHashMap:java.lang.Object clone()",
                "org.dom4j.xpath.DefaultXPath:java.lang.String toString()",
                "org.dom4j.tree.ConcurrentReaderHashMap:java.lang.Object get(java.lang.Object)",
                "org.dom4j.tree.AbstractComment:java.lang.String toString()",
                "org.dom4j.dtd.ExternalEntityDecl:java.lang.String toString()",
                "org.dom4j.tree.ConcurrentReaderHashMap$HashIterator:java.lang.Object next()",
                "org.dom4j.tree.ConcurrentReaderHashMap$Entry:java.lang.String toString()",
                "org.dom4j.tree.ConcurrentReaderHashMap$HashIterator:boolean hasNext()",
                "org.dom4j.io.SAXReader:org.dom4j.Document read(java.io.InputStream)",
                "org.dom4j.tree.ContentListFacade:java.lang.Object get(int)",
                "org.dom4j.dtd.AttributeDecl:java.lang.String toString()",
                "org.dom4j.tree.DefaultElement:java.lang.String getText()",
                "org.dom4j.dtd.ElementDecl:java.lang.String toString()",
                "org.dom4j.tree.ConcurrentReaderHashMap$Values:java.util.Iterator iterator()",
                "org.dom4j.tree.ConcurrentReaderHashMap:java.util.Set entrySet()",
                "org.dom4j.io.SAXReader:void <init>()",
                "org.dom4j.tree.DefaultNamespace:boolean equals(java.lang.Object)",
                "org.dom4j.QName:boolean equals(java.lang.Object)",
                "org.dom4j.tree.DefaultElement:org.dom4j.Element element(java.lang.String)",
                "org.dom4j.tree.DefaultDocument:java.lang.Object clone()",
                "org.dom4j.tree.ContentListFacade:boolean add(java.lang.Object)",
                "org.dom4j.tree.AbstractDocumentType:java.lang.String toString()"
            ]
        }
    }
}
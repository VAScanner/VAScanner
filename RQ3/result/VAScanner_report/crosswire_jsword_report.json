{
    "project name": "crosswire_jsword",
    "vulnerable dependencies": {
        "org.apache.commons:commons-compress:1.14": {
            "used-method num": 69,
            "used method": [
                "org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream:void <init>(java.io.InputStream)",
                "org.apache.commons.compress.compressors.xz.XZCompressorOutputStream:void <init>(java.io.OutputStream)",
                "org.apache.commons.compress.compressors.gzip.GzipCompressorInputStream:int read(byte[],int,int)",
                "org.apache.commons.compress.archivers.zip.ZipLong:java.lang.Object clone()",
                "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream:void <clinit>()",
                "org.apache.commons.compress.archivers.zip.ZipFile:java.util.Enumeration getEntries()",
                "org.apache.commons.compress.archivers.tar.TarArchiveInputStream:void <init>(java.io.InputStream)",
                "org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream:int read(byte[],int,int)",
                "org.apache.commons.compress.archivers.zip.ZipFile:void <init>(java.lang.String)",
                "org.apache.commons.compress.compressors.xz.XZCompressorInputStream:int read(byte[],int,int)",
                "org.apache.commons.compress.archivers.zip.ZipShort:java.lang.String toString()",
                "org.apache.commons.compress.archivers.zip.ZipArchiveEntry:java.lang.String getName()",
                "org.apache.commons.compress.archivers.zip.ZipFile:java.io.InputStream getInputStream(org.apache.commons.compress.archivers.zip.ZipArchiveEntry)",
                "org.apache.commons.compress.utils.BitInputStream:void close()",
                "org.apache.commons.compress.archivers.zip.ZipEightByteInteger:boolean equals(java.lang.Object)",
                "org.apache.commons.compress.archivers.zip.ZipArchiveEntry:boolean isDirectory()",
                "org.apache.commons.compress.archivers.zip.ZipShort:boolean equals(java.lang.Object)",
                "org.apache.commons.compress.archivers.zip.ZipEightByteInteger:java.lang.String toString()",
                "org.apache.commons.compress.compressors.xz.XZCompressorInputStream:void <init>(java.io.InputStream)",
                "org.apache.commons.compress.archivers.tar.TarArchiveEntry:java.lang.String getName()",
                "org.apache.commons.compress.archivers.zip.ZipLong:boolean equals(java.lang.Object)",
                "org.apache.commons.compress.compressors.gzip.GzipCompressorInputStream:int read()",
                "org.apache.commons.compress.archivers.zip.ZipShort:java.lang.Object clone()",
                "org.apache.commons.compress.compressors.lzw.LZWInputStream:int read()",
                "org.apache.commons.compress.compressors.xz.XZCompressorInputStream:int read()",
                "org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream:void close()",
                "org.apache.commons.compress.archivers.zip.GeneralPurposeBit:java.lang.Object clone()",
                "org.apache.commons.compress.compressors.bzip2.BZip2CompressorOutputStream:void flush()",
                "org.apache.commons.compress.archivers.zip.ZipArchiveEntry:long getSize()",
                "org.apache.commons.compress.archivers.zip.ZipLong:java.lang.String toString()",
                "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream:void <clinit>()",
                "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream:void <init>(java.io.File)",
                "org.apache.commons.compress.compressors.gzip.GzipCompressorInputStream:void close()",
                "org.apache.commons.compress.compressors.lzw.LZWInputStream:int read(byte[],int,int)",
                "org.apache.commons.compress.compressors.bzip2.BZip2CompressorOutputStream:void close()",
                "org.apache.commons.compress.compressors.gzip.GzipCompressorInputStream:void <init>(java.io.InputStream)",
                "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$BoundedInputStream:int read(byte[])",
                "org.apache.commons.compress.archivers.zip.ZipArchiveEntry:java.lang.Object clone()",
                "org.apache.commons.compress.archivers.tar.TarArchiveEntry:boolean equals(java.lang.Object)",
                "org.apache.commons.compress.compressors.gzip.GzipCompressorOutputStream:void flush()",
                "org.apache.commons.compress.archivers.zip.ZipFile$1:void close()",
                "org.apache.commons.compress.archivers.tar.TarArchiveEntry:boolean isDirectory()",
                "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream:void <init>(java.io.InputStream)",
                "org.apache.commons.compress.compressors.bzip2.BZip2CompressorOutputStream:void write(byte[],int,int)",
                "org.apache.commons.compress.archivers.zip.ZipFile:void <init>(java.io.File)",
                "org.apache.commons.compress.archivers.zip.ZipFile:void close()",
                "org.apache.commons.compress.archivers.zip.ZipFile$BoundedInputStream:int read()",
                "org.apache.commons.compress.archivers.zip.ExplodingInputStream:int read()",
                "org.apache.commons.compress.compressors.gzip.GzipCompressorOutputStream:void <init>(java.io.OutputStream)",
                "org.apache.commons.compress.utils.IOUtils:long copy(java.io.InputStream,java.io.OutputStream)",
                "org.apache.commons.compress.archivers.zip.ZipArchiveEntry:void <init>(java.lang.String)",
                "org.apache.commons.compress.archivers.zip.ZipFile$Entry:boolean equals(java.lang.Object)",
                "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$BoundedInputStream:int read(byte[],int,int)",
                "org.apache.commons.compress.archivers.tar.TarArchiveEntry:long getSize()",
                "org.apache.commons.compress.archivers.zip.Simple8BitZipEncoding$Simple8BitChar:java.lang.String toString()",
                "org.apache.commons.compress.archivers.zip.ZipFile:void <clinit>()",
                "org.apache.commons.compress.compressors.bzip2.BZip2CompressorOutputStream:void <init>(java.io.OutputStream)",
                "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$BoundedInputStream:int read()",
                "org.apache.commons.compress.archivers.zip.ZipFile$BoundedInputStream:int read(byte[],int,int)",
                "org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream:int read()",
                "org.apache.commons.compress.archivers.zip.GeneralPurposeBit:boolean equals(java.lang.Object)",
                "org.apache.commons.compress.archivers.zip.ZipFile$2:int compare(java.lang.Object,java.lang.Object)",
                "org.apache.commons.compress.compressors.gzip.GzipCompressorOutputStream:void close()",
                "org.apache.commons.compress.archivers.zip.ZipArchiveEntry:boolean equals(java.lang.Object)",
                "org.apache.commons.compress.utils.CloseShieldFilterInputStream:void close()",
                "org.apache.commons.compress.compressors.lzw.LZWInputStream:void close()",
                "org.apache.commons.compress.archivers.zip.ZipFile:org.apache.commons.compress.archivers.zip.ZipArchiveEntry getEntry(java.lang.String)",
                "org.apache.commons.compress.compressors.gzip.GzipCompressorOutputStream:void write(byte[],int,int)",
                "org.apache.commons.compress.compressors.gzip.GzipCompressorInputStream:void <clinit>()"
            ]
        },
        "org.apache.httpcomponents:httpclient:4.5": {
            "used-method num": 95,
            "used method": [
                "org.apache.http.impl.execchain.ResponseEntityProxy:java.lang.String toString()",
                "org.apache.http.impl.client.HttpClientBuilder:org.apache.http.impl.client.CloseableHttpClient build()",
                "org.apache.http.client.entity.LazyDecompressingInputStream:void close()",
                "org.apache.http.cookie.CookieOrigin:java.lang.String toString()",
                "org.apache.http.impl.client.RedirectLocations:java.net.URI remove(int)",
                "org.apache.http.client.methods.HttpGet:void <init>(java.net.URI)",
                "org.apache.http.impl.execchain.RequestEntityProxy:java.io.InputStream getContent()",
                "org.apache.http.client.methods.HttpHead:void <init>(java.net.URI)",
                "org.apache.http.impl.client.BasicCredentialsProvider:java.lang.String toString()",
                "org.apache.http.conn.EofSensorInputStream:int read(byte[],int,int)",
                "org.apache.http.auth.NTCredentials:java.lang.String toString()",
                "org.apache.http.impl.client.RedirectLocations:java.net.URI get(int)",
                "org.ietf.jgss.Oid:boolean equals(java.lang.Object)",
                "org.ietf.jgss.Oid:java.lang.String toString()",
                "org.apache.http.impl.client.HttpClientBuilder$1:void close()",
                "org.apache.http.impl.cookie.BasicClientCookie:java.lang.String toString()",
                "org.apache.http.client.config.RequestConfig$Builder:org.apache.http.client.config.RequestConfig$Builder setConnectTimeout(int)",
                "org.apache.http.cookie.CookiePathComparator:int compare(java.lang.Object,java.lang.Object)",
                "org.apache.http.cookie.CookieIdentityComparator:int compare(java.lang.Object,java.lang.Object)",
                "org.apache.http.auth.UsernamePasswordCredentials:java.lang.String toString()",
                "org.apache.http.impl.client.HttpClientBuilder:org.apache.http.impl.client.HttpClientBuilder create()",
                "org.apache.http.client.config.RequestConfig$Builder:org.apache.http.client.config.RequestConfig$Builder setProxy(org.apache.http.HttpHost)",
                "org.apache.http.impl.execchain.RequestEntityProxy:java.lang.String toString()",
                "org.apache.http.client.methods.HttpRequestBase:java.lang.String toString()",
                "org.apache.http.client.entity.LazyDecompressingInputStream:int read()",
                "org.ietf.jgss.GSSException:java.lang.String getMessage()",
                "org.apache.http.impl.client.RedirectLocations:java.lang.Object set(int,java.lang.Object)",
                "org.apache.http.client.entity.DeflateInputStream:int read()",
                "org.apache.http.auth.AuthScope:java.lang.String toString()",
                "org.apache.http.conn.EofSensorInputStream:int read(byte[])",
                "org.apache.http.impl.client.HttpClientBuilder$2:void close()",
                "org.apache.http.client.config.RequestConfig:org.apache.http.client.config.RequestConfig$Builder custom()",
                "org.apache.http.client.config.RequestConfig$Builder:org.apache.http.client.config.RequestConfig$Builder setConnectionRequestTimeout(int)",
                "org.apache.http.client.methods.HttpEntityEnclosingRequestBase:java.lang.Object clone()",
                "org.apache.http.client.utils.URIBuilder:java.lang.String toString()",
                "org.apache.http.client.entity.DeflateInputStream:int read(byte[])",
                "org.apache.http.conn.routing.HttpRoute:boolean equals(java.lang.Object)",
                "org.apache.http.impl.auth.HttpEntityDigester:void write(byte[],int,int)",
                "org.apache.http.impl.execchain.ResponseEntityProxy:java.io.InputStream getContent()",
                "org.apache.http.impl.client.RedirectLocations:int size()",
                "org.apache.http.impl.auth.AuthSchemeBase:java.lang.String toString()",
                "org.apache.http.impl.client.RedirectLocations:boolean contains(java.lang.Object)",
                "org.apache.http.client.config.RequestConfig$Builder:org.apache.http.client.config.RequestConfig$Builder setSocketTimeout(int)",
                "org.apache.http.client.entity.DeflateInputStream$DeflateStream:void close()",
                "org.apache.http.impl.conn.CPoolProxy:java.lang.String toString()",
                "org.apache.http.impl.client.BasicCookieStore:java.lang.String toString()",
                "org.apache.http.client.utils.DateUtils:void <clinit>()",
                "org.apache.http.auth.BasicUserPrincipal:java.lang.String toString()",
                "org.apache.http.impl.auth.HttpEntityDigester:void close()",
                "org.apache.http.conn.routing.RouteTracker:java.lang.String toString()",
                "org.apache.http.impl.conn.LoggingInputStream:int read(byte[],int,int)",
                "org.apache.http.client.config.RequestConfig:org.apache.http.client.config.RequestConfig clone()",
                "org.apache.http.impl.conn.LoggingOutputStream:void close()",
                "org.apache.http.client.entity.LazyDecompressingInputStream:int read(byte[])",
                "org.apache.http.impl.conn.PoolingHttpClientConnectionManager:void close()",
                "org.apache.http.impl.execchain.HttpResponseProxy:org.apache.http.HttpEntity getEntity()",
                "org.apache.http.impl.client.RedirectLocations:void add(int,java.lang.Object)",
                "org.apache.http.client.config.RequestConfig:java.lang.String toString()",
                "org.apache.http.impl.cookie.BasicClientCookie:java.lang.Object clone()",
                "org.apache.http.client.methods.HttpRequestWrapper:java.lang.String toString()",
                "org.apache.http.client.methods.AbstractExecutionAwareRequest:java.lang.Object clone()",
                "org.apache.http.conn.EofSensorInputStream:void close()",
                "org.apache.http.impl.auth.DigestScheme:java.lang.String toString()",
                "org.apache.http.impl.cookie.BasicClientCookie2:java.lang.Object clone()",
                "org.apache.http.client.entity.LazyDecompressingInputStream:int read(byte[],int,int)",
                "org.apache.http.client.entity.DecompressingEntity:java.io.InputStream getContent()",
                "org.apache.http.conn.routing.HttpRoute:java.lang.Object clone()",
                "org.apache.http.cookie.CookiePriorityComparator:int compare(java.lang.Object,java.lang.Object)",
                "org.apache.http.client.entity.DeflateInputStream:int read(byte[],int,int)",
                "org.apache.http.conn.scheme.SocketFactoryAdaptor:boolean equals(java.lang.Object)",
                "org.apache.http.impl.execchain.HttpResponseProxy:org.apache.http.Header getFirstHeader(java.lang.String)",
                "org.apache.http.auth.AuthState:java.lang.String toString()",
                "org.apache.http.impl.client.InternalHttpClient:void close()",
                "org.apache.http.client.utils.DateUtils:java.util.Date parseDate(java.lang.String)",
                "org.apache.http.impl.conn.LoggingInputStream:int read(byte[])",
                "org.apache.http.impl.conn.LoggingOutputStream:void write(byte[],int,int)",
                "org.apache.http.client.config.RequestConfig$Builder:org.apache.http.client.config.RequestConfig build()",
                "org.apache.http.impl.execchain.ConnectionHolder:void close()",
                "org.apache.http.impl.conn.LoggingInputStream:int read()",
                "org.apache.http.conn.routing.HttpRoute:java.lang.String toString()",
                "org.apache.http.conn.routing.RouteTracker:java.lang.Object clone()",
                "org.apache.http.impl.execchain.HttpResponseProxy:org.apache.http.StatusLine getStatusLine()",
                "org.apache.http.auth.AuthScope:boolean equals(java.lang.Object)",
                "org.apache.http.impl.execchain.HttpResponseProxy:void close()",
                "org.apache.http.impl.client.CloseableHttpClient:org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)",
                "org.apache.http.impl.conn.LoggingManagedHttpClientConnection:void close()",
                "org.apache.http.impl.execchain.HttpResponseProxy:java.lang.String toString()",
                "org.ietf.jgss.GSSException:java.lang.String toString()",
                "org.apache.http.client.entity.DeflateInputStream:void close()",
                "org.apache.http.conn.EofSensorInputStream:int read()",
                "org.apache.http.conn.scheme.SchemeSocketFactoryAdaptor:boolean equals(java.lang.Object)",
                "org.apache.http.impl.auth.BasicScheme:java.lang.String toString()",
                "org.apache.http.impl.conn.LoggingInputStream:void close()",
                "org.apache.http.impl.conn.CPoolProxy:void close()",
                "org.apache.http.client.config.RequestConfig:void <clinit>()"
            ],
            "CVE": [
                "CVE-2020-13956"
            ],
            "used vul-method": [
                "org.apache.http.impl.client.CloseableHttpClient:org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)"
            ],
            "vul-called frequency": 3,
            "related vul root method": {
                "CVE-2020-13956": [
                    "org.apache.http.client.utils.URIUtils:org.apache.http.HttpHost extractHost(java.net.URI)"
                ]
            },
            "CVE-API": {
                "CVE-2020-13956": [
                    "org.apache.http.impl.client.CloseableHttpClient:org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)"
                ]
            }
        },
        "junit:junit:4.12": {
            "used-method num": 0,
            "used method": []
        }
    }
}
{
    "project name": "superhj1987_awesome-libs",
    "vulnerable dependencies": {
        "org.springframework:spring-web:4.3.18.RELEASE": {
            "used-method num": 20,
            "used method": [
                "org.springframework.web.method.HandlerMethod$HandlerMethodParameter:org.springframework.web.method.HandlerMethod$HandlerMethodParameter clone()",
                "org.springframework.web.util.ContentCachingResponseWrapper$ResponseServletOutputStream:void write(byte[],int,int)",
                "org.springframework.web.context.support.AnnotationConfigWebApplicationContext:void <init>()",
                "org.springframework.web.filter.ShallowEtagHeaderFilter$HttpStreamingAwareContentCachingResponseWrapper:javax.servlet.ServletOutputStream getOutputStream()",
                "org.springframework.web.util.WebUtils:void <clinit>()",
                "org.springframework.web.context.request.ServletWebRequest:java.lang.Object getNativeRequest(java.lang.Class)",
                "org.springframework.web.util.ContentCachingResponseWrapper:void setContentLength(int)",
                "org.springframework.http.HttpHeaders:boolean containsKey(java.lang.Object)",
                "org.springframework.web.util.WebUtils:java.lang.Object getNativeRequest(javax.servlet.ServletRequest,java.lang.Class)",
                "org.springframework.http.server.ServletServerHttpResponse$ServletResponseHttpHeaders:boolean containsKey(java.lang.Object)",
                "org.springframework.web.method.HandlerMethod$ReturnValueMethodParameter:org.springframework.web.method.HandlerMethod$ReturnValueMethodParameter clone()",
                "org.springframework.web.bind.ServletRequestParameterPropertyValues:void <init>(javax.servlet.ServletRequest)",
                "org.springframework.web.context.ContextLoaderListener:void <init>(org.springframework.web.context.WebApplicationContext)",
                "org.springframework.http.HttpHeaders:java.util.Set entrySet()",
                "org.springframework.web.context.ContextLoader:void <clinit>()",
                "org.springframework.http.server.ServletServerHttpResponse$ServletResponseHttpHeaders:java.util.List get(java.lang.Object)",
                "org.springframework.web.util.UriComponentsBuilder:java.lang.Object clone()",
                "org.springframework.http.HttpHeaders:java.lang.Object put(java.lang.Object,java.lang.Object)",
                "org.springframework.web.HttpRequestMethodNotSupportedException:void <init>(java.lang.String,java.lang.String[],java.lang.String)",
                "org.springframework.http.HttpHeaders:java.util.List get(java.lang.Object)"
            ]
        },
        "ch.qos.logback:logback-classic:1.0.6": {
            "used-method num": 3,
            "used method": [
                "ch.qos.logback.classic.Logger:void error(java.lang.String,java.lang.Throwable)",
                "ch.qos.logback.classic.Logger:void info(java.lang.String,java.lang.Object)",
                "ch.qos.logback.classic.Logger:boolean isErrorEnabled()"
            ]
        },
        "org.apache.httpcomponents:httpclient:4.3.6": {
            "used-method num": 59,
            "used method": [
                "org.apache.http.impl.conn.PoolingHttpClientConnectionManager:void shutdown()",
                "org.apache.http.conn.ssl.SSLSocketFactory:void <init>(javax.net.ssl.SSLContext)",
                "org.apache.http.impl.execchain.RequestEntityProxy:long getContentLength()",
                "org.apache.http.client.config.RequestConfig:org.apache.http.client.config.RequestConfig$Builder custom()",
                "org.apache.http.impl.client.DefaultHttpClient:void <init>()",
                "org.apache.http.impl.execchain.HttpResponseProxy:org.apache.http.HttpEntity getEntity()",
                "org.apache.http.impl.client.HttpClientBuilder:org.apache.http.impl.client.CloseableHttpClient build()",
                "org.apache.http.client.methods.HttpEntityEnclosingRequestBase:java.lang.Object clone()",
                "org.apache.http.client.methods.HttpPost:void <init>(java.lang.String)",
                "org.apache.http.client.methods.HttpEntityEnclosingRequestBase:void setEntity(org.apache.http.HttpEntity)",
                "org.apache.http.impl.conn.PoolingHttpClientConnectionManager:void setMaxTotal(int)",
                "org.apache.http.client.methods.HttpRequestBase:void releaseConnection()",
                "org.apache.http.client.methods.HttpGet:void <init>(java.lang.String)",
                "org.apache.http.impl.execchain.RequestEntityProxy:java.io.InputStream getContent()",
                "org.apache.http.client.entity.DeflateInputStream:int read(byte[])",
                "org.apache.http.conn.socket.PlainConnectionSocketFactory:org.apache.http.conn.socket.PlainConnectionSocketFactory getSocketFactory()",
                "org.apache.http.conn.routing.RouteTracker:java.lang.Object clone()",
                "org.apache.http.impl.execchain.HttpResponseProxy:org.apache.http.StatusLine getStatusLine()",
                "org.apache.http.impl.conn.PoolingHttpClientConnectionManager:void setDefaultSocketConfig(org.apache.http.config.SocketConfig)",
                "org.apache.http.client.entity.GzipDecompressingEntity:void <init>(org.apache.http.HttpEntity)",
                "org.apache.http.impl.client.RedirectLocations:java.net.URI get(int)",
                "org.apache.http.impl.conn.PoolingHttpClientConnectionManager:void setDefaultMaxPerRoute(int)",
                "org.apache.http.impl.execchain.RequestEntityProxy:org.apache.http.Header getContentType()",
                "org.apache.http.impl.cookie.BasicClientCookie:java.lang.Object clone()",
                "org.apache.http.impl.client.RedirectLocations:int size()",
                "org.apache.http.impl.client.CloseableHttpClient:org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)",
                "org.apache.http.client.methods.HttpRequestBase:java.net.URI getURI()",
                "org.apache.http.client.config.RequestConfig$Builder:org.apache.http.client.config.RequestConfig$Builder setSocketTimeout(int)",
                "org.apache.http.conn.ssl.SSLConnectionSocketFactory:void <init>(javax.net.ssl.SSLContext)",
                "org.apache.http.client.methods.AbstractExecutionAwareRequest:java.lang.Object clone()",
                "org.apache.http.client.entity.DeflateInputStream$DeflateStream:void close()",
                "org.apache.http.client.config.RequestConfig$Builder:org.apache.http.client.config.RequestConfig$Builder setConnectTimeout(int)",
                "org.apache.http.impl.execchain.RequestEntityProxy:org.apache.http.Header getContentEncoding()",
                "org.apache.http.conn.scheme.Scheme:void <init>(java.lang.String,int,org.apache.http.conn.scheme.SchemeSocketFactory)",
                "org.apache.http.client.methods.HttpPut:void <init>(java.lang.String)",
                "org.apache.http.conn.ssl.SSLSocketFactory:void <clinit>()",
                "org.apache.http.conn.EofSensorInputStream:void close()",
                "org.apache.http.impl.conn.PoolingHttpClientConnectionManager:void <init>(org.apache.http.config.Registry)",
                "org.apache.http.client.utils.URLEncodedUtils:void <clinit>()",
                "org.apache.http.impl.client.HttpClients:org.apache.http.impl.client.HttpClientBuilder custom()",
                "org.apache.http.client.entity.UrlEncodedFormEntity:void <init>(java.util.List,java.lang.String)",
                "org.apache.http.impl.cookie.BasicClientCookie2:java.lang.Object clone()",
                "org.apache.http.client.entity.DeflateInputStream:void close()",
                "org.apache.http.impl.client.AbstractHttpClient:org.apache.http.conn.ClientConnectionManager getConnectionManager()",
                "org.apache.http.conn.routing.HttpRoute:java.lang.Object clone()",
                "org.apache.http.impl.client.InternalHttpClient$1:org.apache.http.conn.scheme.SchemeRegistry getSchemeRegistry()",
                "org.apache.http.conn.scheme.SchemeRegistry:org.apache.http.conn.scheme.Scheme register(org.apache.http.conn.scheme.Scheme)",
                "org.apache.http.impl.conn.LoggingInputStream:void close()",
                "org.apache.http.impl.conn.LoggingInputStream:int read(byte[])",
                "org.apache.http.conn.socket.PlainConnectionSocketFactory:void <clinit>()",
                "org.apache.http.conn.ssl.SSLConnectionSocketFactory:void <clinit>()",
                "org.apache.http.client.methods.HttpRequestBase:void setProtocolVersion(org.apache.http.ProtocolVersion)",
                "org.apache.http.client.config.RequestConfig:org.apache.http.client.config.RequestConfig clone()",
                "org.apache.http.client.config.RequestConfig:void <clinit>()",
                "org.apache.http.conn.EofSensorInputStream:int read(byte[])",
                "org.apache.http.client.config.RequestConfig$Builder:org.apache.http.client.config.RequestConfig build()",
                "org.apache.http.impl.client.MinimalHttpClient$1:org.apache.http.conn.scheme.SchemeRegistry getSchemeRegistry()",
                "org.apache.http.client.methods.HttpDelete:void <init>(java.lang.String)",
                "org.apache.http.client.utils.URLEncodedUtils:java.lang.String format(java.util.List,java.lang.String)"
            ],
            "CVE": [
                "CVE-2020-13956"
            ],
            "used vul-method": [
                "org.apache.http.impl.client.CloseableHttpClient:org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)"
            ],
            "vul-called frequency": 2,
            "related vul root method": {
                "CVE-2020-13956": [
                    "org.apache.http.client.utils.URIUtils:org.apache.http.HttpHost extractHost(java.net.URI)"
                ]
            },
            "CVE-API": {
                "CVE-2020-13956": [
                    "org.apache.http.impl.client.CloseableHttpClient:org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)"
                ]
            }
        },
        "org.eclipse.jetty:jetty-webapp:8.1.19.v20160209": {
            "used-method num": 4,
            "used method": [
                "org.eclipse.jetty.webapp.WebAppContext:void setTempDirectory(java.io.File)",
                "org.eclipse.jetty.webapp.WebAppContext:void <init>()",
                "org.eclipse.jetty.webapp.WebAppContext:void setServer(org.eclipse.jetty.server.Server)",
                "org.eclipse.jetty.webapp.WebAppContext:void setWar(java.lang.String)"
            ]
        }
    }
}
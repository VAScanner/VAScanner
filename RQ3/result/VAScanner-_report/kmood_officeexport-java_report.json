{
    "project name": "kmood_officeexport-java",
    "vulnerable dependencies": {
        "dom4j:dom4j:1.6.1": {
            "used-method num": 88,
            "used method": [
                "org.dom4j.tree.DefaultElement:java.lang.Object clone()",
                "org.dom4j.tree.AbstractElement:org.dom4j.Element addAttribute(java.lang.String,java.lang.String)",
                "org.dom4j.DocumentException:void printStackTrace()",
                "org.dom4j.tree.AbstractProcessingInstruction:java.lang.String toString()",
                "org.dom4j.tree.DefaultText:org.dom4j.Element getParent()",
                "org.dom4j.tree.FlyweightComment:java.lang.String getText()",
                "org.dom4j.tree.ConcurrentReaderHashMap$EntrySet:java.util.Iterator iterator()",
                "org.dom4j.tree.AbstractText:java.lang.String toString()",
                "org.dom4j.xpath.DefaultXPath:java.lang.String toString()",
                "org.dom4j.tree.DefaultEntity:org.dom4j.Element getParent()",
                "org.dom4j.tree.ContentListFacade:int size()",
                "org.dom4j.tree.ConcurrentReaderHashMap:java.lang.Object get(java.lang.Object)",
                "org.dom4j.tree.AbstractDocument:void write(java.io.Writer)",
                "org.dom4j.tree.AbstractElement:void add(org.dom4j.Element)",
                "org.dom4j.tree.AbstractDocument:java.lang.String toString()",
                "org.dom4j.tree.ConcurrentReaderHashMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
                "org.dom4j.tree.DefaultProcessingInstruction:org.dom4j.Element getParent()",
                "org.dom4j.tree.AbstractNode:void setText(java.lang.String)",
                "org.dom4j.tree.ContentListFacade:int indexOf(java.lang.Object)",
                "org.dom4j.tree.AbstractComment:java.lang.String toString()",
                "org.dom4j.dtd.ExternalEntityDecl:java.lang.String toString()",
                "org.dom4j.io.XMLWriter:void <clinit>()",
                "org.dom4j.tree.AbstractElement:org.dom4j.Namespace getNamespace()",
                "org.dom4j.tree.AbstractElement:org.dom4j.Element addElement(java.lang.String)",
                "org.dom4j.tree.ConcurrentReaderHashMap:java.util.Set keySet()",
                "org.dom4j.tree.DefaultDocument:org.dom4j.Element getRootElement()",
                "org.dom4j.tree.ConcurrentReaderHashMap$HashIterator:java.lang.Object next()",
                "org.dom4j.QName:java.lang.String toString()",
                "org.dom4j.tree.ConcurrentReaderHashMap$Entry:java.lang.String toString()",
                "org.dom4j.tree.AbstractAttribute:java.lang.String toString()",
                "org.dom4j.QName:void <clinit>()",
                "org.dom4j.tree.AbstractElement:java.util.List elements()",
                "org.dom4j.tree.ConcurrentReaderHashMap$HashIterator:boolean hasNext()",
                "org.dom4j.tree.ContentListFacade:java.lang.Object get(int)",
                "org.dom4j.dtd.AttributeDecl:java.lang.String toString()",
                "org.dom4j.tree.DefaultElement:java.lang.String getText()",
                "org.dom4j.tree.AbstractAttribute:void setText(java.lang.String)",
                "org.dom4j.tree.AbstractNode:org.dom4j.Element getParent()",
                "org.dom4j.dtd.ElementDecl:java.lang.String toString()",
                "org.dom4j.tree.FlyweightText:java.lang.String getText()",
                "org.dom4j.io.XMLWriter:void <init>(java.io.OutputStream)",
                "org.dom4j.tree.DefaultElement:org.dom4j.Attribute attribute(java.lang.String)",
                "org.dom4j.tree.AbstractElement:boolean remove(org.dom4j.Element)",
                "org.dom4j.io.SAXReader:void <init>()",
                "org.dom4j.DocumentHelper:org.dom4j.Element createElement(org.dom4j.QName)",
                "org.dom4j.tree.AbstractElement:org.dom4j.Element addNamespace(java.lang.String,java.lang.String)",
                "org.dom4j.tree.DefaultAttribute:org.dom4j.Element getParent()",
                "org.dom4j.tree.AbstractElement:void setText(java.lang.String)",
                "org.dom4j.Namespace:java.lang.String toString()",
                "org.dom4j.tree.AbstractNode:java.lang.Object clone()",
                "org.dom4j.tree.FlyweightProcessingInstruction:java.lang.String getText()",
                "org.dom4j.tree.FlyweightEntity:java.lang.String getText()",
                "org.dom4j.Namespace:java.lang.String getText()",
                "org.dom4j.tree.AbstractCDATA:java.lang.String toString()",
                "org.dom4j.tree.DefaultComment:void setText(java.lang.String)",
                "org.dom4j.tree.DefaultElement:org.dom4j.Element getParent()",
                "org.dom4j.tree.AbstractAttribute:java.lang.String getText()",
                "org.dom4j.tree.AbstractBranch:java.lang.String getText()",
                "org.dom4j.tree.DefaultCDATA:org.dom4j.Element getParent()",
                "org.dom4j.tree.DefaultAttribute:void setValue(java.lang.String)",
                "org.dom4j.tree.ContentListFacade:void add(int,java.lang.Object)",
                "org.dom4j.QName:org.dom4j.QName get(java.lang.String,org.dom4j.Namespace)",
                "org.dom4j.tree.NamespaceStack:java.lang.String toString()",
                "org.dom4j.tree.DefaultComment:org.dom4j.Element getParent()",
                "org.dom4j.tree.DefaultProcessingInstruction:void setText(java.lang.String)",
                "org.dom4j.io.XMLWriter:void write(org.dom4j.Document)",
                "org.dom4j.tree.AbstractElement:java.lang.String attributeValue(java.lang.String)",
                "org.dom4j.tree.DefaultDocument:java.lang.Object clone()",
                "org.dom4j.io.XMLWriter:void close()",
                "org.dom4j.tree.DefaultCDATA:void setText(java.lang.String)",
                "org.dom4j.tree.ConcurrentReaderHashMap:boolean containsKey(java.lang.Object)",
                "org.dom4j.tree.AbstractNode:java.util.List selectNodes(java.lang.String)",
                "org.dom4j.tree.AbstractEntity:java.lang.String toString()",
                "org.dom4j.tree.DefaultNamespace:org.dom4j.Element getParent()",
                "org.dom4j.io.SAXReader:org.dom4j.Document read(java.io.File)",
                "org.dom4j.xpath.XPathPattern:java.lang.String toString()",
                "org.dom4j.DocumentHelper:org.dom4j.Document parseText(java.lang.String)",
                "org.dom4j.tree.ConcurrentReaderHashMap$KeySet:java.util.Iterator iterator()",
                "org.dom4j.tree.DefaultText:void setText(java.lang.String)",
                "org.dom4j.tree.AbstractNode:org.dom4j.Node selectSingleNode(java.lang.String)",
                "org.dom4j.dtd.InternalEntityDecl:java.lang.String toString()",
                "org.dom4j.tree.AbstractElement:java.lang.String toString()",
                "org.dom4j.tree.AbstractElement:java.util.List elements(java.lang.String)",
                "org.dom4j.tree.AbstractDocumentType:java.lang.String getText()",
                "org.dom4j.tree.AbstractElement:java.lang.String getName()",
                "org.dom4j.tree.AbstractDocumentType:java.lang.String toString()",
                "org.dom4j.tree.ConcurrentReaderHashMap:java.lang.Object clone()",
                "org.dom4j.tree.FlyweightCDATA:java.lang.String getText()"
            ],
            "CVE": [
                "CVE-2020-10683"
            ],
            "used vul-method": [
                "org.dom4j.tree.DefaultElement:java.lang.Object clone()",
                "org.dom4j.tree.AbstractElement:org.dom4j.Element addAttribute(java.lang.String,java.lang.String)",
                "org.dom4j.tree.DefaultDocument:java.lang.Object clone()",
                "org.dom4j.io.SAXReader:org.dom4j.Document read(java.io.File)",
                "org.dom4j.DocumentHelper:org.dom4j.Document parseText(java.lang.String)"
            ],
            "vul-called frequency": 22,
            "root vul-called frequency": 1,
            "related vul root method": {
                "CVE-2020-10683": [
                    "org.dom4j.io.SAXReader:org.xml.sax.XMLReader installXMLFilter(org.xml.sax.XMLReader)",
                    "org.dom4j.io.SAXReader:org.dom4j.Document read(org.xml.sax.InputSource)",
                    "org.dom4j.io.SAXReader:void configureReader(org.xml.sax.XMLReader,org.xml.sax.helpers.DefaultHandler)",
                    "org.dom4j.io.SAXReader:org.dom4j.Document read(java.lang.String)",
                    "org.dom4j.io.SAXReader:org.dom4j.Document read(java.io.Reader)",
                    "org.dom4j.io.SAXReader:org.dom4j.Document read(java.io.File)",
                    "org.dom4j.io.SAXReader:org.dom4j.Document read(java.io.InputStream)",
                    "org.dom4j.io.SAXReader:org.dom4j.Document read(java.io.Reader,java.lang.String)",
                    "org.dom4j.io.SAXReader:void setXMLReader(org.xml.sax.XMLReader)",
                    "org.dom4j.io.SAXHelper:org.xml.sax.XMLReader createXMLReader(boolean)",
                    "org.dom4j.DocumentHelper:org.dom4j.Document parseText(java.lang.String)"
                ]
            },
            "CVE-API": {
                "CVE-2020-10683": [
                    "org.dom4j.tree.DefaultElement:java.lang.Object clone()",
                    "org.dom4j.tree.AbstractElement:org.dom4j.Element addAttribute(java.lang.String,java.lang.String)",
                    "org.dom4j.tree.DefaultDocument:java.lang.Object clone()",
                    "org.dom4j.io.SAXReader:org.dom4j.Document read(java.io.File)",
                    "org.dom4j.DocumentHelper:org.dom4j.Document parseText(java.lang.String)"
                ]
            }
        },
        "junit:junit:4.12": {
            "used-method num": 0,
            "used method": []
        }
    }
}
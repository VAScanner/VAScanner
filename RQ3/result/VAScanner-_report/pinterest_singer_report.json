{
    "project name": "pinterest_singer",
    "modules": {
        "com.pinterest.singer:singer": {
            "vulnerable dependencies": {
                "org.apache.kafka:kafka-clients:2.3.1": {
                    "used-method num": 324,
                    "used method": [
                        "org.apache.kafka.common.message.LeaveGroupRequestData:java.lang.String toString()",
                        "org.apache.kafka.common.message.DeleteTopicsRequestData:java.lang.String toString()",
                        "org.apache.kafka.common.requests.CreateAclsRequest$AclCreation:java.lang.String toString()",
                        "org.apache.kafka.common.utils.ImplicitLinkedHashCollection$ImplicitLinkedHashCollectionSetView:void clear()",
                        "org.apache.kafka.common.acl.AccessControlEntryData:java.lang.String toString()",
                        "org.apache.kafka.common.requests.ListOffsetResponse$PartitionData:java.lang.String toString()",
                        "org.apache.kafka.common.requests.FetchRequest$Builder:java.lang.String toString()",
                        "org.apache.kafka.common.requests.UpdateMetadataRequest$Broker:java.lang.String toString()",
                        "org.apache.kafka.common.record.AbstractLegacyRecordBatch:java.lang.String toString()",
                        "org.apache.kafka.common.requests.SaslHandshakeRequest$Builder:java.lang.String toString()",
                        "org.apache.kafka.common.message.CreateTopicsRequestData$CreateableTopicConfig:java.lang.String toString()",
                        "org.apache.kafka.common.utils.LogContext$LocationAwareKafkaLogger:void error(java.lang.String,java.lang.Object)",
                        "org.apache.kafka.clients.admin.AdminClient:org.apache.kafka.clients.admin.ListTopicsResult listTopics()",
                        "org.apache.kafka.common.message.InitProducerIdResponseData:java.lang.String toString()",
                        "org.apache.kafka.common.requests.RequestHeader:java.lang.String toString()",
                        "org.apache.kafka.common.record.MemoryRecords:java.lang.String toString()",
                        "org.apache.kafka.common.message.DescribeGroupsRequestData:java.lang.String toString()",
                        "org.apache.kafka.common.message.IncrementalAlterConfigsRequestData$AlterableConfig:java.lang.String toString()",
                        "org.apache.kafka.common.requests.RenewDelegationTokenRequest$Builder:java.lang.String toString()",
                        "org.apache.kafka.clients.consumer.OffsetAndMetadata:java.lang.String toString()",
                        "org.apache.kafka.common.message.FindCoordinatorRequestData:java.lang.String toString()",
                        "org.apache.kafka.common.utils.LogContext$LocationAwareKafkaLogger:void warn(java.lang.String,java.lang.Throwable)",
                        "org.apache.kafka.common.TopicPartitionReplica:java.lang.String toString()",
                        "org.apache.kafka.common.utils.CopyOnWriteMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
                        "org.apache.kafka.common.utils.ImplicitLinkedHashCollection$ImplicitLinkedHashCollectionListView:int size()",
                        "org.apache.kafka.common.metrics.KafkaMetric:double value()",
                        "org.apache.kafka.common.utils.LogContext$LocationIgnorantKafkaLogger:void warn(java.lang.String,java.lang.Object[])",
                        "org.apache.kafka.common.utils.LogContext$LocationIgnorantKafkaLogger:void error(java.lang.String,java.lang.Object)",
                        "org.apache.kafka.common.requests.AbstractRequest:java.lang.String toString()",
                        "org.apache.kafka.common.utils.Bytes$LexicographicByteArrayComparator:int compare(java.lang.Object,java.lang.Object)",
                        "org.apache.kafka.common.utils.LogContext$LocationAwareKafkaLogger:boolean isDebugEnabled()",
                        "org.apache.kafka.common.message.OffsetCommitRequestData$OffsetCommitRequestTopic:java.lang.String toString()",
                        "org.apache.kafka.clients.producer.internals.FutureRecordMetadata:org.apache.kafka.clients.producer.RecordMetadata get(long,java.util.concurrent.TimeUnit)",
                        "org.apache.kafka.common.message.OffsetCommitRequestData:java.lang.String toString()",
                        "org.apache.kafka.common.message.SaslHandshakeResponseData:java.lang.String toString()",
                        "org.apache.kafka.common.utils.LogContext$LocationAwareKafkaLogger:void error(java.lang.String,java.lang.Object[])",
                        "org.apache.kafka.common.utils.LogContext$LocationIgnorantKafkaLogger:void info(java.lang.String,java.lang.Object,java.lang.Object)",
                        "org.apache.kafka.common.config.ConfigDef$NonEmptyString:java.lang.String toString()",
                        "org.apache.kafka.clients.admin.DescribeReplicaLogDirsResult$ReplicaLogDirInfo:java.lang.String toString()",
                        "org.apache.kafka.common.resource.ResourcePattern:java.lang.String toString()",
                        "org.apache.kafka.clients.admin.MemberDescription:java.lang.String toString()",
                        "org.apache.kafka.common.header.internals.RecordHeaders:java.lang.String toString()",
                        "org.apache.kafka.common.utils.LogContext$LocationAwareKafkaLogger:void debug(java.lang.String,java.lang.Object,java.lang.Object)",
                        "org.apache.kafka.common.config.types.Password:java.lang.String toString()",
                        "org.apache.kafka.common.requests.InitProducerIdResponse:java.lang.String toString()",
                        "org.apache.kafka.common.metrics.Quota:java.lang.String toString()",
                        "org.apache.kafka.common.requests.AddOffsetsToTxnResponse:java.lang.String toString()",
                        "org.apache.kafka.common.message.SyncGroupRequestData:java.lang.String toString()",
                        "org.apache.kafka.common.requests.SaslAuthenticateRequest$Builder:java.lang.String toString()",
                        "org.apache.kafka.common.internals.KafkaFutureImpl:java.lang.String toString()",
                        "org.apache.kafka.common.record.FileRecords$TimestampAndOffset:java.lang.String toString()",
                        "org.apache.kafka.common.message.IncrementalAlterConfigsRequestData$AlterConfigsResource:java.lang.String toString()",
                        "org.apache.kafka.common.utils.LogContext$LocationIgnorantKafkaLogger:boolean isDebugEnabled()",
                        "org.apache.kafka.common.requests.DescribeDelegationTokenRequest$Builder:java.lang.String toString()",
                        "org.apache.kafka.common.utils.ImplicitLinkedHashCollection$ImplicitLinkedHashCollectionSetView:int size()",
                        "org.apache.kafka.common.requests.InitProducerIdRequest$Builder:java.lang.String toString()",
                        "org.apache.kafka.common.security.token.delegation.TokenInformation:java.lang.String toString()",
                        "org.apache.kafka.clients.producer.internals.ProducerBatch:java.lang.String toString()",
                        "org.apache.kafka.common.utils.LogContext$LocationIgnorantKafkaLogger:void debug(java.lang.String,java.lang.Object,java.lang.Object)",
                        "org.apache.kafka.common.requests.TxnOffsetCommitResponse:java.lang.String toString()",
                        "org.apache.kafka.common.MetricName:java.lang.String toString()",
                        "org.apache.kafka.common.requests.ListOffsetRequest$PartitionData:java.lang.String toString()",
                        "org.ietf.jgss.Oid:java.lang.String toString()",
                        "org.apache.kafka.clients.producer.ProducerRecord:java.lang.Integer partition()",
                        "org.apache.kafka.common.internals.KafkaFutureImpl:java.lang.Object get(long,java.util.concurrent.TimeUnit)",
                        "org.apache.kafka.common.utils.LogContext$LocationIgnorantKafkaLogger:void debug(java.lang.String)",
                        "org.apache.kafka.common.utils.LogContext$LocationIgnorantKafkaLogger:void warn(java.lang.String,java.lang.Object,java.lang.Object)",
                        "org.apache.kafka.common.requests.UpdateMetadataRequest$PartitionState:java.lang.String toString()",
                        "org.apache.kafka.common.message.MetadataRequestData$MetadataRequestTopic:java.lang.String toString()",
                        "org.apache.kafka.common.requests.FetchRequest$PartitionData:java.lang.String toString()",
                        "org.apache.kafka.common.utils.CopyOnWriteMap:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)",
                        "org.apache.kafka.common.message.OffsetCommitRequestData$OffsetCommitRequestPartition:java.lang.String toString()",
                        "org.apache.kafka.common.message.ElectPreferredLeadersResponseData$ReplicaElectionResult:java.lang.String toString()",
                        "org.apache.kafka.common.message.OffsetCommitResponseData$OffsetCommitResponsePartition:java.lang.String toString()",
                        "org.apache.kafka.common.utils.LogContext$LocationIgnorantKafkaLogger:void info(java.lang.String)",
                        "org.apache.kafka.common.record.DefaultRecordBatch$RecordIterator:boolean hasNext()",
                        "org.apache.kafka.common.requests.StopReplicaResponse:java.lang.String toString()",
                        "org.apache.kafka.clients.producer.ProducerRecord:java.lang.String topic()",
                        "org.apache.kafka.common.config.ConfigDef$ValidString:java.lang.String toString()",
                        "org.apache.kafka.common.requests.FetchMetadata:java.lang.String toString()",
                        "org.apache.kafka.common.security.kerberos.KerberosRule:java.lang.String toString()",
                        "org.apache.kafka.clients.producer.KafkaProducer$FutureFailure:org.apache.kafka.clients.producer.RecordMetadata get()",
                        "org.apache.kafka.common.requests.FetchResponse$AbortedTransaction:java.lang.String toString()",
                        "org.apache.kafka.common.utils.LogContext$LocationIgnorantKafkaLogger:void error(java.lang.String,java.lang.Object[])",
                        "org.apache.kafka.common.utils.LogContext$LocationAwareKafkaLogger:void info(java.lang.String)",
                        "org.apache.kafka.clients.ClientResponse:java.lang.String toString()",
                        "org.apache.kafka.common.requests.TxnOffsetCommitRequest$CommittedOffset:java.lang.String toString()",
                        "org.apache.kafka.common.requests.DescribeAclsRequest$Builder:java.lang.String toString()",
                        "org.apache.kafka.common.requests.DescribeLogDirsResponse$LogDirInfo:java.lang.String toString()",
                        "org.apache.kafka.common.message.IncrementalAlterConfigsResponseData:java.lang.String toString()",
                        "org.apache.kafka.common.requests.DeleteRecordsResponse$PartitionResponse:java.lang.String toString()",
                        "org.apache.kafka.common.requests.DescribeGroupsRequest$Builder:java.lang.String toString()",
                        "org.apache.kafka.common.header.internals.RecordHeader:java.lang.String toString()",
                        "org.apache.kafka.common.record.AbstractLegacyRecordBatch:java.util.Iterator iterator()",
                        "org.apache.kafka.common.utils.LogContext$LocationIgnorantKafkaLogger:void warn(java.lang.String,java.lang.Object)",
                        "org.apache.kafka.common.requests.CreateTopicsRequest$Builder:java.lang.String toString()",
                        "org.apache.kafka.common.utils.Java$Version:java.lang.String toString()",
                        "org.apache.kafka.common.utils.LogContext$LocationIgnorantKafkaLogger:void trace(java.lang.String,java.lang.Object,java.lang.Object)",
                        "org.apache.kafka.common.TopicPartitionInfo:java.lang.String toString()",
                        "org.apache.kafka.common.message.ControlledShutdownResponseData$RemainingPartition:java.lang.String toString()",
                        "org.apache.kafka.common.PartitionInfo:java.lang.String toString()",
                        "org.apache.kafka.clients.MetadataCache:java.lang.String toString()",
                        "org.apache.kafka.common.utils.ImplicitLinkedHashCollection:int size()",
                        "org.apache.kafka.common.message.SyncGroupRequestData$SyncGroupRequestAssignment:java.lang.String toString()",
                        "org.apache.kafka.common.acl.AclBinding:java.lang.String toString()",
                        "org.apache.kafka.common.message.DeleteTopicsResponseData$DeletableTopicResult:java.lang.String toString()",
                        "org.apache.kafka.common.Cluster:java.lang.String toString()",
                        "org.apache.kafka.common.protocol.types.Struct:java.lang.String toString()",
                        "org.apache.kafka.clients.NetworkClient$InFlightRequest:java.lang.String toString()",
                        "org.apache.kafka.common.requests.UpdateMetadataRequest$EndPoint:java.lang.String toString()",
                        "org.apache.kafka.common.internals.KafkaFutureImpl:java.lang.Object get()",
                        "org.apache.kafka.common.message.InitProducerIdRequestData:java.lang.String toString()",
                        "org.apache.kafka.common.requests.DeleteGroupsRequest$Builder:java.lang.String toString()",
                        "org.apache.kafka.clients.producer.RecordMetadata:java.lang.String toString()",
                        "org.apache.kafka.common.message.OffsetCommitResponseData:java.lang.String toString()",
                        "org.apache.kafka.common.requests.DeleteAclsResponse:java.lang.String toString()",
                        "org.apache.kafka.common.message.IncrementalAlterConfigsRequestData:java.lang.String toString()",
                        "org.apache.kafka.common.utils.Bytes:java.lang.String toString()",
                        "org.apache.kafka.common.message.HeartbeatRequestData:java.lang.String toString()",
                        "org.apache.kafka.clients.producer.KafkaProducer$FutureFailure:org.apache.kafka.clients.producer.RecordMetadata get(long,java.util.concurrent.TimeUnit)",
                        "org.apache.kafka.common.message.MetadataResponseData$MetadataResponseTopic:java.lang.String toString()",
                        "org.apache.kafka.common.message.JoinGroupResponseData:java.lang.String toString()",
                        "org.apache.kafka.common.requests.ListOffsetRequest$Builder:java.lang.String toString()",
                        "org.apache.kafka.common.utils.LogContext$LocationAwareKafkaLogger:void debug(java.lang.String)",
                        "org.ietf.jgss.GSSException:java.lang.String getMessage()",
                        "org.apache.kafka.common.utils.ImplicitLinkedHashCollection:java.util.Iterator iterator()",
                        "org.apache.kafka.clients.producer.ProducerRecord:org.apache.kafka.common.header.Headers headers()",
                        "org.apache.kafka.common.requests.AddOffsetsToTxnRequest$Builder:java.lang.String toString()",
                        "org.apache.kafka.common.message.ControlledShutdownRequestData:java.lang.String toString()",
                        "org.apache.kafka.common.message.MetadataResponseData:java.lang.String toString()",
                        "org.apache.kafka.common.message.SaslAuthenticateRequestData:java.lang.String toString()",
                        "org.apache.kafka.common.config.ConfigTransformer$ConfigVariable:java.lang.String toString()",
                        "org.apache.kafka.clients.producer.ProducerRecord:java.lang.String toString()",
                        "org.apache.kafka.common.message.DescribeGroupsResponseData$DescribedGroup:java.lang.String toString()",
                        "org.apache.kafka.common.requests.ApiVersionsResponse$ApiVersion:java.lang.String toString()",
                        "org.apache.kafka.common.header.internals.RecordHeaders$1:boolean hasNext()",
                        "org.apache.kafka.common.network.ListenerName:java.lang.String toString()",
                        "org.apache.kafka.common.utils.LogContext$LocationAwareKafkaLogger:void warn(java.lang.String)",
                        "org.apache.kafka.common.requests.DescribeLogDirsRequest$Builder:java.lang.String toString()",
                        "org.apache.kafka.common.requests.WriteTxnMarkersRequest$TxnMarkerEntry:java.lang.String toString()",
                        "org.apache.kafka.common.utils.ImplicitLinkedHashCollection$ImplicitLinkedHashCollectionSetView:java.util.Iterator iterator()",
                        "org.apache.kafka.clients.admin.ConfigEntry$ConfigSynonym:java.lang.String toString()",
                        "org.apache.kafka.common.requests.AddPartitionsToTxnResponse:java.lang.String toString()",
                        "org.apache.kafka.common.config.AbstractConfig$RecordingMap:java.lang.Object get(java.lang.Object)",
                        "org.apache.kafka.common.utils.CopyOnWriteMap:java.util.Set entrySet()",
                        "org.apache.kafka.common.utils.LogContext$LocationIgnorantKafkaLogger:void warn(java.lang.String,java.lang.Throwable)",
                        "org.apache.kafka.common.message.SaslAuthenticateResponseData:java.lang.String toString()",
                        "org.apache.kafka.clients.producer.internals.FutureRecordMetadata:org.apache.kafka.clients.producer.RecordMetadata get()",
                        "org.apache.kafka.common.requests.MetadataResponse$TopicMetadata:java.lang.String toString()",
                        "org.apache.kafka.common.record.FileRecords$LogOffsetPosition:java.lang.String toString()",
                        "org.apache.kafka.clients.admin.KafkaAdminClient$Call:java.lang.String toString()",
                        "org.apache.kafka.common.utils.LogContext$LocationAwareKafkaLogger:void warn(java.lang.String,java.lang.Object)",
                        "org.apache.kafka.common.requests.OffsetFetchRequest$Builder:java.lang.String toString()",
                        "org.apache.kafka.common.requests.ExpireDelegationTokenRequest$Builder:java.lang.String toString()",
                        "org.apache.kafka.common.config.ConfigDef$CompositeValidator:java.lang.String toString()",
                        "org.apache.kafka.common.message.FindCoordinatorResponseData:java.lang.String toString()",
                        "org.apache.kafka.common.record.LegacyRecord:java.lang.String toString()",
                        "org.apache.kafka.common.requests.LeaderAndIsrResponse:java.lang.String toString()",
                        "org.apache.kafka.common.record.RecordConversionStats:java.lang.String toString()",
                        "org.apache.kafka.common.utils.LogContext$LocationAwareKafkaLogger:void warn(java.lang.String,java.lang.Object[])",
                        "org.apache.kafka.common.message.DescribeGroupsResponseData$DescribedGroupMember:java.lang.String toString()",
                        "org.apache.kafka.common.requests.EndTxnRequest$Builder:java.lang.String toString()",
                        "org.apache.kafka.common.config.AbstractConfig$ResolvingMap:java.lang.Object get(java.lang.Object)",
                        "org.apache.kafka.clients.admin.ConfigEntry:java.lang.String toString()",
                        "org.apache.kafka.clients.admin.AdminClient:org.apache.kafka.clients.admin.AdminClient create(java.util.Properties)",
                        "org.apache.kafka.common.security.auth.KafkaPrincipal:java.lang.String toString()",
                        "org.apache.kafka.common.utils.LogContext$LocationAwareKafkaLogger:void error(java.lang.String,java.lang.Throwable)",
                        "org.apache.kafka.clients.ClientRequest:java.lang.String toString()",
                        "org.apache.kafka.common.requests.OffsetsForLeaderEpochResponse:java.lang.String toString()",
                        "org.apache.kafka.common.protocol.types.ArrayOf:java.lang.String toString()",
                        "org.apache.kafka.common.requests.ApiError:java.lang.String toString()",
                        "org.apache.kafka.common.requests.MetadataRequest$Builder:java.lang.String toString()",
                        "org.apache.kafka.common.message.DeleteTopicsResponseData:java.lang.String toString()",
                        "org.apache.kafka.common.ClusterResource:java.lang.String toString()",
                        "org.apache.kafka.common.utils.AbstractIterator:java.lang.Object next()",
                        "org.apache.kafka.common.security.kerberos.KerberosShortNamer:java.lang.String toString()",
                        "org.apache.kafka.common.message.CreateTopicsResponseData:java.lang.String toString()",
                        "org.apache.kafka.common.record.FileLogInputStream$FileChannelRecordBatch:java.lang.String toString()",
                        "org.apache.kafka.common.config.ConfigDef$NonNullValidator:java.lang.String toString()",
                        "org.apache.kafka.common.utils.LogContext$LocationAwareKafkaLogger:void trace(java.lang.String,java.lang.Object,java.lang.Object)",
                        "org.apache.kafka.common.requests.FindCoordinatorRequest$Builder:java.lang.String toString()",
                        "org.apache.kafka.common.utils.ImplicitLinkedHashCollection:boolean remove(java.lang.Object)",
                        "org.apache.kafka.common.message.SyncGroupResponseData:java.lang.String toString()",
                        "org.apache.kafka.common.requests.CreateAclsRequest$Builder:java.lang.String toString()",
                        "org.apache.kafka.common.requests.ProduceResponse$PartitionResponse:java.lang.String toString()",
                        "org.apache.kafka.clients.admin.ConsumerGroupListing:java.lang.String toString()",
                        "org.apache.kafka.common.message.IncrementalAlterConfigsResponseData$AlterConfigsResourceResult:java.lang.String toString()",
                        "org.apache.kafka.common.message.SaslHandshakeRequestData:java.lang.String toString()",
                        "org.apache.kafka.common.requests.FindCoordinatorResponse:java.lang.String toString()",
                        "org.apache.kafka.common.record.FileRecords:java.lang.String toString()",
                        "org.apache.kafka.common.resource.ResourcePatternFilter:java.lang.String toString()",
                        "org.apache.kafka.common.acl.AccessControlEntryFilter:java.lang.String toString()",
                        "org.apache.kafka.common.utils.LogContext$LocationIgnorantKafkaLogger:void error(java.lang.String,java.lang.Throwable)",
                        "org.apache.kafka.common.utils.ImplicitLinkedHashCollection$ImplicitLinkedHashCollectionIterator:boolean hasNext()",
                        "org.apache.kafka.common.message.ControlledShutdownResponseData:java.lang.String toString()",
                        "org.apache.kafka.common.record.FileLogInputStream$FileChannelRecordBatch:java.util.Iterator iterator()",
                        "org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState:java.lang.String toString()",
                        "org.apache.kafka.common.record.DefaultRecord:java.lang.String toString()",
                        "org.apache.kafka.common.MetricName:java.lang.String name()",
                        "org.apache.kafka.clients.producer.internals.FutureRecordMetadata:boolean isDone()",
                        "org.apache.kafka.common.utils.LogContext$LocationAwareKafkaLogger:void debug(java.lang.String,java.lang.Object)",
                        "org.apache.kafka.common.message.LeaveGroupResponseData:java.lang.String toString()",
                        "org.apache.kafka.common.utils.LogContext$LocationIgnorantKafkaLogger:void error(java.lang.String,java.lang.Object,java.lang.Object)",
                        "org.apache.kafka.common.message.CreateTopicsRequestData:java.lang.String toString()",
                        "org.apache.kafka.clients.admin.MemberAssignment:java.lang.String toString()",
                        "org.apache.kafka.common.utils.LogContext$LocationIgnorantKafkaLogger:void error(java.lang.String)",
                        "org.apache.kafka.common.requests.IncrementalAlterConfigsRequest$Builder:java.lang.String toString()",
                        "org.apache.kafka.common.security.ssl.SslEngineBuilder$SecurityStore:java.lang.String toString()",
                        "org.apache.kafka.clients.producer.internals.ProducerIdAndEpoch:java.lang.String toString()",
                        "org.apache.kafka.common.security.token.delegation.DelegationToken:java.lang.String toString()",
                        "org.apache.kafka.common.utils.ImplicitLinkedHashCollection$ImplicitLinkedHashCollectionIterator:org.apache.kafka.common.utils.ImplicitLinkedHashCollection$Element next()",
                        "org.apache.kafka.common.TopicPartition:java.lang.String toString()",
                        "org.apache.kafka.common.utils.CopyOnWriteMap:java.lang.Object get(java.lang.Object)",
                        "org.apache.kafka.common.message.MetadataResponseData$MetadataResponsePartition:java.lang.String toString()",
                        "org.apache.kafka.clients.admin.TopicListing:java.lang.String toString()",
                        "org.apache.kafka.common.resource.ResourceFilter:java.lang.String toString()",
                        "org.apache.kafka.common.record.CompressionType:void <clinit>()",
                        "org.apache.kafka.common.message.CreateTopicsRequestData$CreatableReplicaAssignment:java.lang.String toString()",
                        "org.apache.kafka.common.PartitionInfo:org.apache.kafka.common.Node leader()",
                        "org.apache.kafka.common.requests.CreateDelegationTokenRequest$Builder:java.lang.String toString()",
                        "org.apache.kafka.common.message.ElectPreferredLeadersRequestData$TopicPartitions:java.lang.String toString()",
                        "org.apache.kafka.common.requests.EpochEndOffset:java.lang.String toString()",
                        "org.apache.kafka.common.security.authenticator.LoginManager:java.lang.String toString()",
                        "org.apache.kafka.common.utils.CopyOnWriteMap:java.lang.Object remove(java.lang.Object)",
                        "org.apache.kafka.common.protocol.types.BoundField:java.lang.String toString()",
                        "org.apache.kafka.common.record.CompressionType:org.apache.kafka.common.record.CompressionType forName(java.lang.String)",
                        "org.apache.kafka.clients.MetadataCache$PartitionInfoAndEpoch:java.lang.String toString()",
                        "org.apache.kafka.common.Node:java.lang.String toString()",
                        "org.apache.kafka.common.requests.FetchResponse$PartitionData:java.lang.String toString()",
                        "org.apache.kafka.common.message.MetadataRequestData:java.lang.String toString()",
                        "org.apache.kafka.common.utils.LogContext$LocationAwareKafkaLogger:void warn(java.lang.String,java.lang.Object,java.lang.Object)",
                        "org.apache.kafka.common.message.JoinGroupResponseData$JoinGroupResponseMember:java.lang.String toString()",
                        "org.apache.kafka.common.requests.OffsetCommitResponse:java.lang.String toString()",
                        "org.apache.kafka.common.requests.DeleteTopicsRequest$Builder:java.lang.String toString()",
                        "org.apache.kafka.common.message.OffsetCommitResponseData$OffsetCommitResponseTopic:java.lang.String toString()",
                        "org.apache.kafka.common.message.ElectPreferredLeadersResponseData:java.lang.String toString()",
                        "org.apache.kafka.clients.ClientDnsLookup:java.lang.String toString()",
                        "org.apache.kafka.common.utils.ImplicitLinkedHashCollection$ImplicitLinkedHashCollectionSetView:boolean remove(java.lang.Object)",
                        "org.apache.kafka.clients.admin.AdminClient:void close()",
                        "org.apache.kafka.common.config.ConfigValue:java.lang.String toString()",
                        "org.apache.kafka.clients.admin.RecordsToDelete:java.lang.String toString()",
                        "org.apache.kafka.common.header.internals.RecordHeaders$1:org.apache.kafka.common.header.Header next()",
                        "org.apache.kafka.clients.admin.TopicDescription:java.lang.String toString()",
                        "org.apache.kafka.common.Node:java.lang.String host()",
                        "org.apache.kafka.common.internals.KafkaFutureImpl:boolean cancel(boolean)",
                        "org.apache.kafka.common.message.ElectPreferredLeadersResponseData$PartitionResult:java.lang.String toString()",
                        "org.apache.kafka.common.requests.DeleteAclsRequest$Builder:java.lang.String toString()",
                        "org.apache.kafka.common.requests.OffsetsForLeaderEpochRequest$PartitionData:java.lang.String toString()",
                        "org.apache.kafka.common.message.JoinGroupRequestData:java.lang.String toString()",
                        "org.apache.kafka.common.record.DefaultRecordBatch:java.lang.String toString()",
                        "org.apache.kafka.common.config.ConfigResource:java.lang.String toString()",
                        "org.apache.kafka.common.Node:int id()",
                        "org.apache.kafka.common.message.CreateTopicsResponseData$CreatableTopicResult:java.lang.String toString()",
                        "org.apache.kafka.common.requests.CreateAclsResponse$AclCreationResponse:java.lang.String toString()",
                        "org.apache.kafka.common.requests.LeaderAndIsrRequest$PartitionState:java.lang.String toString()",
                        "org.apache.kafka.common.utils.ImplicitLinkedHashCollection$ImplicitLinkedHashCollectionIterator:void remove()",
                        "org.apache.kafka.common.requests.DeleteAclsResponse$AclFilterResponse:java.lang.String toString()",
                        "org.apache.kafka.common.requests.JoinGroupResponse:java.lang.String toString()",
                        "org.ietf.jgss.GSSException:java.lang.String toString()",
                        "org.apache.kafka.common.message.ElectPreferredLeadersRequestData:java.lang.String toString()",
                        "org.apache.kafka.common.utils.LogContext$LocationAwareKafkaLogger:void info(java.lang.String,java.lang.Object,java.lang.Object)",
                        "org.apache.kafka.common.utils.LogContext$LocationIgnorantKafkaLogger:void debug(java.lang.String,java.lang.Object[])",
                        "org.apache.kafka.clients.consumer.internals.PartitionAssignor$Subscription:java.lang.String toString()",
                        "org.apache.kafka.common.requests.MetadataResponse$PartitionMetadata:java.lang.String toString()",
                        "org.apache.kafka.common.message.HeartbeatResponseData:java.lang.String toString()",
                        "org.apache.kafka.common.security.kerberos.KerberosName:java.lang.String toString()",
                        "org.apache.kafka.clients.consumer.internals.PartitionAssignor$Assignment:java.lang.String toString()",
                        "org.apache.kafka.common.message.MetadataResponseData$MetadataResponseBroker:java.lang.String toString()",
                        "org.apache.kafka.common.message.JoinGroupRequestData$JoinGroupRequestProtocol:java.lang.String toString()",
                        "org.apache.kafka.common.header.internals.RecordHeaders$1:void remove()",
                        "org.apache.kafka.common.config.ConfigDef$ValidList:java.lang.String toString()",
                        "org.apache.kafka.common.Node:java.lang.String rack()",
                        "org.apache.kafka.clients.admin.Config:java.lang.String toString()",
                        "org.apache.kafka.common.utils.LogContext$LocationAwareKafkaLogger:void debug(java.lang.String,java.lang.Object[])",
                        "org.apache.kafka.common.requests.AddPartitionsToTxnRequest$Builder:java.lang.String toString()",
                        "org.apache.kafka.common.requests.ProduceRequest$Builder:java.lang.String toString()",
                        "org.apache.kafka.common.config.ConfigDef$1:java.lang.String toString()",
                        "org.apache.kafka.common.resource.Resource:java.lang.String toString()",
                        "org.apache.kafka.common.utils.ImplicitLinkedHashCollection$ImplicitLinkedHashCollectionSetView:boolean add(java.lang.Object)",
                        "org.apache.kafka.common.utils.LogContext$LocationAwareKafkaLogger:void error(java.lang.String,java.lang.Object,java.lang.Object)",
                        "org.apache.kafka.common.utils.LogContext$LocationIgnorantKafkaLogger:void info(java.lang.String,java.lang.Object[])",
                        "org.apache.kafka.common.requests.CreatePartitionsRequest$PartitionDetails:java.lang.String toString()",
                        "org.apache.kafka.common.record.DefaultRecordBatch$RecordIterator:org.apache.kafka.common.record.Record next()",
                        "org.apache.kafka.common.utils.CopyOnWriteMap:void clear()",
                        "org.apache.kafka.common.utils.LogContext$LocationIgnorantKafkaLogger:void warn(java.lang.String)",
                        "org.apache.kafka.common.requests.ElectPreferredLeadersRequest$Builder:java.lang.String toString()",
                        "org.apache.kafka.common.record.DefaultRecordBatch:java.util.Iterator iterator()",
                        "org.apache.kafka.common.requests.OffsetsForLeaderEpochRequest$Builder:java.lang.String toString()",
                        "org.apache.kafka.common.header.internals.RecordHeaders:java.util.Iterator iterator()",
                        "org.apache.kafka.common.requests.ListOffsetResponse:java.lang.String toString()",
                        "org.apache.kafka.common.utils.ImplicitLinkedHashCollection:boolean add(java.lang.Object)",
                        "org.apache.kafka.common.requests.DeleteAclsResponse$AclDeletionResult:java.lang.String toString()",
                        "org.apache.kafka.common.requests.DescribeLogDirsResponse$ReplicaInfo:java.lang.String toString()",
                        "org.apache.kafka.common.MetricNameTemplate:java.lang.String toString()",
                        "org.apache.kafka.common.acl.AccessControlEntry:java.lang.String toString()",
                        "org.apache.kafka.clients.Metadata$LeaderAndEpoch:java.lang.String toString()",
                        "org.apache.kafka.common.message.CreateTopicsRequestData$CreatableTopic:java.lang.String toString()",
                        "org.apache.kafka.common.utils.LogContext$LocationAwareKafkaLogger:void error(java.lang.String)",
                        "org.apache.kafka.common.acl.AclBindingFilter:java.lang.String toString()",
                        "org.apache.kafka.common.message.DescribeGroupsResponseData:java.lang.String toString()",
                        "org.apache.kafka.common.security.ssl.SslPrincipalMapper$Rule:java.lang.String toString()",
                        "org.apache.kafka.common.requests.AlterReplicaLogDirsRequest$Builder:java.lang.String toString()",
                        "org.apache.kafka.clients.producer.ProducerRecord:void <init>(java.lang.String,java.lang.Integer,java.lang.Object,java.lang.Object)",
                        "org.apache.kafka.common.utils.LogContext$LocationAwareKafkaLogger:void info(java.lang.String,java.lang.Object)",
                        "org.apache.kafka.common.requests.EndTxnResponse:java.lang.String toString()",
                        "org.apache.kafka.common.security.ssl.SslFactory$CertificateEntries:java.lang.String toString()",
                        "org.apache.kafka.common.requests.DeleteRecordsRequest$Builder:java.lang.String toString()",
                        "org.apache.kafka.clients.admin.ListTopicsResult:org.apache.kafka.common.KafkaFuture names()",
                        "org.apache.kafka.common.security.ssl.SslPrincipalMapper:java.lang.String toString()",
                        "org.apache.kafka.common.network.KafkaChannel:java.lang.String toString()",
                        "org.apache.kafka.common.utils.LogContext$LocationIgnorantKafkaLogger:void info(java.lang.String,java.lang.Object)",
                        "org.apache.kafka.common.utils.ImplicitLinkedHashCollection$ImplicitLinkedHashCollectionSetView:boolean contains(java.lang.Object)",
                        "org.apache.kafka.clients.NodeApiVersions:java.lang.String toString()",
                        "org.apache.kafka.common.config.ConfigDef$Range:java.lang.String toString()",
                        "org.apache.kafka.common.header.internals.RecordHeaders:org.apache.kafka.common.header.Headers add(java.lang.String,byte[])",
                        "org.apache.kafka.common.protocol.types.Schema:java.lang.String toString()",
                        "org.apache.kafka.common.requests.TxnOffsetCommitRequest$Builder:java.lang.String toString()",
                        "org.apache.kafka.common.utils.LogContext$LocationIgnorantKafkaLogger:void debug(java.lang.String,java.lang.Object)",
                        "org.apache.kafka.common.requests.CreatePartitionsRequest$Builder:java.lang.String toString()",
                        "org.apache.kafka.common.utils.LogContext$LocationAwareKafkaLogger:void info(java.lang.String,java.lang.Object[])",
                        "org.apache.kafka.common.utils.AbstractIterator:boolean hasNext()",
                        "org.apache.kafka.clients.admin.NewPartitions:java.lang.String toString()",
                        "org.apache.kafka.common.utils.CopyOnWriteMap:boolean containsKey(java.lang.Object)",
                        "org.apache.kafka.clients.admin.ConsumerGroupDescription:java.lang.String toString()"
                    ]
                }
            }
        },
        "com.pinterest.singer:singer-package": {
            "vulnerable dependencies": {
                "org.apache.kafka:kafka-clients:2.3.1": {
                    "used-method num": 0,
                    "used method": []
                }
            }
        },
        "com.pinterest.singer:singer-commons": {
            "vulnerable dependencies": {
                "org.apache.kafka:kafka-clients:2.3.1": {
                    "used-method num": 68,
                    "used method": [
                        "org.apache.kafka.common.utils.ImplicitLinkedHashCollection$ImplicitLinkedHashCollectionSetView:void clear()",
                        "org.apache.kafka.common.utils.LogContext$LocationAwareKafkaLogger:void error(java.lang.String,java.lang.Object)",
                        "org.apache.kafka.common.utils.LogContext$LocationAwareKafkaLogger:void warn(java.lang.String,java.lang.Throwable)",
                        "org.apache.kafka.common.utils.CopyOnWriteMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
                        "org.apache.kafka.common.utils.ImplicitLinkedHashCollection$ImplicitLinkedHashCollectionListView:int size()",
                        "org.apache.kafka.common.utils.LogContext$LocationIgnorantKafkaLogger:void warn(java.lang.String,java.lang.Object[])",
                        "org.apache.kafka.common.utils.LogContext$LocationIgnorantKafkaLogger:void error(java.lang.String,java.lang.Object)",
                        "org.apache.kafka.common.utils.LogContext$LocationAwareKafkaLogger:boolean isDebugEnabled()",
                        "org.apache.kafka.common.utils.LogContext$LocationAwareKafkaLogger:void error(java.lang.String,java.lang.Object[])",
                        "org.apache.kafka.common.utils.LogContext$LocationIgnorantKafkaLogger:void info(java.lang.String,java.lang.Object,java.lang.Object)",
                        "org.apache.kafka.common.utils.LogContext$LocationAwareKafkaLogger:void debug(java.lang.String,java.lang.Object,java.lang.Object)",
                        "org.apache.kafka.common.utils.LogContext$LocationIgnorantKafkaLogger:boolean isDebugEnabled()",
                        "org.apache.kafka.common.utils.ImplicitLinkedHashCollection$ImplicitLinkedHashCollectionSetView:int size()",
                        "org.apache.kafka.common.utils.LogContext$LocationIgnorantKafkaLogger:void debug(java.lang.String,java.lang.Object,java.lang.Object)",
                        "org.apache.kafka.common.utils.LogContext$LocationIgnorantKafkaLogger:void debug(java.lang.String)",
                        "org.apache.kafka.common.utils.LogContext$LocationIgnorantKafkaLogger:void warn(java.lang.String,java.lang.Object,java.lang.Object)",
                        "org.apache.kafka.common.utils.CopyOnWriteMap:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)",
                        "org.apache.kafka.common.utils.LogContext$LocationIgnorantKafkaLogger:void info(java.lang.String)",
                        "org.apache.kafka.common.record.DefaultRecordBatch$RecordIterator:boolean hasNext()",
                        "org.apache.kafka.common.utils.LogContext$LocationIgnorantKafkaLogger:void error(java.lang.String,java.lang.Object[])",
                        "org.apache.kafka.common.utils.LogContext$LocationAwareKafkaLogger:void info(java.lang.String)",
                        "org.apache.kafka.common.utils.LogContext$LocationIgnorantKafkaLogger:void warn(java.lang.String,java.lang.Object)",
                        "org.apache.kafka.clients.producer.KafkaProducer:void <clinit>()",
                        "org.apache.kafka.clients.producer.KafkaProducer:java.util.List partitionsFor(java.lang.String)",
                        "org.apache.kafka.common.utils.LogContext$LocationAwareKafkaLogger:void debug(java.lang.String)",
                        "org.ietf.jgss.GSSException:java.lang.String getMessage()",
                        "org.apache.kafka.clients.producer.KafkaProducer:void <init>(java.util.Properties)",
                        "org.apache.kafka.common.header.internals.RecordHeaders$1:boolean hasNext()",
                        "org.apache.kafka.common.utils.LogContext$LocationAwareKafkaLogger:void warn(java.lang.String)",
                        "org.apache.kafka.common.utils.ImplicitLinkedHashCollection$ImplicitLinkedHashCollectionSetView:java.util.Iterator iterator()",
                        "org.apache.kafka.common.config.AbstractConfig$RecordingMap:java.lang.Object get(java.lang.Object)",
                        "org.apache.kafka.common.utils.CopyOnWriteMap:java.util.Set entrySet()",
                        "org.apache.kafka.common.utils.LogContext$LocationIgnorantKafkaLogger:void warn(java.lang.String,java.lang.Throwable)",
                        "org.apache.kafka.clients.producer.KafkaProducer:java.util.concurrent.Future send(org.apache.kafka.clients.producer.ProducerRecord,org.apache.kafka.clients.producer.Callback)",
                        "org.apache.kafka.common.utils.LogContext$LocationAwareKafkaLogger:void warn(java.lang.String,java.lang.Object)",
                        "org.apache.kafka.common.utils.LogContext$LocationAwareKafkaLogger:void warn(java.lang.String,java.lang.Object[])",
                        "org.apache.kafka.common.config.AbstractConfig$ResolvingMap:java.lang.Object get(java.lang.Object)",
                        "org.apache.kafka.common.utils.LogContext$LocationAwareKafkaLogger:void error(java.lang.String,java.lang.Throwable)",
                        "org.apache.kafka.clients.producer.KafkaProducer:void close()",
                        "org.apache.kafka.common.utils.AbstractIterator:java.lang.Object next()",
                        "org.apache.kafka.common.utils.LogContext$LocationIgnorantKafkaLogger:void error(java.lang.String,java.lang.Throwable)",
                        "org.apache.kafka.common.utils.ImplicitLinkedHashCollection$ImplicitLinkedHashCollectionIterator:boolean hasNext()",
                        "org.apache.kafka.common.utils.LogContext$LocationAwareKafkaLogger:void debug(java.lang.String,java.lang.Object)",
                        "org.apache.kafka.common.utils.LogContext$LocationIgnorantKafkaLogger:void error(java.lang.String,java.lang.Object,java.lang.Object)",
                        "org.apache.kafka.common.utils.ImplicitLinkedHashCollection$ImplicitLinkedHashCollectionIterator:org.apache.kafka.common.utils.ImplicitLinkedHashCollection$Element next()",
                        "org.apache.kafka.common.utils.CopyOnWriteMap:java.lang.Object get(java.lang.Object)",
                        "org.apache.kafka.common.record.CompressionType:void <clinit>()",
                        "org.apache.kafka.common.utils.CopyOnWriteMap:java.lang.Object remove(java.lang.Object)",
                        "org.apache.kafka.common.record.CompressionType:org.apache.kafka.common.record.CompressionType forName(java.lang.String)",
                        "org.apache.kafka.common.utils.LogContext$LocationAwareKafkaLogger:void warn(java.lang.String,java.lang.Object,java.lang.Object)",
                        "org.apache.kafka.common.utils.ImplicitLinkedHashCollection$ImplicitLinkedHashCollectionSetView:boolean remove(java.lang.Object)",
                        "org.apache.kafka.common.header.internals.RecordHeaders$1:org.apache.kafka.common.header.Header next()",
                        "org.apache.kafka.common.utils.LogContext$LocationAwareKafkaLogger:void info(java.lang.String,java.lang.Object,java.lang.Object)",
                        "org.apache.kafka.common.utils.ImplicitLinkedHashCollection$ImplicitLinkedHashCollectionSetView:boolean add(java.lang.Object)",
                        "org.apache.kafka.common.utils.LogContext$LocationAwareKafkaLogger:void error(java.lang.String,java.lang.Object,java.lang.Object)",
                        "org.apache.kafka.common.utils.LogContext$LocationIgnorantKafkaLogger:void info(java.lang.String,java.lang.Object[])",
                        "org.apache.kafka.common.record.DefaultRecordBatch$RecordIterator:org.apache.kafka.common.record.Record next()",
                        "org.apache.kafka.common.utils.LogContext$LocationIgnorantKafkaLogger:void warn(java.lang.String)",
                        "org.apache.kafka.clients.producer.RecordMetadata:int partition()",
                        "org.apache.kafka.clients.producer.ProducerRecord:void <init>(java.lang.String,java.lang.Integer,java.lang.Object,java.lang.Object)",
                        "org.apache.kafka.common.utils.LogContext$LocationAwareKafkaLogger:void info(java.lang.String,java.lang.Object)",
                        "org.apache.kafka.common.utils.LogContext$LocationIgnorantKafkaLogger:void info(java.lang.String,java.lang.Object)",
                        "org.apache.kafka.common.utils.ImplicitLinkedHashCollection$ImplicitLinkedHashCollectionSetView:boolean contains(java.lang.Object)",
                        "org.apache.kafka.common.utils.LogContext$LocationIgnorantKafkaLogger:void debug(java.lang.String,java.lang.Object)",
                        "org.apache.kafka.common.utils.LogContext$LocationAwareKafkaLogger:void info(java.lang.String,java.lang.Object[])",
                        "org.apache.kafka.common.utils.AbstractIterator:boolean hasNext()",
                        "org.apache.kafka.common.config.ConfigException:void <init>(java.lang.String)",
                        "org.apache.kafka.common.utils.CopyOnWriteMap:boolean containsKey(java.lang.Object)"
                    ]
                }
            }
        }
    }
}
{
    "project name": "liudexiang3218_OkexQuant",
    "vulnerable dependencies": {
        "junit:junit:4.12": {
            "used-method num": 0,
            "used method": []
        },
        "org.apache.logging.log4j:log4j-core:2.11.1": {
            "used-method num": 0,
            "used method": []
        },
        "io.netty:netty-all:4.0.56.Final": {
            "used-method num": 141,
            "used method": [
                "io.netty.buffer.ByteBufInputStream:void close()",
                "io.netty.handler.codec.http.HttpMethod:java.lang.String toString()",
                "io.netty.buffer.CompositeByteBuf:java.lang.String toString()",
                "io.netty.bootstrap.Bootstrap:io.netty.channel.ChannelFuture connect(java.lang.String,int)",
                "io.netty.channel.ChannelOption:void <clinit>()",
                "io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueue:java.lang.String toString()",
                "io.netty.channel.CombinedChannelDuplexHandler:void <clinit>()",
                "io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseMpscLinkedAtomicArrayQueue:boolean isEmpty()",
                "io.netty.channel.ChannelInitializer:void <clinit>()",
                "io.netty.util.UniqueName:java.lang.String toString()",
                "io.netty.channel.DefaultChannelPromise:io.netty.channel.Channel channel()",
                "io.netty.handler.ssl.OpenSslX509Certificate:java.lang.String toString()",
                "io.netty.channel.nio.NioEventLoopGroup:void <init>(int)",
                "io.netty.handler.ssl.OpenSslJavaxX509Certificate:java.lang.String toString()",
                "io.netty.bootstrap.AbstractBootstrap:io.netty.bootstrap.AbstractBootstrap handler(io.netty.channel.ChannelHandler)",
                "io.netty.handler.codec.http.DefaultHttpHeaders$HeaderEntry:java.lang.String getValue()",
                "io.netty.handler.codec.http.websocketx.WebSocketFrame:java.lang.String toString()",
                "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture close()",
                "io.netty.util.internal.shaded.org.jctools.queues.atomic.MpscAtomicArrayQueue:java.lang.String toString()",
                "io.netty.bootstrap.Bootstrap:void <init>()",
                "io.netty.handler.codec.http.DefaultHttpHeaders:void <init>()",
                "io.netty.buffer.SwappedByteBuf:java.lang.String toString()",
                "io.netty.handler.ssl.PemX509Certificate:java.lang.String toString()",
                "io.netty.buffer.AdvancedLeakAwareByteBuf:java.lang.String toString(java.nio.charset.Charset)",
                "io.netty.buffer.PoolArena:java.lang.String toString()",
                "io.netty.util.internal.ConcurrentSet:java.util.Iterator iterator()",
                "io.netty.channel.AbstractChannel:io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object)",
                "io.netty.handler.codec.http.DefaultHttpHeaders$HeaderEntry:java.lang.String getKey()",
                "io.netty.handler.codec.http.HttpHeaderEntity:java.lang.String toString()",
                "io.netty.util.concurrent.DefaultPromise:java.lang.String toString()",
                "io.netty.handler.codec.ReplayingDecoderByteBuf:java.lang.String toString()",
                "io.netty.bootstrap.Bootstrap:io.netty.bootstrap.Bootstrap clone()",
                "io.netty.util.CharsetUtil:void <clinit>()",
                "io.netty.handler.codec.CodecOutputList:void clear()",
                "io.netty.buffer.AbstractByteBufAllocator:java.lang.String toString()",
                "io.netty.handler.codec.http.DefaultHttpHeaders$HeaderEntry:java.lang.String toString()",
                "io.netty.util.ResourceLeakDetector$DefaultResourceLeak:java.lang.String toString()",
                "io.netty.buffer.EmptyByteBuf:java.lang.String toString(java.nio.charset.Charset)",
                "io.netty.bootstrap.AbstractBootstrap:io.netty.bootstrap.AbstractBootstrap channel(java.lang.Class)",
                "io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker:void finishHandshake(io.netty.channel.Channel,io.netty.handler.codec.http.FullHttpResponse)",
                "io.netty.util.Signal:java.lang.String toString()",
                "io.netty.util.internal.shaded.org.jctools.queues.ConcurrentCircularArrayQueue:boolean isEmpty()",
                "io.netty.channel.DefaultChannelPromise:io.netty.channel.ChannelPromise setFailure(java.lang.Throwable)",
                "io.netty.handler.codec.http.DefaultHttpHeaders$HeaderIterator:boolean hasNext()",
                "io.netty.handler.codec.http.DefaultHttpResponse:io.netty.handler.codec.http.HttpResponseStatus getStatus()",
                "io.netty.util.internal.shaded.org.jctools.queues.ConcurrentCircularArrayQueue:java.lang.String toString()",
                "io.netty.buffer.ByteBufInputStream:void <init>(io.netty.buffer.ByteBuf)",
                "io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker:io.netty.channel.ChannelFuture handshake(io.netty.channel.Channel)",
                "io.netty.util.concurrent.PromiseTask$RunnableAdapter:java.lang.String toString()",
                "io.netty.handler.codec.ReplayingDecoderByteBuf:java.lang.String toString(java.nio.charset.Charset)",
                "io.netty.util.internal.shaded.org.jctools.queues.atomic.SpscLinkedAtomicQueue:java.lang.String toString()",
                "io.netty.channel.DefaultChannelPipeline:java.lang.String toString()",
                "io.netty.buffer.FixedCompositeByteBuf:java.lang.String toString()",
                "io.netty.handler.codec.http.HttpObjectAggregator$AggregatedFullHttpResponse:java.lang.String toString()",
                "io.netty.util.internal.RecyclableArrayList:boolean add(java.lang.Object)",
                "io.netty.buffer.WrappedByteBuf:int readableBytes()",
                "io.netty.handler.codec.http.HttpVersion:java.lang.String toString()",
                "io.netty.handler.codec.http.DefaultFullHttpResponse:java.lang.String toString()",
                "io.netty.buffer.DefaultByteBufHolder:java.lang.String toString()",
                "io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueue:java.util.Iterator iterator()",
                "io.netty.handler.codec.http.HttpObjectAggregator:void <clinit>()",
                "io.netty.channel.DefaultChannelPromise:io.netty.channel.ChannelPromise setSuccess()",
                "io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseMpscLinkedAtomicArrayQueue:java.util.Iterator iterator()",
                "io.netty.handler.codec.CodecOutputList:int size()",
                "io.netty.util.internal.ConcurrentSet:boolean contains(java.lang.Object)",
                "io.netty.buffer.CompositeByteBuf$CompositeByteBufIterator:boolean hasNext()",
                "io.netty.util.concurrent.DefaultPromise:boolean isDone()",
                "io.netty.handler.codec.http.HttpObjectAggregator$AggregatedFullHttpMessage:io.netty.buffer.ByteBuf content()",
                "io.netty.bootstrap.Bootstrap:void <clinit>()",
                "io.netty.util.UniqueName:void <clinit>()",
                "io.netty.buffer.WrappedByteBuf:java.lang.String toString(java.nio.charset.Charset)",
                "io.netty.bootstrap.Bootstrap:java.lang.String toString()",
                "io.netty.util.internal.shaded.org.jctools.queues.SpscLinkedQueue:java.lang.String toString()",
                "io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker:boolean isHandshakeComplete()",
                "io.netty.handler.ssl.SslContext:io.netty.handler.ssl.SslContext newClientContext()",
                "io.netty.buffer.UnpooledByteBufAllocator$UnpooledByteBufAllocatorMetric:java.lang.String toString()",
                "io.netty.handler.codec.http.websocketx.TextWebSocketFrame:java.lang.String text()",
                "io.netty.handler.codec.DecoderResult:java.lang.String toString()",
                "io.netty.handler.ssl.SslContext:void <clinit>()",
                "io.netty.channel.DefaultChannelPromise:io.netty.channel.ChannelPromise addListener(io.netty.util.concurrent.GenericFutureListener)",
                "io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueue:boolean isEmpty()",
                "io.netty.handler.codec.http.HttpObjectAggregator:void <init>(int)",
                "io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext:io.netty.channel.ChannelFuture close()",
                "io.netty.util.internal.shaded.org.jctools.queues.ConcurrentCircularArrayQueue:java.util.Iterator iterator()",
                "io.netty.handler.codec.http.websocketx.TextWebSocketFrame:void <init>(java.lang.String)",
                "io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseMpscLinkedAtomicArrayQueue:java.lang.String toString()",
                "io.netty.handler.codec.http.HttpObjectAggregator$AggregatedFullHttpRequest:java.lang.String toString()",
                "io.netty.handler.codec.http.DefaultFullHttpResponse:io.netty.buffer.ByteBuf content()",
                "io.netty.buffer.DefaultByteBufHolder:io.netty.buffer.ByteBuf content()",
                "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelPromise newPromise()",
                "io.netty.handler.codec.CodecOutputList:boolean add(java.lang.Object)",
                "io.netty.handler.codec.http.DefaultHttpContent:java.lang.String toString()",
                "io.netty.bootstrap.AbstractBootstrap:io.netty.bootstrap.AbstractBootstrap option(io.netty.channel.ChannelOption,java.lang.Object)",
                "io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext:io.netty.channel.Channel channel()",
                "io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseLinkedAtomicQueue:java.util.Iterator iterator()",
                "io.netty.handler.codec.http.HttpObjectAggregator$AggregatedFullHttpResponse:io.netty.handler.codec.http.HttpResponseStatus getStatus()",
                "io.netty.buffer.AbstractByteBuf:java.lang.String toString(java.nio.charset.Charset)",
                "io.netty.buffer.SwappedByteBuf:int readableBytes()",
                "io.netty.buffer.EmptyByteBuf:java.lang.String toString()",
                "io.netty.handler.codec.http.HttpClientCodec:void <init>()",
                "io.netty.util.ReferenceCountUtil$ReleasingTask:java.lang.String toString()",
                "io.netty.channel.AbstractChannel:java.lang.String toString()",
                "io.netty.handler.codec.http.HttpHeaders:void <clinit>()",
                "io.netty.buffer.PoolChunk:java.lang.String toString()",
                "io.netty.channel.MultithreadEventLoopGroup:void <clinit>()",
                "io.netty.handler.codec.http.websocketx.WebSocketClientHandshakerFactory:io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker newHandshaker(java.net.URI,io.netty.handler.codec.http.websocketx.WebSocketVersion,java.lang.String,boolean,io.netty.handler.codec.http.HttpHeaders,int)",
                "io.netty.buffer.EmptyByteBuf:int readableBytes()",
                "io.netty.channel.nio.SelectedSelectionKeySet:java.util.Iterator iterator()",
                "io.netty.handler.codec.http.DefaultLastHttpContent:java.lang.String toString()",
                "io.netty.handler.codec.http.DefaultFullHttpRequest:java.lang.String toString()",
                "io.netty.buffer.SwappedByteBuf:java.lang.String toString(java.nio.charset.Charset)",
                "io.netty.util.internal.ConcurrentSet:boolean remove(java.lang.Object)",
                "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.Channel channel()",
                "io.netty.bootstrap.AbstractBootstrap:io.netty.bootstrap.AbstractBootstrap group(io.netty.channel.EventLoopGroup)",
                "io.netty.buffer.PooledByteBufAllocatorMetric:java.lang.String toString()",
                "io.netty.channel.DefaultChannelPromise:io.netty.channel.ChannelPromise sync()",
                "io.netty.util.concurrent.AbstractEventExecutor:io.netty.util.concurrent.Future shutdownGracefully()",
                "io.netty.util.internal.logging.AbstractInternalLogger:java.lang.String toString()",
                "io.netty.handler.codec.http.websocketx.WebSocketVersion:void <clinit>()",
                "io.netty.handler.codec.http.HttpResponseStatus:java.lang.String toString()",
                "io.netty.buffer.AbstractByteBuf:int readableBytes()",
                "io.netty.buffer.AbstractByteBuf:java.lang.String toString()",
                "io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseLinkedAtomicQueue:boolean isEmpty()",
                "io.netty.buffer.CompositeByteBuf$CompositeByteBufIterator:io.netty.buffer.ByteBuf next()",
                "io.netty.channel.ChannelInitializer:void <init>()",
                "io.netty.util.internal.shaded.org.jctools.queues.BaseLinkedQueue:java.util.Iterator iterator()",
                "io.netty.handler.codec.ReplayingDecoderByteBuf:int readableBytes()",
                "io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext:io.netty.channel.ChannelPromise newPromise()",
                "io.netty.channel.embedded.EmbeddedChannel:io.netty.channel.ChannelFuture close()",
                "io.netty.util.internal.shaded.org.jctools.queues.atomic.AtomicReferenceArrayQueue:boolean isEmpty()",
                "io.netty.buffer.WrappedByteBuf:java.lang.String toString()",
                "io.netty.util.ResourceLeakDetector$Record:java.lang.String toString()",
                "io.netty.buffer.PoolSubpage:java.lang.String toString()",
                "io.netty.handler.codec.http.DefaultHttpHeaders$HeaderIterator:java.util.Map$Entry next()",
                "io.netty.util.internal.AppendableCharSequence:java.lang.String toString()",
                "io.netty.channel.DefaultChannelPipeline:io.netty.channel.ChannelPipeline addLast(io.netty.channel.ChannelHandler[])",
                "io.netty.handler.codec.http.DefaultHttpResponse:java.lang.String toString()",
                "io.netty.util.internal.shaded.org.jctools.queues.atomic.MpscAtomicArrayQueue:java.util.Iterator iterator()",
                "io.netty.handler.ssl.SslCompletionEvent:java.lang.String toString()",
                "io.netty.channel.SimpleChannelInboundHandler:void <init>()",
                "io.netty.util.internal.shaded.org.jctools.queues.BaseLinkedQueue:boolean isEmpty()"
            ],
            "CVE": [
                "CVE-2019-16869"
            ],
            "used vul-method": [
                "io.netty.bootstrap.Bootstrap:io.netty.channel.ChannelFuture connect(java.lang.String,int)",
                "io.netty.channel.nio.NioEventLoopGroup:void <init>(int)",
                "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture close()",
                "io.netty.channel.AbstractChannel:io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object)",
                "io.netty.channel.DefaultChannelPromise:io.netty.channel.ChannelPromise setFailure(java.lang.Throwable)",
                "io.netty.channel.DefaultChannelPromise:io.netty.channel.ChannelPromise setSuccess()",
                "io.netty.channel.DefaultChannelPromise:io.netty.channel.ChannelPromise addListener(io.netty.util.concurrent.GenericFutureListener)",
                "io.netty.channel.embedded.EmbeddedChannel:io.netty.channel.ChannelFuture close()",
                "io.netty.channel.DefaultChannelPipeline:io.netty.channel.ChannelPipeline addLast(io.netty.channel.ChannelHandler[])"
            ],
            "vul-called frequency": 10,
            "related vul root method": {
                "CVE-2019-16869": [
                    "io.netty.handler.codec.http.HttpObjectDecoder:void splitHeader(io.netty.util.internal.AppendableCharSequence)"
                ]
            },
            "CVE-API": {
                "CVE-2019-16869": [
                    "io.netty.bootstrap.Bootstrap:io.netty.channel.ChannelFuture connect(java.lang.String,int)",
                    "io.netty.channel.nio.NioEventLoopGroup:void <init>(int)",
                    "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture close()",
                    "io.netty.channel.AbstractChannel:io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object)",
                    "io.netty.channel.DefaultChannelPromise:io.netty.channel.ChannelPromise setFailure(java.lang.Throwable)",
                    "io.netty.channel.DefaultChannelPromise:io.netty.channel.ChannelPromise setSuccess()",
                    "io.netty.channel.DefaultChannelPromise:io.netty.channel.ChannelPromise addListener(io.netty.util.concurrent.GenericFutureListener)",
                    "io.netty.channel.embedded.EmbeddedChannel:io.netty.channel.ChannelFuture close()",
                    "io.netty.channel.DefaultChannelPipeline:io.netty.channel.ChannelPipeline addLast(io.netty.channel.ChannelHandler[])"
                ]
            }
        },
        "com.alibaba:fastjson:1.2.49": {
            "used-method num": 47,
            "used method": [
                "com.alibaba.fastjson.JSONArray:void <init>()",
                "com.alibaba.fastjson.JSONObject:java.util.Set keySet()",
                "com.alibaba.fastjson.serializer.JSONSerializer:java.lang.String toString()",
                "com.alibaba.fastjson.JSON:java.lang.Object parseObject(java.lang.String,java.lang.Class)",
                "com.alibaba.fastjson.parser.ParseContext:java.lang.String toString()",
                "com.alibaba.fastjson.JSONArray:java.util.Iterator iterator()",
                "com.alibaba.fastjson.JSONObject:boolean getBooleanValue(java.lang.String)",
                "com.alibaba.fastjson.JSON:java.lang.String toString()",
                "com.alibaba.fastjson.JSON:java.lang.Object toJavaObject(com.alibaba.fastjson.JSON,java.lang.Class)",
                "com.alibaba.fastjson.JSONObject:com.alibaba.fastjson.JSONObject getJSONObject(java.lang.String)",
                "com.alibaba.fastjson.JSONArray:boolean contains(java.lang.Object)",
                "com.alibaba.fastjson.JSONObject:java.lang.Long getLong(java.lang.String)",
                "com.alibaba.fastjson.JSONObject:java.util.Collection values()",
                "com.alibaba.fastjson.serializer.SerializeConfig:void <clinit>()",
                "com.alibaba.fastjson.JSONObject:void <init>()",
                "com.alibaba.fastjson.JSONObject:boolean containsKey(java.lang.Object)",
                "com.alibaba.fastjson.support.config.FastJsonConfig:void <init>()",
                "com.alibaba.fastjson.JSONArray:void clear()",
                "com.alibaba.fastjson.JSONObject:java.util.Set entrySet()",
                "com.alibaba.fastjson.JSONObject:int getIntValue(java.lang.String)",
                "com.alibaba.fastjson.JSONObject:java.lang.Object get(java.lang.Object)",
                "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object)",
                "com.alibaba.fastjson.serializer.SerializeConfig:boolean put(java.lang.reflect.Type,com.alibaba.fastjson.serializer.ObjectSerializer)",
                "com.alibaba.fastjson.serializer.ToStringSerializer:void <clinit>()",
                "com.alibaba.fastjson.JSONPObject:java.lang.String toString()",
                "com.alibaba.fastjson.JSONObject:java.lang.String getString(java.lang.String)",
                "com.alibaba.fastjson.JSONObject:com.alibaba.fastjson.JSONArray getJSONArray(java.lang.String)",
                "com.alibaba.fastjson.JSONObject:int size()",
                "com.alibaba.fastjson.JSONObject:java.lang.Object put(java.lang.String,java.lang.Object)",
                "com.alibaba.fastjson.JSON:com.alibaba.fastjson.JSONObject parseObject(java.lang.String)",
                "com.alibaba.fastjson.JSONArray:boolean isEmpty()",
                "com.alibaba.fastjson.serializer.SerialContext:java.lang.String toString()",
                "com.alibaba.fastjson.JSONArray:int size()",
                "com.alibaba.fastjson.serializer.SerializeWriter:java.lang.String toString()",
                "com.alibaba.fastjson.JSONObject:java.lang.Object clone()",
                "com.alibaba.fastjson.JSON:void <clinit>()",
                "com.alibaba.fastjson.JSONObject:java.lang.Boolean getBoolean(java.lang.String)",
                "com.alibaba.fastjson.JSONObject:java.lang.Object put(java.lang.Object,java.lang.Object)",
                "com.alibaba.fastjson.JSONArray:java.lang.String getString(int)",
                "com.alibaba.fastjson.JSON:java.lang.Object toJSON(java.lang.Object)",
                "com.alibaba.fastjson.JSONArray:java.math.BigDecimal getBigDecimal(int)",
                "com.alibaba.fastjson.JSONArray:java.lang.Object clone()",
                "com.alibaba.fastjson.JSONArray:java.lang.Object get(int)",
                "com.alibaba.fastjson.JSON:java.lang.String toJSONString()",
                "com.alibaba.fastjson.JSONObject:java.lang.Object remove(java.lang.Object)",
                "com.alibaba.fastjson.JSONArray:boolean add(java.lang.Object)",
                "com.alibaba.fastjson.JSON:java.lang.Object parse(java.lang.String)"
            ],
            "CVE": [
                "CVE-2022-25845"
            ],
            "used vul-method": [
                "com.alibaba.fastjson.JSON:java.lang.Object parseObject(java.lang.String,java.lang.Class)",
                "com.alibaba.fastjson.JSON:java.lang.String toString()",
                "com.alibaba.fastjson.JSON:java.lang.Object toJavaObject(com.alibaba.fastjson.JSON,java.lang.Class)",
                "com.alibaba.fastjson.JSONObject:com.alibaba.fastjson.JSONObject getJSONObject(java.lang.String)",
                "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object)",
                "com.alibaba.fastjson.JSONPObject:java.lang.String toString()",
                "com.alibaba.fastjson.JSONObject:com.alibaba.fastjson.JSONArray getJSONArray(java.lang.String)",
                "com.alibaba.fastjson.JSON:com.alibaba.fastjson.JSONObject parseObject(java.lang.String)",
                "com.alibaba.fastjson.JSONArray:java.lang.String getString(int)",
                "com.alibaba.fastjson.JSON:java.lang.Object toJSON(java.lang.Object)",
                "com.alibaba.fastjson.JSONArray:java.math.BigDecimal getBigDecimal(int)",
                "com.alibaba.fastjson.JSON:java.lang.String toJSONString()",
                "com.alibaba.fastjson.JSON:java.lang.Object parse(java.lang.String)"
            ],
            "vul-called frequency": 41,
            "related vul root method": {
                "CVE-2022-25845": [
                    "com.alibaba.fastjson.parser.ParserConfig:java.lang.Class checkAutoType(java.lang.String,java.lang.Class,int)"
                ]
            },
            "CVE-API": {
                "CVE-2022-25845": [
                    "com.alibaba.fastjson.JSON:java.lang.Object parseObject(java.lang.String,java.lang.Class)",
                    "com.alibaba.fastjson.JSON:java.lang.String toString()",
                    "com.alibaba.fastjson.JSON:java.lang.Object toJavaObject(com.alibaba.fastjson.JSON,java.lang.Class)",
                    "com.alibaba.fastjson.JSONObject:com.alibaba.fastjson.JSONObject getJSONObject(java.lang.String)",
                    "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object)",
                    "com.alibaba.fastjson.JSONPObject:java.lang.String toString()",
                    "com.alibaba.fastjson.JSONObject:com.alibaba.fastjson.JSONArray getJSONArray(java.lang.String)",
                    "com.alibaba.fastjson.JSON:com.alibaba.fastjson.JSONObject parseObject(java.lang.String)",
                    "com.alibaba.fastjson.JSONArray:java.lang.String getString(int)",
                    "com.alibaba.fastjson.JSON:java.lang.Object toJSON(java.lang.Object)",
                    "com.alibaba.fastjson.JSONArray:java.math.BigDecimal getBigDecimal(int)",
                    "com.alibaba.fastjson.JSON:java.lang.String toJSONString()",
                    "com.alibaba.fastjson.JSON:java.lang.Object parse(java.lang.String)"
                ]
            }
        },
        "org.hibernate.validator:hibernate-validator:6.0.13.Final": {
            "used-method num": 0,
            "used method": []
        },
        "com.squareup.retrofit2:retrofit:2.3.0": {
            "used-method num": 17,
            "used method": [
                "retrofit2.Retrofit$Builder:retrofit2.Retrofit$Builder addCallAdapterFactory(retrofit2.CallAdapter$Factory)",
                "retrofit2.Retrofit$Builder:retrofit2.Retrofit$Builder client(okhttp3.OkHttpClient)",
                "retrofit2.Utils$GenericArrayTypeImpl:java.lang.String toString()",
                "retrofit2.Response:java.lang.String toString()",
                "retrofit2.Retrofit$Builder:void <init>()",
                "retrofit2.Utils$ParameterizedTypeImpl:java.lang.String toString()",
                "retrofit2.Utils$WildcardTypeImpl:java.lang.String toString()",
                "retrofit2.Retrofit:java.lang.Object create(java.lang.Class)",
                "retrofit2.Retrofit$Builder:retrofit2.Retrofit$Builder baseUrl(java.lang.String)",
                "retrofit2.RequestBuilder$ContentTypeOverridingRequestBody:void writeTo(okio.BufferedSink)",
                "retrofit2.Response:int code()",
                "retrofit2.OkHttpCall:retrofit2.OkHttpCall clone()",
                "retrofit2.Retrofit$Builder:retrofit2.Retrofit build()",
                "retrofit2.Retrofit$Builder:retrofit2.Retrofit$Builder addConverterFactory(retrofit2.Converter$Factory)",
                "retrofit2.Response:java.lang.String message()",
                "retrofit2.ExecutorCallAdapterFactory$ExecutorCallbackCall:retrofit2.Call clone()",
                "retrofit2.OkHttpCall:retrofit2.Response execute()"
            ],
            "CVE": [
                "CVE-2018-1000850"
            ],
            "used vul-method": [
                "retrofit2.OkHttpCall:retrofit2.Response execute()"
            ],
            "vul-called frequency": 2,
            "related vul root method": {
                "CVE-2018-1000850": [
                    "retrofit2.RequestBuilder:void addPathParam(java.lang.String,java.lang.String,boolean)"
                ]
            },
            "CVE-API": {
                "CVE-2018-1000850": [
                    "retrofit2.OkHttpCall:retrofit2.Response execute()"
                ]
            }
        },
        "org.apache.commons:commons-compress:1.18": {
            "used-method num": 0,
            "used method": []
        },
        "org.apache.shiro:shiro-core:1.4.0": {
            "used-method num": 22,
            "used method": [
                "org.apache.shiro.util.MapContext:java.util.Set entrySet()",
                "org.apache.shiro.util.MapContext:java.util.Collection values()",
                "org.apache.shiro.authz.SimpleAuthorizationInfo:void <init>()",
                "org.apache.shiro.util.SimpleByteSource:java.lang.String toString()",
                "org.apache.shiro.authc.UsernamePasswordToken:java.lang.Object getCredentials()",
                "org.apache.shiro.util.MapContext:java.lang.Object put(java.lang.Object,java.lang.Object)",
                "org.apache.shiro.subject.SimplePrincipalCollection:java.lang.String toString()",
                "org.apache.shiro.util.MapContext:java.lang.Object get(java.lang.Object)",
                "org.apache.shiro.realm.AuthorizingRealm:void <init>()",
                "org.apache.shiro.authz.SimpleAuthorizationInfo:void addRole(java.lang.String)",
                "org.apache.shiro.authc.SimpleAuthenticationInfo:java.lang.String toString()",
                "org.apache.shiro.authz.permission.WildcardPermission:java.lang.String toString()",
                "org.apache.shiro.realm.CachingRealm:java.lang.Object getAvailablePrincipal(org.apache.shiro.subject.PrincipalCollection)",
                "org.apache.shiro.authc.UsernamePasswordToken:java.lang.String toString()",
                "org.apache.shiro.authc.UsernamePasswordToken:java.lang.String getUsername()",
                "org.apache.shiro.util.MapContext:boolean containsKey(java.lang.Object)",
                "org.apache.shiro.authc.UsernamePasswordToken:void <init>(java.lang.String,java.lang.String)",
                "org.apache.shiro.util.MapContext:int size()",
                "org.apache.shiro.SecurityUtils:org.apache.shiro.subject.Subject getSubject()",
                "org.apache.shiro.util.MapContext:java.util.Set keySet()",
                "org.apache.shiro.authc.SimpleAuthenticationInfo:void <init>(java.lang.Object,java.lang.Object,java.lang.String)",
                "org.apache.shiro.util.MapContext:java.lang.Object remove(java.lang.Object)"
            ]
        }
    }
}
{
    "project name": "dessalines_torrenttunes-client",
    "vulnerable dependencies": {
        "org.apache.httpcomponents:httpclient:4.4.1": {
            "used-method num": 39,
            "used method": [
                "org.apache.http.client.entity.LazyDecompressingInputStream:int read(byte[])",
                "org.apache.http.client.config.RequestConfig:org.apache.http.client.config.RequestConfig$Builder custom()",
                "org.apache.http.impl.client.HttpClientBuilder:org.apache.http.impl.client.CloseableHttpClient build()",
                "org.apache.http.impl.conn.LoggingOutputStream:void flush()",
                "org.apache.http.client.methods.HttpEntityEnclosingRequestBase:java.lang.Object clone()",
                "org.apache.http.client.methods.HttpPost:void <init>(java.lang.String)",
                "org.apache.http.client.entity.LazyDecompressingInputStream:void close()",
                "org.apache.http.client.methods.HttpEntityEnclosingRequestBase:void setEntity(org.apache.http.HttpEntity)",
                "org.apache.http.client.entity.DeflateInputStream:int read(byte[])",
                "org.apache.http.conn.routing.RouteTracker:java.lang.Object clone()",
                "org.apache.http.impl.client.RedirectLocations:java.net.URI get(int)",
                "org.apache.http.impl.auth.HttpEntityDigester:void write(byte[],int,int)",
                "org.apache.http.impl.execchain.RequestEntityProxy:org.apache.http.Header getContentType()",
                "org.apache.http.impl.client.BasicResponseHandler:void <init>()",
                "org.apache.http.impl.cookie.BasicClientCookie:java.lang.Object clone()",
                "org.apache.http.impl.client.RedirectLocations:int size()",
                "org.apache.http.impl.client.CloseableHttpClient:org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)",
                "org.apache.http.client.methods.AbstractExecutionAwareRequest:java.lang.Object clone()",
                "org.apache.http.client.entity.DeflateInputStream$DeflateStream:void close()",
                "org.apache.http.client.config.RequestConfig$Builder:org.apache.http.client.config.RequestConfig$Builder setConnectTimeout(int)",
                "org.apache.http.conn.EofSensorInputStream:void close()",
                "org.apache.http.impl.client.BasicResponseHandler:java.lang.String handleResponse(org.apache.http.HttpResponse)",
                "org.apache.http.impl.execchain.HttpResponseProxy:java.lang.String toString()",
                "org.apache.http.impl.client.HttpClientBuilder:org.apache.http.impl.client.HttpClientBuilder create()",
                "org.apache.http.impl.cookie.BasicClientCookie2:java.lang.Object clone()",
                "org.apache.http.client.entity.DeflateInputStream:void close()",
                "org.apache.http.conn.routing.HttpRoute:java.lang.Object clone()",
                "org.ietf.jgss.GSSException:java.lang.String getMessage()",
                "org.apache.http.impl.client.InternalHttpClient:void close()",
                "org.apache.http.impl.client.RedirectLocations:java.lang.Object set(int,java.lang.Object)",
                "org.apache.http.impl.conn.LoggingInputStream:void close()",
                "org.apache.http.impl.conn.LoggingInputStream:int read(byte[])",
                "org.apache.http.impl.auth.HttpEntityDigester:void close()",
                "org.apache.http.impl.conn.LoggingOutputStream:void write(byte[],int,int)",
                "org.apache.http.client.config.RequestConfig:org.apache.http.client.config.RequestConfig clone()",
                "org.apache.http.client.config.RequestConfig:void <clinit>()",
                "org.apache.http.impl.conn.LoggingOutputStream:void close()",
                "org.apache.http.conn.EofSensorInputStream:int read(byte[])",
                "org.apache.http.client.config.RequestConfig$Builder:org.apache.http.client.config.RequestConfig build()"
            ],
            "CVE": [
                "CVE-2020-13956"
            ],
            "used vul-method": [
                "org.apache.http.impl.client.CloseableHttpClient:org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)"
            ],
            "vul-called frequency": 2,
            "related vul root method": {
                "CVE-2020-13956": [
                    "org.apache.http.client.utils.URIUtils:org.apache.http.HttpHost extractHost(java.net.URI)"
                ]
            },
            "CVE-API": {
                "CVE-2020-13956": [
                    "org.apache.http.impl.client.CloseableHttpClient:org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)"
                ]
            }
        },
        "com.sparkjava:spark-core:2.3": {
            "used-method num": 35,
            "used method": [
                "spark.Request:java.lang.String params(java.lang.String)",
                "spark.Request:java.lang.String body()",
                "spark.utils.GzipUtils:java.io.OutputStream checkAndWrap(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
                "spark.Response:void status(int)",
                "spark.Request:java.lang.String host()",
                "spark.webserver.ResponseWrapper:void header(java.lang.String,java.lang.String)",
                "spark.Request:java.lang.String headers(java.lang.String)",
                "spark.Spark:void threadPool(int)",
                "spark.Response:javax.servlet.http.HttpServletResponse raw()",
                "spark.webserver.RequestWrapper:java.lang.String params(java.lang.String)",
                "spark.webserver.ResponseWrapper:javax.servlet.http.HttpServletResponse raw()",
                "spark.webserver.RequestWrapper:java.lang.String headers(java.lang.String)",
                "spark.webserver.RequestWrapper:java.lang.String host()",
                "spark.webserver.RequestWrapper:java.lang.String pathInfo()",
                "spark.webserver.RequestWrapper:java.util.Set headers()",
                "spark.Spark:void post(java.lang.String,spark.Route)",
                "spark.webserver.RequestWrapper:java.lang.String[] splat()",
                "spark.Request:java.lang.String pathInfo()",
                "spark.webserver.ResponseWrapper:void status(int)",
                "spark.utils.GzipUtils:void <clinit>()",
                "spark.webserver.ResponseWrapper:void type(java.lang.String)",
                "spark.webserver.RequestWrapper:java.lang.String ip()",
                "spark.Request:java.lang.String ip()",
                "spark.webserver.RequestWrapper:java.lang.String body()",
                "spark.Request:java.util.Set headers()",
                "spark.Request:java.lang.String[] splat()",
                "spark.Spark:void awaitInitialization()",
                "spark.Spark:void port(int)",
                "spark.webserver.RequestWrapper:java.lang.String url()",
                "spark.Response:void type(java.lang.String)",
                "spark.Response:void header(java.lang.String,java.lang.String)",
                "spark.Spark:void get(java.lang.String,spark.Route)",
                "spark.Request:javax.servlet.http.HttpServletRequest raw()",
                "spark.webserver.RequestWrapper:javax.servlet.http.HttpServletRequest raw()",
                "spark.Request:java.lang.String url()"
            ]
        },
        "junit:junit:4.11": {
            "used-method num": 0,
            "used method": []
        },
        "ch.qos.logback:logback-classic:1.0.13": {
            "used-method num": 7,
            "used method": [
                "ch.qos.logback.classic.Logger:void error(java.lang.String)",
                "ch.qos.logback.classic.Level:void <clinit>()",
                "ch.qos.logback.classic.Logger:void debug(java.lang.String)",
                "ch.qos.logback.classic.Level:ch.qos.logback.classic.Level toLevel(java.lang.String)",
                "ch.qos.logback.classic.Logger:void setLevel(ch.qos.logback.classic.Level)",
                "ch.qos.logback.classic.Logger:ch.qos.logback.classic.LoggerContext getLoggerContext()",
                "ch.qos.logback.classic.Logger:void info(java.lang.String)"
            ]
        }
    }
}
{
    "project name": "liwei128_apimonitor",
    "vulnerable dependencies": {
        "junit:junit:4.12": {
            "used-method num": 0,
            "used method": []
        },
        "org.quartz-scheduler:quartz:2.2.3": {
            "used-method num": 48,
            "used method": [
                "org.quartz.TriggerBuilder:org.quartz.TriggerBuilder withIdentity(org.quartz.TriggerKey)",
                "org.quartz.impl.RemoteScheduler:void pauseTrigger(org.quartz.TriggerKey)",
                "org.quartz.JobBuilder:org.quartz.JobBuilder newJob(java.lang.Class)",
                "org.quartz.impl.JobDetailImpl:org.quartz.JobDataMap getJobDataMap()",
                "org.quartz.impl.triggers.CronTriggerImpl:java.lang.Object clone()",
                "org.quartz.utils.StringKeyDirtyFlagMap:java.lang.String getString(java.lang.String)",
                "org.quartz.impl.RemoteScheduler:boolean checkExists(org.quartz.TriggerKey)",
                "org.quartz.impl.RemoteScheduler:java.util.Date rescheduleJob(org.quartz.TriggerKey,org.quartz.Trigger)",
                "org.quartz.utils.DirtyFlagMap:java.lang.Object get(java.lang.Object)",
                "org.quartz.utils.StringKeyDirtyFlagMap:java.lang.Object put(java.lang.String,java.lang.Object)",
                "org.quartz.CronScheduleBuilder:org.quartz.CronScheduleBuilder cronSchedule(java.lang.String)",
                "org.quartz.utils.DirtyFlagMap:void putAll(java.util.Map)",
                "org.quartz.impl.StdScheduler:org.quartz.Trigger getTrigger(org.quartz.TriggerKey)",
                "org.quartz.JobBuilder:org.quartz.JobDetail build()",
                "org.quartz.impl.RemoteScheduler:java.util.Date scheduleJob(org.quartz.JobDetail,org.quartz.Trigger)",
                "org.quartz.utils.DirtyFlagMap$DirtyFlagMapEntrySet:java.util.Iterator iterator()",
                "org.quartz.utils.DirtyFlagMap:java.lang.Object clone()",
                "org.quartz.utils.DirtyFlagMap:java.lang.Object remove(java.lang.Object)",
                "org.quartz.utils.DirtyFlagMap$DirtyFlagCollection:java.util.Iterator iterator()",
                "org.quartz.SchedulerException:void <init>(java.lang.String)",
                "org.quartz.utils.DirtyFlagMap$DirtyFlagIterator:boolean hasNext()",
                "org.quartz.TriggerKey:org.quartz.TriggerKey triggerKey(java.lang.String,java.lang.String)",
                "org.quartz.utils.DirtyFlagMap$DirtyFlagMapEntryIterator:org.quartz.utils.DirtyFlagMap$DirtyFlagMapEntry next()",
                "org.quartz.impl.StdScheduler:boolean unscheduleJob(org.quartz.TriggerKey)",
                "org.quartz.impl.JobExecutionContextImpl:org.quartz.JobDetail getJobDetail()",
                "org.quartz.impl.StdScheduler:boolean checkExists(org.quartz.TriggerKey)",
                "org.quartz.impl.JobExecutionContextImpl:java.lang.String toString()",
                "org.quartz.SchedulerMetaData:java.lang.String toString()",
                "org.quartz.SchedulerException:java.lang.String toString()",
                "org.quartz.impl.StdScheduler:void pauseTrigger(org.quartz.TriggerKey)",
                "org.quartz.utils.StringKeyDirtyFlagMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
                "org.quartz.impl.triggers.AbstractTrigger:java.lang.Object clone()",
                "org.quartz.impl.JobDetailImpl:java.lang.Object clone()",
                "org.quartz.JobBuilder:org.quartz.JobBuilder withIdentity(java.lang.String,java.lang.String)",
                "org.quartz.impl.JobDetailImpl:java.lang.String toString()",
                "org.quartz.utils.DirtyFlagMap$DirtyFlagIterator:java.lang.Object next()",
                "org.quartz.impl.RemoteScheduler:org.quartz.Trigger getTrigger(org.quartz.TriggerKey)",
                "org.quartz.utils.counter.sampled.TimeStampedCounterValue:java.lang.String toString()",
                "org.quartz.impl.JobDetailImpl:org.quartz.JobKey getKey()",
                "org.quartz.impl.StdScheduler:java.util.Date scheduleJob(org.quartz.JobDetail,org.quartz.Trigger)",
                "org.quartz.utils.Key:java.lang.String toString()",
                "org.quartz.CronExpression:java.lang.Object clone()",
                "org.quartz.TriggerBuilder:org.quartz.TriggerBuilder newTrigger()",
                "org.quartz.impl.StdScheduler:java.util.Date rescheduleJob(org.quartz.TriggerKey,org.quartz.Trigger)",
                "org.quartz.impl.RemoteScheduler:boolean unscheduleJob(org.quartz.TriggerKey)",
                "org.quartz.TriggerBuilder:org.quartz.Trigger build()",
                "org.quartz.TriggerBuilder:org.quartz.TriggerBuilder withSchedule(org.quartz.ScheduleBuilder)",
                "org.quartz.impl.triggers.AbstractTrigger:java.lang.String toString()"
            ]
        },
        "com.alibaba:fastjson:1.2.47": {
            "used-method num": 33,
            "used method": [
                "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object)",
                "com.alibaba.fastjson.JSONPObject:java.lang.String toString()",
                "com.alibaba.fastjson.JSONObject:java.lang.String getString(java.lang.String)",
                "com.alibaba.fastjson.JSONObject:com.alibaba.fastjson.JSONArray getJSONArray(java.lang.String)",
                "com.alibaba.fastjson.serializer.JSONSerializer:java.lang.String toString()",
                "com.alibaba.fastjson.parser.ParseContext:java.lang.String toString()",
                "com.alibaba.fastjson.JSONArray:java.util.Iterator iterator()",
                "com.alibaba.fastjson.JSONReader:java.lang.Object readObject()",
                "com.alibaba.fastjson.JSONReader:boolean hasNext()",
                "com.alibaba.fastjson.JSON:java.lang.String toString()",
                "com.alibaba.fastjson.JSONPath:void <clinit>()",
                "com.alibaba.fastjson.JSONReader:void close()",
                "com.alibaba.fastjson.JSONObject:com.alibaba.fastjson.JSONObject getJSONObject(java.lang.String)",
                "com.alibaba.fastjson.JSONReader:void endObject()",
                "com.alibaba.fastjson.JSONReader:void <init>(java.io.Reader)",
                "com.alibaba.fastjson.JSONPath:java.lang.Object read(java.lang.String,java.lang.String)",
                "com.alibaba.fastjson.JSONReader:void startArray()",
                "com.alibaba.fastjson.JSON:com.alibaba.fastjson.JSONObject parseObject(java.lang.String)",
                "com.alibaba.fastjson.JSONArray:boolean isEmpty()",
                "com.alibaba.fastjson.JSONReader:void endArray()",
                "com.alibaba.fastjson.serializer.SerialContext:java.lang.String toString()",
                "com.alibaba.fastjson.JSONArray:int size()",
                "com.alibaba.fastjson.serializer.SerializeWriter:java.lang.String toString()",
                "com.alibaba.fastjson.JSONObject:java.lang.Object clone()",
                "com.alibaba.fastjson.JSONReader:java.lang.String readString()",
                "com.alibaba.fastjson.JSON:void <clinit>()",
                "com.alibaba.fastjson.JSONObject:java.lang.Object put(java.lang.Object,java.lang.Object)",
                "com.alibaba.fastjson.JSON:com.alibaba.fastjson.JSONArray parseArray(java.lang.String)",
                "com.alibaba.fastjson.JSONArray:java.lang.Object clone()",
                "com.alibaba.fastjson.JSONArray:java.lang.Object get(int)",
                "com.alibaba.fastjson.JSONReader:void startObject()",
                "com.alibaba.fastjson.JSONObject:java.lang.Object remove(java.lang.Object)",
                "com.alibaba.fastjson.JSONObject:java.lang.Object get(java.lang.Object)"
            ],
            "CVE": [
                "CVE-2022-25845"
            ],
            "used vul-method": [
                "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object)",
                "com.alibaba.fastjson.JSONPObject:java.lang.String toString()",
                "com.alibaba.fastjson.JSONObject:com.alibaba.fastjson.JSONArray getJSONArray(java.lang.String)",
                "com.alibaba.fastjson.JSONReader:java.lang.Object readObject()",
                "com.alibaba.fastjson.JSON:java.lang.String toString()",
                "com.alibaba.fastjson.JSONObject:com.alibaba.fastjson.JSONObject getJSONObject(java.lang.String)",
                "com.alibaba.fastjson.JSONPath:java.lang.Object read(java.lang.String,java.lang.String)",
                "com.alibaba.fastjson.JSON:com.alibaba.fastjson.JSONObject parseObject(java.lang.String)",
                "com.alibaba.fastjson.JSONReader:java.lang.String readString()",
                "com.alibaba.fastjson.JSON:com.alibaba.fastjson.JSONArray parseArray(java.lang.String)"
            ],
            "vul-called frequency": 33,
            "related vul root method": {
                "CVE-2022-25845": [
                    "com.alibaba.fastjson.parser.ParserConfig:java.lang.Class checkAutoType(java.lang.String,java.lang.Class,int)"
                ]
            },
            "CVE-API": {
                "CVE-2022-25845": [
                    "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object)",
                    "com.alibaba.fastjson.JSONPObject:java.lang.String toString()",
                    "com.alibaba.fastjson.JSONObject:com.alibaba.fastjson.JSONArray getJSONArray(java.lang.String)",
                    "com.alibaba.fastjson.JSONReader:java.lang.Object readObject()",
                    "com.alibaba.fastjson.JSON:java.lang.String toString()",
                    "com.alibaba.fastjson.JSONObject:com.alibaba.fastjson.JSONObject getJSONObject(java.lang.String)",
                    "com.alibaba.fastjson.JSONPath:java.lang.Object read(java.lang.String,java.lang.String)",
                    "com.alibaba.fastjson.JSON:com.alibaba.fastjson.JSONObject parseObject(java.lang.String)",
                    "com.alibaba.fastjson.JSONReader:java.lang.String readString()",
                    "com.alibaba.fastjson.JSON:com.alibaba.fastjson.JSONArray parseArray(java.lang.String)"
                ]
            }
        },
        "org.apache.httpcomponents:httpclient:4.5.3": {
            "used-method num": 101,
            "used method": [
                "org.apache.http.client.protocol.HttpClientContext:java.lang.Object getUserToken()",
                "org.apache.http.impl.execchain.ResponseEntityProxy:java.lang.String toString()",
                "org.apache.http.client.config.RequestConfig:org.apache.http.client.config.RequestConfig$Builder custom()",
                "org.apache.http.impl.client.CloseableHttpClient:java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler)",
                "org.apache.http.impl.execchain.HttpResponseProxy:org.apache.http.HttpEntity getEntity()",
                "org.apache.http.impl.client.HttpClientBuilder:org.apache.http.impl.client.CloseableHttpClient build()",
                "org.apache.http.client.config.RequestConfig$Builder:org.apache.http.client.config.RequestConfig$Builder setConnectionRequestTimeout(int)",
                "org.apache.http.client.methods.RequestBuilder:org.apache.http.client.methods.RequestBuilder post()",
                "org.apache.http.client.config.RequestConfig$Builder:org.apache.http.client.config.RequestConfig$Builder setProxyPreferredAuthSchemes(java.util.Collection)",
                "org.apache.http.client.methods.HttpEntityEnclosingRequestBase:java.lang.Object clone()",
                "org.apache.http.client.config.RequestConfig:org.apache.http.client.config.RequestConfig$Builder copy(org.apache.http.client.config.RequestConfig)",
                "org.apache.http.client.methods.HttpPost:void <init>(java.lang.String)",
                "org.apache.http.client.utils.URIBuilder:java.lang.String toString()",
                "org.apache.http.conn.routing.HttpRoute:java.lang.String toString()",
                "org.apache.http.impl.conn.SystemDefaultDnsResolver:void <clinit>()",
                "org.apache.http.cookie.CookieOrigin:java.lang.String toString()",
                "org.apache.http.client.methods.RequestBuilder:org.apache.http.client.methods.RequestBuilder get()",
                "org.apache.http.impl.conn.PoolingHttpClientConnectionManager:void setMaxTotal(int)",
                "org.apache.http.client.methods.RequestBuilder:org.apache.http.client.methods.RequestBuilder addParameter(java.lang.String,java.lang.String)",
                "org.apache.http.client.methods.HttpGet:void <init>(java.lang.String)",
                "org.apache.http.impl.client.BasicCredentialsProvider:java.lang.String toString()",
                "org.apache.http.client.protocol.HttpClientContext:org.apache.http.conn.routing.RouteInfo getHttpRoute()",
                "org.apache.http.impl.conn.PoolingHttpClientConnectionManager:void setMaxPerRoute(org.apache.http.conn.routing.HttpRoute,int)",
                "org.apache.http.conn.routing.RouteTracker:java.lang.Object clone()",
                "org.apache.http.client.config.RequestConfig$Builder:org.apache.http.client.config.RequestConfig$Builder setTargetPreferredAuthSchemes(java.util.Collection)",
                "org.apache.http.impl.client.CloseableHttpClient:org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext)",
                "org.apache.http.client.config.RequestConfig$Builder:org.apache.http.client.config.RequestConfig$Builder setExpectContinueEnabled(boolean)",
                "org.apache.http.impl.execchain.HttpResponseProxy:org.apache.http.StatusLine getStatusLine()",
                "org.apache.http.impl.conn.PoolingHttpClientConnectionManager:void setSocketConfig(org.apache.http.HttpHost,org.apache.http.config.SocketConfig)",
                "org.apache.http.client.config.RequestConfig$Builder:org.apache.http.client.config.RequestConfig$Builder setCookieSpec(java.lang.String)",
                "org.apache.http.client.methods.RequestBuilder:org.apache.http.client.methods.RequestBuilder setUri(java.net.URI)",
                "org.apache.http.auth.NTCredentials:java.lang.String toString()",
                "org.apache.http.impl.conn.PoolingHttpClientConnectionManager:void setDefaultSocketConfig(org.apache.http.config.SocketConfig)",
                "org.apache.http.impl.execchain.HttpResponseProxy:void close()",
                "org.apache.http.impl.client.RedirectLocations:java.net.URI get(int)",
                "org.apache.http.client.methods.RequestBuilder:org.apache.http.client.methods.RequestBuilder put()",
                "org.apache.http.impl.conn.PoolingHttpClientConnectionManager:void setDefaultMaxPerRoute(int)",
                "org.apache.http.conn.routing.HttpRoute:void <init>(org.apache.http.HttpHost)",
                "org.apache.http.client.config.RequestConfig:java.lang.String toString()",
                "org.apache.http.impl.cookie.BasicClientCookie:java.lang.Object clone()",
                "org.apache.http.client.methods.RequestBuilder:org.apache.http.client.methods.RequestBuilder delete()",
                "org.apache.http.impl.client.RedirectLocations:int size()",
                "org.apache.http.client.methods.RequestBuilder:org.apache.http.client.methods.RequestBuilder head()",
                "org.ietf.jgss.Oid:java.lang.String toString()",
                "org.apache.http.client.methods.RequestBuilder:org.apache.http.client.methods.HttpUriRequest build()",
                "org.apache.http.impl.auth.AuthSchemeBase:java.lang.String toString()",
                "org.apache.http.impl.client.CloseableHttpClient:org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)",
                "org.apache.http.client.methods.HttpRequestWrapper:java.lang.String toString()",
                "org.apache.http.client.methods.HttpRequestBase:java.net.URI getURI()",
                "org.apache.http.client.config.RequestConfig$Builder:org.apache.http.client.config.RequestConfig$Builder setSocketTimeout(int)",
                "org.apache.http.conn.ssl.SSLConnectionSocketFactory:void <init>(javax.net.ssl.SSLContext)",
                "org.apache.http.client.methods.HttpRequestBase:void setConfig(org.apache.http.client.config.RequestConfig)",
                "org.apache.http.impl.cookie.BasicClientCookie:java.lang.String toString()",
                "org.apache.http.client.methods.AbstractExecutionAwareRequest:java.lang.Object clone()",
                "org.apache.http.impl.conn.CPoolProxy:java.lang.String toString()",
                "org.apache.http.client.config.RequestConfig$Builder:org.apache.http.client.config.RequestConfig$Builder setConnectTimeout(int)",
                "org.apache.http.impl.client.BasicCookieStore:void <init>()",
                "org.apache.http.client.protocol.HttpClientContext:void setCredentialsProvider(org.apache.http.client.CredentialsProvider)",
                "org.apache.http.impl.client.HttpClients:org.apache.http.impl.client.CloseableHttpClient createDefault()",
                "org.apache.http.client.methods.HttpPut:void <init>(java.lang.String)",
                "org.apache.http.impl.conn.PoolingHttpClientConnectionManager:void setConnectionConfig(org.apache.http.HttpHost,org.apache.http.config.ConnectionConfig)",
                "org.apache.http.impl.execchain.RequestEntityProxy:void writeTo(java.io.OutputStream)",
                "org.apache.http.impl.conn.ManagedHttpClientConnectionFactory:void <init>(org.apache.http.io.HttpMessageWriterFactory,org.apache.http.io.HttpMessageParserFactory)",
                "org.apache.http.impl.auth.DigestScheme:java.lang.String toString()",
                "org.apache.http.impl.client.BasicCookieStore:java.lang.String toString()",
                "org.apache.http.impl.execchain.HttpResponseProxy:java.lang.String toString()",
                "org.ietf.jgss.GSSException:java.lang.String toString()",
                "org.apache.http.client.ClientProtocolException:void <init>(java.lang.String)",
                "org.apache.http.auth.UsernamePasswordCredentials:java.lang.String toString()",
                "org.apache.http.impl.client.HttpClients:org.apache.http.impl.client.HttpClientBuilder custom()",
                "org.apache.http.client.config.RequestConfig$Builder:org.apache.http.client.config.RequestConfig$Builder setProxy(org.apache.http.HttpHost)",
                "org.apache.http.impl.cookie.BasicClientCookie2:java.lang.Object clone()",
                "org.apache.http.impl.conn.DefaultHttpResponseParserFactory:void <init>()",
                "org.apache.http.impl.execchain.RequestEntityProxy:java.lang.String toString()",
                "org.apache.http.client.methods.HttpRequestBase:java.lang.String toString()",
                "org.apache.http.impl.conn.DefaultHttpResponseParserFactory:void <clinit>()",
                "org.apache.http.conn.routing.HttpRoute:java.lang.Object clone()",
                "org.apache.http.impl.auth.BasicScheme:java.lang.String toString()",
                "org.apache.http.impl.conn.DefaultHttpResponseParser:void <init>(org.apache.http.io.SessionInputBuffer,org.apache.http.message.LineParser,org.apache.http.HttpResponseFactory,org.apache.http.config.MessageConstraints)",
                "org.apache.http.impl.conn.PoolingHttpClientConnectionManager:void setDefaultConnectionConfig(org.apache.http.config.ConnectionConfig)",
                "org.apache.http.impl.conn.SystemDefaultDnsResolver:void <init>()",
                "org.apache.http.client.protocol.HttpClientContext:org.apache.http.cookie.CookieOrigin getCookieOrigin()",
                "org.apache.http.auth.BasicUserPrincipal:java.lang.String toString()",
                "org.apache.http.auth.AuthState:java.lang.String toString()",
                "org.apache.http.impl.client.InternalHttpClient:void close()",
                "org.apache.http.client.protocol.HttpClientContext:org.apache.http.client.protocol.HttpClientContext create()",
                "org.apache.http.client.protocol.HttpClientContext:org.apache.http.auth.AuthState getTargetAuthState()",
                "org.apache.http.conn.socket.PlainConnectionSocketFactory:void <clinit>()",
                "org.apache.http.conn.routing.RouteTracker:java.lang.String toString()",
                "org.apache.http.impl.conn.PoolingHttpClientConnectionManager:void <init>(org.apache.http.config.Registry,org.apache.http.conn.HttpConnectionFactory,org.apache.http.conn.DnsResolver)",
                "org.apache.http.client.config.RequestConfig:org.apache.http.client.config.RequestConfig clone()",
                "org.apache.http.impl.client.BasicCookieStore:java.util.List getCookies()",
                "org.apache.http.auth.AuthScope:java.lang.String toString()",
                "org.apache.http.impl.conn.ManagedHttpClientConnectionFactory:void <clinit>()",
                "org.apache.http.client.config.RequestConfig:void <clinit>()",
                "org.apache.http.client.methods.RequestBuilder:org.apache.http.client.methods.RequestBuilder setUri(java.lang.String)",
                "org.apache.http.client.config.RequestConfig$Builder:org.apache.http.client.config.RequestConfig build()",
                "org.apache.http.impl.conn.SystemDefaultDnsResolver:java.net.InetAddress[] resolve(java.lang.String)",
                "org.apache.http.client.methods.HttpDelete:void <init>(java.lang.String)",
                "org.apache.http.impl.client.BasicCredentialsProvider:void <init>()",
                "org.apache.http.client.protocol.HttpClientContext:org.apache.http.cookie.CookieSpec getCookieSpec()"
            ],
            "CVE": [
                "CVE-2020-13956"
            ],
            "used vul-method": [
                "org.apache.http.impl.client.CloseableHttpClient:java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler)",
                "org.apache.http.impl.client.CloseableHttpClient:org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext)",
                "org.apache.http.impl.client.CloseableHttpClient:org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)"
            ],
            "vul-called frequency": 9,
            "related vul root method": {
                "CVE-2020-13956": [
                    "org.apache.http.client.utils.URIUtils:org.apache.http.HttpHost extractHost(java.net.URI)"
                ]
            },
            "CVE-API": {
                "CVE-2020-13956": [
                    "org.apache.http.impl.client.CloseableHttpClient:java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler)",
                    "org.apache.http.impl.client.CloseableHttpClient:org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext)",
                    "org.apache.http.impl.client.CloseableHttpClient:org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)"
                ]
            }
        },
        "dom4j:dom4j:1.6.1": {
            "used-method num": 0,
            "used method": []
        }
    }
}
{
    "project name": "normanmaurer_niosmtp",
    "vulnerable dependencies": {
        "io.netty:netty:3.6.1.Final": {
            "used-method num": 136,
            "used method": [
                "org.jboss.netty.channel.group.DefaultChannelGroup:boolean isEmpty()",
                "org.jboss.netty.util.internal.ConcurrentHashMap$Values:boolean isEmpty()",
                "org.jboss.netty.util.MapBackedSet:boolean add(java.lang.Object)",
                "org.jboss.netty.channel.group.DefaultChannelGroup:boolean add(org.jboss.netty.channel.Channel)",
                "org.jboss.netty.channel.group.DefaultChannelGroup:int size()",
                "org.jboss.netty.channel.FailedChannelFuture:java.lang.Throwable getCause()",
                "org.jboss.netty.util.internal.ConcurrentHashMap$EntrySet:int size()",
                "org.jboss.netty.buffer.ByteBufferBackedChannelBuffer:byte getByte(int)",
                "org.jboss.netty.util.internal.ConcurrentIdentityHashMap$EntrySet:int size()",
                "org.jboss.netty.handler.ssl.SslHandler:org.jboss.netty.channel.ChannelFuture handshake()",
                "org.jboss.netty.channel.Channels:org.jboss.netty.channel.ChannelPipeline pipeline()",
                "org.jboss.netty.channel.DefaultChannelPipeline:void remove(org.jboss.netty.channel.ChannelHandler)",
                "org.jboss.netty.util.MapBackedSet:int size()",
                "org.jboss.netty.handler.timeout.IdleStateAwareChannelUpstreamHandler:void channelIdle(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.handler.timeout.IdleStateEvent)",
                "org.jboss.netty.util.HashedWheelTimer:void <clinit>()",
                "org.jboss.netty.buffer.AbstractChannelBuffer:org.jboss.netty.buffer.ChannelBuffer readBytes(int)",
                "org.jboss.netty.util.internal.ConcurrentHashMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
                "org.jboss.netty.util.internal.ConcurrentIdentityHashMap$EntrySet:boolean contains(java.lang.Object)",
                "org.jboss.netty.util.internal.ConcurrentIdentityHashMap$KeySet:java.util.Iterator iterator()",
                "org.jboss.netty.util.internal.ConcurrentIdentityHashMap$EntrySet:boolean isEmpty()",
                "org.jboss.netty.buffer.ChannelBuffers:org.jboss.netty.buffer.ChannelBuffer wrappedBuffer(byte[])",
                "org.jboss.netty.util.HashedWheelTimer:java.util.Set stop()",
                "org.jboss.netty.logging.InternalLoggerFactory:void <clinit>()",
                "org.jboss.netty.channel.DefaultChannelPipeline:void addLast(java.lang.String,org.jboss.netty.channel.ChannelHandler)",
                "org.jboss.netty.channel.Channels:void fireExceptionCaught(org.jboss.netty.channel.Channel,java.lang.Throwable)",
                "org.jboss.netty.util.internal.ConcurrentIdentityHashMap$Values:java.util.Iterator iterator()",
                "org.jboss.netty.util.internal.ConcurrentHashMap$KeySet:boolean contains(java.lang.Object)",
                "org.jboss.netty.channel.SimpleChannelUpstreamHandler:void <clinit>()",
                "org.jboss.netty.channel.FailedChannelFuture:boolean isSuccess()",
                "org.jboss.netty.buffer.ChannelBuffers:org.jboss.netty.buffer.ChannelBuffer wrappedBuffer(byte[][])",
                "org.jboss.netty.util.internal.ConcurrentIdentityHashMap$Values:int size()",
                "org.jboss.netty.util.internal.ConcurrentIdentityHashMap$KeySet:boolean contains(java.lang.Object)",
                "org.jboss.netty.handler.stream.ChunkedWriteHandler:void <init>()",
                "org.jboss.netty.channel.CompleteChannelFuture:void addListener(org.jboss.netty.channel.ChannelFutureListener)",
                "org.jboss.netty.util.internal.ConcurrentHashMap$EntrySet:boolean isEmpty()",
                "org.jboss.netty.util.MapBackedSet:java.util.Iterator iterator()",
                "org.jboss.netty.channel.DefaultChannelPipeline:org.jboss.netty.channel.ChannelHandler get(java.lang.Class)",
                "org.jboss.netty.buffer.DuplicatedChannelBuffer:byte getByte(int)",
                "org.jboss.netty.channel.AbstractChannel:org.jboss.netty.channel.ChannelFuture write(java.lang.Object)",
                "org.jboss.netty.util.internal.ConcurrentHashMap$KeySet:boolean isEmpty()",
                "org.jboss.netty.buffer.TruncatedChannelBuffer:byte getByte(int)",
                "org.jboss.netty.channel.group.DefaultChannelGroup:boolean contains(java.lang.Object)",
                "org.jboss.netty.channel.socket.oio.AbstractOioChannel:java.net.InetSocketAddress getLocalAddress()",
                "org.jboss.netty.handler.codec.oneone.OneToOneDecoder:void <init>()",
                "org.jboss.netty.util.MapBackedSet:boolean contains(java.lang.Object)",
                "org.jboss.netty.util.internal.ConcurrentHashMap$KeySet:int size()",
                "org.jboss.netty.buffer.HeapChannelBuffer:byte getByte(int)",
                "org.jboss.netty.util.internal.ConcurrentHashMap$KeySet:java.util.Iterator iterator()",
                "org.jboss.netty.channel.DefaultChannelFuture:void addListener(org.jboss.netty.channel.ChannelFutureListener)",
                "org.jboss.netty.channel.group.DefaultChannelGroup:void <clinit>()",
                "org.jboss.netty.bootstrap.Bootstrap:void setOption(java.lang.String,java.lang.Object)",
                "org.jboss.netty.channel.DefaultChannelFuture:boolean isSuccess()",
                "org.jboss.netty.channel.SimpleChannelUpstreamHandler:void <init>()",
                "org.jboss.netty.channel.socket.nio.NioSocketChannel:boolean isConnected()",
                "org.jboss.netty.bootstrap.ClientBootstrap:org.jboss.netty.channel.ChannelFuture connect(java.net.SocketAddress,java.net.SocketAddress)",
                "org.jboss.netty.util.internal.ConcurrentIdentityHashMap:java.lang.Object get(java.lang.Object)",
                "org.jboss.netty.channel.group.DefaultChannelGroup:void <init>()",
                "org.jboss.netty.util.internal.ConcurrentIdentityHashMap$ValueIterator:java.lang.Object next()",
                "org.jboss.netty.handler.timeout.IdleStateHandler:void <init>(org.jboss.netty.util.Timer,int,int,int)",
                "org.jboss.netty.channel.socket.nio.NioClientSocketChannelFactory:void <init>(java.util.concurrent.Executor,java.util.concurrent.Executor)",
                "org.jboss.netty.buffer.AbstractChannelBuffer:void skipBytes(int)",
                "org.jboss.netty.util.HashedWheelTimer:void <init>()",
                "org.jboss.netty.util.internal.ConcurrentHashMap$KeyIterator:java.lang.Object next()",
                "org.jboss.netty.channel.socket.nio.NioClientSocketChannelFactory:void releaseExternalResources()",
                "org.jboss.netty.channel.group.DefaultChannelGroupFuture:org.jboss.netty.channel.group.ChannelGroupFuture awaitUninterruptibly()",
                "org.jboss.netty.handler.ssl.SslHandler:void <init>(javax.net.ssl.SSLEngine,boolean)",
                "org.jboss.netty.util.internal.ConcurrentHashMap$EntrySet:boolean contains(java.lang.Object)",
                "org.jboss.netty.channel.SimpleChannelUpstreamHandler:void messageReceived(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.MessageEvent)",
                "org.jboss.netty.util.internal.ConcurrentHashMap$Values:int size()",
                "org.jboss.netty.util.internal.ConcurrentIdentityHashMap$EntryIterator:java.util.Map$Entry next()",
                "org.jboss.netty.channel.DownstreamMessageEvent:java.lang.Object getMessage()",
                "org.jboss.netty.channel.socket.oio.OioClientSocketChannelFactory:void <init>(java.util.concurrent.Executor)",
                "org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext:org.jboss.netty.channel.Channel getChannel()",
                "org.jboss.netty.channel.group.CombinedIterator:java.lang.Object next()",
                "org.jboss.netty.channel.socket.nio.NioClientSocketChannelFactory:void <init>(java.util.concurrent.Executor,java.util.concurrent.Executor,int)",
                "org.jboss.netty.channel.DefaultChannelPipeline:org.jboss.netty.channel.ChannelHandler get(java.lang.String)",
                "org.jboss.netty.handler.timeout.IdleState:void <clinit>()",
                "org.jboss.netty.channel.SucceededChannelFuture:java.lang.Throwable getCause()",
                "org.jboss.netty.logging.Slf4JLoggerFactory:void <init>()",
                "org.jboss.netty.bootstrap.Bootstrap:void setPipelineFactory(org.jboss.netty.channel.ChannelPipelineFactory)",
                "org.jboss.netty.channel.group.DefaultChannelGroup:boolean add(java.lang.Object)",
                "org.jboss.netty.channel.DefaultChannelPipeline:void addBefore(java.lang.String,java.lang.String,org.jboss.netty.channel.ChannelHandler)",
                "org.jboss.netty.handler.codec.frame.LineBasedFrameDecoder:void <init>(int)",
                "org.jboss.netty.buffer.CompositeChannelBuffer:byte getByte(int)",
                "org.jboss.netty.channel.DefaultChannelPipeline:void addFirst(java.lang.String,org.jboss.netty.channel.ChannelHandler)",
                "org.jboss.netty.channel.ChannelFutureListener:void <clinit>()",
                "org.jboss.netty.handler.stream.ChunkedStream:void <init>(java.io.InputStream)",
                "org.jboss.netty.channel.group.CombinedIterator:boolean hasNext()",
                "org.jboss.netty.logging.InternalLoggerFactory:void setDefaultFactory(org.jboss.netty.logging.InternalLoggerFactory)",
                "org.jboss.netty.channel.UpstreamMessageEvent:java.lang.Object getMessage()",
                "org.jboss.netty.util.internal.ConcurrentHashMap$EntrySet:java.util.Iterator iterator()",
                "org.jboss.netty.handler.stream.ChunkedWriteHandler:void <clinit>()",
                "org.jboss.netty.buffer.DynamicChannelBuffer:byte getByte(int)",
                "org.jboss.netty.channel.DefaultChannelFuture:java.lang.Throwable getCause()",
                "org.jboss.netty.channel.group.DefaultChannelGroup:java.util.Iterator iterator()",
                "org.jboss.netty.util.internal.ConcurrentIdentityHashMap$Values:boolean isEmpty()",
                "org.jboss.netty.handler.codec.oneone.OneToOneEncoder:void <init>()",
                "org.jboss.netty.handler.timeout.IdleStateAwareChannelUpstreamHandler:void <init>()",
                "org.jboss.netty.channel.socket.nio.NioSocketChannel:java.net.InetSocketAddress getRemoteAddress()",
                "org.jboss.netty.bootstrap.ClientBootstrap:void <init>(org.jboss.netty.channel.ChannelFactory)",
                "org.jboss.netty.util.internal.ConcurrentIdentityHashMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
                "org.jboss.netty.channel.SucceededChannelFuture:boolean isSuccess()",
                "org.jboss.netty.channel.socket.oio.OioClientSocketChannelFactory:void releaseExternalResources()",
                "org.jboss.netty.buffer.ChannelBuffers:void <clinit>()",
                "org.jboss.netty.util.internal.ConcurrentIdentityHashMap$KeyIterator:java.lang.Object next()",
                "org.jboss.netty.util.internal.ConcurrentHashMap$HashIterator:boolean hasNext()",
                "org.jboss.netty.channel.socket.nio.NioSocketChannel:java.net.InetSocketAddress getLocalAddress()",
                "org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext:org.jboss.netty.channel.ChannelPipeline getPipeline()",
                "org.jboss.netty.util.internal.ConcurrentHashMap:java.lang.Object remove(java.lang.Object)",
                "org.jboss.netty.util.internal.ConcurrentHashMap$ValueIterator:java.lang.Object next()",
                "org.jboss.netty.handler.timeout.DefaultIdleStateEvent:long getLastActivityTimeMillis()",
                "org.jboss.netty.util.internal.ConcurrentIdentityHashMap$EntrySet:java.util.Iterator iterator()",
                "org.jboss.netty.buffer.SlicedChannelBuffer:byte getByte(int)",
                "org.jboss.netty.channel.group.DefaultChannelGroup:org.jboss.netty.channel.group.ChannelGroupFuture close()",
                "org.jboss.netty.channel.SimpleChannelUpstreamHandler:void channelClosed(org.jboss.netty.channel.ChannelHandlerContext,org.jboss.netty.channel.ChannelStateEvent)",
                "org.jboss.netty.util.internal.ConcurrentIdentityHashMap$KeySet:int size()",
                "org.jboss.netty.handler.ssl.SslHandler$SSLEngineInboundCloseFuture:org.jboss.netty.channel.Channel getChannel()",
                "org.jboss.netty.channel.AbstractChannel:java.lang.Integer getId()",
                "org.jboss.netty.buffer.AbstractChannelBuffer:boolean readable()",
                "org.jboss.netty.handler.ssl.SslHandler:void <clinit>()",
                "org.jboss.netty.util.internal.ConcurrentHashMap$EntryIterator:java.util.Map$Entry next()",
                "org.jboss.netty.handler.timeout.DefaultIdleStateEvent:org.jboss.netty.handler.timeout.IdleState getState()",
                "org.jboss.netty.channel.socket.oio.AbstractOioChannel:boolean isConnected()",
                "org.jboss.netty.channel.socket.oio.AbstractOioChannel:java.net.InetSocketAddress getRemoteAddress()",
                "org.jboss.netty.channel.DefaultChannelFuture:org.jboss.netty.channel.Channel getChannel()",
                "org.jboss.netty.handler.codec.frame.LineBasedFrameDecoder:void <clinit>()",
                "org.jboss.netty.channel.AbstractChannel:org.jboss.netty.channel.ChannelPipeline getPipeline()",
                "org.jboss.netty.buffer.AbstractChannelBuffer:java.lang.String toString(java.nio.charset.Charset)",
                "org.jboss.netty.util.internal.ConcurrentHashMap:java.lang.Object get(java.lang.Object)",
                "org.jboss.netty.util.internal.ConcurrentIdentityHashMap$HashIterator:boolean hasNext()",
                "org.jboss.netty.channel.DefaultExceptionEvent:java.lang.Throwable getCause()",
                "org.jboss.netty.util.internal.ConcurrentIdentityHashMap$KeySet:boolean isEmpty()",
                "org.jboss.netty.channel.CompleteChannelFuture:org.jboss.netty.channel.Channel getChannel()",
                "org.jboss.netty.util.internal.ConcurrentIdentityHashMap:java.lang.Object remove(java.lang.Object)",
                "org.jboss.netty.util.internal.ConcurrentHashMap$Values:java.util.Iterator iterator()",
                "org.jboss.netty.handler.codec.frame.FrameDecoder:void <clinit>()"
            ]
        }
    }
}
{
    "project name": "iminto_zooadmin",
    "vulnerable dependencies": {
        "ch.qos.logback:logback-classic:1.1.3": {
            "used-method num": 0,
            "used method": []
        },
        "io.undertow:undertow-core:2.0.26.Final": {
            "used-method num": 76,
            "used method": [
                "io.undertow.Handlers:io.undertow.server.handlers.PathHandler path(io.undertow.server.HttpHandler)",
                "io.undertow.server.handlers.encoding.EncodingMapping:boolean equals(java.lang.Object)",
                "io.undertow.server.handlers.resource.FileResourceManager:void <init>(java.io.File,long)",
                "io.undertow.Handlers:io.undertow.server.handlers.RedirectHandler redirect(java.lang.String)",
                "io.undertow.util.HeaderMap$2$1:boolean hasNext()",
                "io.undertow.Undertow$Builder:io.undertow.Undertow$Builder addHttpListener(int,java.lang.String)",
                "io.undertow.Undertow$Builder:io.undertow.Undertow build()",
                "io.undertow.server.handlers.form.FormData:boolean equals(java.lang.Object)",
                "io.undertow.util.CopyOnWriteMap:java.lang.Object remove(java.lang.Object)",
                "io.undertow.util.HeaderMap$1:io.undertow.util.HeaderValues next()",
                "org.ietf.jgss.GSSException:java.lang.String toString()",
                "io.undertow.server.handlers.form.FormData:java.util.Iterator iterator()",
                "io.undertow.server.handlers.cache.CachedHttpRequest:boolean equals(java.lang.Object)",
                "io.undertow.Undertow:void start()",
                "io.undertow.util.CopyOnWriteMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
                "io.undertow.util.FlexBase64$DecoderInputStream:void close()",
                "io.undertow.util.PathTemplateMatcher$PathTemplateHolder:boolean equals(java.lang.Object)",
                "io.undertow.util.PathTemplate:java.lang.String toString()",
                "io.undertow.util.SubstringMap$1:java.util.Iterator iterator()",
                "io.undertow.server.session.InMemorySessionManager:boolean equals(java.lang.Object)",
                "io.undertow.protocols.ssl.SslConduit:java.lang.String toString()",
                "io.undertow.server.handlers.IPAddressAccessControlHandler$PeerMatch:java.lang.String toString()",
                "io.undertow.protocols.http2.HPackHuffman$HuffmanCode:java.lang.String toString()",
                "io.undertow.util.ReferenceCountedPooled$1:java.lang.String toString()",
                "io.undertow.util.CopyOnWriteMap:boolean containsKey(java.lang.Object)",
                "io.undertow.security.impl.SimpleNonceManager$NonceHolder:boolean equals(java.lang.Object)",
                "io.undertow.util.HeaderMap:java.util.Iterator iterator()",
                "io.undertow.util.QValueParser$QValueResult:boolean equals(java.lang.Object)",
                "io.undertow.util.HeaderValues:java.util.Iterator iterator()",
                "io.undertow.util.SubstringMap$1$1:java.lang.String next()",
                "io.undertow.util.HeaderValues:java.lang.String get(int)",
                "io.undertow.server.handlers.resource.PathResourceManager:void <clinit>()",
                "io.undertow.util.PathTemplate:boolean equals(java.lang.Object)",
                "org.ietf.jgss.GSSException:java.lang.String getMessage()",
                "io.undertow.server.protocol.framed.AbstractFramedChannel:java.lang.String toString()",
                "io.undertow.server.handlers.resource.CachedResource$CacheKey:boolean equals(java.lang.Object)",
                "io.undertow.protocols.http2.Http2StreamSourceChannel:java.lang.String toString()",
                "io.undertow.Undertow$ListenerInfo:java.lang.String toString()",
                "io.undertow.util.FastConcurrentDirectDeque$AbstractItr:java.lang.Object next()",
                "io.undertow.protocols.http2.HPackHuffman$HuffmanCode:boolean equals(java.lang.Object)",
                "io.undertow.util.ETag:java.lang.String toString()",
                "io.undertow.websockets.WebSocketExtension:java.lang.String toString()",
                "io.undertow.util.CopyOnWriteMap:void clear()",
                "io.undertow.io.UndertowInputStream:void close()",
                "io.undertow.server.handlers.builder.PredicatedHandlersParser$ValueNode:java.lang.String toString()",
                "io.undertow.Undertow:io.undertow.Undertow$Builder builder()",
                "io.undertow.server.session.SslSessionConfig$Key:boolean equals(java.lang.Object)",
                "io.undertow.util.HeaderValues$1:boolean hasNext()",
                "io.undertow.util.HeaderValues$1:java.lang.String next()",
                "io.undertow.util.Transfer$TransferListener:java.lang.String toString()",
                "io.undertow.util.HeaderValues:int size()",
                "io.undertow.io.UndertowInputStream:int read(byte[])",
                "io.undertow.server.handlers.PathHandler:io.undertow.server.handlers.PathHandler addPrefixPath(java.lang.String,io.undertow.server.HttpHandler)",
                "io.undertow.util.HeaderMap$2$1:io.undertow.util.HttpString next()",
                "org.ietf.jgss.Oid:boolean equals(java.lang.Object)",
                "io.undertow.util.HeaderMap:java.lang.String toString()",
                "io.undertow.server.handlers.AccessControlListHandler$AclMatch:java.lang.String toString()",
                "io.undertow.util.PathTemplate$Part:java.lang.String toString()",
                "io.undertow.client.ClientRequest:java.lang.String toString()",
                "org.ietf.jgss.Oid:java.lang.String toString()",
                "io.undertow.server.handlers.builder.PredicatedHandlersParser$Token:java.lang.String toString()",
                "io.undertow.util.HttpString:boolean equals(java.lang.Object)",
                "io.undertow.websockets.WebSocketExtension$Parameter:java.lang.String toString()",
                "io.undertow.server.protocol.http.AlpnOpenListener$ListenerEntry:boolean equals(java.lang.Object)",
                "io.undertow.util.CopyOnWriteMap:java.lang.Object get(java.lang.Object)",
                "io.undertow.server.HttpServerExchange:java.lang.String toString()",
                "io.undertow.util.HttpString:java.lang.String toString()",
                "io.undertow.util.SubstringMap$1$1:boolean hasNext()",
                "io.undertow.server.handlers.cache.LimitedBufferSlicePool$PooledByteBuffer:java.lang.String toString()",
                "io.undertow.server.DefaultByteBufferPool$DefaultPooledBuffer:java.lang.String toString()",
                "io.undertow.server.handlers.encoding.ContentEncodedResourceManager$LockKey:boolean equals(java.lang.Object)",
                "io.undertow.util.ETag:boolean equals(java.lang.Object)",
                "io.undertow.util.FastConcurrentDirectDeque$AbstractItr:boolean hasNext()",
                "io.undertow.util.HeaderMap$1:boolean hasNext()",
                "io.undertow.server.handlers.form.FormData:java.lang.String toString()",
                "io.undertow.util.HeaderMap$2:java.util.Iterator iterator()"
            ],
            "CVE": [
                "CVE-2020-27782",
                "CVE-2020-10705",
                "CVE-2020-1745"
            ],
            "used vul-method": [
                "io.undertow.io.UndertowInputStream:void close()",
                "io.undertow.Undertow:void start()"
            ],
            "vul-called frequency": 3,
            "related vul root method": {
                "CVE-2020-27782": [
                    "io.undertow.server.handlers.resource.PathResourceManager:io.undertow.server.handlers.resource.Resource getResource(java.lang.String)"
                ],
                "CVE-2020-10705": [
                    "io.undertow.server.protocol.http.HttpReadListener:void exchangeComplete(io.undertow.server.HttpServerExchange)",
                    "io.undertow.server.protocol.ajp.AjpServerConnection:void terminateRequestChannel(io.undertow.server.HttpServerExchange)",
                    "io.undertow.server.protocol.http.HttpServerConnection:void terminateRequestChannel(io.undertow.server.HttpServerExchange)",
                    "io.undertow.server.protocol.http.HttpTransferEncoding:org.xnio.conduits.StreamSinkConduit createSinkConduit(io.undertow.server.HttpServerExchange)"
                ],
                "CVE-2020-1745": [
                    "io.undertow.server.protocol.ajp.AjpOpenListener:void <init>(io.undertow.connector.ByteBufferPool,org.xnio.OptionMap)",
                    "io.undertow.server.protocol.ajp.AjpRequestParser:void <init>(java.lang.String,boolean,int,int,boolean,boolean)"
                ]
            },
            "CVE-API": {
                "CVE-2020-27782": [
                    "io.undertow.io.UndertowInputStream:void close()"
                ],
                "CVE-2020-10705": [
                    "io.undertow.io.UndertowInputStream:void close()"
                ],
                "CVE-2020-1745": [
                    "io.undertow.Undertow:void start()"
                ]
            }
        }
    }
}
{
    "project name": "PearsonEducation_StatsAgg",
    "vulnerable dependencies": {
        "junit:junit:4.12": {
            "used-method num": 0,
            "used method": []
        },
        "org.apache.commons:commons-compress:1.20": {
            "used-method num": 48,
            "used method": [
                "org.apache.commons.compress.archivers.dump.TapeInputStream:void close()",
                "org.apache.commons.compress.compressors.xz.XZCompressorOutputStream:void <init>(java.io.OutputStream,int)",
                "org.apache.commons.compress.archivers.zip.ExplodingInputStream:void close()",
                "org.apache.commons.compress.compressors.gzip.GzipCompressorOutputStream:void finish()",
                "org.apache.commons.compress.compressors.deflate64.Deflate64CompressorInputStream:void close()",
                "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream:void putArchiveEntry(org.apache.commons.compress.archivers.ArchiveEntry)",
                "org.apache.commons.compress.utils.ChecksumVerifyingInputStream:void close()",
                "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream:void close()",
                "org.apache.commons.compress.archivers.ArchiveStreamFactory:org.apache.commons.compress.archivers.ArchiveInputStream createArchiveInputStream(java.lang.String,java.io.InputStream)",
                "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStream:int available()",
                "org.apache.commons.compress.archivers.sevenz.BoundedSeekableByteChannelInputStream:void close()",
                "org.apache.commons.compress.compressors.xz.XZCompressorInputStream:void <init>(java.io.InputStream)",
                "org.apache.commons.compress.archivers.tar.TarArchiveEntry:java.lang.String getName()",
                "org.apache.commons.compress.utils.ServiceLoaderIterator:boolean hasNext()",
                "org.apache.commons.compress.archivers.ar.ArArchiveInputStream:void close()",
                "org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream:void close()",
                "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream:void close()",
                "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$BoundedInputStream:int available()",
                "org.apache.commons.compress.compressors.gzip.GzipCompressorInputStream:void close()",
                "org.apache.commons.compress.compressors.gzip.GzipCompressorOutputStream:void <init>(java.io.OutputStream,org.apache.commons.compress.compressors.gzip.GzipParameters)",
                "org.apache.commons.compress.compressors.deflate64.Deflate64CompressorInputStream:int available()",
                "org.apache.commons.compress.archivers.tar.TarArchiveEntry:java.util.Date getModTime()",
                "org.apache.commons.compress.archivers.sevenz.AES256SHA256Decoder$1:void close()",
                "org.apache.commons.compress.compressors.gzip.GzipCompressorInputStream:void <init>(java.io.InputStream)",
                "org.apache.commons.compress.utils.ServiceLoaderIterator:java.lang.Object next()",
                "org.apache.commons.compress.archivers.tar.TarArchiveInputStream:org.apache.commons.compress.archivers.tar.TarArchiveEntry getNextTarEntry()",
                "org.apache.commons.compress.archivers.tar.TarArchiveEntry:boolean isDirectory()",
                "org.apache.commons.compress.archivers.ArchiveStreamFactory:void <clinit>()",
                "org.apache.commons.compress.archivers.ArchiveStreamFactory:void <init>()",
                "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStream:void close()",
                "org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream:int available()",
                "org.apache.commons.compress.archivers.tar.TarArchiveInputStream:int available()",
                "org.apache.commons.compress.utils.IOUtils:long copy(java.io.InputStream,java.io.OutputStream)",
                "org.apache.commons.compress.archivers.arj.ArjArchiveInputStream:void close()",
                "org.apache.commons.compress.archivers.tar.TarArchiveEntry:void <init>(java.io.File,java.lang.String)",
                "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream:void finish()",
                "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream:void closeArchiveEntry()",
                "org.apache.commons.compress.archivers.tar.TarArchiveInputStream:void close()",
                "org.apache.commons.compress.compressors.gzip.GzipCompressorOutputStream:void close()",
                "org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream:void close()",
                "org.apache.commons.compress.archivers.ArchiveStreamFactory:org.apache.commons.compress.archivers.ArchiveOutputStream createArchiveOutputStream(java.lang.String,java.io.OutputStream)",
                "org.apache.commons.compress.archivers.sevenz.Coders$DeflateDecoder$DeflateDecoderInputStream:void close()",
                "org.apache.commons.compress.compressors.lzw.LZWInputStream:void close()",
                "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStream:void <init>(java.io.InputStream)",
                "org.apache.commons.compress.archivers.dump.DumpArchiveInputStream:void close()",
                "org.apache.commons.compress.utils.BoundedInputStream:void close()",
                "org.apache.commons.compress.compressors.gzip.GzipCompressorOutputStream:void write(byte[],int,int)",
                "org.apache.commons.compress.compressors.gzip.GzipCompressorInputStream:void <clinit>()"
            ]
        },
        "org.eclipse.jetty:jetty-servlets:9.4.31.v20200723": {
            "used-method num": 0,
            "used method": []
        }
    }
}
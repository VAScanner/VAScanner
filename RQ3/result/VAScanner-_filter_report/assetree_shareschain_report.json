{
    "project name": "assetree_shareschain",
    "vulnerable dependencies": {
        "org.eclipse.jetty:jetty-server:9.4.12.v20180830": {
            "used-method num": 115,
            "used method": [
                "org.eclipse.jetty.server.Request:java.lang.String getParameter(java.lang.String)",
                "org.eclipse.jetty.server.HttpChannelState$4:void run()",
                "org.eclipse.jetty.server.Request:java.lang.Object getAttribute(java.lang.String)",
                "org.eclipse.jetty.server.HttpInput:java.lang.String toString()",
                "org.eclipse.jetty.server.Request:java.lang.String toString()",
                "org.eclipse.jetty.server.HttpChannelState$3:void run()",
                "org.eclipse.jetty.server.CachedContentFactory$CachedPrecompressedHttpContent:java.lang.String toString()",
                "org.eclipse.jetty.server.SecureRequestCustomizer:void <init>()",
                "org.eclipse.jetty.server.Server:void addConnector(org.eclipse.jetty.server.Connector)",
                "org.eclipse.jetty.server.session.HouseKeeper$Runner:void run()",
                "org.eclipse.jetty.server.HttpConfiguration:void <clinit>()",
                "org.eclipse.jetty.server.handler.HandlerCollection:void addHandler(org.eclipse.jetty.server.Handler)",
                "org.eclipse.jetty.server.Server:org.eclipse.jetty.server.Connector[] getConnectors()",
                "org.eclipse.jetty.server.HttpConnection:void run()",
                "org.eclipse.jetty.server.ServletRequestHttpWrapper:java.lang.String getQueryString()",
                "org.eclipse.jetty.server.HttpConnection$SendCallback:java.lang.String toString()",
                "org.eclipse.jetty.server.ServerConnector$ServerConnectorManager:java.lang.String toString()",
                "org.eclipse.jetty.server.Response:java.io.PrintWriter getWriter()",
                "org.eclipse.jetty.server.AsyncContextState:void addListener(javax.servlet.AsyncListener)",
                "org.eclipse.jetty.server.handler.ContextHandlerCollection$Branch:java.lang.String toString()",
                "org.eclipse.jetty.server.handler.ResourceHandler:void setResourceBase(java.lang.String)",
                "org.eclipse.jetty.server.HttpInput$ErrorState:java.lang.String toString()",
                "org.eclipse.jetty.server.CachedContentFactory$CachedHttpContent:java.lang.String toString()",
                "org.eclipse.jetty.server.Request:java.lang.String getMethod()",
                "org.eclipse.jetty.server.SecureRequestCustomizer:java.lang.String toString()",
                "org.eclipse.jetty.server.HttpConfiguration:void addCustomizer(org.eclipse.jetty.server.HttpConfiguration$Customizer)",
                "org.eclipse.jetty.server.HttpInput$Content:java.lang.String toString()",
                "org.eclipse.jetty.server.SslConnectionFactory:void <init>(org.eclipse.jetty.util.ssl.SslContextFactory,java.lang.String)",
                "org.eclipse.jetty.server.AbstractNetworkConnector:void setPort(int)",
                "org.eclipse.jetty.server.ServletResponseHttpWrapper:void setHeader(java.lang.String,java.lang.String)",
                "org.eclipse.jetty.server.Dispatcher$ForwardAttributes:java.lang.String toString()",
                "org.eclipse.jetty.server.handler.ResourceHandler:void <init>()",
                "org.eclipse.jetty.server.InclusiveByteRange:java.lang.String toString()",
                "org.eclipse.jetty.server.handler.ScopedHandler:void <clinit>()",
                "org.eclipse.jetty.server.HttpWriter:void close()",
                "org.eclipse.jetty.server.HttpInput:void run()",
                "org.eclipse.jetty.server.handler.HandlerList:void <init>()",
                "org.eclipse.jetty.server.handler.ContextHandler$Context:void setAttribute(java.lang.String,java.lang.Object)",
                "org.eclipse.jetty.server.HttpConfiguration:java.lang.String toString()",
                "org.eclipse.jetty.server.Response:void setDateHeader(java.lang.String,long)",
                "org.eclipse.jetty.server.HttpChannel:java.lang.String toString()",
                "org.eclipse.jetty.server.AbstractConnectionFactory:java.lang.String toString()",
                "org.eclipse.jetty.server.Dispatcher:java.lang.String toString()",
                "org.eclipse.jetty.server.handler.ContextHandler$Context:java.lang.Object getAttribute(java.lang.String)",
                "org.eclipse.jetty.server.AsyncContextState:void complete()",
                "org.eclipse.jetty.server.handler.ContextHandler:void <clinit>()",
                "org.eclipse.jetty.server.AsyncContextState:void setTimeout(long)",
                "org.eclipse.jetty.server.Response:void sendError(int)",
                "org.eclipse.jetty.server.HttpChannelState$2:void run()",
                "org.eclipse.jetty.server.session.Session$1:java.lang.String nextElement()",
                "org.eclipse.jetty.server.AbstractConnector:void setIdleTimeout(long)",
                "org.eclipse.jetty.server.session.AbstractSessionDataStore:java.lang.String toString()",
                "org.eclipse.jetty.server.ServletResponseHttpWrapper:void sendError(int)",
                "org.eclipse.jetty.server.session.AbstractSessionCache:java.lang.String toString()",
                "org.eclipse.jetty.server.SecureRequestCustomizer:void <clinit>()",
                "org.eclipse.jetty.server.session.SessionContext:java.lang.String toString()",
                "org.eclipse.jetty.server.ResourceContentFactory:java.lang.String toString()",
                "org.eclipse.jetty.server.Request:java.util.Map getParameterMap()",
                "org.eclipse.jetty.server.SslConnectionFactory:java.lang.String toString()",
                "org.eclipse.jetty.server.Request:javax.servlet.ServletContext getServletContext()",
                "org.eclipse.jetty.server.Server:java.lang.String toString()",
                "org.eclipse.jetty.server.Response:void setContentType(java.lang.String)",
                "org.eclipse.jetty.server.Request:java.lang.String getRemoteAddr()",
                "org.eclipse.jetty.server.AbstractNetworkConnector:int getPort()",
                "org.eclipse.jetty.server.AbstractNetworkConnector:void setHost(java.lang.String)",
                "org.eclipse.jetty.server.handler.HandlerWrapper:void setHandler(org.eclipse.jetty.server.Handler)",
                "org.eclipse.jetty.server.Server:void <init>()",
                "org.eclipse.jetty.server.Request:java.lang.String getHeader(java.lang.String)",
                "org.eclipse.jetty.server.AsyncContextEvent:java.lang.Throwable getThrowable()",
                "org.eclipse.jetty.server.AsyncContextState$2:void run()",
                "org.eclipse.jetty.server.session.SessionHandler:java.lang.String toString()",
                "org.eclipse.jetty.server.Request:javax.servlet.AsyncContext startAsync()",
                "org.eclipse.jetty.server.ResponseWriter:void write(char[])",
                "org.eclipse.jetty.server.handler.gzip.GzipHandler:void <init>()",
                "org.eclipse.jetty.server.Request:java.lang.String getRemoteHost()",
                "org.eclipse.jetty.server.HttpOutput:void run()",
                "org.eclipse.jetty.server.HttpConnectionFactory:void <init>(org.eclipse.jetty.server.HttpConfiguration)",
                "org.eclipse.jetty.server.Request:java.lang.String getContentType()",
                "org.eclipse.jetty.server.AsyncContextEvent:void run()",
                "org.eclipse.jetty.server.session.SessionData:java.lang.String toString()",
                "org.eclipse.jetty.server.HttpChannelState:java.lang.String toString()",
                "org.eclipse.jetty.server.HttpChannel:void run()",
                "org.eclipse.jetty.server.handler.ContextHandler$Context:java.lang.String toString()",
                "org.eclipse.jetty.server.Response:javax.servlet.ServletOutputStream getOutputStream()",
                "org.eclipse.jetty.server.ResponseWriter:void write(java.lang.String)",
                "org.eclipse.jetty.server.HttpOutput:void close()",
                "org.eclipse.jetty.server.handler.gzip.GzipHandler:void <clinit>()",
                "org.eclipse.jetty.server.Request:java.lang.String[] getParameterValues(java.lang.String)",
                "org.eclipse.jetty.server.ServerConnector:void <init>(org.eclipse.jetty.server.Server,org.eclipse.jetty.server.ConnectionFactory[])",
                "org.eclipse.jetty.server.ShutdownMonitor$ShutdownMonitorRunnable:void run()",
                "org.eclipse.jetty.server.AsyncContextState:javax.servlet.ServletResponse getResponse()",
                "org.eclipse.jetty.server.handler.gzip.GzipHandler:void setIncludedMethods(java.lang.String[])",
                "org.eclipse.jetty.server.AbstractNetworkConnector:java.lang.String toString()",
                "org.eclipse.jetty.server.handler.HandlerCollection:java.lang.String toString()",
                "org.eclipse.jetty.server.handler.DefaultHandler:void <init>()",
                "org.eclipse.jetty.server.ShutdownMonitor:java.lang.String toString()",
                "org.eclipse.jetty.server.Request:java.lang.String getServletPath()",
                "org.eclipse.jetty.server.Request:java.lang.String getQueryString()",
                "org.eclipse.jetty.server.Dispatcher$IncludeAttributes:java.lang.String toString()",
                "org.eclipse.jetty.server.CachedContentFactory:java.lang.String toString()",
                "org.eclipse.jetty.server.ResponseWriter:void close()",
                "org.eclipse.jetty.server.Response:java.lang.String toString()",
                "org.eclipse.jetty.server.HttpConfiguration:void <init>()",
                "org.eclipse.jetty.server.ResponseWriter:void print(java.lang.String)",
                "org.eclipse.jetty.server.session.DefaultSessionIdManager:java.lang.String toString()",
                "org.eclipse.jetty.server.HttpOutput:java.lang.String toString()",
                "org.eclipse.jetty.server.ServerConnector:void close()",
                "org.eclipse.jetty.server.handler.ContextHandler:java.lang.String toString()",
                "org.eclipse.jetty.server.session.HouseKeeper:java.lang.String toString()",
                "org.eclipse.jetty.server.Response:void setHeader(java.lang.String,java.lang.String)",
                "org.eclipse.jetty.server.ResourceService$1:java.lang.String toString()",
                "org.eclipse.jetty.server.HttpChannelState$1:void run()",
                "org.eclipse.jetty.server.handler.ResourceHandler:void setDirectoriesListed(boolean)",
                "org.eclipse.jetty.server.Request:void setAttribute(java.lang.String,java.lang.Object)",
                "org.eclipse.jetty.server.handler.ContextHandler:void <init>(java.lang.String)"
            ]
        },
        "org.eclipse.jetty:jetty-servlets:9.4.12.v20180830": {
            "used-method num": 0,
            "used method": []
        },
        "org.apache.tika:tika-core:1.19": {
            "used-method num": 32,
            "used method": [
                "org.apache.tika.Tika:java.lang.String detect(byte[])",
                "org.apache.tika.Tika:java.lang.String detect(byte[],java.lang.String)",
                "org.apache.tika.utils.ServiceLoaderUtils$1:int compare(java.lang.Object,java.lang.Object)",
                "org.apache.tika.mime.OrClause:java.lang.String toString()",
                "org.apache.tika.io.TikaInputStream:java.lang.String toString()",
                "org.apache.tika.io.TaggedIOException:java.io.IOException getCause()",
                "org.apache.tika.sax.ContentHandlerDecorator:java.lang.String toString()",
                "org.apache.tika.io.ProxyInputStream:void close()",
                "org.apache.tika.parser.ParsingReader$ParsingTask:void run()",
                "org.apache.tika.config.Param:java.lang.String toString()",
                "org.apache.tika.mime.MediaType:java.lang.String toString()",
                "org.apache.tika.mime.Patterns$LengthComparator:int compare(java.lang.Object,java.lang.Object)",
                "org.apache.tika.config.ParamField:java.lang.String toString()",
                "org.apache.tika.io.TikaInputStream:void close()",
                "org.apache.tika.language.translate.DefaultTranslator$1:int compare(java.lang.Object,java.lang.Object)",
                "org.apache.tika.parser.ParsingReader:void close()",
                "org.apache.tika.detect.MagicDetector:java.lang.String toString()",
                "org.apache.tika.mime.MagicMatch:java.lang.String toString()",
                "org.apache.tika.mime.AndClause:java.lang.String toString()",
                "org.apache.tika.metadata.Metadata:java.lang.String toString()",
                "org.apache.tika.mime.MimeType:java.lang.String toString()",
                "org.apache.tika.mime.MimeType$RootXML:java.lang.String toString()",
                "org.apache.tika.io.TemporaryResources$1:void close()",
                "org.apache.tika.sax.SafeContentHandler$StringOutput:java.lang.String toString()",
                "org.apache.tika.io.CloseShieldInputStream:void close()",
                "org.apache.tika.sax.ToTextContentHandler:java.lang.String toString()",
                "org.apache.tika.io.TaggedInputStream:java.lang.String toString()",
                "org.apache.tika.Tika:java.lang.String toString()",
                "org.apache.tika.sax.TaggedSAXException:org.xml.sax.SAXException getCause()",
                "org.apache.tika.io.TemporaryResources:void close()",
                "org.apache.tika.io.TikaInputStream$1:void close()",
                "org.apache.tika.Tika:void <init>()"
            ],
            "CVE": [
                "CVE-2018-11761"
            ],
            "used vul-method": [
                "org.apache.tika.Tika:java.lang.String detect(byte[])",
                "org.apache.tika.Tika:java.lang.String detect(byte[],java.lang.String)",
                "org.apache.tika.parser.ParsingReader$ParsingTask:void run()"
            ],
            "vul-called frequency": 19,
            "related vul root method": {
                "CVE-2018-11761": [
                    "org.apache.tika.utils.XMLReaderUtils:void trySetXercesSecurityManager(javax.xml.parsers.SAXParser)"
                ]
            },
            "CVE-API": {
                "CVE-2018-11761": [
                    "org.apache.tika.Tika:java.lang.String detect(byte[])",
                    "org.apache.tika.Tika:java.lang.String detect(byte[],java.lang.String)",
                    "org.apache.tika.parser.ParsingReader$ParsingTask:void run()"
                ]
            }
        },
        "org.apache.tika:tika-parsers:1.19": {
            "used-method num": 0,
            "used method": []
        }
    }
}
{
    "project name": "HubSpot_NioSmtpClient",
    "vulnerable dependencies": {
        "io.netty:netty-common:4.1.8.Final": {
            "used-method num": 78,
            "used method": [
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8$KeySetView:java.util.Iterator iterator()",
                "io.netty.util.internal.chmv8.ForkJoinPool:void execute(java.lang.Runnable)",
                "io.netty.util.concurrent.GlobalEventExecutor:void execute(java.lang.Runnable)",
                "io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueue:boolean isEmpty()",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8$KeyIterator:java.lang.Object next()",
                "io.netty.util.HashedWheelTimer$HashedWheelTimeout:java.lang.String toString()",
                "io.netty.util.concurrent.GlobalEventExecutor$TaskRunner:void run()",
                "io.netty.util.internal.shaded.org.jctools.queues.BaseLinkedQueue:int size()",
                "io.netty.util.concurrent.SingleThreadEventExecutor:void execute(java.lang.Runnable)",
                "io.netty.util.HashedWheelTimer:void <init>(java.util.concurrent.ThreadFactory)",
                "io.netty.util.concurrent.AbstractEventExecutor:void <clinit>()",
                "io.netty.util.HashedWheelTimer$Worker:void run()",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8$MapEntry:java.lang.String toString()",
                "io.netty.util.HashedWheelTimer$HashedWheelTimeout:boolean cancel()",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8$ValuesView:java.util.Iterator iterator()",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8$EntrySetView:java.util.Iterator iterator()",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8$Node:java.lang.String toString()",
                "io.netty.util.internal.chmv8.ForkJoinPool:java.lang.String toString()",
                "io.netty.util.concurrent.DefaultPromise:io.netty.util.concurrent.Promise addListener(io.netty.util.concurrent.GenericFutureListener)",
                "io.netty.util.concurrent.ImmediateEventExecutor:void execute(java.lang.Runnable)",
                "io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseLinkedAtomicQueue:int size()",
                "io.netty.util.ReferenceCountUtil$ReleasingTask:void run()",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8$EntryIterator:java.util.Map$Entry next()",
                "io.netty.util.AbstractConstant:void <clinit>()",
                "io.netty.util.concurrent.AbstractEventExecutor:java.util.Iterator iterator()",
                "io.netty.util.concurrent.DefaultPromise:java.lang.String toString()",
                "io.netty.util.CharsetUtil:void <clinit>()",
                "io.netty.util.ResourceLeakDetector$DefaultResourceLeak:java.lang.String toString()",
                "io.netty.util.internal.shaded.org.jctools.queues.atomic.MpscAtomicArrayQueue:boolean isEmpty()",
                "io.netty.util.Signal:java.lang.String toString()",
                "io.netty.util.ByteProcessor:void <clinit>()",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8$KeySetView:boolean contains(java.lang.Object)",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8$BaseIterator:boolean hasNext()",
                "io.netty.util.concurrent.DefaultPromise$2:void run()",
                "io.netty.util.concurrent.PromiseTask$RunnableAdapter:java.lang.String toString()",
                "io.netty.util.internal.RecyclableArrayList:boolean add(java.lang.Object)",
                "io.netty.util.internal.chmv8.ForkJoinTask$AdaptedCallable:void run()",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8$CollectionView:int size()",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8$EntrySetView:boolean contains(java.lang.Object)",
                "io.netty.util.internal.shaded.org.jctools.queues.atomic.MpscAtomicArrayQueue:int size()",
                "io.netty.util.HashedWheelTimer:io.netty.util.Timeout newTimeout(io.netty.util.TimerTask,long,java.util.concurrent.TimeUnit)",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8$ValueIterator:java.lang.Object next()",
                "io.netty.util.internal.chmv8.LongAdderV8:java.lang.String toString()",
                "io.netty.util.concurrent.ScheduledFutureTask:void run()",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8:java.lang.Object get(java.lang.Object)",
                "io.netty.util.concurrent.DefaultPromise$3:void run()",
                "io.netty.util.internal.shaded.org.jctools.queues.ConcurrentCircularArrayQueue:java.util.Iterator iterator()",
                "io.netty.util.internal.chmv8.ForkJoinTask$AdaptedRunnable:void run()",
                "io.netty.util.internal.RecyclableArrayList:boolean addAll(java.util.Collection)",
                "io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueue:int size()",
                "io.netty.util.concurrent.CompleteFuture:io.netty.util.concurrent.Future addListener(io.netty.util.concurrent.GenericFutureListener)",
                "io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseLinkedAtomicQueue:java.util.Iterator iterator()",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8:java.lang.String toString()",
                "io.netty.util.internal.shaded.org.jctools.queues.MpscChunkedArrayQueue:java.util.Iterator iterator()",
                "io.netty.util.ReferenceCountUtil$ReleasingTask:java.lang.String toString()",
                "io.netty.util.internal.chmv8.ForkJoinWorkerThread:void run()",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8$CollectionView:java.lang.String toString()",
                "io.netty.util.concurrent.DefaultPromise$4:void run()",
                "io.netty.util.HashedWheelTimer:void <clinit>()",
                "io.netty.util.AsciiString:java.lang.String toString()",
                "io.netty.util.concurrent.GlobalEventExecutor:void <clinit>()",
                "io.netty.util.concurrent.DefaultPromise$1:void run()",
                "io.netty.util.internal.ThreadLocalRandom$3:void run()",
                "io.netty.util.ThreadDeathWatcher$Watcher:void run()",
                "io.netty.util.internal.logging.AbstractInternalLogger:java.lang.String toString()",
                "io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseLinkedAtomicQueue:boolean isEmpty()",
                "io.netty.util.concurrent.AbstractScheduledEventExecutor:void <clinit>()",
                "io.netty.util.internal.shaded.org.jctools.queues.BaseLinkedQueue:java.util.Iterator iterator()",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8$CollectionView:boolean isEmpty()",
                "io.netty.util.internal.shaded.org.jctools.queues.MpscChunkedArrayQueue:int size()",
                "io.netty.util.AbstractConstant:java.lang.String toString()",
                "io.netty.util.internal.chmv8.ForkJoinTask$AdaptedRunnableAction:void run()",
                "io.netty.util.concurrent.DefaultPromise:java.lang.Throwable cause()",
                "io.netty.util.concurrent.ImmediateExecutor:void execute(java.lang.Runnable)",
                "io.netty.util.internal.shaded.org.jctools.queues.atomic.MpscAtomicArrayQueue:java.util.Iterator iterator()",
                "io.netty.util.internal.shaded.org.jctools.queues.BaseLinkedQueue:boolean isEmpty()",
                "io.netty.util.concurrent.DefaultProgressivePromise:io.netty.util.concurrent.ProgressivePromise addListener(io.netty.util.concurrent.GenericFutureListener)",
                "io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator:void run()"
            ]
        },
        "io.netty:netty-codec:4.1.8.Final": {
            "used-method num": 8,
            "used method": [
                "io.netty.handler.codec.LineBasedFrameDecoder:void <init>(int)",
                "io.netty.handler.codec.CodecOutputList:void clear()",
                "io.netty.handler.codec.DecoderException:void <init>(java.lang.String)",
                "io.netty.handler.codec.ByteToMessageDecoder:void <clinit>()",
                "io.netty.handler.codec.LineBasedFrameDecoder:java.lang.Object decode(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf)",
                "io.netty.handler.codec.CodecOutputList:java.lang.Object get(int)",
                "io.netty.handler.codec.CodecOutputList:boolean add(java.lang.Object)",
                "io.netty.handler.codec.MessageToMessageEncoder:void <init>()"
            ]
        },
        "io.netty:netty-handler:4.1.8.Final": {
            "used-method num": 21,
            "used method": [
                "io.netty.handler.ssl.SslHandler$2:void run()",
                "io.netty.handler.ssl.SslHandler:void <clinit>()",
                "io.netty.handler.ssl.SslHandler:void <init>(javax.net.ssl.SSLEngine)",
                "io.netty.handler.ssl.OpenSslX509Certificate:java.lang.String toString()",
                "io.netty.handler.ssl.OpenSslJavaxX509Certificate:java.lang.String toString()",
                "io.netty.handler.stream.ChunkedStream:io.netty.buffer.ByteBuf readChunk(io.netty.buffer.ByteBufAllocator)",
                "io.netty.handler.ssl.SslHandler$8$1:void run()",
                "io.netty.handler.ssl.SslHandler$3:void run()",
                "io.netty.handler.ssl.JdkSslEngine:io.netty.handler.ssl.JdkSslSession getSession()",
                "io.netty.handler.timeout.IdleStateHandler:void <init>(int,int,int)",
                "io.netty.handler.stream.ChunkedWriteHandler:void <init>()",
                "io.netty.handler.ssl.SslHandler$5:void run()",
                "io.netty.handler.stream.ChunkedWriteHandler$1:void run()",
                "io.netty.handler.ssl.SslContextBuilder:io.netty.handler.ssl.SslContextBuilder forClient()",
                "io.netty.handler.stream.ChunkedStream:boolean isEndOfInput()",
                "io.netty.handler.ssl.SslHandler$7:void run()",
                "io.netty.handler.ssl.SslContextBuilder:io.netty.handler.ssl.SslContext build()",
                "io.netty.handler.ssl.SslHandler$1:void run()",
                "io.netty.handler.ssl.SslHandler:javax.net.ssl.SSLEngine engine()",
                "io.netty.handler.ssl.SslCompletionEvent:java.lang.String toString()",
                "io.netty.handler.stream.ChunkedStream:void <init>(java.io.InputStream,int)"
            ]
        },
        "junit:junit:4.12": {
            "used-method num": 0,
            "used method": []
        },
        "io.netty:netty:3.3.1.Final": {
            "used-method num": 0,
            "used method": []
        }
    }
}
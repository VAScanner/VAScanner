{
    "project name": "ksfzhaohui_shadowsocks-netty",
    "vulnerable dependencies": {
        "io.netty:netty-all:4.0.41.Final": {
            "used-method num": 105,
            "used method": [
                "io.netty.util.ReferenceCountUtil:boolean release(java.lang.Object)",
                "io.netty.util.concurrent.AbstractEventExecutor:io.netty.util.concurrent.Promise newPromise()",
                "io.netty.handler.codec.socks.SocksCmdRequest:void encodeAsByteBuf(io.netty.buffer.ByteBuf)",
                "io.netty.util.internal.RecyclableArrayList:boolean addAll(java.util.Collection)",
                "io.netty.handler.codec.socks.SocksAddressType:void <clinit>()",
                "io.netty.handler.traffic.GlobalChannelTrafficShapingHandler$1$1:boolean hasNext()",
                "io.netty.handler.codec.socks.SocksAuthResponse:void <init>(io.netty.handler.codec.socks.SocksAuthStatus)",
                "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture close()",
                "io.netty.buffer.PooledHeapByteBuf:boolean hasArray()",
                "io.netty.buffer.Unpooled:void <clinit>()",
                "io.netty.handler.codec.socks.SocksInitRequestDecoder:void <init>()",
                "io.netty.buffer.EmptyByteBuf:int readableBytes()",
                "io.netty.buffer.ReadOnlyByteBufferBuf:boolean hasArray()",
                "io.netty.handler.codec.socks.SocksCmdType:void <clinit>()",
                "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelHandlerContext fireChannelRead(java.lang.Object)",
                "io.netty.util.internal.RecyclableArrayList:boolean add(java.lang.Object)",
                "io.netty.handler.codec.socks.SocksRequestType:void <clinit>()",
                "io.netty.buffer.EmptyByteBuf:io.netty.buffer.ByteBuf getBytes(int,byte[])",
                "io.netty.handler.codec.CodecOutputList:boolean add(java.lang.Object)",
                "io.netty.handler.codec.CodecOutputList:void clear()",
                "io.netty.buffer.UnpooledHeapByteBuf:boolean hasArray()",
                "io.netty.buffer.WrappedByteBuf:boolean hasArray()",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8$ValueIterator:java.lang.Object next()",
                "io.netty.buffer.Unpooled:io.netty.buffer.ByteBuf wrappedBuffer(byte[])",
                "io.netty.handler.codec.ReplayingDecoderByteBuf:boolean hasArray()",
                "io.netty.bootstrap.Bootstrap:void <clinit>()",
                "io.netty.buffer.Unpooled:io.netty.buffer.ByteBuf buffer()",
                "io.netty.buffer.PooledUnsafeDirectByteBuf:boolean hasArray()",
                "io.netty.bootstrap.Bootstrap:io.netty.channel.ChannelFuture connect(java.lang.String,int)",
                "io.netty.handler.codec.socks.SocksRequestType:io.netty.handler.codec.socks.SocksRequestType[] values()",
                "io.netty.channel.ChannelOption:void <clinit>()",
                "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture write(java.lang.Object)",
                "io.netty.util.UniqueName:void <clinit>()",
                "io.netty.buffer.AbstractByteBuf:io.netty.buffer.ByteBuf getBytes(int,byte[])",
                "io.netty.bootstrap.AbstractBootstrap:io.netty.channel.ChannelFuture bind(int)",
                "io.netty.bootstrap.AbstractBootstrap:io.netty.bootstrap.AbstractBootstrap option(io.netty.channel.ChannelOption,java.lang.Object)",
                "io.netty.buffer.WrappedByteBuf:int readableBytes()",
                "io.netty.bootstrap.Bootstrap:void <init>()",
                "io.netty.buffer.ReadOnlyByteBuf:boolean hasArray()",
                "io.netty.bootstrap.ServerBootstrap:io.netty.bootstrap.ServerBootstrap group(io.netty.channel.EventLoopGroup,io.netty.channel.EventLoopGroup)",
                "io.netty.bootstrap.ServerBootstrap:void <init>()",
                "io.netty.buffer.AdvancedLeakAwareByteBuf:io.netty.buffer.ByteBuf getBytes(int,byte[])",
                "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelHandlerContext flush()",
                "io.netty.handler.codec.socks.SocksAuthStatus:void <clinit>()",
                "io.netty.handler.codec.ByteToMessageDecoder:void <clinit>()",
                "io.netty.buffer.SwappedByteBuf:boolean hasArray()",
                "io.netty.util.ReferenceCountUtil:void <clinit>()",
                "io.netty.buffer.SwappedByteBuf:int readableBytes()",
                "io.netty.buffer.CompositeByteBuf:io.netty.buffer.CompositeByteBuf getBytes(int,byte[])",
                "io.netty.util.concurrent.PromiseTask:io.netty.util.concurrent.Promise setFailure(java.lang.Throwable)",
                "io.netty.handler.traffic.GlobalChannelTrafficShapingHandler$1$1:io.netty.handler.traffic.TrafficCounter next()",
                "io.netty.handler.codec.socks.SocksAuthScheme:void <clinit>()",
                "io.netty.channel.ChannelInitializer:void <clinit>()",
                "io.netty.bootstrap.AbstractBootstrap:io.netty.bootstrap.AbstractBootstrap channel(java.lang.Class)",
                "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelPipeline pipeline()",
                "io.netty.handler.codec.socks.SocksCmdStatus:void <clinit>()",
                "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.Channel channel()",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8:java.lang.Object get(java.lang.Object)",
                "io.netty.buffer.SwappedByteBuf:io.netty.buffer.ByteBuf getBytes(int,byte[])",
                "io.netty.util.concurrent.AbstractScheduledEventExecutor:io.netty.util.concurrent.ScheduledFuture scheduleWithFixedDelay(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8:void putAll(java.util.Map)",
                "io.netty.handler.traffic.AbstractTrafficShapingHandler:void <clinit>()",
                "io.netty.bootstrap.AbstractBootstrap:io.netty.bootstrap.AbstractBootstrap group(io.netty.channel.EventLoopGroup)",
                "io.netty.util.concurrent.DefaultPromise:io.netty.util.concurrent.Promise addListener(io.netty.util.concurrent.GenericFutureListener)",
                "io.netty.util.concurrent.PromiseTask:io.netty.util.concurrent.Promise setSuccess(java.lang.Object)",
                "io.netty.handler.codec.ReplayingDecoderByteBuf:io.netty.buffer.ByteBuf getBytes(int,byte[])",
                "io.netty.util.concurrent.DefaultPromise:java.lang.Object getNow()",
                "io.netty.util.concurrent.AbstractEventExecutorGroup:io.netty.util.concurrent.ScheduledFuture scheduleWithFixedDelay(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)",
                "io.netty.handler.codec.socks.SocksCmdResponse:void <init>(io.netty.handler.codec.socks.SocksCmdStatus,io.netty.handler.codec.socks.SocksAddressType)",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8$KeyIterator:java.lang.Object next()",
                "io.netty.channel.AbstractChannelHandlerContext:io.netty.util.concurrent.EventExecutor executor()",
                "io.netty.util.concurrent.AbstractEventExecutor:io.netty.util.concurrent.Future shutdownGracefully()",
                "io.netty.handler.codec.socks.SocksMessageEncoder:void <init>()",
                "io.netty.buffer.WrappedByteBuf:io.netty.buffer.ByteBuf getBytes(int,byte[])",
                "io.netty.buffer.PooledDirectByteBuf:boolean hasArray()",
                "io.netty.handler.codec.CodecOutputList:java.lang.Object get(int)",
                "io.netty.channel.ChannelInboundHandlerAdapter:void <init>()",
                "io.netty.channel.nio.NioEventLoopGroup:void <init>()",
                "io.netty.buffer.AbstractByteBuf:int readableBytes()",
                "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object)",
                "io.netty.buffer.FixedCompositeByteBuf:boolean hasArray()",
                "io.netty.util.concurrent.DefaultPromise:boolean isSuccess()",
                "io.netty.handler.codec.socks.SocksInitResponse:void <init>(io.netty.handler.codec.socks.SocksAuthScheme)",
                "io.netty.handler.codec.socks.SocksCmdRequest:java.lang.String host()",
                "io.netty.channel.MultithreadEventLoopGroup:void <clinit>()",
                "io.netty.buffer.CompositeByteBuf$CompositeByteBufIterator:io.netty.buffer.ByteBuf next()",
                "io.netty.channel.ChannelInitializer:void <init>()",
                "io.netty.buffer.UnpooledUnsafeDirectByteBuf:boolean hasArray()",
                "io.netty.channel.nio.NioEventLoopGroup:void <init>(int)",
                "io.netty.handler.codec.CodecOutputList:int size()",
                "io.netty.bootstrap.ServerBootstrap:io.netty.bootstrap.ServerBootstrap childHandler(io.netty.channel.ChannelHandler)",
                "io.netty.channel.SimpleChannelInboundHandler:void <init>()",
                "io.netty.channel.ChannelFutureListener:void <clinit>()",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8$BaseIterator:boolean hasNext()",
                "io.netty.buffer.CompositeByteBuf:boolean hasArray()",
                "io.netty.handler.traffic.GlobalTrafficShapingHandler:void <init>(java.util.concurrent.ScheduledExecutorService,long)",
                "io.netty.handler.codec.ReplayingDecoderByteBuf:int readableBytes()",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8$EntryIterator:java.util.Map$Entry next()",
                "io.netty.buffer.EmptyByteBuf:boolean hasArray()",
                "io.netty.bootstrap.ServerBootstrap:void <clinit>()",
                "io.netty.bootstrap.AbstractBootstrap:io.netty.bootstrap.AbstractBootstrap handler(io.netty.channel.ChannelHandler)",
                "io.netty.buffer.CompositeByteBuf$CompositeByteBufIterator:boolean hasNext()",
                "io.netty.handler.codec.socks.SocksCmdRequestDecoder:void <init>()",
                "io.netty.buffer.UnpooledDirectByteBuf:boolean hasArray()",
                "io.netty.handler.codec.ReplayingDecoder:void <clinit>()"
            ],
            "CVE": [
                "CVE-2019-16869"
            ],
            "used vul-method": [
                "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture close()",
                "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelHandlerContext fireChannelRead(java.lang.Object)",
                "io.netty.bootstrap.Bootstrap:io.netty.channel.ChannelFuture connect(java.lang.String,int)",
                "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture write(java.lang.Object)",
                "io.netty.bootstrap.AbstractBootstrap:io.netty.channel.ChannelFuture bind(int)",
                "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelHandlerContext flush()",
                "io.netty.util.concurrent.DefaultPromise:io.netty.util.concurrent.Promise addListener(io.netty.util.concurrent.GenericFutureListener)",
                "io.netty.channel.nio.NioEventLoopGroup:void <init>()",
                "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object)",
                "io.netty.channel.nio.NioEventLoopGroup:void <init>(int)"
            ],
            "vul-called frequency": 15,
            "related vul root method": {
                "CVE-2019-16869": [
                    "io.netty.handler.codec.http.HttpObjectDecoder:void splitHeader(io.netty.util.internal.AppendableCharSequence)"
                ]
            },
            "CVE-API": {
                "CVE-2019-16869": [
                    "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture close()",
                    "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelHandlerContext fireChannelRead(java.lang.Object)",
                    "io.netty.bootstrap.Bootstrap:io.netty.channel.ChannelFuture connect(java.lang.String,int)",
                    "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture write(java.lang.Object)",
                    "io.netty.bootstrap.AbstractBootstrap:io.netty.channel.ChannelFuture bind(int)",
                    "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelHandlerContext flush()",
                    "io.netty.util.concurrent.DefaultPromise:io.netty.util.concurrent.Promise addListener(io.netty.util.concurrent.GenericFutureListener)",
                    "io.netty.channel.nio.NioEventLoopGroup:void <init>()",
                    "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object)",
                    "io.netty.channel.nio.NioEventLoopGroup:void <init>(int)"
                ]
            }
        },
        "org.apache.logging.log4j:log4j-core:2.6.2": {
            "used-method num": 0,
            "used method": []
        }
    }
}
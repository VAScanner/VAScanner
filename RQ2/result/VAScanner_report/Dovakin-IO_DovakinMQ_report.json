{
    "project name": "Dovakin-IO_DovakinMQ",
    "vulnerable dependencies": {
        "io.netty:netty-all:4.1.13.Final": {
            "used-method num": 534,
            "used method": [
                "io.netty.handler.codec.mqtt.MqttConnectVariableHeader:boolean isCleanSession()",
                "io.netty.handler.codec.mqtt.MqttMessageBuilders:io.netty.handler.codec.mqtt.MqttMessageBuilders$PublishBuilder publish()",
                "io.netty.handler.codec.mqtt.MqttPublishMessage:io.netty.handler.codec.mqtt.MqttPublishMessage retain()",
                "io.netty.buffer.UnreleasableByteBuf:boolean release(int)",
                "io.netty.channel.nio.SelectedSelectionKeySet:boolean add(java.lang.Object)",
                "io.netty.handler.codec.mqtt.MqttEncoder:void encode(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.mqtt.MqttMessage,java.util.List)",
                "io.netty.handler.codec.DecoderException:void <init>(java.lang.Throwable)",
                "io.netty.util.DefaultAttributeMap$DefaultAttribute:java.lang.Object setIfAbsent(java.lang.Object)",
                "io.netty.buffer.EmptyByteBuf:io.netty.buffer.ByteBuf readRetainedSlice(int)",
                "io.netty.handler.codec.mqtt.MqttEncoder:io.netty.buffer.ByteBuf encodeConnectMessage(io.netty.buffer.ByteBufAllocator,io.netty.handler.codec.mqtt.MqttConnectMessage)",
                "io.netty.util.internal.StringUtil:java.lang.String simpleClassName(java.lang.Object)",
                "io.netty.util.concurrent.AbstractEventExecutor:java.util.Iterator iterator()",
                "io.netty.channel.ChannelOutboundBuffer$2:void run()",
                "io.netty.handler.codec.mqtt.MqttUnsubAckMessage:java.lang.Object variableHeader()",
                "io.netty.buffer.AbstractByteBuf:short readUnsignedByte()",
                "io.netty.handler.codec.mqtt.MqttConnectReturnCode:byte byteValue()",
                "io.netty.handler.codec.mqtt.MqttDecoder:void <init>()",
                "io.netty.buffer.EmptyByteBuf:java.lang.String toString(int,int,java.nio.charset.Charset)",
                "io.netty.buffer.Unpooled:void <clinit>()",
                "io.netty.handler.codec.mqtt.MqttDecoder:io.netty.handler.codec.mqtt.MqttDecoder$Result decodeConnectionPayload(io.netty.buffer.ByteBuf,io.netty.handler.codec.mqtt.MqttConnectVariableHeader)",
                "io.netty.handler.codec.mqtt.MqttIdentifierRejectedException:void <init>(java.lang.Throwable)",
                "io.netty.handler.codec.mqtt.MqttCodecUtil:boolean isValidMessageId(int)",
                "io.netty.buffer.AbstractDerivedByteBuf:int refCnt()",
                "io.netty.buffer.AdvancedLeakAwareByteBuf:io.netty.buffer.ByteBuf duplicate()",
                "io.netty.buffer.EmptyByteBuf:int readableBytes()",
                "io.netty.handler.codec.ReplayingDecoder:void checkpoint(java.lang.Object)",
                "io.netty.util.concurrent.DefaultPromise:java.lang.String toString()",
                "io.netty.handler.codec.ReplayingDecoderByteBuf:java.lang.String toString()",
                "io.netty.handler.codec.ReplayingDecoderByteBuf:io.netty.buffer.ByteBuf retainedDuplicate()",
                "io.netty.handler.codec.mqtt.MqttFixedHeader:boolean isRetain()",
                "io.netty.buffer.CompositeByteBuf:io.netty.buffer.CompositeByteBuf writeShort(int)",
                "io.netty.channel.DefaultChannelPipeline$6:void run()",
                "io.netty.handler.codec.mqtt.MqttConnectMessage:void <init>(io.netty.handler.codec.mqtt.MqttFixedHeader,io.netty.handler.codec.mqtt.MqttConnectVariableHeader,io.netty.handler.codec.mqtt.MqttConnectPayload)",
                "io.netty.handler.codec.mqtt.MqttPublishMessage:io.netty.util.ReferenceCounted retain(int)",
                "io.netty.buffer.WrappedByteBuf:io.netty.buffer.ByteBuf writeBytes(byte[],int,int)",
                "io.netty.channel.DefaultChannelProgressivePromise:io.netty.channel.Channel channel()",
                "io.netty.util.CharsetUtil:void <clinit>()",
                "io.netty.buffer.EmptyByteBuf:io.netty.buffer.ByteBuf writeBytes(byte[])",
                "io.netty.handler.codec.mqtt.MqttEncoder:int getConnVariableHeaderFlag(io.netty.handler.codec.mqtt.MqttConnectVariableHeader)",
                "io.netty.buffer.SwappedByteBuf:io.netty.buffer.ByteBuf writeByte(int)",
                "io.netty.buffer.AbstractByteBuf:io.netty.buffer.ByteBuf writeShort(int)",
                "io.netty.channel.nio.SelectedSelectionKeySet:java.util.Iterator iterator()",
                "io.netty.buffer.EmptyByteBuf:io.netty.buffer.ByteBuf touch(java.lang.Object)",
                "io.netty.handler.codec.mqtt.MqttConnectPayload:java.lang.String userName()",
                "io.netty.handler.codec.mqtt.MqttCodecUtil:io.netty.handler.codec.mqtt.MqttFixedHeader validateFixedHeader(io.netty.handler.codec.mqtt.MqttFixedHeader)",
                "io.netty.buffer.AdvancedLeakAwareByteBuf:io.netty.buffer.ByteBuf retainedDuplicate()",
                "io.netty.handler.codec.mqtt.MqttUnsubAckMessage:io.netty.handler.codec.mqtt.MqttMessageIdVariableHeader variableHeader()",
                "io.netty.buffer.WrappedByteBuf:int readerIndex()",
                "io.netty.handler.codec.mqtt.MqttSubscribeMessage:java.lang.Object variableHeader()",
                "io.netty.handler.codec.mqtt.MqttIdentifierRejectedException:void <init>()",
                "io.netty.handler.codec.mqtt.MqttUnacceptableProtocolVersionException:void <init>(java.lang.String)",
                "io.netty.buffer.AbstractReferenceCountedByteBuf:io.netty.buffer.ByteBuf touch()",
                "io.netty.handler.codec.mqtt.MqttVersion:byte[] protocolNameBytes()",
                "io.netty.buffer.PooledDuplicatedByteBuf:io.netty.buffer.ByteBuf duplicate()",
                "io.netty.handler.codec.mqtt.MqttMessageIdVariableHeader:java.lang.String toString()",
                "io.netty.handler.codec.mqtt.MqttSubscribePayload:java.lang.String toString()",
                "io.netty.buffer.AbstractDerivedByteBuf:boolean release()",
                "io.netty.buffer.CompositeByteBuf:java.lang.String toString()",
                "io.netty.buffer.AdvancedLeakAwareByteBuf:io.netty.buffer.ByteBuf copy()",
                "io.netty.handler.codec.mqtt.MqttCodecUtil$1:void <clinit>()",
                "io.netty.handler.codec.mqtt.MqttMessageBuilders$ConnectBuilder:void <init>()",
                "io.netty.handler.codec.mqtt.MqttUnacceptableProtocolVersionException:void <init>()",
                "io.netty.channel.ChannelOption:void <clinit>()",
                "io.netty.handler.codec.mqtt.MqttPublishMessage:io.netty.util.ReferenceCounted touch(java.lang.Object)",
                "io.netty.handler.codec.mqtt.MqttPublishMessage:io.netty.handler.codec.mqtt.MqttPublishMessage retain(int)",
                "io.netty.handler.codec.DecoderException:void <init>(java.lang.String)",
                "io.netty.handler.codec.mqtt.MqttMessageBuilders$PublishBuilder:io.netty.handler.codec.mqtt.MqttPublishMessage build()",
                "io.netty.handler.codec.mqtt.MqttDecoder:io.netty.handler.codec.mqtt.MqttDecoder$Result decodeConnAckVariableHeader(io.netty.buffer.ByteBuf)",
                "io.netty.buffer.AdvancedLeakAwareByteBuf:io.netty.buffer.ByteBuf touch(java.lang.Object)",
                "io.netty.util.concurrent.GlobalEventExecutor:void execute(java.lang.Runnable)",
                "io.netty.handler.codec.mqtt.MqttMessage:void <init>(io.netty.handler.codec.mqtt.MqttFixedHeader,java.lang.Object,java.lang.Object)",
                "io.netty.buffer.AbstractByteBuf:io.netty.buffer.ByteBuf readBytes(byte[])",
                "io.netty.buffer.SwappedByteBuf:io.netty.buffer.ByteBuf retain(int)",
                "io.netty.handler.codec.mqtt.MqttUnsubscribePayload:void <init>(java.util.List)",
                "io.netty.handler.codec.mqtt.MqttPublishMessage:io.netty.buffer.ByteBufHolder touch()",
                "io.netty.util.internal.StringUtil:void <clinit>()",
                "io.netty.buffer.AbstractByteBuf:io.netty.buffer.ByteBuf writeBytes(byte[],int,int)",
                "io.netty.handler.codec.mqtt.MqttConnectMessage:java.lang.Object variableHeader()",
                "io.netty.handler.codec.mqtt.MqttSubAckMessage:io.netty.handler.codec.mqtt.MqttMessageIdVariableHeader variableHeader()",
                "io.netty.buffer.PoolThreadCache$1:void run()",
                "io.netty.handler.codec.mqtt.MqttSubscribePayload:void <init>(java.util.List)",
                "io.netty.buffer.AbstractByteBufAllocator:java.lang.String toString()",
                "io.netty.handler.codec.mqtt.MqttEncoder:io.netty.buffer.ByteBuf encodeConnAckMessage(io.netty.buffer.ByteBufAllocator,io.netty.handler.codec.mqtt.MqttConnAckMessage)",
                "io.netty.util.AsciiString:java.lang.String toString()",
                "io.netty.handler.codec.mqtt.MqttMessageBuilders:io.netty.handler.codec.mqtt.MqttMessageBuilders$ConnectBuilder connect()",
                "io.netty.buffer.SimpleLeakAwareByteBuf:boolean release(int)",
                "io.netty.buffer.SwappedByteBuf:io.netty.buffer.ByteBuf writeBytes(io.netty.buffer.ByteBuf)",
                "io.netty.buffer.SwappedByteBuf:int refCnt()",
                "io.netty.handler.codec.mqtt.MqttMessageType:void <clinit>()",
                "io.netty.bootstrap.ServerBootstrapConfig:java.lang.String toString()",
                "io.netty.util.internal.shaded.org.jctools.queues.SpscLinkedQueue:java.lang.String toString()",
                "io.netty.handler.codec.mqtt.MqttConnectVariableHeader:boolean hasPassword()",
                "io.netty.util.ResourceLeakDetector$DefaultResourceLeak:java.lang.String toString()",
                "io.netty.handler.codec.ReplayingDecoder:java.lang.Object state()",
                "io.netty.handler.codec.ReplayingDecoderByteBuf:io.netty.buffer.ByteBuf writeBytes(io.netty.buffer.ByteBuf)",
                "io.netty.handler.codec.mqtt.MqttPublishMessage:int refCnt()",
                "io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueue:java.lang.String toString()",
                "io.netty.buffer.SwappedByteBuf:io.netty.buffer.ByteBuf touch(java.lang.Object)",
                "io.netty.bootstrap.ServerBootstrap:io.netty.bootstrap.ServerBootstrap clone()",
                "io.netty.util.concurrent.DefaultPromise$1:void run()",
                "io.netty.bootstrap.ServerBootstrap:io.netty.bootstrap.ServerBootstrap group(io.netty.channel.EventLoopGroup,io.netty.channel.EventLoopGroup)",
                "io.netty.handler.codec.mqtt.MqttMessageBuilders$ConnAckBuilder:void <init>()",
                "io.netty.buffer.AdvancedLeakAwareByteBuf:io.netty.buffer.ByteBuf readBytes(byte[])",
                "io.netty.handler.codec.mqtt.MqttPublishMessage:io.netty.buffer.ByteBufHolder retain()",
                "io.netty.bootstrap.ServerBootstrap:void <init>()",
                "io.netty.buffer.SwappedByteBuf:io.netty.buffer.ByteBuf retainedDuplicate()",
                "io.netty.buffer.WrappedByteBuf:io.netty.buffer.ByteBuf readBytes(byte[])",
                "io.netty.handler.codec.ReplayingDecoderByteBuf:io.netty.buffer.ByteBuf duplicate()",
                "io.netty.handler.codec.mqtt.MqttMessage:java.lang.Object payload()",
                "io.netty.handler.codec.mqtt.MqttSubAckMessage:java.lang.Object payload()",
                "io.netty.handler.codec.ByteToMessageDecoder:void <clinit>()",
                "io.netty.handler.codec.mqtt.MqttPublishMessage:io.netty.buffer.ByteBuf content()",
                "io.netty.util.concurrent.ScheduledFutureTask:void run()",
                "io.netty.buffer.AdvancedLeakAwareByteBuf:short readUnsignedByte()",
                "io.netty.handler.codec.mqtt.MqttConnectPayload:java.lang.String willMessage()",
                "io.netty.handler.codec.mqtt.MqttConnectReturnCode:void <init>(java.lang.String,int,byte)",
                "io.netty.handler.codec.mqtt.MqttConnAckVariableHeader:java.lang.String toString()",
                "io.netty.handler.codec.mqtt.MqttMessageType:void <init>(java.lang.String,int,int)",
                "io.netty.handler.codec.ReplayingDecoderByteBuf:io.netty.buffer.ByteBuf touch()",
                "io.netty.channel.FailedChannelFuture:io.netty.channel.ChannelFuture sync()",
                "io.netty.handler.codec.mqtt.MqttConnectReturnCode:io.netty.handler.codec.mqtt.MqttConnectReturnCode[] values()",
                "io.netty.handler.codec.mqtt.MqttConnectPayload:byte[] willMessageInBytes()",
                "io.netty.handler.codec.mqtt.MqttConnectMessage:java.lang.Object payload()",
                "io.netty.handler.codec.mqtt.MqttUnsubscribeMessage:java.lang.Object variableHeader()",
                "io.netty.handler.codec.mqtt.MqttMessage:java.lang.String toString()",
                "io.netty.handler.codec.mqtt.MqttSubAckPayload:void <init>(int[])",
                "io.netty.channel.DefaultChannelId:java.lang.String toString()",
                "io.netty.handler.codec.mqtt.MqttDecoder$DecoderState:void <clinit>()",
                "io.netty.buffer.UnpooledByteBufAllocator$UnpooledByteBufAllocatorMetric:java.lang.String toString()",
                "io.netty.buffer.PooledSlicedByteBuf:io.netty.buffer.ByteBuf retainedDuplicate()",
                "io.netty.channel.ChannelInitializer:void <clinit>()",
                "io.netty.handler.codec.mqtt.MqttPublishMessage:io.netty.buffer.ByteBufHolder replace(io.netty.buffer.ByteBuf)",
                "io.netty.bootstrap.AbstractBootstrap:io.netty.bootstrap.AbstractBootstrap channel(java.lang.Class)",
                "io.netty.util.concurrent.MultithreadEventExecutorGroup:java.util.Iterator iterator()",
                "io.netty.handler.codec.DecoderResult:java.lang.String toString()",
                "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.Channel channel()",
                "io.netty.handler.codec.ReplayingDecoderByteBuf:io.netty.buffer.ByteBuf touch(java.lang.Object)",
                "io.netty.buffer.SwappedByteBuf:io.netty.buffer.ByteBuf retain()",
                "io.netty.util.concurrent.DefaultPromise$3:void run()",
                "io.netty.handler.codec.mqtt.MqttDecoder$DecoderState:void <init>(java.lang.String,int)",
                "io.netty.handler.codec.mqtt.MqttCodecUtil:boolean isValidClientId(io.netty.handler.codec.mqtt.MqttVersion,java.lang.String)",
                "io.netty.handler.codec.mqtt.MqttPubAckMessage:void <init>(io.netty.handler.codec.mqtt.MqttFixedHeader,io.netty.handler.codec.mqtt.MqttMessageIdVariableHeader)",
                "io.netty.handler.codec.mqtt.MqttMessageType:io.netty.handler.codec.mqtt.MqttMessageType valueOf(java.lang.String)",
                "io.netty.buffer.SimpleLeakAwareByteBuf:io.netty.buffer.ByteBuf readRetainedSlice(int)",
                "io.netty.handler.codec.mqtt.MqttDecoder:io.netty.handler.codec.mqtt.MqttDecoder$Result decodeMsbLsb(io.netty.buffer.ByteBuf)",
                "io.netty.buffer.PooledByteBufAllocatorMetric:java.lang.String toString()",
                "io.netty.buffer.WrappedByteBuf:int refCnt()",
                "io.netty.handler.codec.mqtt.MqttEncoder:io.netty.buffer.ByteBuf encodeUnsubscribeMessage(io.netty.buffer.ByteBufAllocator,io.netty.handler.codec.mqtt.MqttUnsubscribeMessage)",
                "io.netty.buffer.WrappedByteBuf:io.netty.buffer.ByteBuf retain(int)",
                "io.netty.handler.codec.mqtt.MqttMessageBuilders:io.netty.handler.codec.mqtt.MqttMessageBuilders$ConnAckBuilder connAck()",
                "io.netty.util.Signal:java.lang.String toString()",
                "io.netty.handler.codec.mqtt.MqttTopicSubscription:java.lang.String toString()",
                "io.netty.buffer.UnreleasableByteBuf:io.netty.buffer.ByteBuf duplicate()",
                "io.netty.buffer.AbstractDerivedByteBuf:io.netty.buffer.ByteBuf retain(int)",
                "io.netty.handler.codec.mqtt.MqttVersion:void <clinit>()",
                "io.netty.handler.codec.mqtt.MqttMessageBuilders$ConnectBuilder:io.netty.handler.codec.mqtt.MqttMessageBuilders$ConnectBuilder password(java.lang.String)",
                "io.netty.buffer.WrappedByteBuf:io.netty.buffer.ByteBuf retain()",
                "io.netty.buffer.AbstractDerivedByteBuf:io.netty.buffer.ByteBuf retain()",
                "io.netty.handler.codec.mqtt.MqttPublishMessage:io.netty.handler.codec.mqtt.MqttPublishMessage touch(java.lang.Object)",
                "io.netty.handler.codec.mqtt.MqttCodecUtil:boolean isValidPublishTopicName(java.lang.String)",
                "io.netty.handler.codec.MessageToMessageEncoder:void <init>()",
                "io.netty.channel.DefaultChannelPromise:io.netty.channel.ChannelPromise sync()",
                "io.netty.buffer.AdvancedLeakAwareByteBuf:io.netty.buffer.ByteBuf readRetainedSlice(int)",
                "io.netty.channel.AbstractChannelHandlerContext$AbstractWriteTask:void run()",
                "io.netty.buffer.AbstractByteBuf:io.netty.buffer.ByteBuf writeByte(int)",
                "io.netty.util.internal.shaded.org.jctools.queues.atomic.MpscLinkedAtomicQueue:java.lang.String toString()",
                "io.netty.handler.codec.mqtt.MqttConnAckMessage:java.lang.Object variableHeader()",
                "io.netty.buffer.AbstractByteBuf:io.netty.buffer.ByteBuf retainedDuplicate()",
                "io.netty.handler.codec.mqtt.MqttMessageBuilders$UnsubscribeBuilder:io.netty.handler.codec.mqtt.MqttMessageBuilders$UnsubscribeBuilder addTopicFilter(java.lang.String)",
                "io.netty.handler.codec.ReplayingDecoderByteBuf:boolean release(int)",
                "io.netty.buffer.AbstractByteBuf:io.netty.buffer.ByteBuf copy()",
                "io.netty.buffer.EmptyByteBuf:boolean release(int)",
                "io.netty.handler.codec.ReplayingDecoderByteBuf:io.netty.buffer.ByteBuf retain(int)",
                "io.netty.handler.codec.mqtt.MqttEncoder:io.netty.buffer.ByteBuf doEncode(io.netty.buffer.ByteBufAllocator,io.netty.handler.codec.mqtt.MqttMessage)",
                "io.netty.handler.codec.DecoderException:void <init>()",
                "io.netty.buffer.EmptyByteBuf:io.netty.buffer.ByteBuf retainedDuplicate()",
                "io.netty.util.internal.shaded.org.jctools.queues.ConcurrentCircularArrayQueue:java.util.Iterator iterator()",
                "io.netty.handler.codec.mqtt.MqttConnectReturnCode:io.netty.handler.codec.mqtt.MqttConnectReturnCode valueOf(byte)",
                "io.netty.handler.codec.ReplayingDecoderByteBuf:io.netty.buffer.ByteBuf writeByte(int)",
                "io.netty.buffer.AdvancedLeakAwareByteBuf:io.netty.buffer.ByteBuf retain(int)",
                "io.netty.buffer.CompositeByteBuf:io.netty.buffer.CompositeByteBuf touch(java.lang.Object)",
                "io.netty.handler.codec.mqtt.MqttMessageBuilders$ConnectBuilder:io.netty.handler.codec.mqtt.MqttConnectMessage build()",
                "io.netty.handler.codec.mqtt.MqttMessageFactory$1:void <clinit>()",
                "io.netty.buffer.AbstractByteBuf:java.lang.String toString(int,int,java.nio.charset.Charset)",
                "io.netty.handler.codec.mqtt.MqttIdentifierRejectedException:void <init>(java.lang.String)",
                "io.netty.buffer.AdvancedLeakAwareByteBuf:io.netty.buffer.ByteBuf writeBytes(byte[])",
                "io.netty.util.ThreadDeathWatcher$Watcher:void run()",
                "io.netty.buffer.CompositeByteBuf:io.netty.buffer.CompositeByteBuf readBytes(byte[])",
                "io.netty.buffer.SimpleLeakAwareByteBuf:io.netty.buffer.ByteBuf touch(java.lang.Object)",
                "io.netty.buffer.WrappedByteBuf:io.netty.buffer.ByteBuf copy()",
                "io.netty.handler.codec.mqtt.MqttPublishMessage:io.netty.buffer.ByteBufHolder retain(int)",
                "io.netty.handler.codec.mqtt.MqttPublishMessage:io.netty.buffer.ByteBufHolder touch(java.lang.Object)",
                "io.netty.handler.codec.mqtt.MqttSubAckPayload:void <init>(java.lang.Iterable)",
                "io.netty.util.internal.logging.AbstractInternalLogger:java.lang.String toString()",
                "io.netty.channel.DefaultChannelPromise:io.netty.channel.Channel channel()",
                "io.netty.handler.codec.mqtt.MqttConnectPayload:byte[] passwordInBytes()",
                "io.netty.buffer.UnreleasableByteBuf:io.netty.buffer.ByteBuf touch(java.lang.Object)",
                "io.netty.channel.DefaultChannelPipeline$8:void run()",
                "io.netty.handler.codec.mqtt.MqttSubscribeMessage:io.netty.handler.codec.mqtt.MqttSubscribePayload payload()",
                "io.netty.handler.codec.mqtt.MqttConnectMessage:io.netty.handler.codec.mqtt.MqttConnectPayload payload()",
                "io.netty.handler.codec.mqtt.MqttIdentifierRejectedException:void <init>(java.lang.String,java.lang.Throwable)",
                "io.netty.buffer.CompositeByteBuf:io.netty.buffer.CompositeByteBuf writeByte(int)",
                "io.netty.handler.codec.mqtt.MqttEncoder:int getFixedHeaderByte1(io.netty.handler.codec.mqtt.MqttFixedHeader)",
                "io.netty.handler.codec.mqtt.MqttDecoder:io.netty.handler.codec.mqtt.MqttDecoder$Result decodeMessageId(io.netty.buffer.ByteBuf)",
                "io.netty.buffer.AdvancedLeakAwareByteBuf:io.netty.buffer.ByteBuf writeBytes(byte[],int,int)",
                "io.netty.buffer.SwappedByteBuf:io.netty.buffer.ByteBuf readRetainedSlice(int)",
                "io.netty.handler.codec.mqtt.MqttMessageBuilders$ConnectBuilder:io.netty.handler.codec.mqtt.MqttMessageBuilders$ConnectBuilder willMessage(java.lang.String)",
                "io.netty.channel.nio.NioEventLoopGroup:void <init>()",
                "io.netty.buffer.EmptyByteBuf:io.netty.buffer.ByteBuf writeShort(int)",
                "io.netty.buffer.AbstractByteBuf:int readableBytes()",
                "io.netty.buffer.AbstractReferenceCountedByteBuf:boolean release(int)",
                "io.netty.channel.DefaultChannelPipeline$4:void run()",
                "io.netty.handler.codec.mqtt.MqttQoS:void <clinit>()",
                "io.netty.handler.codec.mqtt.MqttPubAckMessage:io.netty.handler.codec.mqtt.MqttMessageIdVariableHeader variableHeader()",
                "io.netty.handler.codec.mqtt.MqttCodecUtil:io.netty.handler.codec.mqtt.MqttFixedHeader resetUnusedFields(io.netty.handler.codec.mqtt.MqttFixedHeader)",
                "io.netty.buffer.AbstractByteBuf:java.lang.String toString()",
                "io.netty.buffer.EmptyByteBuf:io.netty.buffer.ByteBuf writeBytes(byte[],int,int)",
                "io.netty.buffer.AbstractByteBufAllocator:io.netty.buffer.ByteBuf buffer(int)",
                "io.netty.handler.codec.mqtt.MqttDecoder:io.netty.handler.codec.mqtt.MqttMessage invalidMessage(java.lang.Throwable)",
                "io.netty.handler.codec.ReplayingDecoderByteBuf:io.netty.buffer.ByteBuf readBytes(byte[])",
                "io.netty.handler.codec.mqtt.MqttPublishMessage:boolean release(int)",
                "io.netty.handler.codec.mqtt.MqttPublishMessage:io.netty.util.ReferenceCounted retain()",
                "io.netty.bootstrap.AbstractBootstrap:io.netty.channel.ChannelFuture bind(java.net.SocketAddress)",
                "io.netty.buffer.AdvancedLeakAwareByteBuf:java.lang.String toString(int,int,java.nio.charset.Charset)",
                "io.netty.handler.codec.mqtt.MqttFixedHeader:void <init>(io.netty.handler.codec.mqtt.MqttMessageType,boolean,io.netty.handler.codec.mqtt.MqttQoS,boolean,int)",
                "io.netty.buffer.EmptyByteBuf:io.netty.buffer.ByteBuf writeByte(int)",
                "io.netty.handler.codec.mqtt.MqttUnacceptableProtocolVersionException:void <init>(java.lang.Throwable)",
                "io.netty.handler.codec.mqtt.MqttDecoder:io.netty.handler.codec.mqtt.MqttDecoder$Result decodeString(io.netty.buffer.ByteBuf)",
                "io.netty.handler.codec.mqtt.MqttUnacceptableProtocolVersionException:void <init>(java.lang.String,java.lang.Throwable)",
                "io.netty.handler.codec.mqtt.MqttPublishVariableHeader:java.lang.String toString()",
                "io.netty.handler.codec.mqtt.MqttConnectVariableHeader:int version()",
                "io.netty.util.internal.shaded.org.jctools.queues.ConcurrentCircularArrayQueue:java.lang.String toString()",
                "io.netty.buffer.CompositeByteBuf$CompositeByteBufIterator:io.netty.buffer.ByteBuf next()",
                "io.netty.handler.codec.mqtt.MqttConnectVariableHeader:int keepAliveTimeSeconds()",
                "io.netty.util.concurrent.GlobalEventExecutor$TaskRunner:void run()",
                "io.netty.buffer.EmptyByteBuf:io.netty.buffer.ByteBuf readBytes(byte[])",
                "io.netty.channel.ChannelInitializer:void <init>()",
                "io.netty.buffer.AbstractByteBuf:byte readByte()",
                "io.netty.handler.codec.mqtt.MqttPublishVariableHeader:int messageId()",
                "io.netty.buffer.WrappedByteBuf:io.netty.buffer.ByteBuf writeByte(int)",
                "io.netty.handler.codec.mqtt.MqttDecoder$DecoderState:io.netty.handler.codec.mqtt.MqttDecoder$DecoderState valueOf(java.lang.String)",
                "io.netty.util.internal.shaded.org.jctools.queues.BaseLinkedQueue:java.util.Iterator iterator()",
                "io.netty.handler.codec.ReplayingDecoderByteBuf:io.netty.buffer.ByteBuf readRetainedSlice(int)",
                "io.netty.handler.codec.mqtt.MqttSubAckMessage:io.netty.handler.codec.mqtt.MqttSubAckPayload payload()",
                "io.netty.channel.ChannelOutboundBuffer$3:void run()",
                "io.netty.handler.codec.ReplayingDecoderByteBuf:io.netty.buffer.ByteBuf writeShort(int)",
                "io.netty.buffer.SwappedByteBuf:io.netty.buffer.ByteBuf skipBytes(int)",
                "io.netty.buffer.EmptyByteBuf:short readUnsignedByte()",
                "io.netty.handler.codec.mqtt.MqttUnsubscribePayload:java.util.List topics()",
                "io.netty.buffer.AdvancedLeakAwareByteBuf:io.netty.buffer.ByteBuf writeShort(int)",
                "io.netty.handler.codec.mqtt.MqttFixedHeader:int remainingLength()",
                "io.netty.handler.codec.ReplayingDecoderByteBuf:int readableBytes()",
                "io.netty.handler.codec.mqtt.MqttMessageBuilders$ConnectBuilder:io.netty.handler.codec.mqtt.MqttMessageBuilders$ConnectBuilder password(byte[])",
                "io.netty.handler.codec.mqtt.MqttSubAckPayload:java.util.List grantedQoSLevels()",
                "io.netty.util.concurrent.SingleThreadEventExecutor:void execute(java.lang.Runnable)",
                "io.netty.buffer.AdvancedLeakAwareByteBuf:io.netty.buffer.ByteBuf retain()",
                "io.netty.util.concurrent.DefaultPromise$2:void run()",
                "io.netty.handler.codec.mqtt.MqttConnAckVariableHeader:io.netty.handler.codec.mqtt.MqttConnectReturnCode connectReturnCode()",
                "io.netty.bootstrap.ServerBootstrap:void <clinit>()",
                "io.netty.buffer.SwappedByteBuf:io.netty.buffer.ByteBuf writeShort(int)",
                "io.netty.handler.codec.mqtt.MqttQoS:int value()",
                "io.netty.handler.codec.mqtt.MqttPublishVariableHeader:java.lang.String topicName()",
                "io.netty.buffer.CompositeByteBuf:io.netty.buffer.CompositeByteBuf writeBytes(io.netty.buffer.ByteBuf)",
                "io.netty.buffer.SwappedByteBuf:boolean release()",
                "io.netty.util.concurrent.PromiseTask$RunnableAdapter:java.lang.String toString()",
                "io.netty.buffer.AbstractPooledDerivedByteBuf$PooledNonRetainedDuplicateByteBuf:io.netty.buffer.ByteBuf duplicate()",
                "io.netty.handler.codec.mqtt.MqttPubAckMessage:java.lang.Object variableHeader()",
                "io.netty.handler.codec.mqtt.MqttPublishMessage:void <init>(io.netty.handler.codec.mqtt.MqttFixedHeader,io.netty.handler.codec.mqtt.MqttPublishVariableHeader,io.netty.buffer.ByteBuf)",
                "io.netty.handler.codec.mqtt.MqttMessageBuilders$SubscribeBuilder:void <init>()",
                "io.netty.handler.codec.mqtt.MqttConnectPayload:void <init>(java.lang.String,java.lang.String,byte[],java.lang.String,byte[])",
                "io.netty.handler.codec.mqtt.MqttDecoder$Result:void <init>(java.lang.Object,int)",
                "io.netty.handler.codec.mqtt.MqttConnectVariableHeader:java.lang.String toString()",
                "io.netty.handler.codec.mqtt.MqttSubscribeMessage:java.lang.Object payload()",
                "io.netty.handler.codec.mqtt.MqttSubscribeMessage:void <init>(io.netty.handler.codec.mqtt.MqttFixedHeader,io.netty.handler.codec.mqtt.MqttMessageIdVariableHeader,io.netty.handler.codec.mqtt.MqttSubscribePayload)",
                "io.netty.buffer.AdvancedLeakAwareByteBuf:byte readByte()",
                "io.netty.buffer.EmptyByteBuf:int readerIndex()",
                "io.netty.handler.codec.mqtt.MqttVersion:io.netty.handler.codec.mqtt.MqttVersion fromProtocolNameAndLevel(java.lang.String,byte)",
                "io.netty.buffer.SwappedByteBuf:byte readByte()",
                "io.netty.handler.codec.mqtt.MqttConnAckMessage:void <init>(io.netty.handler.codec.mqtt.MqttFixedHeader,io.netty.handler.codec.mqtt.MqttConnAckVariableHeader)",
                "io.netty.handler.codec.mqtt.MqttSubAckMessage:java.lang.Object variableHeader()",
                "io.netty.handler.codec.mqtt.MqttConnectPayload:java.lang.String willTopic()",
                "io.netty.handler.codec.mqtt.MqttFixedHeader:io.netty.handler.codec.mqtt.MqttQoS qosLevel()",
                "io.netty.buffer.SwappedByteBuf:io.netty.buffer.ByteBuf copy()",
                "io.netty.buffer.CompositeByteBuf:io.netty.buffer.CompositeByteBuf skipBytes(int)",
                "io.netty.bootstrap.ServerBootstrap:io.netty.bootstrap.ServerBootstrap childOption(io.netty.channel.ChannelOption,java.lang.Object)",
                "io.netty.util.internal.shaded.org.jctools.queues.atomic.SpscLinkedAtomicQueue:java.lang.String toString()",
                "io.netty.handler.codec.mqtt.MqttEncoder:byte[] encodeStringUtf8(java.lang.String)",
                "io.netty.handler.codec.mqtt.MqttFixedHeader:java.lang.String toString()",
                "io.netty.buffer.AbstractReferenceCountedByteBuf:io.netty.buffer.ByteBuf retain(int)",
                "io.netty.buffer.FixedCompositeByteBuf:java.lang.String toString()",
                "io.netty.buffer.SwappedByteBuf:int readerIndex()",
                "io.netty.handler.codec.mqtt.MqttMessage:void <init>(io.netty.handler.codec.mqtt.MqttFixedHeader,java.lang.Object,java.lang.Object,io.netty.handler.codec.DecoderResult)",
                "io.netty.util.IllegalReferenceCountException:void <init>(int)",
                "io.netty.handler.codec.mqtt.MqttPublishMessage:io.netty.buffer.ByteBufHolder copy()",
                "io.netty.handler.codec.mqtt.MqttPublishMessage:boolean release()",
                "io.netty.handler.codec.mqtt.MqttMessage:io.netty.handler.codec.mqtt.MqttFixedHeader fixedHeader()",
                "io.netty.handler.codec.mqtt.MqttDecoder:io.netty.handler.codec.mqtt.MqttDecoder$Result decodeString(io.netty.buffer.ByteBuf,int,int)",
                "io.netty.handler.timeout.IdleStateHandler:void <init>(long,long,long,java.util.concurrent.TimeUnit)",
                "io.netty.handler.codec.mqtt.MqttVersion:io.netty.handler.codec.mqtt.MqttVersion[] values()",
                "io.netty.util.internal.RecyclableArrayList:boolean add(java.lang.Object)",
                "io.netty.handler.codec.mqtt.MqttUnsubscribeMessage:java.lang.Object payload()",
                "io.netty.buffer.EmptyByteBuf:io.netty.buffer.ByteBuf duplicate()",
                "io.netty.buffer.WrappedByteBuf:java.lang.String toString()",
                "io.netty.buffer.AdvancedLeakAwareByteBuf:io.netty.buffer.ByteBuf skipBytes(int)",
                "io.netty.buffer.AbstractByteBuf:io.netty.buffer.ByteBuf writeBytes(io.netty.buffer.ByteBuf)",
                "io.netty.handler.codec.CodecOutputList:boolean add(java.lang.Object)",
                "io.netty.handler.codec.mqtt.MqttFixedHeader:io.netty.handler.codec.mqtt.MqttMessageType messageType()",
                "io.netty.handler.codec.mqtt.MqttMessageBuilders:io.netty.handler.codec.mqtt.MqttMessageBuilders$UnsubscribeBuilder unsubscribe()",
                "io.netty.buffer.WrappedByteBuf:byte readByte()",
                "io.netty.buffer.CompositeByteBuf:java.util.Iterator iterator()",
                "io.netty.handler.codec.mqtt.MqttDecoder:io.netty.handler.codec.mqtt.MqttDecoder$Result decodePublishVariableHeader(io.netty.buffer.ByteBuf,io.netty.handler.codec.mqtt.MqttFixedHeader)",
                "io.netty.buffer.CompositeByteBuf:io.netty.buffer.CompositeByteBuf retain(int)",
                "io.netty.util.AbstractConstant:java.lang.String toString()",
                "io.netty.channel.CompleteChannelFuture:io.netty.channel.ChannelFuture sync()",
                "io.netty.buffer.UnreleasableByteBuf:io.netty.buffer.ByteBuf retain(int)",
                "io.netty.handler.codec.mqtt.MqttSubscribePayload:java.util.List topicSubscriptions()",
                "io.netty.buffer.Unpooled:io.netty.buffer.ByteBuf buffer()",
                "io.netty.handler.codec.mqtt.MqttConnAckVariableHeader:void <init>(io.netty.handler.codec.mqtt.MqttConnectReturnCode,boolean)",
                "io.netty.handler.codec.mqtt.MqttMessageBuilders$SubscribeBuilder:io.netty.handler.codec.mqtt.MqttSubscribeMessage build()",
                "io.netty.handler.codec.mqtt.MqttUnsubAckMessage:void <init>(io.netty.handler.codec.mqtt.MqttFixedHeader,io.netty.handler.codec.mqtt.MqttMessageIdVariableHeader)",
                "io.netty.buffer.AbstractPooledDerivedByteBuf$PooledNonRetainedSlicedByteBuf:io.netty.buffer.ByteBuf duplicate()",
                "io.netty.buffer.SwappedByteBuf:java.lang.String toString(int,int,java.nio.charset.Charset)",
                "io.netty.handler.codec.mqtt.MqttPublishMessage:io.netty.handler.codec.mqtt.MqttPublishMessage replace(io.netty.buffer.ByteBuf)",
                "io.netty.buffer.AdvancedLeakAwareByteBuf:io.netty.buffer.ByteBuf writeBytes(io.netty.buffer.ByteBuf)",
                "io.netty.buffer.AbstractByteBuf:int readerIndex()",
                "io.netty.buffer.SwappedByteBuf:io.netty.buffer.ByteBuf writeBytes(byte[],int,int)",
                "io.netty.util.AttributeKey:void <clinit>()",
                "io.netty.buffer.WrappedByteBuf:io.netty.buffer.ByteBuf writeBytes(byte[])",
                "io.netty.buffer.EmptyByteBuf:byte readByte()",
                "io.netty.channel.DefaultChannelPipeline$7:void run()",
                "io.netty.handler.codec.ReplayingDecoderByteBuf:int refCnt()",
                "io.netty.buffer.AbstractByteBuf:io.netty.buffer.ByteBuf writeBytes(byte[])",
                "io.netty.bootstrap.AbstractBootstrap:io.netty.bootstrap.AbstractBootstrap option(io.netty.channel.ChannelOption,java.lang.Object)",
                "io.netty.handler.codec.mqtt.MqttPublishMessage:io.netty.handler.codec.mqtt.MqttPublishMessage copy()",
                "io.netty.handler.codec.mqtt.MqttDecoder:io.netty.handler.codec.mqtt.MqttFixedHeader decodeFixedHeader(io.netty.buffer.ByteBuf)",
                "io.netty.handler.codec.ByteToMessageDecoder:int actualReadableBytes()",
                "io.netty.buffer.WrappedByteBuf:int readableBytes()",
                "io.netty.util.internal.shaded.org.jctools.queues.atomic.MpscAtomicArrayQueue:java.lang.String toString()",
                "io.netty.channel.AbstractChannelHandlerContext:io.netty.buffer.ByteBufAllocator alloc()",
                "io.netty.handler.codec.mqtt.MqttPublishMessage:io.netty.util.ReferenceCounted touch()",
                "io.netty.channel.nio.NioEventLoop$6:void run()",
                "io.netty.handler.codec.ReplayingDecoderByteBuf:io.netty.buffer.ByteBuf retain()",
                "io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseLinkedAtomicQueue:java.util.Iterator iterator()",
                "io.netty.handler.codec.DecoderResult:io.netty.handler.codec.DecoderResult failure(java.lang.Throwable)",
                "io.netty.handler.codec.mqtt.MqttDecoder:io.netty.handler.codec.mqtt.MqttDecoder$Result decodeVariableHeader(io.netty.buffer.ByteBuf,io.netty.handler.codec.mqtt.MqttFixedHeader)",
                "io.netty.buffer.EmptyByteBuf:io.netty.buffer.ByteBuf copy()",
                "io.netty.buffer.WrappedByteBuf:io.netty.buffer.ByteBuf writeBytes(io.netty.buffer.ByteBuf)",
                "io.netty.handler.codec.mqtt.MqttMessageBuilders:io.netty.handler.codec.mqtt.MqttMessageBuilders$SubscribeBuilder subscribe()",
                "io.netty.handler.codec.ReplayingDecoderByteBuf:io.netty.buffer.ByteBuf skipBytes(int)",
                "io.netty.handler.codec.mqtt.MqttPublishMessage:io.netty.buffer.ByteBufHolder duplicate()",
                "io.netty.handler.codec.mqtt.MqttPublishMessage:io.netty.handler.codec.mqtt.MqttPublishVariableHeader variableHeader()",
                "io.netty.handler.codec.mqtt.MqttQoS:void <init>(java.lang.String,int,int)",
                "io.netty.handler.codec.mqtt.MqttSubAckMessage:void <init>(io.netty.handler.codec.mqtt.MqttFixedHeader,io.netty.handler.codec.mqtt.MqttMessageIdVariableHeader,io.netty.handler.codec.mqtt.MqttSubAckPayload)",
                "io.netty.handler.codec.mqtt.MqttEncoder:io.netty.buffer.ByteBuf encodePublishMessage(io.netty.buffer.ByteBufAllocator,io.netty.handler.codec.mqtt.MqttPublishMessage)",
                "io.netty.buffer.PoolSubpage:java.lang.String toString()",
                "io.netty.buffer.AbstractUnsafeSwappedByteBuf:io.netty.buffer.ByteBuf writeShort(int)",
                "io.netty.channel.AbstractChannelHandlerContext:java.lang.String toString()",
                "io.netty.buffer.CompositeByteBuf:io.netty.buffer.CompositeByteBuf writeBytes(byte[],int,int)",
                "io.netty.handler.codec.mqtt.MqttPublishMessage:java.lang.Object variableHeader()",
                "io.netty.handler.codec.ReplayingDecoderByteBuf:io.netty.buffer.ByteBuf writeBytes(byte[],int,int)",
                "io.netty.util.internal.ThreadLocalRandom$1:void run()",
                "io.netty.buffer.EmptyByteBuf:int refCnt()",
                "io.netty.buffer.WrappedByteBuf:io.netty.buffer.ByteBuf writeShort(int)",
                "io.netty.handler.codec.mqtt.MqttPublishVariableHeader:void <init>(java.lang.String,int)",
                "io.netty.handler.codec.mqtt.MqttDecoder$1:void <clinit>()",
                "io.netty.handler.codec.mqtt.MqttMessageFactory:io.netty.handler.codec.mqtt.MqttMessage newInvalidMessage(java.lang.Throwable)",
                "io.netty.handler.codec.mqtt.MqttEncoder:void writeVariableLengthInt(io.netty.buffer.ByteBuf,int)",
                "io.netty.buffer.SwappedByteBuf:int readableBytes()",
                "io.netty.handler.codec.mqtt.MqttMessageBuilders$SubscribeBuilder:io.netty.handler.codec.mqtt.MqttMessageBuilders$SubscribeBuilder addSubscription(io.netty.handler.codec.mqtt.MqttQoS,java.lang.String)",
                "io.netty.buffer.UnreleasableByteBuf:io.netty.buffer.ByteBuf readRetainedSlice(int)",
                "io.netty.channel.WriteBufferWaterMark:java.lang.String toString()",
                "io.netty.handler.codec.mqtt.MqttMessage:void <init>(io.netty.handler.codec.mqtt.MqttFixedHeader)",
                "io.netty.handler.codec.ReplayingDecoderByteBuf:byte readByte()",
                "io.netty.channel.DefaultChannelPipeline$5:void run()",
                "io.netty.buffer.EmptyByteBuf:java.lang.String toString()",
                "io.netty.handler.codec.DecoderException:void <init>(java.lang.String,java.lang.Throwable)",
                "io.netty.handler.codec.mqtt.MqttMessageType:int value()",
                "io.netty.buffer.AdvancedLeakAwareByteBuf:io.netty.buffer.ByteBuf writeByte(int)",
                "io.netty.buffer.UnreleasableByteBuf:boolean release()",
                "io.netty.handler.codec.mqtt.MqttDecoder:io.netty.handler.codec.mqtt.MqttDecoder$Result decodeMsbLsb(io.netty.buffer.ByteBuf,int,int)",
                "io.netty.channel.DefaultChannelPipeline$3:void run()",
                "io.netty.handler.codec.mqtt.MqttEncoder:int getVariableLengthInt(int)",
                "io.netty.buffer.PooledDuplicatedByteBuf:io.netty.buffer.ByteBuf retainedDuplicate()",
                "io.netty.handler.codec.mqtt.MqttConnectReturnCode:void <clinit>()",
                "io.netty.handler.codec.mqtt.MqttPublishMessage:io.netty.buffer.ByteBuf payload()",
                "io.netty.handler.codec.mqtt.MqttEncoder:void <init>()",
                "io.netty.handler.codec.mqtt.MqttMessageIdVariableHeader:void <init>(int)",
                "io.netty.buffer.PooledByteBuf:io.netty.buffer.ByteBuf retainedDuplicate()",
                "io.netty.handler.codec.mqtt.MqttConnectVariableHeader:boolean isWillRetain()",
                "io.netty.buffer.UnreleasableByteBuf:io.netty.buffer.ByteBuf retainedDuplicate()",
                "io.netty.buffer.UnreleasableByteBuf:io.netty.buffer.ByteBuf touch()",
                "io.netty.handler.codec.mqtt.MqttMessageIdVariableHeader:int messageId()",
                "io.netty.util.ReferenceCountUtil$ReleasingTask:java.lang.String toString()",
                "io.netty.handler.codec.mqtt.MqttDecoder:io.netty.handler.codec.mqtt.MqttDecoder$Result decodeSubscribePayload(io.netty.buffer.ByteBuf,int)",
                "io.netty.handler.codec.mqtt.MqttDecoder:io.netty.handler.codec.mqtt.MqttDecoder$Result decodeByteArray(io.netty.buffer.ByteBuf)",
                "io.netty.buffer.AbstractPooledDerivedByteBuf$PooledNonRetainedDuplicateByteBuf:io.netty.buffer.ByteBuf retainedDuplicate()",
                "io.netty.buffer.CompositeByteBuf:io.netty.buffer.CompositeByteBuf touch()",
                "io.netty.buffer.AbstractReferenceCountedByteBuf:boolean release()",
                "io.netty.handler.codec.mqtt.MqttMessageBuilders$ConnectBuilder:io.netty.handler.codec.mqtt.MqttMessageBuilders$ConnectBuilder willMessage(byte[])",
                "io.netty.handler.codec.mqtt.MqttConnectPayload:void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
                "io.netty.buffer.AdvancedLeakAwareByteBuf:io.netty.buffer.ByteBuf touch()",
                "io.netty.handler.codec.mqtt.MqttDecoder:void <init>(int)",
                "io.netty.bootstrap.AbstractBootstrap:java.lang.String toString()",
                "io.netty.handler.codec.DecoderResult:void <clinit>()",
                "io.netty.handler.codec.mqtt.MqttVersion:java.lang.String protocolName()",
                "io.netty.handler.codec.mqtt.MqttVersion:void <init>(java.lang.String,int,java.lang.String,byte)",
                "io.netty.handler.codec.mqtt.MqttConnectVariableHeader:boolean hasUserName()",
                "io.netty.buffer.AbstractPooledDerivedByteBuf$PooledNonRetainedSlicedByteBuf:io.netty.buffer.ByteBuf retainedDuplicate()",
                "io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueue:java.util.Iterator iterator()",
                "io.netty.buffer.WrappedByteBuf:short readUnsignedByte()",
                "io.netty.handler.codec.mqtt.MqttQoS:io.netty.handler.codec.mqtt.MqttQoS[] values()",
                "io.netty.handler.codec.mqtt.MqttConnAckMessage:io.netty.handler.codec.mqtt.MqttConnAckVariableHeader variableHeader()",
                "io.netty.buffer.UnreleasableByteBuf:io.netty.buffer.ByteBuf retain()",
                "io.netty.handler.codec.mqtt.MqttEncoder:io.netty.buffer.ByteBuf encodeSubAckMessage(io.netty.buffer.ByteBufAllocator,io.netty.handler.codec.mqtt.MqttSubAckMessage)",
                "io.netty.buffer.EmptyByteBuf:io.netty.buffer.ByteBuf skipBytes(int)",
                "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelHandlerContext fireChannelActive()",
                "io.netty.handler.codec.mqtt.MqttDecoder:io.netty.handler.codec.mqtt.MqttDecoder$Result decodeUnsubscribePayload(io.netty.buffer.ByteBuf,int)",
                "io.netty.handler.codec.ReplayingDecoderByteBuf:boolean release()",
                "io.netty.handler.codec.mqtt.MqttPublishMessage:java.lang.Object payload()",
                "io.netty.handler.codec.mqtt.MqttConnectPayload:java.lang.String password()",
                "io.netty.handler.codec.mqtt.MqttConnectPayload:java.lang.String clientIdentifier()",
                "io.netty.buffer.SimpleLeakAwareByteBuf:boolean release()",
                "io.netty.buffer.AbstractByteBuf:io.netty.buffer.ByteBuf readRetainedSlice(int)",
                "io.netty.handler.codec.mqtt.MqttUnsubscribeMessage:io.netty.handler.codec.mqtt.MqttMessageIdVariableHeader variableHeader()",
                "io.netty.channel.DefaultChannelProgressivePromise:io.netty.channel.ChannelProgressivePromise sync()",
                "io.netty.handler.codec.mqtt.MqttEncoder:void <clinit>()",
                "io.netty.handler.codec.ReplayingDecoderByteBuf:io.netty.buffer.ByteBuf copy()",
                "io.netty.handler.codec.mqtt.MqttUnsubscribeMessage:io.netty.handler.codec.mqtt.MqttUnsubscribePayload payload()",
                "io.netty.buffer.SwappedByteBuf:io.netty.buffer.ByteBuf readBytes(byte[])",
                "io.netty.handler.codec.mqtt.MqttDecoder$DecoderState:io.netty.handler.codec.mqtt.MqttDecoder$DecoderState[] values()",
                "io.netty.buffer.SwappedByteBuf:io.netty.buffer.ByteBuf writeBytes(byte[])",
                "io.netty.handler.codec.mqtt.MqttVersion:byte protocolLevel()",
                "io.netty.handler.codec.mqtt.MqttMessageType:io.netty.handler.codec.mqtt.MqttMessageType[] values()",
                "io.netty.buffer.SwappedByteBuf:java.lang.String toString()",
                "io.netty.buffer.SimpleLeakAwareByteBuf:io.netty.buffer.ByteBuf touch()",
                "io.netty.buffer.WrappedByteBuf:java.lang.String toString(int,int,java.nio.charset.Charset)",
                "io.netty.handler.codec.mqtt.MqttMessageType:io.netty.handler.codec.mqtt.MqttMessageType valueOf(int)",
                "io.netty.handler.codec.CodecOutputList:java.lang.Object get(int)",
                "io.netty.channel.DefaultChannelPipeline$9:void run()",
                "io.netty.channel.DefaultChannelPipeline$PendingHandlerAddedTask:void run()",
                "io.netty.buffer.SwappedByteBuf:boolean release(int)",
                "io.netty.channel.ChannelInboundHandlerAdapter:void <init>()",
                "io.netty.handler.codec.mqtt.MqttDecoder:io.netty.handler.codec.mqtt.MqttDecoder$Result decodeMessageIdVariableHeader(io.netty.buffer.ByteBuf)",
                "io.netty.handler.codec.mqtt.MqttPublishMessage:io.netty.handler.codec.mqtt.MqttPublishMessage duplicate()",
                "io.netty.handler.codec.mqtt.MqttEncoder:io.netty.buffer.ByteBuf encodeSubscribeMessage(io.netty.buffer.ByteBufAllocator,io.netty.handler.codec.mqtt.MqttSubscribeMessage)",
                "io.netty.handler.codec.mqtt.MqttMessage:java.lang.Object variableHeader()",
                "io.netty.handler.codec.mqtt.MqttMessageBuilders:void <init>()",
                "io.netty.channel.CompleteChannelFuture:io.netty.channel.Channel channel()",
                "io.netty.handler.codec.mqtt.MqttEncoder:io.netty.buffer.ByteBuf encodeMessageWithOnlySingleByteFixedHeader(io.netty.buffer.ByteBufAllocator,io.netty.handler.codec.mqtt.MqttMessage)",
                "io.netty.handler.codec.mqtt.MqttConnectMessage:io.netty.handler.codec.mqtt.MqttConnectVariableHeader variableHeader()",
                "io.netty.handler.codec.mqtt.MqttMessageBuilders$ConnAckBuilder:io.netty.handler.codec.mqtt.MqttConnAckMessage build()",
                "io.netty.handler.codec.mqtt.MqttSubscribeMessage:io.netty.handler.codec.mqtt.MqttMessageIdVariableHeader variableHeader()",
                "io.netty.handler.codec.mqtt.MqttConnectVariableHeader:void <init>(java.lang.String,int,boolean,boolean,boolean,int,boolean,boolean,int)",
                "io.netty.handler.codec.mqtt.MqttEncoder:io.netty.buffer.ByteBuf encodeMessageWithOnlySingleByteFixedHeaderAndMessageId(io.netty.buffer.ByteBufAllocator,io.netty.handler.codec.mqtt.MqttMessage)",
                "io.netty.buffer.ReadOnlyByteBuf:io.netty.buffer.ByteBuf duplicate()",
                "io.netty.handler.codec.mqtt.MqttVersion:io.netty.handler.codec.mqtt.MqttVersion valueOf(java.lang.String)",
                "io.netty.bootstrap.ServerBootstrap$1$1:void run()",
                "io.netty.handler.codec.mqtt.MqttConnectVariableHeader:int willQos()",
                "io.netty.buffer.AbstractByteBuf:io.netty.buffer.ByteBuf skipBytes(int)",
                "io.netty.handler.codec.mqtt.MqttConnAckVariableHeader:boolean isSessionPresent()",
                "io.netty.handler.codec.mqtt.MqttConnectVariableHeader:boolean isWillFlag()",
                "io.netty.buffer.EmptyByteBuf:boolean release()",
                "io.netty.channel.AbstractChannel$AbstractUnsafe$5$1:void run()",
                "io.netty.buffer.AbstractDerivedByteBuf:io.netty.buffer.ByteBuf touch(java.lang.Object)",
                "io.netty.handler.codec.ReplayingDecoderByteBuf:io.netty.buffer.ByteBuf writeBytes(byte[])",
                "io.netty.buffer.PooledSlicedByteBuf:io.netty.buffer.ByteBuf duplicate()",
                "io.netty.buffer.AbstractReferenceCountedByteBuf:io.netty.buffer.ByteBuf touch(java.lang.Object)",
                "io.netty.buffer.AbstractReferenceCountedByteBuf:io.netty.buffer.ByteBuf retain()",
                "io.netty.handler.codec.ReplayingDecoder:void <init>(java.lang.Object)",
                "io.netty.util.internal.shaded.org.jctools.queues.atomic.MpscAtomicArrayQueue:java.util.Iterator iterator()",
                "io.netty.handler.codec.mqtt.MqttMessageBuilders$PublishBuilder:void <init>()",
                "io.netty.handler.codec.mqtt.MqttPublishMessage:io.netty.buffer.ByteBufHolder retainedDuplicate()",
                "io.netty.handler.codec.mqtt.MqttDecoder:io.netty.handler.codec.mqtt.MqttDecoder$Result decodeConnectionVariableHeader(io.netty.buffer.ByteBuf)",
                "io.netty.buffer.EmptyByteBuf:io.netty.buffer.ByteBuf touch()",
                "io.netty.handler.codec.mqtt.MqttDecoder:void decode(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,java.util.List)",
                "io.netty.buffer.PoolChunk:java.lang.String toString()",
                "io.netty.handler.codec.mqtt.MqttMessageBuilders$UnsubscribeBuilder:void <init>()",
                "io.netty.handler.codec.mqtt.MqttMessageFactory:void <init>()",
                "io.netty.handler.codec.mqtt.MqttMessageFactory:io.netty.handler.codec.mqtt.MqttMessage newMessage(io.netty.handler.codec.mqtt.MqttFixedHeader,java.lang.Object,java.lang.Object)",
                "io.netty.handler.codec.mqtt.MqttEncoder$1:void <clinit>()",
                "io.netty.buffer.SimpleLeakAwareByteBuf:io.netty.buffer.ByteBuf retainedDuplicate()",
                "io.netty.buffer.EmptyByteBuf:io.netty.buffer.ByteBuf retain(int)",
                "io.netty.handler.codec.mqtt.MqttUnsubscribePayload:java.lang.String toString()",
                "io.netty.handler.codec.mqtt.MqttMessageBuilders$UnsubscribeBuilder:io.netty.handler.codec.mqtt.MqttUnsubscribeMessage build()",
                "io.netty.handler.codec.mqtt.MqttConnectReturnCode:io.netty.handler.codec.mqtt.MqttConnectReturnCode valueOf(java.lang.String)",
                "io.netty.handler.codec.mqtt.MqttConnectVariableHeader:java.lang.String name()",
                "io.netty.channel.MultithreadEventLoopGroup:void <clinit>()",
                "io.netty.handler.codec.mqtt.MqttSubAckPayload:java.lang.String toString()",
                "io.netty.buffer.AbstractReferenceCountedByteBuf:int refCnt()",
                "io.netty.handler.codec.mqtt.MqttDecoder:io.netty.handler.codec.mqtt.MqttDecoder$Result decodePublishPayload(io.netty.buffer.ByteBuf,int)",
                "io.netty.buffer.CompositeByteBuf:io.netty.buffer.CompositeByteBuf retain()",
                "io.netty.buffer.AbstractByteBuf:io.netty.buffer.ByteBuf duplicate()",
                "io.netty.buffer.WrappedByteBuf:io.netty.buffer.ByteBuf skipBytes(int)",
                "io.netty.handler.codec.mqtt.MqttFixedHeader:boolean isDup()",
                "io.netty.handler.codec.mqtt.MqttPublishMessage:io.netty.handler.codec.mqtt.MqttPublishMessage retainedDuplicate()",
                "io.netty.handler.codec.ReplayingDecoderByteBuf:java.lang.String toString(int,int,java.nio.charset.Charset)",
                "io.netty.channel.VoidChannelPromise:io.netty.channel.VoidChannelPromise sync()",
                "io.netty.handler.codec.CodecOutputList:int size()",
                "io.netty.bootstrap.ServerBootstrap:io.netty.bootstrap.ServerBootstrap childHandler(io.netty.channel.ChannelHandler)",
                "io.netty.buffer.PoolArena:java.lang.String toString()",
                "io.netty.buffer.SwappedByteBuf:io.netty.buffer.ByteBuf duplicate()",
                "io.netty.buffer.CompositeByteBuf:io.netty.buffer.CompositeByteBuf writeBytes(byte[])",
                "io.netty.handler.codec.mqtt.MqttDecoder$Result:int access$100(io.netty.handler.codec.mqtt.MqttDecoder$Result)",
                "io.netty.handler.codec.ReplayingDecoderByteBuf:int readerIndex()",
                "io.netty.buffer.AbstractDerivedByteBuf:boolean release(int)",
                "io.netty.handler.codec.mqtt.MqttDecoder:io.netty.handler.codec.mqtt.MqttDecoder$Result decodeSubackPayload(io.netty.buffer.ByteBuf,int)",
                "io.netty.util.AttributeKey:io.netty.util.AttributeKey valueOf(java.lang.String)",
                "io.netty.util.ReferenceCountUtil$ReleasingTask:void run()",
                "io.netty.handler.codec.mqtt.MqttUnsubscribeMessage:void <init>(io.netty.handler.codec.mqtt.MqttFixedHeader,io.netty.handler.codec.mqtt.MqttMessageIdVariableHeader,io.netty.handler.codec.mqtt.MqttUnsubscribePayload)",
                "io.netty.handler.codec.mqtt.MqttEncoder:void encode(io.netty.channel.ChannelHandlerContext,java.lang.Object,java.util.List)",
                "io.netty.handler.codec.mqtt.MqttDecoder:io.netty.handler.codec.mqtt.MqttDecoder$Result decodePayload(io.netty.buffer.ByteBuf,io.netty.handler.codec.mqtt.MqttMessageType,int,java.lang.Object)",
                "io.netty.channel.DefaultChannelPipeline$PendingHandlerRemovedTask:void run()",
                "io.netty.handler.codec.mqtt.MqttCodecUtil:void <init>()",
                "io.netty.handler.codec.mqtt.MqttConnectPayload:java.lang.String toString()",
                "io.netty.buffer.EmptyByteBuf:io.netty.buffer.ByteBuf retain()",
                "io.netty.handler.codec.mqtt.MqttDecoder$Result:java.lang.Object access$000(io.netty.handler.codec.mqtt.MqttDecoder$Result)",
                "io.netty.buffer.SwappedByteBuf:io.netty.buffer.ByteBuf touch()",
                "io.netty.channel.DefaultChannelPipeline$2:void run()",
                "io.netty.util.concurrent.DefaultPromise$4:void run()",
                "io.netty.handler.codec.mqtt.MqttQoS:io.netty.handler.codec.mqtt.MqttQoS valueOf(java.lang.String)",
                "io.netty.handler.codec.mqtt.MqttTopicSubscription:void <init>(java.lang.String,io.netty.handler.codec.mqtt.MqttQoS)",
                "io.netty.util.AbstractConstant:void <clinit>()",
                "io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator:void run()",
                "io.netty.handler.codec.mqtt.MqttPublishMessage:io.netty.handler.codec.mqtt.MqttPublishMessage touch()",
                "io.netty.util.internal.ObjectUtil:java.lang.Object checkNotNull(java.lang.Object,java.lang.String)",
                "io.netty.buffer.CompositeByteBuf$CompositeByteBufIterator:boolean hasNext()",
                "io.netty.buffer.SimpleLeakAwareByteBuf:io.netty.buffer.ByteBuf duplicate()",
                "io.netty.handler.codec.ReplayingDecoderByteBuf:short readUnsignedByte()",
                "io.netty.buffer.AbstractDerivedByteBuf:io.netty.buffer.ByteBuf touch()",
                "io.netty.handler.codec.mqtt.MqttMessage:void <init>(io.netty.handler.codec.mqtt.MqttFixedHeader,java.lang.Object)",
                "io.netty.buffer.SwappedByteBuf:short readUnsignedByte()",
                "io.netty.handler.codec.ReplayingDecoder:void <clinit>()",
                "io.netty.buffer.EmptyByteBuf:io.netty.buffer.ByteBuf writeBytes(io.netty.buffer.ByteBuf)",
                "io.netty.handler.codec.mqtt.MqttQoS:io.netty.handler.codec.mqtt.MqttQoS valueOf(int)"
            ],
            "CVE": [
                "CVE-2019-16869"
            ],
            "used vul-method": [
                "io.netty.channel.ChannelOutboundBuffer$2:void run()",
                "io.netty.channel.DefaultChannelPipeline$6:void run()",
                "io.netty.util.concurrent.DefaultPromise$1:void run()",
                "io.netty.util.concurrent.ScheduledFutureTask:void run()",
                "io.netty.channel.AbstractChannelHandlerContext$AbstractWriteTask:void run()",
                "io.netty.channel.DefaultChannelPipeline$8:void run()",
                "io.netty.channel.nio.NioEventLoopGroup:void <init>()",
                "io.netty.channel.DefaultChannelPipeline$4:void run()",
                "io.netty.bootstrap.AbstractBootstrap:io.netty.channel.ChannelFuture bind(java.net.SocketAddress)",
                "io.netty.channel.ChannelOutboundBuffer$3:void run()",
                "io.netty.util.concurrent.SingleThreadEventExecutor:void execute(java.lang.Runnable)",
                "io.netty.util.concurrent.DefaultPromise$2:void run()",
                "io.netty.channel.DefaultChannelPipeline$7:void run()",
                "io.netty.channel.DefaultChannelPipeline$5:void run()",
                "io.netty.channel.DefaultChannelPipeline$3:void run()",
                "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelHandlerContext fireChannelActive()",
                "io.netty.channel.DefaultChannelPipeline$9:void run()",
                "io.netty.channel.DefaultChannelPipeline$PendingHandlerAddedTask:void run()",
                "io.netty.channel.AbstractChannel$AbstractUnsafe$5$1:void run()",
                "io.netty.channel.DefaultChannelPipeline$PendingHandlerRemovedTask:void run()",
                "io.netty.channel.DefaultChannelPipeline$2:void run()",
                "io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator:void run()"
            ],
            "vul-called frequency": 64,
            "related vul root method": {
                "CVE-2019-16869": [
                    "io.netty.handler.codec.http.HttpObjectDecoder:void splitHeader(io.netty.util.internal.AppendableCharSequence)"
                ]
            },
            "CVE-API": {
                "CVE-2019-16869": [
                    "io.netty.channel.ChannelOutboundBuffer$2:void run()",
                    "io.netty.channel.DefaultChannelPipeline$6:void run()",
                    "io.netty.util.concurrent.DefaultPromise$1:void run()",
                    "io.netty.util.concurrent.ScheduledFutureTask:void run()",
                    "io.netty.channel.AbstractChannelHandlerContext$AbstractWriteTask:void run()",
                    "io.netty.channel.DefaultChannelPipeline$8:void run()",
                    "io.netty.channel.nio.NioEventLoopGroup:void <init>()",
                    "io.netty.channel.DefaultChannelPipeline$4:void run()",
                    "io.netty.bootstrap.AbstractBootstrap:io.netty.channel.ChannelFuture bind(java.net.SocketAddress)",
                    "io.netty.channel.ChannelOutboundBuffer$3:void run()",
                    "io.netty.util.concurrent.SingleThreadEventExecutor:void execute(java.lang.Runnable)",
                    "io.netty.util.concurrent.DefaultPromise$2:void run()",
                    "io.netty.channel.DefaultChannelPipeline$7:void run()",
                    "io.netty.channel.DefaultChannelPipeline$5:void run()",
                    "io.netty.channel.DefaultChannelPipeline$3:void run()",
                    "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelHandlerContext fireChannelActive()",
                    "io.netty.channel.DefaultChannelPipeline$9:void run()",
                    "io.netty.channel.DefaultChannelPipeline$PendingHandlerAddedTask:void run()",
                    "io.netty.channel.AbstractChannel$AbstractUnsafe$5$1:void run()",
                    "io.netty.channel.DefaultChannelPipeline$PendingHandlerRemovedTask:void run()",
                    "io.netty.channel.DefaultChannelPipeline$2:void run()",
                    "io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator:void run()"
                ]
            }
        }
    }
}
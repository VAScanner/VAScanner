{
    "project name": "lyogavin_Pistachio",
    "vulnerable dependencies": {
        "io.netty:netty-all:4.0.24.Final": {
            "used-method num": 86,
            "used method": [
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8$KeySetView:java.util.Iterator iterator()",
                "io.netty.bootstrap.Bootstrap:io.netty.channel.ChannelFuture connect(java.lang.String,int)",
                "io.netty.channel.ChannelOption:void <clinit>()",
                "io.netty.bootstrap.ServerBootstrap:io.netty.bootstrap.ServerBootstrap group(io.netty.channel.EventLoopGroup,io.netty.channel.EventLoopGroup)",
                "io.netty.bootstrap.ServerBootstrap:void <init>()",
                "io.netty.buffer.AbstractByteBuf:boolean equals(java.lang.Object)",
                "io.netty.channel.ChannelInitializer:void <clinit>()",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8$MapEntry:java.lang.Object getValue()",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8$KeyIterator:java.lang.Object next()",
                "io.netty.handler.codec.protobuf.ProtobufVarint32LengthFieldPrepender:void <init>()",
                "io.netty.util.UniqueName:boolean equals(java.lang.Object)",
                "io.netty.channel.nio.NioEventLoopGroup:void <init>(int)",
                "io.netty.bootstrap.AbstractBootstrap:io.netty.bootstrap.AbstractBootstrap handler(io.netty.channel.ChannelHandler)",
                "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture close()",
                "io.netty.handler.ssl.util.SelfSignedCertificate:void <init>()",
                "io.netty.bootstrap.AbstractBootstrap:io.netty.channel.ChannelFuture bind(int)",
                "io.netty.bootstrap.Bootstrap:void <init>()",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8$ValuesView:java.util.Iterator iterator()",
                "io.netty.util.internal.ThreadLocalRandom$1:void run()",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8$EntrySetView:java.util.Iterator iterator()",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8$KeySetView:boolean equals(java.lang.Object)",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8$EntrySetView:boolean equals(java.lang.Object)",
                "io.netty.util.internal.RecyclableArrayList:void add(int,java.lang.Object)",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8$EntryIterator:java.util.Map$Entry next()",
                "io.netty.util.concurrent.AbstractEventExecutor:java.util.Iterator iterator()",
                "io.netty.handler.ssl.util.SelfSignedCertificate:void <clinit>()",
                "io.netty.bootstrap.Bootstrap:io.netty.bootstrap.Bootstrap clone()",
                "io.netty.handler.ssl.util.ThreadLocalInsecureRandom:long nextLong()",
                "io.netty.handler.logging.LoggingHandler:void <init>(io.netty.handler.logging.LogLevel)",
                "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture write(java.lang.Object)",
                "io.netty.handler.ssl.SslContext:io.netty.handler.ssl.SslContext newServerContext(java.io.File,java.io.File)",
                "io.netty.bootstrap.AbstractBootstrap:io.netty.bootstrap.AbstractBootstrap channel(java.lang.Class)",
                "io.netty.util.concurrent.MultithreadEventExecutorGroup:java.util.Iterator iterator()",
                "io.netty.handler.ssl.util.ThreadLocalInsecureRandom:int nextInt(int)",
                "io.netty.channel.nio.NioEventLoopGroup:void <init>()",
                "io.netty.util.internal.RecyclableArrayList:java.lang.Object set(int,java.lang.Object)",
                "io.netty.util.concurrent.AbstractFuture:java.lang.Object get()",
                "io.netty.handler.ssl.util.InsecureTrustManagerFactory:void <clinit>()",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8$BaseIterator:boolean hasNext()",
                "io.netty.handler.timeout.ReadTimeoutHandler:void <init>(long,java.util.concurrent.TimeUnit)",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8$KeyIterator:java.lang.Object nextElement()",
                "io.netty.handler.ssl.util.SimpleTrustManagerFactory:void <clinit>()",
                "io.netty.util.internal.RecyclableArrayList:boolean add(java.lang.Object)",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8$CollectionView:int size()",
                "io.netty.util.internal.chmv8.ForkJoinTask:java.lang.Object get()",
                "io.netty.handler.ssl.SslContext:io.netty.handler.ssl.SslContext newClientContext(javax.net.ssl.TrustManagerFactory)",
                "io.netty.bootstrap.ServerBootstrap:io.netty.bootstrap.ServerBootstrap childHandler(io.netty.channel.ChannelHandler)",
                "io.netty.handler.codec.protobuf.ProtobufVarint32FrameDecoder:void <init>()",
                "io.netty.buffer.WrappedByteBuf:boolean equals(java.lang.Object)",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8$ValueIterator:java.lang.Object next()",
                "io.netty.bootstrap.Bootstrap:void <clinit>()",
                "io.netty.util.UniqueName:void <clinit>()",
                "io.netty.bootstrap.ServerBootstrap:io.netty.bootstrap.ServerBootstrap clone()",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8$ValueIterator:java.lang.Object nextElement()",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8:java.lang.Object get(java.lang.Object)",
                "io.netty.util.internal.MpscLinkedQueue:java.util.Iterator iterator()",
                "io.netty.handler.ssl.util.ThreadLocalInsecureRandom:int nextInt()",
                "io.netty.bootstrap.ServerBootstrap:void <clinit>()",
                "io.netty.buffer.SwappedByteBuf:boolean equals(java.lang.Object)",
                "io.netty.util.internal.RecyclableArrayList:boolean addAll(java.util.Collection)",
                "io.netty.util.internal.MpscLinkedQueue$1:java.lang.Object next()",
                "io.netty.bootstrap.AbstractBootstrap:io.netty.bootstrap.AbstractBootstrap option(io.netty.channel.ChannelOption,java.lang.Object)",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8:java.lang.Object put(java.lang.Object,java.lang.Object)",
                "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelHandlerContext flush()",
                "io.netty.util.internal.chmv8.ForkJoinWorkerThread:void run()",
                "io.netty.channel.MultithreadEventLoopGroup:void <clinit>()",
                "io.netty.util.internal.chmv8.ForkJoinTask:java.lang.Object get(long,java.util.concurrent.TimeUnit)",
                "io.netty.channel.nio.SelectedSelectionKeySet:java.util.Iterator iterator()",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8:java.util.Set entrySet()",
                "io.netty.util.internal.MpscLinkedQueue$1:boolean hasNext()",
                "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.Channel channel()",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8:boolean equals(java.lang.Object)",
                "io.netty.bootstrap.AbstractBootstrap:io.netty.bootstrap.AbstractBootstrap group(io.netty.channel.EventLoopGroup)",
                "io.netty.handler.ssl.util.ThreadLocalInsecureRandom:void nextBytes(byte[])",
                "io.netty.util.concurrent.AbstractEventExecutor:io.netty.util.concurrent.Future shutdownGracefully()",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8:java.lang.Object remove(java.lang.Object)",
                "io.netty.channel.ChannelInitializer:void <init>()",
                "io.netty.handler.logging.LogLevel:void <clinit>()",
                "io.netty.buffer.EmptyByteBuf:boolean equals(java.lang.Object)",
                "io.netty.util.concurrent.AbstractFuture:java.lang.Object get(long,java.util.concurrent.TimeUnit)",
                "io.netty.handler.logging.LoggingHandler:void <clinit>()",
                "io.netty.handler.codec.protobuf.ProtobufDecoder:void <clinit>()",
                "io.netty.handler.codec.protobuf.ProtobufDecoder:void <init>(com.google.protobuf.MessageLite)",
                "io.netty.channel.SimpleChannelInboundHandler:void <init>()",
                "io.netty.handler.codec.protobuf.ProtobufEncoder:void <init>()",
                "io.netty.channel.SimpleChannelInboundHandler:void <init>(boolean)"
            ],
            "CVE": [
                "CVE-2019-16869"
            ],
            "used vul-method": [
                "io.netty.bootstrap.Bootstrap:io.netty.channel.ChannelFuture connect(java.lang.String,int)",
                "io.netty.channel.nio.NioEventLoopGroup:void <init>(int)",
                "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture close()",
                "io.netty.bootstrap.AbstractBootstrap:io.netty.channel.ChannelFuture bind(int)",
                "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture write(java.lang.Object)",
                "io.netty.channel.nio.NioEventLoopGroup:void <init>()",
                "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelHandlerContext flush()"
            ],
            "vul-called frequency": 11,
            "related vul root method": {
                "CVE-2019-16869": [
                    "io.netty.handler.codec.http.HttpObjectDecoder:void splitHeader(io.netty.util.internal.AppendableCharSequence)"
                ]
            },
            "CVE-API": {
                "CVE-2019-16869": [
                    "io.netty.bootstrap.Bootstrap:io.netty.channel.ChannelFuture connect(java.lang.String,int)",
                    "io.netty.channel.nio.NioEventLoopGroup:void <init>(int)",
                    "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture close()",
                    "io.netty.bootstrap.AbstractBootstrap:io.netty.channel.ChannelFuture bind(int)",
                    "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture write(java.lang.Object)",
                    "io.netty.channel.nio.NioEventLoopGroup:void <init>()",
                    "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelHandlerContext flush()"
                ]
            }
        },
        "org.apache.zookeeper:zookeeper:3.4.5": {
            "used-method num": 58,
            "used method": [
                "org.apache.zookeeper.proto.GetChildren2Response:boolean equals(java.lang.Object)",
                "org.apache.zookeeper.txn.CreateTxn:boolean equals(java.lang.Object)",
                "org.apache.zookeeper.MultiTransactionRecord:java.util.Iterator iterator()",
                "org.apache.zookeeper.proto.SyncRequest:boolean equals(java.lang.Object)",
                "org.apache.zookeeper.Op$Delete:boolean equals(java.lang.Object)",
                "org.apache.zookeeper.proto.SetACLResponse:boolean equals(java.lang.Object)",
                "org.apache.zookeeper.OpResult$SetDataResult:boolean equals(java.lang.Object)",
                "org.apache.zookeeper.proto.GetDataRequest:boolean equals(java.lang.Object)",
                "org.apache.zookeeper.proto.GetChildrenRequest:boolean equals(java.lang.Object)",
                "org.apache.zookeeper.proto.ExistsRequest:boolean equals(java.lang.Object)",
                "org.apache.zookeeper.proto.ConnectRequest:boolean equals(java.lang.Object)",
                "org.apache.zookeeper.proto.SetDataResponse:boolean equals(java.lang.Object)",
                "org.apache.zookeeper.proto.SetSASLResponse:boolean equals(java.lang.Object)",
                "org.apache.zookeeper.proto.SetACLRequest:boolean equals(java.lang.Object)",
                "org.apache.zookeeper.ZooDefs$Ids:void <clinit>()",
                "org.apache.zookeeper.Op$SetData:boolean equals(java.lang.Object)",
                "org.apache.zookeeper.data.ACL:boolean equals(java.lang.Object)",
                "org.apache.zookeeper.txn.DeleteTxn:boolean equals(java.lang.Object)",
                "org.apache.zookeeper.Op$Check:boolean equals(java.lang.Object)",
                "org.apache.zookeeper.proto.AuthPacket:boolean equals(java.lang.Object)",
                "org.apache.zookeeper.txn.CheckVersionTxn:boolean equals(java.lang.Object)",
                "org.apache.zookeeper.ZooKeeper:org.apache.zookeeper.data.Stat setData(java.lang.String,byte[],int)",
                "org.apache.zookeeper.Shell$1:void run()",
                "org.apache.zookeeper.MultiResponse:boolean equals(java.lang.Object)",
                "org.apache.zookeeper.MultiResponse:java.util.Iterator iterator()",
                "org.apache.zookeeper.KeeperException:java.lang.String getMessage()",
                "org.apache.zookeeper.proto.SetWatches:boolean equals(java.lang.Object)",
                "org.apache.zookeeper.proto.SyncResponse:boolean equals(java.lang.Object)",
                "org.apache.zookeeper.OpResult$ErrorResult:boolean equals(java.lang.Object)",
                "org.apache.zookeeper.ZooKeeper:void <clinit>()",
                "org.apache.zookeeper.proto.GetChildrenResponse:boolean equals(java.lang.Object)",
                "org.apache.zookeeper.txn.Txn:boolean equals(java.lang.Object)",
                "org.apache.zookeeper.data.Stat:boolean equals(java.lang.Object)",
                "org.apache.zookeeper.CreateMode:void <clinit>()",
                "org.apache.zookeeper.proto.CheckVersionRequest:boolean equals(java.lang.Object)",
                "org.apache.zookeeper.proto.CreateRequest:boolean equals(java.lang.Object)",
                "org.apache.zookeeper.proto.CreateResponse:boolean equals(java.lang.Object)",
                "org.apache.zookeeper.OpResult$CreateResult:boolean equals(java.lang.Object)",
                "org.apache.zookeeper.ClientCnxn$SendThread:void run()",
                "org.apache.zookeeper.server.ByteBufferInputStream:int read(byte[])",
                "org.apache.zookeeper.OpResult$CheckResult:boolean equals(java.lang.Object)",
                "org.apache.zookeeper.OpResult$DeleteResult:boolean equals(java.lang.Object)",
                "org.apache.zookeeper.proto.DeleteRequest:boolean equals(java.lang.Object)",
                "org.apache.zookeeper.proto.GetChildren2Request:boolean equals(java.lang.Object)",
                "org.apache.zookeeper.ZooKeeper:void <init>(java.lang.String,int,org.apache.zookeeper.Watcher)",
                "org.apache.zookeeper.proto.GetACLResponse:boolean equals(java.lang.Object)",
                "org.apache.zookeeper.MultiTransactionRecord:boolean equals(java.lang.Object)",
                "org.apache.zookeeper.Op$Create:boolean equals(java.lang.Object)",
                "org.apache.zookeeper.proto.GetSASLRequest:boolean equals(java.lang.Object)",
                "org.apache.zookeeper.ZooKeeper:java.lang.String create(java.lang.String,byte[],java.util.List,org.apache.zookeeper.CreateMode)",
                "org.apache.zookeeper.data.Id:boolean equals(java.lang.Object)",
                "org.apache.zookeeper.ClientCnxn$EventThread:void run()",
                "org.apache.zookeeper.proto.GetDataResponse:boolean equals(java.lang.Object)",
                "org.apache.zookeeper.proto.GetACLRequest:boolean equals(java.lang.Object)",
                "org.apache.zookeeper.ZooKeeper:void close()",
                "org.apache.zookeeper.txn.SetDataTxn:boolean equals(java.lang.Object)",
                "org.apache.zookeeper.proto.WatcherEvent:boolean equals(java.lang.Object)",
                "org.apache.zookeeper.proto.SetDataRequest:boolean equals(java.lang.Object)"
            ]
        }
    }
}
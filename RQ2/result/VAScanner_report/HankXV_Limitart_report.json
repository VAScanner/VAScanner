{
    "project name": "HankXV_Limitart",
    "vulnerable dependencies": {
        "io.netty:netty-all:4.1.22.Final": {
            "used-method num": 556,
            "used method": [
                "io.netty.channel.nio.SelectedSelectionKeySet:boolean add(java.lang.Object)",
                "io.netty.handler.codec.http.multipart.DiskAttribute:boolean equals(java.lang.Object)",
                "io.netty.buffer.EmptyByteBuf:float readFloat()",
                "io.netty.handler.codec.http.HttpMethod:int compareTo(java.lang.Object)",
                "io.netty.channel.DefaultChannelProgressivePromise:io.netty.channel.Channel channel()",
                "io.netty.channel.AbstractChannel$AbstractUnsafe$6$1:void run()",
                "io.netty.channel.unix.FileDescriptor:java.lang.String toString()",
                "io.netty.buffer.AbstractByteBuf:io.netty.buffer.ByteBuf writeShort(int)",
                "io.netty.handler.ssl.SslHandler$2:void run()",
                "io.netty.handler.codec.DefaultHeaders$HeaderEntry:java.lang.Object getKey()",
                "io.netty.buffer.AdvancedLeakAwareByteBuf:io.netty.buffer.ByteBuf setShort(int,int)",
                "io.netty.util.concurrent.GlobalEventExecutor:void execute(java.lang.Runnable)",
                "io.netty.buffer.DuplicatedByteBuf:io.netty.buffer.ByteBuf setShort(int,int)",
                "io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueue:java.lang.String toString()",
                "io.netty.channel.CombinedChannelDuplexHandler:void <clinit>()",
                "io.netty.bootstrap.ServerBootstrap:void <init>()",
                "io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext$1:void run()",
                "io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseMpscLinkedAtomicArrayQueue:boolean isEmpty()",
                "io.netty.channel.ChannelInitializer:void <clinit>()",
                "io.netty.handler.ssl.SslHandler:void <clinit>()",
                "io.netty.handler.codec.http.DefaultHttpHeaders$3:java.lang.String next()",
                "io.netty.util.concurrent.AbstractScheduledEventExecutor:io.netty.util.concurrent.ScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)",
                "io.netty.util.concurrent.SingleThreadEventExecutor:void <clinit>()",
                "io.netty.util.DefaultAttributeMap:io.netty.util.Attribute attr(io.netty.util.AttributeKey)",
                "io.netty.handler.codec.HeadersUtils$DelegatingStringSet:java.util.Iterator iterator()",
                "io.netty.channel.DefaultChannelPromise:io.netty.channel.Channel channel()",
                "io.netty.handler.codec.protobuf.ProtobufVarint32LengthFieldPrepender:void <init>()",
                "io.netty.handler.ssl.SslHandler:void <init>(javax.net.ssl.SSLEngine)",
                "io.netty.util.internal.ObjectCleaner$1:void run()",
                "io.netty.buffer.SwappedByteBuf:io.netty.buffer.ByteBuf writeInt(int)",
                "io.netty.handler.ssl.OpenSslX509Certificate:java.lang.String toString()",
                "io.netty.buffer.EmptyByteBuf:io.netty.buffer.ByteBuf readBytes(byte[],int,int)",
                "io.netty.channel.DefaultChannelPipeline$4:void run()",
                "io.netty.handler.codec.http.QueryStringDecoder:void <init>(java.lang.String)",
                "io.netty.handler.codec.HeadersUtils$DelegatingStringSet:void clear()",
                "io.netty.buffer.SwappedByteBuf:io.netty.buffer.ByteBuf writeFloat(float)",
                "io.netty.buffer.EmptyByteBuf:io.netty.buffer.ByteBuf writeByte(int)",
                "io.netty.buffer.WrappedByteBuf:int readInt()",
                "io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseMpscLinkedAtomicArrayQueue:java.lang.Object poll()",
                "io.netty.buffer.SwappedByteBuf:boolean readBoolean()",
                "io.netty.handler.ssl.OpenSslJavaxX509Certificate:java.lang.String toString()",
                "io.netty.handler.codec.http.DefaultHttpRequest:java.lang.String toString()",
                "io.netty.channel.local.LocalAddress:int compareTo(java.lang.Object)",
                "io.netty.util.AbstractConstant:boolean equals(java.lang.Object)",
                "io.netty.util.concurrent.AbstractEventExecutor:void <clinit>()",
                "io.netty.channel.DefaultChannelId:boolean equals(java.lang.Object)",
                "io.netty.handler.codec.http.multipart.MixedAttribute:java.lang.String getName()",
                "io.netty.buffer.SwappedByteBuf:io.netty.buffer.ByteBuf writeDouble(double)",
                "io.netty.buffer.WrappedByteBuf:io.netty.buffer.ByteBuf writeLong(long)",
                "io.netty.util.collection.IntObjectHashMap$KeySet:int size()",
                "io.netty.buffer.AbstractByteBuf:double readDouble()",
                "io.netty.util.collection.IntObjectHashMap$MapEntry:java.lang.Object getValue()",
                "io.netty.util.collection.IntObjectHashMap$KeySet:void clear()",
                "io.netty.bootstrap.AbstractBootstrap:io.netty.channel.ChannelFuture bind(int)",
                "io.netty.util.internal.shaded.org.jctools.queues.atomic.AtomicReferenceArrayQueue:int size()",
                "io.netty.channel.SucceededChannelFuture:boolean isSuccess()",
                "io.netty.buffer.AdvancedLeakAwareByteBuf:boolean release()",
                "io.netty.channel.AbstractChannel:boolean equals(java.lang.Object)",
                "io.netty.buffer.EmptyByteBuf:boolean readBoolean()",
                "io.netty.util.internal.ThreadLocalRandom$1:void run()",
                "io.netty.buffer.CompositeByteBuf:io.netty.buffer.CompositeByteBuf writeInt(int)",
                "io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueue:java.lang.Object peek()",
                "io.netty.util.collection.IntObjectHashMap:void clear()",
                "io.netty.buffer.EmptyByteBuf:int readInt()",
                "io.netty.channel.DefaultChannelPipeline$3:void run()",
                "io.netty.buffer.WrappedByteBuf:int compareTo(java.lang.Object)",
                "io.netty.buffer.AbstractByteBuf:io.netty.buffer.ByteBuf writeBoolean(boolean)",
                "io.netty.handler.codec.DefaultHeaders$HeaderEntry:java.lang.Object getValue()",
                "io.netty.buffer.SwappedByteBuf:io.netty.buffer.ByteBuf readBytes(byte[])",
                "io.netty.buffer.AbstractByteBuf:char readChar()",
                "io.netty.buffer.SwappedByteBuf:java.lang.String toString()",
                "io.netty.bootstrap.ServerBootstrap$1$1:void run()",
                "io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseLinkedAtomicQueue:int size()",
                "io.netty.buffer.WrappedByteBuf:double readDouble()",
                "io.netty.handler.codec.HeadersUtils$DelegatingStringSet:int size()",
                "io.netty.buffer.CompositeByteBuf:io.netty.buffer.CompositeByteBuf writeBytes(byte[])",
                "io.netty.util.internal.ConcurrentSet:java.util.Iterator iterator()",
                "io.netty.handler.codec.DefaultHeaders$ValueIterator:java.lang.Object next()",
                "io.netty.channel.AbstractChannel:io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object)",
                "io.netty.util.AbstractConstant:void <clinit>()",
                "io.netty.buffer.AbstractByteBuf:int compareTo(java.lang.Object)",
                "io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueue:boolean offer(java.lang.Object)",
                "io.netty.buffer.Unpooled:void <clinit>()",
                "io.netty.util.AsciiString:int compareTo(java.lang.Object)",
                "io.netty.util.concurrent.DefaultPromise:java.lang.String toString()",
                "io.netty.handler.codec.http.HttpResponseStatus:int compareTo(java.lang.Object)",
                "io.netty.handler.codec.CorruptedFrameException:void <init>(java.lang.String)",
                "io.netty.util.CharsetUtil:void <clinit>()",
                "io.netty.buffer.SwappedByteBuf:io.netty.buffer.ByteBuf writeByte(int)",
                "io.netty.handler.codec.CodecOutputList:void clear()",
                "io.netty.handler.codec.http.multipart.DiskAttribute:int compareTo(java.lang.Object)",
                "io.netty.util.AttributeKey:io.netty.util.AttributeKey newInstance(java.lang.String)",
                "io.netty.handler.codec.HeadersUtils$StringEntryIterator:void remove()",
                "io.netty.buffer.PooledDirectByteBuf:io.netty.buffer.ByteBuf readBytes(byte[],int,int)",
                "io.netty.buffer.AbstractByteBuf:io.netty.buffer.ByteBuf writeChar(int)",
                "io.netty.util.internal.ObjectCleaner$AutomaticCleanerReference:java.lang.Thread get()",
                "io.netty.util.ResourceLeakDetector$DefaultResourceLeak:java.lang.String toString()",
                "io.netty.util.internal.shaded.org.jctools.queues.atomic.SpscLinkedAtomicQueue:java.lang.Object peek()",
                "io.netty.handler.codec.ByteToMessageDecoder:void <clinit>()",
                "io.netty.channel.epoll.EpollSocketChannel:java.net.InetSocketAddress remoteAddress()",
                "io.netty.channel.FailedChannelFuture:io.netty.channel.ChannelFuture sync()",
                "io.netty.handler.codec.http.HttpHeaders:io.netty.handler.codec.http.HttpHeaders add(java.lang.CharSequence,java.lang.Object)",
                "io.netty.channel.DefaultChannelId:java.lang.String toString()",
                "io.netty.util.Signal:java.lang.String toString()",
                "io.netty.buffer.CompositeByteBuf:io.netty.buffer.CompositeByteBuf readBytes(byte[],int,int)",
                "io.netty.util.internal.shaded.org.jctools.queues.atomic.SpscLinkedAtomicQueue:boolean offer(java.lang.Object)",
                "io.netty.buffer.AdvancedLeakAwareByteBuf:io.netty.buffer.ByteBuf writeLong(long)",
                "io.netty.handler.codec.HeadersUtils$DelegatingStringSet:boolean isEmpty()",
                "io.netty.buffer.SwappedByteBuf:io.netty.buffer.ByteBuf writeLong(long)",
                "io.netty.channel.VoidChannelPromise:boolean isSuccess()",
                "io.netty.buffer.UnpooledHeapByteBuf:io.netty.buffer.ByteBuf setShort(int,int)",
                "io.netty.util.internal.shaded.org.jctools.queues.atomic.MpscAtomicArrayQueue:java.lang.Object poll()",
                "io.netty.util.collection.IntObjectHashMap$KeySet$1:java.lang.Integer next()",
                "io.netty.util.internal.shaded.org.jctools.queues.SpscLinkedQueue:java.lang.Object poll()",
                "io.netty.handler.codec.http.DefaultHttpHeaders$3:void remove()",
                "io.netty.bootstrap.AbstractBootstrap:io.netty.channel.ChannelFuture bind(java.net.SocketAddress)",
                "io.netty.buffer.SwappedByteBuf:char readChar()",
                "io.netty.handler.codec.http.multipart.MemoryAttribute:boolean equals(java.lang.Object)",
                "io.netty.handler.codec.DefaultHeaders:java.lang.String toString()",
                "io.netty.buffer.FixedCompositeByteBuf:io.netty.buffer.ByteBuf setShort(int,int)",
                "io.netty.util.concurrent.DefaultPromise$2:void run()",
                "io.netty.buffer.SwappedByteBuf:byte readByte()",
                "io.netty.handler.ssl.SslHandler$3:void run()",
                "io.netty.buffer.AbstractUnsafeSwappedByteBuf:io.netty.buffer.ByteBuf writeFloat(float)",
                "io.netty.util.collection.IntObjectHashMap$MapIterator:boolean hasNext()",
                "io.netty.handler.codec.http.HttpObjectAggregator$AggregatedFullHttpResponse:java.lang.String toString()",
                "io.netty.util.internal.RecyclableArrayList:boolean add(java.lang.Object)",
                "io.netty.channel.CompleteChannelFuture:io.netty.channel.ChannelFuture sync()",
                "io.netty.handler.codec.http.DefaultHttpHeaders:boolean equals(java.lang.Object)",
                "io.netty.util.internal.shaded.org.jctools.queues.atomic.MpscAtomicArrayQueue:boolean offer(java.lang.Object)",
                "io.netty.util.collection.IntObjectHashMap:java.lang.Object remove(java.lang.Object)",
                "io.netty.util.AttributeKey:void <clinit>()",
                "io.netty.channel.DefaultChannelPipeline$7:void run()",
                "io.netty.util.collection.IntObjectHashMap$2$1:java.lang.Object next()",
                "io.netty.buffer.AbstractUnsafeSwappedByteBuf:io.netty.buffer.ByteBuf writeLong(long)",
                "io.netty.handler.codec.http.HttpVersion:java.lang.String toString()",
                "io.netty.handler.codec.http.DefaultFullHttpResponse:java.lang.String toString()",
                "io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueue:java.lang.Object poll()",
                "io.netty.util.collection.IntObjectHashMap:boolean containsKey(java.lang.Object)",
                "io.netty.util.collection.IntObjectHashMap:void putAll(java.util.Map)",
                "io.netty.buffer.AdvancedLeakAwareByteBuf:io.netty.buffer.ByteBuf writeChar(int)",
                "io.netty.util.concurrent.AbstractScheduledEventExecutor:io.netty.util.concurrent.ScheduledFuture scheduleWithFixedDelay(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)",
                "io.netty.handler.codec.http.multipart.DiskAttribute:java.lang.String toString()",
                "io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueue:java.util.Iterator iterator()",
                "io.netty.buffer.SwappedByteBuf:io.netty.buffer.ByteBuf writeBytes(byte[])",
                "io.netty.buffer.SwappedByteBuf:int readInt()",
                "io.netty.handler.codec.CodecOutputList:java.lang.Object get(int)",
                "io.netty.handler.codec.http.HttpObjectAggregator:void <clinit>()",
                "io.netty.buffer.ReadOnlyByteBuf:io.netty.buffer.ByteBuf setShort(int,int)",
                "io.netty.buffer.EmptyByteBuf:boolean release()",
                "io.netty.util.internal.shaded.org.jctools.queues.SpscLinkedQueue:java.lang.Object peek()",
                "io.netty.util.collection.IntObjectHashMap:java.lang.Object get(java.lang.Object)",
                "io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseMpscLinkedAtomicArrayQueue:java.util.Iterator iterator()",
                "io.netty.buffer.CompositeByteBuf:io.netty.buffer.CompositeByteBuf retain()",
                "io.netty.bootstrap.ServerBootstrap:io.netty.bootstrap.ServerBootstrap childHandler(io.netty.channel.ChannelHandler)",
                "io.netty.util.internal.ConcurrentSet:boolean contains(java.lang.Object)",
                "io.netty.handler.codec.HeadersUtils$CharSequenceDelegatingStringSet:boolean addAll(java.util.Collection)",
                "io.netty.handler.codec.http.DefaultHttpObject:boolean equals(java.lang.Object)",
                "io.netty.buffer.EmptyByteBuf:io.netty.buffer.ByteBuf retain()",
                "io.netty.handler.codec.http.multipart.HttpPostRequestDecoder:void <init>(io.netty.handler.codec.http.HttpRequest)",
                "io.netty.util.concurrent.PromiseTask:boolean equals(java.lang.Object)",
                "io.netty.channel.DefaultChannelPipeline$2:void run()",
                "io.netty.util.collection.IntObjectHashMap:boolean containsValue(java.lang.Object)",
                "io.netty.util.collection.IntObjectHashMap$PrimitiveIterator:boolean hasNext()",
                "io.netty.buffer.CompositeByteBuf:io.netty.buffer.CompositeByteBuf writeShort(int)",
                "io.netty.buffer.AbstractByteBuf:float readFloat()",
                "io.netty.bootstrap.Bootstrap:void <clinit>()",
                "io.netty.buffer.AdvancedLeakAwareByteBuf:io.netty.buffer.ByteBuf writeBoolean(boolean)",
                "io.netty.channel.DelegatingChannelPromiseNotifier:io.netty.channel.ChannelPromise sync()",
                "io.netty.buffer.CompositeByteBuf:io.netty.buffer.CompositeByteBuf setShort(int,int)",
                "io.netty.buffer.AbstractByteBuf:io.netty.buffer.ByteBuf readBytes(byte[])",
                "io.netty.handler.codec.http.DefaultHttpObject:io.netty.handler.codec.DecoderResult decoderResult()",
                "io.netty.util.internal.shaded.org.jctools.queues.SpscLinkedQueue:java.lang.String toString()",
                "io.netty.buffer.AbstractByteBuf:io.netty.buffer.ByteBuf writeDouble(double)",
                "io.netty.buffer.AdvancedLeakAwareByteBuf:io.netty.buffer.ByteBuf readBytes(byte[])",
                "io.netty.util.concurrent.ScheduledFutureTask:void run()",
                "io.netty.channel.CompleteChannelFuture:io.netty.channel.ChannelFuture addListener(io.netty.util.concurrent.GenericFutureListener)",
                "io.netty.buffer.UnpooledByteBufAllocator$UnpooledByteBufAllocatorMetric:java.lang.String toString()",
                "io.netty.handler.codec.HeadersUtils$DelegatingStringSet:boolean remove(java.lang.Object)",
                "io.netty.buffer.AbstractByteBufAllocator:void <clinit>()",
                "io.netty.util.concurrent.DefaultPromise$3:void run()",
                "io.netty.channel.DefaultChannelPromise:io.netty.channel.ChannelPromise addListener(io.netty.util.concurrent.GenericFutureListener)",
                "io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueue:boolean isEmpty()",
                "io.netty.channel.DefaultEventLoopGroup:void <init>(int)",
                "io.netty.buffer.UnpooledDirectByteBuf:io.netty.buffer.ByteBuf setShort(int,int)",
                "io.netty.util.internal.shaded.org.jctools.queues.atomic.MpscAtomicArrayQueue:void clear()",
                "io.netty.util.internal.ConcurrentSet:boolean add(java.lang.Object)",
                "io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseMpscLinkedAtomicArrayQueue:java.lang.String toString()",
                "io.netty.handler.codec.http.QueryStringDecoder:java.lang.String path()",
                "io.netty.util.collection.IntObjectHashMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
                "io.netty.buffer.AbstractByteBuf:byte readByte()",
                "io.netty.buffer.WrappedByteBuf:io.netty.buffer.ByteBuf writeByte(int)",
                "io.netty.bootstrap.ServerBootstrap:void <clinit>()",
                "io.netty.channel.AbstractChannel:int compareTo(java.lang.Object)",
                "io.netty.buffer.SwappedByteBuf:boolean equals(java.lang.Object)",
                "io.netty.buffer.AbstractByteBuf:io.netty.buffer.ByteBuf writeInt(int)",
                "io.netty.buffer.EmptyByteBuf:char readChar()",
                "io.netty.buffer.WrappedByteBuf:float readFloat()",
                "io.netty.buffer.WrappedByteBuf:byte readByte()",
                "io.netty.buffer.Unpooled:io.netty.buffer.ByteBuf wrappedBuffer(byte[])",
                "io.netty.bootstrap.AbstractBootstrap:io.netty.bootstrap.AbstractBootstrap option(io.netty.channel.ChannelOption,java.lang.Object)",
                "io.netty.handler.codec.http.DefaultHttpContent:java.lang.String toString()",
                "io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext:io.netty.channel.Channel channel()",
                "io.netty.buffer.WrappedByteBuf:io.netty.buffer.ByteBuf writeFloat(float)",
                "io.netty.buffer.CompositeByteBuf:io.netty.buffer.CompositeByteBuf writeChar(int)",
                "io.netty.buffer.AbstractUnsafeSwappedByteBuf:io.netty.buffer.ByteBuf writeShort(int)",
                "io.netty.channel.AbstractChannelHandlerContext:java.lang.String toString()",
                "io.netty.buffer.AdvancedLeakAwareByteBuf:boolean readBoolean()",
                "io.netty.handler.codec.http.multipart.CaseIgnoringComparator:int compare(java.lang.Object,java.lang.Object)",
                "io.netty.util.collection.IntObjectHashMap$PrimitiveIterator:io.netty.util.collection.IntObjectMap$PrimitiveEntry next()",
                "io.netty.handler.codec.http.HttpResponseStatus:void <clinit>()",
                "io.netty.buffer.AbstractReferenceCountedByteBuf:boolean release()",
                "io.netty.channel.AbstractChannel:java.lang.String toString()",
                "io.netty.buffer.EmptyByteBuf:long readLong()",
                "io.netty.channel.DefaultChannelProgressivePromise:io.netty.channel.ChannelProgressivePromise sync()",
                "io.netty.util.internal.shaded.org.jctools.queues.atomic.MpscAtomicArrayQueue:java.lang.Object peek()",
                "io.netty.channel.DefaultChannelPipeline$9:void run()",
                "io.netty.channel.ChannelInboundHandlerAdapter:void <init>()",
                "io.netty.handler.ssl.SslHandler$5:void run()",
                "io.netty.buffer.AbstractByteBuf:int readInt()",
                "io.netty.buffer.AbstractReferenceCountedByteBuf:io.netty.buffer.ByteBuf retain()",
                "io.netty.channel.MultithreadEventLoopGroup:void <clinit>()",
                "io.netty.channel.unix.FileDescriptor:boolean equals(java.lang.Object)",
                "io.netty.buffer.WrappedByteBuf:io.netty.buffer.ByteBuf readBytes(byte[],int,int)",
                "io.netty.buffer.AbstractByteBuf:io.netty.buffer.ByteBuf readBytes(byte[],int,int)",
                "io.netty.util.collection.IntObjectHashMap$EntrySet:int size()",
                "io.netty.channel.DefaultChannelPipeline$6:void run()",
                "io.netty.buffer.EmptyByteBuf:io.netty.buffer.ByteBuf writeFloat(float)",
                "io.netty.buffer.EmptyByteBuf:io.netty.buffer.ByteBuf writeBytes(byte[])",
                "io.netty.channel.nio.SelectedSelectionKeySet:java.util.Iterator iterator()",
                "io.netty.util.collection.IntObjectHashMap$KeySet$1:boolean hasNext()",
                "io.netty.handler.codec.http.DefaultLastHttpContent:java.lang.String toString()",
                "io.netty.util.internal.shaded.org.jctools.queues.ConcurrentCircularArrayQueue:int size()",
                "io.netty.util.AsciiString:java.lang.String toString()",
                "io.netty.buffer.WrappedByteBuf:long readLong()",
                "io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueue:int size()",
                "io.netty.handler.codec.http.DefaultFullHttpRequest:java.lang.String toString()",
                "io.netty.util.internal.DefaultPriorityQueue$PriorityQueueIterator:io.netty.util.internal.PriorityQueueNode next()",
                "io.netty.handler.codec.http.HttpHeaderNames:void <clinit>()",
                "io.netty.util.internal.ConcurrentSet:boolean remove(java.lang.Object)",
                "io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueue:boolean offer(java.lang.Object)",
                "io.netty.handler.ssl.PemX509Certificate:boolean equals(java.lang.Object)",
                "io.netty.buffer.WrappedByteBuf:io.netty.buffer.ByteBuf retain()",
                "io.netty.util.ThreadDeathWatcher$Watcher:void run()",
                "io.netty.util.internal.logging.AbstractInternalLogger:java.lang.String toString()",
                "io.netty.handler.ssl.SslHandler$7:void run()",
                "io.netty.buffer.SwappedByteBuf:short readShort()",
                "io.netty.handler.codec.http.HttpResponseStatus:java.lang.String toString()",
                "io.netty.buffer.AbstractByteBuf:java.lang.String toString()",
                "io.netty.buffer.CompositeByteBuf$CompositeByteBufIterator:io.netty.buffer.ByteBuf next()",
                "io.netty.handler.codec.http.multipart.DiskFileUpload:boolean equals(java.lang.Object)",
                "io.netty.handler.codec.DefaultHeaders$HeaderIterator:void remove()",
                "io.netty.util.internal.shaded.org.jctools.queues.BaseLinkedQueue:java.util.Iterator iterator()",
                "io.netty.handler.codec.HeadersUtils$StringEntry:java.lang.String toString()",
                "io.netty.channel.ChannelOutboundBuffer$3:void run()",
                "io.netty.buffer.AdvancedLeakAwareByteBuf:io.netty.buffer.ByteBuf retain()",
                "io.netty.buffer.EmptyByteBuf:boolean equals(java.lang.Object)",
                "io.netty.handler.codec.http.QueryStringDecoder:java.util.Map parameters()",
                "io.netty.handler.codec.http.multipart.DiskFileUpload:int compareTo(java.lang.Object)",
                "io.netty.handler.codec.http.multipart.MixedAttribute:java.lang.String getValue()",
                "io.netty.util.ResourceLeakDetector$Record:java.lang.String toString()",
                "io.netty.handler.codec.protobuf.ProtobufDecoder:void <clinit>()",
                "io.netty.buffer.WrappedByteBuf:io.netty.buffer.ByteBuf writeBytes(byte[])",
                "io.netty.channel.nio.NioEventLoop$6:void run()",
                "io.netty.buffer.WrappedByteBuf:io.netty.buffer.ByteBuf writeShort(int)",
                "io.netty.bootstrap.Bootstrap:io.netty.channel.ChannelFuture connect(java.net.SocketAddress)",
                "io.netty.channel.WriteBufferWaterMark:java.lang.String toString()",
                "io.netty.util.collection.IntObjectHashMap$KeySet:java.util.Iterator iterator()",
                "io.netty.handler.codec.http.HttpMethod:void <clinit>()",
                "io.netty.buffer.AdvancedLeakAwareByteBuf:io.netty.buffer.ByteBuf writeByte(int)",
                "io.netty.buffer.UnreleasableByteBuf:boolean release()",
                "io.netty.util.concurrent.ImmediateExecutor:void execute(java.lang.Runnable)",
                "io.netty.channel.SucceededChannelFuture:java.lang.Throwable cause()",
                "io.netty.bootstrap.AbstractBootstrap:java.lang.String toString()",
                "io.netty.util.internal.AppendableCharSequence:java.lang.String toString()",
                "io.netty.channel.AbstractChannel:io.netty.channel.ChannelPipeline pipeline()",
                "io.netty.buffer.AdvancedLeakAwareByteBuf:float readFloat()",
                "io.netty.util.internal.shaded.org.jctools.queues.atomic.MpscAtomicArrayQueue:java.util.Iterator iterator()",
                "io.netty.buffer.AdvancedLeakAwareByteBuf:double readDouble()",
                "io.netty.handler.codec.protobuf.ProtobufEncoder:void <init>()",
                "io.netty.buffer.WrappedByteBuf:io.netty.buffer.ByteBuf writeChar(int)",
                "io.netty.buffer.UnpooledUnsafeHeapByteBuf:io.netty.buffer.ByteBuf setShort(int,int)",
                "io.netty.buffer.AdvancedLeakAwareByteBuf:short readShort()",
                "io.netty.buffer.CompositeByteBuf:io.netty.buffer.CompositeByteBuf writeFloat(float)",
                "io.netty.handler.codec.http.multipart.MixedFileUpload:int compareTo(java.lang.Object)",
                "io.netty.handler.codec.http.HttpMethod:java.lang.String toString()",
                "io.netty.handler.codec.http.multipart.MixedFileUpload:java.lang.String toString()",
                "io.netty.channel.DelegatingChannelPromiseNotifier:java.lang.Throwable cause()",
                "io.netty.buffer.CompositeByteBuf:java.lang.String toString()",
                "io.netty.bootstrap.Bootstrap:io.netty.channel.ChannelFuture connect(java.lang.String,int)",
                "io.netty.channel.ChannelOption:void <clinit>()",
                "io.netty.buffer.SwappedByteBuf:long readLong()",
                "io.netty.handler.codec.HeadersUtils$StringEntry:java.lang.String getValue()",
                "io.netty.bootstrap.ServerBootstrap:io.netty.bootstrap.ServerBootstrap group(io.netty.channel.EventLoopGroup,io.netty.channel.EventLoopGroup)",
                "io.netty.buffer.AbstractByteBuf:boolean equals(java.lang.Object)",
                "io.netty.handler.codec.HeadersUtils$StringEntry:java.lang.String getKey()",
                "io.netty.util.concurrent.ScheduledFutureTask:int compareTo(java.lang.Object)",
                "io.netty.buffer.WrappedByteBuf:io.netty.buffer.ByteBuf writeInt(int)",
                "io.netty.buffer.AbstractByteBuf:long readLong()",
                "io.netty.util.concurrent.FastThreadLocal$1:void run()",
                "io.netty.util.Signal:boolean equals(java.lang.Object)",
                "io.netty.buffer.CompositeByteBuf:io.netty.buffer.CompositeByteBuf readBytes(byte[])",
                "io.netty.channel.DelegatingChannelPromiseNotifier:io.netty.channel.ChannelPromise addListener(io.netty.util.concurrent.GenericFutureListener)",
                "io.netty.channel.local.LocalAddress:boolean equals(java.lang.Object)",
                "io.netty.util.collection.IntObjectHashMap$EntrySet:java.util.Iterator iterator()",
                "io.netty.buffer.CompositeByteBuf:io.netty.buffer.CompositeByteBuf writeByte(int)",
                "io.netty.handler.codec.HeadersUtils$StringEntryIterator:java.util.Map$Entry next()",
                "io.netty.handler.codec.HeadersUtils$DelegatingStringSet:boolean contains(java.lang.Object)",
                "io.netty.buffer.EmptyByteBuf:io.netty.buffer.ByteBuf writeShort(int)",
                "io.netty.handler.codec.DefaultHeaders$ValueIterator:boolean hasNext()",
                "io.netty.channel.epoll.Epoll:void <clinit>()",
                "io.netty.util.collection.IntObjectHashMap$2$1:void remove()",
                "io.netty.util.concurrent.GlobalEventExecutor$TaskRunner:void run()",
                "io.netty.channel.nio.NioEventLoopGroup:void <init>(int)",
                "io.netty.util.internal.DefaultPriorityQueue$PriorityQueueIterator:boolean hasNext()",
                "io.netty.handler.codec.http.DefaultFullHttpRequest:boolean equals(java.lang.Object)",
                "io.netty.buffer.EmptyByteBuf:io.netty.buffer.ByteBuf writeBoolean(boolean)",
                "io.netty.handler.codec.http.HttpVersion:boolean equals(java.lang.Object)",
                "io.netty.buffer.AdvancedLeakAwareByteBuf:io.netty.buffer.ByteBuf writeShort(int)",
                "io.netty.util.internal.shaded.org.jctools.queues.BaseLinkedQueue:int size()",
                "io.netty.util.concurrent.SingleThreadEventExecutor:void execute(java.lang.Runnable)",
                "io.netty.bootstrap.AbstractBootstrap:io.netty.bootstrap.AbstractBootstrap handler(io.netty.channel.ChannelHandler)",
                "io.netty.buffer.SwappedByteBuf:boolean release()",
                "io.netty.buffer.CompositeByteBuf:io.netty.buffer.CompositeByteBuf writeBoolean(boolean)",
                "io.netty.handler.codec.http.DefaultHttpRequest:io.netty.handler.codec.http.HttpMethod method()",
                "io.netty.buffer.AdvancedLeakAwareByteBuf:byte readByte()",
                "io.netty.channel.local.LocalAddress:void <init>(java.lang.String)",
                "io.netty.handler.codec.http.multipart.MemoryFileUpload:boolean equals(java.lang.Object)",
                "io.netty.buffer.AbstractUnsafeSwappedByteBuf:io.netty.buffer.ByteBuf writeInt(int)",
                "io.netty.buffer.Unpooled:io.netty.buffer.ByteBuf buffer()",
                "io.netty.channel.AbstractChannel:io.netty.channel.EventLoop eventLoop()",
                "io.netty.handler.codec.MessageToMessageCodec:void <init>()",
                "io.netty.buffer.AbstractByteBuf:io.netty.buffer.ByteBuf writeBytes(byte[])",
                "io.netty.util.internal.shaded.org.jctools.queues.atomic.MpscAtomicArrayQueue:java.lang.String toString()",
                "io.netty.bootstrap.Bootstrap:void <init>()",
                "io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueue:java.lang.Object poll()",
                "io.netty.util.collection.IntObjectHashMap:boolean equals(java.lang.Object)",
                "io.netty.channel.DefaultAddressedEnvelope:java.lang.String toString()",
                "io.netty.buffer.AdvancedLeakAwareByteBuf:char readChar()",
                "io.netty.buffer.WrappedByteBuf:io.netty.buffer.ByteBuf setShort(int,int)",
                "io.netty.channel.VoidChannelPromise:java.lang.Throwable cause()",
                "io.netty.util.concurrent.AbstractScheduledEventExecutor:io.netty.util.concurrent.ScheduledFuture scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)",
                "io.netty.util.internal.ConcurrentSet:void clear()",
                "io.netty.util.AbstractConstant:int compareTo(java.lang.Object)",
                "io.netty.buffer.AbstractByteBuf:io.netty.buffer.ByteBuf setShort(int,int)",
                "io.netty.handler.codec.http.DefaultFullHttpResponse:void <init>(io.netty.handler.codec.http.HttpVersion,io.netty.handler.codec.http.HttpResponseStatus,io.netty.buffer.ByteBuf)",
                "io.netty.channel.AbstractChannel$AbstractUnsafe$4$1:void run()",
                "io.netty.buffer.EmptyByteBuf:short readShort()",
                "io.netty.buffer.WrappedByteBuf:boolean readBoolean()",
                "io.netty.channel.DefaultChannelPipeline$PendingHandlerAddedTask:void run()",
                "io.netty.handler.ssl.PemX509Certificate:java.lang.String toString()",
                "io.netty.handler.codec.http.DefaultHttpHeaders$3:boolean hasNext()",
                "io.netty.buffer.PoolArena:java.lang.String toString()",
                "io.netty.buffer.EmptyByteBuf:io.netty.buffer.ByteBuf writeInt(int)",
                "io.netty.util.ReferenceCountUtil$ReleasingTask:void run()",
                "io.netty.channel.DefaultChannelPipeline$PendingHandlerRemovedTask:void run()",
                "io.netty.util.internal.RecyclableArrayList:void add(int,java.lang.Object)",
                "io.netty.buffer.CompositeByteBuf:io.netty.buffer.CompositeByteBuf writeLong(long)",
                "io.netty.buffer.SwappedByteBuf:float readFloat()",
                "io.netty.util.collection.IntObjectHashMap$2:java.util.Iterator iterator()",
                "io.netty.buffer.PooledByteBufAllocator:void <clinit>()",
                "io.netty.buffer.SwappedByteBuf:io.netty.buffer.ByteBuf readBytes(byte[],int,int)",
                "io.netty.bootstrap.Bootstrap:io.netty.bootstrap.Bootstrap clone()",
                "io.netty.buffer.AbstractByteBuf:boolean readBoolean()",
                "io.netty.buffer.AbstractByteBufAllocator:java.lang.String toString()",
                "io.netty.bootstrap.ServerBootstrapConfig:java.lang.String toString()",
                "io.netty.channel.AbstractChannel:io.netty.channel.ChannelFuture close()",
                "io.netty.buffer.AbstractByteBuf:io.netty.buffer.ByteBuf writeLong(long)",
                "io.netty.bootstrap.AbstractBootstrap:io.netty.bootstrap.AbstractBootstrap channel(java.lang.Class)",
                "io.netty.buffer.SwappedByteBuf:io.netty.buffer.ByteBuf retain()",
                "io.netty.buffer.PooledSlicedByteBuf:io.netty.buffer.ByteBuf setShort(int,int)",
                "io.netty.handler.codec.http.multipart.MixedAttribute:int compareTo(java.lang.Object)",
                "io.netty.util.concurrent.AbstractScheduledEventExecutor:io.netty.util.concurrent.ScheduledFuture schedule(java.util.concurrent.Callable,long,java.util.concurrent.TimeUnit)",
                "io.netty.util.internal.shaded.org.jctools.queues.ConcurrentCircularArrayQueue:boolean isEmpty()",
                "io.netty.channel.AbstractChannelHandlerContext$AbstractWriteTask:void run()",
                "io.netty.handler.codec.http.HttpVersion:void <clinit>()",
                "io.netty.util.concurrent.FastThreadLocalRunnable:void run()",
                "io.netty.bootstrap.BootstrapConfig:java.lang.String toString()",
                "io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueue:java.lang.Object peek()",
                "io.netty.channel.SingleThreadEventLoop:void <clinit>()",
                "io.netty.handler.codec.http.multipart.MemoryFileUpload:int compareTo(java.lang.Object)",
                "io.netty.channel.nio.NioEventLoopGroup:void <init>()",
                "io.netty.buffer.SwappedByteBuf:io.netty.buffer.ByteBuf writeBoolean(boolean)",
                "io.netty.handler.codec.http.DefaultFullHttpResponse:boolean equals(java.lang.Object)",
                "io.netty.channel.DefaultChannelProgressivePromise:io.netty.channel.ChannelProgressivePromise addListener(io.netty.util.concurrent.GenericFutureListener)",
                "io.netty.util.internal.shaded.org.jctools.queues.ConcurrentCircularArrayQueue:java.lang.String toString()",
                "io.netty.handler.ssl.SslHandler$8$1:void run()",
                "io.netty.handler.codec.http.DefaultHttpRequest:boolean equals(java.lang.Object)",
                "io.netty.util.concurrent.PromiseTask$RunnableAdapter:java.lang.String toString()",
                "io.netty.util.internal.shaded.org.jctools.queues.atomic.SpscLinkedAtomicQueue:java.lang.String toString()",
                "io.netty.buffer.FixedCompositeByteBuf:java.lang.String toString()",
                "io.netty.handler.codec.http.DefaultHttpHeaders:io.netty.handler.codec.http.HttpHeaders add(java.lang.CharSequence,java.lang.Object)",
                "io.netty.handler.codec.http.HttpResponseStatus:boolean equals(java.lang.Object)",
                "io.netty.buffer.AdvancedLeakAwareByteBuf:io.netty.buffer.ByteBuf writeInt(int)",
                "io.netty.handler.codec.http.multipart.DiskFileUpload:java.lang.String toString()",
                "io.netty.buffer.EmptyByteBuf:byte readByte()",
                "io.netty.buffer.WrappedByteBuf:int readableBytes()",
                "io.netty.handler.codec.DefaultHeaders$HeaderIterator:boolean hasNext()",
                "io.netty.handler.codec.http.multipart.MemoryAttribute:int compareTo(java.lang.Object)",
                "io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseMpscLinkedAtomicArrayQueue:int size()",
                "io.netty.channel.epoll.EpollEventLoopGroup:void <init>(int)",
                "io.netty.buffer.UnreleasableByteBuf:io.netty.buffer.ByteBuf retain()",
                "io.netty.buffer.SimpleLeakAwareByteBuf:boolean release()",
                "io.netty.handler.codec.http.multipart.DiskAttribute:java.lang.String getValue()",
                "io.netty.handler.codec.http.multipart.MemoryAttribute:java.lang.String toString()",
                "io.netty.buffer.CompositeByteBuf:io.netty.buffer.CompositeByteBuf writeDouble(double)",
                "io.netty.channel.CompleteChannelFuture:io.netty.channel.Channel channel()",
                "io.netty.buffer.CompositeByteBuf$CompositeByteBufIterator:void remove()",
                "io.netty.buffer.ReadOnlyByteBufferBuf:io.netty.buffer.ByteBuf setShort(int,int)",
                "io.netty.channel.DefaultChannelId:int compareTo(java.lang.Object)",
                "io.netty.handler.codec.http.QueryStringDecoder:java.lang.String toString()",
                "io.netty.util.AsciiString:boolean equals(java.lang.Object)",
                "io.netty.util.collection.IntObjectHashMap:java.util.Collection values()",
                "io.netty.handler.codec.CodecOutputList:int size()",
                "io.netty.channel.VoidChannelPromise:io.netty.channel.VoidChannelPromise sync()",
                "io.netty.handler.codec.protobuf.ProtobufVarint32FrameDecoder:void <init>()",
                "io.netty.handler.codec.CodecOutputList:java.lang.Object remove(int)",
                "io.netty.buffer.WrappedByteBuf:boolean equals(java.lang.Object)",
                "io.netty.channel.local.LocalAddress:void <clinit>()",
                "io.netty.handler.codec.HeadersUtils$1:int size()",
                "io.netty.handler.codec.http.multipart.MemoryAttribute:java.lang.String getValue()",
                "io.netty.handler.codec.http.HttpObjectAggregator$AggregatedFullHttpRequest:io.netty.handler.codec.http.HttpMethod method()",
                "io.netty.buffer.CompositeByteBuf$CompositeByteBufIterator:boolean hasNext()",
                "io.netty.channel.epoll.EpollEventLoopGroup:void <init>()",
                "io.netty.bootstrap.Bootstrap$3:void run()",
                "io.netty.channel.ChannelOutboundBuffer$2:void run()",
                "io.netty.buffer.AbstractUnsafeSwappedByteBuf:io.netty.buffer.ByteBuf writeDouble(double)",
                "io.netty.buffer.EmptyByteBuf:io.netty.buffer.ByteBuf writeDouble(double)",
                "io.netty.handler.codec.http.HttpObjectAggregator$AggregatedFullHttpMessage:io.netty.handler.codec.DecoderResult decoderResult()",
                "io.netty.buffer.SwappedByteBuf:int compareTo(java.lang.Object)",
                "io.netty.channel.unix.Socket:java.lang.String toString()",
                "io.netty.util.collection.IntObjectHashMap:boolean isEmpty()",
                "io.netty.buffer.AbstractDerivedByteBuf:boolean release()",
                "io.netty.util.Signal:int compareTo(java.lang.Object)",
                "io.netty.util.collection.IntObjectHashMap$MapEntry:java.lang.Integer getKey()",
                "io.netty.buffer.SwappedByteBuf:double readDouble()",
                "io.netty.util.internal.shaded.org.jctools.queues.atomic.SpscLinkedAtomicQueue:java.lang.Object poll()",
                "io.netty.bootstrap.ServerBootstrap:io.netty.bootstrap.ServerBootstrap clone()",
                "io.netty.buffer.WrappedByteBuf:io.netty.buffer.ByteBuf readBytes(byte[])",
                "io.netty.util.collection.IntObjectHashMap$KeySet:boolean contains(java.lang.Object)",
                "io.netty.buffer.UnpooledDirectByteBuf:io.netty.buffer.ByteBuf readBytes(byte[],int,int)",
                "io.netty.handler.codec.DecoderResult:java.lang.String toString()",
                "io.netty.buffer.AbstractUnpooledSlicedByteBuf:io.netty.buffer.ByteBuf setShort(int,int)",
                "io.netty.channel.DefaultEventLoop:void <init>()",
                "io.netty.buffer.AbstractDerivedByteBuf:io.netty.buffer.ByteBuf retain()",
                "io.netty.buffer.AbstractByteBuf:short readShort()",
                "io.netty.handler.codec.DecoderResult:boolean isSuccess()",
                "io.netty.channel.DelegatingChannelPromiseNotifier:boolean isSuccess()",
                "io.netty.handler.codec.http.HttpObjectAggregator:void <init>(int)",
                "io.netty.util.internal.shaded.org.jctools.queues.ConcurrentCircularArrayQueue:java.util.Iterator iterator()",
                "io.netty.buffer.AdvancedLeakAwareByteBuf:io.netty.buffer.ByteBuf writeBytes(byte[])",
                "io.netty.channel.DefaultChannelPipeline$8:void run()",
                "io.netty.buffer.AdvancedLeakAwareByteBuf:io.netty.buffer.ByteBuf writeFloat(float)",
                "io.netty.handler.codec.http.multipart.MixedFileUpload:boolean equals(java.lang.Object)",
                "io.netty.buffer.WrappedByteBuf:char readChar()",
                "io.netty.handler.codec.http.HttpObjectAggregator$AggregatedFullHttpRequest:java.lang.String toString()",
                "io.netty.util.collection.IntObjectHashMap$KeySet$1:void remove()",
                "io.netty.buffer.AbstractUnsafeSwappedByteBuf:io.netty.buffer.ByteBuf setShort(int,int)",
                "io.netty.util.collection.IntObjectHashMap:int size()",
                "io.netty.handler.codec.http.HttpMethod:boolean equals(java.lang.Object)",
                "io.netty.handler.codec.http.DefaultFullHttpResponse:io.netty.buffer.ByteBuf content()",
                "io.netty.buffer.SwappedByteBuf:io.netty.buffer.ByteBuf writeShort(int)",
                "io.netty.handler.codec.HeadersUtils$CharSequenceDelegatingStringSet:boolean add(java.lang.Object)",
                "io.netty.util.internal.shaded.org.jctools.queues.SpscLinkedQueue:boolean offer(java.lang.Object)",
                "io.netty.util.internal.RecyclableArrayList:boolean addAll(java.util.Collection)",
                "io.netty.bootstrap.ServerBootstrap:io.netty.bootstrap.ServerBootstrap childOption(io.netty.channel.ChannelOption,java.lang.Object)",
                "io.netty.handler.codec.DefaultHeaders$ValueIterator:void remove()",
                "io.netty.handler.codec.CodecOutputList:boolean add(java.lang.Object)",
                "io.netty.buffer.SwappedByteBuf:io.netty.buffer.ByteBuf setShort(int,int)",
                "io.netty.handler.codec.http.HttpVersion:int compareTo(java.lang.Object)",
                "io.netty.buffer.AdvancedLeakAwareByteBuf:int readInt()",
                "io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseLinkedAtomicQueue:java.util.Iterator iterator()",
                "io.netty.util.collection.IntObjectHashMap$MapIterator:void remove()",
                "io.netty.handler.codec.http.DefaultHttpRequest:java.lang.String uri()",
                "io.netty.buffer.AdvancedLeakAwareByteBuf:long readLong()",
                "io.netty.handler.codec.LengthFieldBasedFrameDecoder:void <init>(int,int,int,int,int)",
                "io.netty.buffer.SwappedByteBuf:int readableBytes()",
                "io.netty.handler.timeout.ReadTimeoutHandler:void <clinit>()",
                "io.netty.buffer.EmptyByteBuf:java.lang.String toString()",
                "io.netty.buffer.WrappedByteBuf:io.netty.buffer.ByteBuf writeDouble(double)",
                "io.netty.util.ReferenceCountUtil$ReleasingTask:java.lang.String toString()",
                "io.netty.util.collection.IntObjectHashMap$KeySet:boolean remove(java.lang.Object)",
                "io.netty.util.internal.ObjectCleaner$AutomaticCleanerReference:void clear()",
                "io.netty.handler.codec.http.multipart.HttpPostRequestDecoder:java.util.List getBodyHttpDatas()",
                "io.netty.channel.DelegatingChannelPromiseNotifier:io.netty.channel.Channel channel()",
                "io.netty.channel.VoidChannelPromise:io.netty.channel.Channel channel()",
                "io.netty.handler.codec.HeadersUtils$1:java.lang.String get(int)",
                "io.netty.util.concurrent.DefaultPromise:boolean isSuccess()",
                "io.netty.buffer.PoolChunk:java.lang.String toString()",
                "io.netty.handler.codec.http.multipart.MemoryFileUpload:java.lang.String toString()",
                "io.netty.buffer.AdvancedLeakAwareByteBuf:io.netty.buffer.ByteBuf writeDouble(double)",
                "io.netty.buffer.WrappedByteBuf:io.netty.buffer.ByteBuf writeBoolean(boolean)",
                "io.netty.handler.codec.DefaultHeaders:boolean equals(java.lang.Object)",
                "io.netty.buffer.AdvancedLeakAwareByteBuf:io.netty.buffer.ByteBuf readBytes(byte[],int,int)",
                "io.netty.util.concurrent.DefaultPromise$4:void run()",
                "io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseMpscLinkedAtomicArrayQueue:java.lang.Object peek()",
                "io.netty.handler.codec.HeadersUtils$StringEntryIterator:boolean hasNext()",
                "io.netty.handler.codec.http.HttpServerUpgradeHandler$UpgradeEvent:java.lang.String toString()",
                "io.netty.util.concurrent.AbstractEventExecutor:boolean inEventLoop()",
                "io.netty.buffer.EmptyByteBuf:int readableBytes()",
                "io.netty.handler.codec.http.HttpObjectAggregator$AggregatedFullHttpRequest:java.lang.String uri()",
                "io.netty.util.concurrent.DefaultPromise$1:void run()",
                "io.netty.util.collection.IntObjectHashMap$MapIterator:java.util.Map$Entry next()",
                "io.netty.channel.VoidChannelPromise:io.netty.channel.VoidChannelPromise addListener(io.netty.util.concurrent.GenericFutureListener)",
                "io.netty.util.collection.IntObjectHashMap$PrimitiveIterator:void remove()",
                "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.Channel channel()",
                "io.netty.buffer.WrappedByteBuf:short readShort()",
                "io.netty.bootstrap.AbstractBootstrap:io.netty.bootstrap.AbstractBootstrap group(io.netty.channel.EventLoopGroup)",
                "io.netty.buffer.PooledByteBufAllocatorMetric:java.lang.String toString()",
                "io.netty.buffer.EmptyByteBuf:int compareTo(java.lang.Object)",
                "io.netty.channel.DefaultChannelPromise:io.netty.channel.ChannelPromise sync()",
                "io.netty.buffer.AbstractByteBuf:io.netty.buffer.ByteBuf writeByte(int)",
                "io.netty.buffer.SwappedByteBuf:io.netty.buffer.ByteBuf writeChar(int)",
                "io.netty.util.internal.DefaultPriorityQueue$PriorityQueueIterator:void remove()",
                "io.netty.buffer.AbstractByteBuf:int readableBytes()",
                "io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseLinkedAtomicQueue:boolean isEmpty()",
                "io.netty.buffer.EmptyByteBuf:io.netty.buffer.ByteBuf writeLong(long)",
                "io.netty.buffer.EmptyByteBuf:io.netty.buffer.ByteBuf readBytes(byte[])",
                "io.netty.channel.ChannelInitializer:void <init>()",
                "io.netty.util.concurrent.AbstractScheduledEventExecutor:void <clinit>()",
                "io.netty.buffer.AbstractUnsafeSwappedByteBuf:io.netty.buffer.ByteBuf writeChar(int)",
                "io.netty.channel.DelegatingChannelPromiseNotifier:java.lang.Void get(long,java.util.concurrent.TimeUnit)",
                "io.netty.buffer.EmptyByteBuf:io.netty.buffer.ByteBuf setShort(int,int)",
                "io.netty.util.collection.IntObjectHashMap$2$1:boolean hasNext()",
                "io.netty.channel.epoll.EpollSocketChannel:java.net.InetSocketAddress localAddress()",
                "io.netty.util.concurrent.AbstractFuture:java.lang.Object get(long,java.util.concurrent.TimeUnit)",
                "io.netty.util.internal.shaded.org.jctools.queues.atomic.AtomicReferenceArrayQueue:boolean isEmpty()",
                "io.netty.util.collection.IntObjectHashMap$KeySet:boolean retainAll(java.util.Collection)",
                "io.netty.util.internal.ConcurrentSet:int size()",
                "io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseMpscLinkedAtomicArrayQueue:boolean offer(java.lang.Object)",
                "io.netty.buffer.WrappedByteBuf:java.lang.String toString()",
                "io.netty.handler.codec.http.multipart.MixedAttribute:boolean equals(java.lang.Object)",
                "io.netty.util.AbstractConstant:java.lang.String toString()",
                "io.netty.handler.codec.http.HttpServerCodec:void <init>()",
                "io.netty.buffer.EmptyByteBuf:io.netty.buffer.ByteBuf writeChar(int)",
                "io.netty.handler.codec.http.multipart.MixedAttribute:java.lang.String toString()",
                "io.netty.handler.ssl.SslHandler$1:void run()",
                "io.netty.handler.codec.DefaultHeaders$HeaderEntry:java.lang.String toString()",
                "io.netty.buffer.PoolSubpage:java.lang.String toString()",
                "io.netty.util.collection.IntObjectHashMap:java.lang.String toString()",
                "io.netty.util.concurrent.DefaultPromise:java.lang.Throwable cause()",
                "io.netty.channel.DefaultChannelPipeline$5:void run()",
                "io.netty.buffer.AbstractByteBuf:io.netty.buffer.ByteBuf writeFloat(float)",
                "io.netty.handler.codec.http.HttpHeaders:java.lang.String toString()",
                "io.netty.handler.codec.CodecOutputList:void add(int,java.lang.Object)",
                "io.netty.buffer.PooledDuplicatedByteBuf:io.netty.buffer.ByteBuf setShort(int,int)",
                "io.netty.handler.codec.DefaultHeaders$HeaderIterator:java.util.Map$Entry next()",
                "io.netty.handler.codec.protobuf.ProtobufDecoder:void <init>(com.google.protobuf.MessageLite)",
                "io.netty.handler.codec.DefaultHeaders$HeaderEntry:boolean equals(java.lang.Object)",
                "io.netty.handler.ssl.SslCompletionEvent:java.lang.String toString()",
                "io.netty.handler.timeout.ReadTimeoutHandler:void <init>(int)",
                "io.netty.util.internal.shaded.org.jctools.queues.BaseLinkedQueue:boolean isEmpty()",
                "io.netty.handler.codec.http.multipart.AbstractHttpData:java.lang.String getName()",
                "io.netty.handler.codec.http.DefaultHttpMessage:io.netty.handler.codec.http.HttpHeaders headers()",
                "io.netty.buffer.EmptyByteBuf:double readDouble()",
                "io.netty.channel.AbstractChannel:boolean isWritable()"
            ],
            "CVE": [
                "CVE-2019-16869"
            ],
            "used vul-method": [
                "io.netty.channel.AbstractChannel$AbstractUnsafe$6$1:void run()",
                "io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext$1:void run()",
                "io.netty.util.concurrent.AbstractScheduledEventExecutor:io.netty.util.concurrent.ScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)",
                "io.netty.channel.DefaultChannelPipeline$4:void run()",
                "io.netty.bootstrap.AbstractBootstrap:io.netty.channel.ChannelFuture bind(int)",
                "io.netty.channel.DefaultChannelPipeline$3:void run()",
                "io.netty.channel.AbstractChannel:io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object)",
                "io.netty.bootstrap.AbstractBootstrap:io.netty.channel.ChannelFuture bind(java.net.SocketAddress)",
                "io.netty.util.concurrent.DefaultPromise$2:void run()",
                "io.netty.handler.ssl.SslHandler$3:void run()",
                "io.netty.channel.DefaultChannelPipeline$7:void run()",
                "io.netty.util.concurrent.AbstractScheduledEventExecutor:io.netty.util.concurrent.ScheduledFuture scheduleWithFixedDelay(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)",
                "io.netty.channel.DefaultChannelPipeline$2:void run()",
                "io.netty.util.concurrent.ScheduledFutureTask:void run()",
                "io.netty.channel.CompleteChannelFuture:io.netty.channel.ChannelFuture addListener(io.netty.util.concurrent.GenericFutureListener)",
                "io.netty.channel.DefaultChannelPromise:io.netty.channel.ChannelPromise addListener(io.netty.util.concurrent.GenericFutureListener)",
                "io.netty.channel.DefaultEventLoopGroup:void <init>(int)",
                "io.netty.channel.DefaultChannelPipeline$9:void run()",
                "io.netty.handler.ssl.SslHandler$5:void run()",
                "io.netty.channel.DefaultChannelPipeline$6:void run()",
                "io.netty.channel.ChannelOutboundBuffer$3:void run()",
                "io.netty.bootstrap.Bootstrap:io.netty.channel.ChannelFuture connect(java.net.SocketAddress)",
                "io.netty.bootstrap.Bootstrap:io.netty.channel.ChannelFuture connect(java.lang.String,int)",
                "io.netty.channel.DelegatingChannelPromiseNotifier:io.netty.channel.ChannelPromise addListener(io.netty.util.concurrent.GenericFutureListener)",
                "io.netty.channel.nio.NioEventLoopGroup:void <init>(int)",
                "io.netty.util.concurrent.SingleThreadEventExecutor:void execute(java.lang.Runnable)",
                "io.netty.util.concurrent.AbstractScheduledEventExecutor:io.netty.util.concurrent.ScheduledFuture scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)",
                "io.netty.channel.AbstractChannel$AbstractUnsafe$4$1:void run()",
                "io.netty.channel.DefaultChannelPipeline$PendingHandlerAddedTask:void run()",
                "io.netty.channel.DefaultChannelPipeline$PendingHandlerRemovedTask:void run()",
                "io.netty.channel.AbstractChannel:io.netty.channel.ChannelFuture close()",
                "io.netty.util.concurrent.AbstractScheduledEventExecutor:io.netty.util.concurrent.ScheduledFuture schedule(java.util.concurrent.Callable,long,java.util.concurrent.TimeUnit)",
                "io.netty.channel.AbstractChannelHandlerContext$AbstractWriteTask:void run()",
                "io.netty.util.concurrent.FastThreadLocalRunnable:void run()",
                "io.netty.channel.nio.NioEventLoopGroup:void <init>()",
                "io.netty.channel.DefaultChannelProgressivePromise:io.netty.channel.ChannelProgressivePromise addListener(io.netty.util.concurrent.GenericFutureListener)",
                "io.netty.channel.epoll.EpollEventLoopGroup:void <init>(int)",
                "io.netty.channel.epoll.EpollEventLoopGroup:void <init>()",
                "io.netty.bootstrap.Bootstrap$3:void run()",
                "io.netty.channel.ChannelOutboundBuffer$2:void run()",
                "io.netty.channel.DefaultChannelPipeline$8:void run()",
                "io.netty.util.concurrent.DefaultPromise$1:void run()",
                "io.netty.handler.ssl.SslHandler$1:void run()",
                "io.netty.channel.DefaultChannelPipeline$5:void run()"
            ],
            "vul-called frequency": 469,
            "related vul root method": {
                "CVE-2019-16869": [
                    "io.netty.handler.codec.http.HttpObjectDecoder:void splitHeader(io.netty.util.internal.AppendableCharSequence)"
                ]
            },
            "CVE-API": {
                "CVE-2019-16869": [
                    "io.netty.channel.AbstractChannel$AbstractUnsafe$6$1:void run()",
                    "io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext$1:void run()",
                    "io.netty.util.concurrent.AbstractScheduledEventExecutor:io.netty.util.concurrent.ScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)",
                    "io.netty.channel.DefaultChannelPipeline$4:void run()",
                    "io.netty.bootstrap.AbstractBootstrap:io.netty.channel.ChannelFuture bind(int)",
                    "io.netty.channel.DefaultChannelPipeline$3:void run()",
                    "io.netty.channel.AbstractChannel:io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object)",
                    "io.netty.bootstrap.AbstractBootstrap:io.netty.channel.ChannelFuture bind(java.net.SocketAddress)",
                    "io.netty.util.concurrent.DefaultPromise$2:void run()",
                    "io.netty.handler.ssl.SslHandler$3:void run()",
                    "io.netty.channel.DefaultChannelPipeline$7:void run()",
                    "io.netty.util.concurrent.AbstractScheduledEventExecutor:io.netty.util.concurrent.ScheduledFuture scheduleWithFixedDelay(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)",
                    "io.netty.channel.DefaultChannelPipeline$2:void run()",
                    "io.netty.util.concurrent.ScheduledFutureTask:void run()",
                    "io.netty.channel.CompleteChannelFuture:io.netty.channel.ChannelFuture addListener(io.netty.util.concurrent.GenericFutureListener)",
                    "io.netty.channel.DefaultChannelPromise:io.netty.channel.ChannelPromise addListener(io.netty.util.concurrent.GenericFutureListener)",
                    "io.netty.channel.DefaultEventLoopGroup:void <init>(int)",
                    "io.netty.channel.DefaultChannelPipeline$9:void run()",
                    "io.netty.handler.ssl.SslHandler$5:void run()",
                    "io.netty.channel.DefaultChannelPipeline$6:void run()",
                    "io.netty.channel.ChannelOutboundBuffer$3:void run()",
                    "io.netty.bootstrap.Bootstrap:io.netty.channel.ChannelFuture connect(java.net.SocketAddress)",
                    "io.netty.bootstrap.Bootstrap:io.netty.channel.ChannelFuture connect(java.lang.String,int)",
                    "io.netty.channel.DelegatingChannelPromiseNotifier:io.netty.channel.ChannelPromise addListener(io.netty.util.concurrent.GenericFutureListener)",
                    "io.netty.channel.nio.NioEventLoopGroup:void <init>(int)",
                    "io.netty.util.concurrent.SingleThreadEventExecutor:void execute(java.lang.Runnable)",
                    "io.netty.util.concurrent.AbstractScheduledEventExecutor:io.netty.util.concurrent.ScheduledFuture scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)",
                    "io.netty.channel.AbstractChannel$AbstractUnsafe$4$1:void run()",
                    "io.netty.channel.DefaultChannelPipeline$PendingHandlerAddedTask:void run()",
                    "io.netty.channel.DefaultChannelPipeline$PendingHandlerRemovedTask:void run()",
                    "io.netty.channel.AbstractChannel:io.netty.channel.ChannelFuture close()",
                    "io.netty.util.concurrent.AbstractScheduledEventExecutor:io.netty.util.concurrent.ScheduledFuture schedule(java.util.concurrent.Callable,long,java.util.concurrent.TimeUnit)",
                    "io.netty.channel.AbstractChannelHandlerContext$AbstractWriteTask:void run()",
                    "io.netty.util.concurrent.FastThreadLocalRunnable:void run()",
                    "io.netty.channel.nio.NioEventLoopGroup:void <init>()",
                    "io.netty.channel.DefaultChannelProgressivePromise:io.netty.channel.ChannelProgressivePromise addListener(io.netty.util.concurrent.GenericFutureListener)",
                    "io.netty.channel.epoll.EpollEventLoopGroup:void <init>(int)",
                    "io.netty.channel.epoll.EpollEventLoopGroup:void <init>()",
                    "io.netty.bootstrap.Bootstrap$3:void run()",
                    "io.netty.channel.ChannelOutboundBuffer$2:void run()",
                    "io.netty.channel.DefaultChannelPipeline$8:void run()",
                    "io.netty.util.concurrent.DefaultPromise$1:void run()",
                    "io.netty.handler.ssl.SslHandler$1:void run()",
                    "io.netty.channel.DefaultChannelPipeline$5:void run()"
                ]
            }
        },
        "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.9.4": {
            "used-method num": 0,
            "used method": []
        },
        "org.apache.poi:poi-ooxml:4.0.0": {
            "used-method num": 51,
            "used method": [
                "org.apache.poi.ooxml.POIXMLDocumentPart:java.lang.String toString()",
                "org.apache.poi.xssf.usermodel.XSSFSheet:int getLastRowNum()",
                "org.apache.poi.xssf.usermodel.XSSFWorkbook$SheetIterator:void remove()",
                "org.apache.poi.xssf.usermodel.XSSFWorkbook:void <clinit>()",
                "org.apache.poi.xssf.usermodel.XSSFWorkbook$SheetIterator:org.apache.poi.ss.usermodel.Sheet next()",
                "org.apache.poi.xssf.usermodel.XSSFTextParagraph:java.lang.String toString()",
                "org.apache.poi.xssf.usermodel.XSSFTextRun:java.lang.String toString()",
                "org.apache.poi.openxml4j.opc.PackageRelationship:boolean equals(java.lang.Object)",
                "org.apache.poi.xssf.usermodel.XSSFCellStyle:java.lang.Object clone()",
                "org.apache.poi.xssf.usermodel.XSSFConditionalFormatting:java.lang.String toString()",
                "org.apache.poi.openxml4j.opc.PackagePartName:java.lang.String toString()",
                "org.apache.poi.xssf.util.CTColComparator$2:int compare(java.lang.Object,java.lang.Object)",
                "org.apache.poi.xssf.usermodel.extensions.XSSFCellBorder:boolean equals(java.lang.Object)",
                "org.apache.poi.xssf.usermodel.XSSFRichTextString:java.lang.String toString()",
                "org.apache.poi.xssf.usermodel.XSSFCell:java.lang.String toString()",
                "org.apache.poi.xssf.usermodel.XSSFCell:org.apache.poi.ss.usermodel.CellType getCellType()",
                "org.apache.poi.openxml4j.opc.PackagePart:int compareTo(java.lang.Object)",
                "org.apache.poi.openxml4j.opc.ZipPackage$EntryTriple:int compareTo(java.lang.Object)",
                "org.apache.poi.xssf.usermodel.XSSFRow:int compareTo(java.lang.Object)",
                "org.apache.poi.xssf.util.CTColComparator$1:int compare(java.lang.Object,java.lang.Object)",
                "org.apache.poi.xssf.usermodel.XSSFSheet:org.apache.poi.xssf.usermodel.XSSFRow getRow(int)",
                "org.apache.poi.xssf.usermodel.XSSFFont:java.lang.String toString()",
                "org.apache.poi.openxml4j.opc.internal.ContentType:java.lang.String toString()",
                "org.apache.poi.xssf.usermodel.XSSFRow:java.lang.String toString()",
                "org.apache.poi.xssf.usermodel.XSSFRow:org.apache.poi.xssf.usermodel.XSSFCell getCell(int)",
                "org.apache.poi.xssf.usermodel.XSSFSheet$1:int compare(java.lang.Object,java.lang.Object)",
                "org.apache.poi.xssf.usermodel.XSSFColor:boolean equals(java.lang.Object)",
                "org.apache.poi.xssf.usermodel.XSSFWorkbook:org.apache.poi.xssf.usermodel.XSSFSheet getSheetAt(int)",
                "org.apache.poi.xssf.usermodel.XSSFRow:short getFirstCellNum()",
                "org.apache.poi.xssf.usermodel.XSSFSheet:java.lang.String getSheetName()",
                "org.apache.poi.xssf.usermodel.XSSFName:boolean equals(java.lang.Object)",
                "org.apache.poi.xssf.usermodel.XSSFRow:boolean equals(java.lang.Object)",
                "org.apache.poi.xssf.usermodel.XSSFWorkbook:void <init>(java.io.InputStream)",
                "org.apache.poi.openxml4j.opc.internal.ContentType:boolean equals(java.lang.Object)",
                "org.apache.poi.openxml4j.opc.PackageRelationship:java.lang.String toString()",
                "org.apache.poi.xssf.usermodel.XSSFSheet$2:int compare(java.lang.Object,java.lang.Object)",
                "org.apache.poi.openxml4j.opc.PackagePartName:boolean equals(java.lang.Object)",
                "org.apache.poi.xssf.usermodel.XSSFRow:short getLastCellNum()",
                "org.apache.poi.xssf.usermodel.XSSFCell:java.lang.String getStringCellValue()",
                "org.apache.poi.openxml4j.opc.PackagePartName:int compareTo(java.lang.Object)",
                "org.apache.poi.xssf.usermodel.XSSFFont:boolean equals(java.lang.Object)",
                "org.apache.poi.xssf.usermodel.XSSFCell:double getNumericCellValue()",
                "org.apache.poi.xssf.usermodel.XSSFClientAnchor:java.lang.String toString()",
                "org.apache.poi.xssf.usermodel.XSSFCell:boolean getBooleanCellValue()",
                "org.apache.poi.xssf.usermodel.XSSFWorkbook:int getNumberOfSheets()",
                "org.apache.poi.openxml4j.opc.PackageRelationshipCollection:java.lang.String toString()",
                "org.apache.poi.xssf.usermodel.XSSFComment:boolean equals(java.lang.Object)",
                "org.apache.poi.xssf.usermodel.XSSFClientAnchor:boolean equals(java.lang.Object)",
                "org.apache.poi.xssf.usermodel.extensions.XSSFCellFill:boolean equals(java.lang.Object)",
                "org.apache.poi.xssf.usermodel.XSSFWorkbook$SheetIterator:boolean hasNext()",
                "org.apache.poi.openxml4j.opc.PackagePart:java.lang.String toString()"
            ]
        },
        "junit:junit:4.12": {
            "used-method num": 0,
            "used method": []
        }
    }
}
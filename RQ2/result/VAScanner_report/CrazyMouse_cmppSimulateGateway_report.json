{
    "project name": "CrazyMouse_cmppSimulateGateway",
    "vulnerable dependencies": {
        "io.netty:netty-all:4.0.10.Final": {
            "used-method num": 89,
            "used method": [
                "io.netty.buffer.EmptyByteBuf:int writerIndex()",
                "io.netty.channel.group.DefaultChannelGroup:io.netty.channel.group.ChannelGroupFuture flushAndWrite(java.lang.Object,io.netty.channel.group.ChannelMatcher)",
                "io.netty.buffer.AbstractByteBuf:int writerIndex()",
                "io.netty.buffer.SwappedByteBuf:int writerIndex()",
                "io.netty.buffer.SwappedByteBuf:io.netty.buffer.ByteBuf readBytes(byte[],int,int)",
                "io.netty.handler.codec.MessageToByteEncoder:void <init>()",
                "io.netty.buffer.EmptyByteBuf:io.netty.buffer.ByteBuf writeBytes(byte[])",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8$KeySetView:java.util.Iterator iterator()",
                "io.netty.util.internal.chmv8.ForkJoinPool:void execute(java.lang.Runnable)",
                "io.netty.channel.nio.SelectedSelectionKeySet:java.util.Iterator iterator()",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8$ValueIterator:java.lang.Object next()",
                "io.netty.channel.ChannelOption:void <clinit>()",
                "io.netty.util.UniqueName:void <clinit>()",
                "io.netty.util.concurrent.GlobalEventExecutor:void execute(java.lang.Runnable)",
                "io.netty.handler.codec.ReplayingDecoderBuffer:int writerIndex()",
                "io.netty.util.concurrent.GlobalEventExecutor:void <clinit>()",
                "io.netty.channel.ChannelDuplexHandler:void <init>()",
                "io.netty.buffer.UnreleasableByteBuf:int readInt()",
                "io.netty.bootstrap.ServerBootstrap:io.netty.bootstrap.ServerBootstrap group(io.netty.channel.EventLoopGroup,io.netty.channel.EventLoopGroup)",
                "io.netty.bootstrap.ServerBootstrap:void <init>()",
                "io.netty.channel.group.DefaultChannelGroup:void <clinit>()",
                "io.netty.buffer.AbstractByteBuf:boolean equals(java.lang.Object)",
                "io.netty.channel.FailedChannelFuture:io.netty.channel.ChannelFuture sync()",
                "io.netty.buffer.UnreleasableByteBuf:int readerIndex()",
                "io.netty.channel.ChannelInitializer:void <clinit>()",
                "io.netty.bootstrap.AbstractBootstrap:io.netty.bootstrap.AbstractBootstrap channel(java.lang.Class)",
                "io.netty.buffer.UnpooledDirectByteBuf:io.netty.buffer.ByteBuf readBytes(byte[],int,int)",
                "io.netty.channel.DefaultChannelHandlerContext:io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object)",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8:boolean equals(java.lang.Object)",
                "io.netty.handler.codec.ReplayingDecoderBuffer:boolean equals(java.lang.Object)",
                "io.netty.buffer.CompositeByteBuf:io.netty.buffer.CompositeByteBuf readBytes(byte[],int,int)",
                "io.netty.channel.DefaultChannelPromise:io.netty.channel.ChannelPromise sync()",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8$KeyIterator:java.lang.Object next()",
                "io.netty.channel.group.CombinedIterator:java.lang.Object next()",
                "io.netty.channel.DefaultChannelHandlerContext:io.netty.channel.ChannelFuture close()",
                "io.netty.handler.codec.ReplayingDecoderBuffer:io.netty.buffer.ByteBuf readBytes(byte[],int,int)",
                "io.netty.channel.nio.NioEventLoopGroup:void <init>()",
                "io.netty.buffer.EmptyByteBuf:io.netty.buffer.ByteBuf readBytes(byte[],int,int)",
                "io.netty.util.UniqueName:boolean equals(java.lang.Object)",
                "io.netty.channel.group.DefaultChannelGroup:int size()",
                "io.netty.channel.ChannelInitializer:void <init>()",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8$BaseIterator:boolean hasNext()",
                "io.netty.util.concurrent.SingleThreadEventExecutor:void execute(java.lang.Runnable)",
                "io.netty.buffer.EmptyByteBuf:boolean equals(java.lang.Object)",
                "io.netty.bootstrap.ServerBootstrap:void <clinit>()",
                "io.netty.buffer.UnreleasableByteBuf:boolean equals(java.lang.Object)",
                "io.netty.util.ResourceLeakException:boolean equals(java.lang.Object)",
                "io.netty.buffer.EmptyByteBuf:int readerIndex()",
                "io.netty.buffer.SwappedByteBuf:boolean equals(java.lang.Object)",
                "io.netty.buffer.UnreleasableByteBuf:io.netty.buffer.ByteBuf writeBytes(byte[])",
                "io.netty.bootstrap.ServerBootstrap:io.netty.bootstrap.ServerBootstrap childOption(io.netty.channel.ChannelOption,java.lang.Object)",
                "io.netty.buffer.SwappedByteBuf:int readerIndex()",
                "io.netty.util.internal.RecyclableArrayList:boolean add(java.lang.Object)",
                "io.netty.channel.CompleteChannelFuture:io.netty.channel.ChannelFuture sync()",
                "io.netty.buffer.AbstractByteBuf:int readerIndex()",
                "io.netty.util.AttributeKey:void <clinit>()",
                "io.netty.bootstrap.AbstractBootstrap:io.netty.channel.ChannelFuture bind(int)",
                "io.netty.buffer.AbstractByteBuf:io.netty.buffer.ByteBuf writeBytes(byte[])",
                "io.netty.bootstrap.AbstractBootstrap:io.netty.bootstrap.AbstractBootstrap option(io.netty.channel.ChannelOption,java.lang.Object)",
                "io.netty.buffer.UnreleasableByteBuf:io.netty.buffer.ByteBuf readBytes(byte[],int,int)",
                "io.netty.handler.codec.ReplayingDecoder:void <init>()",
                "io.netty.handler.codec.ReplayingDecoderBuffer:io.netty.buffer.ByteBuf writeBytes(byte[])",
                "io.netty.handler.codec.ReplayingDecoderBuffer:int readerIndex()",
                "io.netty.channel.group.DefaultChannelGroup:io.netty.channel.group.ChannelGroupFuture close(io.netty.channel.group.ChannelMatcher)",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8$EntrySetView:java.util.Iterator iterator()",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8$KeySetView:boolean equals(java.lang.Object)",
                "io.netty.buffer.EmptyByteBuf:int readInt()",
                "io.netty.channel.DefaultChannelHandlerContext:io.netty.channel.Channel channel()",
                "io.netty.channel.group.DefaultChannelGroup:java.util.Iterator iterator()",
                "io.netty.handler.timeout.IdleStateHandler:void <init>(int,int,int)",
                "io.netty.handler.codec.ReplayingDecoderBuffer:int readInt()",
                "io.netty.channel.group.DefaultChannelGroup:boolean add(java.lang.Object)",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8$EntrySetView:boolean equals(java.lang.Object)",
                "io.netty.channel.DefaultChannelProgressivePromise:io.netty.channel.ChannelProgressivePromise sync()",
                "io.netty.buffer.SwappedByteBuf:io.netty.buffer.ByteBuf writeBytes(byte[])",
                "io.netty.buffer.SwappedByteBuf:int readInt()",
                "io.netty.util.concurrent.ImmediateEventExecutor:void execute(java.lang.Runnable)",
                "io.netty.buffer.AbstractByteBuf:int readInt()",
                "io.netty.channel.group.CombinedIterator:boolean hasNext()",
                "io.netty.channel.group.DefaultChannelGroup:void <init>(io.netty.util.concurrent.EventExecutor)",
                "io.netty.channel.MultithreadEventLoopGroup:void <clinit>()",
                "io.netty.bootstrap.ServerBootstrap:io.netty.bootstrap.ServerBootstrap childHandler(io.netty.channel.ChannelHandler)",
                "io.netty.buffer.UnreleasableByteBuf:int writerIndex()",
                "io.netty.buffer.CompositeByteBuf:io.netty.buffer.CompositeByteBuf writeBytes(byte[])",
                "io.netty.util.internal.ConcurrentSet:java.util.Iterator iterator()",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8$EntryIterator:java.util.Map$Entry next()",
                "io.netty.buffer.AbstractByteBuf:io.netty.buffer.ByteBuf readBytes(byte[],int,int)",
                "io.netty.util.AttributeKey:void <init>(java.lang.String)",
                "io.netty.handler.codec.ReplayingDecoder:void <clinit>()"
            ]
        },
        "ch.qos.logback:logback-classic:1.0.2": {
            "used-method num": 15,
            "used method": [
                "ch.qos.logback.classic.Logger:void error(java.lang.String)",
                "ch.qos.logback.classic.Logger:void warn(java.lang.String,java.lang.Object)",
                "ch.qos.logback.classic.spi.ThrowableProxyVO:boolean equals(java.lang.Object)",
                "ch.qos.logback.classic.Logger:void error(java.lang.String,java.lang.Throwable)",
                "ch.qos.logback.classic.Logger:void info(java.lang.String)",
                "ch.qos.logback.classic.spi.LoggingEventVO:boolean equals(java.lang.Object)",
                "ch.qos.logback.classic.LoggerContext:void reset()",
                "ch.qos.logback.classic.Logger:void debug(java.lang.String)",
                "ch.qos.logback.classic.joran.JoranConfigurator:void <init>()",
                "ch.qos.logback.classic.spi.StackTraceElementProxy:boolean equals(java.lang.Object)",
                "ch.qos.logback.classic.Logger:void info(java.lang.String,java.lang.Object)",
                "ch.qos.logback.classic.Logger:void info(java.lang.String,java.lang.Object,java.lang.Object)",
                "ch.qos.logback.classic.Logger:void warn(java.lang.String,java.lang.Throwable)",
                "ch.qos.logback.classic.spi.ClassPackagingData:boolean equals(java.lang.Object)",
                "ch.qos.logback.classic.Logger:void debug(java.lang.String,java.lang.Object)"
            ]
        }
    }
}
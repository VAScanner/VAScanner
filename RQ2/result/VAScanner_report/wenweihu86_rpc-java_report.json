{
    "project name": "wenweihu86_rpc-java",
    "vulnerable dependencies": {
        "io.netty:netty-all:4.1.9.Final": {
            "used-method num": 155,
            "used method": [
                "io.netty.util.collection.IntObjectHashMap$PrimitiveIterator:boolean hasNext()",
                "io.netty.util.concurrent.ScheduledFutureTask:boolean cancel(boolean)",
                "io.netty.buffer.SwappedByteBuf:io.netty.buffer.ByteBuf markReaderIndex()",
                "io.netty.channel.DefaultChannelProgressivePromise:io.netty.channel.Channel channel()",
                "io.netty.buffer.PooledUnsafeDirectByteBuf:byte[] array()",
                "io.netty.util.collection.IntObjectHashMap:boolean isEmpty()",
                "io.netty.bootstrap.Bootstrap:void <clinit>()",
                "io.netty.buffer.Unpooled:io.netty.buffer.ByteBuf wrappedBuffer(byte[][])",
                "io.netty.channel.ChannelOption:void <clinit>()",
                "io.netty.util.collection.IntObjectHashMap$MapEntry:java.lang.Integer getKey()",
                "io.netty.util.concurrent.AbstractEventExecutorGroup:io.netty.util.concurrent.ScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)",
                "io.netty.bootstrap.ServerBootstrap:io.netty.bootstrap.ServerBootstrap clone()",
                "io.netty.channel.ChannelDuplexHandler:void <init>()",
                "io.netty.bootstrap.ServerBootstrap:io.netty.bootstrap.ServerBootstrap group(io.netty.channel.EventLoopGroup,io.netty.channel.EventLoopGroup)",
                "io.netty.bootstrap.ServerBootstrap:void <init>()",
                "io.netty.buffer.SwappedByteBuf:byte[] array()",
                "io.netty.channel.CompleteChannelFuture:io.netty.channel.ChannelFuture addListener(io.netty.util.concurrent.GenericFutureListener)",
                "io.netty.channel.nio.NioEventLoopGroup:void <init>(int,java.util.concurrent.ThreadFactory)",
                "io.netty.channel.ChannelInitializer:void <clinit>()",
                "io.netty.buffer.WrappedByteBuf:io.netty.buffer.ByteBuf writeInt(int)",
                "io.netty.buffer.UnpooledDirectByteBuf:io.netty.buffer.ByteBuf readBytes(byte[],int,int)",
                "io.netty.channel.DefaultChannelPromise:io.netty.channel.ChannelPromise addListener(io.netty.util.concurrent.GenericFutureListener)",
                "io.netty.util.concurrent.AbstractScheduledEventExecutor:io.netty.util.concurrent.ScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)",
                "io.netty.util.internal.shaded.org.jctools.queues.ConcurrentCircularArrayQueue:java.util.Iterator iterator()",
                "io.netty.buffer.AbstractPooledDerivedByteBuf:byte[] array()",
                "io.netty.util.collection.IntObjectHashMap$EntrySet:java.util.Iterator iterator()",
                "io.netty.channel.DefaultChannelPromise:io.netty.channel.Channel channel()",
                "io.netty.buffer.SwappedByteBuf:io.netty.buffer.ByteBuf writeInt(int)",
                "io.netty.buffer.EmptyByteBuf:io.netty.buffer.ByteBuf readBytes(byte[],int,int)",
                "io.netty.channel.epoll.Epoll:void <clinit>()",
                "io.netty.util.collection.IntObjectHashMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
                "io.netty.buffer.AbstractUnpooledSlicedByteBuf:byte[] array()",
                "io.netty.buffer.WrappedByteBuf:int readInt()",
                "io.netty.util.collection.IntObjectHashMap:int size()",
                "io.netty.bootstrap.ServerBootstrap:void <clinit>()",
                "io.netty.bootstrap.AbstractBootstrap:io.netty.bootstrap.AbstractBootstrap handler(io.netty.channel.ChannelHandler)",
                "io.netty.buffer.CompositeByteBuf:byte[] array()",
                "io.netty.channel.epoll.AbstractEpollStreamChannel:boolean isActive()",
                "io.netty.buffer.AbstractByteBuf:io.netty.buffer.ByteBuf writeInt(int)",
                "io.netty.bootstrap.ServerBootstrap:io.netty.bootstrap.ServerBootstrap childOption(io.netty.channel.ChannelOption,java.lang.Object)",
                "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture close()",
                "io.netty.handler.codec.CodecOutputList:boolean add(java.lang.Object)",
                "io.netty.buffer.AbstractUnsafeSwappedByteBuf:io.netty.buffer.ByteBuf writeInt(int)",
                "io.netty.buffer.CompositeByteBuf:io.netty.buffer.CompositeByteBuf markReaderIndex()",
                "io.netty.util.collection.IntObjectHashMap$MapEntry:java.lang.Object getValue()",
                "io.netty.bootstrap.AbstractBootstrap:io.netty.channel.ChannelFuture bind(int)",
                "io.netty.bootstrap.AbstractBootstrap:io.netty.bootstrap.AbstractBootstrap option(io.netty.channel.ChannelOption,java.lang.Object)",
                "io.netty.channel.SucceededChannelFuture:boolean isSuccess()",
                "io.netty.buffer.AdvancedLeakAwareByteBuf:int readInt()",
                "io.netty.channel.epoll.AbstractEpollStreamChannel:boolean isOpen()",
                "io.netty.bootstrap.Bootstrap:void <init>()",
                "io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseLinkedAtomicQueue:java.util.Iterator iterator()",
                "io.netty.buffer.SwappedByteBuf:int readableBytes()",
                "io.netty.buffer.CompositeByteBuf:io.netty.buffer.CompositeByteBuf writeInt(int)",
                "io.netty.util.collection.IntObjectHashMap:void clear()",
                "io.netty.buffer.EmptyByteBuf:int readInt()",
                "io.netty.buffer.EmptyByteBuf:io.netty.buffer.ByteBuf markReaderIndex()",
                "io.netty.util.collection.IntObjectHashMap$PrimitiveIterator:io.netty.util.collection.IntObjectMap$PrimitiveEntry next()",
                "io.netty.buffer.UnpooledUnsafeDirectByteBuf:byte[] array()",
                "io.netty.buffer.ReadOnlyByteBuf:byte[] array()",
                "io.netty.buffer.PooledDirectByteBuf:byte[] array()",
                "io.netty.util.concurrent.MultithreadEventExecutorGroup:void shutdown()",
                "io.netty.channel.DefaultChannelProgressivePromise:io.netty.channel.ChannelProgressivePromise sync()",
                "io.netty.buffer.AbstractByteBuf:int readInt()",
                "io.netty.buffer.EmptyByteBuf:io.netty.buffer.ByteBuf resetReaderIndex()",
                "io.netty.util.concurrent.DefaultPromise:boolean isSuccess()",
                "io.netty.channel.MultithreadEventLoopGroup:void <clinit>()",
                "io.netty.buffer.AbstractByteBuf:io.netty.buffer.ByteBuf resetReaderIndex()",
                "io.netty.buffer.EmptyByteBuf:io.netty.buffer.ByteBuf writeInt(int)",
                "io.netty.buffer.AdvancedLeakAwareByteBuf:io.netty.buffer.ByteBuf readBytes(byte[],int,int)",
                "io.netty.buffer.WrappedByteBuf:io.netty.buffer.ByteBuf readBytes(byte[],int,int)",
                "io.netty.channel.AbstractChannel:io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object)",
                "io.netty.util.AbstractConstant:void <clinit>()",
                "io.netty.buffer.AbstractByteBuf:io.netty.buffer.ByteBuf readBytes(byte[],int,int)",
                "io.netty.util.collection.IntObjectHashMap$2:java.util.Iterator iterator()",
                "io.netty.buffer.Unpooled:void <clinit>()",
                "io.netty.buffer.PooledByteBufAllocator:void <clinit>()",
                "io.netty.buffer.EmptyByteBuf:int readableBytes()",
                "io.netty.buffer.SwappedByteBuf:io.netty.buffer.ByteBuf readBytes(byte[],int,int)",
                "io.netty.bootstrap.Bootstrap:io.netty.bootstrap.Bootstrap clone()",
                "io.netty.buffer.PooledHeapByteBuf:byte[] array()",
                "io.netty.channel.nio.SelectedSelectionKeySet:java.util.Iterator iterator()",
                "io.netty.util.collection.IntObjectHashMap$KeySet$1:boolean hasNext()",
                "io.netty.buffer.PooledDirectByteBuf:io.netty.buffer.ByteBuf readBytes(byte[],int,int)",
                "io.netty.buffer.WrappedByteBuf:io.netty.buffer.ByteBuf resetReaderIndex()",
                "io.netty.buffer.FixedCompositeByteBuf:byte[] array()",
                "io.netty.buffer.EmptyByteBuf:byte[] array()",
                "io.netty.channel.AbstractChannel:io.netty.channel.ChannelFuture close()",
                "io.netty.handler.codec.ByteToMessageDecoder:void <clinit>()",
                "io.netty.channel.epoll.EpollSocketChannel:java.net.InetSocketAddress remoteAddress()",
                "io.netty.bootstrap.AbstractBootstrapConfig:io.netty.channel.EventLoopGroup group()",
                "io.netty.util.collection.IntObjectHashMap$MapIterator:java.util.Map$Entry next()",
                "io.netty.channel.FailedChannelFuture:io.netty.channel.ChannelFuture sync()",
                "io.netty.handler.timeout.IdleStateEvent:io.netty.handler.timeout.IdleState state()",
                "io.netty.channel.VoidChannelPromise:io.netty.channel.VoidChannelPromise addListener(io.netty.util.concurrent.GenericFutureListener)",
                "io.netty.bootstrap.AbstractBootstrap:io.netty.bootstrap.AbstractBootstrap channel(java.lang.Class)",
                "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.Channel channel()",
                "io.netty.buffer.DuplicatedByteBuf:byte[] array()",
                "io.netty.channel.nio.NioEventLoopGroup:void setIoRatio(int)",
                "io.netty.bootstrap.AbstractBootstrap:io.netty.bootstrap.AbstractBootstrap group(io.netty.channel.EventLoopGroup)",
                "io.netty.buffer.CompositeByteBuf:io.netty.buffer.CompositeByteBuf resetReaderIndex()",
                "io.netty.buffer.CompositeByteBuf:io.netty.buffer.CompositeByteBuf readBytes(byte[],int,int)",
                "io.netty.handler.codec.MessageToMessageEncoder:void <init>()",
                "io.netty.channel.DefaultChannelPromise:io.netty.channel.ChannelPromise sync()",
                "io.netty.buffer.AbstractByteBuf:io.netty.buffer.ByteBuf markReaderIndex()",
                "io.netty.util.concurrent.AbstractEventExecutor:io.netty.util.concurrent.Future shutdownGracefully()",
                "io.netty.buffer.AbstractByteBuf:int readableBytes()",
                "io.netty.util.collection.IntObjectHashMap$KeySet$1:java.lang.Integer next()",
                "io.netty.channel.DefaultChannelProgressivePromise:io.netty.channel.ChannelProgressivePromise addListener(io.netty.util.concurrent.GenericFutureListener)",
                "io.netty.buffer.CompositeByteBuf$CompositeByteBufIterator:io.netty.buffer.ByteBuf next()",
                "io.netty.channel.ChannelInitializer:void <init>()",
                "io.netty.util.internal.shaded.org.jctools.queues.BaseLinkedQueue:java.util.Iterator iterator()",
                "io.netty.buffer.ReadOnlyByteBufferBuf:byte[] array()",
                "io.netty.util.collection.IntObjectHashMap$2$1:boolean hasNext()",
                "io.netty.util.collection.IntObjectHashMap$MapIterator:boolean hasNext()",
                "io.netty.util.concurrent.AbstractFuture:java.lang.Object get(long,java.util.concurrent.TimeUnit)",
                "io.netty.buffer.UnpooledHeapByteBuf:byte[] array()",
                "io.netty.channel.epoll.EpollMode:void <clinit>()",
                "io.netty.handler.codec.ByteToMessageDecoder:void <init>()",
                "io.netty.util.internal.RecyclableArrayList:boolean add(java.lang.Object)",
                "io.netty.buffer.AdvancedLeakAwareByteBuf:io.netty.buffer.ByteBuf writeInt(int)",
                "io.netty.channel.epoll.EpollEventLoopGroup:void setIoRatio(int)",
                "io.netty.channel.CompleteChannelFuture:io.netty.channel.ChannelFuture sync()",
                "io.netty.util.collection.IntObjectHashMap:java.lang.Object remove(java.lang.Object)",
                "io.netty.buffer.WrappedByteBuf:int readableBytes()",
                "io.netty.util.collection.IntObjectHashMap$2$1:java.lang.Object next()",
                "io.netty.buffer.UnpooledDirectByteBuf:byte[] array()",
                "io.netty.bootstrap.Bootstrap:io.netty.channel.ChannelFuture connect(java.net.SocketAddress)",
                "io.netty.util.collection.IntObjectHashMap$KeySet:java.util.Iterator iterator()",
                "io.netty.util.concurrent.DefaultPromise:java.lang.Throwable cause()",
                "io.netty.bootstrap.Bootstrap:io.netty.bootstrap.BootstrapConfig config()",
                "io.netty.util.collection.IntObjectHashMap:boolean containsKey(java.lang.Object)",
                "io.netty.util.collection.IntObjectHashMap:void putAll(java.util.Map)",
                "io.netty.util.concurrent.SingleThreadEventExecutor:void shutdown()",
                "io.netty.util.concurrent.GlobalEventExecutor:void shutdown()",
                "io.netty.handler.timeout.IdleStateHandler:void <init>(int,int,int)",
                "io.netty.channel.SucceededChannelFuture:java.lang.Throwable cause()",
                "io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueue:java.util.Iterator iterator()",
                "io.netty.channel.epoll.EpollChannelOption:void <clinit>()",
                "io.netty.channel.AbstractChannel:io.netty.channel.ChannelPipeline pipeline()",
                "io.netty.buffer.SwappedByteBuf:int readInt()",
                "io.netty.handler.codec.CodecOutputList:java.lang.Object get(int)",
                "io.netty.channel.CompleteChannelFuture:io.netty.channel.Channel channel()",
                "io.netty.buffer.WrappedByteBuf:byte[] array()",
                "io.netty.handler.timeout.IdleState:void <clinit>()",
                "io.netty.util.internal.shaded.org.jctools.queues.atomic.MpscAtomicArrayQueue:java.util.Iterator iterator()",
                "io.netty.buffer.SwappedByteBuf:io.netty.buffer.ByteBuf resetReaderIndex()",
                "io.netty.util.collection.IntObjectHashMap:java.lang.Object get(java.lang.Object)",
                "io.netty.channel.VoidChannelPromise:io.netty.channel.VoidChannelPromise sync()",
                "io.netty.bootstrap.ServerBootstrap:io.netty.bootstrap.ServerBootstrap childHandler(io.netty.channel.ChannelHandler)",
                "io.netty.channel.SimpleChannelInboundHandler:void <init>()",
                "io.netty.channel.epoll.EpollEventLoopGroup:void <init>(int,java.util.concurrent.ThreadFactory)",
                "io.netty.buffer.Unpooled:io.netty.buffer.ByteBuf buffer(int)",
                "io.netty.buffer.CompositeByteBuf$CompositeByteBufIterator:boolean hasNext()",
                "io.netty.buffer.WrappedByteBuf:io.netty.buffer.ByteBuf markReaderIndex()"
            ],
            "CVE": [
                "CVE-2019-16869"
            ],
            "used vul-method": [
                "io.netty.util.concurrent.ScheduledFutureTask:boolean cancel(boolean)",
                "io.netty.channel.CompleteChannelFuture:io.netty.channel.ChannelFuture addListener(io.netty.util.concurrent.GenericFutureListener)",
                "io.netty.channel.nio.NioEventLoopGroup:void <init>(int,java.util.concurrent.ThreadFactory)",
                "io.netty.channel.DefaultChannelPromise:io.netty.channel.ChannelPromise addListener(io.netty.util.concurrent.GenericFutureListener)",
                "io.netty.util.concurrent.AbstractScheduledEventExecutor:io.netty.util.concurrent.ScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)",
                "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture close()",
                "io.netty.bootstrap.AbstractBootstrap:io.netty.channel.ChannelFuture bind(int)",
                "io.netty.util.concurrent.MultithreadEventExecutorGroup:void shutdown()",
                "io.netty.channel.AbstractChannel:io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object)",
                "io.netty.channel.AbstractChannel:io.netty.channel.ChannelFuture close()",
                "io.netty.util.concurrent.AbstractEventExecutor:io.netty.util.concurrent.Future shutdownGracefully()",
                "io.netty.channel.DefaultChannelProgressivePromise:io.netty.channel.ChannelProgressivePromise addListener(io.netty.util.concurrent.GenericFutureListener)",
                "io.netty.bootstrap.Bootstrap:io.netty.channel.ChannelFuture connect(java.net.SocketAddress)",
                "io.netty.util.concurrent.SingleThreadEventExecutor:void shutdown()",
                "io.netty.channel.epoll.EpollEventLoopGroup:void <init>(int,java.util.concurrent.ThreadFactory)"
            ],
            "vul-called frequency": 24,
            "related vul root method": {
                "CVE-2019-16869": [
                    "io.netty.handler.codec.http.HttpObjectDecoder:void splitHeader(io.netty.util.internal.AppendableCharSequence)"
                ]
            },
            "CVE-API": {
                "CVE-2019-16869": [
                    "io.netty.util.concurrent.ScheduledFutureTask:boolean cancel(boolean)",
                    "io.netty.channel.CompleteChannelFuture:io.netty.channel.ChannelFuture addListener(io.netty.util.concurrent.GenericFutureListener)",
                    "io.netty.channel.nio.NioEventLoopGroup:void <init>(int,java.util.concurrent.ThreadFactory)",
                    "io.netty.channel.DefaultChannelPromise:io.netty.channel.ChannelPromise addListener(io.netty.util.concurrent.GenericFutureListener)",
                    "io.netty.util.concurrent.AbstractScheduledEventExecutor:io.netty.util.concurrent.ScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)",
                    "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture close()",
                    "io.netty.bootstrap.AbstractBootstrap:io.netty.channel.ChannelFuture bind(int)",
                    "io.netty.util.concurrent.MultithreadEventExecutorGroup:void shutdown()",
                    "io.netty.channel.AbstractChannel:io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object)",
                    "io.netty.channel.AbstractChannel:io.netty.channel.ChannelFuture close()",
                    "io.netty.util.concurrent.AbstractEventExecutor:io.netty.util.concurrent.Future shutdownGracefully()",
                    "io.netty.channel.DefaultChannelProgressivePromise:io.netty.channel.ChannelProgressivePromise addListener(io.netty.util.concurrent.GenericFutureListener)",
                    "io.netty.bootstrap.Bootstrap:io.netty.channel.ChannelFuture connect(java.net.SocketAddress)",
                    "io.netty.util.concurrent.SingleThreadEventExecutor:void shutdown()",
                    "io.netty.channel.epoll.EpollEventLoopGroup:void <init>(int,java.util.concurrent.ThreadFactory)"
                ]
            }
        },
        "org.apache.logging.log4j:log4j-core:2.8.1": {
            "used-method num": 0,
            "used method": []
        },
        "junit:junit:4.12": {
            "used-method num": 0,
            "used method": []
        }
    }
}
{
    "project name": "ffay_http-proxy-server",
    "vulnerable dependencies": {
        "io.netty:netty-all:4.1.6.Final": {
            "used-method num": 145,
            "used method": [
                "io.netty.buffer.SwappedByteBuf:io.netty.buffer.ByteBuf copy()",
                "io.netty.handler.codec.socksx.v5.DefaultSocks5PasswordAuthRequest:java.lang.String username()",
                "io.netty.buffer.Unpooled:void <clinit>()",
                "io.netty.buffer.EmptyByteBuf:int readableBytes()",
                "io.netty.handler.codec.socksx.v5.Socks5CommandType:void <clinit>()",
                "io.netty.handler.codec.DecoderResult:boolean isFailure()",
                "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelHandlerContext fireChannelRead(java.lang.Object)",
                "io.netty.channel.DefaultChannelProgressivePromise:io.netty.channel.Channel channel()",
                "io.netty.handler.codec.http.HttpResponseStatus:void <init>(int,java.lang.String)",
                "io.netty.handler.codec.http.DefaultHttpRequest:io.netty.handler.codec.http.HttpRequest setUri(java.lang.String)",
                "io.netty.handler.codec.socksx.v5.Socks5PasswordAuthRequestDecoder:void <init>()",
                "io.netty.handler.codec.http.EmptyHttpHeaders:io.netty.handler.codec.http.HttpHeaders set(java.lang.String,java.lang.Object)",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8$ValueIterator:java.lang.Object next()",
                "io.netty.util.internal.shaded.org.jctools.queues.atomic.MpscAtomicArrayQueue:boolean offer(java.lang.Object)",
                "io.netty.util.AttributeKey:io.netty.util.AttributeKey newInstance(java.lang.String)",
                "io.netty.bootstrap.Bootstrap:void <clinit>()",
                "io.netty.buffer.AbstractDerivedByteBuf:boolean release()",
                "io.netty.buffer.AdvancedLeakAwareByteBuf:io.netty.buffer.ByteBuf copy()",
                "io.netty.handler.codec.http.HttpServerCodec:void <init>()",
                "io.netty.bootstrap.Bootstrap:io.netty.channel.ChannelFuture connect(java.lang.String,int)",
                "io.netty.channel.ChannelOption:void <clinit>()",
                "io.netty.util.AttributeKey:void <clinit>()",
                "io.netty.buffer.AbstractByteBuf:io.netty.buffer.ByteBuf readBytes(byte[])",
                "io.netty.handler.codec.http.DefaultHttpHeaders:io.netty.handler.codec.http.HttpHeaders set(java.lang.String,java.lang.Object)",
                "io.netty.bootstrap.AbstractBootstrap:io.netty.bootstrap.AbstractBootstrap option(io.netty.channel.ChannelOption,java.lang.Object)",
                "io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext:io.netty.channel.Channel channel()",
                "io.netty.channel.SucceededChannelFuture:boolean isSuccess()",
                "io.netty.handler.codec.http.EmptyHttpHeaders:io.netty.handler.codec.http.HttpHeaders add(java.lang.String,java.lang.Object)",
                "io.netty.buffer.AdvancedLeakAwareByteBuf:boolean release()",
                "io.netty.buffer.WrappedByteBuf:int readableBytes()",
                "io.netty.bootstrap.Bootstrap:void <init>()",
                "io.netty.handler.codec.socksx.v5.DefaultSocks5CommandRequest:int dstPort()",
                "io.netty.buffer.EmptyByteBuf:io.netty.buffer.ByteBuf copy()",
                "io.netty.util.internal.shaded.org.jctools.queues.atomic.SpscLinkedAtomicQueue:java.lang.Object poll()",
                "io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext:io.netty.channel.ChannelHandlerContext fireChannelRead(java.lang.Object)",
                "io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueue:java.lang.Object poll()",
                "io.netty.handler.codec.http.HttpObjectAggregator$AggregatedFullHttpMessage:io.netty.handler.codec.http.HttpHeaders headers()",
                "io.netty.handler.codec.socksx.v5.Socks5PasswordAuthStatus:void <clinit>()",
                "io.netty.channel.CombinedChannelDuplexHandler:void <clinit>()",
                "io.netty.bootstrap.ServerBootstrap:io.netty.bootstrap.ServerBootstrap group(io.netty.channel.EventLoopGroup,io.netty.channel.EventLoopGroup)",
                "io.netty.buffer.AdvancedLeakAwareByteBuf:io.netty.buffer.ByteBuf readBytes(byte[])",
                "io.netty.handler.codec.DefaultHeaders$HeaderIterator:boolean hasNext()",
                "io.netty.handler.codec.base64.Base64:io.netty.buffer.ByteBuf decode(io.netty.buffer.ByteBuf)",
                "io.netty.bootstrap.ServerBootstrap:void <init>()",
                "io.netty.channel.ChannelInboundHandlerAdapter:void channelRead(io.netty.channel.ChannelHandlerContext,java.lang.Object)",
                "io.netty.buffer.WrappedByteBuf:io.netty.buffer.ByteBuf readBytes(byte[])",
                "io.netty.handler.codec.ByteToMessageDecoder:void <clinit>()",
                "io.netty.channel.ChannelInboundHandlerAdapter:void channelInactive(io.netty.channel.ChannelHandlerContext)",
                "io.netty.channel.ChannelInboundHandlerAdapter:void exceptionCaught(io.netty.channel.ChannelHandlerContext,java.lang.Throwable)",
                "io.netty.handler.codec.socksx.v5.Socks5CommandStatus:void <clinit>()",
                "io.netty.buffer.SwappedByteBuf:int readableBytes()",
                "io.netty.channel.CompleteChannelFuture:io.netty.channel.ChannelFuture addListener(io.netty.util.concurrent.GenericFutureListener)",
                "io.netty.handler.codec.http.EmptyHttpHeaders:io.netty.handler.codec.http.HttpHeaders remove(java.lang.String)",
                "io.netty.channel.VoidChannelPromise:io.netty.channel.VoidChannelPromise addListener(io.netty.util.concurrent.GenericFutureListener)",
                "io.netty.channel.ChannelInitializer:void <clinit>()",
                "io.netty.bootstrap.AbstractBootstrap:io.netty.bootstrap.AbstractBootstrap channel(java.lang.Class)",
                "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelPipeline pipeline()",
                "io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueue:boolean offer(java.lang.Object)",
                "io.netty.handler.codec.http.DefaultHttpRequest:io.netty.handler.codec.http.HttpMethod getMethod()",
                "io.netty.handler.codec.http.HttpClientCodec:void <init>()",
                "io.netty.channel.ChannelInboundHandlerAdapter:void channelWritabilityChanged(io.netty.channel.ChannelHandlerContext)",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8:java.lang.Object get(java.lang.Object)",
                "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.Channel channel()",
                "io.netty.handler.codec.socksx.v5.Socks5InitialRequestDecoder:void <init>()",
                "io.netty.handler.codec.http.HttpMethod:void <clinit>()",
                "io.netty.buffer.UnreleasableByteBuf:boolean release()",
                "io.netty.util.internal.shaded.org.jctools.queues.MpscChunkedArrayQueue:boolean offer(java.lang.Object)",
                "io.netty.channel.DefaultChannelPromise:io.netty.channel.ChannelPromise addListener(io.netty.util.concurrent.GenericFutureListener)",
                "io.netty.bootstrap.AbstractBootstrap:io.netty.bootstrap.AbstractBootstrap group(io.netty.channel.EventLoopGroup)",
                "io.netty.handler.codec.socksx.v5.DefaultSocks5CommandResponse:void <init>(io.netty.handler.codec.socksx.v5.Socks5CommandStatus,io.netty.handler.codec.socksx.v5.Socks5AddressType)",
                "io.netty.handler.ssl.SslHandler:void <clinit>()",
                "io.netty.handler.codec.http.HttpResponseStatus:void <clinit>()",
                "io.netty.buffer.AbstractReferenceCountedByteBuf:boolean release()",
                "io.netty.handler.codec.http.DefaultHttpHeaders:io.netty.handler.codec.http.HttpHeaders remove(java.lang.String)",
                "io.netty.buffer.AbstractByteBuf:io.netty.buffer.ByteBuf copy()",
                "io.netty.handler.codec.http.HttpVersion:void <clinit>()",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8$KeyIterator:java.lang.Object next()",
                "io.netty.util.internal.shaded.org.jctools.queues.atomic.SpscLinkedAtomicQueue:boolean offer(java.lang.Object)",
                "io.netty.handler.codec.http.EmptyHttpHeaders:java.lang.String get(java.lang.String)",
                "io.netty.handler.codec.ReplayingDecoderByteBuf:boolean release()",
                "io.netty.handler.codec.socksx.v5.DefaultSocks5CommandRequest:io.netty.handler.codec.socksx.v5.Socks5CommandType type()",
                "io.netty.buffer.CompositeByteBuf:io.netty.buffer.CompositeByteBuf readBytes(byte[])",
                "io.netty.buffer.SimpleLeakAwareByteBuf:boolean release()",
                "io.netty.buffer.WrappedByteBuf:io.netty.buffer.ByteBuf copy()",
                "io.netty.handler.codec.socksx.v5.DefaultSocks5PasswordAuthResponse:void <init>(io.netty.handler.codec.socksx.v5.Socks5PasswordAuthStatus)",
                "io.netty.channel.DefaultChannelPromise:io.netty.channel.Channel channel()",
                "io.netty.handler.codec.ReplayingDecoderByteBuf:io.netty.buffer.ByteBuf copy()",
                "io.netty.handler.codec.socksx.v5.DefaultSocks5InitialResponse:void <init>(io.netty.handler.codec.socksx.v5.Socks5AuthMethod)",
                "io.netty.buffer.SwappedByteBuf:io.netty.buffer.ByteBuf readBytes(byte[])",
                "io.netty.handler.codec.socksx.v5.Socks5ServerEncoder:void <clinit>()",
                "io.netty.handler.codec.DefaultHeaders$HeaderIterator:java.util.Map$Entry next()",
                "io.netty.handler.codec.http.DefaultHttpHeaders:io.netty.handler.codec.http.HttpHeaders add(java.lang.String,java.lang.Object)",
                "io.netty.handler.codec.socksx.v5.Socks5AuthMethod:void <clinit>()",
                "io.netty.util.internal.shaded.org.jctools.queues.atomic.MpscLinkedAtomicQueue:boolean offer(java.lang.Object)",
                "io.netty.bootstrap.AbstractBootstrap:io.netty.channel.ChannelFuture bind(java.lang.String,int)",
                "io.netty.handler.ssl.SslHandler:void <init>(javax.net.ssl.SSLEngine)",
                "io.netty.util.internal.shaded.org.jctools.queues.atomic.MpscLinkedAtomicQueue:java.lang.Object poll()",
                "io.netty.channel.ChannelInboundHandlerAdapter:void <init>()",
                "io.netty.handler.codec.HeadersUtils$StringEntryIterator:java.util.Map$Entry next()",
                "io.netty.handler.codec.socksx.v5.Socks5AddressType:void <clinit>()",
                "io.netty.util.internal.shaded.org.jctools.queues.atomic.MpscAtomicArrayQueue:java.lang.Object poll()",
                "io.netty.channel.CompleteChannelFuture:io.netty.channel.Channel channel()",
                "io.netty.handler.codec.socksx.SocksVersion:void <clinit>()",
                "io.netty.handler.codec.http.DefaultFullHttpResponse:void <init>(io.netty.handler.codec.http.HttpVersion,io.netty.handler.codec.http.HttpResponseStatus)",
                "io.netty.handler.codec.http.DefaultHttpHeaders:java.lang.String get(java.lang.String)",
                "io.netty.buffer.EmptyByteBuf:boolean release()",
                "io.netty.buffer.AbstractByteBuf:int readableBytes()",
                "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object)",
                "io.netty.channel.DefaultChannelProgressivePromise:io.netty.channel.ChannelProgressivePromise addListener(io.netty.util.concurrent.GenericFutureListener)",
                "io.netty.util.concurrent.DefaultPromise:boolean isSuccess()",
                "io.netty.util.internal.shaded.org.jctools.queues.SpscLinkedQueue:java.lang.Object poll()",
                "io.netty.handler.codec.ReplayingDecoderByteBuf:io.netty.buffer.ByteBuf readBytes(byte[])",
                "io.netty.buffer.Unpooled:io.netty.buffer.ByteBuf copiedBuffer(byte[])",
                "io.netty.handler.codec.http.DefaultHttpRequest:java.lang.String getUri()",
                "io.netty.util.concurrent.AbstractFuture:java.lang.Object get()",
                "io.netty.handler.codec.socksx.v5.Socks5CommandRequestDecoder:void <init>()",
                "io.netty.buffer.CompositeByteBuf$CompositeByteBufIterator:io.netty.buffer.ByteBuf next()",
                "io.netty.channel.MultithreadEventLoopGroup:void <clinit>()",
                "io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext:io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object)",
                "io.netty.buffer.EmptyByteBuf:io.netty.buffer.ByteBuf readBytes(byte[])",
                "io.netty.channel.ChannelInitializer:void <init>()",
                "io.netty.util.internal.shaded.org.jctools.queues.MpscChunkedArrayQueue:java.lang.Object poll()",
                "io.netty.channel.nio.NioEventLoopGroup:void <init>(int)",
                "io.netty.bootstrap.ServerBootstrap:io.netty.bootstrap.ServerBootstrap childHandler(io.netty.channel.ChannelHandler)",
                "io.netty.handler.codec.socksx.AbstractSocksMessage:io.netty.handler.codec.DecoderResult decoderResult()",
                "io.netty.channel.SimpleChannelInboundHandler:void <init>()",
                "io.netty.channel.ChannelFutureListener:void <clinit>()",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8$BaseIterator:boolean hasNext()",
                "io.netty.channel.ChannelInboundHandlerAdapter:void channelActive(io.netty.channel.ChannelHandlerContext)",
                "io.netty.handler.codec.ReplayingDecoderByteBuf:int readableBytes()",
                "io.netty.handler.codec.http.DefaultHttpMessage:io.netty.handler.codec.http.HttpHeaders headers()",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8$EntryIterator:java.util.Map$Entry next()",
                "io.netty.channel.ChannelInitializer:void exceptionCaught(io.netty.channel.ChannelHandlerContext,java.lang.Throwable)",
                "io.netty.handler.codec.http.DefaultFullHttpResponse:io.netty.buffer.ByteBuf content()",
                "io.netty.bootstrap.ServerBootstrap:void <clinit>()",
                "io.netty.util.AbstractConstant:void <clinit>()",
                "io.netty.bootstrap.AbstractBootstrap:io.netty.bootstrap.AbstractBootstrap handler(io.netty.channel.ChannelHandler)",
                "io.netty.handler.codec.http.HttpObjectAggregator$AggregatedFullHttpRequest:io.netty.handler.codec.http.HttpMethod getMethod()",
                "io.netty.buffer.SwappedByteBuf:boolean release()",
                "io.netty.buffer.CompositeByteBuf$CompositeByteBufIterator:boolean hasNext()",
                "io.netty.handler.codec.HeadersUtils$StringEntryIterator:boolean hasNext()",
                "io.netty.handler.codec.http.DefaultFullHttpRequest:io.netty.handler.codec.http.FullHttpRequest setUri(java.lang.String)",
                "io.netty.util.internal.shaded.org.jctools.queues.SpscLinkedQueue:boolean offer(java.lang.Object)",
                "io.netty.handler.codec.socksx.v5.DefaultSocks5CommandRequest:java.lang.String dstAddr()",
                "io.netty.handler.codec.ReplayingDecoder:void <clinit>()"
            ],
            "CVE": [
                "CVE-2019-16869"
            ],
            "used vul-method": [
                "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelHandlerContext fireChannelRead(java.lang.Object)",
                "io.netty.bootstrap.Bootstrap:io.netty.channel.ChannelFuture connect(java.lang.String,int)",
                "io.netty.channel.ChannelInboundHandlerAdapter:void channelRead(io.netty.channel.ChannelHandlerContext,java.lang.Object)",
                "io.netty.channel.ChannelInboundHandlerAdapter:void channelInactive(io.netty.channel.ChannelHandlerContext)",
                "io.netty.channel.ChannelInboundHandlerAdapter:void exceptionCaught(io.netty.channel.ChannelHandlerContext,java.lang.Throwable)",
                "io.netty.channel.CompleteChannelFuture:io.netty.channel.ChannelFuture addListener(io.netty.util.concurrent.GenericFutureListener)",
                "io.netty.channel.ChannelInboundHandlerAdapter:void channelWritabilityChanged(io.netty.channel.ChannelHandlerContext)",
                "io.netty.channel.DefaultChannelPromise:io.netty.channel.ChannelPromise addListener(io.netty.util.concurrent.GenericFutureListener)",
                "io.netty.bootstrap.AbstractBootstrap:io.netty.channel.ChannelFuture bind(java.lang.String,int)",
                "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object)",
                "io.netty.channel.DefaultChannelProgressivePromise:io.netty.channel.ChannelProgressivePromise addListener(io.netty.util.concurrent.GenericFutureListener)",
                "io.netty.channel.nio.NioEventLoopGroup:void <init>(int)",
                "io.netty.channel.ChannelInboundHandlerAdapter:void channelActive(io.netty.channel.ChannelHandlerContext)",
                "io.netty.channel.ChannelInitializer:void exceptionCaught(io.netty.channel.ChannelHandlerContext,java.lang.Throwable)"
            ],
            "vul-called frequency": 64,
            "related vul root method": {
                "CVE-2019-16869": [
                    "io.netty.handler.codec.http.HttpObjectDecoder:void splitHeader(io.netty.util.internal.AppendableCharSequence)"
                ]
            },
            "CVE-API": {
                "CVE-2019-16869": [
                    "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelHandlerContext fireChannelRead(java.lang.Object)",
                    "io.netty.bootstrap.Bootstrap:io.netty.channel.ChannelFuture connect(java.lang.String,int)",
                    "io.netty.channel.ChannelInboundHandlerAdapter:void channelRead(io.netty.channel.ChannelHandlerContext,java.lang.Object)",
                    "io.netty.channel.ChannelInboundHandlerAdapter:void channelInactive(io.netty.channel.ChannelHandlerContext)",
                    "io.netty.channel.ChannelInboundHandlerAdapter:void exceptionCaught(io.netty.channel.ChannelHandlerContext,java.lang.Throwable)",
                    "io.netty.channel.CompleteChannelFuture:io.netty.channel.ChannelFuture addListener(io.netty.util.concurrent.GenericFutureListener)",
                    "io.netty.channel.ChannelInboundHandlerAdapter:void channelWritabilityChanged(io.netty.channel.ChannelHandlerContext)",
                    "io.netty.channel.DefaultChannelPromise:io.netty.channel.ChannelPromise addListener(io.netty.util.concurrent.GenericFutureListener)",
                    "io.netty.bootstrap.AbstractBootstrap:io.netty.channel.ChannelFuture bind(java.lang.String,int)",
                    "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object)",
                    "io.netty.channel.DefaultChannelProgressivePromise:io.netty.channel.ChannelProgressivePromise addListener(io.netty.util.concurrent.GenericFutureListener)",
                    "io.netty.channel.nio.NioEventLoopGroup:void <init>(int)",
                    "io.netty.channel.ChannelInboundHandlerAdapter:void channelActive(io.netty.channel.ChannelHandlerContext)",
                    "io.netty.channel.ChannelInitializer:void exceptionCaught(io.netty.channel.ChannelHandlerContext,java.lang.Throwable)"
                ]
            }
        },
        "junit:junit:4.12": {
            "used-method num": 0,
            "used method": []
        }
    }
}
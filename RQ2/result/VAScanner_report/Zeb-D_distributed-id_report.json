{
    "project name": "Zeb-D_distributed-id",
    "vulnerable dependencies": {
        "io.netty:netty-all:4.1.6.Final": {
            "used-method num": 115,
            "used method": [
                "io.netty.util.ReferenceCountUtil:boolean release(java.lang.Object)",
                "io.netty.buffer.CompositeByteBuf:io.netty.buffer.CompositeByteBuf writeLong(long)",
                "io.netty.buffer.AbstractByteBuf:io.netty.buffer.ByteBuf writeInt(int)",
                "io.netty.bootstrap.AbstractBootstrap:io.netty.channel.ChannelFuture bind()",
                "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture close()",
                "io.netty.handler.codec.http.HttpRequestDecoder:void <init>()",
                "io.netty.channel.DefaultChannelProgressivePromise:io.netty.channel.Channel channel()",
                "io.netty.handler.codec.MessageToByteEncoder:void <init>()",
                "io.netty.buffer.EmptyByteBuf:io.netty.buffer.ByteBuf writeBytes(byte[])",
                "io.netty.util.internal.shaded.org.jctools.queues.MpscChunkedArrayQueue:int size()",
                "io.netty.buffer.AdvancedLeakAwareByteBuf:io.netty.buffer.ByteBuf writeInt(int)",
                "io.netty.handler.codec.http.HttpResponseEncoder:void <init>()",
                "io.netty.buffer.WrappedByteBuf:io.netty.buffer.ByteBuf writeLong(long)",
                "io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueue:int size()",
                "io.netty.channel.CompleteChannelFuture:io.netty.channel.ChannelFuture sync()",
                "io.netty.buffer.AbstractUnsafeSwappedByteBuf:io.netty.buffer.ByteBuf writeInt(int)",
                "io.netty.bootstrap.Bootstrap:void <clinit>()",
                "io.netty.buffer.AbstractDerivedByteBuf:boolean release()",
                "io.netty.bootstrap.Bootstrap:io.netty.channel.ChannelFuture connect(java.lang.String,int)",
                "io.netty.channel.ChannelOption:void <clinit>()",
                "io.netty.buffer.SwappedByteBuf:long readLong()",
                "io.netty.buffer.WrappedByteBuf:io.netty.buffer.ByteBuf writeBytes(byte[])",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8$CollectionView:int size()",
                "io.netty.bootstrap.AbstractBootstrap:io.netty.bootstrap.AbstractBootstrap option(io.netty.channel.ChannelOption,java.lang.Object)",
                "io.netty.buffer.AbstractByteBuf:io.netty.buffer.ByteBuf writeBytes(byte[])",
                "io.netty.handler.codec.http.HttpObjectAggregator$AggregatedFullHttpRequest:java.lang.String uri()",
                "io.netty.channel.SucceededChannelFuture:boolean isSuccess()",
                "io.netty.buffer.AdvancedLeakAwareByteBuf:int readInt()",
                "io.netty.buffer.AdvancedLeakAwareByteBuf:boolean release()",
                "io.netty.bootstrap.Bootstrap:void <init>()",
                "io.netty.buffer.WrappedByteBuf:long readLong()",
                "io.netty.handler.codec.http.DefaultHttpRequest:java.lang.String uri()",
                "io.netty.buffer.AbstractUnsafeSwappedByteBuf:io.netty.buffer.ByteBuf writeLong(long)",
                "io.netty.bootstrap.ServerBootstrap:io.netty.bootstrap.ServerBootstrap group(io.netty.channel.EventLoopGroup,io.netty.channel.EventLoopGroup)",
                "io.netty.bootstrap.ServerBootstrap:void <init>()",
                "io.netty.channel.AbstractChannel:io.netty.channel.ChannelFuture close()",
                "io.netty.buffer.AdvancedLeakAwareByteBuf:long readLong()",
                "io.netty.handler.codec.ByteToMessageDecoder:void <clinit>()",
                "io.netty.handler.codec.FixedLengthFrameDecoder:java.lang.Object decode(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf)",
                "io.netty.buffer.AbstractByteBuf:io.netty.buffer.ByteBuf writeLong(long)",
                "io.netty.util.ReferenceCountUtil:void <clinit>()",
                "io.netty.channel.FailedChannelFuture:io.netty.channel.ChannelFuture sync()",
                "io.netty.handler.codec.http.DefaultFullHttpResponse:io.netty.handler.codec.http.FullHttpResponse setStatus(io.netty.handler.codec.http.HttpResponseStatus)",
                "io.netty.channel.CompleteChannelFuture:io.netty.channel.ChannelFuture addListener(io.netty.util.concurrent.GenericFutureListener)",
                "io.netty.channel.nio.NioEventLoopGroup:void <init>(int,java.util.concurrent.ThreadFactory)",
                "io.netty.buffer.CompositeByteBuf:io.netty.buffer.CompositeByteBuf writeInt(int)",
                "io.netty.channel.VoidChannelPromise:io.netty.channel.VoidChannelPromise addListener(io.netty.util.concurrent.GenericFutureListener)",
                "io.netty.channel.ChannelInitializer:void <clinit>()",
                "io.netty.buffer.WrappedByteBuf:io.netty.buffer.ByteBuf writeInt(int)",
                "io.netty.bootstrap.AbstractBootstrap:io.netty.bootstrap.AbstractBootstrap channel(java.lang.Class)",
                "io.netty.buffer.AbstractByteBuf:long readLong()",
                "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.Channel channel()",
                "io.netty.buffer.EmptyByteBuf:int readInt()",
                "io.netty.util.internal.shaded.org.jctools.queues.atomic.MpscAtomicArrayQueue:int size()",
                "io.netty.buffer.UnreleasableByteBuf:boolean release()",
                "io.netty.channel.DefaultEventLoopGroup:void <init>(int,java.util.concurrent.ThreadFactory)",
                "io.netty.channel.DefaultChannelPromise:io.netty.channel.ChannelPromise addListener(io.netty.util.concurrent.GenericFutureListener)",
                "io.netty.bootstrap.AbstractBootstrap:io.netty.bootstrap.AbstractBootstrap group(io.netty.channel.EventLoopGroup)",
                "io.netty.handler.codec.http.HttpResponseStatus:void <clinit>()",
                "io.netty.buffer.AbstractReferenceCountedByteBuf:boolean release()",
                "io.netty.channel.DefaultChannelPromise:io.netty.channel.ChannelPromise sync()",
                "io.netty.handler.codec.http.HttpVersion:void <clinit>()",
                "io.netty.handler.codec.http.HttpObjectAggregator:void <init>(int)",
                "io.netty.buffer.AdvancedLeakAwareByteBuf:io.netty.buffer.ByteBuf writeBytes(byte[])",
                "io.netty.buffer.SimpleLeakAwareByteBuf:boolean release()",
                "io.netty.buffer.AdvancedLeakAwareByteBuf:io.netty.buffer.ByteBuf writeLong(long)",
                "io.netty.buffer.EmptyByteBuf:long readLong()",
                "io.netty.channel.DefaultChannelProgressivePromise:io.netty.channel.ChannelProgressivePromise sync()",
                "io.netty.channel.DefaultChannelPromise:io.netty.channel.Channel channel()",
                "io.netty.buffer.SwappedByteBuf:io.netty.buffer.ByteBuf writeBytes(byte[])",
                "io.netty.buffer.SwappedByteBuf:io.netty.buffer.ByteBuf writeLong(long)",
                "io.netty.channel.socket.nio.NioSocketChannel:java.net.InetSocketAddress remoteAddress()",
                "io.netty.channel.AbstractChannel:io.netty.channel.ChannelPipeline pipeline()",
                "io.netty.handler.codec.http.HttpObjectEncoder:void <clinit>()",
                "io.netty.buffer.SwappedByteBuf:int readInt()",
                "io.netty.channel.AbstractChannel:io.netty.channel.ChannelFuture closeFuture()",
                "io.netty.channel.ChannelInboundHandlerAdapter:void <init>()",
                "io.netty.buffer.SwappedByteBuf:io.netty.buffer.ByteBuf writeInt(int)",
                "io.netty.handler.codec.http.HttpObjectAggregator:void <clinit>()",
                "io.netty.channel.CompleteChannelFuture:io.netty.channel.Channel channel()",
                "io.netty.handler.codec.http.DefaultFullHttpResponse:void <init>(io.netty.handler.codec.http.HttpVersion,io.netty.handler.codec.http.HttpResponseStatus)",
                "io.netty.handler.stream.ChunkedWriteHandler:void <init>()",
                "io.netty.channel.nio.NioEventLoopGroup:void <init>()",
                "io.netty.buffer.AbstractByteBuf:int readInt()",
                "io.netty.buffer.EmptyByteBuf:boolean release()",
                "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object)",
                "io.netty.channel.DefaultChannelProgressivePromise:io.netty.channel.ChannelProgressivePromise addListener(io.netty.util.concurrent.GenericFutureListener)",
                "io.netty.util.concurrent.DefaultPromise:boolean isSuccess()",
                "io.netty.handler.codec.http.HttpObjectDecoder:void <clinit>()",
                "io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseLinkedAtomicQueue:int size()",
                "io.netty.channel.socket.nio.NioSocketChannel:java.net.InetSocketAddress localAddress()",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8:int size()",
                "io.netty.handler.codec.HeadersUtils$DelegatingStringSet:int size()",
                "io.netty.channel.MultithreadEventLoopGroup:void <clinit>()",
                "io.netty.buffer.EmptyByteBuf:io.netty.buffer.ByteBuf writeLong(long)",
                "io.netty.channel.ChannelInitializer:void <init>()",
                "io.netty.channel.VoidChannelPromise:io.netty.channel.VoidChannelPromise sync()",
                "io.netty.handler.codec.CodecOutputList:int size()",
                "io.netty.bootstrap.ServerBootstrap:io.netty.bootstrap.ServerBootstrap childHandler(io.netty.channel.ChannelHandler)",
                "io.netty.handler.stream.ChunkedWriteHandler:void <clinit>()",
                "io.netty.channel.SimpleChannelInboundHandler:void <init>()",
                "io.netty.bootstrap.AbstractBootstrap:io.netty.bootstrap.AbstractBootstrap localAddress(java.net.SocketAddress)",
                "io.netty.buffer.WrappedByteBuf:int readInt()",
                "io.netty.channel.ChannelFutureListener:void <clinit>()",
                "io.netty.handler.codec.FixedLengthFrameDecoder:void <init>(int)",
                "io.netty.buffer.CompositeByteBuf:io.netty.buffer.CompositeByteBuf writeBytes(byte[])",
                "io.netty.buffer.EmptyByteBuf:io.netty.buffer.ByteBuf writeInt(int)",
                "io.netty.util.internal.shaded.org.jctools.queues.BaseLinkedQueue:int size()",
                "io.netty.handler.codec.HeadersUtils$1:int size()",
                "io.netty.channel.AbstractChannel:io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object)",
                "io.netty.handler.codec.http.DefaultFullHttpResponse:io.netty.buffer.ByteBuf content()",
                "io.netty.bootstrap.ServerBootstrap:void <clinit>()",
                "io.netty.util.AbstractConstant:void <clinit>()",
                "io.netty.bootstrap.AbstractBootstrap:io.netty.bootstrap.AbstractBootstrap handler(io.netty.channel.ChannelHandler)",
                "io.netty.buffer.SwappedByteBuf:boolean release()"
            ],
            "CVE": [
                "CVE-2019-16869"
            ],
            "used vul-method": [
                "io.netty.bootstrap.AbstractBootstrap:io.netty.channel.ChannelFuture bind()",
                "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture close()",
                "io.netty.bootstrap.Bootstrap:io.netty.channel.ChannelFuture connect(java.lang.String,int)",
                "io.netty.channel.AbstractChannel:io.netty.channel.ChannelFuture close()",
                "io.netty.channel.CompleteChannelFuture:io.netty.channel.ChannelFuture addListener(io.netty.util.concurrent.GenericFutureListener)",
                "io.netty.channel.nio.NioEventLoopGroup:void <init>(int,java.util.concurrent.ThreadFactory)",
                "io.netty.channel.DefaultEventLoopGroup:void <init>(int,java.util.concurrent.ThreadFactory)",
                "io.netty.channel.DefaultChannelPromise:io.netty.channel.ChannelPromise addListener(io.netty.util.concurrent.GenericFutureListener)",
                "io.netty.channel.nio.NioEventLoopGroup:void <init>()",
                "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object)",
                "io.netty.channel.DefaultChannelProgressivePromise:io.netty.channel.ChannelProgressivePromise addListener(io.netty.util.concurrent.GenericFutureListener)",
                "io.netty.channel.AbstractChannel:io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object)"
            ],
            "vul-called frequency": 26,
            "related vul root method": {
                "CVE-2019-16869": [
                    "io.netty.handler.codec.http.HttpObjectDecoder:void splitHeader(io.netty.util.internal.AppendableCharSequence)"
                ]
            },
            "CVE-API": {
                "CVE-2019-16869": [
                    "io.netty.bootstrap.AbstractBootstrap:io.netty.channel.ChannelFuture bind()",
                    "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture close()",
                    "io.netty.bootstrap.Bootstrap:io.netty.channel.ChannelFuture connect(java.lang.String,int)",
                    "io.netty.channel.AbstractChannel:io.netty.channel.ChannelFuture close()",
                    "io.netty.channel.CompleteChannelFuture:io.netty.channel.ChannelFuture addListener(io.netty.util.concurrent.GenericFutureListener)",
                    "io.netty.channel.nio.NioEventLoopGroup:void <init>(int,java.util.concurrent.ThreadFactory)",
                    "io.netty.channel.DefaultEventLoopGroup:void <init>(int,java.util.concurrent.ThreadFactory)",
                    "io.netty.channel.DefaultChannelPromise:io.netty.channel.ChannelPromise addListener(io.netty.util.concurrent.GenericFutureListener)",
                    "io.netty.channel.nio.NioEventLoopGroup:void <init>()",
                    "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object)",
                    "io.netty.channel.DefaultChannelProgressivePromise:io.netty.channel.ChannelProgressivePromise addListener(io.netty.util.concurrent.GenericFutureListener)",
                    "io.netty.channel.AbstractChannel:io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object)"
                ]
            }
        },
        "ch.qos.logback:logback-classic:1.1.7": {
            "used-method num": 0,
            "used method": []
        }
    }
}
{
    "project name": "wenzewoo_ExcelKit",
    "vulnerable dependencies": {
        "org.apache.poi:poi-ooxml:3.17": {
            "used-method num": 75,
            "used method": [
                "org.apache.poi.xssf.streaming.SXSSFSheet:org.apache.poi.xssf.streaming.SXSSFDrawing createDrawingPatriarch()",
                "org.apache.poi.xssf.usermodel.XSSFClientAnchor:void <clinit>()",
                "org.apache.poi.xssf.streaming.SXSSFRow:boolean equals(java.lang.Object)",
                "org.apache.poi.openxml4j.opc.OPCPackage:org.apache.poi.openxml4j.opc.OPCPackage open(java.lang.String)",
                "org.apache.poi.xssf.eventusermodel.XSSFReader$SheetIterator:boolean hasNext()",
                "org.apache.poi.xssf.usermodel.XSSFCellStyle:void setBorderBottom(org.apache.poi.ss.usermodel.BorderStyle)",
                "org.apache.poi.openxml4j.opc.PackagePartName:boolean equals(java.lang.Object)",
                "org.apache.poi.xssf.usermodel.extensions.XSSFCellBorder:boolean equals(java.lang.Object)",
                "org.apache.poi.xssf.eventusermodel.XSSFReader:java.util.Iterator getSheetsData()",
                "org.apache.poi.xssf.usermodel.XSSFDataValidation:void setSuppressDropDownArrow(boolean)",
                "org.apache.poi.xssf.eventusermodel.XSSFReader:void <clinit>()",
                "org.apache.poi.xssf.streaming.SXSSFSheet:org.apache.poi.xssf.streaming.SXSSFRow createRow(int)",
                "org.apache.poi.xssf.model.SharedStringsTable:org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst getEntryAt(int)",
                "org.apache.poi.xssf.usermodel.XSSFDataFormat:short getFormat(java.lang.String)",
                "org.apache.poi.xssf.usermodel.XSSFCellStyle:void setFont(org.apache.poi.ss.usermodel.Font)",
                "org.apache.poi.xssf.usermodel.XSSFCellStyle:java.lang.String getDataFormatString()",
                "org.apache.poi.xssf.usermodel.XSSFRichTextString:void <init>(org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst)",
                "org.apache.poi.xssf.streaming.SXSSFRow:org.apache.poi.xssf.streaming.SXSSFCell createCell(int)",
                "org.apache.poi.xssf.streaming.SXSSFDrawing:org.apache.poi.ss.usermodel.Comment createCellComment(org.apache.poi.ss.usermodel.ClientAnchor)",
                "org.apache.poi.xssf.streaming.SXSSFWorkbook:org.apache.poi.ss.usermodel.Font createFont()",
                "org.apache.poi.xssf.usermodel.XSSFComment:boolean equals(java.lang.Object)",
                "org.apache.poi.xssf.streaming.SXSSFRow$FilledCellIterator:org.apache.poi.ss.usermodel.Cell next()",
                "org.apache.poi.xssf.usermodel.XSSFDataValidationHelper:org.apache.poi.ss.usermodel.DataValidation createValidation(org.apache.poi.ss.usermodel.DataValidationConstraint,org.apache.poi.ss.util.CellRangeAddressList)",
                "org.apache.poi.xssf.streaming.SXSSFWorkbook:void <init>(int)",
                "org.apache.poi.xssf.usermodel.XSSFRow:boolean equals(java.lang.Object)",
                "org.apache.poi.xssf.usermodel.XSSFRichTextString:java.lang.String toString()",
                "org.apache.poi.openxml4j.opc.internal.MemoryPackagePartOutputStream:void close()",
                "org.apache.poi.xssf.usermodel.XSSFRichTextString:void applyFont(org.apache.poi.ss.usermodel.Font)",
                "org.apache.poi.xssf.streaming.SXSSFRow$CellIterator:boolean hasNext()",
                "org.apache.poi.xssf.eventusermodel.XSSFReader:org.apache.poi.xssf.model.StylesTable getStylesTable()",
                "org.apache.poi.xssf.streaming.SXSSFSheet:org.apache.poi.ss.usermodel.DataValidationHelper getDataValidationHelper()",
                "org.apache.poi.xssf.streaming.SXSSFCell:void setCellComment(org.apache.poi.ss.usermodel.Comment)",
                "org.apache.poi.xssf.streaming.SXSSFWorkbook$SheetIterator:boolean hasNext()",
                "org.apache.poi.xssf.usermodel.XSSFRichTextString:void <init>(java.lang.String)",
                "org.apache.poi.xssf.streaming.SXSSFSheet:void setColumnWidth(int,int)",
                "org.apache.poi.xssf.usermodel.XSSFClientAnchor:boolean equals(java.lang.Object)",
                "org.apache.poi.xssf.usermodel.XSSFCellStyle:void setBorderLeft(org.apache.poi.ss.usermodel.BorderStyle)",
                "org.apache.poi.xssf.eventusermodel.XSSFReader:void <init>(org.apache.poi.openxml4j.opc.OPCPackage)",
                "org.apache.poi.xssf.streaming.SXSSFWorkbook:org.apache.poi.ss.usermodel.DataFormat createDataFormat()",
                "org.apache.poi.openxml4j.opc.internal.MemoryPackagePartOutputStream:void flush()",
                "org.apache.poi.xssf.usermodel.XSSFColor:boolean equals(java.lang.Object)",
                "org.apache.poi.xssf.usermodel.XSSFComment:void setString(org.apache.poi.ss.usermodel.RichTextString)",
                "org.apache.poi.openxml4j.opc.PackageRelationship:boolean equals(java.lang.Object)",
                "org.apache.poi.xssf.usermodel.XSSFCellStyle:void setFillForegroundColor(short)",
                "org.apache.poi.xssf.usermodel.XSSFCellStyle:void setAlignment(org.apache.poi.ss.usermodel.HorizontalAlignment)",
                "org.apache.poi.xssf.usermodel.XSSFCellStyle:void setBorderRight(org.apache.poi.ss.usermodel.BorderStyle)",
                "org.apache.poi.xssf.usermodel.XSSFDataValidation:void createErrorBox(java.lang.String,java.lang.String)",
                "org.apache.poi.xssf.usermodel.XSSFCellStyle:java.lang.Object clone()",
                "org.apache.poi.xssf.usermodel.XSSFWorkbook$SheetIterator:org.apache.poi.ss.usermodel.Sheet next()",
                "org.apache.poi.xssf.usermodel.XSSFClientAnchor:void <init>(int,int,int,int,int,int,int,int)",
                "org.apache.poi.xssf.usermodel.extensions.XSSFCellFill:boolean equals(java.lang.Object)",
                "org.apache.poi.xssf.eventusermodel.XSSFReader:java.io.InputStream getSheet(java.lang.String)",
                "org.apache.poi.xssf.usermodel.XSSFDataValidationHelper:org.apache.poi.ss.usermodel.DataValidationConstraint createExplicitListConstraint(java.lang.String[])",
                "org.apache.poi.xssf.model.StylesTable:org.apache.poi.xssf.usermodel.XSSFCellStyle getStyleAt(int)",
                "org.apache.poi.xssf.streaming.SXSSFCell:void setCellValue(java.lang.String)",
                "org.apache.poi.xssf.usermodel.XSSFCellStyle:short getDataFormat()",
                "org.apache.poi.xssf.usermodel.XSSFCellStyle:void setFillBackgroundColor(short)",
                "org.apache.poi.xssf.eventusermodel.XSSFReader:org.apache.poi.xssf.model.SharedStringsTable getSharedStringsTable()",
                "org.apache.poi.xssf.eventusermodel.XSSFReader$SheetIterator:java.io.InputStream next()",
                "org.apache.poi.xssf.usermodel.XSSFCellStyle:void setFillPattern(org.apache.poi.ss.usermodel.FillPatternType)",
                "org.apache.poi.xssf.streaming.SXSSFRow$CellIterator:org.apache.poi.ss.usermodel.Cell next()",
                "org.apache.poi.xssf.usermodel.XSSFCellStyle:void setBorderTop(org.apache.poi.ss.usermodel.BorderStyle)",
                "org.apache.poi.xssf.usermodel.XSSFWorkbook$SheetIterator:boolean hasNext()",
                "org.apache.poi.openxml4j.opc.internal.ContentType:boolean equals(java.lang.Object)",
                "org.apache.poi.xssf.streaming.SXSSFWorkbook:org.apache.poi.xssf.streaming.SXSSFSheet createSheet(java.lang.String)",
                "org.apache.poi.xssf.streaming.SXSSFSheet:void addValidationData(org.apache.poi.ss.usermodel.DataValidation)",
                "org.apache.poi.xssf.streaming.SXSSFWorkbook:void write(java.io.OutputStream)",
                "org.apache.poi.xssf.usermodel.XSSFCellStyle:void setDataFormat(short)",
                "org.apache.poi.xssf.usermodel.XSSFName:boolean equals(java.lang.Object)",
                "org.apache.poi.openxml4j.opc.OPCPackage:org.apache.poi.openxml4j.opc.OPCPackage open(java.io.InputStream)",
                "org.apache.poi.xssf.usermodel.XSSFFont:boolean equals(java.lang.Object)",
                "org.apache.poi.xssf.streaming.SXSSFWorkbook$SheetIterator:org.apache.poi.ss.usermodel.Sheet next()",
                "org.apache.poi.xssf.usermodel.XSSFFont:void setColor(short)",
                "org.apache.poi.xssf.streaming.SXSSFWorkbook:org.apache.poi.ss.usermodel.CellStyle createCellStyle()",
                "org.apache.poi.xssf.usermodel.XSSFRichTextString:void <clinit>()"
            ],
            "CVE": [
                "CVE-2019-12415"
            ],
            "used vul-method": [
                "org.apache.poi.xssf.streaming.SXSSFSheet:org.apache.poi.xssf.streaming.SXSSFRow createRow(int)",
                "org.apache.poi.xssf.streaming.SXSSFRow:org.apache.poi.xssf.streaming.SXSSFCell createCell(int)",
                "org.apache.poi.xssf.streaming.SXSSFCell:void setCellValue(java.lang.String)"
            ],
            "vul-called frequency": 7,
            "related vul root method": {
                "CVE-2019-12415": [
                    "org.apache.poi.xssf.streaming.SheetDataWriter:void writeCell(int,org.apache.poi.ss.usermodel.Cell)",
                    "org.apache.poi.xssf.streaming.SXSSFCell:java.lang.String getStringCellValue()",
                    "org.apache.poi.xssf.streaming.SXSSFCell:void setCellValue(java.lang.String)"
                ]
            },
            "CVE-API": {
                "CVE-2019-12415": [
                    "org.apache.poi.xssf.streaming.SXSSFSheet:org.apache.poi.xssf.streaming.SXSSFRow createRow(int)",
                    "org.apache.poi.xssf.streaming.SXSSFRow:org.apache.poi.xssf.streaming.SXSSFCell createCell(int)",
                    "org.apache.poi.xssf.streaming.SXSSFCell:void setCellValue(java.lang.String)"
                ]
            }
        },
        "dom4j:dom4j:1.6.1": {
            "used-method num": 27,
            "used method": [
                "org.dom4j.tree.DefaultElement:java.lang.Object clone()",
                "org.dom4j.DocumentException:void printStackTrace()",
                "org.dom4j.tree.ContentListFacade:int size()",
                "org.dom4j.tree.ConcurrentReaderHashMap:java.lang.Object get(java.lang.Object)",
                "org.dom4j.tree.ContentListFacade:boolean contains(java.lang.Object)",
                "org.dom4j.tree.DefaultDocument:org.dom4j.Element getRootElement()",
                "org.dom4j.tree.ConcurrentReaderHashMap$HashIterator:java.lang.Object next()",
                "org.dom4j.tree.ConcurrentReaderHashMap$HashIterator:boolean hasNext()",
                "org.dom4j.tree.ContentListFacade:java.lang.Object get(int)",
                "org.dom4j.tree.AbstractElement:java.util.Iterator elementIterator()",
                "org.dom4j.tree.DefaultElement:org.dom4j.Attribute attribute(java.lang.String)",
                "org.dom4j.tree.ContentListFacade:void clear()",
                "org.dom4j.tree.AbstractAttribute:java.lang.String getName()",
                "org.dom4j.io.SAXReader:void <init>()",
                "org.dom4j.DocumentException:java.lang.String getMessage()",
                "org.dom4j.tree.AbstractNode:java.lang.Object clone()",
                "org.dom4j.tree.DefaultNamespace:boolean equals(java.lang.Object)",
                "org.dom4j.tree.FlyweightAttribute:java.lang.String getValue()",
                "org.dom4j.QName:boolean equals(java.lang.Object)",
                "org.dom4j.tree.ContentListFacade:void add(int,java.lang.Object)",
                "org.dom4j.tree.DefaultDocument:java.lang.Object clone()",
                "org.dom4j.Namespace:boolean equals(java.lang.Object)",
                "org.dom4j.tree.ConcurrentReaderHashMap$Entry:boolean equals(java.lang.Object)",
                "org.dom4j.io.SAXReader:org.dom4j.Document read(java.io.File)",
                "org.dom4j.tree.DefaultElement:java.util.List attributes()",
                "org.dom4j.tree.AbstractElement:java.lang.String getName()",
                "org.dom4j.tree.ConcurrentReaderHashMap:java.lang.Object clone()"
            ]
        },
        "xerces:xercesImpl:2.11.0": {
            "used-method num": 0,
            "used method": []
        },
        "commons-beanutils:commons-beanutils:1.9.3": {
            "used-method num": 19,
            "used method": [
                "org.apache.commons.beanutils.WrapDynaClass$2:boolean equals(java.lang.Object)",
                "org.apache.commons.beanutils.ConvertUtils:void register(org.apache.commons.beanutils.Converter,java.lang.Class)",
                "org.apache.commons.beanutils.WeakFastHashMap:java.lang.Object clone()",
                "org.apache.commons.beanutils.WeakFastHashMap:java.lang.Object get(java.lang.Object)",
                "org.apache.commons.beanutils.BeanUtils:void <init>()",
                "org.apache.commons.beanutils.WrapDynaClass$2:java.lang.Object get(java.lang.Object)",
                "org.apache.commons.beanutils.WrapDynaClass$2:java.lang.Object put(java.lang.Object,java.lang.Object)",
                "org.apache.commons.beanutils.BeanUtils:void setProperty(java.lang.Object,java.lang.String,java.lang.Object)",
                "org.apache.commons.beanutils.MethodUtils$MethodDescriptor:boolean equals(java.lang.Object)",
                "org.apache.commons.beanutils.PropertyUtilsBean:java.lang.Object getProperty(java.lang.Object,java.lang.String)",
                "org.apache.commons.beanutils.WeakFastHashMap$CollectionView:boolean equals(java.lang.Object)",
                "org.apache.commons.beanutils.DynaProperty:boolean equals(java.lang.Object)",
                "org.apache.commons.beanutils.PropertyUtilsBean:java.lang.Class getPropertyType(java.lang.Object,java.lang.String)",
                "org.apache.commons.beanutils.PropertyUtilsBean:void <init>()",
                "org.apache.commons.beanutils.WeakFastHashMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
                "org.apache.commons.beanutils.WeakFastHashMap:boolean equals(java.lang.Object)",
                "org.apache.commons.beanutils.BeanUtils:java.lang.String getProperty(java.lang.Object,java.lang.String)",
                "org.apache.commons.beanutils.converters.DateConverter:void <init>(java.lang.Object)",
                "org.apache.commons.beanutils.WrapDynaClass$CacheKey:boolean equals(java.lang.Object)"
            ],
            "CVE": [
                "CVE-2019-10086"
            ],
            "used vul-method": [
                "org.apache.commons.beanutils.WrapDynaClass$2:boolean equals(java.lang.Object)",
                "org.apache.commons.beanutils.ConvertUtils:void register(org.apache.commons.beanutils.Converter,java.lang.Class)",
                "org.apache.commons.beanutils.WrapDynaClass$2:java.lang.Object get(java.lang.Object)",
                "org.apache.commons.beanutils.WrapDynaClass$2:java.lang.Object put(java.lang.Object,java.lang.Object)",
                "org.apache.commons.beanutils.BeanUtils:void setProperty(java.lang.Object,java.lang.String,java.lang.Object)",
                "org.apache.commons.beanutils.PropertyUtilsBean:java.lang.Object getProperty(java.lang.Object,java.lang.String)",
                "org.apache.commons.beanutils.PropertyUtilsBean:java.lang.Class getPropertyType(java.lang.Object,java.lang.String)",
                "org.apache.commons.beanutils.PropertyUtilsBean:void <init>()",
                "org.apache.commons.beanutils.BeanUtils:java.lang.String getProperty(java.lang.Object,java.lang.String)",
                "org.apache.commons.beanutils.converters.DateConverter:void <init>(java.lang.Object)"
            ],
            "vul-called frequency": 15,
            "related vul root method": {
                "CVE-2019-10086": [
                    "org.apache.commons.beanutils.PropertyUtilsBean:void resetBeanIntrospectors()"
                ]
            },
            "CVE-API": {
                "CVE-2019-10086": [
                    "org.apache.commons.beanutils.WrapDynaClass$2:boolean equals(java.lang.Object)",
                    "org.apache.commons.beanutils.ConvertUtils:void register(org.apache.commons.beanutils.Converter,java.lang.Class)",
                    "org.apache.commons.beanutils.WrapDynaClass$2:java.lang.Object get(java.lang.Object)",
                    "org.apache.commons.beanutils.WrapDynaClass$2:java.lang.Object put(java.lang.Object,java.lang.Object)",
                    "org.apache.commons.beanutils.BeanUtils:void setProperty(java.lang.Object,java.lang.String,java.lang.Object)",
                    "org.apache.commons.beanutils.PropertyUtilsBean:java.lang.Object getProperty(java.lang.Object,java.lang.String)",
                    "org.apache.commons.beanutils.PropertyUtilsBean:java.lang.Class getPropertyType(java.lang.Object,java.lang.String)",
                    "org.apache.commons.beanutils.PropertyUtilsBean:void <init>()",
                    "org.apache.commons.beanutils.BeanUtils:java.lang.String getProperty(java.lang.Object,java.lang.String)",
                    "org.apache.commons.beanutils.converters.DateConverter:void <init>(java.lang.Object)"
                ]
            }
        },
        "junit:junit:4.12": {
            "used-method num": 0,
            "used method": []
        }
    }
}
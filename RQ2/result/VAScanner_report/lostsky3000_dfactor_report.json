{
    "project name": "lostsky3000_dfactor",
    "vulnerable dependencies": {
        "io.netty:netty-all:4.1.17.Final": {
            "used-method num": 647,
            "used method": [
                "io.netty.buffer.SwappedByteBuf:io.netty.buffer.ByteBuf markReaderIndex()",
                "io.netty.channel.DefaultAddressedEnvelope:boolean release()",
                "io.netty.channel.socket.DatagramPacket:void <init>(io.netty.buffer.ByteBuf,java.net.InetSocketAddress)",
                "io.netty.channel.DefaultChannelProgressivePromise:io.netty.channel.Channel channel()",
                "io.netty.channel.AbstractChannel$AbstractUnsafe$6$1:void run()",
                "io.netty.buffer.ReadOnlyByteBuf:short getShort(int)",
                "io.netty.channel.unix.FileDescriptor:java.lang.String toString()",
                "io.netty.buffer.AbstractByteBuf:io.netty.buffer.ByteBuf writeShort(int)",
                "io.netty.handler.ssl.SslHandler$2:void run()",
                "io.netty.handler.codec.http.EmptyHttpHeaders:io.netty.handler.codec.http.HttpHeaders set(java.lang.String,java.lang.Object)",
                "io.netty.buffer.AdvancedLeakAwareByteBuf:io.netty.buffer.ByteBuf copy()",
                "io.netty.handler.codec.DefaultHeaders$HeaderEntry:java.lang.Object getKey()",
                "io.netty.util.concurrent.GlobalEventExecutor:void execute(java.lang.Runnable)",
                "io.netty.buffer.UnpooledUnsafeHeapByteBuf:io.netty.buffer.ByteBuf setInt(int,int)",
                "io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueue:java.lang.String toString()",
                "io.netty.channel.CombinedChannelDuplexHandler:void <clinit>()",
                "io.netty.bootstrap.ServerBootstrap:void <init>()",
                "io.netty.buffer.AdvancedLeakAwareByteBuf:io.netty.buffer.ByteBuf setByte(int,int)",
                "io.netty.handler.codec.http.DefaultFullHttpRequest:void <init>(io.netty.handler.codec.http.HttpVersion,io.netty.handler.codec.http.HttpMethod,java.lang.String)",
                "io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext$1:void run()",
                "io.netty.channel.ChannelInitializer:void <clinit>()",
                "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelPipeline pipeline()",
                "io.netty.buffer.AbstractByteBuf:io.netty.buffer.ByteBuf setInt(int,int)",
                "io.netty.buffer.PooledSlicedByteBuf:io.netty.buffer.ByteBuf setByte(int,int)",
                "io.netty.buffer.EmptyByteBuf:boolean release(int)",
                "io.netty.buffer.AbstractByteBufAllocator:io.netty.buffer.ByteBuf ioBuffer(int)",
                "io.netty.handler.codec.HeadersUtils$DelegatingStringSet:java.util.Iterator iterator()",
                "io.netty.handler.codec.http.HttpResponseStatus:int code()",
                "io.netty.channel.DefaultChannelPromise:io.netty.channel.Channel channel()",
                "io.netty.buffer.SwappedByteBuf:io.netty.buffer.ByteBuf writeInt(int)",
                "io.netty.buffer.UnpooledUnsafeHeapByteBuf:byte getByte(int)",
                "io.netty.handler.ssl.OpenSslX509Certificate:java.lang.String toString()",
                "io.netty.handler.codec.http.websocketx.PongWebSocketFrame:void <init>(io.netty.buffer.ByteBuf)",
                "io.netty.channel.DefaultChannelPipeline$4:void run()",
                "io.netty.buffer.EmptyByteBuf:io.netty.buffer.ByteBuf writeByte(int)",
                "io.netty.channel.DelegatingChannelPromiseNotifier:io.netty.channel.ChannelPromise setSuccess()",
                "io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler$ServerHandshakeStateEvent:void <clinit>()",
                "io.netty.buffer.WrappedByteBuf:int readInt()",
                "io.netty.buffer.UnpooledUnsafeHeapByteBuf:short getShort(int)",
                "io.netty.handler.ssl.OpenSslJavaxX509Certificate:java.lang.String toString()",
                "io.netty.buffer.CompositeByteBuf:io.netty.buffer.CompositeByteBuf writeBytes(io.netty.buffer.ByteBuf)",
                "io.netty.buffer.WrappedByteBuf:int writableBytes()",
                "io.netty.handler.codec.http.DefaultHttpRequest:java.lang.String toString()",
                "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture close()",
                "io.netty.handler.codec.http.multipart.MixedAttribute:java.lang.String getName()",
                "io.netty.buffer.UnpooledHeapByteBuf:int getInt(int)",
                "io.netty.buffer.AdvancedLeakAwareByteBuf:io.netty.buffer.ByteBuf writeBytes(io.netty.buffer.ByteBuf)",
                "io.netty.util.collection.IntObjectHashMap$MapEntry:java.lang.Object getValue()",
                "io.netty.buffer.DuplicatedByteBuf:io.netty.buffer.ByteBuf setInt(int,int)",
                "io.netty.bootstrap.AbstractBootstrap:io.netty.channel.ChannelFuture bind(int)",
                "io.netty.channel.SucceededChannelFuture:boolean isSuccess()",
                "io.netty.handler.codec.http.HttpResponseStatus:io.netty.handler.codec.http.HttpResponseStatus valueOf(int)",
                "io.netty.buffer.AdvancedLeakAwareByteBuf:boolean release()",
                "io.netty.handler.codec.compression.JZlibEncoder$1:void run()",
                "io.netty.util.internal.ThreadLocalRandom$1:void run()",
                "io.netty.buffer.EmptyByteBuf:int refCnt()",
                "io.netty.handler.codec.ReplayingDecoderByteBuf:int writableBytes()",
                "io.netty.buffer.CompositeByteBuf:io.netty.buffer.CompositeByteBuf writeInt(int)",
                "io.netty.util.collection.IntObjectHashMap:void clear()",
                "io.netty.buffer.EmptyByteBuf:int readInt()",
                "io.netty.handler.codec.http.DefaultHttpHeaders:void <init>()",
                "io.netty.channel.DefaultChannelPipeline$3:void run()",
                "io.netty.handler.codec.compression.JZlibEncoder$3:void run()",
                "io.netty.handler.codec.DefaultHeaders$HeaderEntry:java.lang.Object getValue()",
                "io.netty.buffer.SwappedByteBuf:io.netty.buffer.ByteBuf readBytes(byte[])",
                "io.netty.buffer.SwappedByteBuf:java.lang.String toString()",
                "io.netty.channel.AbstractChannel:io.netty.channel.ChannelPromise newPromise()",
                "io.netty.buffer.SwappedByteBuf:boolean release(int)",
                "io.netty.buffer.ReadOnlyByteBufferBuf:byte getByte(int)",
                "io.netty.bootstrap.ServerBootstrap$1$1:void run()",
                "io.netty.handler.codec.ReplayingDecoderByteBuf:byte getByte(int)",
                "io.netty.channel.VoidChannelPromise:io.netty.channel.VoidChannelPromise setFailure(java.lang.Throwable)",
                "io.netty.handler.codec.http.HttpObjectDecoder:void <clinit>()",
                "io.netty.buffer.CompositeByteBuf:io.netty.buffer.CompositeByteBuf writeBytes(byte[])",
                "io.netty.buffer.WrappedByteBuf:java.lang.CharSequence readCharSequence(int,java.nio.charset.Charset)",
                "io.netty.handler.codec.DefaultHeaders$ValueIterator:java.lang.Object next()",
                "io.netty.channel.AbstractChannel:io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object)",
                "io.netty.util.AbstractConstant:void <clinit>()",
                "io.netty.buffer.SwappedByteBuf:java.nio.ByteBuffer nioBuffer()",
                "io.netty.handler.codec.http.HttpObjectAggregator$AggregatedFullHttpResponse:io.netty.handler.codec.http.HttpResponseStatus status()",
                "io.netty.buffer.EmptyByteBuf:io.netty.buffer.ByteBuf writeBytes(io.netty.buffer.ByteBuf)",
                "io.netty.buffer.SwappedByteBuf:io.netty.buffer.ByteBuf setByte(int,int)",
                "io.netty.buffer.Unpooled:void <clinit>()",
                "io.netty.util.concurrent.DefaultPromise:java.lang.String toString()",
                "io.netty.handler.codec.ReplayingDecoderByteBuf:java.lang.String toString()",
                "io.netty.buffer.WrappedByteBuf:io.netty.buffer.ByteBuf writeBytes(byte[],int,int)",
                "io.netty.util.CharsetUtil:void <clinit>()",
                "io.netty.buffer.SwappedByteBuf:io.netty.buffer.ByteBuf writeByte(int)",
                "io.netty.buffer.SwappedByteBuf:short getShort(int)",
                "io.netty.handler.codec.CodecOutputList:void clear()",
                "io.netty.handler.codec.HeadersUtils$StringEntryIterator:void remove()",
                "io.netty.handler.codec.http.multipart.AbstractDiskHttpData:boolean renameTo(java.io.File)",
                "io.netty.util.ResourceLeakDetector$DefaultResourceLeak:java.lang.String toString()",
                "io.netty.buffer.EmptyByteBuf:java.lang.String toString(java.nio.charset.Charset)",
                "io.netty.handler.codec.ByteToMessageDecoder:void <clinit>()",
                "io.netty.channel.epoll.EpollSocketChannel:java.net.InetSocketAddress remoteAddress()",
                "io.netty.buffer.PooledDuplicatedByteBuf:byte getByte(int)",
                "io.netty.channel.FailedChannelFuture:io.netty.channel.ChannelFuture sync()",
                "io.netty.handler.codec.http.HttpHeaders:io.netty.handler.codec.http.HttpHeaders add(java.lang.CharSequence,java.lang.Object)",
                "io.netty.channel.DefaultChannelId:java.lang.String toString()",
                "io.netty.handler.codec.http.multipart.MixedFileUpload:io.netty.handler.codec.http.multipart.InterfaceHttpData$HttpDataType getHttpDataType()",
                "io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker:void finishHandshake(io.netty.channel.Channel,io.netty.handler.codec.http.FullHttpResponse)",
                "io.netty.util.Signal:java.lang.String toString()",
                "io.netty.buffer.WrappedByteBuf:io.netty.buffer.ByteBuf setByte(int,int)",
                "io.netty.buffer.SwappedByteBuf:int writableBytes()",
                "io.netty.handler.ssl.util.ThreadLocalInsecureRandom:int nextInt(int)",
                "io.netty.channel.VoidChannelPromise:boolean isSuccess()",
                "io.netty.util.collection.IntObjectHashMap$KeySet$1:java.lang.Integer next()",
                "io.netty.buffer.AbstractUnsafeSwappedByteBuf:short getShort(int)",
                "io.netty.util.concurrent.AbstractEventExecutorGroup:io.netty.util.concurrent.Future submit(java.lang.Runnable)",
                "io.netty.handler.ssl.util.InsecureTrustManagerFactory:void <clinit>()",
                "io.netty.handler.codec.DefaultHeaders:java.lang.String toString()",
                "io.netty.handler.codec.http.multipart.InterfaceHttpData$HttpDataType:void <clinit>()",
                "io.netty.util.concurrent.DefaultPromise$2:void run()",
                "io.netty.channel.DelegatingChannelPromiseNotifier:io.netty.channel.ChannelPromise setFailure(java.lang.Throwable)",
                "io.netty.handler.ssl.SslContextBuilder:io.netty.handler.ssl.SslContextBuilder forServer(java.io.File,java.io.File)",
                "io.netty.buffer.SwappedByteBuf:byte getByte(int)",
                "io.netty.buffer.SwappedByteBuf:byte readByte()",
                "io.netty.handler.codec.ReplayingDecoderByteBuf:java.lang.String toString(java.nio.charset.Charset)",
                "io.netty.handler.ssl.SslHandler$3:void run()",
                "io.netty.handler.ssl.util.SimpleTrustManagerFactory:void <clinit>()",
                "io.netty.util.collection.IntObjectHashMap$MapIterator:boolean hasNext()",
                "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelHandlerContext fireChannelRead(java.lang.Object)",
                "io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext:io.netty.channel.ChannelPipeline pipeline()",
                "io.netty.handler.codec.http.HttpObjectAggregator$AggregatedFullHttpResponse:java.lang.String toString()",
                "io.netty.util.internal.RecyclableArrayList:boolean add(java.lang.Object)",
                "io.netty.channel.CompleteChannelFuture:io.netty.channel.ChannelFuture sync()",
                "io.netty.buffer.WrappedByteBuf:byte getByte(int)",
                "io.netty.handler.codec.http.DefaultFullHttpRequest:io.netty.handler.codec.http.FullHttpRequest retain()",
                "io.netty.channel.DefaultChannelPipeline$7:void run()",
                "io.netty.buffer.ReadOnlyByteBufferBuf:short getShort(int)",
                "io.netty.buffer.WrappedByteBuf:java.nio.ByteBuffer nioBuffer()",
                "io.netty.buffer.EmptyByteBuf:io.netty.buffer.ByteBuf copy()",
                "io.netty.util.collection.IntObjectHashMap$2$1:java.lang.Object next()",
                "io.netty.buffer.WrappedByteBuf:io.netty.buffer.ByteBuf writeBytes(io.netty.buffer.ByteBuf)",
                "io.netty.buffer.AbstractUnpooledSlicedByteBuf:short getShort(int)",
                "io.netty.handler.codec.http.LastHttpContent:void <clinit>()",
                "io.netty.handler.codec.http.HttpVersion:java.lang.String toString()",
                "io.netty.handler.codec.http.DefaultFullHttpResponse:java.lang.String toString()",
                "io.netty.util.collection.IntObjectHashMap:void putAll(java.util.Map)",
                "io.netty.buffer.DuplicatedByteBuf:short getShort(int)",
                "io.netty.buffer.PooledSlicedByteBuf:io.netty.buffer.ByteBuf setInt(int,int)",
                "io.netty.handler.codec.http.multipart.DiskAttribute:java.lang.String toString()",
                "io.netty.buffer.EmptyByteBuf:short getShort(int)",
                "io.netty.buffer.DefaultByteBufHolder:java.lang.String toString()",
                "io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueue:java.util.Iterator iterator()",
                "io.netty.buffer.AdvancedLeakAwareByteBuf:short getShort(int)",
                "io.netty.buffer.SwappedByteBuf:io.netty.buffer.ByteBuf writeBytes(byte[])",
                "io.netty.handler.codec.http.DefaultHttpHeaders:io.netty.handler.codec.http.HttpHeaders add(java.lang.String,java.lang.Object)",
                "io.netty.buffer.SwappedByteBuf:int readInt()",
                "io.netty.handler.codec.http.HttpObjectAggregator$AggregatedFullHttpRequest:io.netty.handler.codec.http.FullHttpRequest setUri(java.lang.String)",
                "io.netty.util.concurrent.FailedFuture:java.lang.Throwable cause()",
                "io.netty.handler.codec.CodecOutputList:java.lang.Object get(int)",
                "io.netty.handler.codec.http.HttpObjectAggregator:void <clinit>()",
                "io.netty.channel.DefaultChannelPromise:io.netty.channel.ChannelPromise setSuccess()",
                "io.netty.buffer.CompositeByteBuf:byte getByte(int)",
                "io.netty.buffer.EmptyByteBuf:boolean release()",
                "io.netty.buffer.AdvancedLeakAwareByteBuf:boolean release(int)",
                "io.netty.handler.codec.http.HttpHeaders:io.netty.handler.codec.http.HttpHeaders add(io.netty.handler.codec.http.HttpHeaders)",
                "io.netty.util.collection.IntObjectHashMap:java.lang.Object get(java.lang.Object)",
                "io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseMpscLinkedAtomicArrayQueue:java.util.Iterator iterator()",
                "io.netty.buffer.CompositeByteBuf:io.netty.buffer.CompositeByteBuf retain()",
                "io.netty.bootstrap.ServerBootstrap:io.netty.bootstrap.ServerBootstrap childHandler(io.netty.channel.ChannelHandler)",
                "io.netty.handler.codec.http.websocketx.WebSocketScheme:java.lang.String toString()",
                "io.netty.buffer.EmptyByteBuf:io.netty.buffer.ByteBuf retain()",
                "io.netty.handler.codec.http.multipart.HttpPostRequestDecoder:void <init>(io.netty.handler.codec.http.HttpRequest)",
                "io.netty.buffer.PooledDuplicatedByteBuf:io.netty.buffer.ByteBuf setInt(int,int)",
                "io.netty.channel.DefaultChannelPipeline$2:void run()",
                "io.netty.util.collection.IntObjectHashMap$PrimitiveIterator:boolean hasNext()",
                "io.netty.util.concurrent.DefaultPromise:boolean isDone()",
                "io.netty.buffer.CompositeByteBuf:io.netty.buffer.CompositeByteBuf writeShort(int)",
                "io.netty.util.concurrent.CompleteFuture:boolean isCancelled()",
                "io.netty.bootstrap.Bootstrap:void <clinit>()",
                "io.netty.channel.DelegatingChannelPromiseNotifier:io.netty.channel.ChannelPromise sync()",
                "io.netty.buffer.AbstractByteBuf:io.netty.buffer.ByteBuf readBytes(byte[])",
                "io.netty.handler.codec.http.HttpObjectAggregator$AggregatedFullHttpRequest:io.netty.handler.codec.http.FullHttpRequest retain()",
                "io.netty.handler.codec.http.DefaultHttpHeaders:io.netty.handler.codec.http.HttpHeaders set(java.lang.String,java.lang.Object)",
                "io.netty.channel.embedded.EmbeddedEventLoop:void shutdown()",
                "io.netty.buffer.SimpleLeakAwareByteBuf:boolean release(int)",
                "io.netty.handler.codec.http.DefaultHttpObject:io.netty.handler.codec.DecoderResult decoderResult()",
                "io.netty.channel.embedded.EmbeddedEventLoop:boolean isShuttingDown()",
                "io.netty.util.internal.shaded.org.jctools.queues.SpscLinkedQueue:java.lang.String toString()",
                "io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker:boolean isHandshakeComplete()",
                "io.netty.buffer.AdvancedLeakAwareByteBuf:io.netty.buffer.ByteBuf readBytes(byte[])",
                "io.netty.util.concurrent.ScheduledFutureTask:void run()",
                "io.netty.channel.CompleteChannelFuture:io.netty.channel.ChannelFuture addListener(io.netty.util.concurrent.GenericFutureListener)",
                "io.netty.channel.DefaultChannelPipeline:io.netty.channel.ChannelHandler get(java.lang.Class)",
                "io.netty.buffer.UnpooledByteBufAllocator$UnpooledByteBufAllocatorMetric:java.lang.String toString()",
                "io.netty.buffer.AbstractByteBufAllocator:void <clinit>()",
                "io.netty.util.concurrent.DefaultPromise$3:void run()",
                "io.netty.channel.DefaultChannelPromise:io.netty.channel.ChannelPromise addListener(io.netty.util.concurrent.GenericFutureListener)",
                "io.netty.buffer.UnpooledDirectByteBuf:short getShort(int)",
                "io.netty.channel.embedded.EmbeddedEventLoop:boolean isShutdown()",
                "io.netty.handler.codec.http.websocketx.TextWebSocketFrame:void <init>(java.lang.String)",
                "io.netty.buffer.AbstractUnsafeSwappedByteBuf:io.netty.buffer.ByteBuf setInt(int,int)",
                "io.netty.handler.codec.ReplayingDecoderByteBuf:io.netty.buffer.ByteBuf readBytes(byte[])",
                "io.netty.util.concurrent.MultithreadEventExecutorGroup:boolean isTerminated()",
                "io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseMpscLinkedAtomicArrayQueue:java.lang.String toString()",
                "io.netty.util.collection.IntObjectHashMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
                "io.netty.buffer.AbstractByteBuf:byte readByte()",
                "io.netty.buffer.WrappedByteBuf:io.netty.buffer.ByteBuf writeByte(int)",
                "io.netty.handler.codec.http.multipart.MemoryFileUpload:io.netty.handler.codec.http.multipart.InterfaceHttpData$HttpDataType getHttpDataType()",
                "io.netty.handler.codec.http.multipart.MixedFileUpload:java.lang.String getContentType()",
                "io.netty.handler.codec.ReplayingDecoderByteBuf:io.netty.buffer.ByteBuf writeShort(int)",
                "io.netty.util.concurrent.SingleThreadEventExecutor:boolean isShuttingDown()",
                "io.netty.bootstrap.ServerBootstrap:void <clinit>()",
                "io.netty.buffer.DuplicatedByteBuf:io.netty.buffer.ByteBuf setByte(int,int)",
                "io.netty.buffer.AbstractByteBuf:io.netty.buffer.ByteBuf writeInt(int)",
                "io.netty.buffer.SwappedByteBuf:io.netty.buffer.ByteBuf copy()",
                "io.netty.handler.codec.http.DefaultHttpResponse:void <init>(io.netty.handler.codec.http.HttpVersion,io.netty.handler.codec.http.HttpResponseStatus)",
                "io.netty.buffer.ReadOnlyByteBuf:io.netty.buffer.ByteBuf setByte(int,int)",
                "io.netty.buffer.EmptyByteBuf:io.netty.buffer.ByteBuf setByte(int,int)",
                "io.netty.buffer.WrappedByteBuf:byte readByte()",
                "io.netty.buffer.Unpooled:io.netty.buffer.ByteBuf wrappedBuffer(byte[])",
                "io.netty.handler.codec.http.DefaultHttpContent:java.lang.String toString()",
                "io.netty.bootstrap.AbstractBootstrap:io.netty.bootstrap.AbstractBootstrap option(io.netty.channel.ChannelOption,java.lang.Object)",
                "io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext:io.netty.channel.Channel channel()",
                "io.netty.buffer.AbstractUnsafeSwappedByteBuf:io.netty.buffer.ByteBuf writeShort(int)",
                "io.netty.channel.AbstractChannelHandlerContext:java.lang.String toString()",
                "io.netty.buffer.AbstractUnpooledSlicedByteBuf:io.netty.buffer.ByteBuf setByte(int,int)",
                "io.netty.buffer.AbstractByteBuf:java.lang.String toString(java.nio.charset.Charset)",
                "io.netty.handler.codec.ReplayingDecoderByteBuf:java.nio.ByteBuffer nioBuffer()",
                "io.netty.handler.codec.http.HttpClientCodec:void <init>()",
                "io.netty.buffer.EmptyByteBuf:io.netty.buffer.ByteBuf markReaderIndex()",
                "io.netty.buffer.AdvancedLeakAwareByteBuf:java.nio.ByteBuffer nioBuffer()",
                "io.netty.util.collection.IntObjectHashMap$PrimitiveIterator:io.netty.util.collection.IntObjectMap$PrimitiveEntry next()",
                "io.netty.handler.codec.http.HttpResponseStatus:void <clinit>()",
                "io.netty.buffer.AbstractReferenceCountedByteBuf:boolean release()",
                "io.netty.channel.AbstractChannel:java.lang.String toString()",
                "io.netty.buffer.EmptyByteBuf:long readLong()",
                "io.netty.handler.codec.http.HttpHeaders:void <clinit>()",
                "io.netty.channel.DefaultChannelProgressivePromise:io.netty.channel.ChannelProgressivePromise sync()",
                "io.netty.channel.AbstractChannel:io.netty.buffer.ByteBufAllocator alloc()",
                "io.netty.channel.DefaultChannelPipeline$9:void run()",
                "io.netty.channel.AbstractChannel:java.net.SocketAddress remoteAddress()",
                "io.netty.channel.ChannelInboundHandlerAdapter:void <init>()",
                "io.netty.handler.ssl.SslHandler$5:void run()",
                "io.netty.buffer.SwappedByteBuf:int getInt(int)",
                "io.netty.handler.codec.http.DefaultFullHttpResponse:void <init>(io.netty.handler.codec.http.HttpVersion,io.netty.handler.codec.http.HttpResponseStatus)",
                "io.netty.buffer.AbstractByteBuf:int readInt()",
                "io.netty.buffer.EmptyByteBuf:io.netty.buffer.ByteBuf resetReaderIndex()",
                "io.netty.buffer.AbstractReferenceCountedByteBuf:io.netty.buffer.ByteBuf retain()",
                "io.netty.handler.codec.http.multipart.MixedFileUpload:java.lang.String getName()",
                "io.netty.buffer.WrappedByteBuf:short getShort(int)",
                "io.netty.channel.MultithreadEventLoopGroup:void <clinit>()",
                "io.netty.buffer.AbstractReferenceCountedByteBuf:int refCnt()",
                "io.netty.handler.codec.http.multipart.HttpPostRequestDecoder:void cleanFiles()",
                "io.netty.buffer.AbstractDerivedByteBuf:int refCnt()",
                "io.netty.channel.socket.DatagramPacket:io.netty.channel.socket.DatagramPacket retain()",
                "io.netty.channel.DefaultChannelPipeline$6:void run()",
                "io.netty.buffer.EmptyByteBuf:io.netty.buffer.ByteBuf writeBytes(byte[])",
                "io.netty.channel.nio.SelectedSelectionKeySet:java.util.Iterator iterator()",
                "io.netty.handler.codec.http.HttpResponseEncoder:void <init>()",
                "io.netty.util.collection.IntObjectHashMap$KeySet$1:boolean hasNext()",
                "io.netty.buffer.UnpooledDirectByteBuf:byte getByte(int)",
                "io.netty.handler.codec.http.DefaultLastHttpContent:java.lang.String toString()",
                "io.netty.util.AsciiString:java.lang.String toString()",
                "io.netty.buffer.WrappedByteBuf:long readLong()",
                "io.netty.channel.DefaultAddressedEnvelope:java.net.SocketAddress sender()",
                "io.netty.handler.codec.http.DefaultFullHttpRequest:java.lang.String toString()",
                "io.netty.handler.codec.http.DefaultHttpHeaders:java.lang.String get(java.lang.CharSequence)",
                "io.netty.handler.codec.http.HttpUtil:long getContentLength(io.netty.handler.codec.http.HttpMessage)",
                "io.netty.handler.codec.http.HttpHeaderNames:void <clinit>()",
                "io.netty.buffer.SwappedByteBuf:java.lang.String toString(java.nio.charset.Charset)",
                "io.netty.buffer.CompositeByteBuf:io.netty.buffer.CompositeByteBuf addComponents(boolean,io.netty.buffer.ByteBuf[])",
                "io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler:void <init>(java.lang.String,java.lang.String,boolean)",
                "io.netty.buffer.CompositeByteBuf:io.netty.buffer.CompositeByteBuf resetReaderIndex()",
                "io.netty.buffer.WrappedByteBuf:io.netty.buffer.ByteBuf retain()",
                "io.netty.buffer.AbstractByteBuf:io.netty.buffer.ByteBuf copy()",
                "io.netty.util.ThreadDeathWatcher$Watcher:void run()",
                "io.netty.util.concurrent.AbstractEventExecutor:io.netty.util.concurrent.Future shutdownGracefully()",
                "io.netty.util.internal.logging.AbstractInternalLogger:java.lang.String toString()",
                "io.netty.handler.ssl.SslHandler$7:void run()",
                "io.netty.handler.codec.http.HttpObjectEncoder:void <clinit>()",
                "io.netty.buffer.UnpooledDirectByteBuf:io.netty.buffer.ByteBuf setByte(int,int)",
                "io.netty.buffer.SwappedByteBuf:short readShort()",
                "io.netty.buffer.AdvancedLeakAwareByteBuf:io.netty.buffer.ByteBuf writeBytes(byte[],int,int)",
                "io.netty.handler.codec.http.HttpResponseStatus:java.lang.String toString()",
                "io.netty.buffer.UnpooledHeapByteBuf:short getShort(int)",
                "io.netty.buffer.AbstractByteBuf:java.lang.String toString()",
                "io.netty.buffer.EmptyByteBuf:io.netty.buffer.ByteBuf writeBytes(byte[],int,int)",
                "io.netty.buffer.CompositeByteBuf$CompositeByteBufIterator:io.netty.buffer.ByteBuf next()",
                "io.netty.handler.codec.DefaultHeaders$HeaderIterator:void remove()",
                "io.netty.util.internal.shaded.org.jctools.queues.BaseLinkedQueue:java.util.Iterator iterator()",
                "io.netty.handler.codec.HeadersUtils$StringEntry:java.lang.String toString()",
                "io.netty.channel.ChannelOutboundBuffer$3:void run()",
                "io.netty.buffer.AdvancedLeakAwareByteBuf:io.netty.buffer.ByteBuf retain()",
                "io.netty.handler.codec.http.multipart.AbstractMemoryHttpData:boolean renameTo(java.io.File)",
                "io.netty.handler.codec.http.HttpScheme:java.lang.String toString()",
                "io.netty.handler.codec.http.QueryStringDecoder:java.util.Map parameters()",
                "io.netty.channel.embedded.EmbeddedEventLoop:void execute(java.lang.Runnable)",
                "io.netty.buffer.ReadOnlyByteBufferBuf:io.netty.buffer.ByteBuf setInt(int,int)",
                "io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext:io.netty.channel.ChannelPromise newPromise()",
                "io.netty.buffer.AdvancedLeakAwareByteBuf:int getInt(int)",
                "io.netty.handler.codec.http.multipart.DiskFileUpload:java.lang.String getContentType()",
                "io.netty.handler.codec.http.multipart.MixedAttribute:java.lang.String getValue()",
                "io.netty.util.ResourceLeakDetector$Record:java.lang.String toString()",
                "io.netty.buffer.ReadOnlyByteBufferBuf:io.netty.buffer.ByteBuf setByte(int,int)",
                "io.netty.buffer.WrappedByteBuf:io.netty.buffer.ByteBuf writeBytes(byte[])",
                "io.netty.buffer.AbstractByteBufAllocator:io.netty.buffer.CompositeByteBuf compositeBuffer()",
                "io.netty.channel.nio.NioEventLoop$6:void run()",
                "io.netty.handler.codec.http.HttpUtil:boolean isKeepAlive(io.netty.handler.codec.http.HttpMessage)",
                "io.netty.buffer.CompositeByteBuf:io.netty.buffer.CompositeByteBuf writeBytes(byte[],int,int)",
                "io.netty.buffer.WrappedByteBuf:io.netty.buffer.ByteBuf writeShort(int)",
                "io.netty.channel.WriteBufferWaterMark:java.lang.String toString()",
                "io.netty.util.collection.IntObjectHashMap$KeySet:java.util.Iterator iterator()",
                "io.netty.buffer.EmptyByteBuf:java.lang.CharSequence readCharSequence(int,java.nio.charset.Charset)",
                "io.netty.handler.codec.http.HttpMethod:void <clinit>()",
                "io.netty.buffer.AdvancedLeakAwareByteBuf:io.netty.buffer.ByteBuf writeByte(int)",
                "io.netty.buffer.UnreleasableByteBuf:boolean release()",
                "io.netty.util.concurrent.GlobalEventExecutor:void shutdown()",
                "io.netty.buffer.UnpooledDirectByteBuf:io.netty.buffer.ByteBuf setInt(int,int)",
                "io.netty.handler.codec.compression.JdkZlibEncoder$1:void run()",
                "io.netty.channel.SucceededChannelFuture:java.lang.Throwable cause()",
                "io.netty.bootstrap.AbstractBootstrap:java.lang.String toString()",
                "io.netty.util.internal.AppendableCharSequence:java.lang.String toString()",
                "io.netty.handler.codec.http.EmptyHttpHeaders:java.lang.String get(java.lang.String)",
                "io.netty.buffer.ReadOnlyByteBufferBuf:int getInt(int)",
                "io.netty.channel.AbstractChannel:io.netty.channel.ChannelPipeline pipeline()",
                "io.netty.handler.codec.http.DefaultHttpResponse:java.lang.String toString()",
                "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object)",
                "io.netty.util.internal.shaded.org.jctools.queues.atomic.MpscAtomicArrayQueue:java.util.Iterator iterator()",
                "io.netty.handler.codec.http.multipart.MixedFileUpload:java.lang.String getFilename()",
                "io.netty.channel.SimpleChannelInboundHandler:void <init>()",
                "io.netty.channel.VoidChannelPromise:io.netty.channel.VoidChannelPromise setSuccess()",
                "io.netty.handler.codec.ReplayingDecoderByteBuf:int getInt(int)",
                "io.netty.buffer.UnreleasableByteBuf:boolean release(int)",
                "io.netty.handler.codec.http.multipart.DiskFileUpload:java.lang.String getFilename()",
                "io.netty.buffer.AdvancedLeakAwareByteBuf:short readShort()",
                "io.netty.util.concurrent.CompleteFuture:boolean isDone()",
                "io.netty.buffer.AbstractByteBuf:byte getByte(int)",
                "io.netty.handler.codec.http.HttpMethod:java.lang.String toString()",
                "io.netty.handler.codec.http.multipart.MixedFileUpload:java.lang.String toString()",
                "io.netty.channel.DelegatingChannelPromiseNotifier:java.lang.Throwable cause()",
                "io.netty.buffer.CompositeByteBuf:java.lang.String toString()",
                "io.netty.bootstrap.Bootstrap:io.netty.channel.ChannelFuture connect(java.lang.String,int)",
                "io.netty.channel.ChannelOption:void <clinit>()",
                "io.netty.buffer.SwappedByteBuf:long readLong()",
                "io.netty.handler.codec.HeadersUtils$StringEntry:java.lang.String getValue()",
                "io.netty.bootstrap.ServerBootstrap:io.netty.bootstrap.ServerBootstrap group(io.netty.channel.EventLoopGroup,io.netty.channel.EventLoopGroup)",
                "io.netty.handler.codec.HeadersUtils$StringEntry:java.lang.String getKey()",
                "io.netty.buffer.AbstractByteBuf:io.netty.buffer.ByteBuf setByte(int,int)",
                "io.netty.buffer.WrappedByteBuf:io.netty.buffer.ByteBuf writeInt(int)",
                "io.netty.buffer.AbstractByteBuf:long readLong()",
                "io.netty.buffer.CompositeByteBuf:io.netty.buffer.CompositeByteBuf setByte(int,int)",
                "io.netty.buffer.CompositeByteBuf:io.netty.buffer.CompositeByteBuf readBytes(byte[])",
                "io.netty.buffer.AdvancedLeakAwareByteBuf:java.lang.CharSequence readCharSequence(int,java.nio.charset.Charset)",
                "io.netty.channel.DelegatingChannelPromiseNotifier:io.netty.channel.ChannelPromise addListener(io.netty.util.concurrent.GenericFutureListener)",
                "io.netty.buffer.ReadOnlyByteBuf:io.netty.buffer.ByteBuf setInt(int,int)",
                "io.netty.util.collection.IntObjectHashMap$EntrySet:java.util.Iterator iterator()",
                "io.netty.handler.codec.http.multipart.DiskAttribute:io.netty.handler.codec.http.multipart.InterfaceHttpData$HttpDataType getHttpDataType()",
                "io.netty.buffer.CompositeByteBuf:io.netty.buffer.CompositeByteBuf writeByte(int)",
                "io.netty.handler.codec.HeadersUtils$StringEntryIterator:java.util.Map$Entry next()",
                "io.netty.handler.codec.HeadersUtils$DelegatingStringSet:boolean contains(java.lang.Object)",
                "io.netty.buffer.EmptyByteBuf:io.netty.buffer.ByteBuf writeShort(int)",
                "io.netty.handler.codec.DefaultHeaders$ValueIterator:boolean hasNext()",
                "io.netty.handler.codec.ReplayingDecoderByteBuf:long readLong()",
                "io.netty.buffer.EmptyByteBuf:int getInt(int)",
                "io.netty.util.collection.IntObjectHashMap$2$1:void remove()",
                "io.netty.buffer.PooledDuplicatedByteBuf:int getInt(int)",
                "io.netty.util.concurrent.GlobalEventExecutor$TaskRunner:void run()",
                "io.netty.channel.nio.NioEventLoopGroup:void <init>(int)",
                "io.netty.buffer.AdvancedLeakAwareByteBuf:io.netty.buffer.ByteBuf writeShort(int)",
                "io.netty.util.concurrent.SingleThreadEventExecutor:void execute(java.lang.Runnable)",
                "io.netty.bootstrap.AbstractBootstrap:io.netty.bootstrap.AbstractBootstrap handler(io.netty.channel.ChannelHandler)",
                "io.netty.buffer.SwappedByteBuf:boolean release()",
                "io.netty.handler.codec.http.DefaultHttpRequest:io.netty.handler.codec.http.HttpMethod method()",
                "io.netty.buffer.AdvancedLeakAwareByteBuf:byte readByte()",
                "io.netty.handler.codec.http.websocketx.WebSocketFrame:java.lang.String toString()",
                "io.netty.handler.codec.http.HttpUtil:void setContentLength(io.netty.handler.codec.http.HttpMessage,long)",
                "io.netty.buffer.AbstractUnsafeSwappedByteBuf:io.netty.buffer.ByteBuf writeInt(int)",
                "io.netty.handler.codec.ReplayingDecoderByteBuf:io.netty.buffer.ByteBuf setByte(int,int)",
                "io.netty.handler.codec.compression.JdkZlibEncoder$3:void run()",
                "io.netty.handler.codec.http.HttpMethod:java.lang.String name()",
                "io.netty.handler.codec.http.multipart.MixedFileUpload:boolean renameTo(java.io.File)",
                "io.netty.buffer.CompositeByteBuf:io.netty.buffer.CompositeByteBuf markReaderIndex()",
                "io.netty.buffer.AbstractByteBuf:io.netty.buffer.ByteBuf writeBytes(byte[])",
                "io.netty.handler.codec.http.EmptyHttpHeaders:io.netty.handler.codec.http.HttpHeaders add(java.lang.String,java.lang.Object)",
                "io.netty.buffer.EmptyByteBuf:io.netty.buffer.ByteBuf setInt(int,int)",
                "io.netty.util.internal.shaded.org.jctools.queues.atomic.MpscAtomicArrayQueue:java.lang.String toString()",
                "io.netty.bootstrap.Bootstrap:void <init>()",
                "io.netty.handler.codec.ReplayingDecoderByteBuf:io.netty.buffer.ByteBuf retain()",
                "io.netty.buffer.AbstractByteBuf:short getShort(int)",
                "io.netty.buffer.FixedCompositeByteBuf:io.netty.buffer.ByteBuf setByte(int,int)",
                "io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext:io.netty.channel.ChannelHandlerContext fireChannelRead(java.lang.Object)",
                "io.netty.channel.DefaultAddressedEnvelope:java.lang.String toString()",
                "io.netty.channel.VoidChannelPromise:java.lang.Throwable cause()",
                "io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler:void <clinit>()",
                "io.netty.buffer.FixedCompositeByteBuf:io.netty.buffer.ByteBuf setInt(int,int)",
                "io.netty.handler.codec.ReplayingDecoderByteBuf:boolean release()",
                "io.netty.channel.AbstractChannel$AbstractUnsafe$4$1:void run()",
                "io.netty.buffer.EmptyByteBuf:short readShort()",
                "io.netty.channel.DefaultChannelPipeline$PendingHandlerAddedTask:void run()",
                "io.netty.handler.codec.http.HttpUtil:void <clinit>()",
                "io.netty.handler.ssl.PemX509Certificate:java.lang.String toString()",
                "io.netty.buffer.AdvancedLeakAwareByteBuf:java.lang.String toString(java.nio.charset.Charset)",
                "io.netty.buffer.PoolArena:java.lang.String toString()",
                "io.netty.buffer.AbstractByteBuf:io.netty.buffer.ByteBuf resetReaderIndex()",
                "io.netty.buffer.EmptyByteBuf:io.netty.buffer.ByteBuf writeInt(int)",
                "io.netty.util.ReferenceCountUtil$ReleasingTask:void run()",
                "io.netty.channel.DefaultChannelPipeline$PendingHandlerRemovedTask:void run()",
                "io.netty.util.collection.IntObjectHashMap$2:java.util.Iterator iterator()",
                "io.netty.buffer.PooledByteBufAllocator:void <clinit>()",
                "io.netty.buffer.UnpooledHeapByteBuf:io.netty.buffer.ByteBuf setByte(int,int)",
                "io.netty.util.concurrent.FailedFuture:boolean isSuccess()",
                "io.netty.buffer.WrappedByteBuf:io.netty.buffer.ByteBuf resetReaderIndex()",
                "io.netty.buffer.PoolThreadCache$1:void run()",
                "io.netty.buffer.AbstractByteBufAllocator:java.lang.String toString()",
                "io.netty.bootstrap.ServerBootstrapConfig:java.lang.String toString()",
                "io.netty.channel.DefaultChannelProgressivePromise:io.netty.channel.ChannelProgressivePromise setSuccess()",
                "io.netty.channel.AbstractChannel:io.netty.channel.ChannelFuture close()",
                "io.netty.util.concurrent.DefaultPromise:boolean isCancelled()",
                "io.netty.util.concurrent.AbstractEventExecutor:io.netty.util.concurrent.Future submit(java.lang.Runnable)",
                "io.netty.bootstrap.AbstractBootstrap:io.netty.bootstrap.AbstractBootstrap channel(java.lang.Class)",
                "io.netty.buffer.SwappedByteBuf:io.netty.buffer.ByteBuf retain()",
                "io.netty.buffer.PooledDuplicatedByteBuf:io.netty.buffer.ByteBuf setByte(int,int)",
                "io.netty.channel.ChannelInboundHandlerAdapter:void userEventTriggered(io.netty.channel.ChannelHandlerContext,java.lang.Object)",
                "io.netty.channel.AbstractChannelHandlerContext$AbstractWriteTask:void run()",
                "io.netty.handler.codec.http.HttpVersion:void <clinit>()",
                "io.netty.buffer.AbstractByteBuf:io.netty.buffer.ByteBuf markReaderIndex()",
                "io.netty.handler.codec.ReplayingDecoderByteBuf:io.netty.buffer.ByteBuf writeByte(int)",
                "io.netty.channel.DefaultChannelPromise:io.netty.channel.ChannelPromise setFailure(java.lang.Throwable)",
                "io.netty.bootstrap.BootstrapConfig:java.lang.String toString()",
                "io.netty.channel.VoidChannelPromise:boolean isDone()",
                "io.netty.buffer.FixedCompositeByteBuf:byte getByte(int)",
                "io.netty.channel.DefaultChannelProgressivePromise:io.netty.channel.ChannelProgressivePromise addListener(io.netty.util.concurrent.GenericFutureListener)",
                "io.netty.util.internal.shaded.org.jctools.queues.ConcurrentCircularArrayQueue:java.lang.String toString()",
                "io.netty.buffer.EmptyByteBuf:int writableBytes()",
                "io.netty.handler.ssl.SslHandler$8$1:void run()",
                "io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker:io.netty.channel.ChannelFuture handshake(io.netty.channel.Channel)",
                "io.netty.util.concurrent.PromiseTask$RunnableAdapter:java.lang.String toString()",
                "io.netty.handler.codec.http.DefaultFullHttpRequest:io.netty.handler.codec.http.FullHttpRequest setUri(java.lang.String)",
                "io.netty.handler.codec.http.HttpHeaders:java.lang.String get(java.lang.CharSequence)",
                "io.netty.util.concurrent.SingleThreadEventExecutor:boolean isTerminated()",
                "io.netty.util.internal.shaded.org.jctools.queues.atomic.SpscLinkedAtomicQueue:java.lang.String toString()",
                "io.netty.handler.codec.http.HttpRequestDecoder:void <init>()",
                "io.netty.channel.DefaultChannelPipeline:java.lang.String toString()",
                "io.netty.buffer.FixedCompositeByteBuf:java.lang.String toString()",
                "io.netty.handler.codec.http.DefaultHttpHeaders:io.netty.handler.codec.http.HttpHeaders add(java.lang.CharSequence,java.lang.Object)",
                "io.netty.buffer.AdvancedLeakAwareByteBuf:io.netty.buffer.ByteBuf writeInt(int)",
                "io.netty.handler.codec.http.multipart.HttpPostRequestDecoder:boolean isMultipart()",
                "io.netty.buffer.AdvancedLeakAwareByteBuf:io.netty.buffer.ByteBuf setInt(int,int)",
                "io.netty.util.concurrent.MultithreadEventExecutorGroup:boolean isShutdown()",
                "io.netty.handler.codec.http.DefaultFullHttpRequest:void <init>(io.netty.handler.codec.http.HttpVersion,io.netty.handler.codec.http.HttpMethod,java.lang.String,io.netty.buffer.ByteBuf)",
                "io.netty.handler.codec.http.multipart.DiskFileUpload:java.lang.String toString()",
                "io.netty.buffer.PooledSlicedByteBuf:byte getByte(int)",
                "io.netty.buffer.EmptyByteBuf:byte readByte()",
                "io.netty.buffer.WrappedByteBuf:int readableBytes()",
                "io.netty.buffer.UnpooledUnsafeHeapByteBuf:io.netty.buffer.ByteBuf setByte(int,int)",
                "io.netty.buffer.AbstractUnsafeSwappedByteBuf:int getInt(int)",
                "io.netty.handler.codec.DefaultHeaders$HeaderIterator:boolean hasNext()",
                "io.netty.buffer.UnpooledUnsafeHeapByteBuf:int getInt(int)",
                "io.netty.buffer.UnpooledDirectByteBuf:int getInt(int)",
                "io.netty.channel.epoll.EpollEventLoopGroup:void <init>(int)",
                "io.netty.buffer.UnreleasableByteBuf:io.netty.buffer.ByteBuf retain()",
                "io.netty.buffer.SimpleLeakAwareByteBuf:boolean release()",
                "io.netty.handler.codec.http.multipart.DiskAttribute:java.lang.String getValue()",
                "io.netty.handler.codec.http.multipart.MemoryAttribute:java.lang.String toString()",
                "io.netty.buffer.CompositeByteBuf:io.netty.buffer.CompositeByteBuf setInt(int,int)",
                "io.netty.channel.CompleteChannelFuture:io.netty.channel.Channel channel()",
                "io.netty.buffer.CompositeByteBuf$CompositeByteBufIterator:void remove()",
                "io.netty.handler.stream.ChunkedWriteHandler:void <init>()",
                "io.netty.handler.codec.http.QueryStringDecoder:java.lang.String toString()",
                "io.netty.util.collection.IntObjectHashMap:java.util.Collection values()",
                "io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext:io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object)",
                "io.netty.handler.codec.CodecOutputList:int size()",
                "io.netty.channel.VoidChannelPromise:io.netty.channel.VoidChannelPromise sync()",
                "io.netty.channel.ChannelFutureListener:void <clinit>()",
                "io.netty.buffer.AbstractDerivedByteBuf:boolean release(int)",
                "io.netty.channel.embedded.EmbeddedChannelId:java.lang.String toString()",
                "io.netty.handler.codec.HeadersUtils$1:int size()",
                "io.netty.channel.DefaultChannelProgressivePromise:io.netty.channel.ChannelProgressivePromise setFailure(java.lang.Throwable)",
                "io.netty.handler.codec.http.multipart.MemoryAttribute:java.lang.String getValue()",
                "io.netty.handler.codec.http.HttpObjectAggregator$AggregatedFullHttpRequest:io.netty.handler.codec.http.HttpMethod method()",
                "io.netty.buffer.CompositeByteBuf$CompositeByteBufIterator:boolean hasNext()",
                "io.netty.buffer.WrappedByteBuf:io.netty.buffer.ByteBuf markReaderIndex()",
                "io.netty.bootstrap.Bootstrap$3:void run()",
                "io.netty.channel.VoidChannelPromise:boolean isCancelled()",
                "io.netty.channel.ChannelOutboundBuffer$2:void run()",
                "io.netty.handler.codec.http.HttpObjectAggregator$AggregatedFullHttpMessage:io.netty.handler.codec.DecoderResult decoderResult()",
                "io.netty.handler.codec.http.HttpObjectAggregator$AggregatedFullHttpMessage:io.netty.buffer.ByteBuf content()",
                "io.netty.channel.unix.Socket:java.lang.String toString()",
                "io.netty.buffer.AbstractDerivedByteBuf:boolean release()",
                "io.netty.handler.codec.http.DefaultHttpHeaders:void <clinit>()",
                "io.netty.handler.codec.ReplayingDecoderByteBuf:short getShort(int)",
                "io.netty.buffer.WrappedByteBuf:java.lang.String toString(java.nio.charset.Charset)",
                "io.netty.buffer.AbstractByteBuf:java.lang.CharSequence readCharSequence(int,java.nio.charset.Charset)",
                "io.netty.buffer.UnpooledHeapByteBuf:io.netty.buffer.ByteBuf setInt(int,int)",
                "io.netty.util.collection.IntObjectHashMap$MapEntry:java.lang.Integer getKey()",
                "io.netty.buffer.SwappedByteBuf:io.netty.buffer.ByteBuf writeBytes(io.netty.buffer.ByteBuf)",
                "io.netty.buffer.UnpooledHeapByteBuf:byte getByte(int)",
                "io.netty.handler.codec.http.HttpObjectAggregator$AggregatedFullHttpMessage:io.netty.handler.codec.http.HttpHeaders headers()",
                "io.netty.buffer.Unpooled:io.netty.buffer.ByteBuf copiedBuffer(java.lang.CharSequence,java.nio.charset.Charset)",
                "io.netty.buffer.WrappedByteBuf:io.netty.buffer.ByteBuf readBytes(byte[])",
                "io.netty.channel.socket.DatagramPacket:void <init>(io.netty.buffer.ByteBuf,java.net.InetSocketAddress,java.net.InetSocketAddress)",
                "io.netty.util.ReferenceCountUtil:void <clinit>()",
                "io.netty.buffer.AbstractByteBuf:int getInt(int)",
                "io.netty.util.collection.IntObjectHashMap$KeySet:boolean contains(java.lang.Object)",
                "io.netty.handler.codec.http.websocketx.TextWebSocketFrame:java.lang.String text()",
                "io.netty.handler.codec.DecoderResult:java.lang.String toString()",
                "io.netty.buffer.AbstractByteBufAllocator:io.netty.buffer.ByteBuf heapBuffer(int)",
                "io.netty.buffer.AbstractDerivedByteBuf:io.netty.buffer.ByteBuf retain()",
                "io.netty.buffer.ReadOnlyByteBuf:int getInt(int)",
                "io.netty.buffer.AbstractByteBuf:short readShort()",
                "io.netty.handler.codec.DecoderResult:boolean isSuccess()",
                "io.netty.handler.codec.ReplayingDecoderByteBuf:boolean release(int)",
                "io.netty.channel.DelegatingChannelPromiseNotifier:boolean isSuccess()",
                "io.netty.handler.codec.http.HttpObjectAggregator:void <init>(int)",
                "io.netty.util.internal.shaded.org.jctools.queues.ConcurrentCircularArrayQueue:java.util.Iterator iterator()",
                "io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext:io.netty.channel.ChannelFuture close()",
                "io.netty.buffer.AdvancedLeakAwareByteBuf:io.netty.buffer.ByteBuf writeBytes(byte[])",
                "io.netty.channel.DefaultChannelPipeline$8:void run()",
                "io.netty.handler.codec.http.websocketx.WebSocketClientHandshakerFactory:io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker newHandshaker(java.net.URI,io.netty.handler.codec.http.websocketx.WebSocketVersion,java.lang.String,boolean,io.netty.handler.codec.http.HttpHeaders)",
                "io.netty.handler.codec.http.multipart.MemoryAttribute:io.netty.handler.codec.http.multipart.InterfaceHttpData$HttpDataType getHttpDataType()",
                "io.netty.handler.codec.http.HttpObjectAggregator$AggregatedFullHttpRequest:java.lang.String toString()",
                "io.netty.buffer.PooledSlicedByteBuf:int getInt(int)",
                "io.netty.util.collection.IntObjectHashMap$KeySet$1:void remove()",
                "io.netty.handler.codec.http.HttpMethod:boolean equals(java.lang.Object)",
                "io.netty.buffer.WrappedByteBuf:io.netty.buffer.ByteBuf setInt(int,int)",
                "io.netty.handler.codec.http.DefaultFullHttpResponse:io.netty.buffer.ByteBuf content()",
                "io.netty.buffer.SwappedByteBuf:io.netty.buffer.ByteBuf writeShort(int)",
                "io.netty.buffer.DefaultByteBufHolder:io.netty.buffer.ByteBuf content()",
                "io.netty.channel.DefaultChannelPipeline:io.netty.channel.ChannelHandler remove(java.lang.Class)",
                "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelPromise newPromise()",
                "io.netty.util.internal.RecyclableArrayList:boolean addAll(java.util.Collection)",
                "io.netty.handler.codec.http.multipart.DiskFileUpload:io.netty.handler.codec.http.multipart.InterfaceHttpData$HttpDataType getHttpDataType()",
                "io.netty.bootstrap.ServerBootstrap:io.netty.bootstrap.ServerBootstrap childOption(io.netty.channel.ChannelOption,java.lang.Object)",
                "io.netty.buffer.SwappedByteBuf:io.netty.buffer.ByteBuf setInt(int,int)",
                "io.netty.channel.AbstractChannel:io.netty.channel.ChannelFuture write(java.lang.Object)",
                "io.netty.buffer.AbstractUnpooledSlicedByteBuf:io.netty.buffer.ByteBuf setInt(int,int)",
                "io.netty.handler.codec.http.DefaultHttpHeaders:io.netty.handler.codec.http.HttpHeaders add(io.netty.handler.codec.http.HttpHeaders)",
                "io.netty.handler.codec.DefaultHeaders$ValueIterator:void remove()",
                "io.netty.handler.codec.CodecOutputList:boolean add(java.lang.Object)",
                "io.netty.handler.codec.ReplayingDecoderByteBuf:io.netty.buffer.ByteBuf writeInt(int)",
                "io.netty.handler.codec.ReplayingDecoderByteBuf:int refCnt()",
                "io.netty.buffer.AdvancedLeakAwareByteBuf:int readInt()",
                "io.netty.handler.codec.http.multipart.MixedAttribute:io.netty.handler.codec.http.multipart.InterfaceHttpData$HttpDataType getHttpDataType()",
                "io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseLinkedAtomicQueue:java.util.Iterator iterator()",
                "io.netty.util.collection.IntObjectHashMap$MapIterator:void remove()",
                "io.netty.handler.codec.http.DefaultHttpRequest:java.lang.String uri()",
                "io.netty.buffer.AbstractByteBuf:java.nio.ByteBuffer nioBuffer()",
                "io.netty.buffer.AdvancedLeakAwareByteBuf:long readLong()",
                "io.netty.handler.codec.ReplayingDecoderByteBuf:io.netty.buffer.ByteBuf writeBytes(byte[],int,int)",
                "io.netty.handler.codec.LengthFieldBasedFrameDecoder:void <init>(int,int,int,int,int)",
                "io.netty.handler.codec.ReplayingDecoderByteBuf:java.lang.CharSequence readCharSequence(int,java.nio.charset.Charset)",
                "io.netty.buffer.SwappedByteBuf:int readableBytes()",
                "io.netty.handler.codec.ReplayingDecoderByteBuf:byte readByte()",
                "io.netty.channel.socket.DatagramPacket:io.netty.buffer.ByteBuf content()",
                "io.netty.buffer.EmptyByteBuf:java.lang.String toString()",
                "io.netty.util.ReferenceCountUtil$ReleasingTask:java.lang.String toString()",
                "io.netty.buffer.AdvancedLeakAwareByteBuf:byte getByte(int)",
                "io.netty.util.concurrent.MultithreadEventExecutorGroup:void shutdown()",
                "io.netty.handler.codec.http.multipart.HttpPostRequestDecoder:java.util.List getBodyHttpDatas()",
                "io.netty.handler.codec.ReplayingDecoderByteBuf:io.netty.buffer.ByteBuf setInt(int,int)",
                "io.netty.handler.codec.http.HttpHeaderValues:void <clinit>()",
                "io.netty.channel.DelegatingChannelPromiseNotifier:io.netty.channel.Channel channel()",
                "io.netty.channel.VoidChannelPromise:io.netty.channel.Channel channel()",
                "io.netty.channel.DelegatingChannelPromiseNotifier:boolean isCancelled()",
                "io.netty.handler.codec.HeadersUtils$1:java.lang.String get(int)",
                "io.netty.handler.codec.ReplayingDecoderByteBuf:io.netty.buffer.ByteBuf writeBytes(byte[])",
                "io.netty.util.concurrent.DefaultPromise:boolean isSuccess()",
                "io.netty.buffer.PoolChunk:java.lang.String toString()",
                "io.netty.handler.codec.http.multipart.MemoryFileUpload:java.lang.String toString()",
                "io.netty.util.concurrent.DefaultPromise$4:void run()",
                "io.netty.handler.codec.HeadersUtils$StringEntryIterator:boolean hasNext()",
                "io.netty.handler.codec.http.websocketx.BinaryWebSocketFrame:void <init>(io.netty.buffer.ByteBuf)",
                "io.netty.buffer.EmptyByteBuf:java.nio.ByteBuffer nioBuffer()",
                "io.netty.handler.codec.http.HttpServerUpgradeHandler$UpgradeEvent:java.lang.String toString()",
                "io.netty.buffer.EmptyByteBuf:int readableBytes()",
                "io.netty.handler.stream.ChunkedWriteHandler$1:void run()",
                "io.netty.handler.ssl.SslContextBuilder:io.netty.handler.ssl.SslContextBuilder forClient()",
                "io.netty.buffer.PooledDuplicatedByteBuf:short getShort(int)",
                "io.netty.handler.codec.http.HttpObjectAggregator$AggregatedFullHttpRequest:java.lang.String uri()",
                "io.netty.buffer.AbstractByteBuf:io.netty.buffer.ByteBuf writeBytes(byte[],int,int)",
                "io.netty.buffer.SwappedByteBuf:int refCnt()",
                "io.netty.handler.codec.ReplayingDecoderByteBuf:io.netty.buffer.ByteBuf writeBytes(io.netty.buffer.ByteBuf)",
                "io.netty.util.concurrent.DefaultPromise$1:void run()",
                "io.netty.util.concurrent.MultithreadEventExecutorGroup:boolean isShuttingDown()",
                "io.netty.channel.ChannelInboundHandlerAdapter:void channelInactive(io.netty.channel.ChannelHandlerContext)",
                "io.netty.util.collection.IntObjectHashMap$MapIterator:java.util.Map$Entry next()",
                "io.netty.handler.codec.ReplayingDecoderByteBuf:io.netty.buffer.ByteBuf resetReaderIndex()",
                "io.netty.channel.VoidChannelPromise:io.netty.channel.VoidChannelPromise addListener(io.netty.util.concurrent.GenericFutureListener)",
                "io.netty.util.collection.IntObjectHashMap$PrimitiveIterator:void remove()",
                "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.Channel channel()",
                "io.netty.buffer.WrappedByteBuf:short readShort()",
                "io.netty.bootstrap.AbstractBootstrap:io.netty.bootstrap.AbstractBootstrap group(io.netty.channel.EventLoopGroup)",
                "io.netty.buffer.PooledByteBufAllocatorMetric:java.lang.String toString()",
                "io.netty.buffer.WrappedByteBuf:int refCnt()",
                "io.netty.buffer.AbstractByteBuf:int writableBytes()",
                "io.netty.channel.DefaultChannelPromise:io.netty.channel.ChannelPromise sync()",
                "io.netty.buffer.AbstractByteBuf:io.netty.buffer.ByteBuf writeByte(int)",
                "io.netty.buffer.AbstractUnpooledSlicedByteBuf:int getInt(int)",
                "io.netty.handler.codec.http.multipart.MemoryFileUpload:java.lang.String getContentType()",
                "io.netty.buffer.WrappedByteBuf:io.netty.buffer.ByteBuf copy()",
                "io.netty.buffer.ReadOnlyByteBuf:byte getByte(int)",
                "io.netty.handler.codec.http.websocketx.WebSocketVersion:void <clinit>()",
                "io.netty.handler.codec.http.DefaultHttpHeaders:java.lang.String get(java.lang.String)",
                "io.netty.buffer.AbstractUnpooledSlicedByteBuf:byte getByte(int)",
                "io.netty.buffer.AbstractByteBuf:int readableBytes()",
                "io.netty.buffer.AbstractReferenceCountedByteBuf:boolean release(int)",
                "io.netty.handler.ssl.SslContextBuilder:io.netty.handler.ssl.SslContext build()",
                "io.netty.buffer.EmptyByteBuf:io.netty.buffer.ByteBuf readBytes(byte[])",
                "io.netty.channel.ChannelInitializer:void <init>()",
                "io.netty.handler.stream.ChunkedWriteHandler:void <clinit>()",
                "io.netty.handler.codec.http.multipart.MemoryFileUpload:java.lang.String getFilename()",
                "io.netty.handler.codec.ReplayingDecoderByteBuf:int readableBytes()",
                "io.netty.buffer.DuplicatedByteBuf:byte getByte(int)",
                "io.netty.buffer.UnpooledByteBufAllocator:void <clinit>()",
                "io.netty.util.ReferenceCountUtil:boolean release(java.lang.Object)",
                "io.netty.util.collection.IntObjectHashMap$2$1:boolean hasNext()",
                "io.netty.channel.embedded.EmbeddedChannel:io.netty.channel.ChannelFuture close()",
                "io.netty.buffer.WrappedByteBuf:java.lang.String toString()",
                "io.netty.buffer.AbstractByteBuf:io.netty.buffer.ByteBuf writeBytes(io.netty.buffer.ByteBuf)",
                "io.netty.util.AbstractConstant:java.lang.String toString()",
                "io.netty.handler.codec.http.DefaultFullHttpRequest:io.netty.buffer.ByteBuf content()",
                "io.netty.handler.codec.http.HttpServerCodec:void <init>()",
                "io.netty.buffer.SwappedByteBuf:io.netty.buffer.ByteBuf writeBytes(byte[],int,int)",
                "io.netty.handler.codec.http.multipart.MixedAttribute:java.lang.String toString()",
                "io.netty.handler.codec.http.QueryStringDecoder:void <init>(java.lang.String,java.nio.charset.Charset)",
                "io.netty.handler.ssl.SslHandler$1:void run()",
                "io.netty.handler.codec.DefaultHeaders$HeaderEntry:java.lang.String toString()",
                "io.netty.buffer.PoolSubpage:java.lang.String toString()",
                "io.netty.util.collection.IntObjectHashMap:java.lang.String toString()",
                "io.netty.util.concurrent.DefaultPromise:java.lang.Throwable cause()",
                "io.netty.handler.codec.ReplayingDecoderByteBuf:io.netty.buffer.ByteBuf markReaderIndex()",
                "io.netty.channel.DefaultChannelPipeline$5:void run()",
                "io.netty.handler.codec.ReplayingDecoderByteBuf:int readInt()",
                "io.netty.util.concurrent.SingleThreadEventExecutor:void shutdown()",
                "io.netty.buffer.DuplicatedByteBuf:int getInt(int)",
                "io.netty.channel.DelegatingChannelPromiseNotifier:boolean isDone()",
                "io.netty.handler.codec.http.DefaultHttpResponse:io.netty.handler.codec.http.HttpResponseStatus status()",
                "io.netty.util.concurrent.SingleThreadEventExecutor:boolean isShutdown()",
                "io.netty.channel.DefaultChannelPipeline:io.netty.channel.ChannelPipeline addLast(io.netty.channel.ChannelHandler[])",
                "io.netty.handler.codec.ReplayingDecoderByteBuf:io.netty.buffer.ByteBuf copy()",
                "io.netty.handler.codec.DefaultHeaders$HeaderIterator:java.util.Map$Entry next()",
                "io.netty.buffer.SwappedByteBuf:java.lang.CharSequence readCharSequence(int,java.nio.charset.Charset)",
                "io.netty.buffer.WrappedByteBuf:int getInt(int)",
                "io.netty.buffer.PooledSlicedByteBuf:short getShort(int)",
                "io.netty.buffer.SwappedByteBuf:io.netty.buffer.ByteBuf resetReaderIndex()",
                "io.netty.handler.codec.http.multipart.HttpPostRequestDecoder:void destroy()",
                "io.netty.handler.codec.ReplayingDecoderByteBuf:short readShort()",
                "io.netty.handler.ssl.SslCompletionEvent:java.lang.String toString()",
                "io.netty.channel.ChannelInboundHandlerAdapter:void channelActive(io.netty.channel.ChannelHandlerContext)",
                "io.netty.handler.codec.http.multipart.AbstractHttpData:java.lang.String getName()",
                "io.netty.handler.codec.http.DefaultHttpMessage:io.netty.handler.codec.http.HttpHeaders headers()",
                "io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator:void run()",
                "io.netty.buffer.EmptyByteBuf:byte getByte(int)"
            ],
            "CVE": [
                "CVE-2019-16869"
            ],
            "used vul-method": [
                "io.netty.channel.AbstractChannel$AbstractUnsafe$6$1:void run()",
                "io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext$1:void run()",
                "io.netty.channel.DefaultChannelPipeline$4:void run()",
                "io.netty.channel.DelegatingChannelPromiseNotifier:io.netty.channel.ChannelPromise setSuccess()",
                "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture close()",
                "io.netty.bootstrap.AbstractBootstrap:io.netty.channel.ChannelFuture bind(int)",
                "io.netty.handler.codec.compression.JZlibEncoder$1:void run()",
                "io.netty.channel.DefaultChannelPipeline$3:void run()",
                "io.netty.handler.codec.compression.JZlibEncoder$3:void run()",
                "io.netty.channel.VoidChannelPromise:io.netty.channel.VoidChannelPromise setFailure(java.lang.Throwable)",
                "io.netty.channel.AbstractChannel:io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object)",
                "io.netty.util.concurrent.DefaultPromise$2:void run()",
                "io.netty.channel.DelegatingChannelPromiseNotifier:io.netty.channel.ChannelPromise setFailure(java.lang.Throwable)",
                "io.netty.handler.ssl.SslHandler$3:void run()",
                "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelHandlerContext fireChannelRead(java.lang.Object)",
                "io.netty.channel.DefaultChannelPipeline$7:void run()",
                "io.netty.channel.DefaultChannelPromise:io.netty.channel.ChannelPromise setSuccess()",
                "io.netty.channel.DefaultChannelPipeline$2:void run()",
                "io.netty.util.concurrent.ScheduledFutureTask:void run()",
                "io.netty.channel.CompleteChannelFuture:io.netty.channel.ChannelFuture addListener(io.netty.util.concurrent.GenericFutureListener)",
                "io.netty.channel.DefaultChannelPromise:io.netty.channel.ChannelPromise addListener(io.netty.util.concurrent.GenericFutureListener)",
                "io.netty.channel.DefaultChannelPipeline$9:void run()",
                "io.netty.handler.ssl.SslHandler$5:void run()",
                "io.netty.channel.DefaultChannelPipeline$6:void run()",
                "io.netty.util.concurrent.AbstractEventExecutor:io.netty.util.concurrent.Future shutdownGracefully()",
                "io.netty.channel.ChannelOutboundBuffer$3:void run()",
                "io.netty.handler.codec.compression.JdkZlibEncoder$1:void run()",
                "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object)",
                "io.netty.bootstrap.Bootstrap:io.netty.channel.ChannelFuture connect(java.lang.String,int)",
                "io.netty.channel.DelegatingChannelPromiseNotifier:io.netty.channel.ChannelPromise addListener(io.netty.util.concurrent.GenericFutureListener)",
                "io.netty.channel.nio.NioEventLoopGroup:void <init>(int)",
                "io.netty.util.concurrent.SingleThreadEventExecutor:void execute(java.lang.Runnable)",
                "io.netty.handler.codec.compression.JdkZlibEncoder$3:void run()",
                "io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext:io.netty.channel.ChannelHandlerContext fireChannelRead(java.lang.Object)",
                "io.netty.channel.AbstractChannel$AbstractUnsafe$4$1:void run()",
                "io.netty.channel.DefaultChannelPipeline$PendingHandlerAddedTask:void run()",
                "io.netty.channel.DefaultChannelPipeline$PendingHandlerRemovedTask:void run()",
                "io.netty.channel.DefaultChannelProgressivePromise:io.netty.channel.ChannelProgressivePromise setSuccess()",
                "io.netty.channel.AbstractChannel:io.netty.channel.ChannelFuture close()",
                "io.netty.channel.ChannelInboundHandlerAdapter:void userEventTriggered(io.netty.channel.ChannelHandlerContext,java.lang.Object)",
                "io.netty.channel.AbstractChannelHandlerContext$AbstractWriteTask:void run()",
                "io.netty.channel.DefaultChannelPromise:io.netty.channel.ChannelPromise setFailure(java.lang.Throwable)",
                "io.netty.channel.DefaultChannelProgressivePromise:io.netty.channel.ChannelProgressivePromise addListener(io.netty.util.concurrent.GenericFutureListener)",
                "io.netty.channel.epoll.EpollEventLoopGroup:void <init>(int)",
                "io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext:io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object)",
                "io.netty.channel.DefaultChannelProgressivePromise:io.netty.channel.ChannelProgressivePromise setFailure(java.lang.Throwable)",
                "io.netty.bootstrap.Bootstrap$3:void run()",
                "io.netty.channel.ChannelOutboundBuffer$2:void run()",
                "io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext:io.netty.channel.ChannelFuture close()",
                "io.netty.channel.DefaultChannelPipeline$8:void run()",
                "io.netty.channel.DefaultChannelPipeline:io.netty.channel.ChannelHandler remove(java.lang.Class)",
                "io.netty.channel.AbstractChannel:io.netty.channel.ChannelFuture write(java.lang.Object)",
                "io.netty.util.concurrent.MultithreadEventExecutorGroup:void shutdown()",
                "io.netty.util.concurrent.DefaultPromise$1:void run()",
                "io.netty.channel.ChannelInboundHandlerAdapter:void channelInactive(io.netty.channel.ChannelHandlerContext)",
                "io.netty.channel.embedded.EmbeddedChannel:io.netty.channel.ChannelFuture close()",
                "io.netty.handler.ssl.SslHandler$1:void run()",
                "io.netty.channel.DefaultChannelPipeline$5:void run()",
                "io.netty.util.concurrent.SingleThreadEventExecutor:void shutdown()",
                "io.netty.channel.DefaultChannelPipeline:io.netty.channel.ChannelPipeline addLast(io.netty.channel.ChannelHandler[])",
                "io.netty.channel.ChannelInboundHandlerAdapter:void channelActive(io.netty.channel.ChannelHandlerContext)",
                "io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator:void run()"
            ],
            "vul-called frequency": 185,
            "related vul root method": {
                "CVE-2019-16869": [
                    "io.netty.handler.codec.http.HttpObjectDecoder:void splitHeader(io.netty.util.internal.AppendableCharSequence)"
                ]
            },
            "CVE-API": {
                "CVE-2019-16869": [
                    "io.netty.channel.AbstractChannel$AbstractUnsafe$6$1:void run()",
                    "io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext$1:void run()",
                    "io.netty.channel.DefaultChannelPipeline$4:void run()",
                    "io.netty.channel.DelegatingChannelPromiseNotifier:io.netty.channel.ChannelPromise setSuccess()",
                    "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture close()",
                    "io.netty.bootstrap.AbstractBootstrap:io.netty.channel.ChannelFuture bind(int)",
                    "io.netty.handler.codec.compression.JZlibEncoder$1:void run()",
                    "io.netty.channel.DefaultChannelPipeline$3:void run()",
                    "io.netty.handler.codec.compression.JZlibEncoder$3:void run()",
                    "io.netty.channel.VoidChannelPromise:io.netty.channel.VoidChannelPromise setFailure(java.lang.Throwable)",
                    "io.netty.channel.AbstractChannel:io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object)",
                    "io.netty.util.concurrent.DefaultPromise$2:void run()",
                    "io.netty.channel.DelegatingChannelPromiseNotifier:io.netty.channel.ChannelPromise setFailure(java.lang.Throwable)",
                    "io.netty.handler.ssl.SslHandler$3:void run()",
                    "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelHandlerContext fireChannelRead(java.lang.Object)",
                    "io.netty.channel.DefaultChannelPipeline$7:void run()",
                    "io.netty.channel.DefaultChannelPromise:io.netty.channel.ChannelPromise setSuccess()",
                    "io.netty.channel.DefaultChannelPipeline$2:void run()",
                    "io.netty.util.concurrent.ScheduledFutureTask:void run()",
                    "io.netty.channel.CompleteChannelFuture:io.netty.channel.ChannelFuture addListener(io.netty.util.concurrent.GenericFutureListener)",
                    "io.netty.channel.DefaultChannelPromise:io.netty.channel.ChannelPromise addListener(io.netty.util.concurrent.GenericFutureListener)",
                    "io.netty.channel.DefaultChannelPipeline$9:void run()",
                    "io.netty.handler.ssl.SslHandler$5:void run()",
                    "io.netty.channel.DefaultChannelPipeline$6:void run()",
                    "io.netty.util.concurrent.AbstractEventExecutor:io.netty.util.concurrent.Future shutdownGracefully()",
                    "io.netty.channel.ChannelOutboundBuffer$3:void run()",
                    "io.netty.handler.codec.compression.JdkZlibEncoder$1:void run()",
                    "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object)",
                    "io.netty.bootstrap.Bootstrap:io.netty.channel.ChannelFuture connect(java.lang.String,int)",
                    "io.netty.channel.DelegatingChannelPromiseNotifier:io.netty.channel.ChannelPromise addListener(io.netty.util.concurrent.GenericFutureListener)",
                    "io.netty.channel.nio.NioEventLoopGroup:void <init>(int)",
                    "io.netty.util.concurrent.SingleThreadEventExecutor:void execute(java.lang.Runnable)",
                    "io.netty.handler.codec.compression.JdkZlibEncoder$3:void run()",
                    "io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext:io.netty.channel.ChannelHandlerContext fireChannelRead(java.lang.Object)",
                    "io.netty.channel.AbstractChannel$AbstractUnsafe$4$1:void run()",
                    "io.netty.channel.DefaultChannelPipeline$PendingHandlerAddedTask:void run()",
                    "io.netty.channel.DefaultChannelPipeline$PendingHandlerRemovedTask:void run()",
                    "io.netty.channel.DefaultChannelProgressivePromise:io.netty.channel.ChannelProgressivePromise setSuccess()",
                    "io.netty.channel.AbstractChannel:io.netty.channel.ChannelFuture close()",
                    "io.netty.channel.ChannelInboundHandlerAdapter:void userEventTriggered(io.netty.channel.ChannelHandlerContext,java.lang.Object)",
                    "io.netty.channel.AbstractChannelHandlerContext$AbstractWriteTask:void run()",
                    "io.netty.channel.DefaultChannelPromise:io.netty.channel.ChannelPromise setFailure(java.lang.Throwable)",
                    "io.netty.channel.DefaultChannelProgressivePromise:io.netty.channel.ChannelProgressivePromise addListener(io.netty.util.concurrent.GenericFutureListener)",
                    "io.netty.channel.epoll.EpollEventLoopGroup:void <init>(int)",
                    "io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext:io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object)",
                    "io.netty.channel.DefaultChannelProgressivePromise:io.netty.channel.ChannelProgressivePromise setFailure(java.lang.Throwable)",
                    "io.netty.bootstrap.Bootstrap$3:void run()",
                    "io.netty.channel.ChannelOutboundBuffer$2:void run()",
                    "io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext:io.netty.channel.ChannelFuture close()",
                    "io.netty.channel.DefaultChannelPipeline$8:void run()",
                    "io.netty.channel.DefaultChannelPipeline:io.netty.channel.ChannelHandler remove(java.lang.Class)",
                    "io.netty.channel.AbstractChannel:io.netty.channel.ChannelFuture write(java.lang.Object)",
                    "io.netty.util.concurrent.MultithreadEventExecutorGroup:void shutdown()",
                    "io.netty.util.concurrent.DefaultPromise$1:void run()",
                    "io.netty.channel.ChannelInboundHandlerAdapter:void channelInactive(io.netty.channel.ChannelHandlerContext)",
                    "io.netty.channel.embedded.EmbeddedChannel:io.netty.channel.ChannelFuture close()",
                    "io.netty.handler.ssl.SslHandler$1:void run()",
                    "io.netty.channel.DefaultChannelPipeline$5:void run()",
                    "io.netty.util.concurrent.SingleThreadEventExecutor:void shutdown()",
                    "io.netty.channel.DefaultChannelPipeline:io.netty.channel.ChannelPipeline addLast(io.netty.channel.ChannelHandler[])",
                    "io.netty.channel.ChannelInboundHandlerAdapter:void channelActive(io.netty.channel.ChannelHandlerContext)",
                    "io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator:void run()"
                ]
            }
        }
    }
}
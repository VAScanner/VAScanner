{
    "project name": "KimShen_sissi",
    "vulnerable dependencies": {
        "io.netty:netty-all:4.0.13.Final": {
            "used-method num": 228,
            "used method": [
                "io.netty.channel.nio.SelectedSelectionKeySet:boolean add(java.lang.Object)",
                "io.netty.buffer.EmptyByteBuf:int capacity()",
                "io.netty.handler.ssl.SslHandler$2:void run()",
                "io.netty.buffer.ReadOnlyByteBuf:int capacity()",
                "io.netty.util.concurrent.GlobalEventExecutor:void execute(java.lang.Runnable)",
                "io.netty.bootstrap.ServerBootstrap:void <init>()",
                "io.netty.handler.ssl.SslHandler:void <clinit>()",
                "io.netty.util.UniqueName:java.lang.String toString()",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8$KeyIterator:java.lang.Object next()",
                "io.netty.util.DefaultAttributeMap:io.netty.util.Attribute attr(io.netty.util.AttributeKey)",
                "io.netty.handler.ssl.SslHandler:void <init>(javax.net.ssl.SSLEngine)",
                "io.netty.handler.codec.ReplayingDecoderBuffer:java.lang.String toString(java.nio.charset.Charset)",
                "io.netty.buffer.EmptyByteBuf:io.netty.buffer.ByteBuf readerIndex(int)",
                "io.netty.buffer.UnreleasableByteBuf:io.netty.buffer.ByteBuf readBytes(java.io.OutputStream,int)",
                "io.netty.channel.DefaultChannelPipeline$4:void run()",
                "io.netty.util.UniqueName:boolean equals(java.lang.Object)",
                "io.netty.buffer.EmptyByteBuf:io.netty.buffer.ByteBuf writeByte(int)",
                "io.netty.channel.DefaultChannelHandlerContext$13:void run()",
                "io.netty.channel.nio.NioEventLoop$1:void run()",
                "io.netty.bootstrap.AbstractBootstrap:io.netty.channel.ChannelFuture bind(int)",
                "io.netty.util.internal.ThreadLocalRandom$1:void run()",
                "io.netty.buffer.PooledByteBuf:int capacity()",
                "io.netty.buffer.EmptyByteBuf:int refCnt()",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8$EntrySetView:java.util.Iterator iterator()",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8$Node:java.lang.String toString()",
                "io.netty.channel.DefaultChannelPipeline$3:void run()",
                "io.netty.channel.DefaultChannelHandlerContext$14:void run()",
                "io.netty.util.internal.chmv8.ForkJoinPool:java.lang.String toString()",
                "io.netty.channel.DefaultChannelHandlerContext:io.netty.channel.ChannelFuture write(java.lang.Object)",
                "io.netty.buffer.SwappedByteBuf:io.netty.buffer.ByteBuf readBytes(byte[])",
                "io.netty.buffer.SwappedByteBuf:java.lang.String toString()",
                "io.netty.handler.codec.socks.SocksInitResponse:void encodeAsByteBuf(io.netty.buffer.ByteBuf)",
                "io.netty.buffer.UnreleasableByteBuf:java.lang.String toString(java.nio.charset.Charset)",
                "io.netty.buffer.UnpooledHeapByteBuf:int capacity()",
                "io.netty.buffer.CompositeByteBuf:io.netty.buffer.CompositeByteBuf writeBytes(byte[])",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8$EntryIterator:java.util.Map$Entry next()",
                "io.netty.buffer.Unpooled:void <clinit>()",
                "io.netty.buffer.EmptyByteBuf:io.netty.buffer.ByteBuf readBytes(java.io.OutputStream,int)",
                "io.netty.util.concurrent.DefaultPromise:java.lang.String toString()",
                "io.netty.buffer.SwappedByteBuf:io.netty.buffer.ByteBuf writeByte(int)",
                "io.netty.buffer.UnreleasableByteBuf:io.netty.buffer.ByteBuf writerIndex(int)",
                "io.netty.buffer.EmptyByteBuf:java.lang.String toString(java.nio.charset.Charset)",
                "io.netty.util.Signal:java.lang.String toString()",
                "io.netty.buffer.UnreleasableByteBuf:io.netty.buffer.ByteBuf readerIndex(int)",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8$KeySetView:boolean remove(java.lang.Object)",
                "io.netty.channel.DefaultChannelHandlerContext:io.netty.channel.ChannelHandlerContext flush()",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8:io.netty.util.internal.chmv8.ConcurrentHashMapV8$KeySetView keySet()",
                "io.netty.buffer.SwappedByteBuf:io.netty.buffer.ByteBuf readBytes(java.io.OutputStream,int)",
                "io.netty.handler.codec.socks.SocksCmdRequest:java.lang.String host()",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8$BaseIterator:boolean hasNext()",
                "io.netty.util.concurrent.DefaultPromise$2:void run()",
                "io.netty.util.internal.RecyclableArrayList:boolean add(java.lang.Object)",
                "io.netty.handler.codec.ReplayingDecoderBuffer:java.lang.String toString()",
                "io.netty.handler.codec.ReplayingDecoderBuffer:io.netty.buffer.ByteBuf writerIndex(int)",
                "io.netty.channel.DefaultChannelHandlerContext$9:void run()",
                "io.netty.util.AttributeKey:void <clinit>()",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8$CollectionView:int size()",
                "io.netty.buffer.UnreleasableByteBuf:int refCnt()",
                "io.netty.channel.DefaultChannelHandlerContext$12:void run()",
                "io.netty.handler.codec.ReplayingDecoderBuffer:io.netty.buffer.ByteBuf writeBytes(byte[])",
                "io.netty.handler.timeout.IdleStateHandler:void <init>(int,int,int)",
                "io.netty.buffer.EmptyByteBuf:io.netty.buffer.ByteBuf writerIndex(int)",
                "io.netty.handler.codec.ReplayingDecoderBuffer:io.netty.buffer.ByteBuf readerIndex(int)",
                "io.netty.buffer.SwappedByteBuf:io.netty.buffer.ByteBuf writeBytes(byte[])",
                "io.netty.bootstrap.ServerBootstrap:io.netty.bootstrap.ServerBootstrap childHandler(io.netty.channel.ChannelHandler)",
                "io.netty.channel.DefaultChannelPipeline$2:void run()",
                "io.netty.buffer.AbstractByteBuf:int writeBytes(java.io.InputStream,int)",
                "io.netty.handler.timeout.IdleStateHandler$WriterIdleTimeoutTask:void run()",
                "io.netty.buffer.AbstractByteBuf:io.netty.buffer.ByteBuf readBytes(byte[])",
                "io.netty.channel.DefaultChannelPipeline$1:void run()",
                "io.netty.handler.codec.ReplayingDecoderBuffer:io.netty.buffer.ByteBuf writeByte(int)",
                "io.netty.util.concurrent.ScheduledFutureTask:void run()",
                "io.netty.channel.CompleteChannelFuture:io.netty.channel.ChannelFuture addListener(io.netty.util.concurrent.GenericFutureListener)",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8:java.lang.Object get(java.lang.Object)",
                "io.netty.util.concurrent.DefaultPromise$3:void run()",
                "io.netty.channel.DefaultChannelHandlerContext:io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object)",
                "io.netty.channel.DefaultChannelPromise:io.netty.channel.ChannelPromise addListener(io.netty.util.concurrent.GenericFutureListener)",
                "io.netty.channel.DefaultChannelHandlerContext$17:void run()",
                "io.netty.channel.DefaultChannelHandlerContext$10:void run()",
                "io.netty.channel.DefaultChannelHandlerContext$6:void run()",
                "io.netty.bootstrap.ServerBootstrap:void <clinit>()",
                "io.netty.buffer.SwappedByteBuf:boolean equals(java.lang.Object)",
                "io.netty.buffer.Unpooled:io.netty.buffer.ByteBuf wrappedBuffer(byte[])",
                "io.netty.handler.codec.ReplayingDecoderBuffer:int refCnt()",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8:java.lang.Object put(java.lang.Object,java.lang.Object)",
                "io.netty.buffer.CompositeByteBuf:io.netty.buffer.CompositeByteBuf readBytes(java.io.OutputStream,int)",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8:java.lang.String toString()",
                "io.netty.buffer.AbstractByteBuf:java.lang.String toString(java.nio.charset.Charset)",
                "io.netty.buffer.SwappedByteBuf:io.netty.buffer.ByteBuf readerIndex(int)",
                "io.netty.handler.codec.socks.SocksCmdStatus:void <clinit>()",
                "io.netty.buffer.UnreleasableByteBuf:io.netty.buffer.ByteBuf readBytes(byte[])",
                "io.netty.channel.ChannelInboundHandlerAdapter:void <init>()",
                "io.netty.handler.timeout.IdleStateHandler$ReaderIdleTimeoutTask:void run()",
                "io.netty.handler.ssl.SslHandler$5:void run()",
                "io.netty.channel.DefaultChannelHandlerContext$8:void run()",
                "io.netty.util.concurrent.GlobalEventExecutor$PurgeTask:void run()",
                "io.netty.channel.MultithreadEventLoopGroup:void <clinit>()",
                "io.netty.buffer.AbstractReferenceCountedByteBuf:int refCnt()",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8$CollectionView:java.lang.String toString()",
                "io.netty.buffer.AbstractDerivedByteBuf:int refCnt()",
                "io.netty.util.internal.chmv8.ForkJoinTask:java.lang.Object get(long,java.util.concurrent.TimeUnit)",
                "io.netty.buffer.EmptyByteBuf:io.netty.buffer.ByteBuf writeBytes(byte[])",
                "io.netty.channel.nio.SelectedSelectionKeySet:java.util.Iterator iterator()",
                "io.netty.util.concurrent.DefaultPromise$5:void run()",
                "io.netty.buffer.SwappedByteBuf:java.lang.String toString(java.nio.charset.Charset)",
                "io.netty.util.concurrent.ScheduledFutureTask:long getDelay(java.util.concurrent.TimeUnit)",
                "io.netty.util.concurrent.AbstractEventExecutor:io.netty.util.concurrent.Future shutdownGracefully()",
                "io.netty.util.internal.logging.AbstractInternalLogger:java.lang.String toString()",
                "io.netty.channel.DefaultChannelHandlerContext:io.netty.channel.ChannelFuture close()",
                "io.netty.buffer.AbstractByteBuf:java.lang.String toString()",
                "io.netty.buffer.AbstractByteBufAllocator:io.netty.buffer.ByteBuf buffer(int)",
                "io.netty.handler.codec.ReplayingDecoderBuffer:int capacity()",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8:java.lang.Object remove(java.lang.Object)",
                "io.netty.buffer.SwappedByteBuf:io.netty.buffer.ByteBuf writerIndex(int)",
                "io.netty.buffer.UnpooledDirectByteBuf:io.netty.buffer.ByteBuf readBytes(java.io.OutputStream,int)",
                "io.netty.buffer.EmptyByteBuf:boolean equals(java.lang.Object)",
                "io.netty.util.concurrent.GlobalEventExecutor$1:void run()",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8$CollectionView:boolean isEmpty()",
                "io.netty.util.internal.chmv8.ForkJoinTask$AdaptedRunnableAction:void run()",
                "io.netty.util.concurrent.ImmediateExecutor:void execute(java.lang.Runnable)",
                "io.netty.buffer.EmptyByteBuf:int writeBytes(java.io.InputStream,int)",
                "io.netty.buffer.UnreleasableByteBuf:int readableBytes()",
                "io.netty.channel.DefaultChannelHandlerContext$15:void run()",
                "io.netty.handler.codec.socks.SocksCmdRequestDecoder:void <init>()",
                "io.netty.channel.DefaultChannelHandlerContext$1:void run()",
                "io.netty.channel.DefaultChannelHandlerContext$3:void run()",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8$KeySetView:java.util.Iterator iterator()",
                "io.netty.util.internal.chmv8.ForkJoinPool:void execute(java.lang.Runnable)",
                "io.netty.buffer.CompositeByteBuf:java.lang.String toString()",
                "io.netty.bootstrap.ServerBootstrap:io.netty.bootstrap.ServerBootstrap group(io.netty.channel.EventLoopGroup,io.netty.channel.EventLoopGroup)",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8$CollectionView:void clear()",
                "io.netty.buffer.AbstractByteBuf:boolean equals(java.lang.Object)",
                "io.netty.buffer.UnpooledUnsafeDirectByteBuf:int capacity()",
                "io.netty.handler.codec.ReplayingDecoderBuffer:boolean equals(java.lang.Object)",
                "io.netty.util.concurrent.DefaultPromise$6:void run()",
                "io.netty.buffer.CompositeByteBuf:io.netty.buffer.CompositeByteBuf readBytes(byte[])",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8:boolean containsKey(java.lang.Object)",
                "io.netty.buffer.CompositeByteBuf:io.netty.buffer.CompositeByteBuf writeByte(int)",
                "io.netty.util.concurrent.GlobalEventExecutor$TaskRunner:void run()",
                "io.netty.util.concurrent.SingleThreadEventExecutor:void execute(java.lang.Runnable)",
                "io.netty.buffer.UnreleasableByteBuf:boolean equals(java.lang.Object)",
                "io.netty.buffer.UnreleasableByteBuf:io.netty.buffer.ByteBuf writeBytes(byte[])",
                "io.netty.buffer.CompositeByteBuf:int capacity()",
                "io.netty.buffer.Unpooled:io.netty.buffer.ByteBuf buffer()",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8$MapEntry:java.lang.String toString()",
                "io.netty.buffer.AbstractByteBuf:io.netty.buffer.ByteBuf writeBytes(byte[])",
                "io.netty.channel.DefaultChannelHandlerContext$2:void run()",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8$ValuesView:java.util.Iterator iterator()",
                "io.netty.channel.DefaultChannelHandlerContext$WriteTask:void run()",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8$KeySetView:boolean equals(java.lang.Object)",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8$EntrySetView:boolean equals(java.lang.Object)",
                "io.netty.buffer.PoolArena:java.lang.String toString()",
                "io.netty.handler.codec.socks.SocksCmdResponse:void encodeAsByteBuf(io.netty.buffer.ByteBuf)",
                "io.netty.handler.codec.socks.SocksAddressType:void <clinit>()",
                "io.netty.buffer.PooledByteBufAllocator:void <clinit>()",
                "io.netty.buffer.AbstractByteBufAllocator:java.lang.String toString()",
                "io.netty.bootstrap.AbstractBootstrap:io.netty.bootstrap.AbstractBootstrap channel(java.lang.Class)",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8$EntrySetView:boolean add(java.lang.Object)",
                "io.netty.handler.codec.socks.SocksCmdResponse:void <init>(io.netty.handler.codec.socks.SocksCmdStatus,io.netty.handler.codec.socks.SocksAddressType)",
                "io.netty.channel.nio.NioEventLoopGroup:void <init>()",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8$KeySetView:boolean contains(java.lang.Object)",
                "io.netty.channel.DefaultChannelProgressivePromise:io.netty.channel.ChannelProgressivePromise addListener(io.netty.util.concurrent.GenericFutureListener)",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8$KeyIterator:java.lang.Object nextElement()",
                "io.netty.util.concurrent.PromiseTask$RunnableAdapter:java.lang.String toString()",
                "io.netty.buffer.AbstractByteBufAllocator:io.netty.buffer.ByteBuf buffer()",
                "io.netty.handler.codec.ReplayingDecoderBuffer:int writeBytes(java.io.InputStream,int)",
                "io.netty.channel.DefaultChannelHandlerContext$4:void run()",
                "io.netty.util.internal.chmv8.ForkJoinTask$AdaptedCallable:void run()",
                "io.netty.buffer.UnreleasableByteBuf:int writeBytes(java.io.InputStream,int)",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8$EntrySetView:boolean contains(java.lang.Object)",
                "io.netty.buffer.SwappedByteBuf:int writeBytes(java.io.InputStream,int)",
                "io.netty.handler.timeout.IdleStateHandler$AllIdleTimeoutTask:void run()",
                "io.netty.bootstrap.ServerBootstrap:java.lang.String toString()",
                "io.netty.buffer.AbstractByteBuf:io.netty.buffer.ByteBuf readBytes(java.io.OutputStream,int)",
                "io.netty.handler.timeout.IdleState:void <clinit>()",
                "io.netty.buffer.AbstractByteBuf:io.netty.buffer.ByteBuf writerIndex(int)",
                "io.netty.channel.ChannelOutboundBuffer$2:void run()",
                "io.netty.buffer.PooledDirectByteBuf:io.netty.buffer.ByteBuf readBytes(java.io.OutputStream,int)",
                "io.netty.buffer.CompositeByteBuf:io.netty.buffer.CompositeByteBuf writerIndex(int)",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8$ValueIterator:java.lang.Object next()",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8$ValuesView:boolean contains(java.lang.Object)",
                "io.netty.util.UniqueName:void <clinit>()",
                "io.netty.handler.codec.ReplayingDecoderBuffer:int readableBytes()",
                "io.netty.buffer.AbstractByteBuf:io.netty.buffer.ByteBuf readerIndex(int)",
                "io.netty.bootstrap.ServerBootstrap:io.netty.bootstrap.ServerBootstrap clone()",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8$EntrySetView:boolean remove(java.lang.Object)",
                "io.netty.buffer.CompositeByteBuf:io.netty.buffer.CompositeByteBuf readerIndex(int)",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8$ValueIterator:java.lang.Object nextElement()",
                "io.netty.buffer.UnreleasableByteBuf:io.netty.buffer.ByteBuf writeByte(int)",
                "io.netty.channel.DefaultChannelHandlerContext$7:void run()",
                "io.netty.util.ResourceLeakException:boolean equals(java.lang.Object)",
                "io.netty.util.internal.chmv8.ForkJoinTask$AdaptedRunnable:void run()",
                "io.netty.handler.codec.ReplayingDecoderBuffer:io.netty.buffer.ByteBuf readBytes(byte[])",
                "io.netty.buffer.SwappedByteBuf:int capacity()",
                "io.netty.buffer.SwappedByteBuf:int readableBytes()",
                "io.netty.channel.DefaultChannelHandlerContext$16:void run()",
                "io.netty.handler.codec.socks.SocksAuthScheme:void <clinit>()",
                "io.netty.buffer.EmptyByteBuf:java.lang.String toString()",
                "io.netty.channel.DefaultChannelHandlerContext$11:void run()",
                "io.netty.buffer.UnreleasableByteBuf:int capacity()",
                "io.netty.channel.DefaultChannelHandlerContext$5:void run()",
                "io.netty.util.concurrent.DefaultPromise:boolean isSuccess()",
                "io.netty.buffer.PoolChunk:java.lang.String toString()",
                "io.netty.util.internal.chmv8.ForkJoinWorkerThread:void run()",
                "io.netty.util.AttributeKey:io.netty.util.AttributeKey valueOf(java.lang.String)",
                "io.netty.util.concurrent.DefaultPromise$4:void run()",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8$KeySetView:boolean add(java.lang.Object)",
                "io.netty.buffer.EmptyByteBuf:int readableBytes()",
                "io.netty.buffer.SwappedByteBuf:int refCnt()",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8:boolean equals(java.lang.Object)",
                "io.netty.buffer.AbstractByteBuf:io.netty.buffer.ByteBuf writeByte(int)",
                "io.netty.handler.codec.socks.SocksResponse:void <init>(io.netty.handler.codec.socks.SocksResponseType)",
                "io.netty.buffer.AbstractByteBuf:int readableBytes()",
                "io.netty.handler.codec.socks.SocksInitResponse:void <init>(io.netty.handler.codec.socks.SocksAuthScheme)",
                "io.netty.buffer.EmptyByteBuf:io.netty.buffer.ByteBuf readBytes(byte[])",
                "io.netty.channel.ChannelInitializer:void <init>()",
                "io.netty.util.ReferenceCountUtil:boolean release(java.lang.Object)",
                "io.netty.util.concurrent.AbstractFuture:java.lang.Object get(long,java.util.concurrent.TimeUnit)",
                "io.netty.handler.codec.socks.SocksInitRequestDecoder:void <init>()",
                "io.netty.handler.ssl.SslHandler$1:void run()",
                "io.netty.buffer.PoolSubpage:java.lang.String toString()",
                "io.netty.handler.codec.ReplayingDecoderBuffer:io.netty.buffer.ByteBuf readBytes(java.io.OutputStream,int)",
                "io.netty.util.concurrent.DefaultPromise:java.lang.Throwable cause()",
                "io.netty.buffer.UnpooledDirectByteBuf:int capacity()",
                "io.netty.channel.DefaultChannelHandlerContext:io.netty.channel.Channel channel()",
                "io.netty.buffer.UnreleasableByteBuf:java.lang.String toString()",
                "io.netty.buffer.ReadOnlyByteBufferBuf:int capacity()",
                "io.netty.handler.codec.ReplayingDecoder:void <clinit>()"
            ]
        },
        "org.springframework:spring-core:3.2.4.RELEASE": {
            "used-method num": 47,
            "used method": [
                "org.springframework.core.convert.support.GenericConversionService$ConverterAdapter:java.lang.String toString()",
                "org.springframework.util.ConcurrentReferenceHashMap$EntrySet:boolean remove(java.lang.Object)",
                "org.springframework.core.env.PropertySource:boolean equals(java.lang.Object)",
                "org.springframework.util.ConcurrentReferenceHashMap$EntrySet:boolean contains(java.lang.Object)",
                "org.springframework.util.ConcurrentReferenceHashMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
                "org.springframework.core.convert.support.GenericConversionService$Converters:java.lang.String toString()",
                "org.springframework.core.io.support.PathMatchingResourcePatternResolver$PatternVirtualFileVisitor:java.lang.String toString()",
                "org.springframework.asm.Type:boolean equals(java.lang.Object)",
                "org.springframework.core.convert.TypeDescriptor:boolean equals(java.lang.Object)",
                "org.springframework.asm.Handle:java.lang.String toString()",
                "org.springframework.util.ConcurrentReferenceHashMap:boolean containsKey(java.lang.Object)",
                "org.springframework.util.ConcurrentReferenceHashMap$EntrySet:void clear()",
                "org.springframework.asm.Type:java.lang.String toString()",
                "org.springframework.core.env.PropertySource:java.lang.String toString()",
                "org.springframework.cglib.core.Signature:boolean equals(java.lang.Object)",
                "org.springframework.core.convert.support.GenericConversionService$ConverterFactoryAdapter:java.lang.String toString()",
                "org.springframework.util.ConcurrentReferenceHashMap$Entry:boolean equals(java.lang.Object)",
                "org.springframework.core.annotation.AnnotationAttributes:java.lang.String toString()",
                "org.springframework.core.io.support.EncodedResource:boolean equals(java.lang.Object)",
                "org.springframework.core.AttributeAccessorSupport:boolean equals(java.lang.Object)",
                "org.springframework.core.NestedIOException:java.lang.String getMessage()",
                "org.springframework.cglib.core.ClassEmitter$FieldInfo:boolean equals(java.lang.Object)",
                "org.springframework.util.ConcurrentReferenceHashMap$Entry:java.lang.String toString()",
                "org.springframework.util.ConcurrentReferenceHashMap$EntryIterator:boolean hasNext()",
                "org.springframework.core.io.UrlResource:boolean equals(java.lang.Object)",
                "org.springframework.cglib.core.MethodInfo:java.lang.String toString()",
                "org.springframework.core.io.VfsResource:boolean equals(java.lang.Object)",
                "org.springframework.util.ConcurrentReferenceHashMap$EntrySet:java.util.Iterator iterator()",
                "org.springframework.core.convert.Property:boolean equals(java.lang.Object)",
                "org.springframework.util.ConcurrentReferenceHashMap:java.lang.Object remove(java.lang.Object)",
                "org.springframework.core.io.support.EncodedResource:java.lang.String toString()",
                "org.springframework.core.convert.support.GenericConversionService$ConverterCacheKey:boolean equals(java.lang.Object)",
                "org.springframework.cglib.core.Signature:java.lang.String toString()",
                "org.springframework.util.ConcurrentReferenceHashMap:java.lang.Object get(java.lang.Object)",
                "org.springframework.cglib.core.DefaultNamingPolicy:boolean equals(java.lang.Object)",
                "org.springframework.core.convert.support.GenericConversionService$ConvertersForPair:java.lang.String toString()",
                "org.springframework.core.convert.TypeDescriptor:java.lang.String toString()",
                "org.springframework.asm.Label:java.lang.String toString()",
                "org.springframework.core.MethodParameter:boolean equals(java.lang.Object)",
                "org.springframework.core.convert.support.GenericConversionService$ConverterCacheKey:java.lang.String toString()",
                "org.springframework.core.convert.converter.GenericConverter$ConvertiblePair:boolean equals(java.lang.Object)",
                "org.springframework.util.ConcurrentReferenceHashMap$EntrySet:int size()",
                "org.springframework.asm.Handle:boolean equals(java.lang.Object)",
                "org.springframework.util.ConcurrentReferenceHashMap$EntryIterator:org.springframework.util.ConcurrentReferenceHashMap$Entry next()",
                "org.springframework.core.env.AbstractEnvironment:java.lang.String toString()",
                "org.springframework.core.io.ClassPathResource:boolean equals(java.lang.Object)",
                "org.springframework.core.io.AbstractResource:java.lang.String toString()"
            ]
        }
    }
}
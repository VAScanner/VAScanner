{
    "project name": "aaronchen2k_ngtesting-platform",
    "vulnerable dependencies": {
        "org.postgresql:postgresql:42.2.2": {
            "used-method num": 5,
            "used method": [
                "org.ietf.jgss.Oid:boolean equals(java.lang.Object)",
                "org.ietf.jgss.Oid:java.lang.String toString()",
                "org.ietf.jgss.GSSException:java.lang.String getMessage()",
                "org.ietf.jgss.Oid:int hashCode()",
                "org.ietf.jgss.GSSException:java.lang.String toString()"
            ]
        },
        "com.alibaba:fastjson:1.2.47": {
            "used-method num": 53,
            "used method": [
                "com.alibaba.fastjson.serializer.JSONSerializer:java.lang.String toString()",
                "com.alibaba.fastjson.JSON:java.lang.Object parseObject(java.lang.String,java.lang.Class)",
                "com.alibaba.fastjson.JSON:java.lang.String toString()",
                "com.alibaba.fastjson.JSONArray:boolean equals(java.lang.Object)",
                "com.alibaba.fastjson.util.ParameterizedTypeImpl:boolean equals(java.lang.Object)",
                "com.alibaba.fastjson.JSONObject:void <init>()",
                "com.alibaba.fastjson.JSONObject:java.lang.Integer getInteger(java.lang.String)",
                "com.alibaba.fastjson.JSONArray:java.lang.Object[] toArray()",
                "com.alibaba.fastjson.JSONArray:java.lang.Object remove(int)",
                "com.alibaba.fastjson.JSONPObject:java.lang.String toString()",
                "com.alibaba.fastjson.JSONObject:java.lang.String getString(java.lang.String)",
                "com.alibaba.fastjson.JSONObject:com.alibaba.fastjson.JSONArray getJSONArray(java.lang.String)",
                "com.alibaba.fastjson.JSONObject:java.lang.Object put(java.lang.String,java.lang.Object)",
                "com.alibaba.fastjson.JSON:com.alibaba.fastjson.JSONObject parseObject(java.lang.String)",
                "com.alibaba.fastjson.JSONArray:int hashCode()",
                "com.alibaba.fastjson.JSONArray:void add(int,java.lang.Object)",
                "com.alibaba.fastjson.serializer.SerialContext:java.lang.String toString()",
                "com.alibaba.fastjson.JSONObject:java.lang.Object clone()",
                "com.alibaba.fastjson.JSONObject:boolean equals(java.lang.Object)",
                "com.alibaba.fastjson.JSONObject:java.util.Date getDate(java.lang.String)",
                "com.alibaba.fastjson.JSON:void <clinit>()",
                "com.alibaba.fastjson.JSONObject:java.lang.Object put(java.lang.Object,java.lang.Object)",
                "com.alibaba.fastjson.JSONObject:void putAll(java.util.Map)",
                "com.alibaba.fastjson.JSON:java.lang.String toJSONString()",
                "com.alibaba.fastjson.JSONObject:java.lang.Object remove(java.lang.Object)",
                "com.alibaba.fastjson.JSONObject:void clear()",
                "com.alibaba.fastjson.JSONObject:java.util.Set keySet()",
                "com.alibaba.fastjson.parser.ParseContext:java.lang.String toString()",
                "com.alibaba.fastjson.JSONArray:java.util.Iterator iterator()",
                "com.alibaba.fastjson.JSONObject:com.alibaba.fastjson.JSONObject getJSONObject(java.lang.String)",
                "com.alibaba.fastjson.JSONArray:boolean contains(java.lang.Object)",
                "com.alibaba.fastjson.JSONObject:java.lang.Long getLong(java.lang.String)",
                "com.alibaba.fastjson.JSONObject:java.util.Collection values()",
                "com.alibaba.fastjson.JSONObject:int hashCode()",
                "com.alibaba.fastjson.JSONArray:java.lang.Object[] toArray(java.lang.Object[])",
                "com.alibaba.fastjson.JSONObject:java.lang.Object getObject(java.lang.String,java.lang.Class)",
                "com.alibaba.fastjson.JSONObject:boolean containsKey(java.lang.Object)",
                "com.alibaba.fastjson.JSONObject:java.util.Set entrySet()",
                "com.alibaba.fastjson.JSONObject:java.lang.Object get(java.lang.Object)",
                "com.alibaba.fastjson.JSON:java.util.List parseArray(java.lang.String,java.lang.Class)",
                "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object)",
                "com.alibaba.fastjson.JSONObject:int size()",
                "com.alibaba.fastjson.JSONObject:boolean containsValue(java.lang.Object)",
                "com.alibaba.fastjson.JSONArray:boolean isEmpty()",
                "com.alibaba.fastjson.JSONArray:int size()",
                "com.alibaba.fastjson.serializer.SerializeWriter:java.lang.String toString()",
                "com.alibaba.fastjson.JSONObject:java.lang.Boolean getBoolean(java.lang.String)",
                "com.alibaba.fastjson.JSONArray:boolean addAll(int,java.util.Collection)",
                "com.alibaba.fastjson.JSONObject:boolean isEmpty()",
                "com.alibaba.fastjson.JSONArray:java.lang.Object clone()",
                "com.alibaba.fastjson.JSONArray:java.lang.Object get(int)",
                "com.alibaba.fastjson.util.ParameterizedTypeImpl:int hashCode()",
                "com.alibaba.fastjson.JSONArray:boolean add(java.lang.Object)"
            ],
            "CVE": [
                "CVE-2022-25845"
            ],
            "used vul-method": [
                "com.alibaba.fastjson.JSON:java.lang.Object parseObject(java.lang.String,java.lang.Class)",
                "com.alibaba.fastjson.JSON:java.lang.String toString()",
                "com.alibaba.fastjson.JSONPObject:java.lang.String toString()",
                "com.alibaba.fastjson.JSONObject:com.alibaba.fastjson.JSONArray getJSONArray(java.lang.String)",
                "com.alibaba.fastjson.JSON:com.alibaba.fastjson.JSONObject parseObject(java.lang.String)",
                "com.alibaba.fastjson.JSON:java.lang.String toJSONString()",
                "com.alibaba.fastjson.JSONObject:com.alibaba.fastjson.JSONObject getJSONObject(java.lang.String)",
                "com.alibaba.fastjson.JSONObject:java.lang.Object getObject(java.lang.String,java.lang.Class)",
                "com.alibaba.fastjson.JSON:java.util.List parseArray(java.lang.String,java.lang.Class)",
                "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object)"
            ],
            "vul-called frequency": 262,
            "related vul root method": {
                "CVE-2022-25845": [
                    "com.alibaba.fastjson.parser.ParserConfig:java.lang.Class checkAutoType(java.lang.String,java.lang.Class,int)"
                ]
            },
            "CVE-API": {
                "CVE-2022-25845": [
                    "com.alibaba.fastjson.JSON:java.lang.Object parseObject(java.lang.String,java.lang.Class)",
                    "com.alibaba.fastjson.JSON:java.lang.String toString()",
                    "com.alibaba.fastjson.JSONPObject:java.lang.String toString()",
                    "com.alibaba.fastjson.JSONObject:com.alibaba.fastjson.JSONArray getJSONArray(java.lang.String)",
                    "com.alibaba.fastjson.JSON:com.alibaba.fastjson.JSONObject parseObject(java.lang.String)",
                    "com.alibaba.fastjson.JSON:java.lang.String toJSONString()",
                    "com.alibaba.fastjson.JSONObject:com.alibaba.fastjson.JSONObject getJSONObject(java.lang.String)",
                    "com.alibaba.fastjson.JSONObject:java.lang.Object getObject(java.lang.String,java.lang.Class)",
                    "com.alibaba.fastjson.JSON:java.util.List parseArray(java.lang.String,java.lang.Class)",
                    "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object)"
                ]
            }
        },
        "org.apache.httpcomponents:httpclient:4.4.1": {
            "used-method num": 67,
            "used method": [
                "org.apache.http.impl.execchain.ResponseEntityProxy:java.lang.String toString()",
                "org.apache.http.client.methods.HttpPost:void <init>(java.lang.String)",
                "org.apache.http.client.entity.LazyDecompressingInputStream:void close()",
                "org.apache.http.cookie.CookieOrigin:java.lang.String toString()",
                "org.apache.http.impl.client.RedirectLocations:java.net.URI remove(int)",
                "org.apache.http.impl.client.BasicCredentialsProvider:java.lang.String toString()",
                "org.apache.http.auth.NTCredentials:java.lang.String toString()",
                "org.apache.http.impl.client.RedirectLocations:java.net.URI get(int)",
                "org.apache.http.impl.execchain.RequestEntityProxy:org.apache.http.Header getContentType()",
                "org.ietf.jgss.Oid:boolean equals(java.lang.Object)",
                "org.ietf.jgss.Oid:java.lang.String toString()",
                "org.apache.http.client.methods.HttpRequestBase:void setConfig(org.apache.http.client.config.RequestConfig)",
                "org.apache.http.impl.cookie.BasicClientCookie:java.lang.String toString()",
                "org.apache.http.client.config.RequestConfig$Builder:org.apache.http.client.config.RequestConfig$Builder setConnectTimeout(int)",
                "org.apache.http.auth.UsernamePasswordCredentials:java.lang.String toString()",
                "org.apache.http.conn.routing.HttpRoute:int hashCode()",
                "org.apache.http.impl.execchain.RequestEntityProxy:java.lang.String toString()",
                "org.apache.http.client.methods.HttpRequestBase:java.lang.String toString()",
                "org.ietf.jgss.GSSException:java.lang.String getMessage()",
                "org.apache.http.auth.AuthScope:java.lang.String toString()",
                "org.apache.http.client.config.RequestConfig:org.apache.http.client.config.RequestConfig$Builder custom()",
                "org.apache.http.client.methods.HttpEntityEnclosingRequestBase:java.lang.Object clone()",
                "org.apache.http.client.utils.URIBuilder:java.lang.String toString()",
                "org.apache.http.conn.scheme.SocketFactoryAdaptor:int hashCode()",
                "org.apache.http.conn.routing.HttpRoute:boolean equals(java.lang.Object)",
                "org.apache.http.impl.client.RedirectLocations:int size()",
                "org.apache.http.impl.auth.AuthSchemeBase:java.lang.String toString()",
                "org.apache.http.impl.client.RedirectLocations:boolean contains(java.lang.Object)",
                "org.apache.http.client.config.RequestConfig$Builder:org.apache.http.client.config.RequestConfig$Builder setSocketTimeout(int)",
                "org.apache.http.client.entity.DeflateInputStream$DeflateStream:void close()",
                "org.apache.http.impl.conn.CPoolProxy:java.lang.String toString()",
                "org.apache.http.auth.BasicUserPrincipal:int hashCode()",
                "org.apache.http.impl.client.BasicCookieStore:java.lang.String toString()",
                "org.apache.http.auth.BasicUserPrincipal:java.lang.String toString()",
                "org.apache.http.conn.routing.RouteTracker:java.lang.String toString()",
                "org.apache.http.client.config.RequestConfig:org.apache.http.client.config.RequestConfig clone()",
                "org.apache.http.impl.execchain.HttpResponseProxy:org.apache.http.HttpEntity getEntity()",
                "org.apache.http.impl.client.RedirectLocations:void add(int,java.lang.Object)",
                "org.apache.http.auth.UsernamePasswordCredentials:int hashCode()",
                "org.apache.http.client.config.RequestConfig:java.lang.String toString()",
                "org.apache.http.impl.cookie.BasicClientCookie:java.lang.Object clone()",
                "org.apache.http.client.methods.HttpRequestWrapper:java.lang.String toString()",
                "org.apache.http.client.methods.AbstractExecutionAwareRequest:java.lang.Object clone()",
                "org.apache.http.conn.EofSensorInputStream:void close()",
                "org.apache.http.impl.auth.DigestScheme:java.lang.String toString()",
                "org.apache.http.impl.cookie.BasicClientCookie2:java.lang.Object clone()",
                "org.apache.http.conn.routing.HttpRoute:java.lang.Object clone()",
                "org.apache.http.conn.scheme.SocketFactoryAdaptor:boolean equals(java.lang.Object)",
                "org.apache.http.auth.AuthState:java.lang.String toString()",
                "org.apache.http.impl.client.InternalHttpClient:void close()",
                "org.apache.http.conn.scheme.SchemeSocketFactoryAdaptor:int hashCode()",
                "org.apache.http.client.config.RequestConfig$Builder:org.apache.http.client.config.RequestConfig build()",
                "org.apache.http.conn.routing.HttpRoute:java.lang.String toString()",
                "org.apache.http.client.methods.HttpEntityEnclosingRequestBase:void setEntity(org.apache.http.HttpEntity)",
                "org.apache.http.conn.routing.RouteTracker:java.lang.Object clone()",
                "org.apache.http.auth.AuthScope:boolean equals(java.lang.Object)",
                "org.apache.http.impl.execchain.HttpResponseProxy:void close()",
                "org.ietf.jgss.Oid:int hashCode()",
                "org.apache.http.impl.client.CloseableHttpClient:org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)",
                "org.apache.http.impl.client.HttpClients:org.apache.http.impl.client.CloseableHttpClient createDefault()",
                "org.apache.http.impl.execchain.HttpResponseProxy:java.lang.String toString()",
                "org.ietf.jgss.GSSException:java.lang.String toString()",
                "org.apache.http.client.entity.DeflateInputStream:void close()",
                "org.apache.http.conn.scheme.SchemeSocketFactoryAdaptor:boolean equals(java.lang.Object)",
                "org.apache.http.impl.auth.BasicScheme:java.lang.String toString()",
                "org.apache.http.impl.conn.LoggingInputStream:void close()",
                "org.apache.http.client.config.RequestConfig:void <clinit>()"
            ],
            "CVE": [
                "CVE-2020-13956"
            ],
            "used vul-method": [
                "org.apache.http.impl.client.CloseableHttpClient:org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)"
            ],
            "vul-called frequency": 1,
            "related vul root method": {
                "CVE-2020-13956": [
                    "org.apache.http.client.utils.URIUtils:org.apache.http.HttpHost extractHost(java.net.URI)"
                ]
            },
            "CVE-API": {
                "CVE-2020-13956": [
                    "org.apache.http.impl.client.CloseableHttpClient:org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)"
                ]
            }
        },
        "commons-beanutils:commons-beanutils:1.9.3": {
            "used-method num": 50,
            "used method": [
                "org.apache.commons.beanutils.WrapDynaClass$2:boolean equals(java.lang.Object)",
                "org.apache.commons.beanutils.WrapDynaClass$2:void clear()",
                "org.apache.commons.beanutils.WeakFastHashMap:java.lang.Object get(java.lang.Object)",
                "org.apache.commons.beanutils.WeakFastHashMap:java.util.Set entrySet()",
                "org.apache.commons.beanutils.DynaProperty:int hashCode()",
                "org.apache.commons.beanutils.WrapDynaClass$2:java.util.Set entrySet()",
                "org.apache.commons.beanutils.WeakFastHashMap:java.util.Set keySet()",
                "org.apache.commons.beanutils.ConversionException:void <init>(java.lang.String)",
                "org.apache.commons.beanutils.WrapDynaClass$2:java.lang.Object get(java.lang.Object)",
                "org.apache.commons.beanutils.WrapDynaClass$2:boolean isEmpty()",
                "org.apache.commons.beanutils.WeakFastHashMap:boolean containsKey(java.lang.Object)",
                "org.apache.commons.beanutils.WeakFastHashMap:int size()",
                "org.apache.commons.beanutils.DynaProperty:boolean equals(java.lang.Object)",
                "org.apache.commons.beanutils.WeakFastHashMap:int hashCode()",
                "org.apache.commons.beanutils.WeakFastHashMap$CollectionView:java.lang.Object[] toArray(java.lang.Object[])",
                "org.apache.commons.beanutils.WeakFastHashMap:boolean equals(java.lang.Object)",
                "org.apache.commons.beanutils.WeakFastHashMap$CollectionView:boolean isEmpty()",
                "org.apache.commons.beanutils.WeakFastHashMap$CollectionView:boolean add(java.lang.Object)",
                "org.apache.commons.beanutils.DynaProperty:java.lang.String toString()",
                "org.apache.commons.beanutils.converters.ConverterFacade:java.lang.String toString()",
                "org.apache.commons.beanutils.converters.DateTimeConverter:java.lang.String toString()",
                "org.apache.commons.beanutils.WrapDynaClass$2:boolean containsKey(java.lang.Object)",
                "org.apache.commons.beanutils.WrapDynaClass$2:java.lang.Object remove(java.lang.Object)",
                "org.apache.commons.beanutils.WeakFastHashMap$CollectionView:int hashCode()",
                "org.apache.commons.beanutils.WeakFastHashMap:java.lang.Object remove(java.lang.Object)",
                "org.apache.commons.beanutils.WeakFastHashMap:java.lang.Object clone()",
                "org.apache.commons.beanutils.MethodUtils$MethodDescriptor:boolean equals(java.lang.Object)",
                "org.apache.commons.beanutils.converters.ArrayConverter:java.lang.String toString()",
                "org.apache.commons.beanutils.WrapDynaClass$2:boolean containsValue(java.lang.Object)",
                "org.apache.commons.beanutils.ConvertUtils:void register(org.apache.commons.beanutils.Converter,java.lang.Class)",
                "org.apache.commons.beanutils.WrapDynaClass$2:java.util.Collection values()",
                "org.apache.commons.beanutils.WeakFastHashMap:void clear()",
                "org.apache.commons.beanutils.WrapDynaClass$2:java.lang.Object put(java.lang.Object,java.lang.Object)",
                "org.apache.commons.beanutils.WeakFastHashMap$CollectionView:java.util.Iterator iterator()",
                "org.apache.commons.beanutils.WeakFastHashMap:boolean containsValue(java.lang.Object)",
                "org.apache.commons.beanutils.WeakFastHashMap$CollectionView:boolean contains(java.lang.Object)",
                "org.apache.commons.beanutils.WrapDynaClass$2:int hashCode()",
                "org.apache.commons.beanutils.WeakFastHashMap:boolean isEmpty()",
                "org.apache.commons.beanutils.converters.NumberConverter:java.lang.String toString()",
                "org.apache.commons.beanutils.WeakFastHashMap$CollectionView:int size()",
                "org.apache.commons.beanutils.WeakFastHashMap:void putAll(java.util.Map)",
                "org.apache.commons.beanutils.WeakFastHashMap$CollectionView:boolean equals(java.lang.Object)",
                "org.apache.commons.beanutils.WeakFastHashMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
                "org.apache.commons.beanutils.converters.AbstractConverter:java.lang.String toString()",
                "org.apache.commons.beanutils.WrapDynaClass$2:void putAll(java.util.Map)",
                "org.apache.commons.beanutils.WrapDynaClass$2:java.util.Set keySet()",
                "org.apache.commons.beanutils.WrapDynaClass$CacheKey:int hashCode()",
                "org.apache.commons.beanutils.WeakFastHashMap:java.util.Collection values()",
                "org.apache.commons.beanutils.WrapDynaClass$2:int size()",
                "org.apache.commons.beanutils.WrapDynaClass$CacheKey:boolean equals(java.lang.Object)"
            ],
            "CVE": [
                "CVE-2019-10086"
            ],
            "used vul-method": [
                "org.apache.commons.beanutils.WrapDynaClass$2:boolean equals(java.lang.Object)",
                "org.apache.commons.beanutils.WrapDynaClass$2:void clear()",
                "org.apache.commons.beanutils.WrapDynaClass$2:java.util.Set entrySet()",
                "org.apache.commons.beanutils.WrapDynaClass$2:java.lang.Object get(java.lang.Object)",
                "org.apache.commons.beanutils.WrapDynaClass$2:boolean isEmpty()",
                "org.apache.commons.beanutils.WrapDynaClass$2:boolean containsKey(java.lang.Object)",
                "org.apache.commons.beanutils.WrapDynaClass$2:java.lang.Object remove(java.lang.Object)",
                "org.apache.commons.beanutils.WrapDynaClass$2:boolean containsValue(java.lang.Object)",
                "org.apache.commons.beanutils.ConvertUtils:void register(org.apache.commons.beanutils.Converter,java.lang.Class)",
                "org.apache.commons.beanutils.WrapDynaClass$2:java.util.Collection values()",
                "org.apache.commons.beanutils.WrapDynaClass$2:java.lang.Object put(java.lang.Object,java.lang.Object)",
                "org.apache.commons.beanutils.WrapDynaClass$2:int hashCode()",
                "org.apache.commons.beanutils.WrapDynaClass$2:void putAll(java.util.Map)",
                "org.apache.commons.beanutils.WrapDynaClass$2:java.util.Set keySet()",
                "org.apache.commons.beanutils.WrapDynaClass$2:int size()"
            ],
            "vul-called frequency": 904,
            "related vul root method": {
                "CVE-2019-10086": [
                    "org.apache.commons.beanutils.PropertyUtilsBean:void resetBeanIntrospectors()"
                ]
            },
            "CVE-API": {
                "CVE-2019-10086": [
                    "org.apache.commons.beanutils.WrapDynaClass$2:boolean equals(java.lang.Object)",
                    "org.apache.commons.beanutils.WrapDynaClass$2:void clear()",
                    "org.apache.commons.beanutils.WrapDynaClass$2:java.util.Set entrySet()",
                    "org.apache.commons.beanutils.WrapDynaClass$2:java.lang.Object get(java.lang.Object)",
                    "org.apache.commons.beanutils.WrapDynaClass$2:boolean isEmpty()",
                    "org.apache.commons.beanutils.WrapDynaClass$2:boolean containsKey(java.lang.Object)",
                    "org.apache.commons.beanutils.WrapDynaClass$2:java.lang.Object remove(java.lang.Object)",
                    "org.apache.commons.beanutils.WrapDynaClass$2:boolean containsValue(java.lang.Object)",
                    "org.apache.commons.beanutils.ConvertUtils:void register(org.apache.commons.beanutils.Converter,java.lang.Class)",
                    "org.apache.commons.beanutils.WrapDynaClass$2:java.util.Collection values()",
                    "org.apache.commons.beanutils.WrapDynaClass$2:java.lang.Object put(java.lang.Object,java.lang.Object)",
                    "org.apache.commons.beanutils.WrapDynaClass$2:int hashCode()",
                    "org.apache.commons.beanutils.WrapDynaClass$2:void putAll(java.util.Map)",
                    "org.apache.commons.beanutils.WrapDynaClass$2:java.util.Set keySet()",
                    "org.apache.commons.beanutils.WrapDynaClass$2:int size()"
                ]
            }
        },
        "org.apache.shiro:shiro-core:1.4.0": {
            "used-method num": 82,
            "used method": [
                "org.apache.shiro.authc.DisabledAccountException:void <init>()",
                "org.apache.shiro.util.MapContext:java.util.Collection values()",
                "org.apache.shiro.authz.SimpleAuthorizationInfo:void <init>()",
                "org.apache.shiro.config.Ini:org.apache.shiro.config.Ini$Section get(java.lang.Object)",
                "org.apache.shiro.util.ByteSource$Util:org.apache.shiro.util.ByteSource bytes(java.lang.String)",
                "org.apache.shiro.config.Ini:int size()",
                "org.apache.shiro.config.Ini$Section:boolean isEmpty()",
                "org.apache.shiro.util.MapContext:void putAll(java.util.Map)",
                "org.apache.shiro.util.MapContext:java.lang.Object put(java.lang.Object,java.lang.Object)",
                "org.apache.shiro.subject.SimplePrincipalCollection:java.lang.String toString()",
                "org.apache.shiro.realm.AuthenticatingRealm:void setCredentialsMatcher(org.apache.shiro.authc.credential.CredentialsMatcher)",
                "org.apache.shiro.subject.SimplePrincipalCollection:int hashCode()",
                "org.apache.shiro.authc.UsernamePasswordToken:char[] getPassword()",
                "org.apache.shiro.authc.SimpleAuthenticationInfo:java.lang.String toString()",
                "org.apache.shiro.authz.permission.WildcardPermission:java.lang.String toString()",
                "org.apache.shiro.config.Ini:java.util.Set keySet()",
                "org.apache.shiro.config.Ini$Section:java.util.Collection values()",
                "org.apache.shiro.config.Ini$Section:int size()",
                "org.apache.shiro.config.Ini$Section:java.lang.String toString()",
                "org.apache.shiro.util.SimpleByteSource:int hashCode()",
                "org.apache.shiro.config.Ini:org.apache.shiro.config.Ini$Section remove(java.lang.Object)",
                "org.apache.shiro.authc.SimpleAuthenticationInfo:void <init>(java.lang.Object,java.lang.Object,org.apache.shiro.util.ByteSource,java.lang.String)",
                "org.apache.shiro.util.MapContext:void clear()",
                "org.apache.shiro.authc.SimpleAuthenticationInfo:org.apache.shiro.util.ByteSource getCredentialsSalt()",
                "org.apache.shiro.config.Ini$Section:boolean containsKey(java.lang.Object)",
                "org.apache.shiro.config.Ini$Section:boolean equals(java.lang.Object)",
                "org.apache.shiro.authz.permission.WildcardPermission:int hashCode()",
                "org.apache.shiro.config.Ini:java.util.Set entrySet()",
                "org.apache.shiro.config.Ini:int hashCode()",
                "org.apache.shiro.subject.SimplePrincipalCollection:java.lang.Object getPrimaryPrincipal()",
                "org.apache.shiro.authz.permission.WildcardPermission:boolean equals(java.lang.Object)",
                "org.apache.shiro.subject.SimplePrincipalCollection:void <init>(java.lang.Object,java.lang.String)",
                "org.apache.shiro.authz.permission.WildcardPermission:void <init>(java.lang.String)",
                "org.apache.shiro.SecurityUtils:org.apache.shiro.mgt.SecurityManager getSecurityManager()",
                "org.apache.shiro.util.MapContext:java.util.Set entrySet()",
                "org.apache.shiro.authc.IncorrectCredentialsException:void <init>()",
                "org.apache.shiro.authc.SimpleAuthenticationInfo:boolean equals(java.lang.Object)",
                "org.apache.shiro.subject.SimplePrincipalCollection:boolean equals(java.lang.Object)",
                "org.apache.shiro.util.SimpleByteSource:java.lang.String toString()",
                "org.apache.shiro.config.Ini$Section:int hashCode()",
                "org.apache.shiro.config.Ini:java.lang.String toString()",
                "org.apache.shiro.authz.SimpleAuthorizationInfo:void addStringPermission(java.lang.String)",
                "org.apache.shiro.util.MapContext:java.lang.Object get(java.lang.Object)",
                "org.apache.shiro.realm.AuthorizingRealm:void clearCachedAuthorizationInfo(org.apache.shiro.subject.PrincipalCollection)",
                "org.apache.shiro.realm.AuthorizingRealm:void <init>()",
                "org.apache.shiro.config.Ini:java.lang.Object put(java.lang.Object,java.lang.Object)",
                "org.apache.shiro.config.Ini:boolean containsValue(java.lang.Object)",
                "org.apache.shiro.authc.SimpleAuthenticationInfo:int hashCode()",
                "org.apache.shiro.util.SimpleByteSource:boolean equals(java.lang.Object)",
                "org.apache.shiro.realm.AuthorizingRealm:void <clinit>()",
                "org.apache.shiro.session.mgt.DefaultSessionKey:void <init>(java.io.Serializable)",
                "org.apache.shiro.config.Ini$Section:java.lang.String remove(java.lang.Object)",
                "org.apache.shiro.authc.UsernamePasswordToken:java.lang.String toString()",
                "org.apache.shiro.config.Ini:void putAll(java.util.Map)",
                "org.apache.shiro.authc.SimpleAuthenticationInfo:java.lang.Object getCredentials()",
                "org.apache.shiro.authc.credential.SimpleCredentialsMatcher:void <init>()",
                "org.apache.shiro.config.Ini$Section:java.util.Set entrySet()",
                "org.apache.shiro.config.Ini:void clear()",
                "org.apache.shiro.util.MapContext:boolean containsValue(java.lang.Object)",
                "org.apache.shiro.realm.CachingRealm:void <clinit>()",
                "org.apache.shiro.config.Ini:boolean equals(java.lang.Object)",
                "org.apache.shiro.authc.UsernamePasswordToken:java.lang.String getUsername()",
                "org.apache.shiro.util.MapContext:boolean containsKey(java.lang.Object)",
                "org.apache.shiro.config.Ini$Section:void putAll(java.util.Map)",
                "org.apache.shiro.util.MapContext:int size()",
                "org.apache.shiro.config.Ini$Section:boolean containsValue(java.lang.Object)",
                "org.apache.shiro.realm.CachingRealm:java.lang.String getName()",
                "org.apache.shiro.authc.UnknownAccountException:void <init>()",
                "org.apache.shiro.authc.UsernamePasswordToken:void <init>(java.lang.String,java.lang.String,boolean)",
                "org.apache.shiro.config.Ini$Section:void clear()",
                "org.apache.shiro.config.Ini$Section:java.lang.Object put(java.lang.Object,java.lang.Object)",
                "org.apache.shiro.config.Ini:java.util.Collection values()",
                "org.apache.shiro.subject.SimplePrincipalCollection:java.util.Set getRealmNames()",
                "org.apache.shiro.SecurityUtils:org.apache.shiro.subject.Subject getSubject()",
                "org.apache.shiro.realm.AuthenticatingRealm:void <clinit>()",
                "org.apache.shiro.config.Ini:boolean isEmpty()",
                "org.apache.shiro.util.MapContext:boolean isEmpty()",
                "org.apache.shiro.util.MapContext:java.util.Set keySet()",
                "org.apache.shiro.config.Ini$Section:java.util.Set keySet()",
                "org.apache.shiro.util.MapContext:java.lang.Object remove(java.lang.Object)",
                "org.apache.shiro.config.Ini$Section:java.lang.String get(java.lang.Object)",
                "org.apache.shiro.config.Ini:boolean containsKey(java.lang.Object)"
            ]
        },
        "org.apache.poi:poi-ooxml:3.17": {
            "used-method num": 63,
            "used method": [
                "org.apache.poi.openxml4j.opc.internal.ContentType:int hashCode()",
                "org.apache.poi.xssf.usermodel.XSSFWorkbook:org.apache.poi.xssf.usermodel.XSSFFont createFont()",
                "org.apache.poi.xssf.usermodel.XSSFColor:int hashCode()",
                "org.apache.poi.xssf.usermodel.XSSFWorkbook:void <clinit>()",
                "org.apache.poi.xssf.usermodel.XSSFWorkbook:void <init>()",
                "org.apache.poi.xssf.usermodel.XSSFSheet:int addMergedRegion(org.apache.poi.ss.util.CellRangeAddress)",
                "org.apache.poi.xssf.usermodel.XSSFWorkbook$SheetIterator:org.apache.poi.ss.usermodel.Sheet next()",
                "org.apache.poi.xssf.usermodel.XSSFWorkbook:org.apache.poi.xssf.usermodel.XSSFCellStyle createCellStyle()",
                "org.apache.poi.openxml4j.util.ZipInputStreamZipEntrySource$EntryEnumerator:java.util.zip.ZipEntry nextElement()",
                "org.apache.poi.xssf.usermodel.XSSFRow:org.apache.poi.xssf.usermodel.XSSFCell createCell(int)",
                "org.apache.poi.xssf.usermodel.XSSFCell:void setCellValue(java.lang.String)",
                "org.apache.poi.openxml4j.util.ZipInputStreamZipEntrySource$EntryEnumerator:boolean hasMoreElements()",
                "org.apache.poi.xssf.usermodel.XSSFTextParagraph:java.lang.String toString()",
                "org.apache.poi.xssf.usermodel.XSSFCellStyle:void setFillForegroundColor(org.apache.poi.xssf.usermodel.XSSFColor)",
                "org.apache.poi.xssf.usermodel.XSSFFont:int hashCode()",
                "org.apache.poi.xssf.usermodel.XSSFTextRun:java.lang.String toString()",
                "org.apache.poi.openxml4j.opc.PackageRelationship:boolean equals(java.lang.Object)",
                "org.apache.poi.xssf.usermodel.XSSFSheet:void setColumnWidth(int,int)",
                "org.apache.poi.xssf.usermodel.XSSFCellStyle:java.lang.Object clone()",
                "org.apache.poi.xssf.usermodel.XSSFConditionalFormatting:java.lang.String toString()",
                "org.apache.poi.openxml4j.opc.PackagePartName:java.lang.String toString()",
                "org.apache.poi.xssf.usermodel.extensions.XSSFCellBorder:boolean equals(java.lang.Object)",
                "org.apache.poi.xssf.usermodel.XSSFCell:void setCellValue(double)",
                "org.apache.poi.xssf.usermodel.XSSFRichTextString:java.lang.String toString()",
                "org.apache.poi.xssf.usermodel.XSSFCell:java.lang.String toString()",
                "org.apache.poi.POIXMLDocument:void write(java.io.OutputStream)",
                "org.apache.poi.xssf.usermodel.extensions.XSSFCellBorder:int hashCode()",
                "org.apache.poi.xssf.usermodel.XSSFFont:java.lang.String toString()",
                "org.apache.poi.xssf.usermodel.XSSFWorkbook:org.apache.poi.xssf.usermodel.XSSFSheet createSheet()",
                "org.apache.poi.openxml4j.opc.internal.ContentType:java.lang.String toString()",
                "org.apache.poi.xssf.usermodel.XSSFDialogsheet:org.apache.poi.xssf.usermodel.XSSFRow createRow(int)",
                "org.apache.poi.xssf.usermodel.XSSFRow:java.lang.String toString()",
                "org.apache.poi.xssf.usermodel.XSSFSheet:void autoSizeColumn(int,boolean)",
                "org.apache.poi.xssf.usermodel.XSSFName:int hashCode()",
                "org.apache.poi.xssf.usermodel.XSSFColor:boolean equals(java.lang.Object)",
                "org.apache.poi.xssf.usermodel.XSSFName:boolean equals(java.lang.Object)",
                "org.apache.poi.openxml4j.opc.PackageRelationship:int hashCode()",
                "org.apache.poi.xssf.usermodel.XSSFRow:boolean equals(java.lang.Object)",
                "org.apache.poi.xssf.usermodel.XSSFFont:void setFontHeightInPoints(short)",
                "org.apache.poi.openxml4j.util.ZipSecureFile:java.io.InputStream getInputStream(java.util.zip.ZipEntry)",
                "org.apache.poi.openxml4j.opc.internal.ContentType:boolean equals(java.lang.Object)",
                "org.apache.poi.openxml4j.opc.PackageRelationship:java.lang.String toString()",
                "org.apache.poi.xssf.usermodel.extensions.XSSFCellFill:int hashCode()",
                "org.apache.poi.xssf.usermodel.XSSFColor:void <init>(java.awt.Color)",
                "org.apache.poi.openxml4j.opc.PackagePartName:boolean equals(java.lang.Object)",
                "org.apache.poi.xssf.usermodel.XSSFCellStyle:void setFont(org.apache.poi.ss.usermodel.Font)",
                "org.apache.poi.xssf.usermodel.XSSFClientAnchor:int hashCode()",
                "org.apache.poi.xssf.usermodel.XSSFCell:void setCellStyle(org.apache.poi.ss.usermodel.CellStyle)",
                "org.apache.poi.xssf.usermodel.XSSFCellStyle:void setIndention(short)",
                "org.apache.poi.xssf.usermodel.XSSFComment:int hashCode()",
                "org.apache.poi.xssf.usermodel.XSSFFont:void setFontName(java.lang.String)",
                "org.apache.poi.xssf.usermodel.XSSFFont:boolean equals(java.lang.Object)",
                "org.apache.poi.xssf.usermodel.XSSFClientAnchor:java.lang.String toString()",
                "org.apache.poi.POIXMLDocumentPart:java.lang.String toString()",
                "org.apache.poi.openxml4j.opc.PackageRelationshipCollection:java.lang.String toString()",
                "org.apache.poi.xssf.usermodel.XSSFComment:boolean equals(java.lang.Object)",
                "org.apache.poi.xssf.usermodel.XSSFClientAnchor:boolean equals(java.lang.Object)",
                "org.apache.poi.xssf.usermodel.extensions.XSSFCellFill:boolean equals(java.lang.Object)",
                "org.apache.poi.xssf.usermodel.XSSFCellStyle:void setFillPattern(org.apache.poi.ss.usermodel.FillPatternType)",
                "org.apache.poi.xssf.usermodel.XSSFRow:int hashCode()",
                "org.apache.poi.xssf.usermodel.XSSFWorkbook$SheetIterator:boolean hasNext()",
                "org.apache.poi.openxml4j.opc.PackagePart:java.lang.String toString()",
                "org.apache.poi.openxml4j.opc.PackagePartName:int hashCode()"
            ]
        }
    }
}
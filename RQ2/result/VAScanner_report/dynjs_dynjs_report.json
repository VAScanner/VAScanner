{
    "project name": "dynjs_dynjs",
    "vulnerable dependencies": {
        "io.netty:netty-all:4.0.20.Final": {
            "used-method num": 135,
            "used method": [
                "io.netty.util.concurrent.GlobalEventExecutor:void execute(java.lang.Runnable)",
                "io.netty.channel.ChannelDuplexHandler:void <init>()",
                "io.netty.bootstrap.ServerBootstrap:void <init>()",
                "io.netty.channel.ChannelInitializer:void <clinit>()",
                "io.netty.util.UniqueName:java.lang.String toString()",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8$KeyIterator:java.lang.Object next()",
                "io.netty.handler.codec.ReplayingDecoderBuffer:java.lang.String toString(java.nio.charset.Charset)",
                "io.netty.util.UniqueName:boolean equals(java.lang.Object)",
                "io.netty.bootstrap.AbstractBootstrap:io.netty.channel.ChannelFuture bind(int)",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8:void clear()",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8$EntrySetView:java.util.Iterator iterator()",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8$Node:java.lang.String toString()",
                "io.netty.util.internal.chmv8.ForkJoinPool:java.lang.String toString()",
                "io.netty.buffer.SwappedByteBuf:java.lang.String toString()",
                "io.netty.buffer.WrappedByteBuf:int bytesBefore(byte)",
                "io.netty.buffer.CompositeByteBuf:io.netty.buffer.CompositeByteBuf writeBytes(byte[])",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8$EntryIterator:java.util.Map$Entry next()",
                "io.netty.util.concurrent.DefaultPromise:java.lang.String toString()",
                "io.netty.util.ResourceLeakDetector$DefaultResourceLeak:java.lang.String toString()",
                "io.netty.buffer.EmptyByteBuf:java.lang.String toString(java.nio.charset.Charset)",
                "io.netty.buffer.AdvancedLeakAwareByteBuf:int bytesBefore(byte)",
                "io.netty.util.Signal:java.lang.String toString()",
                "io.netty.channel.ChannelDuplexHandler:void deregister(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise)",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8$KeySetView:boolean remove(java.lang.Object)",
                "io.netty.bootstrap.ServerBootstrap:io.netty.bootstrap.ServerBootstrap group(io.netty.channel.EventLoopGroup)",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8:io.netty.util.internal.chmv8.ConcurrentHashMapV8$KeySetView keySet()",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8$BaseIterator:boolean hasNext()",
                "io.netty.buffer.WrappedByteBuf:io.netty.buffer.ByteBuf readBytes(int)",
                "io.netty.buffer.SwappedByteBuf:byte readByte()",
                "io.netty.util.internal.RecyclableArrayList:boolean add(java.lang.Object)",
                "io.netty.handler.codec.ReplayingDecoderBuffer:java.lang.String toString()",
                "io.netty.buffer.AbstractByteBuf:int bytesBefore(byte)",
                "io.netty.handler.codec.ReplayingDecoderBuffer:io.netty.buffer.ByteBuf writeBytes(byte[])",
                "io.netty.buffer.SwappedByteBuf:io.netty.buffer.ByteBuf writeBytes(byte[])",
                "io.netty.bootstrap.ServerBootstrap:io.netty.bootstrap.ServerBootstrap childHandler(io.netty.channel.ChannelHandler)",
                "io.netty.util.internal.FastThreadLocal:void set(java.lang.Object)",
                "io.netty.channel.ChannelInboundHandlerAdapter:void exceptionCaught(io.netty.channel.ChannelHandlerContext,java.lang.Throwable)",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8:java.lang.Object get(java.lang.Object)",
                "io.netty.buffer.AbstractByteBuf:byte readByte()",
                "io.netty.bootstrap.ServerBootstrap:void <clinit>()",
                "io.netty.buffer.SwappedByteBuf:boolean equals(java.lang.Object)",
                "io.netty.channel.ChannelDuplexHandler:void disconnect(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise)",
                "io.netty.buffer.WrappedByteBuf:byte readByte()",
                "io.netty.util.internal.MpscLinkedQueue$1:java.lang.Object next()",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8:java.lang.Object put(java.lang.Object,java.lang.Object)",
                "io.netty.buffer.AbstractByteBuf:java.lang.String toString(java.nio.charset.Charset)",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8:java.lang.String toString()",
                "io.netty.channel.ChannelInboundHandlerAdapter:void channelReadComplete(io.netty.channel.ChannelHandlerContext)",
                "io.netty.channel.ChannelInboundHandlerAdapter:void <init>()",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8$CollectionView:java.lang.String toString()",
                "io.netty.buffer.EmptyByteBuf:io.netty.buffer.ByteBuf writeBytes(byte[])",
                "io.netty.handler.codec.ReplayingDecoder:java.lang.Object state()",
                "io.netty.buffer.SwappedByteBuf:java.lang.String toString(java.nio.charset.Charset)",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8$EntrySetView:boolean addAll(java.util.Collection)",
                "io.netty.util.internal.logging.AbstractInternalLogger:java.lang.String toString()",
                "io.netty.handler.codec.ReplayingDecoderBuffer:io.netty.buffer.ByteBuf readBytes(int)",
                "io.netty.buffer.AbstractByteBuf:java.lang.String toString()",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8:java.lang.Object remove(java.lang.Object)",
                "io.netty.channel.ChannelInboundHandlerAdapter:void channelUnregistered(io.netty.channel.ChannelHandlerContext)",
                "io.netty.buffer.EmptyByteBuf:boolean equals(java.lang.Object)",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8$CollectionView:boolean isEmpty()",
                "io.netty.buffer.WrappedByteBuf:io.netty.buffer.ByteBuf writeBytes(byte[])",
                "io.netty.buffer.AdvancedLeakAwareByteBuf:io.netty.buffer.ByteBuf readBytes(int)",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8$BaseIterator:void remove()",
                "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object)",
                "io.netty.channel.SimpleChannelInboundHandler:void <init>()",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8$KeySetView:java.util.Iterator iterator()",
                "io.netty.util.internal.chmv8.ForkJoinPool:void execute(java.lang.Runnable)",
                "io.netty.buffer.CompositeByteBuf:java.lang.String toString()",
                "io.netty.buffer.AbstractByteBuf:boolean equals(java.lang.Object)",
                "io.netty.buffer.AbstractByteBuf:io.netty.buffer.ByteBuf readBytes(int)",
                "io.netty.handler.codec.ReplayingDecoderBuffer:boolean equals(java.lang.Object)",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8:boolean containsKey(java.lang.Object)",
                "io.netty.buffer.AdvancedLeakAwareByteBuf:byte readByte()",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8$MapEntry:java.lang.String toString()",
                "io.netty.buffer.AbstractByteBuf:io.netty.buffer.ByteBuf writeBytes(byte[])",
                "io.netty.channel.AbstractChannelHandlerContext:io.netty.buffer.ByteBufAllocator alloc()",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8$ValuesView:java.util.Iterator iterator()",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8$KeySetView:boolean equals(java.lang.Object)",
                "io.netty.util.internal.FastThreadLocal:java.lang.Object get()",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8$EntrySetView:boolean equals(java.lang.Object)",
                "io.netty.buffer.AdvancedLeakAwareByteBuf:java.lang.String toString(java.nio.charset.Charset)",
                "io.netty.buffer.PoolArena:java.lang.String toString()",
                "io.netty.util.internal.RecyclableArrayList:void add(int,java.lang.Object)",
                "io.netty.util.concurrent.AbstractEventExecutor:java.util.Iterator iterator()",
                "io.netty.buffer.AbstractByteBufAllocator:java.lang.String toString()",
                "io.netty.buffer.EmptyByteBuf:io.netty.buffer.ByteBuf readBytes(int)",
                "io.netty.bootstrap.AbstractBootstrap:io.netty.bootstrap.AbstractBootstrap channel(java.lang.Class)",
                "io.netty.buffer.EmptyByteBuf:int bytesBefore(byte)",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8:void putAll(java.util.Map)",
                "io.netty.channel.ChannelInboundHandlerAdapter:void userEventTriggered(io.netty.channel.ChannelHandlerContext,java.lang.Object)",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8$EntrySetView:boolean add(java.lang.Object)",
                "io.netty.util.internal.MpscLinkedQueue$1:void remove()",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8$KeySetView:boolean contains(java.lang.Object)",
                "io.netty.buffer.SwappedByteBuf:int bytesBefore(byte)",
                "io.netty.channel.ChannelDuplexHandler:void bind(io.netty.channel.ChannelHandlerContext,java.net.SocketAddress,io.netty.channel.ChannelPromise)",
                "io.netty.util.concurrent.PromiseTask$RunnableAdapter:java.lang.String toString()",
                "io.netty.buffer.AbstractByteBufAllocator:io.netty.buffer.ByteBuf buffer()",
                "io.netty.buffer.EmptyByteBuf:byte readByte()",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8$EntrySetView:boolean contains(java.lang.Object)",
                "io.netty.bootstrap.ServerBootstrap:java.lang.String toString()",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8:java.util.Collection values()",
                "io.netty.channel.ChannelDuplexHandler:void close(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise)",
                "io.netty.buffer.SwappedByteBuf:io.netty.buffer.ByteBuf readBytes(int)",
                "io.netty.buffer.WrappedByteBuf:boolean equals(java.lang.Object)",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8$ValueIterator:java.lang.Object next()",
                "io.netty.buffer.WrappedByteBuf:java.lang.String toString(java.nio.charset.Charset)",
                "io.netty.channel.ChannelInboundHandlerAdapter:void channelRegistered(io.netty.channel.ChannelHandlerContext)",
                "io.netty.bootstrap.ServerBootstrap:io.netty.bootstrap.ServerBootstrap clone()",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8$EntrySetView:boolean remove(java.lang.Object)",
                "io.netty.handler.codec.ReplayingDecoderBuffer:byte readByte()",
                "io.netty.util.internal.FullyPaddedReference:java.lang.String toString()",
                "io.netty.buffer.AdvancedLeakAwareByteBuf:io.netty.buffer.ByteBuf writeBytes(byte[])",
                "io.netty.util.internal.MpscLinkedQueue:java.util.Iterator iterator()",
                "io.netty.util.internal.RecyclableArrayList:boolean addAll(java.util.Collection)",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8$KeySetView:boolean addAll(java.util.Collection)",
                "io.netty.handler.codec.ReplayingDecoderBuffer:int bytesBefore(byte)",
                "io.netty.buffer.EmptyByteBuf:java.lang.String toString()",
                "io.netty.channel.ChannelHandlerAdapter:void <clinit>()",
                "io.netty.util.ReferenceCountUtil$ReleasingTask:java.lang.String toString()",
                "io.netty.channel.ChannelDuplexHandler:void connect(io.netty.channel.ChannelHandlerContext,java.net.SocketAddress,java.net.SocketAddress,io.netty.channel.ChannelPromise)",
                "io.netty.buffer.ByteBufInputStream:void <init>(io.netty.buffer.ByteBuf,int)",
                "io.netty.handler.codec.ReplayingDecoder:void <init>(java.lang.Object)",
                "io.netty.buffer.PoolChunk:java.lang.String toString()",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8$KeySetView:boolean add(java.lang.Object)",
                "io.netty.util.internal.MpscLinkedQueue$1:boolean hasNext()",
                "io.netty.channel.ChannelInboundHandlerAdapter:void channelInactive(io.netty.channel.ChannelHandlerContext)",
                "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.Channel channel()",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8:boolean equals(java.lang.Object)",
                "io.netty.handler.codec.ReplayingDecoder:java.lang.Object state(java.lang.Object)",
                "io.netty.channel.ChannelInitializer:void <init>()",
                "io.netty.buffer.WrappedByteBuf:java.lang.String toString()",
                "io.netty.buffer.PoolSubpage:java.lang.String toString()",
                "io.netty.channel.ChannelInboundHandlerAdapter:void channelActive(io.netty.channel.ChannelHandlerContext)",
                "io.netty.handler.codec.ReplayingDecoder:void <clinit>()"
            ]
        }
    }
}
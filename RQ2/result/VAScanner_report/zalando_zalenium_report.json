{
    "project name": "zalando_zalenium",
    "vulnerable dependencies": {
        "org.eclipse.jetty:jetty-server:9.4.12.v20180830": {
            "used-method num": 90,
            "used method": [
                "org.eclipse.jetty.server.Utf8HttpWriter:void write(char[],int,int)",
                "org.eclipse.jetty.server.Request:java.lang.String getParameter(java.lang.String)",
                "org.eclipse.jetty.server.HttpChannelState$4:void run()",
                "org.eclipse.jetty.server.Request:int getContentLength()",
                "org.eclipse.jetty.server.HttpInput:java.lang.String toString()",
                "org.eclipse.jetty.server.EncodingHttpWriter:void write(char[],int,int)",
                "org.eclipse.jetty.server.Request:java.lang.String toString()",
                "org.eclipse.jetty.server.HttpChannelState$3:void run()",
                "org.eclipse.jetty.server.Response:void reset()",
                "org.eclipse.jetty.server.session.HouseKeeper$Runner:void run()",
                "org.eclipse.jetty.server.Response:void addHeader(java.lang.String,java.lang.String)",
                "org.eclipse.jetty.server.ServletResponseHttpWrapper:void sendRedirect(java.lang.String)",
                "org.eclipse.jetty.server.HttpConnection:void run()",
                "org.eclipse.jetty.server.ServletRequestHttpWrapper:java.lang.String getQueryString()",
                "org.eclipse.jetty.server.HttpConnection$SendCallback:java.lang.String toString()",
                "org.eclipse.jetty.server.Response:void setStatus(int)",
                "org.eclipse.jetty.server.ServerConnector$ServerConnectorManager:java.lang.String toString()",
                "org.eclipse.jetty.server.Response:java.io.PrintWriter getWriter()",
                "org.eclipse.jetty.server.handler.ContextHandlerCollection$Branch:java.lang.String toString()",
                "org.eclipse.jetty.server.HttpInput$ErrorState:java.lang.String toString()",
                "org.eclipse.jetty.server.handler.StatisticsHandler:java.lang.String toString()",
                "org.eclipse.jetty.server.Request:java.lang.String getRequestURI()",
                "org.eclipse.jetty.server.Request:java.lang.String getMethod()",
                "org.eclipse.jetty.server.Response:void setIntHeader(java.lang.String,int)",
                "org.eclipse.jetty.server.HttpInput$Content:java.lang.String toString()",
                "org.eclipse.jetty.server.ServletResponseHttpWrapper:void setHeader(java.lang.String,java.lang.String)",
                "org.eclipse.jetty.server.Dispatcher$ForwardAttributes:java.lang.String toString()",
                "org.eclipse.jetty.server.HttpWriter:void close()",
                "org.eclipse.jetty.server.ServletResponseHttpWrapper:void setStatus(int)",
                "org.eclipse.jetty.server.HttpInput:void run()",
                "org.eclipse.jetty.server.Iso88591HttpWriter:void write(char[],int,int)",
                "org.eclipse.jetty.server.HttpConfiguration:java.lang.String toString()",
                "org.eclipse.jetty.server.Response:void setDateHeader(java.lang.String,long)",
                "org.eclipse.jetty.server.HttpChannel:java.lang.String toString()",
                "org.eclipse.jetty.server.AbstractConnectionFactory:java.lang.String toString()",
                "org.eclipse.jetty.server.Dispatcher:java.lang.String toString()",
                "org.eclipse.jetty.server.handler.ContextHandler$Context:java.lang.Object getAttribute(java.lang.String)",
                "org.eclipse.jetty.server.Request:javax.servlet.ServletInputStream getInputStream()",
                "org.eclipse.jetty.server.Response:void sendError(int)",
                "org.eclipse.jetty.server.HttpChannelState$2:void run()",
                "org.eclipse.jetty.server.Response:int getStatus()",
                "org.eclipse.jetty.server.session.Session$1:java.lang.String nextElement()",
                "org.eclipse.jetty.server.session.AbstractSessionDataStore:java.lang.String toString()",
                "org.eclipse.jetty.server.Request:java.util.Enumeration getHeaders(java.lang.String)",
                "org.eclipse.jetty.server.HttpOutput:void flush()",
                "org.eclipse.jetty.server.handler.StatisticsHandler:void <init>()",
                "org.eclipse.jetty.server.ServletResponseHttpWrapper:void sendError(int)",
                "org.eclipse.jetty.server.session.AbstractSessionCache:java.lang.String toString()",
                "org.eclipse.jetty.server.session.SessionContext:java.lang.String toString()",
                "org.eclipse.jetty.server.Request:java.lang.String getPathInfo()",
                "org.eclipse.jetty.server.Request:java.util.Map getParameterMap()",
                "org.eclipse.jetty.server.ResponseWriter:void write(char[],int,int)",
                "org.eclipse.jetty.server.Response:void setContentType(java.lang.String)",
                "org.eclipse.jetty.server.Response:void sendRedirect(java.lang.String)",
                "org.eclipse.jetty.server.Response:void setContentLength(int)",
                "org.eclipse.jetty.server.handler.HandlerWrapper:void setHandler(org.eclipse.jetty.server.Handler)",
                "org.eclipse.jetty.server.Request:java.lang.String getHeader(java.lang.String)",
                "org.eclipse.jetty.server.AsyncContextState$2:void run()",
                "org.eclipse.jetty.server.handler.ContextHandler$Context:java.lang.String getInitParameter(java.lang.String)",
                "org.eclipse.jetty.server.HttpOutput:void run()",
                "org.eclipse.jetty.server.ServletRequestHttpWrapper:java.lang.String getPathInfo()",
                "org.eclipse.jetty.server.AsyncContextEvent:void run()",
                "org.eclipse.jetty.server.session.SessionData:java.lang.String toString()",
                "org.eclipse.jetty.server.Request:java.lang.String getContextPath()",
                "org.eclipse.jetty.server.HttpChannelState:java.lang.String toString()",
                "org.eclipse.jetty.server.Request:java.util.Enumeration getHeaderNames()",
                "org.eclipse.jetty.server.HttpChannel:void run()",
                "org.eclipse.jetty.server.handler.ContextHandler$Context:java.lang.String toString()",
                "org.eclipse.jetty.server.Response:javax.servlet.ServletOutputStream getOutputStream()",
                "org.eclipse.jetty.server.HttpOutput:void close()",
                "org.eclipse.jetty.server.Response:java.util.Collection getHeaders(java.lang.String)",
                "org.eclipse.jetty.server.Response:void flushBuffer()",
                "org.eclipse.jetty.server.ShutdownMonitor$ShutdownMonitorRunnable:void run()",
                "org.eclipse.jetty.server.AbstractNetworkConnector:java.lang.String toString()",
                "org.eclipse.jetty.server.ShutdownMonitor:java.lang.String toString()",
                "org.eclipse.jetty.server.Request:java.lang.String getServletPath()",
                "org.eclipse.jetty.server.Request:java.lang.String getCharacterEncoding()",
                "org.eclipse.jetty.server.Request:java.lang.String getQueryString()",
                "org.eclipse.jetty.server.Dispatcher$IncludeAttributes:java.lang.String toString()",
                "org.eclipse.jetty.server.Response:void setCharacterEncoding(java.lang.String)",
                "org.eclipse.jetty.server.ResponseWriter:void close()",
                "org.eclipse.jetty.server.Response:java.lang.String toString()",
                "org.eclipse.jetty.server.ResponseWriter:void print(java.lang.String)",
                "org.eclipse.jetty.server.session.DefaultSessionIdManager:java.lang.String toString()",
                "org.eclipse.jetty.server.HttpOutput:java.lang.String toString()",
                "org.eclipse.jetty.server.session.HouseKeeper:java.lang.String toString()",
                "org.eclipse.jetty.server.Response:void setHeader(java.lang.String,java.lang.String)",
                "org.eclipse.jetty.server.HttpChannelState$1:void run()",
                "org.eclipse.jetty.server.Request:void setAttribute(java.lang.String,java.lang.Object)",
                "org.eclipse.jetty.server.Response:boolean isCommitted()"
            ]
        },
        "junit:junit:4.12": {
            "used-method num": 0,
            "used method": []
        }
    }
}
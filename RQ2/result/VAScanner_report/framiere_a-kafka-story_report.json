{
    "project name": "framiere_a-kafka-story",
    "modules": {
        "com.github.framiere:simple-streams-join": {
            "vulnerable dependencies": {
                "org.apache.kafka:kafka-clients:2.3.0": {
                    "used-method num": 13,
                    "used method": [
                        "org.apache.kafka.clients.admin.AdminClient:org.apache.kafka.clients.admin.AdminClient create(java.util.Properties)",
                        "org.apache.kafka.clients.producer.KafkaProducer:void <init>(java.util.Properties)",
                        "org.apache.kafka.common.serialization.Serdes:org.apache.kafka.common.serialization.Serde Integer()",
                        "org.apache.kafka.clients.admin.AdminClient:org.apache.kafka.clients.admin.ListTopicsResult listTopics()",
                        "org.apache.kafka.clients.producer.KafkaProducer:void <clinit>()",
                        "org.apache.kafka.common.utils.FixedOrderMap:org.apache.kafka.common.utils.FixedOrderMap clone()",
                        "org.apache.kafka.clients.producer.KafkaProducer:java.util.concurrent.Future send(org.apache.kafka.clients.producer.ProducerRecord)",
                        "org.apache.kafka.clients.admin.ListTopicsResult:org.apache.kafka.common.KafkaFuture names()",
                        "org.apache.kafka.common.utils.ImplicitLinkedHashCollection$ImplicitLinkedHashCollectionSetView:boolean contains(java.lang.Object)",
                        "org.apache.kafka.common.internals.KafkaFutureImpl:java.lang.Object get()",
                        "org.apache.kafka.clients.producer.ProducerRecord:void <init>(java.lang.String,java.lang.Object)",
                        "org.apache.kafka.common.utils.ImplicitLinkedHashCollection$ImplicitLinkedHashCollectionListView:int size()",
                        "org.apache.kafka.clients.producer.ProducerRecord:void <init>(java.lang.String,java.lang.Object,java.lang.Object)"
                    ],
                    "CVE": [
                        "CVE-2023-25194"
                    ],
                    "used vul-method": [
                        "org.apache.kafka.clients.admin.AdminClient:org.apache.kafka.clients.admin.AdminClient create(java.util.Properties)",
                        "org.apache.kafka.clients.producer.KafkaProducer:void <init>(java.util.Properties)"
                    ],
                    "vul-called frequency": 2,
                    "related vul root method": {
                        "CVE-2023-25194": [
                            "org.apache.kafka.common.security.JaasContext:org.apache.kafka.common.security.JaasContext defaultContext(org.apache.kafka.common.security.JaasContext$Type,java.lang.String,java.lang.String)",
                            "org.apache.kafka.common.security.JaasContext:org.apache.kafka.common.security.JaasContext load(org.apache.kafka.common.security.JaasContext$Type,java.lang.String,java.lang.String,org.apache.kafka.common.config.types.Password)"
                        ]
                    },
                    "CVE-API": {
                        "CVE-2023-25194": [
                            "org.apache.kafka.clients.admin.AdminClient:org.apache.kafka.clients.admin.AdminClient create(java.util.Properties)",
                            "org.apache.kafka.clients.producer.KafkaProducer:void <init>(java.util.Properties)"
                        ]
                    }
                },
                "org.apache.kafka:kafka-clients:1.0.0": {
                    "used-method num": 10,
                    "used method": [
                        "org.apache.kafka.clients.admin.AdminClient:org.apache.kafka.clients.admin.AdminClient create(java.util.Properties)",
                        "org.apache.kafka.clients.producer.KafkaProducer:void <init>(java.util.Properties)",
                        "org.apache.kafka.common.serialization.Serdes:org.apache.kafka.common.serialization.Serde Integer()",
                        "org.apache.kafka.clients.admin.AdminClient:org.apache.kafka.clients.admin.ListTopicsResult listTopics()",
                        "org.apache.kafka.clients.producer.KafkaProducer:void <clinit>()",
                        "org.apache.kafka.clients.producer.KafkaProducer:java.util.concurrent.Future send(org.apache.kafka.clients.producer.ProducerRecord)",
                        "org.apache.kafka.clients.admin.ListTopicsResult:org.apache.kafka.common.KafkaFuture names()",
                        "org.apache.kafka.common.internals.KafkaFutureImpl:java.lang.Object get()",
                        "org.apache.kafka.clients.producer.ProducerRecord:void <init>(java.lang.String,java.lang.Object)",
                        "org.apache.kafka.clients.producer.ProducerRecord:void <init>(java.lang.String,java.lang.Object,java.lang.Object)"
                    ]
                },
                "mysql:mysql-connector-java:8.0.16": {
                    "used-method num": 0,
                    "used method": []
                }
            }
        },
        "com.github.framiere:operations-to-mysql": {
            "vulnerable dependencies": {
                "org.apache.kafka:kafka-clients:2.3.0": {
                    "used-method num": 246,
                    "used method": [
                        "org.apache.kafka.common.protocol.types.Struct:int hashCode()",
                        "org.apache.kafka.clients.Metadata$LeaderAndEpoch:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.network.KafkaChannel:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.message.JoinGroupRequestData:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.Node:int hashCode()",
                        "org.apache.kafka.common.message.SaslHandshakeResponseData:boolean equals(java.lang.Object)",
                        "org.apache.kafka.clients.consumer.OffsetAndMetadata:int hashCode()",
                        "org.apache.kafka.clients.admin.AdminClient:org.apache.kafka.clients.admin.AdminClient create(java.util.Properties)",
                        "org.apache.kafka.common.utils.ImplicitLinkedHashCollection:int hashCode()",
                        "org.apache.kafka.common.message.ElectPreferredLeadersResponseData$PartitionResult:int hashCode()",
                        "org.apache.kafka.clients.consumer.internals.AbstractCoordinator$Generation:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.message.DescribeGroupsResponseData:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.message.SyncGroupRequestData:int hashCode()",
                        "org.apache.kafka.common.requests.WriteTxnMarkersRequest$TxnMarkerEntry:int hashCode()",
                        "org.apache.kafka.common.message.ControlledShutdownResponseData$RemainingPartition:int hashCode()",
                        "org.apache.kafka.common.message.CreateTopicsRequestData$CreateableTopicConfig:int hashCode()",
                        "org.apache.kafka.common.message.LeaveGroupRequestData:int hashCode()",
                        "org.apache.kafka.common.security.token.delegation.TokenInformation:int hashCode()",
                        "org.apache.kafka.common.message.InitProducerIdRequestData:int hashCode()",
                        "org.apache.kafka.common.record.AbstractLegacyRecordBatch$ByteBufferLegacyRecordBatch:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.acl.AccessControlEntryFilter:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.message.SyncGroupRequestData$SyncGroupRequestAssignment:int hashCode()",
                        "org.apache.kafka.common.TopicPartition:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.record.DefaultRecord:int hashCode()",
                        "org.apache.kafka.common.message.ElectPreferredLeadersResponseData$ReplicaElectionResult:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.record.FileRecords$LogOffsetPosition:boolean equals(java.lang.Object)",
                        "org.apache.kafka.clients.admin.AdminClient:org.apache.kafka.clients.admin.ListTopicsResult listTopics()",
                        "org.apache.kafka.common.message.InitProducerIdRequestData:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.config.ConfigResource:int hashCode()",
                        "org.apache.kafka.common.config.ConfigResource:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.utils.Bytes:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.message.DeleteTopicsRequestData:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.record.FileRecords$TimestampAndOffset:int hashCode()",
                        "org.apache.kafka.common.TopicPartitionInfo:int hashCode()",
                        "org.apache.kafka.common.message.JoinGroupResponseData:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.config.types.Password:int hashCode()",
                        "org.apache.kafka.common.utils.Bytes:int hashCode()",
                        "org.apache.kafka.common.TopicPartitionReplica:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.message.MetadataRequestData$MetadataRequestTopic:int hashCode()",
                        "org.apache.kafka.common.message.HeartbeatRequestData:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.message.DeleteTopicsResponseData:int hashCode()",
                        "org.apache.kafka.clients.admin.MemberAssignment:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.message.CreateTopicsResponseData:int hashCode()",
                        "org.apache.kafka.clients.consumer.OffsetAndTimestamp:int hashCode()",
                        "org.apache.kafka.clients.producer.ProducerRecord:int hashCode()",
                        "org.apache.kafka.common.message.DeleteTopicsRequestData:int hashCode()",
                        "org.apache.kafka.common.record.LegacyRecord:int hashCode()",
                        "org.apache.kafka.common.message.IncrementalAlterConfigsRequestData$AlterConfigsResource:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.message.MetadataResponseData$MetadataResponsePartition:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.resource.Resource:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.acl.AclBindingFilter:int hashCode()",
                        "org.apache.kafka.common.header.internals.RecordHeader:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.acl.AclBinding:boolean equals(java.lang.Object)",
                        "org.apache.kafka.clients.admin.ConsumerGroupDescription:int hashCode()",
                        "org.apache.kafka.common.record.LegacyRecord:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.message.MetadataRequestData$MetadataRequestTopic:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.message.DescribeGroupsResponseData$DescribedGroupMember:int hashCode()",
                        "org.apache.kafka.common.requests.WriteTxnMarkersRequest:int hashCode()",
                        "org.apache.kafka.common.message.ElectPreferredLeadersResponseData:int hashCode()",
                        "org.apache.kafka.common.Cluster:int hashCode()",
                        "org.apache.kafka.common.message.SyncGroupRequestData$SyncGroupRequestAssignment:boolean equals(java.lang.Object)",
                        "org.apache.kafka.clients.consumer.OffsetAndTimestamp:boolean equals(java.lang.Object)",
                        "org.apache.kafka.clients.admin.Config:int hashCode()",
                        "org.apache.kafka.common.message.CreateTopicsRequestData$CreatableReplicaAssignment:int hashCode()",
                        "org.apache.kafka.common.message.SyncGroupResponseData:int hashCode()",
                        "org.apache.kafka.common.record.MemoryRecords:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.header.internals.RecordHeaders:int hashCode()",
                        "org.apache.kafka.common.message.DeleteTopicsResponseData$DeletableTopicResult:int hashCode()",
                        "org.apache.kafka.common.message.FindCoordinatorResponseData:int hashCode()",
                        "org.apache.kafka.common.message.CreateTopicsRequestData$CreatableTopic:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.requests.RequestHeader:int hashCode()",
                        "org.apache.kafka.common.message.OffsetCommitResponseData$OffsetCommitResponseTopic:int hashCode()",
                        "org.apache.kafka.common.serialization.Serdes:org.apache.kafka.common.serialization.Serde String()",
                        "org.apache.kafka.common.message.IncrementalAlterConfigsRequestData:int hashCode()",
                        "org.apache.kafka.clients.admin.MemberDescription:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.message.JoinGroupRequestData$JoinGroupRequestProtocol:int hashCode()",
                        "org.apache.kafka.common.message.DescribeGroupsResponseData$DescribedGroup:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.message.CreateTopicsRequestData$CreateableTopicConfig:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.security.token.delegation.DelegationToken:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.message.JoinGroupResponseData$JoinGroupResponseMember:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.MetricName:int hashCode()",
                        "org.apache.kafka.common.requests.FetchMetadata:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.message.DescribeGroupsResponseData$DescribedGroupMember:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.message.IncrementalAlterConfigsResponseData$AlterConfigsResourceResult:int hashCode()",
                        "org.apache.kafka.common.internals.KafkaFutureImpl:java.lang.Object get()",
                        "org.apache.kafka.common.message.CreateTopicsResponseData$CreatableTopicResult:int hashCode()",
                        "org.apache.kafka.clients.MetadataCache$PartitionInfoAndEpoch:int hashCode()",
                        "org.apache.kafka.common.security.auth.SaslExtensions:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.message.CreateTopicsRequestData:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.Cluster:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.message.ElectPreferredLeadersRequestData$TopicPartitions:int hashCode()",
                        "org.apache.kafka.clients.producer.ProducerRecord:boolean equals(java.lang.Object)",
                        "org.apache.kafka.clients.admin.ConfigEntry$ConfigSynonym:int hashCode()",
                        "org.apache.kafka.common.MetricNameTemplate:int hashCode()",
                        "org.apache.kafka.common.ClusterResource:boolean equals(java.lang.Object)",
                        "org.apache.kafka.clients.admin.ConfigEntry$ConfigSynonym:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.requests.EpochEndOffset:int hashCode()",
                        "org.apache.kafka.clients.consumer.internals.SubscriptionState$FetchPosition:int hashCode()",
                        "org.apache.kafka.common.resource.Resource:int hashCode()",
                        "org.apache.kafka.common.message.JoinGroupRequestData$JoinGroupRequestProtocol:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.message.OffsetCommitRequestData:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.message.DeleteTopicsResponseData$DeletableTopicResult:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.message.OffsetCommitResponseData$OffsetCommitResponseTopic:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.message.OffsetCommitRequestData$OffsetCommitRequestPartition:int hashCode()",
                        "org.apache.kafka.common.config.types.Password:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.requests.RequestHeader:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.record.EndTransactionMarker:boolean equals(java.lang.Object)",
                        "org.apache.kafka.clients.consumer.OffsetAndMetadata:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.TopicPartitionInfo:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.network.KafkaChannel:int hashCode()",
                        "org.apache.kafka.common.message.MetadataResponseData$MetadataResponseBroker:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.message.JoinGroupRequestData:int hashCode()",
                        "org.apache.kafka.common.security.token.delegation.TokenInformation:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.record.FileLogInputStream$FileChannelRecordBatch:int hashCode()",
                        "org.apache.kafka.common.message.MetadataResponseData$MetadataResponseTopic:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.message.MetadataResponseData$MetadataResponsePartition:int hashCode()",
                        "org.apache.kafka.common.message.ElectPreferredLeadersResponseData$ReplicaElectionResult:int hashCode()",
                        "org.apache.kafka.common.requests.FetchMetadata:int hashCode()",
                        "org.apache.kafka.common.message.MetadataRequestData:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.message.CreateTopicsRequestData$CreatableReplicaAssignment:boolean equals(java.lang.Object)",
                        "org.apache.kafka.clients.admin.TopicDescription:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.message.OffsetCommitResponseData:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.message.MetadataResponseData:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.record.AbstractLegacyRecordBatch$ByteBufferLegacyRecordBatch:int hashCode()",
                        "org.apache.kafka.common.header.internals.RecordHeader:int hashCode()",
                        "org.apache.kafka.common.resource.ResourceFilter:int hashCode()",
                        "org.apache.kafka.common.message.IncrementalAlterConfigsResponseData$AlterConfigsResourceResult:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.requests.FetchResponse$PartitionData:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.message.SyncGroupResponseData:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.security.auth.KafkaPrincipal:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.security.ssl.SslFactory$CertificateEntries:int hashCode()",
                        "org.apache.kafka.common.record.FileRecords$LogOffsetPosition:int hashCode()",
                        "org.apache.kafka.common.requests.WriteTxnMarkersRequest:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.config.ConfigValue:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.requests.FetchResponse$AbortedTransaction:int hashCode()",
                        "org.apache.kafka.common.acl.AclBinding:int hashCode()",
                        "org.apache.kafka.common.record.MemoryRecords:int hashCode()",
                        "org.apache.kafka.common.message.IncrementalAlterConfigsRequestData$AlterConfigsResource:int hashCode()",
                        "org.apache.kafka.common.config.ConfigValue:int hashCode()",
                        "org.apache.kafka.common.record.DefaultRecordBatch:int hashCode()",
                        "org.apache.kafka.common.record.FileLogInputStream$FileChannelRecordBatch:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.ClusterResource:int hashCode()",
                        "org.apache.kafka.common.message.ElectPreferredLeadersResponseData:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.utils.ImplicitLinkedHashCollection:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.message.IncrementalAlterConfigsRequestData$AlterableConfig:int hashCode()",
                        "org.apache.kafka.common.acl.AccessControlEntry:int hashCode()",
                        "org.apache.kafka.common.message.IncrementalAlterConfigsResponseData:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.message.CreateTopicsRequestData:int hashCode()",
                        "org.apache.kafka.clients.admin.ConsumerGroupDescription:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.message.SaslAuthenticateResponseData:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.TopicPartitionReplica:int hashCode()",
                        "org.apache.kafka.common.security.auth.KafkaPrincipal:int hashCode()",
                        "org.apache.kafka.common.config.AbstractConfig:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.message.CreateTopicsRequestData$CreatableTopic:int hashCode()",
                        "org.apache.kafka.common.message.ElectPreferredLeadersRequestData$TopicPartitions:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.requests.FetchResponse$AbortedTransaction:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.record.DefaultRecord:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.message.JoinGroupResponseData:int hashCode()",
                        "org.apache.kafka.common.record.DefaultRecordBatch:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.security.token.delegation.DelegationToken:int hashCode()",
                        "org.apache.kafka.common.header.internals.RecordHeaders:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.TopicPartition:int hashCode()",
                        "org.apache.kafka.common.message.OffsetCommitRequestData$OffsetCommitRequestPartition:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.requests.FetchResponse$PartitionData:int hashCode()",
                        "org.apache.kafka.common.message.DeleteTopicsResponseData:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.network.ListenerName:boolean equals(java.lang.Object)",
                        "org.ietf.jgss.Oid:int hashCode()",
                        "org.apache.kafka.common.message.IncrementalAlterConfigsRequestData$AlterableConfig:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.internals.PartitionStates$PartitionState:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.utils.FixedOrderMap:org.apache.kafka.common.utils.FixedOrderMap clone()",
                        "org.apache.kafka.common.message.IncrementalAlterConfigsRequestData:boolean equals(java.lang.Object)",
                        "org.apache.kafka.clients.admin.MemberDescription:int hashCode()",
                        "org.apache.kafka.common.message.JoinGroupResponseData$JoinGroupResponseMember:int hashCode()",
                        "org.apache.kafka.common.acl.AccessControlEntryData:int hashCode()",
                        "org.apache.kafka.clients.admin.TopicDescription:int hashCode()",
                        "org.apache.kafka.common.message.DescribeGroupsRequestData:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.message.SyncGroupRequestData:boolean equals(java.lang.Object)",
                        "org.ietf.jgss.Oid:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.record.FileRecords$TimestampAndOffset:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.acl.AccessControlEntryFilter:int hashCode()",
                        "org.apache.kafka.clients.admin.ListTopicsResult:org.apache.kafka.common.KafkaFuture names()",
                        "org.apache.kafka.common.security.ssl.SslFactory$CertificateEntries:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.message.MetadataResponseData$MetadataResponseTopic:int hashCode()",
                        "org.apache.kafka.common.message.ElectPreferredLeadersRequestData:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.message.CreateTopicsResponseData$CreatableTopicResult:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.message.CreateTopicsResponseData:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.message.HeartbeatRequestData:int hashCode()",
                        "org.apache.kafka.common.message.OffsetCommitRequestData:int hashCode()",
                        "org.apache.kafka.common.resource.ResourcePattern:boolean equals(java.lang.Object)",
                        "org.apache.kafka.clients.admin.ConfigEntry:int hashCode()",
                        "org.apache.kafka.common.message.FindCoordinatorResponseData:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.MetricName:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.message.ControlledShutdownResponseData:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.message.FindCoordinatorRequestData:int hashCode()",
                        "org.apache.kafka.clients.MetadataCache$PartitionInfoAndEpoch:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.message.SaslHandshakeRequestData:int hashCode()",
                        "org.apache.kafka.common.message.FindCoordinatorRequestData:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.message.DescribeGroupsRequestData:int hashCode()",
                        "org.apache.kafka.common.message.ElectPreferredLeadersResponseData$PartitionResult:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.resource.ResourcePatternFilter:int hashCode()",
                        "org.apache.kafka.common.utils.ImplicitLinkedHashCollection$ImplicitLinkedHashCollectionSetView:boolean contains(java.lang.Object)",
                        "org.apache.kafka.common.network.ListenerName:int hashCode()",
                        "org.apache.kafka.common.requests.WriteTxnMarkersRequest$TxnMarkerEntry:boolean equals(java.lang.Object)",
                        "org.apache.kafka.clients.admin.ConfigEntry:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.requests.EpochEndOffset:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.record.EndTransactionMarker:int hashCode()",
                        "org.apache.kafka.common.security.authenticator.LoginManager$LoginMetadata:int hashCode()",
                        "org.apache.kafka.common.message.LeaveGroupRequestData:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.message.MetadataResponseData:int hashCode()",
                        "org.apache.kafka.common.record.AbstractLegacyRecordBatch$BasicLegacyRecordBatch:int hashCode()",
                        "org.apache.kafka.common.resource.ResourceFilter:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.requests.MetadataResponse$TopicMetadata:int hashCode()",
                        "org.apache.kafka.common.message.SaslHandshakeResponseData:int hashCode()",
                        "org.apache.kafka.common.MetricNameTemplate:boolean equals(java.lang.Object)",
                        "org.apache.kafka.clients.admin.Config:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.Node:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.record.AbstractLegacyRecordBatch$BasicLegacyRecordBatch:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.message.SaslAuthenticateResponseData:int hashCode()",
                        "org.apache.kafka.common.protocol.types.Struct:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.requests.MetadataResponse$TopicMetadata:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.message.MetadataResponseData$MetadataResponseBroker:int hashCode()",
                        "org.apache.kafka.common.security.authenticator.LoginManager$LoginMetadata:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.message.IncrementalAlterConfigsResponseData:int hashCode()",
                        "org.apache.kafka.common.message.ElectPreferredLeadersRequestData:int hashCode()",
                        "org.apache.kafka.common.message.OffsetCommitRequestData$OffsetCommitRequestTopic:int hashCode()",
                        "org.apache.kafka.common.config.AbstractConfig:int hashCode()",
                        "org.apache.kafka.common.message.SaslAuthenticateRequestData:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.message.SaslAuthenticateRequestData:int hashCode()",
                        "org.apache.kafka.common.message.OffsetCommitResponseData:int hashCode()",
                        "org.apache.kafka.common.requests.FetchRequest$PartitionData:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.message.SaslHandshakeRequestData:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.message.DescribeGroupsResponseData$DescribedGroup:int hashCode()",
                        "org.apache.kafka.common.acl.AccessControlEntryData:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.message.ControlledShutdownResponseData$RemainingPartition:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.message.OffsetCommitRequestData$OffsetCommitRequestTopic:boolean equals(java.lang.Object)",
                        "org.apache.kafka.clients.consumer.internals.AbstractCoordinator$Generation:int hashCode()",
                        "org.apache.kafka.common.message.DescribeGroupsResponseData:int hashCode()",
                        "org.apache.kafka.common.acl.AclBindingFilter:boolean equals(java.lang.Object)",
                        "org.apache.kafka.clients.consumer.internals.SubscriptionState$FetchPosition:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.resource.ResourcePattern:int hashCode()",
                        "org.apache.kafka.common.requests.FetchRequest$PartitionData:int hashCode()",
                        "org.apache.kafka.common.resource.ResourcePatternFilter:boolean equals(java.lang.Object)",
                        "org.apache.kafka.clients.admin.RecordsToDelete:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.message.MetadataRequestData:int hashCode()",
                        "org.apache.kafka.common.message.ControlledShutdownResponseData:int hashCode()",
                        "org.apache.kafka.common.acl.AccessControlEntry:boolean equals(java.lang.Object)"
                    ],
                    "CVE": [
                        "CVE-2021-38153",
                        "CVE-2023-25194"
                    ],
                    "used vul-method": [
                        "org.apache.kafka.common.security.token.delegation.DelegationToken:boolean equals(java.lang.Object)",
                        "org.apache.kafka.clients.admin.AdminClient:org.apache.kafka.clients.admin.AdminClient create(java.util.Properties)"
                    ],
                    "vul-called frequency": 2,
                    "related vul root method": {
                        "CVE-2021-38153": [
                            "org.apache.kafka.common.security.token.delegation.DelegationToken:boolean equals(java.lang.Object)"
                        ],
                        "CVE-2023-25194": [
                            "org.apache.kafka.common.security.JaasContext:org.apache.kafka.common.security.JaasContext defaultContext(org.apache.kafka.common.security.JaasContext$Type,java.lang.String,java.lang.String)",
                            "org.apache.kafka.common.security.JaasContext:org.apache.kafka.common.security.JaasContext load(org.apache.kafka.common.security.JaasContext$Type,java.lang.String,java.lang.String,org.apache.kafka.common.config.types.Password)"
                        ]
                    },
                    "CVE-API": {
                        "CVE-2021-38153": [
                            "org.apache.kafka.common.security.token.delegation.DelegationToken:boolean equals(java.lang.Object)"
                        ],
                        "CVE-2023-25194": [
                            "org.apache.kafka.clients.admin.AdminClient:org.apache.kafka.clients.admin.AdminClient create(java.util.Properties)"
                        ]
                    }
                },
                "org.apache.kafka:kafka-clients:1.0.0": {
                    "used-method num": 88,
                    "used method": [
                        "org.apache.kafka.common.protocol.types.Struct:int hashCode()",
                        "org.apache.kafka.common.network.KafkaChannel:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.Node:int hashCode()",
                        "org.apache.kafka.clients.consumer.OffsetAndMetadata:int hashCode()",
                        "org.apache.kafka.clients.admin.AdminClient:org.apache.kafka.clients.admin.AdminClient create(java.util.Properties)",
                        "org.apache.kafka.common.requests.WriteTxnMarkersRequest$TxnMarkerEntry:int hashCode()",
                        "org.apache.kafka.common.record.AbstractLegacyRecordBatch$ByteBufferLegacyRecordBatch:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.acl.AccessControlEntryFilter:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.TopicPartition:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.record.DefaultRecord:int hashCode()",
                        "org.apache.kafka.common.record.FileRecords$LogOffsetPosition:boolean equals(java.lang.Object)",
                        "org.apache.kafka.clients.admin.AdminClient:org.apache.kafka.clients.admin.ListTopicsResult listTopics()",
                        "org.apache.kafka.common.config.ConfigResource:int hashCode()",
                        "org.apache.kafka.common.config.ConfigResource:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.utils.Bytes:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.config.types.Password:int hashCode()",
                        "org.apache.kafka.common.utils.Bytes:int hashCode()",
                        "org.apache.kafka.common.TopicPartitionReplica:boolean equals(java.lang.Object)",
                        "org.apache.kafka.clients.consumer.OffsetAndTimestamp:int hashCode()",
                        "org.apache.kafka.clients.producer.ProducerRecord:int hashCode()",
                        "org.apache.kafka.common.record.LegacyRecord:int hashCode()",
                        "org.apache.kafka.common.resource.Resource:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.acl.AclBindingFilter:int hashCode()",
                        "org.apache.kafka.common.header.internals.RecordHeader:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.acl.AclBinding:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.record.LegacyRecord:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.requests.WriteTxnMarkersRequest:int hashCode()",
                        "org.apache.kafka.common.record.MemoryRecords:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.header.internals.RecordHeaders:int hashCode()",
                        "org.apache.kafka.common.requests.RequestHeader:int hashCode()",
                        "org.apache.kafka.common.serialization.Serdes:org.apache.kafka.common.serialization.Serde String()",
                        "org.apache.kafka.common.MetricName:int hashCode()",
                        "org.apache.kafka.common.internals.KafkaFutureImpl:java.lang.Object get()",
                        "org.apache.kafka.clients.producer.ProducerRecord:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.MetricNameTemplate:int hashCode()",
                        "org.apache.kafka.common.requests.EpochEndOffset:int hashCode()",
                        "org.apache.kafka.common.resource.Resource:int hashCode()",
                        "org.apache.kafka.common.config.types.Password:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.requests.RequestHeader:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.record.EndTransactionMarker:boolean equals(java.lang.Object)",
                        "org.apache.kafka.clients.consumer.OffsetAndMetadata:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.network.KafkaChannel:int hashCode()",
                        "org.apache.kafka.common.record.FileLogInputStream$FileChannelRecordBatch:int hashCode()",
                        "org.apache.kafka.common.record.AbstractLegacyRecordBatch$ByteBufferLegacyRecordBatch:int hashCode()",
                        "org.apache.kafka.common.header.internals.RecordHeader:int hashCode()",
                        "org.apache.kafka.common.resource.ResourceFilter:int hashCode()",
                        "org.apache.kafka.common.requests.FetchResponse$PartitionData:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.security.auth.KafkaPrincipal:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.requests.WriteTxnMarkersRequest:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.config.ConfigValue:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.acl.AclBinding:int hashCode()",
                        "org.apache.kafka.common.record.MemoryRecords:int hashCode()",
                        "org.apache.kafka.common.config.ConfigValue:int hashCode()",
                        "org.apache.kafka.common.record.DefaultRecordBatch:int hashCode()",
                        "org.apache.kafka.common.record.FileLogInputStream$FileChannelRecordBatch:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.acl.AccessControlEntry:int hashCode()",
                        "org.apache.kafka.common.TopicPartitionReplica:int hashCode()",
                        "org.apache.kafka.common.config.AbstractConfig:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.requests.FetchResponse$AbortedTransaction:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.record.DefaultRecord:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.record.DefaultRecordBatch:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.header.internals.RecordHeaders:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.TopicPartition:int hashCode()",
                        "org.apache.kafka.common.requests.FetchResponse$PartitionData:int hashCode()",
                        "org.apache.kafka.common.network.ListenerName:boolean equals(java.lang.Object)",
                        "org.ietf.jgss.Oid:int hashCode()",
                        "org.apache.kafka.common.internals.PartitionStates$PartitionState:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.acl.AccessControlEntryData:int hashCode()",
                        "org.ietf.jgss.Oid:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.record.FileRecords$TimestampAndOffset:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.acl.AccessControlEntryFilter:int hashCode()",
                        "org.apache.kafka.clients.admin.ListTopicsResult:org.apache.kafka.common.KafkaFuture names()",
                        "org.apache.kafka.common.MetricName:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.network.ListenerName:int hashCode()",
                        "org.apache.kafka.common.requests.WriteTxnMarkersRequest$TxnMarkerEntry:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.requests.EpochEndOffset:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.record.EndTransactionMarker:int hashCode()",
                        "org.apache.kafka.common.record.AbstractLegacyRecordBatch$BasicLegacyRecordBatch:int hashCode()",
                        "org.apache.kafka.common.resource.ResourceFilter:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.MetricNameTemplate:boolean equals(java.lang.Object)",
                        "org.apache.kafka.clients.admin.Config:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.Node:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.record.AbstractLegacyRecordBatch$BasicLegacyRecordBatch:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.protocol.types.Struct:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.config.AbstractConfig:int hashCode()",
                        "org.apache.kafka.common.acl.AccessControlEntryData:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.acl.AclBindingFilter:boolean equals(java.lang.Object)",
                        "org.apache.kafka.common.acl.AccessControlEntry:boolean equals(java.lang.Object)"
                    ]
                },
                "mysql:mysql-connector-java:8.0.16": {
                    "used-method num": 0,
                    "used method": []
                }
            }
        },
        "com.github.framiere:cdc-diff": {
            "vulnerable dependencies": {
                "org.apache.kafka:kafka-clients:2.3.0": {
                    "used-method num": 5,
                    "used method": [
                        "org.apache.kafka.clients.admin.AdminClient:org.apache.kafka.clients.admin.ListTopicsResult listTopics()",
                        "org.apache.kafka.clients.admin.ListTopicsResult:org.apache.kafka.common.KafkaFuture names()",
                        "org.apache.kafka.common.internals.KafkaFutureImpl:java.lang.Object get()",
                        "org.apache.kafka.common.serialization.Serdes:org.apache.kafka.common.serialization.Serde String()",
                        "org.apache.kafka.clients.admin.AdminClient:org.apache.kafka.clients.admin.AdminClient create(java.util.Properties)"
                    ],
                    "CVE": [
                        "CVE-2023-25194"
                    ],
                    "used vul-method": [
                        "org.apache.kafka.clients.admin.AdminClient:org.apache.kafka.clients.admin.AdminClient create(java.util.Properties)"
                    ],
                    "vul-called frequency": 1,
                    "related vul root method": {
                        "CVE-2023-25194": [
                            "org.apache.kafka.common.security.JaasContext:org.apache.kafka.common.security.JaasContext defaultContext(org.apache.kafka.common.security.JaasContext$Type,java.lang.String,java.lang.String)",
                            "org.apache.kafka.common.security.JaasContext:org.apache.kafka.common.security.JaasContext load(org.apache.kafka.common.security.JaasContext$Type,java.lang.String,java.lang.String,org.apache.kafka.common.config.types.Password)"
                        ]
                    },
                    "CVE-API": {
                        "CVE-2023-25194": [
                            "org.apache.kafka.clients.admin.AdminClient:org.apache.kafka.clients.admin.AdminClient create(java.util.Properties)"
                        ]
                    }
                },
                "org.apache.kafka:kafka-clients:1.0.0": {
                    "used-method num": 5,
                    "used method": [
                        "org.apache.kafka.clients.admin.AdminClient:org.apache.kafka.clients.admin.ListTopicsResult listTopics()",
                        "org.apache.kafka.clients.admin.ListTopicsResult:org.apache.kafka.common.KafkaFuture names()",
                        "org.apache.kafka.common.internals.KafkaFutureImpl:java.lang.Object get()",
                        "org.apache.kafka.common.serialization.Serdes:org.apache.kafka.common.serialization.Serde String()",
                        "org.apache.kafka.clients.admin.AdminClient:org.apache.kafka.clients.admin.AdminClient create(java.util.Properties)"
                    ]
                },
                "mysql:mysql-connector-java:8.0.16": {
                    "used-method num": 0,
                    "used method": []
                }
            }
        }
    }
}
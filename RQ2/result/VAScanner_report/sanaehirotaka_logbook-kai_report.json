{
    "project name": "sanaehirotaka_logbook-kai",
    "vulnerable dependencies": {
        "org.eclipse.jetty:jetty-server:9.0.7.v20131107": {
            "used-method num": 63,
            "used method": [
                "org.eclipse.jetty.server.HttpConnection:void run()",
                "org.eclipse.jetty.server.Response:void setStatus(int)",
                "org.eclipse.jetty.server.HttpConnection:java.lang.String toString()",
                "org.eclipse.jetty.server.handler.ScopedHandler:void <clinit>()",
                "org.eclipse.jetty.server.HttpConfiguration:java.lang.String toString()",
                "org.eclipse.jetty.server.Request:javax.servlet.ServletInputStream getInputStream()",
                "org.eclipse.jetty.server.Server:void setConnectors(org.eclipse.jetty.server.Connector[])",
                "org.eclipse.jetty.server.session.HashSessionManager$1:void run()",
                "org.eclipse.jetty.server.Server:java.lang.String toString()",
                "org.eclipse.jetty.server.Server$1:void run()",
                "org.eclipse.jetty.server.HttpChannel:void run()",
                "org.eclipse.jetty.server.Response:javax.servlet.ServletOutputStream getOutputStream()",
                "org.eclipse.jetty.server.AbstractNetworkConnector:java.lang.String toString()",
                "org.eclipse.jetty.server.session.HashSessionManager$2:void run()",
                "org.eclipse.jetty.server.session.AbstractSession:java.lang.String toString()",
                "org.eclipse.jetty.server.ServletRequestHttpWrapper:java.lang.String getQueryString()",
                "org.eclipse.jetty.server.ServerConnector:void <init>(org.eclipse.jetty.server.Server)",
                "org.eclipse.jetty.server.Dispatcher$ForwardAttributes:java.lang.String toString()",
                "org.eclipse.jetty.server.ServletResponseHttpWrapper:void setStatus(int)",
                "org.eclipse.jetty.server.handler.ContextHandler$Context:void setAttribute(java.lang.String,java.lang.Object)",
                "org.eclipse.jetty.server.AbstractConnectionFactory:java.lang.String toString()",
                "org.eclipse.jetty.server.handler.ContextHandler:void <clinit>()",
                "org.eclipse.jetty.server.AsyncContextState:void setTimeout(long)",
                "org.eclipse.jetty.server.Request:java.lang.String getProtocol()",
                "org.eclipse.jetty.server.Request:java.lang.String getContentType()",
                "org.eclipse.jetty.server.HttpChannelState:java.lang.String toString()",
                "org.eclipse.jetty.server.handler.ContextHandler$Context:java.lang.String toString()",
                "org.eclipse.jetty.server.Request:void removeAttribute(java.lang.String)",
                "org.eclipse.jetty.server.Response:java.util.Collection getHeaders(java.lang.String)",
                "org.eclipse.jetty.server.handler.ContextHandler$Context:java.lang.String getContextPath()",
                "org.eclipse.jetty.server.Request:java.lang.String getQueryString()",
                "org.eclipse.jetty.server.Dispatcher$IncludeAttributes:java.lang.String toString()",
                "org.eclipse.jetty.server.HttpOutput:void write(byte[],int,int)",
                "org.eclipse.jetty.server.HttpConnection$Input:java.lang.String toString()",
                "org.eclipse.jetty.server.Response:boolean isCommitted()",
                "org.eclipse.jetty.server.Request:int getContentLength()",
                "org.eclipse.jetty.server.Request:java.lang.Object getAttribute(java.lang.String)",
                "org.eclipse.jetty.server.Request:java.lang.String toString()",
                "org.eclipse.jetty.server.Response:void addHeader(java.lang.String,java.lang.String)",
                "org.eclipse.jetty.server.ShutdownMonitor$ShutdownMonitorThread:void start()",
                "org.eclipse.jetty.server.Response:int getStatus()",
                "org.eclipse.jetty.server.ServletResponseHttpWrapper:void sendError(int)",
                "org.eclipse.jetty.server.AbstractNetworkConnector:void setHost(java.lang.String)",
                "org.eclipse.jetty.server.Server:void join()",
                "org.eclipse.jetty.server.handler.ContextHandler:java.lang.String toString()",
                "org.eclipse.jetty.server.HttpChannelState$AsyncTimeout:void run()",
                "org.eclipse.jetty.server.Request:void setAttribute(java.lang.String,java.lang.Object)",
                "org.eclipse.jetty.server.Request:java.lang.StringBuffer getRequestURL()",
                "org.eclipse.jetty.server.Request:java.lang.String getRequestURI()",
                "org.eclipse.jetty.server.Request:java.lang.String getMethod()",
                "org.eclipse.jetty.server.AbstractNetworkConnector:void setPort(int)",
                "org.eclipse.jetty.server.HttpChannel:java.lang.String toString()",
                "org.eclipse.jetty.server.AsyncContextState:void complete()",
                "org.eclipse.jetty.server.Response:void sendError(int)",
                "org.eclipse.jetty.server.Response:java.lang.String getContentType()",
                "org.eclipse.jetty.server.Request:java.util.Enumeration getHeaders(java.lang.String)",
                "org.eclipse.jetty.server.ShutdownMonitor$ShutdownMonitorThread:void run()",
                "org.eclipse.jetty.server.handler.HandlerWrapper:void setHandler(org.eclipse.jetty.server.Handler)",
                "org.eclipse.jetty.server.Server:void <init>()",
                "org.eclipse.jetty.server.AsyncContextState$2:void run()",
                "org.eclipse.jetty.server.Request:javax.servlet.AsyncContext startAsync()",
                "org.eclipse.jetty.server.ShutdownMonitor:java.lang.String toString()",
                "org.eclipse.jetty.server.Response:java.lang.String toString()"
            ]
        },
        "junit:junit:4.12": {
            "used-method num": 0,
            "used method": []
        }
    }
}
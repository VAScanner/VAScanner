{
    "project name": "salesforce_storm-dynamic-spout",
    "vulnerable dependencies": {
        "org.apache.kafka:kafka-clients:1.1.0": {
            "used-method num": 168,
            "used method": [
                "org.apache.kafka.common.requests.CreateAclsRequest$AclCreation:java.lang.String toString()",
                "org.apache.kafka.common.acl.AccessControlEntryData:java.lang.String toString()",
                "org.apache.kafka.common.requests.ListOffsetResponse$PartitionData:java.lang.String toString()",
                "org.apache.kafka.common.requests.FetchRequest$Builder:java.lang.String toString()",
                "org.apache.kafka.clients.consumer.KafkaConsumer:void <clinit>()",
                "org.apache.kafka.common.requests.UpdateMetadataRequest$Broker:java.lang.String toString()",
                "org.apache.kafka.common.record.AbstractLegacyRecordBatch:java.lang.String toString()",
                "org.apache.kafka.common.requests.SaslHandshakeRequest$Builder:java.lang.String toString()",
                "org.apache.kafka.common.utils.LogContext$LocationAwareKafkaLogger:void error(java.lang.String,java.lang.Object)",
                "org.apache.kafka.common.requests.CreateTopicsRequest$TopicDetails:java.lang.String toString()",
                "org.apache.kafka.common.requests.RequestHeader:java.lang.String toString()",
                "org.apache.kafka.clients.consumer.ConsumerRecord:long offset()",
                "org.apache.kafka.common.record.MemoryRecords:java.lang.String toString()",
                "org.apache.kafka.clients.consumer.OffsetAndMetadata:java.lang.String toString()",
                "org.apache.kafka.common.utils.LogContext$LocationIgnorantKafkaLogger:void warn(java.lang.String,java.lang.Object[])",
                "org.apache.kafka.common.utils.LogContext$LocationIgnorantKafkaLogger:void error(java.lang.String,java.lang.Object)",
                "org.apache.kafka.common.requests.AbstractRequest:java.lang.String toString()",
                "org.apache.kafka.clients.consumer.KafkaConsumer:java.util.Map endOffsets(java.util.Collection)",
                "org.apache.kafka.common.utils.LogContext$LocationAwareKafkaLogger:void error(java.lang.String,java.lang.Object[])",
                "org.apache.kafka.common.utils.LogContext$LocationIgnorantKafkaLogger:void info(java.lang.String,java.lang.Object,java.lang.Object)",
                "org.apache.kafka.common.header.internals.RecordHeaders:java.lang.String toString()",
                "org.apache.kafka.common.utils.LogContext$LocationAwareKafkaLogger:void debug(java.lang.String,java.lang.Object,java.lang.Object)",
                "org.apache.kafka.common.requests.InitProducerIdResponse:java.lang.String toString()",
                "org.apache.kafka.common.config.types.Password:java.lang.String toString()",
                "org.apache.kafka.common.metrics.Quota:java.lang.String toString()",
                "org.apache.kafka.common.internals.PartitionStates$PartitionState:java.lang.String toString()",
                "org.apache.kafka.common.requests.AddOffsetsToTxnResponse:java.lang.String toString()",
                "org.apache.kafka.common.requests.SaslAuthenticateRequest$Builder:java.lang.String toString()",
                "org.apache.kafka.common.requests.OffsetCommitRequest$Builder:java.lang.String toString()",
                "org.apache.kafka.common.record.FileRecords$TimestampAndOffset:java.lang.String toString()",
                "org.apache.kafka.common.security.token.delegation.TokenInformation:java.lang.String toString()",
                "org.apache.kafka.common.utils.LogContext$LocationIgnorantKafkaLogger:void debug(java.lang.String,java.lang.Object,java.lang.Object)",
                "org.apache.kafka.common.requests.TxnOffsetCommitResponse:java.lang.String toString()",
                "org.apache.kafka.common.MetricName:java.lang.String toString()",
                "org.apache.kafka.common.requests.ListOffsetRequest$PartitionData:java.lang.String toString()",
                "org.ietf.jgss.Oid:java.lang.String toString()",
                "org.apache.kafka.common.utils.LogContext$LocationIgnorantKafkaLogger:void debug(java.lang.String)",
                "org.apache.kafka.common.utils.LogContext$LocationIgnorantKafkaLogger:void warn(java.lang.String,java.lang.Object,java.lang.Object)",
                "org.apache.kafka.common.requests.UpdateMetadataRequest$PartitionState:java.lang.String toString()",
                "org.apache.kafka.common.requests.FetchRequest$PartitionData:java.lang.String toString()",
                "org.apache.kafka.common.utils.LogContext$LocationIgnorantKafkaLogger:void info(java.lang.String)",
                "org.apache.kafka.common.record.DefaultRecordBatch$RecordIterator:boolean hasNext()",
                "org.apache.kafka.clients.consumer.KafkaConsumer:org.apache.kafka.clients.consumer.ConsumerRecords poll(long)",
                "org.apache.kafka.common.config.ConfigDef$ValidString:java.lang.String toString()",
                "org.apache.kafka.common.requests.FetchMetadata:java.lang.String toString()",
                "org.apache.kafka.common.security.kerberos.KerberosRule:java.lang.String toString()",
                "org.apache.kafka.common.requests.FetchResponse$AbortedTransaction:java.lang.String toString()",
                "org.apache.kafka.common.utils.LogContext$LocationIgnorantKafkaLogger:void error(java.lang.String,java.lang.Object[])",
                "org.apache.kafka.common.utils.LogContext$LocationAwareKafkaLogger:void info(java.lang.String)",
                "org.apache.kafka.clients.ClientResponse:java.lang.String toString()",
                "org.apache.kafka.common.requests.TxnOffsetCommitRequest$CommittedOffset:java.lang.String toString()",
                "org.apache.kafka.common.requests.DescribeLogDirsResponse$LogDirInfo:java.lang.String toString()",
                "org.apache.kafka.common.requests.DeleteRecordsResponse$PartitionResponse:java.lang.String toString()",
                "org.apache.kafka.common.header.internals.RecordHeader:java.lang.String toString()",
                "org.apache.kafka.common.utils.LogContext$LocationIgnorantKafkaLogger:void warn(java.lang.String,java.lang.Object)",
                "org.apache.kafka.common.utils.Java$Version:java.lang.String toString()",
                "org.apache.kafka.common.PartitionInfo:java.lang.String toString()",
                "org.apache.kafka.common.acl.AclBinding:java.lang.String toString()",
                "org.apache.kafka.common.Cluster:java.lang.String toString()",
                "org.apache.kafka.common.protocol.types.Struct:java.lang.String toString()",
                "org.apache.kafka.clients.NetworkClient$InFlightRequest:java.lang.String toString()",
                "org.apache.kafka.common.requests.UpdateMetadataRequest$EndPoint:java.lang.String toString()",
                "org.apache.kafka.common.requests.DeleteAclsResponse:java.lang.String toString()",
                "org.apache.kafka.common.requests.ListOffsetRequest$Builder:java.lang.String toString()",
                "org.apache.kafka.common.record.RecordsProcessingStats:java.lang.String toString()",
                "org.apache.kafka.common.utils.LogContext$LocationAwareKafkaLogger:void debug(java.lang.String)",
                "org.ietf.jgss.GSSException:java.lang.String getMessage()",
                "org.apache.kafka.common.requests.ApiVersionsResponse$ApiVersion:java.lang.String toString()",
                "org.apache.kafka.common.network.ListenerName:java.lang.String toString()",
                "org.apache.kafka.common.utils.LogContext$LocationAwareKafkaLogger:void warn(java.lang.String)",
                "org.apache.kafka.common.requests.WriteTxnMarkersRequest$TxnMarkerEntry:java.lang.String toString()",
                "org.apache.kafka.common.header.internals.RecordHeaders$2:boolean hasNext()",
                "org.apache.kafka.common.requests.AddPartitionsToTxnResponse:java.lang.String toString()",
                "org.apache.kafka.common.config.AbstractConfig$RecordingMap:java.lang.Object get(java.lang.Object)",
                "org.apache.kafka.common.record.FileRecords$LogOffsetPosition:java.lang.String toString()",
                "org.apache.kafka.common.utils.LogContext$LocationAwareKafkaLogger:void warn(java.lang.String,java.lang.Object)",
                "org.apache.kafka.common.requests.OffsetFetchRequest$Builder:java.lang.String toString()",
                "org.apache.kafka.common.record.LegacyRecord:java.lang.String toString()",
                "org.apache.kafka.common.TopicPartition:int partition()",
                "org.apache.kafka.common.utils.LogContext$LocationAwareKafkaLogger:void warn(java.lang.String,java.lang.Object[])",
                "org.apache.kafka.clients.consumer.KafkaConsumer:java.util.List partitionsFor(java.lang.String)",
                "org.apache.kafka.common.utils.LogContext$LocationAwareKafkaLogger:void error(java.lang.String,java.lang.Throwable)",
                "org.apache.kafka.common.security.auth.KafkaPrincipal:java.lang.String toString()",
                "org.apache.kafka.clients.ClientRequest:java.lang.String toString()",
                "org.apache.kafka.clients.consumer.ConsumerRecords:java.util.Iterator iterator()",
                "org.apache.kafka.common.protocol.types.ArrayOf:java.lang.String toString()",
                "org.apache.kafka.common.requests.ApiError:java.lang.String toString()",
                "org.apache.kafka.common.requests.MetadataRequest$Builder:java.lang.String toString()",
                "org.apache.kafka.common.ClusterResource:java.lang.String toString()",
                "org.apache.kafka.common.utils.AbstractIterator:java.lang.Object next()",
                "org.apache.kafka.common.security.kerberos.KerberosShortNamer:java.lang.String toString()",
                "org.apache.kafka.clients.consumer.internals.AbstractCoordinator$HeartbeatThread:void run()",
                "org.apache.kafka.common.record.FileLogInputStream$FileChannelRecordBatch:java.lang.String toString()",
                "org.apache.kafka.common.requests.ProduceResponse$PartitionResponse:java.lang.String toString()",
                "org.apache.kafka.common.requests.Resource:java.lang.String toString()",
                "org.apache.kafka.common.requests.FindCoordinatorResponse:java.lang.String toString()",
                "org.apache.kafka.common.acl.AccessControlEntryFilter:java.lang.String toString()",
                "org.apache.kafka.common.utils.LogContext$LocationIgnorantKafkaLogger:void error(java.lang.String,java.lang.Throwable)",
                "org.apache.kafka.clients.ClusterConnectionStates$NodeConnectionState:java.lang.String toString()",
                "org.apache.kafka.common.record.DefaultRecord:java.lang.String toString()",
                "org.apache.kafka.common.utils.LogContext$LocationAwareKafkaLogger:void debug(java.lang.String,java.lang.Object)",
                "org.apache.kafka.clients.consumer.KafkaConsumer:void assign(java.util.Collection)",
                "org.apache.kafka.common.requests.OffsetCommitRequest$PartitionData:java.lang.String toString()",
                "org.apache.kafka.common.utils.LogContext$LocationIgnorantKafkaLogger:void error(java.lang.String,java.lang.Object,java.lang.Object)",
                "org.apache.kafka.clients.consumer.KafkaConsumer:void seek(org.apache.kafka.common.TopicPartition,long)",
                "org.apache.kafka.common.utils.LogContext$LocationIgnorantKafkaLogger:void error(java.lang.String)",
                "org.apache.kafka.common.security.token.delegation.DelegationToken:java.lang.String toString()",
                "org.apache.kafka.common.TopicPartition:java.lang.String toString()",
                "org.apache.kafka.common.TopicPartition:void <init>(java.lang.String,int)",
                "org.apache.kafka.common.resource.ResourceFilter:java.lang.String toString()",
                "org.apache.kafka.common.requests.EpochEndOffset:java.lang.String toString()",
                "org.apache.kafka.common.security.authenticator.LoginManager:java.lang.String toString()",
                "org.apache.kafka.clients.consumer.ConsumerRecord:int partition()",
                "org.apache.kafka.clients.consumer.ConsumerRecord:java.lang.String topic()",
                "org.apache.kafka.common.protocol.types.BoundField:java.lang.String toString()",
                "org.apache.kafka.common.TopicPartition:java.lang.String topic()",
                "org.apache.kafka.common.Node:java.lang.String toString()",
                "org.apache.kafka.common.header.internals.RecordHeaders$2:org.apache.kafka.common.header.Header next()",
                "org.apache.kafka.clients.consumer.OffsetAndTimestamp:java.lang.String toString()",
                "org.apache.kafka.common.requests.FetchResponse$PartitionData:java.lang.String toString()",
                "org.apache.kafka.common.utils.LogContext$LocationAwareKafkaLogger:void warn(java.lang.String,java.lang.Object,java.lang.Object)",
                "org.apache.kafka.clients.consumer.ConsumerRecord:java.lang.String toString()",
                "org.apache.kafka.clients.consumer.KafkaConsumer:java.util.Set assignment()",
                "org.apache.kafka.clients.consumer.KafkaConsumer:void <init>(java.util.Properties)",
                "org.apache.kafka.common.config.ConfigValue:java.lang.String toString()",
                "org.apache.kafka.clients.consumer.KafkaConsumer:void seekToBeginning(java.util.Collection)",
                "org.apache.kafka.clients.consumer.KafkaConsumer:void close()",
                "org.apache.kafka.common.record.DefaultRecordBatch:java.lang.String toString()",
                "org.apache.kafka.common.requests.CreateAclsResponse$AclCreationResponse:java.lang.String toString()",
                "org.apache.kafka.common.requests.LeaderAndIsrRequest$PartitionState:java.lang.String toString()",
                "org.apache.kafka.common.requests.DeleteAclsResponse$AclFilterResponse:java.lang.String toString()",
                "org.apache.kafka.common.requests.JoinGroupResponse:java.lang.String toString()",
                "org.ietf.jgss.GSSException:java.lang.String toString()",
                "org.apache.kafka.common.utils.LogContext$LocationAwareKafkaLogger:void info(java.lang.String,java.lang.Object,java.lang.Object)",
                "org.apache.kafka.common.utils.LogContext$LocationIgnorantKafkaLogger:void debug(java.lang.String,java.lang.Object[])",
                "org.apache.kafka.clients.consumer.internals.PartitionAssignor$Subscription:java.lang.String toString()",
                "org.apache.kafka.common.requests.MetadataResponse$PartitionMetadata:java.lang.String toString()",
                "org.apache.kafka.common.security.kerberos.KerberosName:java.lang.String toString()",
                "org.apache.kafka.clients.consumer.internals.PartitionAssignor$Assignment:java.lang.String toString()",
                "org.apache.kafka.clients.FetchSessionHandler$FetchRequestData:java.lang.String toString()",
                "org.apache.kafka.common.config.ConfigDef$ValidList:java.lang.String toString()",
                "org.apache.kafka.common.utils.LogContext$LocationAwareKafkaLogger:void debug(java.lang.String,java.lang.Object[])",
                "org.apache.kafka.common.requests.ProduceRequest$Builder:java.lang.String toString()",
                "org.apache.kafka.common.resource.Resource:java.lang.String toString()",
                "org.apache.kafka.common.header.internals.RecordHeaders$2:void remove()",
                "org.apache.kafka.common.utils.LogContext$LocationAwareKafkaLogger:void error(java.lang.String,java.lang.Object,java.lang.Object)",
                "org.apache.kafka.common.utils.LogContext$LocationIgnorantKafkaLogger:void info(java.lang.String,java.lang.Object[])",
                "org.apache.kafka.common.record.DefaultRecordBatch$RecordIterator:org.apache.kafka.common.record.Record next()",
                "org.apache.kafka.common.utils.LogContext$LocationIgnorantKafkaLogger:void warn(java.lang.String)",
                "org.apache.kafka.common.requests.ListOffsetResponse:java.lang.String toString()",
                "org.apache.kafka.common.requests.DeleteAclsResponse$AclDeletionResult:java.lang.String toString()",
                "org.apache.kafka.common.requests.DescribeLogDirsResponse$ReplicaInfo:java.lang.String toString()",
                "org.apache.kafka.common.MetricNameTemplate:java.lang.String toString()",
                "org.apache.kafka.common.acl.AccessControlEntry:java.lang.String toString()",
                "org.apache.kafka.common.utils.LogContext$LocationAwareKafkaLogger:void error(java.lang.String)",
                "org.apache.kafka.common.acl.AclBindingFilter:java.lang.String toString()",
                "org.apache.kafka.common.utils.LogContext$LocationAwareKafkaLogger:void info(java.lang.String,java.lang.Object)",
                "org.apache.kafka.common.requests.EndTxnResponse:java.lang.String toString()",
                "org.apache.kafka.common.security.ssl.SslFactory$CertificateEntries:java.lang.String toString()",
                "org.apache.kafka.common.utils.LogContext$LocationIgnorantKafkaLogger:void info(java.lang.String,java.lang.Object)",
                "org.apache.kafka.clients.NodeApiVersions:java.lang.String toString()",
                "org.apache.kafka.common.config.ConfigDef$Range:java.lang.String toString()",
                "org.apache.kafka.common.protocol.types.Schema:java.lang.String toString()",
                "org.apache.kafka.common.utils.LogContext$LocationIgnorantKafkaLogger:void debug(java.lang.String,java.lang.Object)",
                "org.apache.kafka.common.utils.LogContext$LocationAwareKafkaLogger:void info(java.lang.String,java.lang.Object[])",
                "org.apache.kafka.common.utils.AbstractIterator:boolean hasNext()",
                "org.apache.kafka.clients.admin.NewPartitions:java.lang.String toString()",
                "org.apache.kafka.clients.consumer.KafkaConsumer:long position(org.apache.kafka.common.TopicPartition)"
            ],
            "CVE": [
                "CVE-2018-17196"
            ],
            "used vul-method": [
                "org.apache.kafka.clients.consumer.KafkaConsumer:java.util.Map endOffsets(java.util.Collection)",
                "org.apache.kafka.clients.consumer.KafkaConsumer:org.apache.kafka.clients.consumer.ConsumerRecords poll(long)",
                "org.apache.kafka.clients.consumer.KafkaConsumer:java.util.List partitionsFor(java.lang.String)",
                "org.apache.kafka.clients.consumer.internals.AbstractCoordinator$HeartbeatThread:void run()",
                "org.apache.kafka.clients.consumer.KafkaConsumer:void assign(java.util.Collection)",
                "org.apache.kafka.clients.consumer.KafkaConsumer:void <init>(java.util.Properties)",
                "org.apache.kafka.clients.consumer.KafkaConsumer:void close()",
                "org.apache.kafka.clients.consumer.KafkaConsumer:long position(org.apache.kafka.common.TopicPartition)"
            ],
            "vul-called frequency": 11,
            "related vul root method": {
                "CVE-2018-17196": [
                    "org.apache.kafka.common.requests.ProduceRequest:void validateRecords(short,org.apache.kafka.common.record.MemoryRecords)",
                    "org.apache.kafka.common.requests.ProduceRequest:void <init>(org.apache.kafka.common.protocol.types.Struct,short)",
                    "org.apache.kafka.common.requests.ProduceRequest:void <init>(short,short,int,java.util.Map,java.lang.String)"
                ]
            },
            "CVE-API": {
                "CVE-2018-17196": [
                    "org.apache.kafka.clients.consumer.KafkaConsumer:java.util.Map endOffsets(java.util.Collection)",
                    "org.apache.kafka.clients.consumer.KafkaConsumer:org.apache.kafka.clients.consumer.ConsumerRecords poll(long)",
                    "org.apache.kafka.clients.consumer.KafkaConsumer:java.util.List partitionsFor(java.lang.String)",
                    "org.apache.kafka.clients.consumer.internals.AbstractCoordinator$HeartbeatThread:void run()",
                    "org.apache.kafka.clients.consumer.KafkaConsumer:void assign(java.util.Collection)",
                    "org.apache.kafka.clients.consumer.KafkaConsumer:void <init>(java.util.Properties)",
                    "org.apache.kafka.clients.consumer.KafkaConsumer:void close()",
                    "org.apache.kafka.clients.consumer.KafkaConsumer:long position(org.apache.kafka.common.TopicPartition)"
                ]
            }
        }
    }
}
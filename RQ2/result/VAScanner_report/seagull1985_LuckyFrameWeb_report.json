{
    "project name": "seagull1985_LuckyFrameWeb",
    "vulnerable dependencies": {
        "mysql:mysql-connector-java:8.0.13": {
            "used-method num": 0,
            "used method": []
        },
        "commons-fileupload:commons-fileupload:1.3.3": {
            "used-method num": 1,
            "used method": [
                "org.apache.commons.fileupload.FileUploadException:void <init>(java.lang.String)"
            ]
        },
        "org.apache.shiro:shiro-core:1.5.0": {
            "used-method num": 82,
            "used method": [
                "org.apache.shiro.authc.IncorrectCredentialsException:void <init>(java.lang.String,java.lang.Throwable)",
                "org.apache.shiro.codec.Base64:byte[] decode(java.lang.String)",
                "org.apache.shiro.authz.SimpleAuthorizationInfo:void <init>()",
                "org.apache.shiro.session.mgt.SimpleSession:java.util.Date getStopTimestamp()",
                "org.apache.shiro.config.Ini:org.apache.shiro.config.Ini$Section get(java.lang.Object)",
                "org.apache.shiro.config.Ini:int size()",
                "org.apache.shiro.session.mgt.SimpleSession:void setTimeout(long)",
                "org.apache.shiro.config.Ini$Section:boolean isEmpty()",
                "org.apache.shiro.util.MapContext:java.lang.Object put(java.lang.Object,java.lang.Object)",
                "org.apache.shiro.subject.SimplePrincipalCollection:java.lang.String toString()",
                "org.apache.shiro.authz.SimpleAuthorizationInfo:void setStringPermissions(java.util.Set)",
                "org.apache.shiro.authc.UnknownAccountException:void <init>(java.lang.String,java.lang.Throwable)",
                "org.apache.shiro.session.mgt.SimpleSession:java.io.Serializable getId()",
                "org.apache.shiro.authc.UsernamePasswordToken:char[] getPassword()",
                "org.apache.shiro.authz.SimpleAuthorizationInfo:void addRole(java.lang.String)",
                "org.apache.shiro.authc.SimpleAuthenticationInfo:java.lang.String toString()",
                "org.apache.shiro.authz.permission.WildcardPermission:java.lang.String toString()",
                "org.apache.shiro.session.mgt.SimpleSession:void <init>()",
                "org.apache.shiro.session.mgt.eis.CachingSessionDAO:org.apache.shiro.session.Session readSession(java.io.Serializable)",
                "org.apache.shiro.session.mgt.SimpleSession:java.util.Date getLastAccessTime()",
                "org.apache.shiro.config.Ini$Section:int size()",
                "org.apache.shiro.session.mgt.SimpleSession:long getTimeout()",
                "org.apache.shiro.config.Ini$Section:java.lang.String toString()",
                "org.apache.shiro.config.Ini:org.apache.shiro.config.Ini$Section remove(java.lang.Object)",
                "org.apache.shiro.authc.LockedAccountException:void <init>(java.lang.String,java.lang.Throwable)",
                "org.apache.shiro.io.ResourceUtils:java.io.InputStream getInputStreamForPath(java.lang.String)",
                "org.apache.shiro.util.SimpleByteSource:java.lang.String toHex()",
                "org.apache.shiro.crypto.hash.SimpleHash:java.lang.String toString()",
                "org.apache.shiro.session.mgt.SimpleSession:java.util.Date getStartTimestamp()",
                "org.apache.shiro.config.Ini:java.util.Set entrySet()",
                "org.apache.shiro.cache.MapCache:java.lang.Object put(java.lang.Object,java.lang.Object)",
                "org.apache.shiro.config.ConfigurationException:void <init>(java.lang.String,java.lang.Throwable)",
                "org.apache.shiro.crypto.SecureRandomNumberGenerator:org.apache.shiro.util.ByteSource nextBytes(int)",
                "org.apache.shiro.subject.SimplePrincipalCollection:void <init>(java.lang.Object,java.lang.String)",
                "org.apache.shiro.authz.SimpleAuthorizationInfo:void setRoles(java.util.Set)",
                "org.apache.shiro.codec.Base64:void <clinit>()",
                "org.apache.shiro.cache.AbstractCacheManager:java.lang.String toString()",
                "org.apache.shiro.SecurityUtils:org.apache.shiro.mgt.SecurityManager getSecurityManager()",
                "org.apache.shiro.session.mgt.SimpleSession:java.lang.String toString()",
                "org.apache.shiro.util.MapContext:java.util.Set entrySet()",
                "org.apache.shiro.util.SimpleByteSource:java.lang.String toString()",
                "org.apache.shiro.config.Ini:java.lang.String toString()",
                "org.apache.shiro.realm.CachingRealm:void setCacheManager(org.apache.shiro.cache.CacheManager)",
                "org.apache.shiro.authz.SimpleAuthorizationInfo:void addStringPermission(java.lang.String)",
                "org.apache.shiro.util.MapContext:java.lang.Object get(java.lang.Object)",
                "org.apache.shiro.realm.AuthorizingRealm:void clearCachedAuthorizationInfo(org.apache.shiro.subject.PrincipalCollection)",
                "org.apache.shiro.realm.AuthorizingRealm:void <init>()",
                "org.apache.shiro.config.Ini:java.lang.Object put(java.lang.Object,java.lang.Object)",
                "org.apache.shiro.cache.MapCache:java.lang.String toString()",
                "org.apache.shiro.crypto.SecureRandomNumberGenerator:void <init>()",
                "org.apache.shiro.session.mgt.SimpleSession:void setId(java.io.Serializable)",
                "org.apache.shiro.realm.AuthorizingRealm:void <clinit>()",
                "org.apache.shiro.authc.AuthenticationException:void <init>(java.lang.String,java.lang.Throwable)",
                "org.apache.shiro.session.mgt.DefaultSessionKey:void <init>(java.io.Serializable)",
                "org.apache.shiro.cache.AbstractCacheManager:org.apache.shiro.cache.Cache getCache(java.lang.String)",
                "org.apache.shiro.config.Ini$Section:java.lang.String remove(java.lang.Object)",
                "org.apache.shiro.authc.UsernamePasswordToken:java.lang.String toString()",
                "org.apache.shiro.cache.MapCache:java.lang.Object remove(java.lang.Object)",
                "org.apache.shiro.session.mgt.SimpleSession:void setAttribute(java.lang.Object,java.lang.Object)",
                "org.apache.shiro.config.Ini$Section:java.util.Set entrySet()",
                "org.apache.shiro.crypto.hash.Md5Hash:void <init>(java.lang.Object)",
                "org.apache.shiro.crypto.hash.SimpleHash:java.lang.String toHex()",
                "org.apache.shiro.realm.CachingRealm:void <clinit>()",
                "org.apache.shiro.authc.UsernamePasswordToken:java.lang.String getUsername()",
                "org.apache.shiro.cache.MapCache:java.lang.Object get(java.lang.Object)",
                "org.apache.shiro.util.MapContext:int size()",
                "org.apache.shiro.realm.CachingRealm:java.lang.String getName()",
                "org.apache.shiro.authc.UsernamePasswordToken:void <init>(java.lang.String,java.lang.String,boolean)",
                "org.apache.shiro.config.Ini$Section:java.lang.Object put(java.lang.Object,java.lang.Object)",
                "org.apache.shiro.subject.SimplePrincipalCollection:java.util.Set getRealmNames()",
                "org.apache.shiro.SecurityUtils:org.apache.shiro.subject.Subject getSubject()",
                "org.apache.shiro.session.InvalidSessionException:void <init>()",
                "org.apache.shiro.realm.AuthenticatingRealm:void <clinit>()",
                "org.apache.shiro.authc.ExcessiveAttemptsException:void <init>(java.lang.String,java.lang.Throwable)",
                "org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO:void <init>()",
                "org.apache.shiro.session.mgt.SimpleSession:java.lang.Object removeAttribute(java.lang.Object)",
                "org.apache.shiro.session.mgt.SimpleSession:java.lang.Object getAttribute(java.lang.Object)",
                "org.apache.shiro.config.Ini:boolean isEmpty()",
                "org.apache.shiro.util.MapContext:boolean isEmpty()",
                "org.apache.shiro.authc.SimpleAuthenticationInfo:void <init>(java.lang.Object,java.lang.Object,java.lang.String)",
                "org.apache.shiro.util.MapContext:java.lang.Object remove(java.lang.Object)",
                "org.apache.shiro.config.Ini$Section:java.lang.String get(java.lang.Object)"
            ]
        },
        "com.alibaba:fastjson:1.2.70": {
            "used-method num": 38,
            "used method": [
                "com.alibaba.fastjson.JSONArray:void <init>()",
                "com.alibaba.fastjson.serializer.JSONSerializer:java.lang.String toString()",
                "com.alibaba.fastjson.JSON:java.lang.Object parseObject(java.lang.String,java.lang.Class)",
                "com.alibaba.fastjson.JSON:java.lang.String toString()",
                "com.alibaba.fastjson.JSONObject:void <init>()",
                "com.alibaba.fastjson.JSONObject:java.lang.Integer getInteger(java.lang.String)",
                "com.alibaba.fastjson.JSONPObject:java.lang.String toString()",
                "com.alibaba.fastjson.JSONObject:java.lang.String getString(java.lang.String)",
                "com.alibaba.fastjson.JSONObject:java.lang.Object put(java.lang.String,java.lang.Object)",
                "com.alibaba.fastjson.JSON:com.alibaba.fastjson.JSONObject parseObject(java.lang.String)",
                "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object,com.alibaba.fastjson.serializer.SerializerFeature[])",
                "com.alibaba.fastjson.serializer.SerialContext:java.lang.String toString()",
                "com.alibaba.fastjson.JSONObject:java.lang.Object clone()",
                "com.alibaba.fastjson.JSON:void <clinit>()",
                "com.alibaba.fastjson.JSONObject:java.lang.Object put(java.lang.Object,java.lang.Object)",
                "com.alibaba.fastjson.JSON:java.lang.Object toJSON(java.lang.Object)",
                "com.alibaba.fastjson.JSON:java.lang.String toJSONString()",
                "com.alibaba.fastjson.JSONObject:java.lang.Object remove(java.lang.Object)",
                "com.alibaba.fastjson.parser.ParseContext:java.lang.String toString()",
                "com.alibaba.fastjson.JSONArray:java.util.Iterator iterator()",
                "com.alibaba.fastjson.JSONArray:boolean contains(java.lang.Object)",
                "com.alibaba.fastjson.JSONObject:java.lang.Object getObject(java.lang.String,java.lang.Class)",
                "com.alibaba.fastjson.JSON:com.alibaba.fastjson.JSONArray parseArray(java.lang.String)",
                "com.alibaba.fastjson.JSONObject:java.util.Set entrySet()",
                "com.alibaba.fastjson.JSONObject:java.lang.Object get(java.lang.Object)",
                "com.alibaba.fastjson.JSONArray:boolean remove(java.lang.Object)",
                "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object)",
                "com.alibaba.fastjson.JSONObject:int size()",
                "com.alibaba.fastjson.JSONArray:boolean isEmpty()",
                "com.alibaba.fastjson.JSONArray:int size()",
                "com.alibaba.fastjson.serializer.SerializeWriter:java.lang.String toString()",
                "com.alibaba.fastjson.util.GenericArrayTypeImpl:java.lang.String toString()",
                "com.alibaba.fastjson.serializer.SerializerFeature:void <clinit>()",
                "com.alibaba.fastjson.JSONObject:boolean isEmpty()",
                "com.alibaba.fastjson.JSONArray:java.lang.Object clone()",
                "com.alibaba.fastjson.JSONArray:java.lang.Object get(int)",
                "com.alibaba.fastjson.util.ParameterizedTypeImpl:java.lang.reflect.Type[] getActualTypeArguments()",
                "com.alibaba.fastjson.JSONArray:boolean add(java.lang.Object)"
            ],
            "CVE": [
                "CVE-2022-25845"
            ],
            "used vul-method": [
                "com.alibaba.fastjson.JSON:java.lang.Object parseObject(java.lang.String,java.lang.Class)",
                "com.alibaba.fastjson.JSON:java.lang.String toString()",
                "com.alibaba.fastjson.JSONPObject:java.lang.String toString()",
                "com.alibaba.fastjson.JSON:com.alibaba.fastjson.JSONObject parseObject(java.lang.String)",
                "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object,com.alibaba.fastjson.serializer.SerializerFeature[])",
                "com.alibaba.fastjson.JSON:java.lang.Object toJSON(java.lang.Object)",
                "com.alibaba.fastjson.JSON:java.lang.String toJSONString()",
                "com.alibaba.fastjson.JSONObject:java.lang.Object getObject(java.lang.String,java.lang.Class)",
                "com.alibaba.fastjson.JSON:com.alibaba.fastjson.JSONArray parseArray(java.lang.String)",
                "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object)"
            ],
            "vul-called frequency": 160,
            "related vul root method": {
                "CVE-2022-25845": [
                    "com.alibaba.fastjson.parser.ParserConfig:java.lang.Class checkAutoType(java.lang.String,java.lang.Class,int)"
                ]
            },
            "CVE-API": {
                "CVE-2022-25845": [
                    "com.alibaba.fastjson.JSON:java.lang.Object parseObject(java.lang.String,java.lang.Class)",
                    "com.alibaba.fastjson.JSON:java.lang.String toString()",
                    "com.alibaba.fastjson.JSONPObject:java.lang.String toString()",
                    "com.alibaba.fastjson.JSON:com.alibaba.fastjson.JSONObject parseObject(java.lang.String)",
                    "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object,com.alibaba.fastjson.serializer.SerializerFeature[])",
                    "com.alibaba.fastjson.JSON:java.lang.Object toJSON(java.lang.Object)",
                    "com.alibaba.fastjson.JSON:java.lang.String toJSONString()",
                    "com.alibaba.fastjson.JSONObject:java.lang.Object getObject(java.lang.String,java.lang.Class)",
                    "com.alibaba.fastjson.JSON:com.alibaba.fastjson.JSONArray parseArray(java.lang.String)",
                    "com.alibaba.fastjson.JSON:java.lang.String toJSONString(java.lang.Object)"
                ]
            }
        },
        "org.quartz-scheduler:quartz:2.3.0": {
            "used-method num": 64,
            "used method": [
                "org.quartz.TriggerBuilder:org.quartz.TriggerBuilder withIdentity(org.quartz.TriggerKey)",
                "org.quartz.impl.triggers.AbstractTrigger:org.quartz.JobDataMap getJobDataMap()",
                "org.quartz.impl.StdScheduler:org.quartz.Trigger getTrigger(org.quartz.TriggerKey)",
                "org.quartz.utils.DirtyFlagMap:java.lang.Object clone()",
                "org.quartz.utils.DirtyFlagMap:java.lang.Object remove(java.lang.Object)",
                "org.quartz.utils.DirtyFlagMap:boolean isEmpty()",
                "org.quartz.utils.DirtyFlagMap$DirtyFlagMapEntryIterator:org.quartz.utils.DirtyFlagMap$DirtyFlagMapEntry next()",
                "org.quartz.utils.DirtyFlagMap$DirtyFlagMapEntry:java.lang.Object getValue()",
                "org.quartz.impl.JobExecutionContextImpl:java.lang.String toString()",
                "org.quartz.SchedulerException:java.lang.String toString()",
                "org.quartz.impl.JobDetailImpl:java.lang.String toString()",
                "org.quartz.CronScheduleBuilder:org.quartz.CronScheduleBuilder withMisfireHandlingInstructionFireAndProceed()",
                "org.quartz.impl.triggers.AbstractTrigger:org.quartz.TriggerBuilder getTriggerBuilder()",
                "org.quartz.impl.StdScheduler:java.util.Date scheduleJob(org.quartz.JobDetail,org.quartz.Trigger)",
                "org.quartz.TriggerBuilder:org.quartz.TriggerBuilder newTrigger()",
                "org.quartz.impl.StdScheduler:java.util.Date rescheduleJob(org.quartz.TriggerKey,org.quartz.Trigger)",
                "org.quartz.impl.JobDetailImpl:org.quartz.JobDataMap getJobDataMap()",
                "org.quartz.utils.DirtyFlagMap:java.util.Set entrySet()",
                "org.quartz.TriggerKey:org.quartz.TriggerKey triggerKey(java.lang.String)",
                "org.quartz.utils.DirtyFlagMap:java.lang.Object get(java.lang.Object)",
                "org.quartz.utils.StringKeyDirtyFlagMap:java.lang.Object put(java.lang.String,java.lang.Object)",
                "org.quartz.JobBuilder:org.quartz.JobDetail build()",
                "org.quartz.impl.RemoteScheduler:void resumeJob(org.quartz.JobKey)",
                "org.quartz.utils.DirtyFlagMap$DirtyFlagMapEntrySet:java.util.Iterator iterator()",
                "org.quartz.JobDataMap:void <init>()",
                "org.quartz.JobBuilder:org.quartz.JobBuilder withIdentity(org.quartz.JobKey)",
                "org.quartz.impl.RemoteScheduler:java.lang.String getSchedulerName()",
                "org.quartz.utils.DirtyFlagMap$DirtyFlagIterator:boolean hasNext()",
                "org.quartz.utils.StringKeyDirtyFlagMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
                "org.quartz.utils.DirtyFlagMap:int size()",
                "org.quartz.CronExpression:java.lang.Object clone()",
                "org.quartz.TriggerBuilder:org.quartz.Trigger build()",
                "org.quartz.JobBuilder:org.quartz.JobBuilder newJob(java.lang.Class)",
                "org.quartz.impl.triggers.CronTriggerImpl:java.lang.Object clone()",
                "org.quartz.impl.RemoteScheduler:java.util.Date rescheduleJob(org.quartz.TriggerKey,org.quartz.Trigger)",
                "org.quartz.impl.RemoteScheduler:void triggerJob(org.quartz.JobKey,org.quartz.JobDataMap)",
                "org.quartz.impl.RemoteScheduler:boolean deleteJob(org.quartz.JobKey)",
                "org.quartz.impl.RemoteScheduler:java.util.Date scheduleJob(org.quartz.JobDetail,org.quartz.Trigger)",
                "org.quartz.impl.StdScheduler:boolean deleteJob(org.quartz.JobKey)",
                "org.quartz.utils.DirtyFlagMap$DirtyFlagMapEntry:java.lang.Object getKey()",
                "org.quartz.SchedulerMetaData:java.lang.String toString()",
                "org.quartz.CronScheduleBuilder:org.quartz.CronScheduleBuilder withMisfireHandlingInstructionDoNothing()",
                "org.quartz.impl.StdScheduler:void resumeJob(org.quartz.JobKey)",
                "org.quartz.impl.StdScheduler:java.lang.String getSchedulerName()",
                "org.quartz.utils.counter.sampled.TimeStampedCounterValue:java.lang.String toString()",
                "org.quartz.CronExpression:void <init>(java.lang.String)",
                "org.quartz.TriggerBuilder:org.quartz.TriggerBuilder withSchedule(org.quartz.ScheduleBuilder)",
                "org.quartz.impl.triggers.AbstractTrigger:java.lang.String toString()",
                "org.quartz.impl.RemoteScheduler:void pauseJob(org.quartz.JobKey)",
                "org.quartz.xml.ValidationException:java.lang.String getMessage()",
                "org.quartz.CronScheduleBuilder:org.quartz.CronScheduleBuilder cronSchedule(java.lang.String)",
                "org.quartz.utils.DirtyFlagMap$DirtyFlagCollection:java.util.Iterator iterator()",
                "org.quartz.CronExpression:boolean isValidExpression(java.lang.String)",
                "org.quartz.CronExpression:void <clinit>()",
                "org.quartz.impl.triggers.AbstractTrigger:java.lang.Object clone()",
                "org.quartz.impl.JobDetailImpl:java.lang.Object clone()",
                "org.quartz.CronExpression:java.util.Date getNextValidTimeAfter(java.util.Date)",
                "org.quartz.utils.DirtyFlagMap$DirtyFlagIterator:java.lang.Object next()",
                "org.quartz.impl.RemoteScheduler:org.quartz.Trigger getTrigger(org.quartz.TriggerKey)",
                "org.quartz.impl.StdScheduler:void pauseJob(org.quartz.JobKey)",
                "org.quartz.utils.Key:java.lang.String getName()",
                "org.quartz.utils.Key:java.lang.String toString()",
                "org.quartz.impl.StdScheduler:void triggerJob(org.quartz.JobKey,org.quartz.JobDataMap)",
                "org.quartz.JobKey:org.quartz.JobKey jobKey(java.lang.String)"
            ]
        },
        "org.apache.poi:poi-ooxml:3.17": {
            "used-method num": 88,
            "used method": [
                "org.apache.poi.xssf.usermodel.XSSFWorkbook:org.apache.poi.xssf.usermodel.XSSFFont createFont()",
                "org.apache.poi.xssf.streaming.SXSSFWorkbook:org.apache.poi.xssf.streaming.SXSSFSheet createSheet()",
                "org.apache.poi.xssf.streaming.SXSSFRow$CellIterator:boolean hasNext()",
                "org.apache.poi.xssf.usermodel.XSSFCellStyle:void setWrapText(boolean)",
                "org.apache.poi.xssf.usermodel.XSSFWorkbook$SheetIterator:org.apache.poi.ss.usermodel.Sheet next()",
                "org.apache.poi.xssf.usermodel.XSSFSheet:org.apache.poi.ss.usermodel.DataValidationHelper getDataValidationHelper()",
                "org.apache.poi.xssf.usermodel.XSSFSheet:void addValidationData(org.apache.poi.ss.usermodel.DataValidation)",
                "org.apache.poi.xssf.usermodel.XSSFWorkbook:org.apache.poi.xssf.usermodel.XSSFCellStyle createCellStyle()",
                "org.apache.poi.xssf.streaming.SXSSFWorkbook$SheetIterator:org.apache.poi.ss.usermodel.Sheet next()",
                "org.apache.poi.xssf.usermodel.XSSFRow:org.apache.poi.xssf.usermodel.XSSFCell createCell(int)",
                "org.apache.poi.xssf.usermodel.XSSFCell:void setCellValue(java.lang.String)",
                "org.apache.poi.xssf.streaming.SXSSFSheet:org.apache.poi.xssf.streaming.SXSSFRow createRow(int)",
                "org.apache.poi.xssf.usermodel.XSSFTextParagraph:java.lang.String toString()",
                "org.apache.poi.xssf.streaming.SXSSFWorkbook:void <init>(int)",
                "org.apache.poi.xssf.streaming.SXSSFWorkbook$SheetIterator:boolean hasNext()",
                "org.apache.poi.xssf.usermodel.XSSFTextRun:java.lang.String toString()",
                "org.apache.poi.xssf.streaming.SXSSFWorkbook:void setSheetName(int,java.lang.String)",
                "org.apache.poi.xssf.usermodel.XSSFSheet:void setColumnWidth(int,int)",
                "org.apache.poi.xssf.usermodel.XSSFCellStyle:java.lang.Object clone()",
                "org.apache.poi.xssf.usermodel.XSSFConditionalFormatting:java.lang.String toString()",
                "org.apache.poi.openxml4j.opc.PackagePartName:java.lang.String toString()",
                "org.apache.poi.xssf.streaming.SXSSFRow$CellIterator:org.apache.poi.ss.usermodel.Cell next()",
                "org.apache.poi.POIXMLDocument:void close()",
                "org.apache.poi.xssf.streaming.SXSSFRow:org.apache.poi.xssf.streaming.SXSSFCell createCell(int)",
                "org.apache.poi.xssf.usermodel.XSSFRichTextString:java.lang.String toString()",
                "org.apache.poi.xssf.usermodel.XSSFCellStyle:void setVerticalAlignment(org.apache.poi.ss.usermodel.VerticalAlignment)",
                "org.apache.poi.xssf.streaming.SXSSFWorkbook:org.apache.poi.xssf.streaming.SXSSFSheet getSheet(java.lang.String)",
                "org.apache.poi.xssf.streaming.SXSSFSheet:org.apache.poi.ss.usermodel.DataValidationHelper getDataValidationHelper()",
                "org.apache.poi.xssf.usermodel.XSSFCell:java.lang.String toString()",
                "org.apache.poi.xssf.usermodel.XSSFCell:byte getErrorCellValue()",
                "org.apache.poi.xssf.usermodel.XSSFRow:void setHeight(short)",
                "org.apache.poi.POIXMLDocument:void write(java.io.OutputStream)",
                "org.apache.poi.xssf.streaming.SXSSFWorkbook:void close()",
                "org.apache.poi.xssf.usermodel.XSSFFont:void setColor(short)",
                "org.apache.poi.xssf.usermodel.XSSFSheet:org.apache.poi.xssf.usermodel.XSSFRow getRow(int)",
                "org.apache.poi.xssf.streaming.SXSSFSheet:org.apache.poi.xssf.streaming.SXSSFRow getRow(int)",
                "org.apache.poi.xssf.streaming.SXSSFCell:java.lang.String toString()",
                "org.apache.poi.xssf.usermodel.XSSFFont:java.lang.String toString()",
                "org.apache.poi.xssf.usermodel.XSSFWorkbook:org.apache.poi.xssf.usermodel.XSSFSheet createSheet()",
                "org.apache.poi.xssf.streaming.SXSSFWorkbook:org.apache.poi.ss.usermodel.CellStyle createCellStyle()",
                "org.apache.poi.xssf.usermodel.XSSFSheet:int getPhysicalNumberOfRows()",
                "org.apache.poi.openxml4j.opc.internal.ContentType:java.lang.String toString()",
                "org.apache.poi.xssf.usermodel.XSSFCell:void setCellType(org.apache.poi.ss.usermodel.CellType)",
                "org.apache.poi.xssf.usermodel.XSSFDialogsheet:org.apache.poi.xssf.usermodel.XSSFRow createRow(int)",
                "org.apache.poi.xssf.usermodel.XSSFRow:java.lang.String toString()",
                "org.apache.poi.xssf.usermodel.XSSFRow:org.apache.poi.xssf.usermodel.XSSFCell getCell(int)",
                "org.apache.poi.xssf.streaming.SXSSFCell:byte getErrorCellValue()",
                "org.apache.poi.xssf.usermodel.XSSFWorkbook:org.apache.poi.xssf.usermodel.XSSFSheet getSheetAt(int)",
                "org.apache.poi.openxml4j.opc.internal.MemoryPackagePartOutputStream:void write(byte[],int,int)",
                "org.apache.poi.xssf.streaming.SXSSFCell:double getNumericCellValue()",
                "org.apache.poi.xssf.usermodel.XSSFWorkbook:void setSheetName(int,java.lang.String)",
                "org.apache.poi.openxml4j.opc.internal.MemoryPackagePartOutputStream:void close()",
                "org.apache.poi.xssf.usermodel.XSSFCell:org.apache.poi.ss.usermodel.CellType getCellTypeEnum()",
                "org.apache.poi.xssf.usermodel.XSSFCellStyle:void setFillForegroundColor(short)",
                "org.apache.poi.openxml4j.opc.internal.MemoryPackagePartOutputStream:void write(byte[])",
                "org.apache.poi.xssf.streaming.SXSSFCell:java.lang.String getStringCellValue()",
                "org.apache.poi.openxml4j.opc.PackageRelationship:java.lang.String toString()",
                "org.apache.poi.ss.usermodel.WorkbookFactory:org.apache.poi.ss.usermodel.Workbook create(java.io.InputStream)",
                "org.apache.poi.xssf.streaming.SXSSFWorkbook:org.apache.poi.xssf.streaming.SXSSFSheet getSheetAt(int)",
                "org.apache.poi.xssf.streaming.SXSSFRow:org.apache.poi.xssf.streaming.SXSSFCell getCell(int)",
                "org.apache.poi.xssf.usermodel.XSSFCellStyle:void setFont(org.apache.poi.ss.usermodel.Font)",
                "org.apache.poi.xssf.streaming.SXSSFWorkbook:org.apache.poi.ss.usermodel.Font createFont()",
                "org.apache.poi.xssf.usermodel.XSSFCell:java.lang.String getStringCellValue()",
                "org.apache.poi.xssf.usermodel.XSSFCell:void setCellStyle(org.apache.poi.ss.usermodel.CellStyle)",
                "org.apache.poi.xssf.streaming.SXSSFSheet:void setColumnWidth(int,int)",
                "org.apache.poi.xssf.usermodel.XSSFDataValidationHelper:org.apache.poi.ss.usermodel.DataValidationConstraint createExplicitListConstraint(java.lang.String[])",
                "org.apache.poi.xssf.usermodel.XSSFSheet:org.apache.poi.xssf.usermodel.XSSFRow createRow(int)",
                "org.apache.poi.xssf.streaming.SXSSFWorkbook:void write(java.io.OutputStream)",
                "org.apache.poi.xssf.usermodel.XSSFCell:double getNumericCellValue()",
                "org.apache.poi.xssf.streaming.SXSSFSheet:int getPhysicalNumberOfRows()",
                "org.apache.poi.xssf.usermodel.XSSFClientAnchor:java.lang.String toString()",
                "org.apache.poi.xssf.usermodel.XSSFCell:boolean getBooleanCellValue()",
                "org.apache.poi.xssf.usermodel.XSSFDataValidation:void setSuppressDropDownArrow(boolean)",
                "org.apache.poi.xssf.streaming.SXSSFCell:org.apache.poi.ss.usermodel.CellType getCellTypeEnum()",
                "org.apache.poi.POIXMLDocumentPart:java.lang.String toString()",
                "org.apache.poi.openxml4j.opc.PackageRelationshipCollection:java.lang.String toString()",
                "org.apache.poi.xssf.streaming.SXSSFRow$FilledCellIterator:org.apache.poi.ss.usermodel.Cell next()",
                "org.apache.poi.xssf.usermodel.XSSFDataValidationHelper:org.apache.poi.ss.usermodel.DataValidation createValidation(org.apache.poi.ss.usermodel.DataValidationConstraint,org.apache.poi.ss.util.CellRangeAddressList)",
                "org.apache.poi.openxml4j.opc.internal.MemoryPackagePartOutputStream:void flush()",
                "org.apache.poi.xssf.usermodel.XSSFCellStyle:void setAlignment(org.apache.poi.ss.usermodel.HorizontalAlignment)",
                "org.apache.poi.xssf.streaming.SXSSFCell:void setCellValue(java.lang.String)",
                "org.apache.poi.xssf.streaming.SXSSFCell:boolean getBooleanCellValue()",
                "org.apache.poi.xssf.usermodel.XSSFCellStyle:void setFillPattern(org.apache.poi.ss.usermodel.FillPatternType)",
                "org.apache.poi.xssf.streaming.SXSSFCell:void setCellType(org.apache.poi.ss.usermodel.CellType)",
                "org.apache.poi.xssf.usermodel.XSSFWorkbook$SheetIterator:boolean hasNext()",
                "org.apache.poi.openxml4j.opc.PackagePart:java.lang.String toString()",
                "org.apache.poi.xssf.streaming.SXSSFSheet:void addValidationData(org.apache.poi.ss.usermodel.DataValidation)",
                "org.apache.poi.xssf.usermodel.XSSFWorkbook:org.apache.poi.xssf.usermodel.XSSFSheet getSheet(java.lang.String)"
            ],
            "CVE": [
                "CVE-2019-12415"
            ],
            "used vul-method": [
                "org.apache.poi.xssf.streaming.SXSSFSheet:org.apache.poi.xssf.streaming.SXSSFRow createRow(int)",
                "org.apache.poi.xssf.streaming.SXSSFRow:org.apache.poi.xssf.streaming.SXSSFCell createCell(int)",
                "org.apache.poi.xssf.streaming.SXSSFCell:java.lang.String toString()",
                "org.apache.poi.xssf.streaming.SXSSFCell:java.lang.String getStringCellValue()",
                "org.apache.poi.xssf.streaming.SXSSFRow:org.apache.poi.xssf.streaming.SXSSFCell getCell(int)",
                "org.apache.poi.xssf.streaming.SXSSFCell:void setCellValue(java.lang.String)",
                "org.apache.poi.xssf.streaming.SXSSFCell:void setCellType(org.apache.poi.ss.usermodel.CellType)"
            ],
            "vul-called frequency": 33,
            "related vul root method": {
                "CVE-2019-12415": [
                    "org.apache.poi.xssf.streaming.SheetDataWriter:void writeCell(int,org.apache.poi.ss.usermodel.Cell)",
                    "org.apache.poi.xssf.streaming.SXSSFCell:java.lang.String getStringCellValue()",
                    "org.apache.poi.xssf.streaming.SXSSFCell:void setCellValue(java.lang.String)"
                ]
            },
            "CVE-API": {
                "CVE-2019-12415": [
                    "org.apache.poi.xssf.streaming.SXSSFSheet:org.apache.poi.xssf.streaming.SXSSFRow createRow(int)",
                    "org.apache.poi.xssf.streaming.SXSSFRow:org.apache.poi.xssf.streaming.SXSSFCell createCell(int)",
                    "org.apache.poi.xssf.streaming.SXSSFCell:java.lang.String toString()",
                    "org.apache.poi.xssf.streaming.SXSSFCell:java.lang.String getStringCellValue()",
                    "org.apache.poi.xssf.streaming.SXSSFRow:org.apache.poi.xssf.streaming.SXSSFCell getCell(int)",
                    "org.apache.poi.xssf.streaming.SXSSFCell:void setCellValue(java.lang.String)",
                    "org.apache.poi.xssf.streaming.SXSSFCell:void setCellType(org.apache.poi.ss.usermodel.CellType)"
                ]
            }
        },
        "org.apache.httpcomponents:httpclient:4.5.7": {
            "used-method num": 67,
            "used method": [
                "org.apache.http.impl.execchain.ResponseEntityProxy:java.lang.String toString()",
                "org.apache.http.client.methods.HttpPost:void <init>(java.lang.String)",
                "org.apache.http.client.entity.LazyDecompressingInputStream:void close()",
                "org.apache.http.cookie.CookieOrigin:java.lang.String toString()",
                "org.apache.http.impl.execchain.RequestEntityProxy:java.io.InputStream getContent()",
                "org.apache.http.impl.client.BasicCredentialsProvider:java.lang.String toString()",
                "org.apache.http.auth.NTCredentials:java.lang.String toString()",
                "org.apache.http.impl.client.RedirectLocations:java.net.URI get(int)",
                "org.apache.http.impl.execchain.RequestEntityProxy:org.apache.http.Header getContentType()",
                "org.ietf.jgss.Oid:java.lang.String toString()",
                "org.apache.http.client.methods.HttpRequestBase:void setConfig(org.apache.http.client.config.RequestConfig)",
                "org.apache.http.impl.cookie.BasicClientCookie:java.lang.String toString()",
                "org.apache.http.client.config.RequestConfig$Builder:org.apache.http.client.config.RequestConfig$Builder setConnectTimeout(int)",
                "org.apache.http.auth.UsernamePasswordCredentials:java.lang.String toString()",
                "org.apache.http.impl.execchain.RequestEntityProxy:java.lang.String toString()",
                "org.apache.http.client.methods.HttpRequestBase:java.lang.String toString()",
                "org.ietf.jgss.GSSException:java.lang.String getMessage()",
                "org.apache.http.auth.AuthScope:java.lang.String toString()",
                "org.apache.http.conn.EofSensorInputStream:int read(byte[])",
                "org.apache.http.impl.conn.LoggingOutputStream:void write(byte[])",
                "org.apache.http.client.config.RequestConfig:org.apache.http.client.config.RequestConfig$Builder custom()",
                "org.apache.http.client.config.RequestConfig$Builder:org.apache.http.client.config.RequestConfig$Builder setConnectionRequestTimeout(int)",
                "org.apache.http.client.methods.HttpEntityEnclosingRequestBase:java.lang.Object clone()",
                "org.apache.http.client.utils.URIBuilder:java.lang.String toString()",
                "org.apache.http.client.methods.HttpGet:void <init>(java.lang.String)",
                "org.apache.http.client.entity.DeflateInputStream:int read(byte[])",
                "org.apache.http.impl.auth.HttpEntityDigester:void write(byte[],int,int)",
                "org.apache.http.impl.client.RedirectLocations:int size()",
                "org.apache.http.impl.auth.AuthSchemeBase:java.lang.String toString()",
                "org.apache.http.impl.client.RedirectLocations:boolean contains(java.lang.Object)",
                "org.apache.http.client.config.RequestConfig$Builder:org.apache.http.client.config.RequestConfig$Builder setSocketTimeout(int)",
                "org.apache.http.client.entity.DeflateInputStream$DeflateStream:void close()",
                "org.apache.http.impl.conn.CPoolProxy:java.lang.String toString()",
                "org.apache.http.impl.client.BasicCookieStore:java.lang.String toString()",
                "org.apache.http.auth.BasicUserPrincipal:java.lang.String toString()",
                "org.apache.http.impl.auth.HttpEntityDigester:void close()",
                "org.apache.http.conn.routing.RouteTracker:java.lang.String toString()",
                "org.apache.http.client.config.RequestConfig:org.apache.http.client.config.RequestConfig clone()",
                "org.apache.http.impl.conn.LoggingOutputStream:void close()",
                "org.apache.http.client.entity.LazyDecompressingInputStream:int read(byte[])",
                "org.apache.http.impl.execchain.HttpResponseProxy:org.apache.http.HttpEntity getEntity()",
                "org.apache.http.client.methods.RequestBuilder:java.lang.String toString()",
                "org.apache.http.client.config.RequestConfig:java.lang.String toString()",
                "org.apache.http.impl.cookie.BasicClientCookie:java.lang.Object clone()",
                "org.apache.http.client.methods.HttpRequestWrapper:java.lang.String toString()",
                "org.apache.http.client.methods.AbstractExecutionAwareRequest:java.lang.Object clone()",
                "org.apache.http.conn.EofSensorInputStream:void close()",
                "org.apache.http.impl.auth.DigestScheme:java.lang.String toString()",
                "org.apache.http.impl.cookie.BasicClientCookie2:java.lang.Object clone()",
                "org.apache.http.conn.routing.HttpRoute:java.lang.Object clone()",
                "org.apache.http.auth.AuthState:java.lang.String toString()",
                "org.apache.http.impl.conn.LoggingInputStream:int read(byte[])",
                "org.apache.http.impl.conn.LoggingOutputStream:void write(byte[],int,int)",
                "org.apache.http.client.config.RequestConfig$Builder:org.apache.http.client.config.RequestConfig build()",
                "org.apache.http.impl.conn.LoggingOutputStream:void flush()",
                "org.apache.http.conn.routing.HttpRoute:java.lang.String toString()",
                "org.apache.http.client.methods.HttpEntityEnclosingRequestBase:void setEntity(org.apache.http.HttpEntity)",
                "org.apache.http.conn.routing.RouteTracker:java.lang.Object clone()",
                "org.apache.http.impl.execchain.HttpResponseProxy:org.apache.http.StatusLine getStatusLine()",
                "org.apache.http.impl.client.CloseableHttpClient:org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)",
                "org.apache.http.impl.client.HttpClients:org.apache.http.impl.client.CloseableHttpClient createDefault()",
                "org.apache.http.impl.execchain.HttpResponseProxy:java.lang.String toString()",
                "org.ietf.jgss.GSSException:java.lang.String toString()",
                "org.apache.http.client.entity.DeflateInputStream:void close()",
                "org.apache.http.impl.auth.BasicScheme:java.lang.String toString()",
                "org.apache.http.impl.conn.LoggingInputStream:void close()",
                "org.apache.http.client.config.RequestConfig:void <clinit>()"
            ],
            "CVE": [
                "CVE-2020-13956"
            ],
            "used vul-method": [
                "org.apache.http.impl.client.CloseableHttpClient:org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)"
            ],
            "vul-called frequency": 3,
            "related vul root method": {
                "CVE-2020-13956": [
                    "org.apache.http.client.utils.URIUtils:org.apache.http.HttpHost extractHost(java.net.URI)"
                ]
            },
            "CVE-API": {
                "CVE-2020-13956": [
                    "org.apache.http.impl.client.CloseableHttpClient:org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)"
                ]
            }
        }
    }
}
{
    "project name": "Enterprise-Content-Management_documentum-rest-client-java",
    "vulnerable dependencies": {
        "org.springframework:spring-web:4.3.3.RELEASE": {
            "used-method num": 72,
            "used method": [
                "org.springframework.http.converter.FormHttpMessageConverter$MultipartHttpOutputMessage:java.io.OutputStream getBody()",
                "org.springframework.http.ResponseEntity:void <init>(java.lang.Object,org.springframework.util.MultiValueMap,org.springframework.http.HttpStatus)",
                "org.springframework.web.client.MessageBodyClientHttpResponseWrapper:org.springframework.http.HttpStatus getStatusCode()",
                "org.springframework.web.client.MessageBodyClientHttpResponseWrapper:int getRawStatusCode()",
                "org.springframework.http.HttpHeaders:void <init>()",
                "org.springframework.http.HttpHeaders:boolean containsKey(java.lang.Object)",
                "org.springframework.http.client.HttpComponentsStreamingClientHttpRequest$StreamingHttpEntity:org.apache.http.Header getContentType()",
                "org.springframework.http.MediaType:void <clinit>()",
                "org.springframework.http.converter.FormHttpMessageConverter:org.springframework.util.MultiValueMap read(java.lang.Class,org.springframework.http.HttpInputMessage)",
                "org.springframework.http.HttpHeaders:void setIfNoneMatch(java.lang.String)",
                "org.springframework.http.HttpEntity:java.lang.Object getBody()",
                "org.springframework.http.HttpHeaders:void set(java.lang.String,java.lang.String)",
                "org.springframework.web.util.HierarchicalUriComponents$FullPathComponent:boolean equals(java.lang.Object)",
                "org.springframework.http.MediaType:void <init>(org.springframework.http.MediaType,java.util.Map)",
                "org.springframework.http.converter.xml.Jaxb2RootElementHttpMessageConverter:void <clinit>()",
                "org.springframework.http.HttpHeaders:boolean equals(java.lang.Object)",
                "org.springframework.web.util.HierarchicalUriComponents$1:boolean equals(java.lang.Object)",
                "org.springframework.web.client.MessageBodyClientHttpResponseWrapper:org.springframework.http.HttpHeaders getHeaders()",
                "org.springframework.http.client.SimpleClientHttpResponse:java.io.InputStream getBody()",
                "org.springframework.http.HttpStatus$Series:void <clinit>()",
                "org.springframework.web.client.RestTemplate:void <clinit>()",
                "org.springframework.http.converter.FormHttpMessageConverter:boolean canRead(java.lang.Class,org.springframework.http.MediaType)",
                "org.springframework.http.client.AbstractClientHttpResponse:org.springframework.http.HttpStatus getStatusCode()",
                "org.springframework.http.HttpHeaders:void setIfMatch(java.lang.String)",
                "org.springframework.http.HttpHeaders:void add(java.lang.String,java.lang.String)",
                "org.springframework.http.client.HttpComponentsClientHttpRequestFactory:void <init>()",
                "org.springframework.web.util.HierarchicalUriComponents:boolean equals(java.lang.Object)",
                "org.springframework.http.HttpEntity:void <init>(java.lang.Object,org.springframework.util.MultiValueMap)",
                "org.springframework.http.HttpHeaders:java.lang.String getETag()",
                "org.springframework.http.HttpHeaders:java.util.Set entrySet()",
                "org.springframework.http.client.SimpleClientHttpResponse:int getRawStatusCode()",
                "org.springframework.http.HttpEntity:boolean equals(java.lang.Object)",
                "org.springframework.http.MediaType:org.springframework.http.MediaType valueOf(java.lang.String)",
                "org.springframework.http.converter.AbstractHttpMessageConverter:boolean canRead(java.lang.Class,org.springframework.http.MediaType)",
                "org.springframework.http.HttpHeaders:org.springframework.http.MediaType getContentType()",
                "org.springframework.web.client.DefaultResponseErrorHandler:void handleError(org.springframework.http.client.ClientHttpResponse)",
                "org.springframework.http.client.HttpComponentsStreamingClientHttpRequest$StreamingHttpEntity:java.io.InputStream getContent()",
                "org.springframework.http.converter.xml.Jaxb2RootElementHttpMessageConverter:boolean canRead(java.lang.Class,org.springframework.http.MediaType)",
                "org.springframework.http.converter.FormHttpMessageConverter$MultipartHttpOutputMessage:org.springframework.http.HttpHeaders getHeaders()",
                "org.springframework.http.HttpHeaders:void <clinit>()",
                "org.springframework.http.ResponseEntity:org.springframework.http.HttpStatus getStatusCode()",
                "org.springframework.http.HttpMethod:void <clinit>()",
                "org.springframework.http.converter.FormHttpMessageConverter:void addPartConverter(org.springframework.http.converter.HttpMessageConverter)",
                "org.springframework.http.HttpEntity:void <init>(org.springframework.util.MultiValueMap)",
                "org.springframework.http.HttpHeaders:void add(java.lang.Object,java.lang.Object)",
                "org.springframework.http.HttpHeaders:void setContentType(org.springframework.http.MediaType)",
                "org.springframework.http.HttpHeaders:void putAll(java.util.Map)",
                "org.springframework.http.HttpStatus:int value()",
                "org.springframework.http.HttpStatus:org.springframework.http.HttpStatus$Series series()",
                "org.springframework.http.client.HttpComponentsClientHttpResponse:org.springframework.http.HttpHeaders getHeaders()",
                "org.springframework.http.client.AbstractClientHttpRequest:org.springframework.http.HttpHeaders getHeaders()",
                "org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter:boolean canRead(java.lang.Class,org.springframework.http.MediaType)",
                "org.springframework.http.client.AbstractAsyncClientHttpRequest:java.io.OutputStream getBody()",
                "org.springframework.http.RequestEntity:boolean equals(java.lang.Object)",
                "org.springframework.http.converter.xml.Jaxb2RootElementHttpMessageConverter:void <init>()",
                "org.springframework.http.ResponseEntity:boolean equals(java.lang.Object)",
                "org.springframework.web.client.RestTemplate:void <init>()",
                "org.springframework.http.HttpEntity:org.springframework.http.HttpHeaders getHeaders()",
                "org.springframework.http.HttpHeaders:java.util.List get(java.lang.Object)",
                "org.springframework.http.HttpStatus:void <clinit>()",
                "org.springframework.http.client.SimpleClientHttpResponse:org.springframework.http.HttpHeaders getHeaders()",
                "org.springframework.http.converter.json.GsonHttpMessageConverter:boolean canRead(java.lang.Class,org.springframework.http.MediaType)",
                "org.springframework.http.client.AbstractAsyncClientHttpRequest:org.springframework.http.HttpHeaders getHeaders()",
                "org.springframework.web.util.OpaqueUriComponents:boolean equals(java.lang.Object)",
                "org.springframework.http.client.AbstractClientHttpRequest:java.io.OutputStream getBody()",
                "org.springframework.http.HttpEntity:void <clinit>()",
                "org.springframework.web.client.MessageBodyClientHttpResponseWrapper:java.io.InputStream getBody()",
                "org.springframework.http.HttpStatus:org.springframework.http.HttpStatus valueOf(int)",
                "org.springframework.http.HttpHeaders:java.lang.String getFirst(java.lang.String)",
                "org.springframework.web.util.UriComponentsBuilder:java.lang.Object clone()",
                "org.springframework.web.util.HierarchicalUriComponents$PathSegmentComponent:boolean equals(java.lang.Object)",
                "org.springframework.http.client.HttpComponentsClientHttpRequestFactory:void <clinit>()"
            ]
        },
        "junit:junit:4.12": {
            "used-method num": 0,
            "used method": []
        },
        "org.apache.httpcomponents:httpclient:4.5.2": {
            "used-method num": 41,
            "used method": [
                "org.apache.http.conn.ssl.BrowserCompatHostnameVerifier:void <clinit>()",
                "org.apache.http.impl.client.HttpClientBuilder:org.apache.http.impl.client.CloseableHttpClient build()",
                "org.apache.http.client.methods.HttpPost:void <init>(java.lang.String)",
                "org.apache.http.impl.execchain.RequestEntityProxy:java.io.InputStream getContent()",
                "org.apache.http.impl.conn.LoggingOutputStream:void write(int)",
                "org.apache.http.conn.ssl.TrustSelfSignedStrategy:void <init>()",
                "org.apache.http.impl.client.RedirectLocations:java.net.URI get(int)",
                "org.apache.http.impl.execchain.RequestEntityProxy:org.apache.http.Header getContentType()",
                "org.ietf.jgss.Oid:boolean equals(java.lang.Object)",
                "org.apache.http.impl.client.HttpClients:org.apache.http.impl.client.HttpClientBuilder custom()",
                "org.apache.http.conn.ssl.AllowAllHostnameVerifier:void <clinit>()",
                "org.apache.http.conn.EofSensorInputStream:int read(byte[])",
                "org.apache.http.impl.conn.LoggingOutputStream:void write(byte[])",
                "org.apache.http.conn.ssl.SSLConnectionSocketFactory:void <init>(javax.net.ssl.SSLContext,org.apache.http.conn.ssl.X509HostnameVerifier)",
                "org.apache.http.client.methods.HttpEntityEnclosingRequestBase:java.lang.Object clone()",
                "org.apache.http.client.methods.HttpRequestBase:void releaseConnection()",
                "org.apache.http.client.entity.DeflateInputStream:int read(byte[])",
                "org.apache.http.conn.routing.HttpRoute:boolean equals(java.lang.Object)",
                "org.apache.http.conn.ssl.AbstractVerifier:void <clinit>()",
                "org.apache.http.impl.client.RedirectLocations:int size()",
                "org.apache.http.client.config.RequestConfig:org.apache.http.client.config.RequestConfig clone()",
                "org.apache.http.client.entity.LazyDecompressingInputStream:int read(byte[])",
                "org.apache.http.impl.execchain.HttpResponseProxy:org.apache.http.HttpEntity getEntity()",
                "org.apache.http.conn.ssl.TrustSelfSignedStrategy:void <clinit>()",
                "org.apache.http.conn.ssl.AllowAllHostnameVerifier:void <init>()",
                "org.apache.http.impl.cookie.BasicClientCookie:java.lang.Object clone()",
                "org.apache.http.client.methods.AbstractExecutionAwareRequest:java.lang.Object clone()",
                "org.apache.http.impl.cookie.BasicClientCookie2:java.lang.Object clone()",
                "org.apache.http.conn.routing.HttpRoute:java.lang.Object clone()",
                "org.apache.http.conn.scheme.SocketFactoryAdaptor:boolean equals(java.lang.Object)",
                "org.apache.http.impl.conn.LoggingInputStream:int read(byte[])",
                "org.apache.http.client.methods.HttpEntityEnclosingRequestBase:void setEntity(org.apache.http.HttpEntity)",
                "org.apache.http.conn.routing.RouteTracker:java.lang.Object clone()",
                "org.apache.http.impl.execchain.HttpResponseProxy:org.apache.http.StatusLine getStatusLine()",
                "org.apache.http.auth.AuthScope:boolean equals(java.lang.Object)",
                "org.apache.http.impl.client.CloseableHttpClient:org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)",
                "org.apache.http.impl.client.HttpClients:org.apache.http.impl.client.CloseableHttpClient createDefault()",
                "org.apache.http.impl.auth.HttpEntityDigester:void write(int)",
                "org.apache.http.conn.ssl.BrowserCompatHostnameVerifier:void <init>()",
                "org.apache.http.conn.scheme.SchemeSocketFactoryAdaptor:boolean equals(java.lang.Object)",
                "org.apache.http.conn.ssl.SSLContextBuilder:void <init>()"
            ],
            "CVE": [
                "CVE-2020-13956"
            ],
            "used vul-method": [
                "org.apache.http.impl.client.CloseableHttpClient:org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)"
            ],
            "vul-called frequency": 1,
            "related vul root method": {
                "CVE-2020-13956": [
                    "org.apache.http.client.utils.URIUtils:org.apache.http.HttpHost extractHost(java.net.URI)"
                ]
            },
            "CVE-API": {
                "CVE-2020-13956": [
                    "org.apache.http.impl.client.CloseableHttpClient:org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest)"
                ]
            }
        }
    }
}
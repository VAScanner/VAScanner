{
    "project name": "jiangcaijun_ssm",
    "vulnerable dependencies": {
        "junit:junit:4.12": {
            "used-method num": 0,
            "used method": []
        },
        "org.springframework:spring-web:4.3.16.RELEASE": {
            "used-method num": 23,
            "used method": [
                "org.springframework.web.util.OpaqueUriComponents:boolean equals(java.lang.Object)",
                "org.springframework.http.HttpHeaders:java.util.Set entrySet()",
                "org.springframework.web.util.HierarchicalUriComponents$FullPathComponent:boolean equals(java.lang.Object)",
                "org.springframework.http.server.ServletServerHttpResponse$ServletResponseHttpHeaders:java.util.List get(java.lang.Object)",
                "org.springframework.web.util.HierarchicalUriComponents$FullPathComponent:int hashCode()",
                "org.springframework.http.HttpStatus:java.lang.String toString()",
                "org.springframework.web.util.HierarchicalUriComponents$PathSegmentComponent:int hashCode()",
                "org.springframework.web.util.UriComponentsBuilder:java.lang.Object clone()",
                "org.springframework.http.HttpHeaders:java.lang.Object put(java.lang.Object,java.lang.Object)",
                "org.springframework.http.HttpHeaders:boolean equals(java.lang.Object)",
                "org.springframework.web.util.OpaqueUriComponents:int hashCode()",
                "org.springframework.web.util.HierarchicalUriComponents$1:boolean equals(java.lang.Object)",
                "org.springframework.web.util.HtmlUtils:java.lang.String htmlEscape(java.lang.String)",
                "org.springframework.web.util.UriComponents:java.lang.String toString()",
                "org.springframework.web.util.HierarchicalUriComponents$1:int hashCode()",
                "org.springframework.web.util.HtmlUtils:void <clinit>()",
                "org.springframework.http.HttpHeaders:int hashCode()",
                "org.springframework.web.util.JavaScriptUtils:java.lang.String javaScriptEscape(java.lang.String)",
                "org.springframework.web.util.HierarchicalUriComponents$PathSegmentComponent:boolean equals(java.lang.Object)",
                "org.springframework.http.HttpHeaders:java.util.List get(java.lang.Object)",
                "org.springframework.http.HttpHeaders:java.lang.String toString()",
                "org.springframework.web.util.HierarchicalUriComponents:boolean equals(java.lang.Object)",
                "org.springframework.web.util.HierarchicalUriComponents:int hashCode()"
            ]
        },
        "org.apache.shiro:shiro-core:1.3.2": {
            "used-method num": 27,
            "used method": [
                "org.apache.shiro.authc.UsernamePasswordToken:java.lang.String toString()",
                "org.apache.shiro.authz.permission.WildcardPermission:int hashCode()",
                "org.apache.shiro.realm.AuthorizingRealm:void <init>()",
                "org.apache.shiro.util.SimpleByteSource:int hashCode()",
                "org.apache.shiro.subject.SimplePrincipalCollection:int hashCode()",
                "org.apache.shiro.authz.SimpleAuthorizationInfo:void addStringPermissions(java.util.Collection)",
                "org.apache.shiro.util.MapContext:java.util.Set entrySet()",
                "org.apache.shiro.authz.SimpleAuthorizationInfo:void <init>()",
                "org.apache.shiro.subject.SimplePrincipalCollection:java.lang.Object getPrimaryPrincipal()",
                "org.apache.shiro.authz.permission.WildcardPermission:boolean equals(java.lang.Object)",
                "org.apache.shiro.authc.SimpleAuthenticationInfo:boolean equals(java.lang.Object)",
                "org.apache.shiro.subject.SimplePrincipalCollection:boolean equals(java.lang.Object)",
                "org.apache.shiro.SecurityUtils:org.apache.shiro.subject.Subject getSubject()",
                "org.apache.shiro.realm.AuthenticatingRealm:void <clinit>()",
                "org.apache.shiro.authc.SimpleAuthenticationInfo:int hashCode()",
                "org.apache.shiro.util.SimpleByteSource:boolean equals(java.lang.Object)",
                "org.apache.shiro.util.SimpleByteSource:java.lang.String toString()",
                "org.apache.shiro.realm.CachingRealm:void <clinit>()",
                "org.apache.shiro.authc.SimpleAuthenticationInfo:java.lang.String toString()",
                "org.apache.shiro.realm.AuthorizingRealm:void <clinit>()",
                "org.apache.shiro.authz.permission.WildcardPermission:java.lang.String toString()",
                "org.apache.shiro.authc.UsernamePasswordToken:java.lang.String getUsername()",
                "org.apache.shiro.util.MapContext:java.lang.Object put(java.lang.Object,java.lang.Object)",
                "org.apache.shiro.authc.UsernamePasswordToken:void <init>(java.lang.String,java.lang.String)",
                "org.apache.shiro.authc.SimpleAuthenticationInfo:void <init>(java.lang.Object,java.lang.Object,java.lang.String)",
                "org.apache.shiro.subject.SimplePrincipalCollection:java.lang.String toString()",
                "org.apache.shiro.util.MapContext:java.lang.Object get(java.lang.Object)"
            ]
        },
        "org.apache.activemq:activemq-all:5.9.0": {
            "used-method num": 19,
            "used method": [
                "org.apache.log4j.Category:boolean isInfoEnabled()",
                "org.apache.log4j.Category:void info(java.lang.Object)",
                "org.slf4j.helpers.NOPLogger:void error(java.lang.String,java.lang.Throwable)",
                "org.apache.log4j.Logger:void <clinit>()",
                "org.slf4j.impl.Log4jLoggerAdapter:void debug(java.lang.String)",
                "org.slf4j.impl.Log4jLoggerAdapter:void error(java.lang.String,java.lang.Throwable)",
                "org.apache.log4j.CategoryKey:boolean equals(java.lang.Object)",
                "org.slf4j.LoggerFactory:void <clinit>()",
                "org.slf4j.impl.Log4jLoggerAdapter:void info(java.lang.String)",
                "org.apache.log4j.Logger:org.apache.log4j.Logger getLogger(java.lang.Class)",
                "org.apache.log4j.Category:void error(java.lang.Object)",
                "org.slf4j.LoggerFactory:org.slf4j.Logger getLogger(java.lang.Class)",
                "org.apache.log4j.config.PropertySetterException:java.lang.String getMessage()",
                "org.slf4j.helpers.NOPLogger:void info(java.lang.String)",
                "org.apache.log4j.Category:void <clinit>()",
                "org.apache.log4j.Priority:java.lang.String toString()",
                "org.slf4j.helpers.NOPLogger:void debug(java.lang.String)",
                "org.apache.log4j.Priority:boolean equals(java.lang.Object)",
                "org.slf4j.helpers.MarkerIgnoringBase:java.lang.String toString()"
            ]
        }
    }
}
{
    "project name": "kongzhidea_netty4-rpc",
    "vulnerable dependencies": {
        "io.netty:netty-all:4.1.14.Final": {
            "used-method num": 110,
            "used method": [
                "io.netty.buffer.EmptyByteBuf:int writerIndex()",
                "io.netty.bootstrap.Bootstrap$3:void run()",
                "io.netty.channel.ChannelOutboundBuffer$2:void run()",
                "io.netty.buffer.AbstractByteBuf:int writerIndex()",
                "io.netty.buffer.SwappedByteBuf:int writerIndex()",
                "io.netty.channel.DefaultChannelPipeline$6:void run()",
                "io.netty.channel.DefaultChannelProgressivePromise:io.netty.channel.Channel channel()",
                "io.netty.handler.codec.MessageToByteEncoder:void <init>()",
                "io.netty.channel.nio.SelectedSelectionKeySet:java.util.Iterator iterator()",
                "io.netty.bootstrap.Bootstrap:void <clinit>()",
                "io.netty.bootstrap.Bootstrap:io.netty.channel.ChannelFuture connect(java.lang.String,int)",
                "io.netty.handler.logging.LoggingHandler:void <init>(io.netty.handler.logging.LogLevel)",
                "io.netty.channel.ChannelOption:void <clinit>()",
                "io.netty.buffer.UnpooledHeapByteBuf:io.netty.buffer.ByteBuf setInt(int,int)",
                "io.netty.buffer.ByteBufInputStream:void <init>(io.netty.buffer.ByteBuf,boolean)",
                "io.netty.buffer.PoolThreadCache$1:void run()",
                "io.netty.buffer.UnpooledUnsafeHeapByteBuf:io.netty.buffer.ByteBuf setInt(int,int)",
                "io.netty.util.concurrent.DefaultPromise$1:void run()",
                "io.netty.bootstrap.ServerBootstrap:io.netty.bootstrap.ServerBootstrap group(io.netty.channel.EventLoopGroup,io.netty.channel.EventLoopGroup)",
                "io.netty.bootstrap.ServerBootstrap:void <init>()",
                "io.netty.handler.codec.ByteToMessageDecoder:void <clinit>()",
                "io.netty.channel.ChannelInboundHandlerAdapter:void channelInactive(io.netty.channel.ChannelHandlerContext)",
                "io.netty.util.concurrent.ScheduledFutureTask:void run()",
                "io.netty.channel.ChannelInboundHandlerAdapter:void exceptionCaught(io.netty.channel.ChannelHandlerContext,java.lang.Throwable)",
                "io.netty.util.ReferenceCountUtil:void <clinit>()",
                "io.netty.channel.FailedChannelFuture:io.netty.channel.ChannelFuture sync()",
                "io.netty.handler.codec.LengthFieldBasedFrameDecoder:java.lang.Object decode(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf)",
                "io.netty.channel.CompleteChannelFuture:io.netty.channel.ChannelFuture addListener(io.netty.util.concurrent.GenericFutureListener)",
                "io.netty.channel.nio.NioEventLoopGroup:void <init>(int,java.util.concurrent.ThreadFactory)",
                "io.netty.channel.VoidChannelPromise:io.netty.channel.VoidChannelPromise addListener(io.netty.util.concurrent.GenericFutureListener)",
                "io.netty.channel.ChannelInitializer:void <clinit>()",
                "io.netty.bootstrap.AbstractBootstrap:io.netty.bootstrap.AbstractBootstrap channel(java.lang.Class)",
                "io.netty.buffer.AbstractByteBuf:io.netty.buffer.ByteBuf setInt(int,int)",
                "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.Channel channel()",
                "io.netty.util.concurrent.DefaultPromise$3:void run()",
                "io.netty.channel.DefaultChannelPromise:io.netty.channel.ChannelPromise addListener(io.netty.util.concurrent.GenericFutureListener)",
                "io.netty.bootstrap.AbstractBootstrap:io.netty.bootstrap.AbstractBootstrap group(io.netty.channel.EventLoopGroup)",
                "io.netty.channel.DefaultChannelPromise:io.netty.channel.ChannelPromise sync()",
                "io.netty.channel.AbstractChannelHandlerContext$AbstractWriteTask:void run()",
                "io.netty.util.ThreadDeathWatcher$Watcher:void run()",
                "io.netty.buffer.ReadOnlyByteBuf:io.netty.buffer.ByteBuf setInt(int,int)",
                "io.netty.buffer.ByteBufOutputStream:void <init>(io.netty.buffer.ByteBuf)",
                "io.netty.buffer.AbstractUnsafeSwappedByteBuf:io.netty.buffer.ByteBuf setInt(int,int)",
                "io.netty.channel.DefaultChannelPromise:io.netty.channel.Channel channel()",
                "io.netty.channel.DefaultChannelPipeline$8:void run()",
                "io.netty.channel.nio.NioEventLoopGroup:void <init>()",
                "io.netty.channel.DefaultChannelPipeline$4:void run()",
                "io.netty.channel.DefaultChannelProgressivePromise:io.netty.channel.ChannelProgressivePromise addListener(io.netty.util.concurrent.GenericFutureListener)",
                "io.netty.buffer.CompositeByteBuf$CompositeByteBufIterator:io.netty.buffer.ByteBuf next()",
                "io.netty.util.concurrent.GlobalEventExecutor$TaskRunner:void run()",
                "io.netty.channel.ChannelInitializer:void <init>()",
                "io.netty.handler.logging.LogLevel:void <clinit>()",
                "io.netty.channel.ChannelOutboundBuffer$3:void run()",
                "io.netty.buffer.WrappedByteBuf:io.netty.buffer.ByteBuf setInt(int,int)",
                "io.netty.util.concurrent.DefaultPromise$2:void run()",
                "io.netty.bootstrap.ServerBootstrap:void <clinit>()",
                "io.netty.bootstrap.AbstractBootstrap:io.netty.bootstrap.AbstractBootstrap handler(io.netty.channel.ChannelHandler)",
                "io.netty.util.concurrent.DefaultThreadFactory:void <clinit>()",
                "io.netty.buffer.ReadOnlyByteBufferBuf:io.netty.buffer.ByteBuf setInt(int,int)",
                "io.netty.util.ReferenceCountUtil:boolean release(java.lang.Object)",
                "io.netty.bootstrap.ServerBootstrap:io.netty.bootstrap.ServerBootstrap childOption(io.netty.channel.ChannelOption,java.lang.Object)",
                "io.netty.buffer.SwappedByteBuf:io.netty.buffer.ByteBuf setInt(int,int)",
                "io.netty.buffer.AbstractUnpooledSlicedByteBuf:io.netty.buffer.ByteBuf setInt(int,int)",
                "io.netty.buffer.ByteBufOutputStream:void write(byte[])",
                "io.netty.buffer.WrappedByteBuf:int writerIndex()",
                "io.netty.util.internal.RecyclableArrayList:boolean add(java.lang.Object)",
                "io.netty.util.NettyRuntime:int availableProcessors()",
                "io.netty.util.NettyRuntime:void <clinit>()",
                "io.netty.channel.CompleteChannelFuture:io.netty.channel.ChannelFuture sync()",
                "io.netty.buffer.AdvancedLeakAwareByteBuf:io.netty.buffer.ByteBuf setInt(int,int)",
                "io.netty.buffer.DuplicatedByteBuf:io.netty.buffer.ByteBuf setInt(int,int)",
                "io.netty.channel.DefaultChannelPipeline$7:void run()",
                "io.netty.bootstrap.AbstractBootstrap:io.netty.channel.ChannelFuture bind(int)",
                "io.netty.bootstrap.AbstractBootstrap:io.netty.bootstrap.AbstractBootstrap option(io.netty.channel.ChannelOption,java.lang.Object)",
                "io.netty.buffer.EmptyByteBuf:io.netty.buffer.ByteBuf setInt(int,int)",
                "io.netty.bootstrap.Bootstrap:void <init>()",
                "io.netty.channel.nio.NioEventLoop$6:void run()",
                "io.netty.util.concurrent.DefaultThreadFactory:void <init>(java.lang.String,boolean)",
                "io.netty.util.internal.ThreadLocalRandom$1:void run()",
                "io.netty.handler.codec.LengthFieldBasedFrameDecoder:void <init>(int,int,int,int,int)",
                "io.netty.channel.DefaultChannelPipeline$5:void run()",
                "io.netty.buffer.PooledSlicedByteBuf:io.netty.buffer.ByteBuf setInt(int,int)",
                "io.netty.channel.DefaultChannelPipeline$3:void run()",
                "io.netty.buffer.UnpooledDirectByteBuf:io.netty.buffer.ByteBuf setInt(int,int)",
                "io.netty.util.concurrent.AbstractScheduledEventExecutor:io.netty.util.concurrent.ScheduledFuture scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)",
                "io.netty.buffer.FixedCompositeByteBuf:io.netty.buffer.ByteBuf setInt(int,int)",
                "io.netty.channel.DefaultChannelProgressivePromise:io.netty.channel.ChannelProgressivePromise sync()",
                "io.netty.handler.codec.CodecOutputList:java.lang.Object get(int)",
                "io.netty.channel.DefaultChannelPipeline$9:void run()",
                "io.netty.channel.DefaultChannelPipeline$PendingHandlerAddedTask:void run()",
                "io.netty.buffer.CompositeByteBuf:io.netty.buffer.CompositeByteBuf setInt(int,int)",
                "io.netty.channel.CompleteChannelFuture:io.netty.channel.Channel channel()",
                "io.netty.bootstrap.ServerBootstrap$1$1:void run()",
                "io.netty.channel.AbstractChannel$AbstractUnsafe$5$1:void run()",
                "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object)",
                "io.netty.util.concurrent.AbstractEventExecutorGroup:io.netty.util.concurrent.ScheduledFuture scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)",
                "io.netty.channel.MultithreadEventLoopGroup:void <clinit>()",
                "io.netty.handler.codec.CodecOutputList:int size()",
                "io.netty.channel.VoidChannelPromise:io.netty.channel.VoidChannelPromise sync()",
                "io.netty.bootstrap.ServerBootstrap:io.netty.bootstrap.ServerBootstrap childHandler(io.netty.channel.ChannelHandler)",
                "io.netty.channel.SimpleChannelInboundHandler:void <init>()",
                "io.netty.util.ReferenceCountUtil$ReleasingTask:void run()",
                "io.netty.channel.ChannelInboundHandlerAdapter:void channelActive(io.netty.channel.ChannelHandlerContext)",
                "io.netty.channel.DefaultChannelPipeline$PendingHandlerRemovedTask:void run()",
                "io.netty.util.concurrent.DefaultPromise$4:void run()",
                "io.netty.buffer.PooledDuplicatedByteBuf:io.netty.buffer.ByteBuf setInt(int,int)",
                "io.netty.channel.DefaultChannelPipeline$2:void run()",
                "io.netty.util.AbstractConstant:void <clinit>()",
                "io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator:void run()",
                "io.netty.buffer.CompositeByteBuf$CompositeByteBufIterator:boolean hasNext()"
            ],
            "CVE": [
                "CVE-2019-16869"
            ],
            "used vul-method": [
                "io.netty.bootstrap.Bootstrap$3:void run()",
                "io.netty.channel.ChannelOutboundBuffer$2:void run()",
                "io.netty.channel.DefaultChannelPipeline$6:void run()",
                "io.netty.bootstrap.Bootstrap:io.netty.channel.ChannelFuture connect(java.lang.String,int)",
                "io.netty.util.concurrent.DefaultPromise$1:void run()",
                "io.netty.channel.ChannelInboundHandlerAdapter:void channelInactive(io.netty.channel.ChannelHandlerContext)",
                "io.netty.util.concurrent.ScheduledFutureTask:void run()",
                "io.netty.channel.ChannelInboundHandlerAdapter:void exceptionCaught(io.netty.channel.ChannelHandlerContext,java.lang.Throwable)",
                "io.netty.channel.CompleteChannelFuture:io.netty.channel.ChannelFuture addListener(io.netty.util.concurrent.GenericFutureListener)",
                "io.netty.channel.nio.NioEventLoopGroup:void <init>(int,java.util.concurrent.ThreadFactory)",
                "io.netty.channel.DefaultChannelPromise:io.netty.channel.ChannelPromise addListener(io.netty.util.concurrent.GenericFutureListener)",
                "io.netty.channel.AbstractChannelHandlerContext$AbstractWriteTask:void run()",
                "io.netty.channel.DefaultChannelPipeline$8:void run()",
                "io.netty.channel.nio.NioEventLoopGroup:void <init>()",
                "io.netty.channel.DefaultChannelPipeline$4:void run()",
                "io.netty.channel.DefaultChannelProgressivePromise:io.netty.channel.ChannelProgressivePromise addListener(io.netty.util.concurrent.GenericFutureListener)",
                "io.netty.channel.ChannelOutboundBuffer$3:void run()",
                "io.netty.util.concurrent.DefaultPromise$2:void run()",
                "io.netty.channel.DefaultChannelPipeline$7:void run()",
                "io.netty.bootstrap.AbstractBootstrap:io.netty.channel.ChannelFuture bind(int)",
                "io.netty.channel.DefaultChannelPipeline$5:void run()",
                "io.netty.channel.DefaultChannelPipeline$3:void run()",
                "io.netty.util.concurrent.AbstractScheduledEventExecutor:io.netty.util.concurrent.ScheduledFuture scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)",
                "io.netty.channel.DefaultChannelPipeline$9:void run()",
                "io.netty.channel.DefaultChannelPipeline$PendingHandlerAddedTask:void run()",
                "io.netty.channel.AbstractChannel$AbstractUnsafe$5$1:void run()",
                "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object)",
                "io.netty.channel.ChannelInboundHandlerAdapter:void channelActive(io.netty.channel.ChannelHandlerContext)",
                "io.netty.channel.DefaultChannelPipeline$PendingHandlerRemovedTask:void run()",
                "io.netty.channel.DefaultChannelPipeline$2:void run()",
                "io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator:void run()"
            ],
            "vul-called frequency": 39,
            "related vul root method": {
                "CVE-2019-16869": [
                    "io.netty.handler.codec.http.HttpObjectDecoder:void splitHeader(io.netty.util.internal.AppendableCharSequence)"
                ]
            },
            "CVE-API": {
                "CVE-2019-16869": [
                    "io.netty.bootstrap.Bootstrap$3:void run()",
                    "io.netty.channel.ChannelOutboundBuffer$2:void run()",
                    "io.netty.channel.DefaultChannelPipeline$6:void run()",
                    "io.netty.bootstrap.Bootstrap:io.netty.channel.ChannelFuture connect(java.lang.String,int)",
                    "io.netty.util.concurrent.DefaultPromise$1:void run()",
                    "io.netty.channel.ChannelInboundHandlerAdapter:void channelInactive(io.netty.channel.ChannelHandlerContext)",
                    "io.netty.util.concurrent.ScheduledFutureTask:void run()",
                    "io.netty.channel.ChannelInboundHandlerAdapter:void exceptionCaught(io.netty.channel.ChannelHandlerContext,java.lang.Throwable)",
                    "io.netty.channel.CompleteChannelFuture:io.netty.channel.ChannelFuture addListener(io.netty.util.concurrent.GenericFutureListener)",
                    "io.netty.channel.nio.NioEventLoopGroup:void <init>(int,java.util.concurrent.ThreadFactory)",
                    "io.netty.channel.DefaultChannelPromise:io.netty.channel.ChannelPromise addListener(io.netty.util.concurrent.GenericFutureListener)",
                    "io.netty.channel.AbstractChannelHandlerContext$AbstractWriteTask:void run()",
                    "io.netty.channel.DefaultChannelPipeline$8:void run()",
                    "io.netty.channel.nio.NioEventLoopGroup:void <init>()",
                    "io.netty.channel.DefaultChannelPipeline$4:void run()",
                    "io.netty.channel.DefaultChannelProgressivePromise:io.netty.channel.ChannelProgressivePromise addListener(io.netty.util.concurrent.GenericFutureListener)",
                    "io.netty.channel.ChannelOutboundBuffer$3:void run()",
                    "io.netty.util.concurrent.DefaultPromise$2:void run()",
                    "io.netty.channel.DefaultChannelPipeline$7:void run()",
                    "io.netty.bootstrap.AbstractBootstrap:io.netty.channel.ChannelFuture bind(int)",
                    "io.netty.channel.DefaultChannelPipeline$5:void run()",
                    "io.netty.channel.DefaultChannelPipeline$3:void run()",
                    "io.netty.util.concurrent.AbstractScheduledEventExecutor:io.netty.util.concurrent.ScheduledFuture scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)",
                    "io.netty.channel.DefaultChannelPipeline$9:void run()",
                    "io.netty.channel.DefaultChannelPipeline$PendingHandlerAddedTask:void run()",
                    "io.netty.channel.AbstractChannel$AbstractUnsafe$5$1:void run()",
                    "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object)",
                    "io.netty.channel.ChannelInboundHandlerAdapter:void channelActive(io.netty.channel.ChannelHandlerContext)",
                    "io.netty.channel.DefaultChannelPipeline$PendingHandlerRemovedTask:void run()",
                    "io.netty.channel.DefaultChannelPipeline$2:void run()",
                    "io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator:void run()"
                ]
            }
        },
        "com.alibaba:fastjson:1.2.48": {
            "used-method num": 0,
            "used method": []
        },
        "org.springframework:spring-webmvc:4.2.5.RELEASE": {
            "used-method num": 0,
            "used method": []
        },
        "org.apache.zookeeper:zookeeper:3.4.6": {
            "used-method num": 9,
            "used method": [
                "org.apache.zookeeper.Shell$1:void run()",
                "org.apache.zookeeper.ClientCnxn$SendThread:void run()",
                "org.apache.zookeeper.KeeperException:java.lang.String getMessage()",
                "org.apache.zookeeper.WatchedEvent:org.apache.zookeeper.Watcher$Event$EventType getType()",
                "org.ietf.jgss.GSSException:java.lang.String getMessage()",
                "org.apache.zookeeper.ClientCnxn$EventThread:void run()",
                "org.apache.zookeeper.Watcher$Event$EventType:void <clinit>()",
                "org.apache.zookeeper.Login$1:void run()",
                "org.apache.zookeeper.WatchedEvent:java.lang.String getPath()"
            ]
        }
    }
}
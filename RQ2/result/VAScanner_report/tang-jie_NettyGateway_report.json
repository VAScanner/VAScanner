{
    "project name": "tang-jie_NettyGateway",
    "vulnerable dependencies": {
        "io.netty:netty-all:4.1.0.Final": {
            "used-method num": 157,
            "used method": [
                "io.netty.util.concurrent.DefaultThreadFactory:void <init>(java.lang.String,int)",
                "io.netty.util.internal.ReadOnlyIterator:java.lang.Object next()",
                "io.netty.handler.codec.http.DefaultHttpRequest:java.lang.String toString()",
                "io.netty.buffer.WrappedByteBuf:boolean isReadable()",
                "io.netty.handler.codec.http.HttpUtil:boolean is100ContinueExpected(io.netty.handler.codec.http.HttpMessage)",
                "io.netty.handler.codec.http.HttpHeaders:io.netty.handler.codec.http.HttpHeaders set(java.lang.CharSequence,java.lang.Object)",
                "io.netty.util.concurrent.AbstractFuture:java.lang.Object get(long,java.util.concurrent.TimeUnit)",
                "io.netty.util.concurrent.AbstractEventExecutor:io.netty.util.concurrent.Future submit(java.util.concurrent.Callable)",
                "io.netty.handler.codec.http.HttpRequestDecoder:void <init>()",
                "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture close()",
                "io.netty.buffer.Unpooled:void <clinit>()",
                "io.netty.util.Signal:java.lang.String name()",
                "io.netty.bootstrap.AbstractBootstrap:io.netty.bootstrap.AbstractBootstrap channelFactory(io.netty.channel.ChannelFactory)",
                "io.netty.buffer.EmptyByteBuf:int readableBytes()",
                "io.netty.buffer.FixedCompositeByteBuf:java.lang.String toString()",
                "io.netty.util.concurrent.DefaultPromise:java.lang.String toString()",
                "io.netty.channel.socket.nio.NioServerSocketChannel:void <init>(java.nio.channels.spi.SelectorProvider)",
                "io.netty.handler.codec.http.HttpMethod:java.lang.String toString()",
                "io.netty.util.internal.RecyclableArrayList:boolean add(java.lang.Object)",
                "io.netty.channel.DefaultChannelProgressivePromise:io.netty.channel.Channel channel()",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8$KeySetView:java.util.Iterator iterator()",
                "io.netty.buffer.WrappedByteBuf:java.lang.String toString()",
                "io.netty.channel.nio.SelectedSelectionKeySet:java.util.Iterator iterator()",
                "io.netty.handler.codec.CodecOutputList:void clear()",
                "io.netty.handler.codec.CodecOutputList:boolean add(java.lang.Object)",
                "io.netty.handler.codec.http.HttpResponseEncoder:void <init>()",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8$ValueIterator:java.lang.Object next()",
                "io.netty.util.AbstractConstant:java.lang.String toString()",
                "io.netty.channel.CompleteChannelFuture:io.netty.channel.ChannelFuture sync()",
                "io.netty.handler.codec.http.DefaultLastHttpContent:java.lang.String toString()",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8$MapEntry:java.lang.String toString()",
                "io.netty.util.concurrent.CompleteFuture:io.netty.util.concurrent.Future addListener(io.netty.util.concurrent.GenericFutureListener)",
                "io.netty.handler.codec.http.DefaultFullHttpRequest:io.netty.buffer.ByteBuf content()",
                "io.netty.buffer.CompositeByteBuf:java.lang.String toString()",
                "io.netty.handler.logging.LoggingHandler:void <init>(io.netty.handler.logging.LogLevel)",
                "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture write(java.lang.Object)",
                "io.netty.buffer.WrappedByteBuf:java.lang.String toString(java.nio.charset.Charset)",
                "io.netty.util.concurrent.FailedFuture:boolean isSuccess()",
                "io.netty.util.internal.chmv8.LongAdderV8:java.lang.String toString()",
                "io.netty.bootstrap.AbstractBootstrap:io.netty.channel.ChannelFuture bind(int)",
                "io.netty.handler.codec.http.DefaultHttpContent:java.lang.String toString()",
                "io.netty.channel.SucceededChannelFuture:boolean isSuccess()",
                "io.netty.buffer.WrappedByteBuf:int readableBytes()",
                "io.netty.buffer.AbstractByteBufAllocator:java.lang.String toString()",
                "io.netty.util.AsciiString:java.lang.String toString()",
                "io.netty.util.concurrent.GlobalEventExecutor:void <clinit>()",
                "io.netty.handler.codec.http.DefaultHttpObject:io.netty.handler.codec.DecoderResult decoderResult()",
                "io.netty.handler.codec.http.DefaultHttpRequest:java.lang.String uri()",
                "io.netty.bootstrap.ServerBootstrapConfig:java.lang.String toString()",
                "io.netty.util.ResourceLeakDetector$DefaultResourceLeak:java.lang.String toString()",
                "io.netty.buffer.Unpooled:io.netty.buffer.ByteBuf copiedBuffer(java.lang.CharSequence,java.nio.charset.Charset)",
                "io.netty.bootstrap.ServerBootstrap:io.netty.bootstrap.ServerBootstrap group(io.netty.channel.EventLoopGroup,io.netty.channel.EventLoopGroup)",
                "io.netty.handler.codec.DefaultHeaders$HeaderIterator:boolean hasNext()",
                "io.netty.handler.codec.DefaultHeaders$HeaderEntry:java.lang.String toString()",
                "io.netty.bootstrap.ServerBootstrap:void <init>()",
                "io.netty.handler.codec.http.HttpUtil:boolean isKeepAlive(io.netty.handler.codec.http.HttpMessage)",
                "io.netty.buffer.EmptyByteBuf:java.lang.String toString(java.nio.charset.Charset)",
                "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelHandlerContext flush()",
                "io.netty.buffer.PoolSubpage:java.lang.String toString()",
                "io.netty.channel.AbstractChannelHandlerContext:java.lang.String toString()",
                "io.netty.handler.codec.ByteToMessageDecoder:void <clinit>()",
                "io.netty.buffer.AbstractByteBuf:java.lang.String toString(java.nio.charset.Charset)",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8:java.lang.String toString()",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8$EntrySetView:java.util.Iterator iterator()",
                "io.netty.handler.codec.http.DefaultFullHttpRequest:java.lang.String toString()",
                "io.netty.channel.FailedChannelFuture:io.netty.channel.ChannelFuture sync()",
                "io.netty.handler.codec.http.HttpVersion:java.lang.String toString()",
                "io.netty.buffer.SwappedByteBuf:int readableBytes()",
                "io.netty.handler.codec.http.DefaultFullHttpResponse:java.lang.String toString()",
                "io.netty.channel.CompleteChannelFuture:io.netty.channel.ChannelFuture addListener(io.netty.util.concurrent.GenericFutureListener)",
                "io.netty.channel.WriteBufferWaterMark:java.lang.String toString()",
                "io.netty.channel.nio.NioEventLoopGroup:void <init>(int,java.util.concurrent.ThreadFactory)",
                "io.netty.util.concurrent.DefaultPromise:java.lang.Throwable cause()",
                "io.netty.channel.DefaultChannelId:java.lang.String toString()",
                "io.netty.handler.codec.http.HttpHeaderNames:void <clinit>()",
                "io.netty.channel.VoidChannelPromise:io.netty.channel.VoidChannelPromise addListener(io.netty.util.concurrent.GenericFutureListener)",
                "io.netty.buffer.EmptyByteBuf:java.lang.String toString()",
                "io.netty.channel.ChannelInitializer:void <clinit>()",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8$Node:java.lang.String toString()",
                "io.netty.buffer.SwappedByteBuf:java.lang.String toString(java.nio.charset.Charset)",
                "io.netty.handler.codec.DecoderResult:java.lang.String toString()",
                "io.netty.channel.DefaultChannelPromise:io.netty.channel.ChannelPromise addListener(io.netty.util.concurrent.GenericFutureListener)",
                "io.netty.util.Signal:io.netty.util.Signal valueOf(java.lang.String)",
                "io.netty.util.internal.chmv8.ForkJoinPool:java.lang.String toString()",
                "io.netty.util.concurrent.DefaultPromise:io.netty.util.concurrent.Promise addListener(io.netty.util.concurrent.GenericFutureListener)",
                "io.netty.util.ReferenceCountUtil$ReleasingTask:java.lang.String toString()",
                "io.netty.util.Signal:java.lang.String toString()",
                "io.netty.handler.codec.http.HttpResponseStatus:void <clinit>()",
                "io.netty.channel.SucceededChannelFuture:java.lang.Throwable cause()",
                "io.netty.channel.DefaultChannelPromise:io.netty.channel.ChannelPromise sync()",
                "io.netty.bootstrap.AbstractBootstrap:java.lang.String toString()",
                "io.netty.channel.AbstractChannel:java.lang.String toString()",
                "io.netty.handler.codec.DecoderResult:boolean isSuccess()",
                "io.netty.util.internal.AppendableCharSequence:java.lang.String toString()",
                "io.netty.handler.codec.http.HttpVersion:void <clinit>()",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8$KeyIterator:java.lang.Object next()",
                "io.netty.handler.codec.http.DefaultFullHttpResponse:void <init>(io.netty.handler.codec.http.HttpVersion,io.netty.handler.codec.http.HttpResponseStatus,io.netty.buffer.ByteBuf)",
                "io.netty.handler.codec.HeadersUtils$DelegatingStringSet:java.util.Iterator iterator()",
                "io.netty.channel.DefaultChannelProgressivePromise:io.netty.channel.ChannelProgressivePromise sync()",
                "io.netty.util.internal.logging.AbstractInternalLogger:java.lang.String toString()",
                "io.netty.handler.codec.http.HttpHeaderValues:void <clinit>()",
                "io.netty.channel.DefaultChannelPromise:io.netty.channel.Channel channel()",
                "io.netty.handler.codec.DefaultHeaders$HeaderIterator:java.util.Map$Entry next()",
                "io.netty.channel.AbstractChannel:io.netty.channel.ChannelPipeline pipeline()",
                "io.netty.buffer.EmptyByteBuf:boolean isReadable()",
                "io.netty.handler.codec.http.HttpObjectEncoder:void <clinit>()",
                "io.netty.buffer.SwappedByteBuf:java.lang.String toString()",
                "io.netty.channel.AbstractChannel:io.netty.channel.ChannelFuture closeFuture()",
                "io.netty.channel.nio.AbstractNioChannel:void <clinit>()",
                "io.netty.util.concurrent.FailedFuture:java.lang.Throwable cause()",
                "io.netty.handler.codec.HeadersUtils$StringEntryIterator:java.util.Map$Entry next()",
                "io.netty.channel.CompleteChannelFuture:io.netty.channel.Channel channel()",
                "io.netty.channel.socket.nio.NioServerSocketChannel:void <clinit>()",
                "io.netty.handler.codec.http.DefaultFullHttpResponse:void <init>(io.netty.handler.codec.http.HttpVersion,io.netty.handler.codec.http.HttpResponseStatus)",
                "io.netty.util.internal.ReadOnlyIterator:boolean hasNext()",
                "io.netty.handler.codec.http.HttpUtil:void <clinit>()",
                "io.netty.handler.codec.http.HttpResponseStatus:java.lang.String toString()",
                "io.netty.buffer.AbstractByteBuf:int readableBytes()",
                "io.netty.util.DefaultAttributeMap:void <clinit>()",
                "io.netty.buffer.AdvancedLeakAwareByteBuf:java.lang.String toString(java.nio.charset.Charset)",
                "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object)",
                "io.netty.channel.DefaultChannelProgressivePromise:io.netty.channel.ChannelProgressivePromise addListener(io.netty.util.concurrent.GenericFutureListener)",
                "io.netty.buffer.AbstractByteBuf:java.lang.String toString()",
                "io.netty.util.concurrent.DefaultPromise:boolean isSuccess()",
                "io.netty.buffer.PoolChunk:java.lang.String toString()",
                "io.netty.handler.codec.http.HttpObjectDecoder:void <clinit>()",
                "io.netty.handler.codec.http.DefaultHttpContent:io.netty.buffer.ByteBuf content()",
                "io.netty.handler.codec.http.DefaultHttpHeaders:io.netty.handler.codec.http.HttpHeaders set(java.lang.CharSequence,java.lang.Object)",
                "io.netty.buffer.CompositeByteBuf$CompositeByteBufIterator:io.netty.buffer.ByteBuf next()",
                "io.netty.channel.MultithreadEventLoopGroup:void <clinit>()",
                "io.netty.channel.ChannelInitializer:void <init>()",
                "io.netty.channel.VoidChannelPromise:io.netty.channel.VoidChannelPromise sync()",
                "io.netty.util.concurrent.AbstractScheduledEventExecutor:void <clinit>()",
                "io.netty.buffer.PoolArena:java.lang.String toString()",
                "io.netty.bootstrap.ServerBootstrap:io.netty.bootstrap.ServerBootstrap childHandler(io.netty.channel.ChannelHandler)",
                "io.netty.channel.SimpleChannelInboundHandler:void <init>()",
                "io.netty.buffer.SwappedByteBuf:boolean isReadable()",
                "io.netty.handler.logging.LogLevel:void <clinit>()",
                "io.netty.handler.codec.http.DefaultHttpHeaders:io.netty.handler.codec.http.HttpHeaders setInt(java.lang.CharSequence,int)",
                "io.netty.channel.ChannelFutureListener:void <clinit>()",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8$BaseIterator:boolean hasNext()",
                "io.netty.handler.codec.HeadersUtils$StringEntry:java.lang.String toString()",
                "io.netty.handler.codec.DefaultHeaders:java.lang.String toString()",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8$CollectionView:java.lang.String toString()",
                "io.netty.util.Signal:void <clinit>()",
                "io.netty.channel.AbstractChannel:void <clinit>()",
                "io.netty.handler.codec.http.DefaultHttpMessage:io.netty.handler.codec.http.HttpHeaders headers()",
                "io.netty.buffer.AbstractByteBuf:boolean isReadable()",
                "io.netty.util.internal.chmv8.ConcurrentHashMapV8$EntryIterator:java.util.Map$Entry next()",
                "io.netty.handler.codec.http.DefaultFullHttpResponse:io.netty.buffer.ByteBuf content()",
                "io.netty.bootstrap.ServerBootstrap:void <clinit>()",
                "io.netty.bootstrap.AbstractBootstrap:io.netty.bootstrap.AbstractBootstrap handler(io.netty.channel.ChannelHandler)",
                "io.netty.buffer.CompositeByteBuf$CompositeByteBufIterator:boolean hasNext()",
                "io.netty.util.concurrent.PromiseTask$RunnableAdapter:java.lang.String toString()",
                "io.netty.util.concurrent.DefaultThreadFactory:void <clinit>()",
                "io.netty.handler.codec.HeadersUtils$StringEntryIterator:boolean hasNext()",
                "io.netty.handler.codec.http.EmptyHttpHeaders:io.netty.handler.codec.http.HttpHeaders setInt(java.lang.CharSequence,int)"
            ],
            "CVE": [
                "CVE-2019-16869"
            ],
            "used vul-method": [
                "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture close()",
                "io.netty.util.concurrent.CompleteFuture:io.netty.util.concurrent.Future addListener(io.netty.util.concurrent.GenericFutureListener)",
                "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture write(java.lang.Object)",
                "io.netty.bootstrap.AbstractBootstrap:io.netty.channel.ChannelFuture bind(int)",
                "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelHandlerContext flush()",
                "io.netty.channel.CompleteChannelFuture:io.netty.channel.ChannelFuture addListener(io.netty.util.concurrent.GenericFutureListener)",
                "io.netty.channel.nio.NioEventLoopGroup:void <init>(int,java.util.concurrent.ThreadFactory)",
                "io.netty.channel.DefaultChannelPromise:io.netty.channel.ChannelPromise addListener(io.netty.util.concurrent.GenericFutureListener)",
                "io.netty.util.concurrent.DefaultPromise:io.netty.util.concurrent.Promise addListener(io.netty.util.concurrent.GenericFutureListener)",
                "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object)",
                "io.netty.channel.DefaultChannelProgressivePromise:io.netty.channel.ChannelProgressivePromise addListener(io.netty.util.concurrent.GenericFutureListener)"
            ],
            "vul-called frequency": 16,
            "related vul root method": {
                "CVE-2019-16869": [
                    "io.netty.handler.codec.http.HttpObjectDecoder:void splitHeader(io.netty.util.internal.AppendableCharSequence)"
                ]
            },
            "CVE-API": {
                "CVE-2019-16869": [
                    "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture close()",
                    "io.netty.util.concurrent.CompleteFuture:io.netty.util.concurrent.Future addListener(io.netty.util.concurrent.GenericFutureListener)",
                    "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture write(java.lang.Object)",
                    "io.netty.bootstrap.AbstractBootstrap:io.netty.channel.ChannelFuture bind(int)",
                    "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelHandlerContext flush()",
                    "io.netty.channel.CompleteChannelFuture:io.netty.channel.ChannelFuture addListener(io.netty.util.concurrent.GenericFutureListener)",
                    "io.netty.channel.nio.NioEventLoopGroup:void <init>(int,java.util.concurrent.ThreadFactory)",
                    "io.netty.channel.DefaultChannelPromise:io.netty.channel.ChannelPromise addListener(io.netty.util.concurrent.GenericFutureListener)",
                    "io.netty.util.concurrent.DefaultPromise:io.netty.util.concurrent.Promise addListener(io.netty.util.concurrent.GenericFutureListener)",
                    "io.netty.channel.AbstractChannelHandlerContext:io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object)",
                    "io.netty.channel.DefaultChannelProgressivePromise:io.netty.channel.ChannelProgressivePromise addListener(io.netty.util.concurrent.GenericFutureListener)"
                ]
            }
        }
    }
}
{
    "project name": "DovakinMQ",
    "vulnerable dependencies": {
        "io.netty:netty-all:4.1.13.Final": {
            "used-method num": 251,
            "CVE": [
                "CVE-2019-16869"
            ],
            "used vul-method": [
                "io.netty.handler.codec.mqtt.MqttPublishMessage:io.netty.handler.codec.mqtt.MqttPublishMessage retain()",
                "io.netty.handler.codec.mqtt.MqttEncoder:void encode(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.mqtt.MqttMessage,java.util.List)",
                "io.netty.handler.codec.mqtt.MqttEncoder:io.netty.buffer.ByteBuf encodeConnectMessage(io.netty.buffer.ByteBufAllocator,io.netty.handler.codec.mqtt.MqttConnectMessage)",
                "io.netty.util.internal.StringUtil:java.lang.String simpleClassName(java.lang.Object)",
                "io.netty.handler.codec.mqtt.MqttDecoder:void <init>()",
                "io.netty.handler.codec.mqtt.MqttDecoder:io.netty.handler.codec.mqtt.MqttDecoder$Result decodeConnectionPayload(io.netty.buffer.ByteBuf,io.netty.handler.codec.mqtt.MqttConnectVariableHeader)",
                "io.netty.handler.codec.ReplayingDecoder:void checkpoint(java.lang.Object)",
                "io.netty.handler.codec.mqtt.MqttConnectMessage:void <init>(io.netty.handler.codec.mqtt.MqttFixedHeader,io.netty.handler.codec.mqtt.MqttConnectVariableHeader,io.netty.handler.codec.mqtt.MqttConnectPayload)",
                "io.netty.handler.codec.mqtt.MqttPublishMessage:io.netty.util.ReferenceCounted retain(int)",
                "io.netty.handler.codec.mqtt.MqttCodecUtil:io.netty.handler.codec.mqtt.MqttFixedHeader validateFixedHeader(io.netty.handler.codec.mqtt.MqttFixedHeader)",
                "io.netty.handler.codec.mqtt.MqttMessageIdVariableHeader:java.lang.String toString()",
                "io.netty.handler.codec.mqtt.MqttSubscribePayload:java.lang.String toString()",
                "io.netty.handler.codec.mqtt.MqttCodecUtil$1:void <clinit>()",
                "io.netty.handler.codec.mqtt.MqttPublishMessage:io.netty.util.ReferenceCounted touch(java.lang.Object)",
                "io.netty.handler.codec.mqtt.MqttPublishMessage:io.netty.handler.codec.mqtt.MqttPublishMessage retain(int)",
                "io.netty.handler.codec.mqtt.MqttMessageBuilders$PublishBuilder:io.netty.handler.codec.mqtt.MqttPublishMessage build()",
                "io.netty.handler.codec.mqtt.MqttDecoder:io.netty.handler.codec.mqtt.MqttDecoder$Result decodeConnAckVariableHeader(io.netty.buffer.ByteBuf)",
                "io.netty.handler.codec.mqtt.MqttMessage:void <init>(io.netty.handler.codec.mqtt.MqttFixedHeader,java.lang.Object,java.lang.Object)",
                "io.netty.handler.codec.mqtt.MqttPublishMessage:io.netty.buffer.ByteBufHolder touch()",
                "io.netty.handler.codec.mqtt.MqttEncoder:io.netty.buffer.ByteBuf encodeConnAckMessage(io.netty.buffer.ByteBufAllocator,io.netty.handler.codec.mqtt.MqttConnAckMessage)",
                "io.netty.handler.codec.mqtt.MqttPublishMessage:io.netty.buffer.ByteBufHolder retain()",
                "io.netty.handler.codec.mqtt.MqttConnAckVariableHeader:java.lang.String toString()",
                "io.netty.handler.codec.mqtt.MqttConnectReturnCode:io.netty.handler.codec.mqtt.MqttConnectReturnCode[] values()",
                "io.netty.handler.codec.mqtt.MqttMessage:java.lang.String toString()",
                "io.netty.handler.codec.mqtt.MqttPublishMessage:io.netty.buffer.ByteBufHolder replace(io.netty.buffer.ByteBuf)",
                "io.netty.handler.codec.mqtt.MqttPubAckMessage:void <init>(io.netty.handler.codec.mqtt.MqttFixedHeader,io.netty.handler.codec.mqtt.MqttMessageIdVariableHeader)",
                "io.netty.handler.codec.mqtt.MqttDecoder:io.netty.handler.codec.mqtt.MqttDecoder$Result decodeMsbLsb(io.netty.buffer.ByteBuf)",
                "io.netty.handler.codec.mqtt.MqttEncoder:io.netty.buffer.ByteBuf encodeUnsubscribeMessage(io.netty.buffer.ByteBufAllocator,io.netty.handler.codec.mqtt.MqttUnsubscribeMessage)",
                "io.netty.handler.codec.mqtt.MqttTopicSubscription:java.lang.String toString()",
                "io.netty.handler.codec.mqtt.MqttPublishMessage:io.netty.handler.codec.mqtt.MqttPublishMessage touch(java.lang.Object)",
                "io.netty.handler.codec.MessageToMessageEncoder:void <init>()",
                "io.netty.handler.codec.mqtt.MqttEncoder:io.netty.buffer.ByteBuf doEncode(io.netty.buffer.ByteBufAllocator,io.netty.handler.codec.mqtt.MqttMessage)",
                "io.netty.handler.codec.mqtt.MqttConnectReturnCode:io.netty.handler.codec.mqtt.MqttConnectReturnCode valueOf(byte)",
                "io.netty.handler.codec.mqtt.MqttMessageBuilders$ConnectBuilder:io.netty.handler.codec.mqtt.MqttConnectMessage build()",
                "io.netty.handler.codec.mqtt.MqttMessageFactory$1:void <clinit>()",
                "io.netty.handler.codec.mqtt.MqttPublishMessage:io.netty.buffer.ByteBufHolder touch(java.lang.Object)",
                "io.netty.handler.codec.mqtt.MqttPublishMessage:io.netty.buffer.ByteBufHolder retain(int)",
                "io.netty.handler.codec.mqtt.MqttSubAckPayload:void <init>(java.lang.Iterable)",
                "io.netty.handler.codec.mqtt.MqttDecoder:io.netty.handler.codec.mqtt.MqttDecoder$Result decodeMessageId(io.netty.buffer.ByteBuf)",
                "io.netty.channel.nio.NioEventLoopGroup:void <init>()",
                "io.netty.handler.codec.mqtt.MqttCodecUtil:io.netty.handler.codec.mqtt.MqttFixedHeader resetUnusedFields(io.netty.handler.codec.mqtt.MqttFixedHeader)",
                "io.netty.handler.codec.mqtt.MqttDecoder:io.netty.handler.codec.mqtt.MqttMessage invalidMessage(java.lang.Throwable)",
                "io.netty.handler.codec.mqtt.MqttPublishMessage:boolean release(int)",
                "io.netty.handler.codec.mqtt.MqttPublishMessage:io.netty.util.ReferenceCounted retain()",
                "io.netty.handler.codec.mqtt.MqttDecoder:io.netty.handler.codec.mqtt.MqttDecoder$Result decodeString(io.netty.buffer.ByteBuf)",
                "io.netty.handler.codec.mqtt.MqttPublishVariableHeader:java.lang.String toString()",
                "io.netty.channel.ChannelInitializer:void <init>()",
                "io.netty.handler.codec.mqtt.MqttPublishMessage:void <init>(io.netty.handler.codec.mqtt.MqttFixedHeader,io.netty.handler.codec.mqtt.MqttPublishVariableHeader,io.netty.buffer.ByteBuf)",
                "io.netty.handler.codec.mqtt.MqttConnectVariableHeader:java.lang.String toString()",
                "io.netty.handler.codec.mqtt.MqttSubscribeMessage:void <init>(io.netty.handler.codec.mqtt.MqttFixedHeader,io.netty.handler.codec.mqtt.MqttMessageIdVariableHeader,io.netty.handler.codec.mqtt.MqttSubscribePayload)",
                "io.netty.handler.codec.mqtt.MqttVersion:io.netty.handler.codec.mqtt.MqttVersion fromProtocolNameAndLevel(java.lang.String,byte)",
                "io.netty.handler.codec.mqtt.MqttConnAckMessage:void <init>(io.netty.handler.codec.mqtt.MqttFixedHeader,io.netty.handler.codec.mqtt.MqttConnAckVariableHeader)",
                "io.netty.handler.codec.mqtt.MqttFixedHeader:java.lang.String toString()",
                "io.netty.handler.codec.mqtt.MqttPublishMessage:io.netty.buffer.ByteBufHolder copy()",
                "io.netty.handler.codec.mqtt.MqttPublishMessage:boolean release()",
                "io.netty.handler.codec.mqtt.MqttDecoder:io.netty.handler.codec.mqtt.MqttDecoder$Result decodeString(io.netty.buffer.ByteBuf,int,int)",
                "io.netty.handler.codec.mqtt.MqttVersion:io.netty.handler.codec.mqtt.MqttVersion[] values()",
                "io.netty.handler.codec.mqtt.MqttDecoder:io.netty.handler.codec.mqtt.MqttDecoder$Result decodePublishVariableHeader(io.netty.buffer.ByteBuf,io.netty.handler.codec.mqtt.MqttFixedHeader)",
                "io.netty.buffer.Unpooled:io.netty.buffer.ByteBuf buffer()",
                "io.netty.handler.codec.mqtt.MqttMessageBuilders$SubscribeBuilder:io.netty.handler.codec.mqtt.MqttSubscribeMessage build()",
                "io.netty.handler.codec.mqtt.MqttUnsubAckMessage:void <init>(io.netty.handler.codec.mqtt.MqttFixedHeader,io.netty.handler.codec.mqtt.MqttMessageIdVariableHeader)",
                "io.netty.handler.codec.mqtt.MqttPublishMessage:io.netty.handler.codec.mqtt.MqttPublishMessage replace(io.netty.buffer.ByteBuf)",
                "io.netty.handler.codec.mqtt.MqttPublishMessage:io.netty.handler.codec.mqtt.MqttPublishMessage copy()",
                "io.netty.handler.codec.mqtt.MqttDecoder:io.netty.handler.codec.mqtt.MqttFixedHeader decodeFixedHeader(io.netty.buffer.ByteBuf)",
                "io.netty.handler.codec.mqtt.MqttPublishMessage:io.netty.util.ReferenceCounted touch()",
                "io.netty.handler.codec.DecoderResult:io.netty.handler.codec.DecoderResult failure(java.lang.Throwable)",
                "io.netty.handler.codec.mqtt.MqttDecoder:io.netty.handler.codec.mqtt.MqttDecoder$Result decodeVariableHeader(io.netty.buffer.ByteBuf,io.netty.handler.codec.mqtt.MqttFixedHeader)",
                "io.netty.handler.codec.mqtt.MqttPublishMessage:io.netty.buffer.ByteBufHolder duplicate()",
                "io.netty.handler.codec.mqtt.MqttSubAckMessage:void <init>(io.netty.handler.codec.mqtt.MqttFixedHeader,io.netty.handler.codec.mqtt.MqttMessageIdVariableHeader,io.netty.handler.codec.mqtt.MqttSubAckPayload)",
                "io.netty.handler.codec.mqtt.MqttEncoder:io.netty.buffer.ByteBuf encodePublishMessage(io.netty.buffer.ByteBufAllocator,io.netty.handler.codec.mqtt.MqttPublishMessage)",
                "io.netty.handler.codec.mqtt.MqttDecoder$1:void <clinit>()",
                "io.netty.handler.codec.mqtt.MqttMessageFactory:io.netty.handler.codec.mqtt.MqttMessage newInvalidMessage(java.lang.Throwable)",
                "io.netty.handler.codec.mqtt.MqttEncoder:void writeVariableLengthInt(io.netty.buffer.ByteBuf,int)",
                "io.netty.handler.codec.mqtt.MqttMessage:void <init>(io.netty.handler.codec.mqtt.MqttFixedHeader)",
                "io.netty.handler.codec.mqtt.MqttDecoder:io.netty.handler.codec.mqtt.MqttDecoder$Result decodeMsbLsb(io.netty.buffer.ByteBuf,int,int)",
                "io.netty.handler.codec.mqtt.MqttConnectReturnCode:void <clinit>()",
                "io.netty.handler.codec.mqtt.MqttEncoder:void <init>()",
                "io.netty.handler.codec.mqtt.MqttDecoder:io.netty.handler.codec.mqtt.MqttDecoder$Result decodeSubscribePayload(io.netty.buffer.ByteBuf,int)",
                "io.netty.handler.codec.mqtt.MqttDecoder:io.netty.handler.codec.mqtt.MqttDecoder$Result decodeByteArray(io.netty.buffer.ByteBuf)",
                "io.netty.handler.codec.mqtt.MqttDecoder:void <init>(int)",
                "io.netty.handler.codec.mqtt.MqttQoS:io.netty.handler.codec.mqtt.MqttQoS[] values()",
                "io.netty.handler.codec.mqtt.MqttEncoder:io.netty.buffer.ByteBuf encodeSubAckMessage(io.netty.buffer.ByteBufAllocator,io.netty.handler.codec.mqtt.MqttSubAckMessage)",
                "io.netty.handler.codec.mqtt.MqttDecoder:io.netty.handler.codec.mqtt.MqttDecoder$Result decodeUnsubscribePayload(io.netty.buffer.ByteBuf,int)",
                "io.netty.handler.codec.mqtt.MqttEncoder:void <clinit>()",
                "io.netty.handler.codec.mqtt.MqttDecoder$DecoderState:io.netty.handler.codec.mqtt.MqttDecoder$DecoderState[] values()",
                "io.netty.handler.codec.mqtt.MqttMessageType:io.netty.handler.codec.mqtt.MqttMessageType[] values()",
                "io.netty.handler.codec.mqtt.MqttMessageType:io.netty.handler.codec.mqtt.MqttMessageType valueOf(int)",
                "io.netty.handler.codec.mqtt.MqttDecoder:io.netty.handler.codec.mqtt.MqttDecoder$Result decodeMessageIdVariableHeader(io.netty.buffer.ByteBuf)",
                "io.netty.handler.codec.mqtt.MqttPublishMessage:io.netty.handler.codec.mqtt.MqttPublishMessage duplicate()",
                "io.netty.handler.codec.mqtt.MqttEncoder:io.netty.buffer.ByteBuf encodeSubscribeMessage(io.netty.buffer.ByteBufAllocator,io.netty.handler.codec.mqtt.MqttSubscribeMessage)",
                "io.netty.handler.codec.mqtt.MqttEncoder:io.netty.buffer.ByteBuf encodeMessageWithOnlySingleByteFixedHeader(io.netty.buffer.ByteBufAllocator,io.netty.handler.codec.mqtt.MqttMessage)",
                "io.netty.handler.codec.mqtt.MqttMessageBuilders$ConnAckBuilder:io.netty.handler.codec.mqtt.MqttConnAckMessage build()",
                "io.netty.handler.codec.mqtt.MqttEncoder:io.netty.buffer.ByteBuf encodeMessageWithOnlySingleByteFixedHeaderAndMessageId(io.netty.buffer.ByteBufAllocator,io.netty.handler.codec.mqtt.MqttMessage)",
                "io.netty.handler.codec.ReplayingDecoder:void <init>(java.lang.Object)",
                "io.netty.handler.codec.mqtt.MqttDecoder:io.netty.handler.codec.mqtt.MqttDecoder$Result decodeConnectionVariableHeader(io.netty.buffer.ByteBuf)",
                "io.netty.handler.codec.mqtt.MqttPublishMessage:io.netty.buffer.ByteBufHolder retainedDuplicate()",
                "io.netty.handler.codec.mqtt.MqttDecoder:void decode(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,java.util.List)",
                "io.netty.handler.codec.mqtt.MqttMessageFactory:io.netty.handler.codec.mqtt.MqttMessage newMessage(io.netty.handler.codec.mqtt.MqttFixedHeader,java.lang.Object,java.lang.Object)",
                "io.netty.handler.codec.mqtt.MqttEncoder$1:void <clinit>()",
                "io.netty.handler.codec.mqtt.MqttUnsubscribePayload:java.lang.String toString()",
                "io.netty.handler.codec.mqtt.MqttMessageBuilders$UnsubscribeBuilder:io.netty.handler.codec.mqtt.MqttUnsubscribeMessage build()",
                "io.netty.handler.codec.mqtt.MqttSubAckPayload:java.lang.String toString()",
                "io.netty.handler.codec.mqtt.MqttDecoder:io.netty.handler.codec.mqtt.MqttDecoder$Result decodePublishPayload(io.netty.buffer.ByteBuf,int)",
                "io.netty.handler.codec.mqtt.MqttPublishMessage:io.netty.handler.codec.mqtt.MqttPublishMessage retainedDuplicate()",
                "io.netty.handler.codec.mqtt.MqttDecoder:io.netty.handler.codec.mqtt.MqttDecoder$Result decodeSubackPayload(io.netty.buffer.ByteBuf,int)",
                "io.netty.util.AttributeKey:io.netty.util.AttributeKey valueOf(java.lang.String)",
                "io.netty.handler.codec.mqtt.MqttUnsubscribeMessage:void <init>(io.netty.handler.codec.mqtt.MqttFixedHeader,io.netty.handler.codec.mqtt.MqttMessageIdVariableHeader,io.netty.handler.codec.mqtt.MqttUnsubscribePayload)",
                "io.netty.handler.codec.mqtt.MqttEncoder:void encode(io.netty.channel.ChannelHandlerContext,java.lang.Object,java.util.List)",
                "io.netty.handler.codec.mqtt.MqttDecoder:io.netty.handler.codec.mqtt.MqttDecoder$Result decodePayload(io.netty.buffer.ByteBuf,io.netty.handler.codec.mqtt.MqttMessageType,int,java.lang.Object)",
                "io.netty.handler.codec.mqtt.MqttConnectPayload:java.lang.String toString()",
                "io.netty.handler.codec.mqtt.MqttPublishMessage:io.netty.handler.codec.mqtt.MqttPublishMessage touch()",
                "io.netty.handler.codec.mqtt.MqttMessage:void <init>(io.netty.handler.codec.mqtt.MqttFixedHeader,java.lang.Object)",
                "io.netty.handler.codec.mqtt.MqttQoS:io.netty.handler.codec.mqtt.MqttQoS valueOf(int)"
            ],
            "vul-called frequency": 200
        }
    }
}